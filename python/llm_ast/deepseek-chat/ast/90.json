{
    "type": "Program",
    "name": "Global",
    "range": [
        43,
        1166
    ],
    "children": [
        {
            "type": "ClassDecl",
            "name": "GetCurrentTimeBlock",
            "range": [
                43,
                49
            ],
            "children": [
                {
                    "type": "Inheritance",
                    "name": "Block",
                    "range": [
                        45,
                        47
                    ],
                    "children": [],
                    "content": "GetCurrentTimeBlock(Block"
                }
            ],
            "content": "\nclass GetCurrentTimeBlock(Block):"
        },
        {
            "type": "ClassDecl",
            "name": "Input",
            "range": [
                50,
                56
            ],
            "children": [
                {
                    "type": "Inheritance",
                    "name": "BlockSchema",
                    "range": [
                        52,
                        54
                    ],
                    "children": [],
                    "content": "Input(BlockSchema"
                }
            ],
            "content": "\nclass Input(BlockSchema):"
        },
        {
            "type": "VariableDecl",
            "name": "trigger",
            "range": [
                57,
                68
            ],
            "children": [
                {
                    "type": "TypeAnnotation",
                    "name": "str",
                    "range": [
                        58,
                        59
                    ],
                    "children": [],
                    "content": "trigger:"
                },
                {
                    "type": "Assignment",
                    "name": "=",
                    "range": [
                        60,
                        68
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "SchemaField",
                            "range": [
                                61,
                                68
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "description",
                                    "range": [
                                        64,
                                        66
                                    ],
                                    "children": [],
                                    "content": "\ndescription="
                                }
                            ],
                            "content": "=SchemaField(\ndescription=\"Trigger any data to output the current time\"\n"
                        }
                    ],
                    "content": "str=SchemaField(\ndescription=\"Trigger any data to output the current time\"\n"
                }
            ],
            "content": "\ntrigger:str=SchemaField(\ndescription=\"Trigger any data to output the current time\"\n"
        },
        {
            "type": "VariableDecl",
            "name": "format",
            "range": [
                70,
                85
            ],
            "children": [
                {
                    "type": "TypeAnnotation",
                    "name": "str",
                    "range": [
                        71,
                        72
                    ],
                    "children": [],
                    "content": "format:"
                },
                {
                    "type": "Assignment",
                    "name": "=",
                    "range": [
                        73,
                        85
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "SchemaField",
                            "range": [
                                74,
                                85
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "description",
                                    "range": [
                                        77,
                                        79
                                    ],
                                    "children": [],
                                    "content": "\ndescription="
                                },
                                {
                                    "type": "Argument",
                                    "name": "default",
                                    "range": [
                                        81,
                                        83
                                    ],
                                    "children": [],
                                    "content": ",default="
                                }
                            ],
                            "content": "=SchemaField(\ndescription=\"Format of the time to output\",default=\"%H:%M:%S\"\n"
                        }
                    ],
                    "content": "str=SchemaField(\ndescription=\"Format of the time to output\",default=\"%H:%M:%S\"\n"
                }
            ],
            "content": "\nformat:str=SchemaField(\ndescription=\"Format of the time to output\",default=\"%H:%M:%S\"\n"
        },
        {
            "type": "ClassDecl",
            "name": "Output",
            "range": [
                88,
                94
            ],
            "children": [
                {
                    "type": "Inheritance",
                    "name": "BlockSchema",
                    "range": [
                        90,
                        92
                    ],
                    "children": [],
                    "content": "Output(BlockSchema"
                }
            ],
            "content": "\nclass Output(BlockSchema):"
        },
        {
            "type": "VariableDecl",
            "name": "time",
            "range": [
                95,
                106
            ],
            "children": [
                {
                    "type": "TypeAnnotation",
                    "name": "str",
                    "range": [
                        96,
                        97
                    ],
                    "children": [],
                    "content": "time:"
                },
                {
                    "type": "Assignment",
                    "name": "=",
                    "range": [
                        98,
                        106
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "SchemaField",
                            "range": [
                                99,
                                106
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "description",
                                    "range": [
                                        102,
                                        104
                                    ],
                                    "children": [],
                                    "content": "\ndescription="
                                }
                            ],
                            "content": "=SchemaField(\ndescription=\"Current time in the specified format (default: %H:%M:%S)\"\n"
                        }
                    ],
                    "content": "str=SchemaField(\ndescription=\"Current time in the specified format (default: %H:%M:%S)\"\n"
                }
            ],
            "content": "\ntime:str=SchemaField(\ndescription=\"Current time in the specified format (default: %H:%M:%S)\"\n"
        },
        {
            "type": "FunctionDecl",
            "name": "__init__",
            "range": [
                109,
                219
            ],
            "children": [
                {
                    "type": "Parameter",
                    "name": "self",
                    "range": [
                        112,
                        113
                    ],
                    "children": [],
                    "content": "(self"
                },
                {
                    "type": "CallExpression",
                    "name": "super",
                    "range": [
                        116,
                        218
                    ],
                    "children": [
                        {
                            "type": "Argument",
                            "name": "id",
                            "range": [
                                123,
                                125
                            ],
                            "children": [],
                            "content": "\nid="
                        },
                        {
                            "type": "Argument",
                            "name": "description",
                            "range": [
                                128,
                                130
                            ],
                            "children": [],
                            "content": "\ndescription="
                        },
                        {
                            "type": "Argument",
                            "name": "categories",
                            "range": [
                                133,
                                139
                            ],
                            "children": [],
                            "content": "\ncategories={BlockCategory.TEXT"
                        },
                        {
                            "type": "Argument",
                            "name": "input_schema",
                            "range": [
                                142,
                                147
                            ],
                            "children": [],
                            "content": "\ninput_schema=GetCurrentTimeBlock.Input"
                        },
                        {
                            "type": "Argument",
                            "name": "output_schema",
                            "range": [
                                149,
                                154
                            ],
                            "children": [],
                            "content": "\noutput_schema=GetCurrentTimeBlock.Output"
                        },
                        {
                            "type": "Argument",
                            "name": "test_input",
                            "range": [
                                156,
                                178
                            ],
                            "children": [],
                            "content": "\ntest_input=[\n{\"trigger\":\"Hello\"},\n{\"trigger\":\"Hello\",\"format\":\"%H:%M\"},\n"
                        },
                        {
                            "type": "Argument",
                            "name": "test_output",
                            "range": [
                                181,
                                215
                            ],
                            "children": [],
                            "content": "\ntest_output=[\n(\"time\",lambda _:time.strftime(\"%H:%M:%S\")),\n(\"time\",lambda _:time.strftime(\"%H:%M\")),\n"
                        }
                    ],
                    "content": "\nsuper().__init__(\nid=\"a892b8d9-3e4e-4e9c-9c1e-75f8efcf1bfa\",\ndescription=\"This block outputs the current time.\",\ncategories={BlockCategory.TEXT},\ninput_schema=GetCurrentTimeBlock.Input,\noutput_schema=GetCurrentTimeBlock.Output,\ntest_input=[\n{\"trigger\":\"Hello\"},\n{\"trigger\":\"Hello\",\"format\":\"%H:%M\"},\n],\ntest_output=[\n(\"time\",lambda _:time.strftime(\"%H:%M:%S\")),\n(\"time\",lambda _:time.strftime(\"%H:%M\")),\n],\n"
                }
            ],
            "content": "\ndef __init__(self):\nsuper().__init__(\nid=\"a892b8d9-3e4e-4e9c-9c1e-75f8efcf1bfa\",\ndescription=\"This block outputs the current time.\",\ncategories={BlockCategory.TEXT},\ninput_schema=GetCurrentTimeBlock.Input,\noutput_schema=GetCurrentTimeBlock.Output,\ntest_input=[\n{\"trigger\":\"Hello\"},\n{\"trigger\":\"Hello\",\"format\":\"%H:%M\"},\n],\ntest_output=[\n(\"time\",lambda _:time.strftime(\"%H:%M:%S\")),\n(\"time\",lambda _:time.strftime(\"%H:%M\")),\n],\n)"
        },
        {
            "type": "FunctionDecl",
            "name": "run",
            "range": [
                221,
                255
            ],
            "children": [
                {
                    "type": "Parameter",
                    "name": "self",
                    "range": [
                        224,
                        225
                    ],
                    "children": [],
                    "content": "(self"
                },
                {
                    "type": "Parameter",
                    "name": "input_data",
                    "range": [
                        226,
                        228
                    ],
                    "children": [],
                    "content": ",input_data:"
                },
                {
                    "type": "Parameter",
                    "name": "kwargs",
                    "range": [
                        230,
                        233
                    ],
                    "children": [],
                    "content": ",**kwargs"
                },
                {
                    "type": "ReturnType",
                    "name": "BlockOutput",
                    "range": [
                        235,
                        236
                    ],
                    "children": [],
                    "content": "->"
                },
                {
                    "type": "Assignment",
                    "name": "=",
                    "range": [
                        239,
                        249
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "time.strftime",
                            "range": [
                                241,
                                248
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "input_data.format",
                                    "range": [
                                        245,
                                        247
                                    ],
                                    "children": [],
                                    "content": "(input_data."
                                }
                            ],
                            "content": "=time.strftime(input_data.format"
                        }
                    ],
                    "content": "\ncurrent_time=time.strftime(input_data.format)"
                },
                {
                    "type": "Yield",
                    "name": "yield",
                    "range": [
                        250,
                        254
                    ],
                    "children": [
                        {
                            "type": "Literal",
                            "name": "\"time\"",
                            "range": [
                                251,
                                251
                            ],
                            "children": [],
                            "content": "yield"
                        },
                        {
                            "type": "Identifier",
                            "name": "current_time",
                            "range": [
                                253,
                                253
                            ],
                            "children": [],
                            "content": ","
                        }
                    ],
                    "content": "\nyield \"time\",current_time"
                }
            ],
            "content": "\ndef run(self,input_data:Input,**kwargs)->BlockOutput:\ncurrent_time=time.strftime(input_data.format)\nyield \"time\",current_time\n"
        },
        {
            "type": "ClassDecl",
            "name": "GetCurrentDateBlock",
            "range": [
                256,
                262
            ],
            "children": [],
            "content": "\n\nclass GetCurrentDateBlock(Block)"
        },
        {
            "type": "ClassDecl",
            "name": "Input",
            "range": [
                263,
                269
            ],
            "children": [],
            "content": ":\nclass Input(BlockSchema)"
        },
        {
            "type": "VariableDecl",
            "name": "trigger",
            "range": [
                270,
                281
            ],
            "children": [
                {
                    "type": "TypeAnnotation",
                    "name": "str",
                    "range": [
                        272,
                        272
                    ],
                    "children": [],
                    "content": "trigger"
                },
                {
                    "type": "CallExpression",
                    "name": "SchemaField",
                    "range": [
                        274,
                        281
                    ],
                    "children": [
                        {
                            "type": "Argument",
                            "name": "description",
                            "range": [
                                277,
                                279
                            ],
                            "children": [],
                            "content": "(\ndescription"
                        }
                    ],
                    "content": "str=SchemaField(\ndescription=\"Trigger any data to output the current date\""
                }
            ],
            "content": ":\ntrigger:str=SchemaField(\ndescription=\"Trigger any data to output the current date\""
        },
        {
            "type": "VariableDecl",
            "name": "offset",
            "range": [
                283,
                310
            ],
            "children": [
                {
                    "type": "TypeAnnotation",
                    "name": "Union[int, str]",
                    "range": [
                        285,
                        290
                    ],
                    "children": [],
                    "content": "offset:Union[int,"
                },
                {
                    "type": "CallExpression",
                    "name": "SchemaField",
                    "range": [
                        292,
                        310
                    ],
                    "children": [
                        {
                            "type": "Argument",
                            "name": "title",
                            "range": [
                                295,
                                297
                            ],
                            "children": [],
                            "content": "(\ntitle"
                        },
                        {
                            "type": "Argument",
                            "name": "description",
                            "range": [
                                300,
                                302
                            ],
                            "children": [],
                            "content": ",\ndescription"
                        },
                        {
                            "type": "Argument",
                            "name": "default",
                            "range": [
                                305,
                                307
                            ],
                            "children": [],
                            "content": ",\ndefault"
                        }
                    ],
                    "content": "]=SchemaField(\ntitle=\"Days Offset\",\ndescription=\"Offset in days from the current date\",\ndefault=0,"
                }
            ],
            "content": ")\noffset:Union[int,str]=SchemaField(\ntitle=\"Days Offset\",\ndescription=\"Offset in days from the current date\",\ndefault=0,"
        },
        {
            "type": "VariableDecl",
            "name": "format",
            "range": [
                312,
                327
            ],
            "children": [
                {
                    "type": "TypeAnnotation",
                    "name": "str",
                    "range": [
                        314,
                        314
                    ],
                    "children": [],
                    "content": "format"
                },
                {
                    "type": "CallExpression",
                    "name": "SchemaField",
                    "range": [
                        316,
                        327
                    ],
                    "children": [
                        {
                            "type": "Argument",
                            "name": "description",
                            "range": [
                                319,
                                321
                            ],
                            "children": [],
                            "content": "(\ndescription"
                        },
                        {
                            "type": "Argument",
                            "name": "default",
                            "range": [
                                323,
                                325
                            ],
                            "children": [],
                            "content": "\"Format of the date to output\",default"
                        }
                    ],
                    "content": "str=SchemaField(\ndescription=\"Format of the date to output\",default=\"%Y-%m-%d\""
                }
            ],
            "content": ")\nformat:str=SchemaField(\ndescription=\"Format of the date to output\",default=\"%Y-%m-%d\""
        },
        {
            "type": "ClassDecl",
            "name": "Output",
            "range": [
                330,
                336
            ],
            "children": [],
            "content": "\n\nclass Output(BlockSchema)"
        },
        {
            "type": "VariableDecl",
            "name": "date",
            "range": [
                337,
                348
            ],
            "children": [
                {
                    "type": "TypeAnnotation",
                    "name": "str",
                    "range": [
                        339,
                        339
                    ],
                    "children": [],
                    "content": "date"
                },
                {
                    "type": "CallExpression",
                    "name": "SchemaField",
                    "range": [
                        341,
                        348
                    ],
                    "children": [
                        {
                            "type": "Argument",
                            "name": "description",
                            "range": [
                                344,
                                346
                            ],
                            "children": [],
                            "content": "(\ndescription"
                        }
                    ],
                    "content": "str=SchemaField(\ndescription=\"Current date in the specified format (default: YYYY-MM-DD)\""
                }
            ],
            "content": ":\ndate:str=SchemaField(\ndescription=\"Current date in the specified format (default: YYYY-MM-DD)\""
        },
        {
            "type": "FunctionDecl",
            "name": "__init__",
            "range": [
                351,
                536
            ],
            "children": [
                {
                    "type": "CallExpression",
                    "name": "super",
                    "range": [
                        358,
                        364
                    ],
                    "children": [],
                    "content": ":\nsuper().__init__"
                },
                {
                    "type": "Literal",
                    "name": "\"b29c1b50-5d0e-4d9f-8f9d-1b0e6fcbf0b1\"",
                    "range": [
                        367,
                        367
                    ],
                    "children": [],
                    "content": "id"
                },
                {
                    "type": "Literal",
                    "name": "\"This block outputs the current date with an optional offset.\"",
                    "range": [
                        372,
                        372
                    ],
                    "children": [],
                    "content": "description"
                },
                {
                    "type": "ObjectLiteral",
                    "name": "{BlockCategory.TEXT}",
                    "range": [
                        377,
                        381
                    ],
                    "children": [],
                    "content": "categories={BlockCategory."
                },
                {
                    "type": "MemberExpression",
                    "name": "GetCurrentDateBlock.Input",
                    "range": [
                        386,
                        389
                    ],
                    "children": [],
                    "content": "input_schema=GetCurrentDateBlock."
                },
                {
                    "type": "MemberExpression",
                    "name": "GetCurrentDateBlock.Output",
                    "range": [
                        393,
                        396
                    ],
                    "children": [],
                    "content": "output_schema=GetCurrentDateBlock."
                },
                {
                    "type": "ArrayLiteral",
                    "name": "[{...}, {...}]",
                    "range": [
                        400,
                        428
                    ],
                    "children": [],
                    "content": "test_input=[\n{\"trigger\":\"Hello\",\"offset\":\"7\"},\n{\"trigger\":\"Hello\",\"offset\":\"7\",\"format\":\"%m/%d/%Y\"},"
                },
                {
                    "type": "ArrayLiteral",
                    "name": "[lambda t: abs(datetime.now() - datetime.strptime(t, \"%Y-%m-%d\")) < timedelta(days=8), lambda t: abs(datetime.now() - datetime.strptime(t, \"%m/%d/%Y\")) < timedelta(days=8)]",
                    "range": [
                        433,
                        532
                    ],
                    "children": [],
                    "content": "test_output=[\n(\n\"date\",\nlambda t:abs(datetime.now()-datetime.strptime(t,\"%Y-%m-%d\"))\n<timedelta(days=8),#7days difference+1day error margin.\n),\n(\n\"date\",\nlambda t:abs(datetime.now()-datetime.strptime(t,\"%m/%d/%Y\"))\n<timedelta(days=8),\n#7days difference+1day error margin.\n),"
                }
            ],
            "content": "\n\ndef __init__(self):\nsuper().__init__(\nid=\"b29c1b50-5d0e-4d9f-8f9d-1b0e6fcbf0b1\",\ndescription=\"This block outputs the current date with an optional offset.\",\ncategories={BlockCategory.TEXT},\ninput_schema=GetCurrentDateBlock.Input,\noutput_schema=GetCurrentDateBlock.Output,\ntest_input=[\n{\"trigger\":\"Hello\",\"offset\":\"7\"},\n{\"trigger\":\"Hello\",\"offset\":\"7\",\"format\":\"%m/%d/%Y\"},\n],\ntest_output=[\n(\n\"date\",\nlambda t:abs(datetime.now()-datetime.strptime(t,\"%Y-%m-%d\"))\n<timedelta(days=8),#7days difference+1day error margin.\n),\n(\n\"date\",\nlambda t:abs(datetime.now()-datetime.strptime(t,\"%m/%d/%Y\"))\n<timedelta(days=8),\n#7days difference+1day error margin.\n),\n],\n"
        },
        {
            "type": "FunctionDecl",
            "name": "run",
            "range": [
                538,
                603
            ],
            "children": [
                {
                    "type": "TryStatement",
                    "name": "try",
                    "range": [
                        556,
                        575
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "int",
                            "range": [
                                561,
                                566
                            ],
                            "children": [
                                {
                                    "type": "MemberExpression",
                                    "name": "input_data.offset",
                                    "range": [
                                        563,
                                        565
                                    ],
                                    "children": [],
                                    "content": "int(input_data"
                                }
                            ],
                            "content": "offset=int(input_data."
                        },
                        {
                            "type": "Literal",
                            "name": "0",
                            "range": [
                                574,
                                574
                            ],
                            "children": [],
                            "content": "offset"
                        }
                    ],
                    "content": ":\ntry:\noffset=int(input_data.offset)\nexcept ValueError:\noffset="
                },
                {
                    "type": "BinaryExpression",
                    "name": "-",
                    "range": [
                        583,
                        589
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "datetime.now",
                            "range": [
                                578,
                                582
                            ],
                            "children": [],
                            "content": "current_date=datetime.now"
                        },
                        {
                            "type": "CallExpression",
                            "name": "timedelta",
                            "range": [
                                584,
                                589
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "days",
                                    "range": [
                                        586,
                                        588
                                    ],
                                    "children": [],
                                    "content": "timedelta(days"
                                }
                            ],
                            "content": ")-timedelta(days="
                        }
                    ],
                    "content": "()-timedelta(days="
                },
                {
                    "type": "YieldStatement",
                    "name": "yield",
                    "range": [
                        591,
                        602
                    ],
                    "children": [
                        {
                            "type": "Literal",
                            "name": "\"date\"",
                            "range": [
                                592,
                                592
                            ],
                            "children": [],
                            "content": "\n"
                        },
                        {
                            "type": "CallExpression",
                            "name": "current_date.strftime",
                            "range": [
                                595,
                                601
                            ],
                            "children": [
                                {
                                    "type": "MemberExpression",
                                    "name": "input_data.format",
                                    "range": [
                                        598,
                                        600
                                    ],
                                    "children": [],
                                    "content": "strftime(input_data"
                                }
                            ],
                            "content": ",current_date.strftime(input_data."
                        }
                    ],
                    "content": ")\nyield \"date\",current_date.strftime(input_data.format"
                }
            ],
            "content": "\n\ndef run(self,input_data:Input,**kwargs)->BlockOutput:\ntry:\noffset=int(input_data.offset)\nexcept ValueError:\noffset=0\ncurrent_date=datetime.now()-timedelta(days=offset)\nyield \"date\",current_date.strftime(input_data.format)"
        },
        {
            "type": "ClassDecl",
            "name": "GetCurrentDateAndTimeBlock",
            "range": [
                604,
                610
            ],
            "children": [
                {
                    "type": "Inheritance",
                    "name": "Block",
                    "range": [
                        606,
                        608
                    ],
                    "children": [],
                    "content": "\nclass GetCurrentDateAndTimeBlock"
                }
            ],
            "content": "\n\n\nclass GetCurrentDateAndTimeBlock(Block"
        },
        {
            "type": "ClassDecl",
            "name": "Input",
            "range": [
                611,
                617
            ],
            "children": [
                {
                    "type": "Inheritance",
                    "name": "BlockSchema",
                    "range": [
                        613,
                        615
                    ],
                    "children": [],
                    "content": "\nclass Input"
                }
            ],
            "content": "):\nclass Input(BlockSchema"
        },
        {
            "type": "VariableDecl",
            "name": "trigger",
            "range": [
                618,
                630
            ],
            "children": [
                {
                    "type": "TypeAnnotation",
                    "name": "str",
                    "range": [
                        620,
                        620
                    ],
                    "children": [],
                    "content": "\n"
                },
                {
                    "type": "Assignment",
                    "name": "=",
                    "range": [
                        621,
                        621
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "SchemaField",
                            "range": [
                                622,
                                629
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "description",
                                    "range": [
                                        625,
                                        627
                                    ],
                                    "children": [],
                                    "content": "SchemaField(\n"
                                }
                            ],
                            "content": ":str=SchemaField(\ndescription="
                        }
                    ],
                    "content": "trigger"
                }
            ],
            "content": "):\ntrigger:str=SchemaField(\ndescription=\"Trigger any data to output the current date and time\""
        },
        {
            "type": "VariableDecl",
            "name": "format",
            "range": [
                631,
                649
            ],
            "children": [
                {
                    "type": "TypeAnnotation",
                    "name": "str",
                    "range": [
                        633,
                        633
                    ],
                    "children": [],
                    "content": "\n"
                },
                {
                    "type": "Assignment",
                    "name": "=",
                    "range": [
                        634,
                        634
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "SchemaField",
                            "range": [
                                635,
                                648
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "description",
                                    "range": [
                                        638,
                                        640
                                    ],
                                    "children": [],
                                    "content": "SchemaField(\n"
                                },
                                {
                                    "type": "Argument",
                                    "name": "default",
                                    "range": [
                                        643,
                                        645
                                    ],
                                    "children": [],
                                    "content": "\"Format of the date and time to output\",\n"
                                }
                            ],
                            "content": ":str=SchemaField(\ndescription=\"Format of the date and time to output\",\ndefault=\"%Y-%m-%d %H:%M:%S\""
                        }
                    ],
                    "content": "format"
                }
            ],
            "content": "\n)\nformat:str=SchemaField(\ndescription=\"Format of the date and time to output\",\ndefault=\"%Y-%m-%d %H:%M:%S\","
        },
        {
            "type": "ClassDecl",
            "name": "Output",
            "range": [
                651,
                657
            ],
            "children": [
                {
                    "type": "Inheritance",
                    "name": "BlockSchema",
                    "range": [
                        653,
                        655
                    ],
                    "children": [],
                    "content": "\nclass Output"
                }
            ],
            "content": ")\n\nclass Output(BlockSchema"
        },
        {
            "type": "VariableDecl",
            "name": "date_time",
            "range": [
                658,
                670
            ],
            "children": [
                {
                    "type": "TypeAnnotation",
                    "name": "str",
                    "range": [
                        660,
                        660
                    ],
                    "children": [],
                    "content": "\n"
                },
                {
                    "type": "Assignment",
                    "name": "=",
                    "range": [
                        661,
                        661
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "SchemaField",
                            "range": [
                                662,
                                669
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "description",
                                    "range": [
                                        665,
                                        667
                                    ],
                                    "children": [],
                                    "content": "SchemaField(\n"
                                }
                            ],
                            "content": ":str=SchemaField(\ndescription="
                        }
                    ],
                    "content": "date_time"
                }
            ],
            "content": "):\ndate_time:str=SchemaField(\ndescription=\"Current date and time in the specified format (default: YYYY-MM-DD HH:MM:SS)\""
        },
        {
            "type": "FunctionDecl",
            "name": "__init__",
            "range": [
                672,
                787
            ],
            "children": [
                {
                    "type": "Parameter",
                    "name": "self",
                    "range": [
                        675,
                        675
                    ],
                    "children": [],
                    "content": "def"
                },
                {
                    "type": "CallExpression",
                    "name": "super",
                    "range": [
                        679,
                        685
                    ],
                    "children": [],
                    "content": "):\nsuper()."
                },
                {
                    "type": "Assignment",
                    "name": "=",
                    "range": [
                        687,
                        687
                    ],
                    "children": [
                        {
                            "type": "Literal",
                            "name": "\"716a67b3-6760-42e7-86dc-18645c6e00fc\"",
                            "range": [
                                688,
                                688
                            ],
                            "children": [],
                            "content": "\n"
                        }
                    ],
                    "content": "("
                },
                {
                    "type": "Assignment",
                    "name": "=",
                    "range": [
                        692,
                        692
                    ],
                    "children": [
                        {
                            "type": "Literal",
                            "name": "\"This block outputs the current date and time.\"",
                            "range": [
                                693,
                                693
                            ],
                            "children": [],
                            "content": "\n"
                        }
                    ],
                    "content": ","
                },
                {
                    "type": "Assignment",
                    "name": "=",
                    "range": [
                        697,
                        697
                    ],
                    "children": [
                        {
                            "type": "ObjectLiteral",
                            "name": "{BlockCategory.TEXT}",
                            "range": [
                                698,
                                702
                            ],
                            "children": [],
                            "content": "\ncategories={BlockCategory"
                        }
                    ],
                    "content": ","
                },
                {
                    "type": "Assignment",
                    "name": "=",
                    "range": [
                        706,
                        706
                    ],
                    "children": [
                        {
                            "type": "MemberExpression",
                            "name": "GetCurrentDateAndTimeBlock.Input",
                            "range": [
                                707,
                                710
                            ],
                            "children": [],
                            "content": "\ninput_schema=GetCurrentDateAndTimeBlock"
                        }
                    ],
                    "content": ","
                },
                {
                    "type": "Assignment",
                    "name": "=",
                    "range": [
                        713,
                        713
                    ],
                    "children": [
                        {
                            "type": "MemberExpression",
                            "name": "GetCurrentDateAndTimeBlock.Output",
                            "range": [
                                714,
                                717
                            ],
                            "children": [],
                            "content": "\noutput_schema=GetCurrentDateAndTimeBlock"
                        }
                    ],
                    "content": ","
                },
                {
                    "type": "Assignment",
                    "name": "=",
                    "range": [
                        720,
                        720
                    ],
                    "children": [
                        {
                            "type": "ArrayLiteral",
                            "name": "[{\"trigger\":\"Hello\"}]",
                            "range": [
                                721,
                                730
                            ],
                            "children": [],
                            "content": "\ntest_input=[\n{\"trigger\":\"Hello\"}"
                        }
                    ],
                    "content": ","
                },
                {
                    "type": "Assignment",
                    "name": "=",
                    "range": [
                        734,
                        734
                    ],
                    "children": [
                        {
                            "type": "ArrayLiteral",
                            "name": "[(\"date_time\",lambda t: abs(datetime.now() - datetime.strptime(t, \"%Y-%m-%d %H:%M:%S\")) < timedelta(seconds=10))]",
                            "range": [
                                735,
                                783
                            ],
                            "children": [],
                            "content": "\ntest_output=[\n(\n\"date_time\",\nlambda t:abs(\ndatetime.now()-datetime.strptime(t,\"%Y-%m-%d %H:%M:%S\")\n)\n<timedelta(seconds=10),#10seconds error margin.\n)"
                        }
                    ],
                    "content": ","
                }
            ],
            "content": ")\n\ndef __init__(self):\nsuper().__init__(\nid=\"716a67b3-6760-42e7-86dc-18645c6e00fc\",\ndescription=\"This block outputs the current date and time.\",\ncategories={BlockCategory.TEXT},\ninput_schema=GetCurrentDateAndTimeBlock.Input,\noutput_schema=GetCurrentDateAndTimeBlock.Output,\ntest_input=[\n{\"trigger\":\"Hello\"},\n],\ntest_output=[\n(\n\"date_time\",\nlambda t:abs(\ndatetime.now()-datetime.strptime(t,\"%Y-%m-%d %H:%M:%S\")\n)\n<timedelta(seconds=10),#10seconds error margin.\n),\n],"
        },
        {
            "type": "FunctionDecl",
            "name": "run",
            "range": [
                789,
                823
            ],
            "children": [
                {
                    "type": "Parameter",
                    "name": "self",
                    "range": [
                        792,
                        792
                    ],
                    "children": [],
                    "content": "def"
                },
                {
                    "type": "Parameter",
                    "name": "input_data",
                    "range": [
                        794,
                        794
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "Input",
                            "range": [
                                796,
                                796
                            ],
                            "children": [],
                            "content": ","
                        }
                    ],
                    "content": "("
                },
                {
                    "type": "Parameter",
                    "name": "kwargs",
                    "range": [
                        800,
                        800
                    ],
                    "children": [],
                    "content": ","
                },
                {
                    "type": "ReturnType",
                    "name": "BlockOutput",
                    "range": [
                        804,
                        804
                    ],
                    "children": [],
                    "content": ")"
                },
                {
                    "type": "Assignment",
                    "name": "=",
                    "range": [
                        808,
                        808
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "time.strftime",
                            "range": [
                                809,
                                816
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "input_data.format",
                                    "range": [
                                        813,
                                        815
                                    ],
                                    "children": [],
                                    "content": ".strftime("
                                }
                            ],
                            "content": "\ncurrent_date_time=time.strftime(input_data"
                        }
                    ],
                    "content": ":"
                },
                {
                    "type": "Yield",
                    "name": "yield",
                    "range": [
                        818,
                        818
                    ],
                    "children": [
                        {
                            "type": "Literal",
                            "name": "\"date_time\"",
                            "range": [
                                819,
                                819
                            ],
                            "children": [],
                            "content": ")"
                        },
                        {
                            "type": "Identifier",
                            "name": "current_date_time",
                            "range": [
                                821,
                                821
                            ],
                            "children": [],
                            "content": "yield"
                        }
                    ],
                    "content": "format"
                }
            ],
            "content": ")\n\ndef run(self,input_data:Input,**kwargs)->BlockOutput:\ncurrent_date_time=time.strftime(input_data.format)\nyield \"date_time\","
        },
        {
            "type": "ClassDecl",
            "name": "CountdownTimerBlock",
            "range": [
                824,
                830
            ],
            "children": [
                {
                    "type": "Inheritance",
                    "name": "Block",
                    "range": [
                        826,
                        828
                    ],
                    "children": [],
                    "content": "\n\nclass"
                }
            ],
            "content": "current_date_time\n\n\nclass CountdownTimerBlock("
        },
        {
            "type": "ClassDecl",
            "name": "Input",
            "range": [
                831,
                837
            ],
            "children": [
                {
                    "type": "Inheritance",
                    "name": "BlockSchema",
                    "range": [
                        833,
                        835
                    ],
                    "children": [],
                    "content": ":\nclass"
                },
                {
                    "type": "FieldDecl",
                    "name": "input_message",
                    "range": [
                        838,
                        860
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "Any",
                            "range": [
                                839,
                                840
                            ],
                            "children": [],
                            "content": "):"
                        },
                        {
                            "type": "Assignment",
                            "name": "SchemaField",
                            "range": [
                                841,
                                860
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "advanced",
                                    "range": [
                                        845,
                                        847
                                    ],
                                    "children": [],
                                    "content": "=SchemaField("
                                },
                                {
                                    "type": "Argument",
                                    "name": "description",
                                    "range": [
                                        850,
                                        852
                                    ],
                                    "children": [],
                                    "content": "=False,"
                                },
                                {
                                    "type": "Argument",
                                    "name": "default",
                                    "range": [
                                        855,
                                        857
                                    ],
                                    "children": [],
                                    "content": "=\"Message to output after the timer finishes\","
                                }
                            ],
                            "content": "\ninput_message:Any=SchemaField(\nadvanced=False,\ndescription=\"Message to output after the timer finishes\",\ndefault="
                        }
                    ],
                    "content": "BlockSchema):\ninput_message:Any=SchemaField(\nadvanced=False,\ndescription=\"Message to output after the timer finishes\",\ndefault="
                },
                {
                    "type": "FieldDecl",
                    "name": "seconds",
                    "range": [
                        862,
                        886
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "Union[int, str]",
                            "range": [
                                863,
                                869
                            ],
                            "children": [],
                            "content": "\n)\nseconds:Union["
                        },
                        {
                            "type": "Assignment",
                            "name": "SchemaField",
                            "range": [
                                870,
                                886
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "advanced",
                                    "range": [
                                        874,
                                        876
                                    ],
                                    "children": [],
                                    "content": "=SchemaField("
                                },
                                {
                                    "type": "Argument",
                                    "name": "description",
                                    "range": [
                                        879,
                                        881
                                    ],
                                    "children": [],
                                    "content": "=False,"
                                },
                                {
                                    "type": "Argument",
                                    "name": "default",
                                    "range": [
                                        882,
                                        884
                                    ],
                                    "children": [],
                                    "content": "description=\"Duration in seconds\""
                                }
                            ],
                            "content": "int,str]=SchemaField(\nadvanced=False,description=\"Duration in seconds\",default"
                        }
                    ],
                    "content": ",\n)\nseconds:Union[int,str]=SchemaField(\nadvanced=False,description=\"Duration in seconds\",default"
                },
                {
                    "type": "FieldDecl",
                    "name": "minutes",
                    "range": [
                        888,
                        912
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "Union[int, str]",
                            "range": [
                                889,
                                895
                            ],
                            "children": [],
                            "content": "\n)\nminutes:Union["
                        },
                        {
                            "type": "Assignment",
                            "name": "SchemaField",
                            "range": [
                                896,
                                912
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "advanced",
                                    "range": [
                                        900,
                                        902
                                    ],
                                    "children": [],
                                    "content": "=SchemaField("
                                },
                                {
                                    "type": "Argument",
                                    "name": "description",
                                    "range": [
                                        905,
                                        907
                                    ],
                                    "children": [],
                                    "content": "=False,"
                                },
                                {
                                    "type": "Argument",
                                    "name": "default",
                                    "range": [
                                        908,
                                        910
                                    ],
                                    "children": [],
                                    "content": "description=\"Duration in minutes\""
                                }
                            ],
                            "content": "int,str]=SchemaField(\nadvanced=False,description=\"Duration in minutes\",default"
                        }
                    ],
                    "content": "0\n)\nminutes:Union[int,str]=SchemaField(\nadvanced=False,description=\"Duration in minutes\",default"
                },
                {
                    "type": "FieldDecl",
                    "name": "hours",
                    "range": [
                        914,
                        938
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "Union[int, str]",
                            "range": [
                                915,
                                921
                            ],
                            "children": [],
                            "content": "\n)\nhours:Union["
                        },
                        {
                            "type": "Assignment",
                            "name": "SchemaField",
                            "range": [
                                922,
                                938
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "advanced",
                                    "range": [
                                        926,
                                        928
                                    ],
                                    "children": [],
                                    "content": "=SchemaField("
                                },
                                {
                                    "type": "Argument",
                                    "name": "description",
                                    "range": [
                                        930,
                                        932
                                    ],
                                    "children": [],
                                    "content": "advanced=False"
                                },
                                {
                                    "type": "Argument",
                                    "name": "default",
                                    "range": [
                                        934,
                                        936
                                    ],
                                    "children": [],
                                    "content": "description=\"Duration in hours\""
                                }
                            ],
                            "content": "int,str]=SchemaField(\nadvanced=False,description=\"Duration in hours\",default"
                        }
                    ],
                    "content": "0\n)\nhours:Union[int,str]=SchemaField(\nadvanced=False,description=\"Duration in hours\",default"
                },
                {
                    "type": "FieldDecl",
                    "name": "days",
                    "range": [
                        940,
                        964
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "Union[int, str]",
                            "range": [
                                941,
                                947
                            ],
                            "children": [],
                            "content": "\n)\ndays:Union["
                        },
                        {
                            "type": "Assignment",
                            "name": "SchemaField",
                            "range": [
                                948,
                                964
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "advanced",
                                    "range": [
                                        952,
                                        954
                                    ],
                                    "children": [],
                                    "content": "=SchemaField("
                                },
                                {
                                    "type": "Argument",
                                    "name": "description",
                                    "range": [
                                        956,
                                        958
                                    ],
                                    "children": [],
                                    "content": "advanced=False"
                                },
                                {
                                    "type": "Argument",
                                    "name": "default",
                                    "range": [
                                        960,
                                        962
                                    ],
                                    "children": [],
                                    "content": "description=\"Duration in days\""
                                }
                            ],
                            "content": "int,str]=SchemaField(\nadvanced=False,description=\"Duration in days\",default"
                        }
                    ],
                    "content": "0\n)\ndays:Union[int,str]=SchemaField(\nadvanced=False,description=\"Duration in days\",default"
                }
            ],
            "content": "Block):\nclass Input("
        },
        {
            "type": "ClassDecl",
            "name": "Output",
            "range": [
                967,
                973
            ],
            "children": [
                {
                    "type": "Inheritance",
                    "name": "BlockSchema",
                    "range": [
                        969,
                        971
                    ],
                    "children": [],
                    "content": "\n\nclass"
                },
                {
                    "type": "FieldDecl",
                    "name": "output_message",
                    "range": [
                        974,
                        985
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "Any",
                            "range": [
                                975,
                                976
                            ],
                            "children": [],
                            "content": "):"
                        },
                        {
                            "type": "Assignment",
                            "name": "SchemaField",
                            "range": [
                                977,
                                985
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "description",
                                    "range": [
                                        981,
                                        983
                                    ],
                                    "children": [],
                                    "content": "=SchemaField("
                                }
                            ],
                            "content": "\noutput_message:Any=SchemaField(\ndescription"
                        }
                    ],
                    "content": "BlockSchema):\noutput_message:Any=SchemaField(\ndescription"
                }
            ],
            "content": "\n)\n\nclass Output("
        },
        {
            "type": "FunctionDecl",
            "name": "__init__",
            "range": [
                988,
                1078
            ],
            "children": [
                {
                    "type": "Parameter",
                    "name": "self",
                    "range": [
                        991,
                        992
                    ],
                    "children": [],
                    "content": "\ndef"
                },
                {
                    "type": "SuperCall",
                    "name": "super",
                    "range": [
                        995,
                        1000
                    ],
                    "children": [],
                    "content": "self):\nsuper("
                },
                {
                    "type": "Assignment",
                    "name": "id",
                    "range": [
                        1002,
                        1004
                    ],
                    "children": [],
                    "content": ".__init__("
                },
                {
                    "type": "Assignment",
                    "name": "description",
                    "range": [
                        1007,
                        1009
                    ],
                    "children": [],
                    "content": "=\"d67a9c52-5e4e-11e2-bcfd-0800200c9a71\","
                },
                {
                    "type": "Assignment",
                    "name": "categories",
                    "range": [
                        1012,
                        1018
                    ],
                    "children": [],
                    "content": "=\"This block triggers after a specified duration.\",\ncategories={"
                },
                {
                    "type": "Assignment",
                    "name": "input_schema",
                    "range": [
                        1021,
                        1025
                    ],
                    "children": [],
                    "content": "TEXT},\ninput_schema"
                },
                {
                    "type": "Assignment",
                    "name": "output_schema",
                    "range": [
                        1028,
                        1032
                    ],
                    "children": [],
                    "content": ".Input,\noutput_schema"
                },
                {
                    "type": "Assignment",
                    "name": "test_input",
                    "range": [
                        1035,
                        1053
                    ],
                    "children": [],
                    "content": ".Output,\ntest_input=[\n{\"seconds\":1},\n{\"input_message\":\"Custom message\""
                },
                {
                    "type": "Assignment",
                    "name": "test_output",
                    "range": [
                        1056,
                        1074
                    ],
                    "children": [],
                    "content": "\n],\ntest_output=[\n(\"output_message\",\"timer finished\"),\n(\"output_message\",\"Custom message\""
                }
            ],
            "content": "\n)\n\ndef __init__(self):\nsuper().__init__(\nid=\"d67a9c52-5e4e-11e2-bcfd-0800200c9a71\",\ndescription=\"This block triggers after a specified duration.\",\ncategories={BlockCategory.TEXT},\ninput_schema=CountdownTimerBlock.Input,\noutput_schema=CountdownTimerBlock.Output,\ntest_input=[\n{\"seconds\":1},\n{\"input_message\":\"Custom message\"},\n],\ntest_output=[\n(\"output_message\",\"timer finished\"),\n(\"output_message\",\"Custom message\"),\n]"
        },
        {
            "type": "FunctionDecl",
            "name": "run",
            "range": [
                1080,
                1166
            ],
            "children": [
                {
                    "type": "Parameter",
                    "name": "self",
                    "range": [
                        1083,
                        1084
                    ],
                    "children": [],
                    "content": "\ndef"
                },
                {
                    "type": "Parameter",
                    "name": "input_data",
                    "range": [
                        1085,
                        1087
                    ],
                    "children": [],
                    "content": "run(self"
                },
                {
                    "type": "Parameter",
                    "name": "kwargs",
                    "range": [
                        1089,
                        1091
                    ],
                    "children": [],
                    "content": "input_data:Input"
                },
                {
                    "type": "ReturnType",
                    "name": "BlockOutput",
                    "range": [
                        1093,
                        1095
                    ],
                    "children": [],
                    "content": "**kwargs"
                },
                {
                    "type": "Assignment",
                    "name": "seconds",
                    "range": [
                        1098,
                        1105
                    ],
                    "children": [],
                    "content": ">BlockOutput:\nseconds=int("
                },
                {
                    "type": "Assignment",
                    "name": "minutes",
                    "range": [
                        1107,
                        1114
                    ],
                    "children": [],
                    "content": ".seconds)\nminutes=int("
                },
                {
                    "type": "Assignment",
                    "name": "hours",
                    "range": [
                        1116,
                        1123
                    ],
                    "children": [],
                    "content": ".minutes)\nhours=int("
                },
                {
                    "type": "Assignment",
                    "name": "days",
                    "range": [
                        1125,
                        1132
                    ],
                    "children": [],
                    "content": ".hours)\ndays=int("
                },
                {
                    "type": "Assignment",
                    "name": "total_seconds",
                    "range": [
                        1135,
                        1149
                    ],
                    "children": [],
                    "content": "days)\n\ntotal_seconds=seconds+minutes*60+hours*3600"
                },
                {
                    "type": "CallExpression",
                    "name": "time.sleep",
                    "range": [
                        1152,
                        1157
                    ],
                    "children": [],
                    "content": "*86400\n\ntime."
                },
                {
                    "type": "Yield",
                    "name": "yield",
                    "range": [
                        1159,
                        1165
                    ],
                    "children": [],
                    "content": "(total_seconds)\nyield \"output_message\","
                }
            ],
            "content": "\n)\n\ndef run(self,input_data:Input,**kwargs)->BlockOutput:\nseconds=int(input_data.seconds)\nminutes=int(input_data.minutes)\nhours=int(input_data.hours)\ndays=int(input_data.days)\n\ntotal_seconds=seconds+minutes*60+hours*3600+days*86400\n\ntime.sleep(total_seconds)\nyield \"output_message\",input_data"
        }
    ],
    "content": "\nclass GetCurrentTimeBlock(Block):\nclass Input(BlockSchema):\ntrigger:str=SchemaField(\ndescription=\"Trigger any data to output the current time\"\n)\nformat:str=SchemaField(\ndescription=\"Format of the time to output\",default=\"%H:%M:%S\"\n)\n\nclass Output(BlockSchema):\ntime:str=SchemaField(\ndescription=\"Current time in the specified format (default: %H:%M:%S)\"\n)\n\ndef __init__(self):\nsuper().__init__(\nid=\"a892b8d9-3e4e-4e9c-9c1e-75f8efcf1bfa\",\ndescription=\"This block outputs the current time.\",\ncategories={BlockCategory.TEXT},\ninput_schema=GetCurrentTimeBlock.Input,\noutput_schema=GetCurrentTimeBlock.Output,\ntest_input=[\n{\"trigger\":\"Hello\"},\n{\"trigger\":\"Hello\",\"format\":\"%H:%M\"},\n],\ntest_output=[\n(\"time\",lambda _:time.strftime(\"%H:%M:%S\")),\n(\"time\",lambda _:time.strftime(\"%H:%M\")),\n],\n)\n\ndef run(self,input_data:Input,**kwargs)->BlockOutput:\ncurrent_time=time.strftime(input_data.format)\nyield \"time\",current_time\n\n\nclass GetCurrentDateBlock(Block):\nclass Input(BlockSchema):\ntrigger:str=SchemaField(\ndescription=\"Trigger any data to output the current date\"\n)\noffset:Union[int,str]=SchemaField(\ntitle=\"Days Offset\",\ndescription=\"Offset in days from the current date\",\ndefault=0,\n)\nformat:str=SchemaField(\ndescription=\"Format of the date to output\",default=\"%Y-%m-%d\"\n)\n\nclass Output(BlockSchema):\ndate:str=SchemaField(\ndescription=\"Current date in the specified format (default: YYYY-MM-DD)\"\n)\n\ndef __init__(self):\nsuper().__init__(\nid=\"b29c1b50-5d0e-4d9f-8f9d-1b0e6fcbf0b1\",\ndescription=\"This block outputs the current date with an optional offset.\",\ncategories={BlockCategory.TEXT},\ninput_schema=GetCurrentDateBlock.Input,\noutput_schema=GetCurrentDateBlock.Output,\ntest_input=[\n{\"trigger\":\"Hello\",\"offset\":\"7\"},\n{\"trigger\":\"Hello\",\"offset\":\"7\",\"format\":\"%m/%d/%Y\"},\n],\ntest_output=[\n(\n\"date\",\nlambda t:abs(datetime.now()-datetime.strptime(t,\"%Y-%m-%d\"))\n<timedelta(days=8),#7days difference+1day error margin.\n),\n(\n\"date\",\nlambda t:abs(datetime.now()-datetime.strptime(t,\"%m/%d/%Y\"))\n<timedelta(days=8),\n#7days difference+1day error margin.\n),\n],\n)\n\ndef run(self,input_data:Input,**kwargs)->BlockOutput:\ntry:\noffset=int(input_data.offset)\nexcept ValueError:\noffset=0\ncurrent_date=datetime.now()-timedelta(days=offset)\nyield \"date\",current_date.strftime(input_data.format)\n\n\nclass GetCurrentDateAndTimeBlock(Block):\nclass Input(BlockSchema):\ntrigger:str=SchemaField(\ndescription=\"Trigger any data to output the current date and time\"\n)\nformat:str=SchemaField(\ndescription=\"Format of the date and time to output\",\ndefault=\"%Y-%m-%d %H:%M:%S\",\n)\n\nclass Output(BlockSchema):\ndate_time:str=SchemaField(\ndescription=\"Current date and time in the specified format (default: YYYY-MM-DD HH:MM:SS)\"\n)\n\ndef __init__(self):\nsuper().__init__(\nid=\"716a67b3-6760-42e7-86dc-18645c6e00fc\",\ndescription=\"This block outputs the current date and time.\",\ncategories={BlockCategory.TEXT},\ninput_schema=GetCurrentDateAndTimeBlock.Input,\noutput_schema=GetCurrentDateAndTimeBlock.Output,\ntest_input=[\n{\"trigger\":\"Hello\"},\n],\ntest_output=[\n(\n\"date_time\",\nlambda t:abs(\ndatetime.now()-datetime.strptime(t,\"%Y-%m-%d %H:%M:%S\")\n)\n<timedelta(seconds=10),#10seconds error margin.\n),\n],\n)\n\ndef run(self,input_data:Input,**kwargs)->BlockOutput:\ncurrent_date_time=time.strftime(input_data.format)\nyield \"date_time\",current_date_time\n\n\nclass CountdownTimerBlock(Block):\nclass Input(BlockSchema):\ninput_message:Any=SchemaField(\nadvanced=False,\ndescription=\"Message to output after the timer finishes\",\ndefault=\"timer finished\",\n)\nseconds:Union[int,str]=SchemaField(\nadvanced=False,description=\"Duration in seconds\",default=0\n)\nminutes:Union[int,str]=SchemaField(\nadvanced=False,description=\"Duration in minutes\",default=0\n)\nhours:Union[int,str]=SchemaField(\nadvanced=False,description=\"Duration in hours\",default=0\n)\ndays:Union[int,str]=SchemaField(\nadvanced=False,description=\"Duration in days\",default=0\n)\n\nclass Output(BlockSchema):\noutput_message:Any=SchemaField(\ndescription=\"Message after the timer finishes\"\n)\n\ndef __init__(self):\nsuper().__init__(\nid=\"d67a9c52-5e4e-11e2-bcfd-0800200c9a71\",\ndescription=\"This block triggers after a specified duration.\",\ncategories={BlockCategory.TEXT},\ninput_schema=CountdownTimerBlock.Input,\noutput_schema=CountdownTimerBlock.Output,\ntest_input=[\n{\"seconds\":1},\n{\"input_message\":\"Custom message\"},\n],\ntest_output=[\n(\"output_message\",\"timer finished\"),\n(\"output_message\",\"Custom message\"),\n],\n)\n\ndef run(self,input_data:Input,**kwargs)->BlockOutput:\nseconds=int(input_data.seconds)\nminutes=int(input_data.minutes)\nhours=int(input_data.hours)\ndays=int(input_data.days)\n\ntotal_seconds=seconds+minutes*60+hours*3600+days*86400\n\ntime.sleep(total_seconds)\nyield \"output_message\",input_data"
}