{
    "type": "Program",
    "name": "Global",
    "range": [
        31,
        400
    ],
    "children": [
        {
            "type": "ClassDecl",
            "name": "TimingInfo",
            "range": [
                31,
                46
            ],
            "children": [
                {
                    "type": "Inheritance",
                    "name": "BaseModel",
                    "range": [
                        33,
                        35
                    ],
                    "children": [],
                    "content": "(BaseModel)"
                },
                {
                    "type": "Property",
                    "name": "cpu_time",
                    "range": [
                        38,
                        40
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "float",
                            "range": [
                                40,
                                40
                            ],
                            "children": [],
                            "content": "float"
                        }
                    ],
                    "content": "cpu_time:float"
                },
                {
                    "type": "Property",
                    "name": "wall_time",
                    "range": [
                        42,
                        44
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "float",
                            "range": [
                                44,
                                44
                            ],
                            "children": [],
                            "content": "float"
                        }
                    ],
                    "content": "wall_time:float"
                }
            ],
            "content": "class TimingInfo(BaseModel):\ncpu_time:float\nwall_time:float\n\n"
        },
        {
            "type": "FunctionDecl",
            "name": "_start_measurement",
            "range": [
                47,
                86
            ],
            "children": [
                {
                    "type": "FunctionSignature",
                    "name": "signature",
                    "range": [
                        47,
                        59
                    ],
                    "children": [
                        {
                            "type": "Keyword",
                            "name": "def",
                            "range": [
                                47,
                                50
                            ],
                            "children": [],
                            "content": "\ndef _start_measurement("
                        },
                        {
                            "type": "FunctionName",
                            "name": "_start_measurement",
                            "range": [
                                48,
                                66
                            ],
                            "children": [],
                            "content": "def _start_measurement()->Tuple[float,float]:\nreturn time.time("
                        },
                        {
                            "type": "ReturnType",
                            "name": "Tuple[float, float]",
                            "range": [
                                51,
                                59
                            ],
                            "children": [
                                {
                                    "type": "Keyword",
                                    "name": "->",
                                    "range": [
                                        51,
                                        53
                                    ],
                                    "children": [],
                                    "content": ")->"
                                },
                                {
                                    "type": "Type",
                                    "name": "Tuple",
                                    "range": [
                                        53,
                                        58
                                    ],
                                    "children": [
                                        {
                                            "type": "Type",
                                            "name": "float",
                                            "range": [
                                                55,
                                                59
                                            ],
                                            "children": [],
                                            "content": "[float,float]"
                                        },
                                        {
                                            "type": "Type",
                                            "name": "float",
                                            "range": [
                                                57,
                                                59
                                            ],
                                            "children": [],
                                            "content": ",float]"
                                        }
                                    ],
                                    "content": ">Tuple[float,float"
                                }
                            ],
                            "content": ")->Tuple[float,float]"
                        }
                    ],
                    "content": "\ndef _start_measurement()->Tuple[float,float]"
                },
                {
                    "type": "FunctionBody",
                    "name": "body",
                    "range": [
                        60,
                        86
                    ],
                    "children": [
                        {
                            "type": "ReturnStatement",
                            "name": "return",
                            "range": [
                                61,
                                85
                            ],
                            "children": [
                                {
                                    "type": "Expression",
                                    "name": "time.time(), os.times()[0] + os.times()[1]",
                                    "range": [
                                        62,
                                        84
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "time.time()",
                                            "range": [
                                                62,
                                                71
                                            ],
                                            "children": [
                                                {
                                                    "type": "MemberExpression",
                                                    "name": "time.time",
                                                    "range": [
                                                        62,
                                                        70
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "time",
                                                            "range": [
                                                                62,
                                                                66
                                                            ],
                                                            "children": [],
                                                            "content": "return time.time("
                                                        }
                                                    ],
                                                    "content": "return time.time(),os."
                                                }
                                            ],
                                            "content": "return time.time(),os.times"
                                        },
                                        {
                                            "type": "BinaryExpression",
                                            "name": "+",
                                            "range": [
                                                73,
                                                84
                                            ],
                                            "children": [
                                                {
                                                    "type": "CallExpression",
                                                    "name": "os.times()[0]",
                                                    "range": [
                                                        73,
                                                        84
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "MemberExpression",
                                                            "name": "os.times",
                                                            "range": [
                                                                73,
                                                                81
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "os",
                                                                    "range": [
                                                                        73,
                                                                        75
                                                                    ],
                                                                    "children": [],
                                                                    "content": ")[0"
                                                                }
                                                            ],
                                                            "content": ")[0]+os.times("
                                                        },
                                                        {
                                                            "type": "IndexExpression",
                                                            "name": "[0]",
                                                            "range": [
                                                                83,
                                                                86
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Literal",
                                                                    "name": "0",
                                                                    "range": [
                                                                        84,
                                                                        85
                                                                    ],
                                                                    "children": [],
                                                                    "content": "1]"
                                                                }
                                                            ],
                                                            "content": "[1]\n"
                                                        }
                                                    ],
                                                    "content": ")[0]+os.times()[1"
                                                },
                                                {
                                                    "type": "CallExpression",
                                                    "name": "os.times()[1]",
                                                    "range": [
                                                        77,
                                                        84
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "MemberExpression",
                                                            "name": "os.times",
                                                            "range": [
                                                                77,
                                                                85
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "os",
                                                                    "range": [
                                                                        77,
                                                                        79
                                                                    ],
                                                                    "children": [],
                                                                    "content": "+os."
                                                                }
                                                            ],
                                                            "content": "+os.times()[1]"
                                                        },
                                                        {
                                                            "type": "IndexExpression",
                                                            "name": "[1]",
                                                            "range": [
                                                                87,
                                                                90
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Literal",
                                                                    "name": "1",
                                                                    "range": [
                                                                        88,
                                                                        89
                                                                    ],
                                                                    "children": [],
                                                                    "content": "\ndef"
                                                                }
                                                            ],
                                                            "content": "\n\ndef _end_measurement"
                                                        }
                                                    ],
                                                    "content": "+os.times()[1"
                                                }
                                            ],
                                            "content": ")[0]+os.times()[1"
                                        }
                                    ],
                                    "content": "return time.time(),os.times()[0]+os.times()[1"
                                }
                            ],
                            "content": "\nreturn time.time(),os.times()[0]+os.times()[1]"
                        }
                    ],
                    "content": ":\nreturn time.time(),os.times()[0]+os.times()[1]\n"
                }
            ],
            "content": "\ndef _start_measurement()->Tuple[float,float]:\nreturn time.time(),os.times()[0]+os.times()[1]\n"
        },
        {
            "type": "FunctionDecl",
            "name": "_end_measurement",
            "range": [
                87,
                146
            ],
            "children": [
                {
                    "type": "ParameterList",
                    "name": "parameters",
                    "range": [
                        89,
                        98
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "start_wall_time",
                            "range": [
                                91,
                                93
                            ],
                            "children": [],
                            "content": "(\nstart_wall_time"
                        },
                        {
                            "type": "Parameter",
                            "name": "start_cpu_time",
                            "range": [
                                95,
                                97
                            ],
                            "children": [],
                            "content": "float,start_cpu_time"
                        }
                    ],
                    "content": "def _end_measurement(\nstart_wall_time:float,start_cpu_time:"
                },
                {
                    "type": "ReturnType",
                    "name": "Tuple[float, float]",
                    "range": [
                        102,
                        107
                    ],
                    "children": [],
                    "content": "->Tuple[float,"
                },
                {
                    "type": "FunctionBody",
                    "name": "body",
                    "range": [
                        109,
                        146
                    ],
                    "children": [
                        {
                            "type": "Assignment",
                            "name": "end_wall_time",
                            "range": [
                                110,
                                116
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "time.time",
                                    "range": [
                                        112,
                                        116
                                    ],
                                    "children": [],
                                    "content": "end_wall_time=time.time"
                                }
                            ],
                            "content": ":\nend_wall_time=time.time"
                        },
                        {
                            "type": "Assignment",
                            "name": "end_cpu_time",
                            "range": [
                                118,
                                136
                            ],
                            "children": [
                                {
                                    "type": "BinaryExpression",
                                    "name": "+",
                                    "range": [
                                        128,
                                        136
                                    ],
                                    "children": [
                                        {
                                            "type": "MemberExpression",
                                            "name": "os.times()[0]",
                                            "range": [
                                                120,
                                                127
                                            ],
                                            "children": [],
                                            "content": "end_cpu_time=os.times()["
                                        },
                                        {
                                            "type": "MemberExpression",
                                            "name": "os.times()[1]",
                                            "range": [
                                                129,
                                                136
                                            ],
                                            "children": [],
                                            "content": "]+os.times()["
                                        }
                                    ],
                                    "content": "0]+os.times()["
                                }
                            ],
                            "content": ")\nend_cpu_time=os.times()[0]+os.times()["
                        },
                        {
                            "type": "ReturnStatement",
                            "name": "return",
                            "range": [
                                138,
                                145
                            ],
                            "children": [
                                {
                                    "type": "BinaryExpression",
                                    "name": "-",
                                    "range": [
                                        140,
                                        141
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "end_wall_time",
                                            "range": [
                                                139,
                                                139
                                            ],
                                            "children": [],
                                            "content": "\n"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "start_wall_time",
                                            "range": [
                                                141,
                                                141
                                            ],
                                            "children": [],
                                            "content": "end_wall_time"
                                        }
                                    ],
                                    "content": "return end_wall_time"
                                },
                                {
                                    "type": "BinaryExpression",
                                    "name": "-",
                                    "range": [
                                        144,
                                        145
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "end_cpu_time",
                                            "range": [
                                                143,
                                                143
                                            ],
                                            "children": [],
                                            "content": "start_wall_time"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "start_cpu_time",
                                            "range": [
                                                145,
                                                145
                                            ],
                                            "children": [],
                                            "content": "end_cpu_time"
                                        }
                                    ],
                                    "content": ",end_cpu_time"
                                }
                            ],
                            "content": "]\nreturn end_wall_time-start_wall_time,end_cpu_time"
                        }
                    ],
                    "content": "]:\nend_wall_time=time.time()\nend_cpu_time=os.times()[0]+os.times()[1]\nreturn end_wall_time-start_wall_time,end_cpu_time-"
                }
            ],
            "content": "\n\ndef _end_measurement(\nstart_wall_time:float,start_cpu_time:float\n)->Tuple[float,float]:\nend_wall_time=time.time()\nend_cpu_time=os.times()[0]+os.times()[1]\nreturn end_wall_time-start_wall_time,end_cpu_time-"
        },
        {
            "type": "VariableDeclaration",
            "name": "P",
            "range": [
                149,
                154
            ],
            "children": [
                {
                    "type": "AssignmentExpression",
                    "name": "",
                    "range": [
                        150,
                        154
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "ParamSpec",
                            "range": [
                                151,
                                154
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "\"P\"",
                                    "range": [
                                        153,
                                        153
                                    ],
                                    "children": [],
                                    "content": "ParamSpec"
                                }
                            ],
                            "content": "P=ParamSpec("
                        }
                    ],
                    "content": "\nP=ParamSpec("
                }
            ],
            "content": "\n\nP=ParamSpec("
        },
        {
            "type": "VariableDeclaration",
            "name": "T",
            "range": [
                156,
                161
            ],
            "children": [
                {
                    "type": "AssignmentExpression",
                    "name": "",
                    "range": [
                        157,
                        161
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "TypeVar",
                            "range": [
                                158,
                                161
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "\"T\"",
                                    "range": [
                                        160,
                                        160
                                    ],
                                    "children": [],
                                    "content": "TypeVar"
                                }
                            ],
                            "content": "T=TypeVar("
                        }
                    ],
                    "content": "\nT=TypeVar("
                }
            ],
            "content": ")\nT=TypeVar("
        },
        {
            "type": "VariableDeclaration",
            "name": "logger",
            "range": [
                164,
                171
            ],
            "children": [
                {
                    "type": "AssignmentExpression",
                    "name": "",
                    "range": [
                        165,
                        171
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "getLogger",
                            "range": [
                                166,
                                171
                            ],
                            "children": [
                                {
                                    "type": "MemberExpression",
                                    "name": "",
                                    "range": [
                                        166,
                                        168
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "logging",
                                            "range": [
                                                166,
                                                166
                                            ],
                                            "children": [],
                                            "content": "logger"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "getLogger",
                                            "range": [
                                                168,
                                                168
                                            ],
                                            "children": [],
                                            "content": "logging"
                                        }
                                    ],
                                    "content": "logger=logging"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "__name__",
                                    "range": [
                                        170,
                                        170
                                    ],
                                    "children": [],
                                    "content": "getLogger"
                                }
                            ],
                            "content": "logger=logging.getLogger("
                        }
                    ],
                    "content": "\nlogger=logging.getLogger("
                }
            ],
            "content": "\n\nlogger=logging.getLogger("
        },
        {
            "type": "FunctionDecl",
            "name": "wrapper",
            "range": [
                214,
                301
            ],
            "children": [
                {
                    "type": "Decorator",
                    "name": "functools.wraps",
                    "range": [
                        206,
                        213
                    ],
                    "children": [],
                    "content": "\"\"\n\n@functools.wraps("
                },
                {
                    "type": "FunctionSignature",
                    "name": "wrapper",
                    "range": [
                        214,
                        240
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "args",
                            "range": [
                                217,
                                223
                            ],
                            "children": [],
                            "content": "def wrapper(*args:P"
                        },
                        {
                            "type": "Parameter",
                            "name": "kwargs",
                            "range": [
                                224,
                                231
                            ],
                            "children": [],
                            "content": ".args,**kwargs:P"
                        },
                        {
                            "type": "ReturnType",
                            "name": "Tuple[TimingInfo, T]",
                            "range": [
                                232,
                                239
                            ],
                            "children": [],
                            "content": ".kwargs)->Tuple[TimingInfo"
                        }
                    ],
                    "content": "func)\ndef wrapper(*args:P.args,**kwargs:P.kwargs)->Tuple[TimingInfo,"
                },
                {
                    "type": "FunctionBody",
                    "name": "wrapper",
                    "range": [
                        241,
                        301
                    ],
                    "children": [
                        {
                            "type": "VariableDecl",
                            "name": "start_wall_time, start_cpu_time",
                            "range": [
                                242,
                                249
                            ],
                            "children": [],
                            "content": "]:\nstart_wall_time,start_cpu_time=_start_measurement"
                        },
                        {
                            "type": "TryStatement",
                            "name": "try",
                            "range": [
                                250,
                                280
                            ],
                            "children": [
                                {
                                    "type": "Block",
                                    "name": "try",
                                    "range": [
                                        252,
                                        264
                                    ],
                                    "children": [
                                        {
                                            "type": "VariableDecl",
                                            "name": "result",
                                            "range": [
                                                253,
                                                264
                                            ],
                                            "children": [],
                                            "content": "try:\nresult=func(*args,**"
                                        }
                                    ],
                                    "content": "\ntry:\nresult=func(*args,**"
                                },
                                {
                                    "type": "FinallyStatement",
                                    "name": "finally",
                                    "range": [
                                        265,
                                        280
                                    ],
                                    "children": [
                                        {
                                            "type": "Block",
                                            "name": "finally",
                                            "range": [
                                                267,
                                                280
                                            ],
                                            "children": [
                                                {
                                                    "type": "VariableDecl",
                                                    "name": "wall_duration, cpu_duration",
                                                    "range": [
                                                        268,
                                                        280
                                                    ],
                                                    "children": [],
                                                    "content": "finally:\nwall_duration,cpu_duration=_end_measurement(\nstart_wall_time,start_cpu_time"
                                                }
                                            ],
                                            "content": "\nfinally:\nwall_duration,cpu_duration=_end_measurement(\nstart_wall_time,start_cpu_time"
                                        }
                                    ],
                                    "content": "kwargs)\nfinally:\nwall_duration,cpu_duration=_end_measurement(\nstart_wall_time,start_cpu_time"
                                }
                            ],
                            "content": "()\ntry:\nresult=func(*args,**kwargs)\nfinally:\nwall_duration,cpu_duration=_end_measurement(\nstart_wall_time,start_cpu_time"
                        },
                        {
                            "type": "VariableDecl",
                            "name": "timing_info",
                            "range": [
                                281,
                                293
                            ],
                            "children": [],
                            "content": "\n)\ntiming_info=TimingInfo(cpu_time=cpu_duration,wall_time="
                        },
                        {
                            "type": "ReturnStatement",
                            "name": "return",
                            "range": [
                                294,
                                298
                            ],
                            "children": [],
                            "content": "wall_duration)\nreturn timing_info"
                        }
                    ],
                    "content": "T]:\nstart_wall_time,start_cpu_time=_start_measurement()\ntry:\nresult=func(*args,**kwargs)\nfinally:\nwall_duration,cpu_duration=_end_measurement(\nstart_wall_time,start_cpu_time\n)\ntiming_info=TimingInfo(cpu_time=cpu_duration,wall_time=wall_duration)\nreturn timing_info,result\n"
                }
            ],
            "content": "func)\ndef wrapper(*args:P.args,**kwargs:P.kwargs)->Tuple[TimingInfo,T]:\nstart_wall_time,start_cpu_time=_start_measurement()\ntry:\nresult=func(*args,**kwargs)\nfinally:\nwall_duration,cpu_duration=_end_measurement(\nstart_wall_time,start_cpu_time\n)\ntiming_info=TimingInfo(cpu_time=cpu_duration,wall_time=wall_duration)\nreturn timing_info,result\n"
        },
        {
            "type": "FunctionDecl",
            "name": "error_logged",
            "range": [
                304,
                400
            ],
            "children": [
                {
                    "type": "FunctionParameter",
                    "name": "func",
                    "range": [
                        307,
                        309
                    ],
                    "children": [],
                    "content": "\ndef error_logged"
                },
                {
                    "type": "ReturnType",
                    "name": "",
                    "range": [
                        316,
                        325
                    ],
                    "children": [
                        {
                            "type": "Type",
                            "name": "Callable",
                            "range": [
                                318,
                                325
                            ],
                            "children": [],
                            "content": "])->Callable[P,"
                        }
                    ],
                    "content": ",T])->Callable[P,"
                },
                {
                    "type": "Decorator",
                    "name": "functools.wraps",
                    "range": [
                        333,
                        339
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "",
                            "range": [
                                337,
                                339
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "func",
                                    "range": [
                                        338,
                                        339
                                    ],
                                    "children": [],
                                    "content": "functools."
                                }
                            ],
                            "content": "@functools."
                        }
                    ],
                    "content": "\" \\n     Decorator to suppress and log any exceptions raised by a function. \\n     \"\"\"\n\n@functools."
                },
                {
                    "type": "FunctionDecl",
                    "name": "wrapper",
                    "range": [
                        341,
                        398
                    ],
                    "children": [
                        {
                            "type": "FunctionParameter",
                            "name": "args",
                            "range": [
                                345,
                                349
                            ],
                            "children": [],
                            "content": "def wrapper(*args"
                        },
                        {
                            "type": "FunctionParameter",
                            "name": "kwargs",
                            "range": [
                                353,
                                357
                            ],
                            "children": [],
                            "content": "args,**kwargs"
                        },
                        {
                            "type": "ReturnType",
                            "name": "",
                            "range": [
                                359,
                                363
                            ],
                            "children": [
                                {
                                    "type": "Type",
                                    "name": "T",
                                    "range": [
                                        361,
                                        362
                                    ],
                                    "children": [],
                                    "content": "kwargs)"
                                },
                                {
                                    "type": "Type",
                                    "name": "None",
                                    "range": [
                                        363,
                                        363
                                    ],
                                    "children": [],
                                    "content": "-"
                                }
                            ],
                            "content": "P.kwargs)-"
                        },
                        {
                            "type": "TryStatement",
                            "name": "",
                            "range": [
                                366,
                                395
                            ],
                            "children": [
                                {
                                    "type": "BlockStatement",
                                    "name": "",
                                    "range": [
                                        368,
                                        378
                                    ],
                                    "children": [
                                        {
                                            "type": "ReturnStatement",
                                            "name": "",
                                            "range": [
                                                369,
                                                378
                                            ],
                                            "children": [
                                                {
                                                    "type": "CallExpression",
                                                    "name": "",
                                                    "range": [
                                                        370,
                                                        378
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "func",
                                                            "range": [
                                                                370,
                                                                371
                                                            ],
                                                            "children": [],
                                                            "content": "try:"
                                                        },
                                                        {
                                                            "type": "SpreadElement",
                                                            "name": "",
                                                            "range": [
                                                                372,
                                                                373
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "args",
                                                                    "range": [
                                                                        373,
                                                                        373
                                                                    ],
                                                                    "children": [],
                                                                    "content": "return"
                                                                }
                                                            ],
                                                            "content": "\nreturn"
                                                        },
                                                        {
                                                            "type": "SpreadElement",
                                                            "name": "",
                                                            "range": [
                                                                375,
                                                                377
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "kwargs",
                                                                    "range": [
                                                                        377,
                                                                        377
                                                                    ],
                                                                    "children": [],
                                                                    "content": "args"
                                                                }
                                                            ],
                                                            "content": "(*args"
                                                        }
                                                    ],
                                                    "content": "try:\nreturn func(*args,"
                                                }
                                            ],
                                            "content": "\ntry:\nreturn func(*args,"
                                        }
                                    ],
                                    "content": ":\ntry:\nreturn func(*args,"
                                },
                                {
                                    "type": "ExceptStatement",
                                    "name": "",
                                    "range": [
                                        380,
                                        395
                                    ],
                                    "children": [
                                        {
                                            "type": "BlockStatement",
                                            "name": "",
                                            "range": [
                                                384,
                                                395
                                            ],
                                            "children": [
                                                {
                                                    "type": "LogStatement",
                                                    "name": "",
                                                    "range": [
                                                        386,
                                                        394
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "CallExpression",
                                                            "name": "",
                                                            "range": [
                                                                388,
                                                                394
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "logger",
                                                                    "range": [
                                                                        386,
                                                                        387
                                                                    ],
                                                                    "children": [],
                                                                    "content": "as e"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "exception",
                                                                    "range": [
                                                                        388,
                                                                        389
                                                                    ],
                                                                    "children": [],
                                                                    "content": ":\n"
                                                                },
                                                                {
                                                                    "type": "TemplateLiteral",
                                                                    "name": "",
                                                                    "range": [
                                                                        391,
                                                                        392
                                                                    ],
                                                                    "children": [],
                                                                    "content": ".exception"
                                                                }
                                                            ],
                                                            "content": ":\nlogger.exception(\n"
                                                        }
                                                    ],
                                                    "content": "as e:\nlogger.exception(\n"
                                                }
                                            ],
                                            "content": "except Exception as e:\nlogger.exception(\nf"
                                        }
                                    ],
                                    "content": "*kwargs)\nexcept Exception as e:\nlogger.exception(\nf"
                                }
                            ],
                            "content": "|None:\ntry:\nreturn func(*args,**kwargs)\nexcept Exception as e:\nlogger.exception(\nf"
                        },
                        {
                            "type": "ReturnStatement",
                            "name": "",
                            "range": [
                                397,
                                398
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "wrapper",
                                    "range": [
                                        398,
                                        398
                                    ],
                                    "children": [],
                                    "content": ")"
                                }
                            ],
                            "content": "\n)"
                        }
                    ],
                    "content": "(func)\ndef wrapper(*args:P.args,**kwargs:P.kwargs)->T|None:\ntry:\nreturn func(*args,**kwargs)\nexcept Exception as e:\nlogger.exception(\nf \"Error when calling function {func.__name__} with arguments {args} {kwargs}: {e}\"\n)"
                }
            ],
            "content": "wrapper\n\n\ndef error_logged(func:Callable[P,T])->Callable[P,T|None]:\n\"\"\" \\n     Decorator to suppress and log any exceptions raised by a function. \\n     \"\"\"\n\n@functools.wraps(func)\ndef wrapper(*args:P.args,**kwargs:P.kwargs)->T|None:\ntry:\nreturn func(*args,**kwargs)\nexcept Exception as e:\nlogger.exception(\nf \"Error when calling function {func.__name__} with arguments {args} {kwargs}: {e}\"\n)\n\n"
        }
    ],
    "content": "class TimingInfo(BaseModel):\ncpu_time:float\nwall_time:float\n\n\ndef _start_measurement()->Tuple[float,float]:\nreturn time.time(),os.times()[0]+os.times()[1]\n\n\ndef _end_measurement(\nstart_wall_time:float,start_cpu_time:float\n)->Tuple[float,float]:\nend_wall_time=time.time()\nend_cpu_time=os.times()[0]+os.times()[1]\nreturn end_wall_time-start_wall_time,end_cpu_time-start_cpu_time\n\n\nP=ParamSpec(\"P\")\nT=TypeVar(\"T\")\n\nlogger=logging.getLogger(__name__)\n\n\ndef time_measured(func:Callable[P,T])->Callable[P,Tuple[TimingInfo,T]]:\n\"\"\" \\n     Decorator to measure the time taken by a function to execute. \\n     \"\"\"\n\n@functools.wraps(func)\ndef wrapper(*args:P.args,**kwargs:P.kwargs)->Tuple[TimingInfo,T]:\nstart_wall_time,start_cpu_time=_start_measurement()\ntry:\nresult=func(*args,**kwargs)\nfinally:\nwall_duration,cpu_duration=_end_measurement(\nstart_wall_time,start_cpu_time\n)\ntiming_info=TimingInfo(cpu_time=cpu_duration,wall_time=wall_duration)\nreturn timing_info,result\n\nreturn wrapper\n\n\ndef error_logged(func:Callable[P,T])->Callable[P,T|None]:\n\"\"\" \\n     Decorator to suppress and log any exceptions raised by a function. \\n     \"\"\"\n\n@functools.wraps(func)\ndef wrapper(*args:P.args,**kwargs:P.kwargs)->T|None:\ntry:\nreturn func(*args,**kwargs)\nexcept Exception as e:\nlogger.exception(\nf \"Error when calling function {func.__name__} with arguments {args} {kwargs}: {e}\"\n)\n\n"
}