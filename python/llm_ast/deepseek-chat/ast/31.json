{
    "type": "Program",
    "name": "Global",
    "range": [
        0,
        63
    ],
    "children": [
        {
            "type": "FunctionDecl",
            "name": "excess_3_code",
            "range": [
                0,
                63
            ],
            "children": [
                {
                    "type": "Parameter",
                    "name": "number",
                    "range": [
                        3,
                        5
                    ],
                    "children": [],
                    "content": "number:int"
                },
                {
                    "type": "ReturnType",
                    "name": "str",
                    "range": [
                        7,
                        9
                    ],
                    "children": [],
                    "content": "->str"
                },
                {
                    "type": "Docstring",
                    "name": "",
                    "range": [
                        12,
                        14
                    ],
                    "children": [],
                    "content": "\"\"\" \\n     Find excess-3 code of integer base 10. \\n     Add 3 to all digits in a decimal number then convert to a binary-coded decimal. \\n     https://en.wikipedia.org/wiki/Excess-3 \\n  \\n     >>> excess_3_code(0) \\n     '0b0011' \\n     >>> excess_3_code(3) \\n     '0b0110' \\n     >>> excess_3_code(2) \\n     '0b0101' \\n     >>> excess_3_code(20) \\n     '0b01010011' \\n     >>> excess_3_code(120) \\n     '0b010001010011' \\n     \"\"\""
                },
                {
                    "type": "VariableDecl",
                    "name": "num",
                    "range": [
                        16,
                        18
                    ],
                    "children": [],
                    "content": "num=\"\""
                },
                {
                    "type": "ForStatement",
                    "name": "",
                    "range": [
                        20,
                        58
                    ],
                    "children": [
                        {
                            "type": "Iterator",
                            "name": "digit",
                            "range": [
                                21,
                                22
                            ],
                            "children": [],
                            "content": "digit in"
                        },
                        {
                            "type": "Iterable",
                            "name": "str(max(0, number))",
                            "range": [
                                23,
                                31
                            ],
                            "children": [],
                            "content": "str(max(0,number))"
                        },
                        {
                            "type": "Block",
                            "name": "",
                            "range": [
                                33,
                                58
                            ],
                            "children": [
                                {
                                    "type": "Assignment",
                                    "name": "num",
                                    "range": [
                                        34,
                                        36
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "str(bin(int(digit) + 3))[2:].zfill(4)",
                                            "range": [
                                                37,
                                                57
                                            ],
                                            "children": [],
                                            "content": "str(bin(int(digit)+3))[2:].zfill(4)"
                                        }
                                    ],
                                    "content": "num+="
                                }
                            ],
                            "content": "\nnum+=str(bin(int(digit)+3))[2:].zfill(4)\n"
                        }
                    ],
                    "content": "for digit in str(max(0,number)):\nnum+=str(bin(int(digit)+3))[2:].zfill(4)\n"
                },
                {
                    "type": "ReturnStatement",
                    "name": "",
                    "range": [
                        59,
                        63
                    ],
                    "children": [
                        {
                            "type": "BinaryExpression",
                            "name": "\"0b\" + num",
                            "range": [
                                60,
                                62
                            ],
                            "children": [],
                            "content": "\"0b\"+num"
                        }
                    ],
                    "content": "return \"0b\"+num\n"
                }
            ],
            "content": "def excess_3_code(number:int)->str:\n\"\"\" \\n     Find excess-3 code of integer base 10. \\n     Add 3 to all digits in a decimal number then convert to a binary-coded decimal. \\n     https://en.wikipedia.org/wiki/Excess-3 \\n  \\n     >>> excess_3_code(0) \\n     '0b0011' \\n     >>> excess_3_code(3) \\n     '0b0110' \\n     >>> excess_3_code(2) \\n     '0b0101' \\n     >>> excess_3_code(20) \\n     '0b01010011' \\n     >>> excess_3_code(120) \\n     '0b010001010011' \\n     \"\"\"\nnum=\"\"\nfor digit in str(max(0,number)):\nnum+=str(bin(int(digit)+3))[2:].zfill(4)\nreturn \"0b\"+num\n"
        }
    ],
    "content": "def excess_3_code(number:int)->str:\n\"\"\" \\n     Find excess-3 code of integer base 10. \\n     Add 3 to all digits in a decimal number then convert to a binary-coded decimal. \\n     https://en.wikipedia.org/wiki/Excess-3 \\n  \\n     >>> excess_3_code(0) \\n     '0b0011' \\n     >>> excess_3_code(3) \\n     '0b0110' \\n     >>> excess_3_code(2) \\n     '0b0101' \\n     >>> excess_3_code(20) \\n     '0b01010011' \\n     >>> excess_3_code(120) \\n     '0b010001010011' \\n     \"\"\"\nnum=\"\"\nfor digit in str(max(0,number)):\nnum+=str(bin(int(digit)+3))[2:].zfill(4)\nreturn \"0b\"+num\n"
}