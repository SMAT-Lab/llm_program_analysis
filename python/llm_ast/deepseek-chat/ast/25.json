{
    "type": "Program",
    "name": "Global",
    "range": [
        83,
        1164
    ],
    "children": [
        {
            "type": "VariableDeclaration",
            "name": "TEST_CREDENTIALS",
            "range": [
                83,
                117
            ],
            "children": [
                {
                    "type": "AssignmentExpression",
                    "name": "",
                    "range": [
                        84,
                        116
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "APIKeyCredentials",
                            "range": [
                                85,
                                116
                            ],
                            "children": [
                                {
                                    "type": "ArgumentList",
                                    "name": "",
                                    "range": [
                                        86,
                                        116
                                    ],
                                    "children": [
                                        {
                                            "type": "NamedArgument",
                                            "name": "id",
                                            "range": [
                                                88,
                                                90
                                            ],
                                            "children": [
                                                {
                                                    "type": "Literal",
                                                    "name": "\"01234567-89ab-cdef-0123-456789abcdef\"",
                                                    "range": [
                                                        90,
                                                        90
                                                    ],
                                                    "children": [],
                                                    "content": "="
                                                }
                                            ],
                                            "content": "\nid="
                                        },
                                        {
                                            "type": "NamedArgument",
                                            "name": "provider",
                                            "range": [
                                                93,
                                                95
                                            ],
                                            "children": [
                                                {
                                                    "type": "Literal",
                                                    "name": "\"replicate\"",
                                                    "range": [
                                                        95,
                                                        95
                                                    ],
                                                    "children": [],
                                                    "content": "="
                                                }
                                            ],
                                            "content": "\nprovider="
                                        },
                                        {
                                            "type": "NamedArgument",
                                            "name": "api_key",
                                            "range": [
                                                98,
                                                103
                                            ],
                                            "children": [
                                                {
                                                    "type": "CallExpression",
                                                    "name": "SecretStr",
                                                    "range": [
                                                        100,
                                                        103
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "ArgumentList",
                                                            "name": "",
                                                            "range": [
                                                                101,
                                                                103
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Literal",
                                                                    "name": "\"mock-replicate-api-key\"",
                                                                    "range": [
                                                                        102,
                                                                        102
                                                                    ],
                                                                    "children": [],
                                                                    "content": "("
                                                                }
                                                            ],
                                                            "content": "SecretStr(\"mock-replicate-api-key\""
                                                        }
                                                    ],
                                                    "content": "=SecretStr(\"mock-replicate-api-key\""
                                                }
                                            ],
                                            "content": "\napi_key=SecretStr(\"mock-replicate-api-key\""
                                        },
                                        {
                                            "type": "NamedArgument",
                                            "name": "title",
                                            "range": [
                                                106,
                                                108
                                            ],
                                            "children": [
                                                {
                                                    "type": "Literal",
                                                    "name": "\"Mock Replicate API key\"",
                                                    "range": [
                                                        108,
                                                        108
                                                    ],
                                                    "children": [],
                                                    "content": "="
                                                }
                                            ],
                                            "content": "\ntitle="
                                        },
                                        {
                                            "type": "NamedArgument",
                                            "name": "expires_at",
                                            "range": [
                                                111,
                                                113
                                            ],
                                            "children": [
                                                {
                                                    "type": "Literal",
                                                    "name": "None",
                                                    "range": [
                                                        113,
                                                        113
                                                    ],
                                                    "children": [],
                                                    "content": "="
                                                }
                                            ],
                                            "content": "\nexpires_at="
                                        }
                                    ],
                                    "content": "APIKeyCredentials(\nid=\"01234567-89ab-cdef-0123-456789abcdef\",\nprovider=\"replicate\",\napi_key=SecretStr(\"mock-replicate-api-key\"),\ntitle=\"Mock Replicate API key\",\nexpires_at=None,\n"
                                }
                            ],
                            "content": "=APIKeyCredentials(\nid=\"01234567-89ab-cdef-0123-456789abcdef\",\nprovider=\"replicate\",\napi_key=SecretStr(\"mock-replicate-api-key\"),\ntitle=\"Mock Replicate API key\",\nexpires_at=None,\n"
                        }
                    ],
                    "content": "TEST_CREDENTIALS=APIKeyCredentials(\nid=\"01234567-89ab-cdef-0123-456789abcdef\",\nprovider=\"replicate\",\napi_key=SecretStr(\"mock-replicate-api-key\"),\ntitle=\"Mock Replicate API key\",\nexpires_at=None,\n"
                }
            ],
            "content": "\nTEST_CREDENTIALS=APIKeyCredentials(\nid=\"01234567-89ab-cdef-0123-456789abcdef\",\nprovider=\"replicate\",\napi_key=SecretStr(\"mock-replicate-api-key\"),\ntitle=\"Mock Replicate API key\",\nexpires_at=None,\n)"
        },
        {
            "type": "VariableDeclaration",
            "name": "TEST_CREDENTIALS_INPUT",
            "range": [
                118,
                150
            ],
            "children": [
                {
                    "type": "ObjectExpression",
                    "name": "",
                    "range": [
                        120,
                        150
                    ],
                    "children": [
                        {
                            "type": "Property",
                            "name": "provider",
                            "range": [
                                122,
                                126
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "\"provider\"",
                                    "range": [
                                        122,
                                        122
                                    ],
                                    "children": [],
                                    "content": "\n"
                                },
                                {
                                    "type": "MemberExpression",
                                    "name": "TEST_CREDENTIALS.provider",
                                    "range": [
                                        124,
                                        126
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "TEST_CREDENTIALS",
                                            "range": [
                                                124,
                                                124
                                            ],
                                            "children": [],
                                            "content": ":"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "provider",
                                            "range": [
                                                126,
                                                126
                                            ],
                                            "children": [],
                                            "content": "."
                                        }
                                    ],
                                    "content": ":TEST_CREDENTIALS."
                                }
                            ],
                            "content": "\n\"provider\":TEST_CREDENTIALS."
                        },
                        {
                            "type": "Property",
                            "name": "id",
                            "range": [
                                129,
                                133
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "\"id\"",
                                    "range": [
                                        129,
                                        129
                                    ],
                                    "children": [],
                                    "content": "\n"
                                },
                                {
                                    "type": "MemberExpression",
                                    "name": "TEST_CREDENTIALS.id",
                                    "range": [
                                        131,
                                        133
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "TEST_CREDENTIALS",
                                            "range": [
                                                131,
                                                131
                                            ],
                                            "children": [],
                                            "content": ":"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "id",
                                            "range": [
                                                133,
                                                133
                                            ],
                                            "children": [],
                                            "content": "."
                                        }
                                    ],
                                    "content": ":TEST_CREDENTIALS."
                                }
                            ],
                            "content": "\n\"id\":TEST_CREDENTIALS."
                        },
                        {
                            "type": "Property",
                            "name": "type",
                            "range": [
                                136,
                                140
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "\"type\"",
                                    "range": [
                                        136,
                                        136
                                    ],
                                    "children": [],
                                    "content": "\n"
                                },
                                {
                                    "type": "MemberExpression",
                                    "name": "TEST_CREDENTIALS.type",
                                    "range": [
                                        138,
                                        140
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "TEST_CREDENTIALS",
                                            "range": [
                                                138,
                                                138
                                            ],
                                            "children": [],
                                            "content": ":"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "type",
                                            "range": [
                                                140,
                                                140
                                            ],
                                            "children": [],
                                            "content": "."
                                        }
                                    ],
                                    "content": ":TEST_CREDENTIALS."
                                }
                            ],
                            "content": "\n\"type\":TEST_CREDENTIALS."
                        },
                        {
                            "type": "Property",
                            "name": "title",
                            "range": [
                                143,
                                147
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "\"title\"",
                                    "range": [
                                        143,
                                        143
                                    ],
                                    "children": [],
                                    "content": "\n"
                                },
                                {
                                    "type": "MemberExpression",
                                    "name": "TEST_CREDENTIALS.type",
                                    "range": [
                                        145,
                                        147
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "TEST_CREDENTIALS",
                                            "range": [
                                                145,
                                                145
                                            ],
                                            "children": [],
                                            "content": ":"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "type",
                                            "range": [
                                                147,
                                                147
                                            ],
                                            "children": [],
                                            "content": "."
                                        }
                                    ],
                                    "content": ":TEST_CREDENTIALS."
                                }
                            ],
                            "content": "\n\"title\":TEST_CREDENTIALS."
                        }
                    ],
                    "content": "={\n\"provider\":TEST_CREDENTIALS.provider,\n\"id\":TEST_CREDENTIALS.id,\n\"type\":TEST_CREDENTIALS.type,\n\"title\":TEST_CREDENTIALS.type,\n"
                }
            ],
            "content": "\nTEST_CREDENTIALS_INPUT={\n\"provider\":TEST_CREDENTIALS.provider,\n\"id\":TEST_CREDENTIALS.id,\n\"type\":TEST_CREDENTIALS.type,\n\"title\":TEST_CREDENTIALS.type,\n"
        },
        {
            "type": "EnumDeclaration",
            "name": "MusicGenModelVersion",
            "range": [
                152,
                173
            ],
            "children": [
                {
                    "type": "EnumMember",
                    "name": "STEREO_LARGE",
                    "range": [
                        161,
                        163
                    ],
                    "children": [
                        {
                            "type": "Literal",
                            "name": "\"stereo-large\"",
                            "range": [
                                163,
                                163
                            ],
                            "children": [],
                            "content": "str"
                        }
                    ],
                    "content": "MusicGenModelVersion(str"
                },
                {
                    "type": "EnumMember",
                    "name": "MELODY_LARGE",
                    "range": [
                        165,
                        167
                    ],
                    "children": [
                        {
                            "type": "Literal",
                            "name": "\"melody-large\"",
                            "range": [
                                167,
                                167
                            ],
                            "children": [],
                            "content": ":"
                        }
                    ],
                    "content": "Enum):"
                },
                {
                    "type": "EnumMember",
                    "name": "LARGE",
                    "range": [
                        169,
                        171
                    ],
                    "children": [
                        {
                            "type": "Literal",
                            "name": "\"large\"",
                            "range": [
                                171,
                                171
                            ],
                            "children": [],
                            "content": "\"stereo-large\""
                        }
                    ],
                    "content": "STEREO_LARGE=\"stereo-large\""
                }
            ],
            "content": "\n\n\n#Model version enum\nclass MusicGenModelVersion(str,Enum):\nSTEREO_LARGE=\"stereo-large\"\nMELODY_LARGE"
        },
        {
            "type": "EnumDeclaration",
            "name": "AudioFormat",
            "range": [
                174,
                191
            ],
            "children": [
                {
                    "type": "EnumMember",
                    "name": "WAV",
                    "range": [
                        183,
                        185
                    ],
                    "children": [
                        {
                            "type": "Literal",
                            "name": "\"wav\"",
                            "range": [
                                185,
                                185
                            ],
                            "children": [],
                            "content": "format"
                        }
                    ],
                    "content": "#Audio format"
                },
                {
                    "type": "EnumMember",
                    "name": "MP3",
                    "range": [
                        187,
                        189
                    ],
                    "children": [
                        {
                            "type": "Literal",
                            "name": "\"mp3\"",
                            "range": [
                                189,
                                189
                            ],
                            "children": [],
                            "content": "AudioFormat"
                        }
                    ],
                    "content": "\nclass AudioFormat"
                }
            ],
            "content": "=\"melody-large\"\nLARGE=\"large\"\n\n\n#Audio format enum\nclass AudioFormat(str"
        },
        {
            "type": "EnumDeclaration",
            "name": "NormalizationStrategy",
            "range": [
                192,
                217
            ],
            "children": [
                {
                    "type": "EnumMember",
                    "name": "LOUDNESS",
                    "range": [
                        201,
                        203
                    ],
                    "children": [
                        {
                            "type": "Literal",
                            "value": "\"loudness\"",
                            "range": [
                                203,
                                203
                            ],
                            "content": "\"mp3\""
                        }
                    ],
                    "content": "MP3=\"mp3\""
                },
                {
                    "type": "EnumMember",
                    "name": "CLIP",
                    "range": [
                        205,
                        207
                    ],
                    "children": [
                        {
                            "type": "Literal",
                            "value": "\"clip\"",
                            "range": [
                                207,
                                207
                            ],
                            "content": "#"
                        }
                    ],
                    "content": "\n\n#"
                },
                {
                    "type": "EnumMember",
                    "name": "PEAK",
                    "range": [
                        209,
                        211
                    ],
                    "children": [
                        {
                            "type": "Literal",
                            "value": "\"peak\"",
                            "range": [
                                211,
                                211
                            ],
                            "content": "\n"
                        }
                    ],
                    "content": "strategy enum\n"
                },
                {
                    "type": "EnumMember",
                    "name": "RMS",
                    "range": [
                        213,
                        215
                    ],
                    "children": [
                        {
                            "type": "Literal",
                            "value": "\"rms\"",
                            "range": [
                                215,
                                215
                            ],
                            "content": "str"
                        }
                    ],
                    "content": "NormalizationStrategy(str"
                }
            ],
            "content": ",Enum):\nWAV=\"wav\"\nMP3=\"mp3\"\n\n\n#Normalization strategy enum\nclass NormalizationStrategy(str,Enum"
        },
        {
            "type": "ClassDecl",
            "name": "AIMusicGeneratorBlock",
            "range": [
                218,
                224
            ],
            "children": [],
            "content": "):\nLOUDNESS=\"loudness\"\n"
        },
        {
            "type": "ClassDecl",
            "name": "Input",
            "range": [
                225,
                231
            ],
            "children": [],
            "content": "CLIP=\"clip\"\nPEAK=\"peak\""
        },
        {
            "type": "VariableDecl",
            "name": "credentials",
            "range": [
                232,
                262
            ],
            "children": [
                {
                    "type": "TypeAnnotation",
                    "name": "",
                    "range": [
                        233,
                        234
                    ],
                    "children": [],
                    "content": "RMS="
                },
                {
                    "type": "Assignment",
                    "name": "",
                    "range": [
                        250,
                        262
                    ],
                    "children": [],
                    "content": "):\ncredentials:CredentialsMetaInput[\nLiteral[ProviderName.REPLICATE"
                }
            ],
            "content": "\nRMS=\"rms\"\n\n\nclass AIMusicGeneratorBlock(Block):\nclass Input(BlockSchema):\ncredentials:CredentialsMetaInput[\nLiteral[ProviderName.REPLICATE"
        },
        {
            "type": "VariableDecl",
            "name": "prompt",
            "range": [
                263,
                286
            ],
            "children": [
                {
                    "type": "TypeAnnotation",
                    "name": "",
                    "range": [
                        264,
                        265
                    ],
                    "children": [],
                    "content": ",Literal"
                },
                {
                    "type": "Assignment",
                    "name": "",
                    "range": [
                        266,
                        286
                    ],
                    "children": [],
                    "content": "[\"api_key\"]\n]=CredentialsField(\ndescription=\"The Replicate integration can be used with \"\n\"any API key with sufficient permissions for the blocks it is used on.\",\n)\nprompt:str"
                }
            ],
            "content": "],Literal[\"api_key\"]\n]=CredentialsField(\ndescription=\"The Replicate integration can be used with \"\n\"any API key with sufficient permissions for the blocks it is used on.\",\n)\nprompt:str"
        },
        {
            "type": "VariableDecl",
            "name": "music_gen_model_version",
            "range": [
                287,
                312
            ],
            "children": [
                {
                    "type": "TypeAnnotation",
                    "name": "",
                    "range": [
                        288,
                        289
                    ],
                    "children": [],
                    "content": "SchemaField("
                },
                {
                    "type": "Assignment",
                    "name": "",
                    "range": [
                        290,
                        312
                    ],
                    "children": [],
                    "content": "\ndescription=\"A description of the music you want to generate\",\nplaceholder=\"e.g., 'An upbeat electronic dance track with heavy bass'\",\ntitle=\"Prompt\",\n)\nmusic_gen_model_version:MusicGenModelVersion=SchemaField"
                }
            ],
            "content": "=SchemaField(\ndescription=\"A description of the music you want to generate\",\nplaceholder=\"e.g., 'An upbeat electronic dance track with heavy bass'\",\ntitle=\"Prompt\",\n)\nmusic_gen_model_version:MusicGenModelVersion=SchemaField"
        },
        {
            "type": "VariableDecl",
            "name": "duration",
            "range": [
                313,
                336
            ],
            "children": [
                {
                    "type": "TypeAnnotation",
                    "name": "",
                    "range": [
                        314,
                        315
                    ],
                    "children": [],
                    "content": "\ndescription"
                },
                {
                    "type": "Assignment",
                    "name": "",
                    "range": [
                        316,
                        336
                    ],
                    "children": [],
                    "content": "=\"Model to use for generation\",\ndefault=MusicGenModelVersion.STEREO_LARGE,\ntitle=\"Model Version\",\n)\nduration:int"
                }
            ],
            "content": "(\ndescription=\"Model to use for generation\",\ndefault=MusicGenModelVersion.STEREO_LARGE,\ntitle=\"Model Version\",\n)\nduration:int"
        },
        {
            "type": "VariableDecl",
            "name": "temperature",
            "range": [
                337,
                362
            ],
            "children": [
                {
                    "type": "TypeAnnotation",
                    "name": "",
                    "range": [
                        338,
                        339
                    ],
                    "children": [],
                    "content": "SchemaField("
                },
                {
                    "type": "Assignment",
                    "name": "",
                    "range": [
                        340,
                        362
                    ],
                    "children": [],
                    "content": "\ndescription=\"Duration of the generated audio in seconds\",\ndefault=8,\ntitle=\"Duration\",\n)\ntemperature:float=SchemaField"
                }
            ],
            "content": "=SchemaField(\ndescription=\"Duration of the generated audio in seconds\",\ndefault=8,\ntitle=\"Duration\",\n)\ntemperature:float=SchemaField"
        },
        {
            "type": "VariableDecl",
            "name": "top_k",
            "range": [
                363,
                386
            ],
            "children": [
                {
                    "type": "TypeAnnotation",
                    "name": "",
                    "range": [
                        364,
                        365
                    ],
                    "children": [],
                    "content": "\ndescription"
                },
                {
                    "type": "Assignment",
                    "name": "",
                    "range": [
                        366,
                        386
                    ],
                    "children": [],
                    "content": "=\"Controls the 'conservativeness' of the sampling process. Higher temperature means more diversity\",\ndefault=1.0,\ntitle=\"Temperature\",\n)\ntop_k:int"
                }
            ],
            "content": "(\ndescription=\"Controls the 'conservativeness' of the sampling process. Higher temperature means more diversity\",\ndefault=1.0,\ntitle=\"Temperature\",\n)\ntop_k:int"
        },
        {
            "type": "VariableDecl",
            "name": "top_p",
            "range": [
                387,
                412
            ],
            "children": [
                {
                    "type": "TypeAnnotation",
                    "name": "",
                    "range": [
                        388,
                        389
                    ],
                    "children": [],
                    "content": "SchemaField("
                },
                {
                    "type": "Assignment",
                    "name": "",
                    "range": [
                        390,
                        412
                    ],
                    "children": [],
                    "content": "\ndescription=\"Reduces sampling to the k most likely tokens\",\ndefault=250,\ntitle=\"Top K\",\n)\ntop_p:float=SchemaField"
                }
            ],
            "content": "=SchemaField(\ndescription=\"Reduces sampling to the k most likely tokens\",\ndefault=250,\ntitle=\"Top K\",\n)\ntop_p:float=SchemaField"
        },
        {
            "type": "VariableDecl",
            "name": "classifier_free_guidance",
            "range": [
                413,
                436
            ],
            "children": [
                {
                    "type": "TypeAnnotation",
                    "name": "",
                    "range": [
                        414,
                        415
                    ],
                    "children": [],
                    "content": "\ndescription"
                },
                {
                    "type": "Assignment",
                    "name": "",
                    "range": [
                        416,
                        436
                    ],
                    "children": [],
                    "content": "=\"Reduces sampling to tokens with cumulative probability of p. When set to 0 (default), top_k sampling is used\",\ndefault=0.0,\ntitle=\"Top P\",\n)\nclassifier_free_guidance:int"
                }
            ],
            "content": "(\ndescription=\"Reduces sampling to tokens with cumulative probability of p. When set to 0 (default), top_k sampling is used\",\ndefault=0.0,\ntitle=\"Top P\",\n)\nclassifier_free_guidance:int"
        },
        {
            "type": "VariableDecl",
            "name": "output_format",
            "range": [
                437,
                462
            ],
            "children": [
                {
                    "type": "TypeAnnotation",
                    "name": "",
                    "range": [
                        438,
                        439
                    ],
                    "children": [],
                    "content": "SchemaField("
                },
                {
                    "type": "Assignment",
                    "name": "",
                    "range": [
                        440,
                        462
                    ],
                    "children": [],
                    "content": "\ndescription=\"Increases the influence of inputs on the output. Higher values produce lower-variance outputs that adhere more closely to inputs\",\ndefault=3,\ntitle=\"Classifier Free Guidance\",\n)\noutput_format:AudioFormat=SchemaField"
                }
            ],
            "content": "=SchemaField(\ndescription=\"Increases the influence of inputs on the output. Higher values produce lower-variance outputs that adhere more closely to inputs\",\ndefault=3,\ntitle=\"Classifier Free Guidance\",\n)\noutput_format:AudioFormat=SchemaField"
        },
        {
            "type": "VariableDecl",
            "name": "normalization_strategy",
            "range": [
                463,
                488
            ],
            "children": [
                {
                    "type": "TypeAnnotation",
                    "name": "",
                    "range": [
                        464,
                        465
                    ],
                    "children": [],
                    "content": "\ndescription"
                },
                {
                    "type": "Assignment",
                    "name": "",
                    "range": [
                        466,
                        488
                    ],
                    "children": [],
                    "content": "=\"Output format for generated audio\",\ndefault=AudioFormat.WAV,\ntitle=\"Output Format\",\n)\nnormalization_strategy:NormalizationStrategy=SchemaField"
                }
            ],
            "content": "(\ndescription=\"Output format for generated audio\",\ndefault=AudioFormat.WAV,\ntitle=\"Output Format\",\n)\nnormalization_strategy:NormalizationStrategy=SchemaField"
        },
        {
            "type": "ClassDecl",
            "name": "Output",
            "range": [
                490,
                496
            ],
            "children": [],
            "content": "\ndescription=\"Strategy for normalizing audio\",\ndefault"
        },
        {
            "type": "VariableDecl",
            "name": "result",
            "range": [
                497,
                507
            ],
            "children": [
                {
                    "type": "TypeAnnotation",
                    "name": "",
                    "range": [
                        498,
                        499
                    ],
                    "children": [],
                    "content": "NormalizationStrategy."
                },
                {
                    "type": "Assignment",
                    "name": "",
                    "range": [
                        500,
                        507
                    ],
                    "children": [],
                    "content": "LOUDNESS,\ntitle=\"Normalization Strategy\",\n"
                }
            ],
            "content": "=NormalizationStrategy.LOUDNESS,\ntitle=\"Normalization Strategy\",\n"
        },
        {
            "type": "VariableDecl",
            "name": "error",
            "range": [
                508,
                518
            ],
            "children": [
                {
                    "type": "TypeAnnotation",
                    "name": "",
                    "range": [
                        509,
                        510
                    ],
                    "children": [],
                    "content": "\n\n"
                },
                {
                    "type": "Assignment",
                    "name": "",
                    "range": [
                        511,
                        518
                    ],
                    "children": [],
                    "content": "class Output(BlockSchema):\nresult"
                }
            ],
            "content": ")\n\nclass Output(BlockSchema):\nresult"
        },
        {
            "type": "FunctionDecl",
            "name": "__init__",
            "range": [
                520,
                691
            ],
            "children": [],
            "content": "str=SchemaField(description=\"URL of the generated audio file\")\nerror:str=SchemaField(description=\"Error message if the model run failed\")\n\ndef __init__(self):\nsuper().__init__(\nid=\"44f6c8ad-d75c-4ae1-8209-aad1c0326928\",\ndescription=\"This block generates music using Meta's MusicGen model on Replicate.\",\ncategories={BlockCategory.AI},\ninput_schema=AIMusicGeneratorBlock.Input,\noutput_schema=AIMusicGeneratorBlock.Output,\ntest_input={\n\"credentials\":TEST_CREDENTIALS_INPUT,\n\"prompt\":\"An upbeat electronic dance track with heavy bass\",\n\"music_gen_model_version\":MusicGenModelVersion.STEREO_LARGE,\n\"duration\":8,\n\"temperature\":1.0,\n\"top_k\":250,\n\"top_p\":0.0,\n\"classifier_free_guidance\":3,\n\"output_format\":AudioFormat.WAV,\n\"normalization_strategy\":NormalizationStrategy.LOUDNESS,\n},\ntest_output=[\n(\n\"result\",\n\"https://replicate.com/output/generated-audio-url.wav\",\n),\n],\ntest_mock={\n\"run_model\":lambda api_key,music_gen_model_version,prompt,duration,temperature,top_k,"
        },
        {
            "type": "FunctionDecl",
            "name": "run",
            "range": [
                693,
                920
            ],
            "children": [],
            "content": ",classifier_free_guidance,output_format,normalization_strategy:\"https://replicate.com/output/generated-audio-url.wav\",\n},\ntest_credentials=TEST_CREDENTIALS,\n)\n\ndef run(\nself,input_data:Input,*,credentials:APIKeyCredentials,**kwargs\n)->BlockOutput:\nmax_retries=3\nretry_delay=5#seconds\nlast_error=None\n\nfor attempt in range(max_retries):\ntry:\nlogger.debug(\nf \"[AIMusicGeneratorBlock] - Running model (attempt {attempt + 1})\"\n)\nresult=self.run_model(\napi_key=credentials.api_key,\nmusic_gen_model_version=input_data.music_gen_model_version,\nprompt=input_data.prompt,\nduration=input_data.duration,\ntemperature=input_data.temperature,\ntop_k=input_data.top_k,\ntop_p=input_data.top_p,\nclassifier_free_guidance=input_data.classifier_free_guidance,\noutput_format=input_data.output_format,\nnormalization_strategy=input_data.normalization_strategy,\n)\nif result and result!=\"No output received\":\nyield \"result\",result\nreturn\nelse:\nlast_error=\"Model returned empty or invalid response\"\nraise ValueError(last_error)\nexcept Exception as e:\nlast_error=f \"Unexpected error: {str(e)}\"\nlogger.error(f \"[AIMusicGeneratorBlock] - Error: {last_error}\")\nif attempt<max_retries-1:\ntime.sleep(retry_delay)\ncontinue\n"
        },
        {
            "type": "FunctionDecl",
            "name": "run_model",
            "range": [
                921,
                1164
            ],
            "children": [],
            "content": "\n#If we've exhausted all retries,yield the error\nyield \"error\",f \"Failed after {max_retries} attempts. Last error: {last_error}\"\n\ndef run_model(\nself,\napi_key:SecretStr,\nmusic_gen_model_version:MusicGenModelVersion,\nprompt:str,\nduration:int,\ntemperature:float,\ntop_k:int,\ntop_p:float,\nclassifier_free_guidance:int,\noutput_format:AudioFormat,\nnormalization_strategy:NormalizationStrategy,\n):\n#Initialize Replicate client with the API key\nclient=replicate.Client(api_token=api_key.get_secret_value())\n\n#Run the model with parameters\noutput=client.run(\n\"meta/musicgen:671ac645ce5e552cc63a54a2bbff63fcf798043055d2dac5fc9e36a837eedcfb\",\ninput={\n\"prompt\":prompt,\n\"music_gen_model_version\":music_gen_model_version,\n\"duration\":duration,\n\"temperature\":temperature,\n\"top_k\":top_k,\n\"top_p\":top_p,\n\"classifier_free_guidance\":classifier_free_guidance,\n\"output_format\":output_format,\n\"normalization_strategy\":normalization_strategy,\n},\n)\n\n#Handle the output\nif isinstance(output,list)and len(output)>0:\nresult_url=output[0]#If output is a list,get the first element\nelif isinstance(output,str):\nresult_url=output#If output is a string,use it directly\nelse:\nresult_url"
        }
    ],
    "content": "\nTEST_CREDENTIALS=APIKeyCredentials(\nid=\"01234567-89ab-cdef-0123-456789abcdef\",\nprovider=\"replicate\",\napi_key=SecretStr(\"mock-replicate-api-key\"),\ntitle=\"Mock Replicate API key\",\nexpires_at=None,\n)\nTEST_CREDENTIALS_INPUT={\n\"provider\":TEST_CREDENTIALS.provider,\n\"id\":TEST_CREDENTIALS.id,\n\"type\":TEST_CREDENTIALS.type,\n\"title\":TEST_CREDENTIALS.type,\n}\n\n\n#Model version enum\nclass MusicGenModelVersion(str,Enum):\nSTEREO_LARGE=\"stereo-large\"\nMELODY_LARGE=\"melody-large\"\nLARGE=\"large\"\n\n\n#Audio format enum\nclass AudioFormat(str,Enum):\nWAV=\"wav\"\nMP3=\"mp3\"\n\n\n#Normalization strategy enum\nclass NormalizationStrategy(str,Enum):\nLOUDNESS=\"loudness\"\nCLIP=\"clip\"\nPEAK=\"peak\"\nRMS=\"rms\"\n\n\nclass AIMusicGeneratorBlock(Block):\nclass Input(BlockSchema):\ncredentials:CredentialsMetaInput[\nLiteral[ProviderName.REPLICATE],Literal[\"api_key\"]\n]=CredentialsField(\ndescription=\"The Replicate integration can be used with \"\n\"any API key with sufficient permissions for the blocks it is used on.\",\n)\nprompt:str=SchemaField(\ndescription=\"A description of the music you want to generate\",\nplaceholder=\"e.g., 'An upbeat electronic dance track with heavy bass'\",\ntitle=\"Prompt\",\n)\nmusic_gen_model_version:MusicGenModelVersion=SchemaField(\ndescription=\"Model to use for generation\",\ndefault=MusicGenModelVersion.STEREO_LARGE,\ntitle=\"Model Version\",\n)\nduration:int=SchemaField(\ndescription=\"Duration of the generated audio in seconds\",\ndefault=8,\ntitle=\"Duration\",\n)\ntemperature:float=SchemaField(\ndescription=\"Controls the 'conservativeness' of the sampling process. Higher temperature means more diversity\",\ndefault=1.0,\ntitle=\"Temperature\",\n)\ntop_k:int=SchemaField(\ndescription=\"Reduces sampling to the k most likely tokens\",\ndefault=250,\ntitle=\"Top K\",\n)\ntop_p:float=SchemaField(\ndescription=\"Reduces sampling to tokens with cumulative probability of p. When set to 0 (default), top_k sampling is used\",\ndefault=0.0,\ntitle=\"Top P\",\n)\nclassifier_free_guidance:int=SchemaField(\ndescription=\"Increases the influence of inputs on the output. Higher values produce lower-variance outputs that adhere more closely to inputs\",\ndefault=3,\ntitle=\"Classifier Free Guidance\",\n)\noutput_format:AudioFormat=SchemaField(\ndescription=\"Output format for generated audio\",\ndefault=AudioFormat.WAV,\ntitle=\"Output Format\",\n)\nnormalization_strategy:NormalizationStrategy=SchemaField(\ndescription=\"Strategy for normalizing audio\",\ndefault=NormalizationStrategy.LOUDNESS,\ntitle=\"Normalization Strategy\",\n)\n\nclass Output(BlockSchema):\nresult:str=SchemaField(description=\"URL of the generated audio file\")\nerror:str=SchemaField(description=\"Error message if the model run failed\")\n\ndef __init__(self):\nsuper().__init__(\nid=\"44f6c8ad-d75c-4ae1-8209-aad1c0326928\",\ndescription=\"This block generates music using Meta's MusicGen model on Replicate.\",\ncategories={BlockCategory.AI},\ninput_schema=AIMusicGeneratorBlock.Input,\noutput_schema=AIMusicGeneratorBlock.Output,\ntest_input={\n\"credentials\":TEST_CREDENTIALS_INPUT,\n\"prompt\":\"An upbeat electronic dance track with heavy bass\",\n\"music_gen_model_version\":MusicGenModelVersion.STEREO_LARGE,\n\"duration\":8,\n\"temperature\":1.0,\n\"top_k\":250,\n\"top_p\":0.0,\n\"classifier_free_guidance\":3,\n\"output_format\":AudioFormat.WAV,\n\"normalization_strategy\":NormalizationStrategy.LOUDNESS,\n},\ntest_output=[\n(\n\"result\",\n\"https://replicate.com/output/generated-audio-url.wav\",\n),\n],\ntest_mock={\n\"run_model\":lambda api_key,music_gen_model_version,prompt,duration,temperature,top_k,top_p,classifier_free_guidance,output_format,normalization_strategy:\"https://replicate.com/output/generated-audio-url.wav\",\n},\ntest_credentials=TEST_CREDENTIALS,\n)\n\ndef run(\nself,input_data:Input,*,credentials:APIKeyCredentials,**kwargs\n)->BlockOutput:\nmax_retries=3\nretry_delay=5#seconds\nlast_error=None\n\nfor attempt in range(max_retries):\ntry:\nlogger.debug(\nf \"[AIMusicGeneratorBlock] - Running model (attempt {attempt + 1})\"\n)\nresult=self.run_model(\napi_key=credentials.api_key,\nmusic_gen_model_version=input_data.music_gen_model_version,\nprompt=input_data.prompt,\nduration=input_data.duration,\ntemperature=input_data.temperature,\ntop_k=input_data.top_k,\ntop_p=input_data.top_p,\nclassifier_free_guidance=input_data.classifier_free_guidance,\noutput_format=input_data.output_format,\nnormalization_strategy=input_data.normalization_strategy,\n)\nif result and result!=\"No output received\":\nyield \"result\",result\nreturn\nelse:\nlast_error=\"Model returned empty or invalid response\"\nraise ValueError(last_error)\nexcept Exception as e:\nlast_error=f \"Unexpected error: {str(e)}\"\nlogger.error(f \"[AIMusicGeneratorBlock] - Error: {last_error}\")\nif attempt<max_retries-1:\ntime.sleep(retry_delay)\ncontinue\n\n#If we've exhausted all retries,yield the error\nyield \"error\",f \"Failed after {max_retries} attempts. Last error: {last_error}\"\n\ndef run_model(\nself,\napi_key:SecretStr,\nmusic_gen_model_version:MusicGenModelVersion,\nprompt:str,\nduration:int,\ntemperature:float,\ntop_k:int,\ntop_p:float,\nclassifier_free_guidance:int,\noutput_format:AudioFormat,\nnormalization_strategy:NormalizationStrategy,\n):\n#Initialize Replicate client with the API key\nclient=replicate.Client(api_token=api_key.get_secret_value())\n\n#Run the model with parameters\noutput=client.run(\n\"meta/musicgen:671ac645ce5e552cc63a54a2bbff63fcf798043055d2dac5fc9e36a837eedcfb\",\ninput={\n\"prompt\":prompt,\n\"music_gen_model_version\":music_gen_model_version,\n\"duration\":duration,\n\"temperature\":temperature,\n\"top_k\":top_k,\n\"top_p\":top_p,\n\"classifier_free_guidance\":classifier_free_guidance,\n\"output_format\":output_format,\n\"normalization_strategy\":normalization_strategy,\n},\n)\n\n#Handle the output\nif isinstance(output,list)and len(output)>0:\nresult_url=output[0]#If output is a list,get the first element\nelif isinstance(output,str):\nresult_url=output#If output is a string,use it directly\nelse:\nresult_url"
}