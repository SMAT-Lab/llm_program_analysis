{
    "type": "Program",
    "name": "Global",
    "range": [
        65,
        814
    ],
    "children": [
        {
            "type": "AssignmentExpression",
            "name": "=",
            "range": [
                65,
                99
            ],
            "children": [
                {
                    "type": "Identifier",
                    "name": "TEST_CREDENTIALS",
                    "range": [
                        65,
                        65
                    ],
                    "children": [],
                    "content": "TEST_CREDENTIALS"
                },
                {
                    "type": "CallExpression",
                    "name": "APIKeyCredentials",
                    "range": [
                        67,
                        98
                    ],
                    "children": [
                        {
                            "type": "Argument",
                            "name": "id",
                            "range": [
                                70,
                                72
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "\"01234567-89ab-cdef-0123-456789abcdef\"",
                                    "range": [
                                        72,
                                        72
                                    ],
                                    "children": [],
                                    "content": "\"01234567-89ab-cdef-0123-456789abcdef\""
                                }
                            ],
                            "content": "id=\"01234567-89ab-cdef-0123-456789abcdef\""
                        },
                        {
                            "type": "Argument",
                            "name": "provider",
                            "range": [
                                75,
                                77
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "\"google_maps\"",
                                    "range": [
                                        77,
                                        77
                                    ],
                                    "children": [],
                                    "content": "\"google_maps\""
                                }
                            ],
                            "content": "provider=\"google_maps\""
                        },
                        {
                            "type": "Argument",
                            "name": "api_key",
                            "range": [
                                80,
                                85
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "SecretStr",
                                    "range": [
                                        82,
                                        85
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "name": "\"mock-google-maps-api-key\"",
                                            "range": [
                                                84,
                                                84
                                            ],
                                            "children": [],
                                            "content": "\"mock-google-maps-api-key\""
                                        }
                                    ],
                                    "content": "SecretStr(\"mock-google-maps-api-key\")"
                                }
                            ],
                            "content": "api_key=SecretStr(\"mock-google-maps-api-key\")"
                        },
                        {
                            "type": "Argument",
                            "name": "title",
                            "range": [
                                88,
                                90
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "\"Mock Google Maps API key\"",
                                    "range": [
                                        90,
                                        90
                                    ],
                                    "children": [],
                                    "content": "\"Mock Google Maps API key\""
                                }
                            ],
                            "content": "title=\"Mock Google Maps API key\""
                        },
                        {
                            "type": "Argument",
                            "name": "expires_at",
                            "range": [
                                93,
                                95
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "None",
                                    "range": [
                                        95,
                                        95
                                    ],
                                    "children": [],
                                    "content": "None"
                                }
                            ],
                            "content": "expires_at=None"
                        }
                    ],
                    "content": "APIKeyCredentials(\nid=\"01234567-89ab-cdef-0123-456789abcdef\",\nprovider=\"google_maps\",\napi_key=SecretStr(\"mock-google-maps-api-key\"),\ntitle=\"Mock Google Maps API key\",\nexpires_at=None,\n)"
                }
            ],
            "content": "TEST_CREDENTIALS=APIKeyCredentials(\nid=\"01234567-89ab-cdef-0123-456789abcdef\",\nprovider=\"google_maps\",\napi_key=SecretStr(\"mock-google-maps-api-key\"),\ntitle=\"Mock Google Maps API key\",\nexpires_at=None,\n)\n"
        },
        {
            "type": "VariableDeclaration",
            "name": "TEST_CREDENTIALS_INPUT",
            "range": [
                100,
                132
            ],
            "children": [
                {
                    "type": "ObjectExpression",
                    "name": "",
                    "range": [
                        102,
                        132
                    ],
                    "children": [
                        {
                            "type": "Property",
                            "name": "provider",
                            "range": [
                                104,
                                108
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "\"provider\"",
                                    "range": [
                                        104,
                                        104
                                    ],
                                    "children": [],
                                    "content": "\"provider\""
                                },
                                {
                                    "type": "Identifier",
                                    "name": "TEST_CREDENTIALS",
                                    "range": [
                                        106,
                                        106
                                    ],
                                    "children": [],
                                    "content": "TEST_CREDENTIALS"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "provider",
                                    "range": [
                                        108,
                                        108
                                    ],
                                    "children": [],
                                    "content": "provider"
                                }
                            ],
                            "content": "\"provider\":TEST_CREDENTIALS.provider"
                        },
                        {
                            "type": "Property",
                            "name": "id",
                            "range": [
                                111,
                                115
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "\"id\"",
                                    "range": [
                                        111,
                                        111
                                    ],
                                    "children": [],
                                    "content": "\"id\""
                                },
                                {
                                    "type": "Identifier",
                                    "name": "TEST_CREDENTIALS",
                                    "range": [
                                        113,
                                        113
                                    ],
                                    "children": [],
                                    "content": "TEST_CREDENTIALS"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "id",
                                    "range": [
                                        115,
                                        115
                                    ],
                                    "children": [],
                                    "content": "id"
                                }
                            ],
                            "content": "\"id\":TEST_CREDENTIALS.id"
                        },
                        {
                            "type": "Property",
                            "name": "type",
                            "range": [
                                118,
                                122
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "\"type\"",
                                    "range": [
                                        118,
                                        118
                                    ],
                                    "children": [],
                                    "content": "\"type\""
                                },
                                {
                                    "type": "Identifier",
                                    "name": "TEST_CREDENTIALS",
                                    "range": [
                                        120,
                                        120
                                    ],
                                    "children": [],
                                    "content": "TEST_CREDENTIALS"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "type",
                                    "range": [
                                        122,
                                        122
                                    ],
                                    "children": [],
                                    "content": "type"
                                }
                            ],
                            "content": "\"type\":TEST_CREDENTIALS.type"
                        },
                        {
                            "type": "Property",
                            "name": "title",
                            "range": [
                                125,
                                129
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "\"title\"",
                                    "range": [
                                        125,
                                        125
                                    ],
                                    "children": [],
                                    "content": "\"title\""
                                },
                                {
                                    "type": "Identifier",
                                    "name": "TEST_CREDENTIALS",
                                    "range": [
                                        127,
                                        127
                                    ],
                                    "children": [],
                                    "content": "TEST_CREDENTIALS"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "type",
                                    "range": [
                                        129,
                                        129
                                    ],
                                    "children": [],
                                    "content": "type"
                                }
                            ],
                            "content": "\"title\":TEST_CREDENTIALS.type"
                        }
                    ],
                    "content": "{\n\"provider\":TEST_CREDENTIALS.provider,\n\"id\":TEST_CREDENTIALS.id,\n\"type\":TEST_CREDENTIALS.type,\n\"title\":TEST_CREDENTIALS.type,\n}"
                }
            ],
            "content": "TEST_CREDENTIALS_INPUT={\n\"provider\":TEST_CREDENTIALS.provider,\n\"id\":TEST_CREDENTIALS.id,\n\"type\":TEST_CREDENTIALS.type,\n\"title\":TEST_CREDENTIALS.type,\n}"
        },
        {
            "type": "ClassDecl",
            "name": "Place",
            "range": [
                134,
                165
            ],
            "children": [
                {
                    "type": "Property",
                    "name": "name",
                    "range": [
                        141,
                        143
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                143,
                                143
                            ],
                            "content": "name"
                        }
                    ],
                    "content": ":\nname"
                },
                {
                    "type": "Property",
                    "name": "address",
                    "range": [
                        145,
                        147
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                147,
                                147
                            ],
                            "content": "address"
                        }
                    ],
                    "content": "str\naddress"
                },
                {
                    "type": "Property",
                    "name": "phone",
                    "range": [
                        149,
                        151
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                151,
                                151
                            ],
                            "content": "phone"
                        }
                    ],
                    "content": "str\nphone"
                },
                {
                    "type": "Property",
                    "name": "rating",
                    "range": [
                        153,
                        155
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "float",
                            "range": [
                                155,
                                155
                            ],
                            "content": "rating"
                        }
                    ],
                    "content": "str\nrating"
                },
                {
                    "type": "Property",
                    "name": "reviews",
                    "range": [
                        157,
                        159
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "int",
                            "range": [
                                159,
                                159
                            ],
                            "content": "reviews"
                        }
                    ],
                    "content": "float\nreviews"
                },
                {
                    "type": "Property",
                    "name": "website",
                    "range": [
                        161,
                        163
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                163,
                                163
                            ],
                            "content": "website"
                        }
                    ],
                    "content": "int\nwebsite"
                }
            ],
            "content": "\n\nclass Place(BaseModel):\nname:str\naddress:str\nphone:str\nrating:float\nreviews:int\nwebsite:str"
        },
        {
            "type": "ClassDecl",
            "name": "Input",
            "range": [
                173,
                253
            ],
            "children": [
                {
                    "type": "FieldDecl",
                    "name": "credentials",
                    "range": [
                        180,
                        204
                    ],
                    "children": [],
                    "content": "):\ncredentials:CredentialsMetaInput[\nLiteral[ProviderName.GOOGLE_MAPS],Literal[\"api_key\"]\n]=CredentialsField(description"
                },
                {
                    "type": "FieldDecl",
                    "name": "query",
                    "range": [
                        206,
                        223
                    ],
                    "children": [],
                    "content": "\"Google Maps API Key\")\nquery:str=SchemaField(\ndescription=\"Search query for local businesses\",\nplaceholder=\"e.g., 'restaurants in New York'\""
                },
                {
                    "type": "FieldDecl",
                    "name": "radius",
                    "range": [
                        225,
                        252
                    ],
                    "children": [],
                    "content": "\n)\nradius:int=SchemaField(\ndescription=\"Search radius in meters (max 50000)\",\ndefault=5000,\nge=1,\nle=50000"
                },
                {
                    "type": "FieldDecl",
                    "name": "max_results",
                    "range": [
                        254,
                        281
                    ],
                    "children": [],
                    "content": "\n)\nmax_results:int=SchemaField(\ndescription=\"Maximum number of results to return (max 60)\",\ndefault=20,\nge=1,\nle=60"
                }
            ],
            "content": "):\nclass Input(BlockSchema):\ncredentials:CredentialsMetaInput[\nLiteral[ProviderName.GOOGLE_MAPS],Literal[\"api_key\"]\n]=CredentialsField(description=\"Google Maps API Key\")\nquery:str=SchemaField(\ndescription=\"Search query for local businesses\",\nplaceholder=\"e.g., 'restaurants in New York'\",\n)\nradius:int=SchemaField(\ndescription=\"Search radius in meters (max 50000)\",\ndefault=5000,\nge=1,\nle=50000,"
        },
        {
            "type": "ClassDecl",
            "name": "Output",
            "range": [
                284,
                312
            ],
            "children": [
                {
                    "type": "FieldDecl",
                    "name": "place",
                    "range": [
                        291,
                        300
                    ],
                    "children": [],
                    "content": "):\nplace:Place=SchemaField(description"
                },
                {
                    "type": "FieldDecl",
                    "name": "error",
                    "range": [
                        302,
                        311
                    ],
                    "children": [],
                    "content": "\"Place found\")\nerror:str=SchemaField(description"
                }
            ],
            "content": ")\n\nclass Output(BlockSchema):\nplace:Place=SchemaField(description=\"Place found\")\nerror:str=SchemaField(description="
        },
        {
            "type": "FunctionDecl",
            "name": "__init__",
            "range": [
                314,
                502
            ],
            "children": [
                {
                    "type": "SuperCall",
                    "name": "",
                    "range": [
                        321,
                        326
                    ],
                    "children": [],
                    "content": "):\nsuper()"
                },
                {
                    "type": "Assignment",
                    "name": "id",
                    "range": [
                        328,
                        330
                    ],
                    "children": [],
                    "content": "__init__(\n"
                },
                {
                    "type": "Assignment",
                    "name": "description",
                    "range": [
                        333,
                        335
                    ],
                    "children": [],
                    "content": "\"f47ac10b-58cc-4372-a567-0e02b2c3d479\",\n"
                },
                {
                    "type": "Assignment",
                    "name": "categories",
                    "range": [
                        338,
                        344
                    ],
                    "children": [],
                    "content": "\"This block searches for local businesses using Google Maps API.\",\ncategories={BlockCategory"
                },
                {
                    "type": "Assignment",
                    "name": "input_schema",
                    "range": [
                        347,
                        351
                    ],
                    "children": [],
                    "content": "},\ninput_schema="
                },
                {
                    "type": "Assignment",
                    "name": "output_schema",
                    "range": [
                        354,
                        358
                    ],
                    "children": [],
                    "content": "Input,\noutput_schema="
                },
                {
                    "type": "Assignment",
                    "name": "test_input",
                    "range": [
                        361,
                        385
                    ],
                    "children": [],
                    "content": "Output,\ntest_input={\n\"credentials\":TEST_CREDENTIALS_INPUT,\n\"query\":\"restaurants in new york\",\n\"radius\":5000,\n\"max_results\":5"
                },
                {
                    "type": "Assignment",
                    "name": "test_output",
                    "range": [
                        388,
                        437
                    ],
                    "children": [],
                    "content": "},\ntest_output=[\n(\n\"place\",\n{\n\"name\":\"Test Restaurant\",\n\"address\":\"123 Test St, New York, NY 10001\",\n\"phone\":\"+1 (555) 123-4567\",\n\"rating\":4.5,\n\"reviews\":100,\n\"website\":\"https://testrestaurant.com\",\n},\n)"
                },
                {
                    "type": "Assignment",
                    "name": "test_mock",
                    "range": [
                        440,
                        494
                    ],
                    "children": [],
                    "content": "],\ntest_mock={\n\"search_places\":lambda*args,**kwargs:[\n{\n\"name\":\"Test Restaurant\",\n\"address\":\"123 Test St, New York, NY 10001\",\n\"phone\":\"+1 (555) 123-4567\",\n\"rating\":4.5,\n\"reviews\":100,\n\"website\":\"https://testrestaurant.com\",\n}\n"
                },
                {
                    "type": "Assignment",
                    "name": "test_credentials",
                    "range": [
                        497,
                        499
                    ],
                    "children": [],
                    "content": "},\n"
                }
            ],
            "content": ")\n\ndef __init__(self):\nsuper().__init__(\nid=\"f47ac10b-58cc-4372-a567-0e02b2c3d479\",\ndescription=\"This block searches for local businesses using Google Maps API.\",\ncategories={BlockCategory.SEARCH},\ninput_schema=GoogleMapsSearchBlock.Input,\noutput_schema=GoogleMapsSearchBlock.Output,\ntest_input={\n\"credentials\":TEST_CREDENTIALS_INPUT,\n\"query\":\"restaurants in new york\",\n\"radius\":5000,\n\"max_results\":5,\n},\ntest_output=[\n(\n\"place\",\n{\n\"name\":\"Test Restaurant\",\n\"address\":\"123 Test St, New York, NY 10001\",\n\"phone\":\"+1 (555) 123-4567\",\n\"rating\":4.5,\n\"reviews\":100,\n\"website\":\"https://testrestaurant.com\",\n},\n),\n],\ntest_mock={\n\"search_places\":lambda*args,**kwargs:[\n{\n\"name\":\"Test Restaurant\",\n\"address\":\"123 Test St, New York, NY 10001\",\n\"phone\":\"+1 (555) 123-4567\",\n\"rating\":4.5,\n\"reviews\":100,\n\"website\":\"https://testrestaurant.com\",\n}\n]\n},\ntest_credentials=TEST_CREDENTIALS"
        },
        {
            "type": "FunctionDecl",
            "name": "run",
            "range": [
                505,
                570
            ],
            "children": [
                {
                    "type": "VariableDecl",
                    "name": "places",
                    "range": [
                        531,
                        558
                    ],
                    "children": [],
                    "content": "BlockOutput:\nplaces=self.search_places(\ncredentials.api_key,\ninput_data.query,\ninput_data.radius,\ninput_data.max_results"
                },
                {
                    "type": "ForStmt",
                    "name": "",
                    "range": [
                        560,
                        570
                    ],
                    "children": [
                        {
                            "type": "YieldStmt",
                            "name": "",
                            "range": [
                                566,
                                569
                            ],
                            "children": [],
                            "content": "places:\nyield"
                        }
                    ],
                    "content": "\n)\nfor place in places:\nyield \"place\""
                }
            ],
            "content": ")\n\ndef run(\nself,input_data:Input,*,credentials:APIKeyCredentials,**kwargs\n)->BlockOutput:\nplaces=self.search_places(\ncredentials.api_key,\ninput_data.query,\ninput_data.radius,\ninput_data.max_results,\n)\nfor place in places:\nyield \"place\""
        },
        {
            "type": "FunctionDecl",
            "name": "search_places",
            "range": [
                572,
                617
            ],
            "children": [
                {
                    "type": "VariableDecl",
                    "name": "client",
                    "range": [
                        589,
                        602
                    ],
                    "children": [],
                    "content": "):\nclient=googlemaps.Client(key=api_key.get_secret_value"
                },
                {
                    "type": "ReturnStmt",
                    "name": "",
                    "range": [
                        604,
                        616
                    ],
                    "children": [],
                    "content": "))\nreturn self._search_places(client,query,radius"
                }
            ],
            "content": "place\n\ndef search_places(self,api_key:SecretStr,query,radius,max_results):\nclient=googlemaps.Client(key=api_key.get_secret_value())\nreturn self._search_places(client,query,radius,"
        },
        {
            "type": "FunctionDecl",
            "name": "_search_places",
            "range": [
                619,
                814
            ],
            "children": [
                {
                    "type": "VariableDecl",
                    "name": "results",
                    "range": [
                        634,
                        637
                    ],
                    "children": [],
                    "content": "):\nresults"
                },
                {
                    "type": "VariableDecl",
                    "name": "next_page_token",
                    "range": [
                        639,
                        641
                    ],
                    "children": [],
                    "content": "[]\n"
                },
                {
                    "type": "WhileStmt",
                    "name": "",
                    "range": [
                        643,
                        811
                    ],
                    "children": [
                        {
                            "type": "VariableDecl",
                            "name": "response",
                            "range": [
                                652,
                                674
                            ],
                            "children": [],
                            "content": "max_results:\nresponse=client.places(\nquery=query,\nradius=radius,\npage_token=next_page_token"
                        },
                        {
                            "type": "ForStmt",
                            "name": "",
                            "range": [
                                676,
                                696
                            ],
                            "children": [
                                {
                                    "type": "VariableDecl",
                                    "name": "place_details",
                                    "range": [
                                        697,
                                        711
                                    ],
                                    "children": [],
                                    "content": "\nbreak\nplace_details=client.place(place[\"place_id\"])["
                                },
                                {
                                    "type": "ExpressionStmt",
                                    "name": "",
                                    "range": [
                                        712,
                                        794
                                    ],
                                    "children": [],
                                    "content": "\"result\"]\nresults.append(\nPlace(\nname=place_details.get(\"name\",\"\"),\naddress=place_details.get(\"formatted_address\",\"\"),\nphone=place_details.get(\"formatted_phone_number\",\"\"),\nrating=place_details.get(\"rating\",0),\nreviews=place_details.get(\"user_ratings_total\",0),\nwebsite=place_details.get(\"website\",\"\"),\n"
                                }
                            ],
                            "content": "\n)\nfor place in response[\"results\"]:\nif len(results)>=max_results:"
                        },
                        {
                            "type": "Assignment",
                            "name": "next_page_token",
                            "range": [
                                796,
                                803
                            ],
                            "children": [],
                            "content": "\n)\nnext_page_token=response.get"
                        },
                        {
                            "type": "IfStmt",
                            "name": "",
                            "range": [
                                805,
                                810
                            ],
                            "children": [],
                            "content": "\"next_page_token\")\nif not next_page_token"
                        }
                    ],
                    "content": "=None\nwhile len(results)<max_results:\nresponse=client.places(\nquery=query,\nradius=radius,\npage_token=next_page_token,\n)\nfor place in response[\"results\"]:\nif len(results)>=max_results:\nbreak\nplace_details=client.place(place[\"place_id\"])[\"result\"]\nresults.append(\nPlace(\nname=place_details.get(\"name\",\"\"),\naddress=place_details.get(\"formatted_address\",\"\"),\nphone=place_details.get(\"formatted_phone_number\",\"\"),\nrating=place_details.get(\"rating\",0),\nreviews=place_details.get(\"user_ratings_total\",0),\nwebsite=place_details.get(\"website\",\"\"),\n)\n)\nnext_page_token=response.get(\"next_page_token\")\nif not next_page_token:"
                },
                {
                    "type": "ReturnStmt",
                    "name": "",
                    "range": [
                        812,
                        813
                    ],
                    "children": [],
                    "content": "\nbreak"
                }
            ],
            "content": ")\n\ndef _search_places(self,client,query,radius,max_results):\nresults=[]\nnext_page_token=None\nwhile len(results)<max_results:\nresponse=client.places(\nquery=query,\nradius=radius,\npage_token=next_page_token,\n)\nfor place in response[\"results\"]:\nif len(results)>=max_results:\nbreak\nplace_details=client.place(place[\"place_id\"])[\"result\"]\nresults.append(\nPlace(\nname=place_details.get(\"name\",\"\"),\naddress=place_details.get(\"formatted_address\",\"\"),\nphone=place_details.get(\"formatted_phone_number\",\"\"),\nrating=place_details.get(\"rating\",0),\nreviews=place_details.get(\"user_ratings_total\",0),\nwebsite=place_details.get(\"website\",\"\"),\n)\n)\nnext_page_token=response.get(\"next_page_token\")\nif not next_page_token:\nbreak\n"
        }
    ],
    "content": "TEST_CREDENTIALS=APIKeyCredentials(\nid=\"01234567-89ab-cdef-0123-456789abcdef\",\nprovider=\"google_maps\",\napi_key=SecretStr(\"mock-google-maps-api-key\"),\ntitle=\"Mock Google Maps API key\",\nexpires_at=None,\n)\nTEST_CREDENTIALS_INPUT={\n\"provider\":TEST_CREDENTIALS.provider,\n\"id\":TEST_CREDENTIALS.id,\n\"type\":TEST_CREDENTIALS.type,\n\"title\":TEST_CREDENTIALS.type,\n}\n\n\nclass Place(BaseModel):\nname:str\naddress:str\nphone:str\nrating:float\nreviews:int\nwebsite:str\n\n\nclass GoogleMapsSearchBlock(Block):\nclass Input(BlockSchema):\ncredentials:CredentialsMetaInput[\nLiteral[ProviderName.GOOGLE_MAPS],Literal[\"api_key\"]\n]=CredentialsField(description=\"Google Maps API Key\")\nquery:str=SchemaField(\ndescription=\"Search query for local businesses\",\nplaceholder=\"e.g., 'restaurants in New York'\",\n)\nradius:int=SchemaField(\ndescription=\"Search radius in meters (max 50000)\",\ndefault=5000,\nge=1,\nle=50000,\n)\nmax_results:int=SchemaField(\ndescription=\"Maximum number of results to return (max 60)\",\ndefault=20,\nge=1,\nle=60,\n)\n\nclass Output(BlockSchema):\nplace:Place=SchemaField(description=\"Place found\")\nerror:str=SchemaField(description=\"Error message if the search failed\")\n\ndef __init__(self):\nsuper().__init__(\nid=\"f47ac10b-58cc-4372-a567-0e02b2c3d479\",\ndescription=\"This block searches for local businesses using Google Maps API.\",\ncategories={BlockCategory.SEARCH},\ninput_schema=GoogleMapsSearchBlock.Input,\noutput_schema=GoogleMapsSearchBlock.Output,\ntest_input={\n\"credentials\":TEST_CREDENTIALS_INPUT,\n\"query\":\"restaurants in new york\",\n\"radius\":5000,\n\"max_results\":5,\n},\ntest_output=[\n(\n\"place\",\n{\n\"name\":\"Test Restaurant\",\n\"address\":\"123 Test St, New York, NY 10001\",\n\"phone\":\"+1 (555) 123-4567\",\n\"rating\":4.5,\n\"reviews\":100,\n\"website\":\"https://testrestaurant.com\",\n},\n),\n],\ntest_mock={\n\"search_places\":lambda*args,**kwargs:[\n{\n\"name\":\"Test Restaurant\",\n\"address\":\"123 Test St, New York, NY 10001\",\n\"phone\":\"+1 (555) 123-4567\",\n\"rating\":4.5,\n\"reviews\":100,\n\"website\":\"https://testrestaurant.com\",\n}\n]\n},\ntest_credentials=TEST_CREDENTIALS,\n)\n\ndef run(\nself,input_data:Input,*,credentials:APIKeyCredentials,**kwargs\n)->BlockOutput:\nplaces=self.search_places(\ncredentials.api_key,\ninput_data.query,\ninput_data.radius,\ninput_data.max_results,\n)\nfor place in places:\nyield \"place\",place\n\ndef search_places(self,api_key:SecretStr,query,radius,max_results):\nclient=googlemaps.Client(key=api_key.get_secret_value())\nreturn self._search_places(client,query,radius,max_results)\n\ndef _search_places(self,client,query,radius,max_results):\nresults=[]\nnext_page_token=None\nwhile len(results)<max_results:\nresponse=client.places(\nquery=query,\nradius=radius,\npage_token=next_page_token,\n)\nfor place in response[\"results\"]:\nif len(results)>=max_results:\nbreak\nplace_details=client.place(place[\"place_id\"])[\"result\"]\nresults.append(\nPlace(\nname=place_details.get(\"name\",\"\"),\naddress=place_details.get(\"formatted_address\",\"\"),\nphone=place_details.get(\"formatted_phone_number\",\"\"),\nrating=place_details.get(\"rating\",0),\nreviews=place_details.get(\"user_ratings_total\",0),\nwebsite=place_details.get(\"website\",\"\"),\n)\n)\nnext_page_token=response.get(\"next_page_token\")\nif not next_page_token:\nbreak\n"
}