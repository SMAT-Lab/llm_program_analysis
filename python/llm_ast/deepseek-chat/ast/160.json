{
    "type": "Program",
    "name": "Global",
    "range": [
        0,
        525
    ],
    "children": [
        {
            "type": "ImportDeclaration",
            "name": "datetime",
            "range": [
                0,
                2
            ],
            "children": [
                {
                    "type": "ImportSpecifier",
                    "name": "datetime",
                    "range": [
                        0,
                        2
                    ],
                    "children": [],
                    "content": "import datetime\n"
                }
            ],
            "content": "import datetime\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "typing",
            "range": [
                3,
                5
            ],
            "children": [
                {
                    "type": "ImportSpecifier",
                    "name": "typing",
                    "range": [
                        3,
                        5
                    ],
                    "children": [],
                    "content": "import typing\n"
                }
            ],
            "content": "import typing\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "Enum",
            "range": [
                6,
                10
            ],
            "children": [
                {
                    "type": "ImportSpecifier",
                    "name": "Enum",
                    "range": [
                        9,
                        10
                    ],
                    "children": [],
                    "content": "Enum\n"
                }
            ],
            "content": "from enum import Enum\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "Generic, Literal, TypeVar, Union",
            "range": [
                11,
                21
            ],
            "children": [
                {
                    "type": "ImportSpecifier",
                    "name": "Generic",
                    "range": [
                        14,
                        15
                    ],
                    "children": [],
                    "content": "Generic,"
                },
                {
                    "type": "ImportSpecifier",
                    "name": "Literal",
                    "range": [
                        16,
                        17
                    ],
                    "children": [],
                    "content": "Literal,"
                },
                {
                    "type": "ImportSpecifier",
                    "name": "TypeVar",
                    "range": [
                        18,
                        19
                    ],
                    "children": [],
                    "content": "TypeVar,"
                },
                {
                    "type": "ImportSpecifier",
                    "name": "Union",
                    "range": [
                        20,
                        21
                    ],
                    "children": [],
                    "content": "Union\n"
                }
            ],
            "content": "from typing import Generic,Literal,TypeVar,Union\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "prisma.enums",
            "range": [
                23,
                27
            ],
            "children": [
                {
                    "type": "ImportSpecifier",
                    "name": "prisma.enums",
                    "range": [
                        24,
                        27
                    ],
                    "children": [],
                    "content": "prisma.enums\n"
                }
            ],
            "content": "import prisma.enums\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "pydantic",
            "range": [
                28,
                30
            ],
            "children": [
                {
                    "type": "ImportSpecifier",
                    "name": "pydantic",
                    "range": [
                        28,
                        30
                    ],
                    "children": [],
                    "content": "import pydantic\n"
                }
            ],
            "content": "import pydantic\n"
        },
        {
            "type": "ClassDecl",
            "name": "InstallationLocation",
            "range": [
                32,
                49
            ],
            "children": [
                {
                    "type": "Inheritance",
                    "name": "Inheritance",
                    "range": [
                        34,
                        38
                    ],
                    "children": [
                        {
                            "type": "Type",
                            "name": "str",
                            "range": [
                                35,
                                35
                            ],
                            "children": [],
                            "content": "("
                        },
                        {
                            "type": "Type",
                            "name": "Enum",
                            "range": [
                                37,
                                37
                            ],
                            "children": [],
                            "content": ","
                        }
                    ],
                    "content": "InstallationLocation(str,Enum"
                },
                {
                    "type": "ClassBody",
                    "name": "ClassBody",
                    "range": [
                        39,
                        49
                    ],
                    "children": [
                        {
                            "type": "VariableDeclaration",
                            "name": "LOCAL",
                            "range": [
                                41,
                                43
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "\"local\"",
                                    "range": [
                                        43,
                                        43
                                    ],
                                    "children": [],
                                    "content": "="
                                }
                            ],
                            "content": "\nLOCAL="
                        },
                        {
                            "type": "VariableDeclaration",
                            "name": "CLOUD",
                            "range": [
                                45,
                                47
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "\"cloud\"",
                                    "range": [
                                        47,
                                        47
                                    ],
                                    "children": [],
                                    "content": "="
                                }
                            ],
                            "content": "\nCLOUD="
                        }
                    ],
                    "content": "):\nLOCAL=\"local\"\nCLOUD=\"cloud\"\n"
                }
            ],
            "content": "\nclass InstallationLocation(str,Enum):\nLOCAL=\"local\"\nCLOUD=\"cloud\"\n"
        },
        {
            "type": "ClassDecl",
            "name": "AgentInstalledFromMarketplaceEventData",
            "range": [
                50,
                71
            ],
            "children": [
                {
                    "type": "Inheritance",
                    "name": "BaseModel",
                    "range": [
                        53,
                        55
                    ],
                    "children": [],
                    "content": "AgentInstalledFromMarketplaceEventData(pydantic"
                },
                {
                    "type": "ClassBody",
                    "name": "",
                    "range": [
                        58,
                        71
                    ],
                    "children": [
                        {
                            "type": "FieldDecl",
                            "name": "marketplace_agent_id",
                            "range": [
                                59,
                                61
                            ],
                            "children": [
                                {
                                    "type": "TypeAnnotation",
                                    "name": "str",
                                    "range": [
                                        61,
                                        61
                                    ],
                                    "children": [],
                                    "content": "marketplace_agent_id"
                                }
                            ],
                            "content": ":\nmarketplace_agent_id"
                        },
                        {
                            "type": "FieldDecl",
                            "name": "installed_agent_id",
                            "range": [
                                63,
                                65
                            ],
                            "children": [
                                {
                                    "type": "TypeAnnotation",
                                    "name": "str",
                                    "range": [
                                        65,
                                        65
                                    ],
                                    "children": [],
                                    "content": "installed_agent_id"
                                }
                            ],
                            "content": "str\ninstalled_agent_id"
                        },
                        {
                            "type": "FieldDecl",
                            "name": "installation_location",
                            "range": [
                                67,
                                69
                            ],
                            "children": [
                                {
                                    "type": "TypeAnnotation",
                                    "name": "InstallationLocation",
                                    "range": [
                                        69,
                                        69
                                    ],
                                    "children": [],
                                    "content": "installation_location"
                                }
                            ],
                            "content": "str\ninstallation_location"
                        }
                    ],
                    "content": "):\nmarketplace_agent_id:str\ninstalled_agent_id:str\ninstallation_location:InstallationLocation"
                }
            ],
            "content": "\n\nclass AgentInstalledFromMarketplaceEventData(pydantic.BaseModel):\nmarketplace_agent_id:str\ninstalled_agent_id:str\ninstallation_location:InstallationLocation"
        },
        {
            "type": "ClassDecl",
            "name": "AgentInstalledFromTemplateEventData",
            "range": [
                72,
                93
            ],
            "children": [
                {
                    "type": "Inheritance",
                    "name": "pydantic.BaseModel",
                    "range": [
                        74,
                        78
                    ],
                    "children": [],
                    "content": "\nclass AgentInstalledFromTemplateEventData(pydantic"
                },
                {
                    "type": "ClassBody",
                    "name": "",
                    "range": [
                        79,
                        93
                    ],
                    "children": [
                        {
                            "type": "FieldDecl",
                            "name": "template_id",
                            "range": [
                                81,
                                84
                            ],
                            "children": [
                                {
                                    "type": "TypeAnnotation",
                                    "name": "str",
                                    "range": [
                                        83,
                                        83
                                    ],
                                    "children": [],
                                    "content": "\n"
                                }
                            ],
                            "content": "):\ntemplate_id"
                        },
                        {
                            "type": "FieldDecl",
                            "name": "installed_agent_id",
                            "range": [
                                85,
                                88
                            ],
                            "children": [
                                {
                                    "type": "TypeAnnotation",
                                    "name": "str",
                                    "range": [
                                        87,
                                        87
                                    ],
                                    "children": [],
                                    "content": "\n"
                                }
                            ],
                            "content": ":str\ninstalled_agent_id"
                        },
                        {
                            "type": "FieldDecl",
                            "name": "installation_location",
                            "range": [
                                89,
                                92
                            ],
                            "children": [
                                {
                                    "type": "TypeAnnotation",
                                    "name": "InstallationLocation",
                                    "range": [
                                        91,
                                        91
                                    ],
                                    "children": [],
                                    "content": "\n"
                                }
                            ],
                            "content": ":str\ninstallation_location"
                        }
                    ],
                    "content": ".BaseModel):\ntemplate_id:str\ninstalled_agent_id:str\ninstallation_location:"
                }
            ],
            "content": "\n\n\nclass AgentInstalledFromTemplateEventData(pydantic.BaseModel):\ntemplate_id:str\ninstalled_agent_id:str\ninstallation_location:"
        },
        {
            "type": "ClassDecl",
            "name": "AgentInstalledFromMarketplaceEvent",
            "range": [
                94,
                114
            ],
            "children": [
                {
                    "type": "Inheritance",
                    "name": "BaseModel",
                    "range": [
                        97,
                        100
                    ],
                    "children": [],
                    "content": "\nclass AgentInstalledFromMarketplaceEvent("
                },
                {
                    "type": "ClassBody",
                    "name": "",
                    "range": [
                        102,
                        114
                    ],
                    "children": [
                        {
                            "type": "FieldDecl",
                            "name": "event_name",
                            "range": [
                                103,
                                108
                            ],
                            "children": [
                                {
                                    "type": "TypeAnnotation",
                                    "name": "Literal",
                                    "range": [
                                        105,
                                        108
                                    ],
                                    "children": [],
                                    "content": ":\nevent_name:"
                                }
                            ],
                            "content": "BaseModel):\nevent_name:"
                        },
                        {
                            "type": "FieldDecl",
                            "name": "event_data",
                            "range": [
                                110,
                                113
                            ],
                            "children": [
                                {
                                    "type": "TypeAnnotation",
                                    "name": "Identifier",
                                    "range": [
                                        112,
                                        113
                                    ],
                                    "children": [],
                                    "content": "]\n"
                                }
                            ],
                            "content": "[\"agent_installed_from_marketplace\"]\n"
                        }
                    ],
                    "content": ".BaseModel):\nevent_name:Literal[\"agent_installed_from_marketplace\"]\nevent_data"
                }
            ],
            "content": "InstallationLocation\n\n\nclass AgentInstalledFromMarketplaceEvent(pydantic.BaseModel):\nevent_name:Literal[\"agent_installed_from_marketplace\"]\nevent_data"
        },
        {
            "type": "ClassDecl",
            "name": "AgentInstalledFromTemplateEvent",
            "range": [
                115,
                135
            ],
            "children": [
                {
                    "type": "Inheritance",
                    "name": "BaseModel",
                    "range": [
                        118,
                        121
                    ],
                    "children": [],
                    "content": "\n\nclass AgentInstalledFromTemplateEvent"
                },
                {
                    "type": "ClassBody",
                    "name": "",
                    "range": [
                        122,
                        135
                    ],
                    "children": [
                        {
                            "type": "FieldDecl",
                            "name": "event_name",
                            "range": [
                                124,
                                129
                            ],
                            "children": [
                                {
                                    "type": "TypeAnnotation",
                                    "name": "Literal",
                                    "range": [
                                        126,
                                        129
                                    ],
                                    "children": [],
                                    "content": "):\nevent_name"
                                }
                            ],
                            "content": ".BaseModel):\nevent_name"
                        },
                        {
                            "type": "FieldDecl",
                            "name": "event_data",
                            "range": [
                                131,
                                134
                            ],
                            "children": [
                                {
                                    "type": "TypeAnnotation",
                                    "name": "Identifier",
                                    "range": [
                                        133,
                                        134
                                    ],
                                    "children": [],
                                    "content": "\"agent_installed_from_template\"]"
                                }
                            ],
                            "content": "Literal[\"agent_installed_from_template\"]"
                        }
                    ],
                    "content": "(pydantic.BaseModel):\nevent_name:Literal[\"agent_installed_from_template\"]\n"
                }
            ],
            "content": ":AgentInstalledFromMarketplaceEventData\n\n\nclass AgentInstalledFromTemplateEvent(pydantic.BaseModel):\nevent_name:Literal[\"agent_installed_from_template\"]\n"
        },
        {
            "type": "VariableDeclaration",
            "name": "AnalyticsEvent",
            "range": [
                136,
                145
            ],
            "children": [
                {
                    "type": "AssignmentExpression",
                    "name": "=",
                    "range": [
                        137,
                        137
                    ],
                    "children": [],
                    "content": ":"
                },
                {
                    "type": "UnionType",
                    "name": "",
                    "range": [
                        138,
                        145
                    ],
                    "children": [
                        {
                            "type": "Identifier",
                            "name": "AgentInstalledFromMarketplaceEvent",
                            "range": [
                                141,
                                141
                            ],
                            "children": [],
                            "content": "\n"
                        },
                        {
                            "type": "Identifier",
                            "name": "AgentInstalledFromTemplateEvent",
                            "range": [
                                143,
                                143
                            ],
                            "children": [],
                            "content": "="
                        }
                    ],
                    "content": "AgentInstalledFromTemplateEventData\n\n\nAnalyticsEvent=Union["
                }
            ],
            "content": "event_data:AgentInstalledFromTemplateEventData\n\n\nAnalyticsEvent=Union["
        },
        {
            "type": "ClassDecl",
            "name": "AnalyticsRequest",
            "range": [
                147,
                160
            ],
            "children": [
                {
                    "type": "Inheritance",
                    "name": "BaseModel",
                    "range": [
                        149,
                        153
                    ],
                    "children": [
                        {
                            "type": "Module",
                            "name": "pydantic",
                            "range": [
                                150,
                                150
                            ],
                            "children": [],
                            "content": "\n"
                        },
                        {
                            "type": "ClassDecl",
                            "name": "BaseModel",
                            "range": [
                                152,
                                152
                            ],
                            "children": [],
                            "content": "\n"
                        }
                    ],
                    "content": "AgentInstalledFromTemplateEvent\n]\n\n"
                },
                {
                    "type": "ClassBody",
                    "name": "",
                    "range": [
                        154,
                        160
                    ],
                    "children": [
                        {
                            "type": "FieldDecl",
                            "name": "event",
                            "range": [
                                156,
                                158
                            ],
                            "children": [
                                {
                                    "type": "Type",
                                    "name": "AnalyticsEvent",
                                    "range": [
                                        158,
                                        158
                                    ],
                                    "children": [],
                                    "content": "pydantic"
                                }
                            ],
                            "content": "AnalyticsRequest(pydantic"
                        }
                    ],
                    "content": "\nclass AnalyticsRequest(pydantic.BaseModel"
                }
            ],
            "content": "AgentInstalledFromMarketplaceEvent,AgentInstalledFromTemplateEvent\n]\n\n\nclass AnalyticsRequest(pydantic.BaseModel"
        },
        {
            "type": "ClassDecl",
            "name": "AddAgentRequest",
            "range": [
                161,
                199
            ],
            "children": [
                {
                    "type": "Inheritance",
                    "name": "BaseModel",
                    "range": [
                        163,
                        167
                    ],
                    "children": [
                        {
                            "type": "Module",
                            "name": "pydantic",
                            "range": [
                                164,
                                164
                            ],
                            "children": [],
                            "content": "event"
                        },
                        {
                            "type": "Class",
                            "name": "BaseModel",
                            "range": [
                                166,
                                166
                            ],
                            "children": [],
                            "content": "AnalyticsEvent"
                        }
                    ],
                    "content": "\nevent:AnalyticsEvent\n"
                },
                {
                    "type": "ClassBody",
                    "name": "",
                    "range": [
                        168,
                        199
                    ],
                    "children": [
                        {
                            "type": "FieldDecl",
                            "name": "graph",
                            "range": [
                                170,
                                179
                            ],
                            "children": [
                                {
                                    "type": "TypeAnnotation",
                                    "name": "dict",
                                    "range": [
                                        172,
                                        179
                                    ],
                                    "children": [
                                        {
                                            "type": "TypeArgument",
                                            "name": "str",
                                            "range": [
                                                174,
                                                174
                                            ],
                                            "children": [],
                                            "content": "."
                                        },
                                        {
                                            "type": "TypeArgument",
                                            "name": "Any",
                                            "range": [
                                                178,
                                                178
                                            ],
                                            "children": [],
                                            "content": "\n"
                                        }
                                    ],
                                    "content": "(pydantic.BaseModel):\ngraph"
                                }
                            ],
                            "content": "class AddAgentRequest(pydantic.BaseModel):\ngraph"
                        },
                        {
                            "type": "FieldDecl",
                            "name": "author",
                            "range": [
                                181,
                                183
                            ],
                            "children": [
                                {
                                    "type": "TypeAnnotation",
                                    "name": "str",
                                    "range": [
                                        183,
                                        183
                                    ],
                                    "children": [],
                                    "content": "str"
                                }
                            ],
                            "content": "dict[str"
                        },
                        {
                            "type": "FieldDecl",
                            "name": "keywords",
                            "range": [
                                185,
                                190
                            ],
                            "children": [
                                {
                                    "type": "TypeAnnotation",
                                    "name": "list",
                                    "range": [
                                        187,
                                        190
                                    ],
                                    "children": [
                                        {
                                            "type": "TypeArgument",
                                            "name": "str",
                                            "range": [
                                                189,
                                                189
                                            ],
                                            "children": [],
                                            "content": "\n"
                                        }
                                    ],
                                    "content": "Any]\nauthor"
                                }
                            ],
                            "content": "typing.Any]\nauthor"
                        },
                        {
                            "type": "FieldDecl",
                            "name": "categories",
                            "range": [
                                192,
                                197
                            ],
                            "children": [
                                {
                                    "type": "TypeAnnotation",
                                    "name": "list",
                                    "range": [
                                        194,
                                        197
                                    ],
                                    "children": [
                                        {
                                            "type": "TypeArgument",
                                            "name": "str",
                                            "range": [
                                                196,
                                                196
                                            ],
                                            "children": [],
                                            "content": "list"
                                        }
                                    ],
                                    "content": "keywords:list["
                                }
                            ],
                            "content": "str\nkeywords:list["
                        }
                    ],
                    "content": "\n\nclass AddAgentRequest(pydantic.BaseModel):\ngraph:dict[str,typing.Any]\nauthor:str\nkeywords:list[str]"
                }
            ],
            "content": "):\nevent:AnalyticsEvent\n\n\nclass AddAgentRequest(pydantic.BaseModel):\ngraph:dict[str,typing.Any]\nauthor:str\nkeywords:list[str]"
        },
        {
            "type": "ClassDecl",
            "name": "SubmissionReviewRequest",
            "range": [
                200,
                231
            ],
            "children": [
                {
                    "type": "PropertyDecl",
                    "name": "agent_id",
                    "range": [
                        209,
                        211
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                211,
                                211
                            ],
                            "children": [],
                            "content": "SubmissionReviewRequest"
                        }
                    ],
                    "content": "\nclass SubmissionReviewRequest"
                },
                {
                    "type": "PropertyDecl",
                    "name": "version",
                    "range": [
                        213,
                        215
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "int",
                            "range": [
                                215,
                                215
                            ],
                            "children": [],
                            "content": "BaseModel"
                        }
                    ],
                    "content": "pydantic.BaseModel"
                },
                {
                    "type": "PropertyDecl",
                    "name": "status",
                    "range": [
                        217,
                        223
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "prisma.enums.SubmissionStatus",
                            "range": [
                                219,
                                223
                            ],
                            "children": [],
                            "content": "agent_id:str\nversion"
                        }
                    ],
                    "content": ":\nagent_id:str\nversion"
                },
                {
                    "type": "PropertyDecl",
                    "name": "comments",
                    "range": [
                        225,
                        229
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str | None",
                            "range": [
                                227,
                                229
                            ],
                            "children": [],
                            "content": "status:prisma"
                        }
                    ],
                    "content": "int\nstatus:prisma"
                }
            ],
            "content": "\ncategories:list[str]\n\n\nclass SubmissionReviewRequest(pydantic.BaseModel):\nagent_id:str\nversion:int\nstatus:prisma.enums"
        },
        {
            "type": "ClassDecl",
            "name": "AgentResponse",
            "range": [
                232,
                323
            ],
            "children": [
                {
                    "type": "ClassInheritance",
                    "name": "BaseModel",
                    "range": [
                        234,
                        238
                    ],
                    "children": [
                        {
                            "type": "ModuleReference",
                            "name": "pydantic",
                            "range": [
                                235,
                                237
                            ],
                            "children": [],
                            "content": "comments:str"
                        }
                    ],
                    "content": "\ncomments:str|"
                },
                {
                    "type": "Docstring",
                    "name": "",
                    "range": [
                        241,
                        243
                    ],
                    "children": [],
                    "content": "\n\nclass"
                },
                {
                    "type": "ClassBody",
                    "name": "",
                    "range": [
                        244,
                        323
                    ],
                    "children": [
                        {
                            "type": "AttributeDecl",
                            "name": "id",
                            "range": [
                                246,
                                249
                            ],
                            "children": [
                                {
                                    "type": "TypeAnnotation",
                                    "name": "str",
                                    "range": [
                                        248,
                                        248
                                    ],
                                    "children": [],
                                    "content": "BaseModel"
                                }
                            ],
                            "content": "pydantic.BaseModel)"
                        },
                        {
                            "type": "AttributeDecl",
                            "name": "name",
                            "range": [
                                250,
                                258
                            ],
                            "children": [
                                {
                                    "type": "TypeAnnotation",
                                    "name": "Optional[str]",
                                    "range": [
                                        252,
                                        257
                                    ],
                                    "children": [
                                        {
                                            "type": "ModuleReference",
                                            "name": "typing",
                                            "range": [
                                                252,
                                                254
                                            ],
                                            "children": [],
                                            "content": "\"\"\" \\n     Represents a response from an agent. \\n  \\n     Attributes: \\n         id (str): The ID of the agent. \\n         name (str, optional): The name of the agent. \\n         description (str, optional): The description of the agent. \\n         author (str, optional): The author of the agent. \\n         keywords (list[str]): The keywords associated with the agent. \\n         categories (list[str]): The categories the agent belongs to. \\n         version (int): The version of the agent. \\n         createdAt (str): The creation date of the agent. \\n         updatedAt (str): The last update date of the agent. \\n     \"\"\""
                                        }
                                    ],
                                    "content": "\"\"\" \\n     Represents a response from an agent. \\n  \\n     Attributes: \\n         id (str): The ID of the agent. \\n         name (str, optional): The name of the agent. \\n         description (str, optional): The description of the agent. \\n         author (str, optional): The author of the agent. \\n         keywords (list[str]): The keywords associated with the agent. \\n         categories (list[str]): The categories the agent belongs to. \\n         version (int): The version of the agent. \\n         createdAt (str): The creation date of the agent. \\n         updatedAt (str): The last update date of the agent. \\n     \"\"\"\n\nid"
                                }
                            ],
                            "content": ":\n\"\"\" \\n     Represents a response from an agent. \\n  \\n     Attributes: \\n         id (str): The ID of the agent. \\n         name (str, optional): The name of the agent. \\n         description (str, optional): The description of the agent. \\n         author (str, optional): The author of the agent. \\n         keywords (list[str]): The keywords associated with the agent. \\n         categories (list[str]): The categories the agent belongs to. \\n         version (int): The version of the agent. \\n         createdAt (str): The creation date of the agent. \\n         updatedAt (str): The last update date of the agent. \\n     \"\"\"\n\nid:"
                        },
                        {
                            "type": "AttributeDecl",
                            "name": "description",
                            "range": [
                                259,
                                267
                            ],
                            "children": [
                                {
                                    "type": "TypeAnnotation",
                                    "name": "Optional[str]",
                                    "range": [
                                        261,
                                        266
                                    ],
                                    "children": [
                                        {
                                            "type": "ModuleReference",
                                            "name": "typing",
                                            "range": [
                                                261,
                                                263
                                            ],
                                            "children": [],
                                            "content": "name:typing"
                                        }
                                    ],
                                    "content": "name:typing.Optional["
                                }
                            ],
                            "content": "str\nname:typing.Optional[str"
                        },
                        {
                            "type": "AttributeDecl",
                            "name": "author",
                            "range": [
                                268,
                                276
                            ],
                            "children": [
                                {
                                    "type": "TypeAnnotation",
                                    "name": "Optional[str]",
                                    "range": [
                                        270,
                                        275
                                    ],
                                    "children": [
                                        {
                                            "type": "ModuleReference",
                                            "name": "typing",
                                            "range": [
                                                270,
                                                272
                                            ],
                                            "children": [],
                                            "content": "description:typing"
                                        }
                                    ],
                                    "content": "description:typing.Optional["
                                }
                            ],
                            "content": "]\ndescription:typing.Optional[str"
                        },
                        {
                            "type": "AttributeDecl",
                            "name": "keywords",
                            "range": [
                                277,
                                283
                            ],
                            "children": [
                                {
                                    "type": "TypeAnnotation",
                                    "name": "list[str]",
                                    "range": [
                                        279,
                                        282
                                    ],
                                    "children": [],
                                    "content": "author:typing."
                                }
                            ],
                            "content": "]\nauthor:typing.Optional"
                        },
                        {
                            "type": "AttributeDecl",
                            "name": "categories",
                            "range": [
                                284,
                                290
                            ],
                            "children": [
                                {
                                    "type": "TypeAnnotation",
                                    "name": "list[str]",
                                    "range": [
                                        286,
                                        289
                                    ],
                                    "children": [],
                                    "content": "]\nkeywords:"
                                }
                            ],
                            "content": "[str]\nkeywords:list"
                        },
                        {
                            "type": "AttributeDecl",
                            "name": "version",
                            "range": [
                                291,
                                294
                            ],
                            "children": [
                                {
                                    "type": "TypeAnnotation",
                                    "name": "int",
                                    "range": [
                                        293,
                                        293
                                    ],
                                    "children": [],
                                    "content": "]"
                                }
                            ],
                            "content": "[str]\n"
                        },
                        {
                            "type": "AttributeDecl",
                            "name": "createdAt",
                            "range": [
                                295,
                                300
                            ],
                            "children": [
                                {
                                    "type": "TypeAnnotation",
                                    "name": "datetime.datetime",
                                    "range": [
                                        297,
                                        299
                                    ],
                                    "children": [],
                                    "content": "list[str"
                                }
                            ],
                            "content": "categories:list[str]"
                        },
                        {
                            "type": "AttributeDecl",
                            "name": "updatedAt",
                            "range": [
                                301,
                                306
                            ],
                            "children": [
                                {
                                    "type": "TypeAnnotation",
                                    "name": "datetime.datetime",
                                    "range": [
                                        303,
                                        305
                                    ],
                                    "children": [],
                                    "content": ":int\n"
                                }
                            ],
                            "content": "\nversion:int\ncreatedAt"
                        },
                        {
                            "type": "AttributeDecl",
                            "name": "submissionStatus",
                            "range": [
                                307,
                                310
                            ],
                            "children": [
                                {
                                    "type": "TypeAnnotation",
                                    "name": "str",
                                    "range": [
                                        309,
                                        309
                                    ],
                                    "children": [],
                                    "content": "."
                                }
                            ],
                            "content": ":datetime.datetime"
                        },
                        {
                            "type": "AttributeDecl",
                            "name": "views",
                            "range": [
                                311,
                                316
                            ],
                            "children": [
                                {
                                    "type": "TypeAnnotation",
                                    "name": "int",
                                    "range": [
                                        313,
                                        313
                                    ],
                                    "children": [],
                                    "content": ":"
                                },
                                {
                                    "type": "DefaultValue",
                                    "name": "0",
                                    "range": [
                                        315,
                                        315
                                    ],
                                    "children": [],
                                    "content": "."
                                }
                            ],
                            "content": "\nupdatedAt:datetime.datetime"
                        },
                        {
                            "type": "AttributeDecl",
                            "name": "downloads",
                            "range": [
                                317,
                                322
                            ],
                            "children": [
                                {
                                    "type": "TypeAnnotation",
                                    "name": "int",
                                    "range": [
                                        319,
                                        319
                                    ],
                                    "children": [],
                                    "content": ":"
                                },
                                {
                                    "type": "DefaultValue",
                                    "name": "0",
                                    "range": [
                                        321,
                                        321
                                    ],
                                    "children": [],
                                    "content": "\n"
                                }
                            ],
                            "content": "\nsubmissionStatus:str\nviews"
                        }
                    ],
                    "content": "AgentResponse(pydantic.BaseModel):\n\"\"\" \\n     Represents a response from an agent. \\n  \\n     Attributes: \\n         id (str): The ID of the agent. \\n         name (str, optional): The name of the agent. \\n         description (str, optional): The description of the agent. \\n         author (str, optional): The author of the agent. \\n         keywords (list[str]): The keywords associated with the agent. \\n         categories (list[str]): The categories the agent belongs to. \\n         version (int): The version of the agent. \\n         createdAt (str): The creation date of the agent. \\n         updatedAt (str): The last update date of the agent. \\n     \"\"\"\n\nid:str\nname:typing.Optional[str]\ndescription:typing.Optional[str]\nauthor:typing.Optional[str]\nkeywords:list[str]\ncategories:list[str]\nversion:int\ncreatedAt:datetime.datetime\nupdatedAt:datetime.datetime\nsubmissionStatus:str\nviews:"
                }
            ],
            "content": ".SubmissionStatus\ncomments:str|None\n\n\nclass AgentResponse(pydantic.BaseModel):\n\"\"\" \\n     Represents a response from an agent. \\n  \\n     Attributes: \\n         id (str): The ID of the agent. \\n         name (str, optional): The name of the agent. \\n         description (str, optional): The description of the agent. \\n         author (str, optional): The author of the agent. \\n         keywords (list[str]): The keywords associated with the agent. \\n         categories (list[str]): The categories the agent belongs to. \\n         version (int): The version of the agent. \\n         createdAt (str): The creation date of the agent. \\n         updatedAt (str): The last update date of the agent. \\n     \"\"\"\n\nid:str\nname:typing.Optional[str]\ndescription:typing.Optional[str]\nauthor:typing.Optional[str]\nkeywords:list[str]\ncategories:list[str]\nversion:int\ncreatedAt:datetime.datetime\nupdatedAt:datetime.datetime\nsubmissionStatus:str\nviews:"
        },
        {
            "type": "ClassDecl",
            "name": "AgentDetailResponse",
            "range": [
                324,
                410
            ],
            "children": [
                {
                    "type": "Inheritance",
                    "name": "BaseModel",
                    "range": [
                        326,
                        330
                    ],
                    "children": [
                        {
                            "type": "Module",
                            "name": "pydantic",
                            "range": [
                                327,
                                328
                            ],
                            "children": [],
                            "content": "\ndownloads"
                        },
                        {
                            "type": "Class",
                            "name": "BaseModel",
                            "range": [
                                329,
                                330
                            ],
                            "children": [],
                            "content": ":int"
                        }
                    ],
                    "content": "0\ndownloads:int"
                },
                {
                    "type": "Docstring",
                    "name": "Docstring",
                    "range": [
                        333,
                        335
                    ],
                    "children": [],
                    "content": "\n\n\n"
                },
                {
                    "type": "Attribute",
                    "name": "id",
                    "range": [
                        338,
                        341
                    ],
                    "children": [
                        {
                            "type": "Type",
                            "name": "str",
                            "range": [
                                340,
                                341
                            ],
                            "children": [],
                            "content": ".BaseModel"
                        }
                    ],
                    "content": "(pydantic.BaseModel"
                },
                {
                    "type": "Attribute",
                    "name": "name",
                    "range": [
                        342,
                        350
                    ],
                    "children": [
                        {
                            "type": "Type",
                            "name": "Optional[str]",
                            "range": [
                                344,
                                349
                            ],
                            "children": [
                                {
                                    "type": "Module",
                                    "name": "typing",
                                    "range": [
                                        344,
                                        345
                                    ],
                                    "children": [],
                                    "content": "\n\"\""
                                },
                                {
                                    "type": "Class",
                                    "name": "Optional",
                                    "range": [
                                        346,
                                        347
                                    ],
                                    "children": [],
                                    "content": "\" \\n     Represents the response data for an agent detail. \\n  \\n     Attributes: \\n         id (str): The ID of the agent. \\n         name (Optional[str]): The name of the agent. \\n         description (Optional[str]): The description of the agent. \\n         author (Optional[str]): The author of the agent. \\n         keywords (List[str]): The keywords associated with the agent. \\n         categories (List[str]): The categories the agent belongs to. \\n         version (int): The version of the agent. \\n         createdAt (str): The creation date of the agent. \\n         updatedAt (str): The last update date of the agent. \\n         graph (Dict[str, Any]): The graph data of the agent. \\n     \"\"\""
                                },
                                {
                                    "type": "Type",
                                    "name": "str",
                                    "range": [
                                        348,
                                        349
                                    ],
                                    "children": [],
                                    "content": "\n\n"
                                }
                            ],
                            "content": "\n\"\"\" \\n     Represents the response data for an agent detail. \\n  \\n     Attributes: \\n         id (str): The ID of the agent. \\n         name (Optional[str]): The name of the agent. \\n         description (Optional[str]): The description of the agent. \\n         author (Optional[str]): The author of the agent. \\n         keywords (List[str]): The keywords associated with the agent. \\n         categories (List[str]): The categories the agent belongs to. \\n         version (int): The version of the agent. \\n         createdAt (str): The creation date of the agent. \\n         updatedAt (str): The last update date of the agent. \\n         graph (Dict[str, Any]): The graph data of the agent. \\n     \"\"\"\n\n"
                        }
                    ],
                    "content": "):\n\"\"\" \\n     Represents the response data for an agent detail. \\n  \\n     Attributes: \\n         id (str): The ID of the agent. \\n         name (Optional[str]): The name of the agent. \\n         description (Optional[str]): The description of the agent. \\n         author (Optional[str]): The author of the agent. \\n         keywords (List[str]): The keywords associated with the agent. \\n         categories (List[str]): The categories the agent belongs to. \\n         version (int): The version of the agent. \\n         createdAt (str): The creation date of the agent. \\n         updatedAt (str): The last update date of the agent. \\n         graph (Dict[str, Any]): The graph data of the agent. \\n     \"\"\"\n\nid"
                },
                {
                    "type": "Attribute",
                    "name": "description",
                    "range": [
                        351,
                        359
                    ],
                    "children": [
                        {
                            "type": "Type",
                            "name": "Optional[str]",
                            "range": [
                                353,
                                358
                            ],
                            "children": [
                                {
                                    "type": "Module",
                                    "name": "typing",
                                    "range": [
                                        353,
                                        354
                                    ],
                                    "children": [],
                                    "content": "\nname"
                                },
                                {
                                    "type": "Class",
                                    "name": "Optional",
                                    "range": [
                                        355,
                                        356
                                    ],
                                    "children": [],
                                    "content": ":typing"
                                },
                                {
                                    "type": "Type",
                                    "name": "str",
                                    "range": [
                                        357,
                                        358
                                    ],
                                    "children": [],
                                    "content": ".Optional"
                                }
                            ],
                            "content": "\nname:typing.Optional"
                        }
                    ],
                    "content": ":str\nname:typing.Optional["
                },
                {
                    "type": "Attribute",
                    "name": "author",
                    "range": [
                        360,
                        368
                    ],
                    "children": [
                        {
                            "type": "Type",
                            "name": "Optional[str]",
                            "range": [
                                362,
                                367
                            ],
                            "children": [
                                {
                                    "type": "Module",
                                    "name": "typing",
                                    "range": [
                                        362,
                                        363
                                    ],
                                    "children": [],
                                    "content": "\ndescription"
                                },
                                {
                                    "type": "Class",
                                    "name": "Optional",
                                    "range": [
                                        364,
                                        365
                                    ],
                                    "children": [],
                                    "content": ":typing"
                                },
                                {
                                    "type": "Type",
                                    "name": "str",
                                    "range": [
                                        366,
                                        367
                                    ],
                                    "children": [],
                                    "content": ".Optional"
                                }
                            ],
                            "content": "\ndescription:typing.Optional"
                        }
                    ],
                    "content": "str]\ndescription:typing.Optional["
                },
                {
                    "type": "Attribute",
                    "name": "keywords",
                    "range": [
                        369,
                        375
                    ],
                    "children": [
                        {
                            "type": "Type",
                            "name": "list[str]",
                            "range": [
                                371,
                                374
                            ],
                            "children": [
                                {
                                    "type": "Type",
                                    "name": "str",
                                    "range": [
                                        373,
                                        374
                                    ],
                                    "children": [],
                                    "content": ":typing"
                                }
                            ],
                            "content": "\nauthor:typing"
                        }
                    ],
                    "content": "str]\nauthor:typing."
                },
                {
                    "type": "Attribute",
                    "name": "categories",
                    "range": [
                        376,
                        382
                    ],
                    "children": [
                        {
                            "type": "Type",
                            "name": "list[str]",
                            "range": [
                                378,
                                381
                            ],
                            "children": [
                                {
                                    "type": "Type",
                                    "name": "str",
                                    "range": [
                                        380,
                                        381
                                    ],
                                    "children": [],
                                    "content": "\nkeywords"
                                }
                            ],
                            "content": "str]\nkeywords"
                        }
                    ],
                    "content": "Optional[str]\nkeywords:"
                },
                {
                    "type": "Attribute",
                    "name": "version",
                    "range": [
                        383,
                        386
                    ],
                    "children": [
                        {
                            "type": "Type",
                            "name": "int",
                            "range": [
                                385,
                                386
                            ],
                            "children": [],
                            "content": "str]"
                        }
                    ],
                    "content": "list[str]"
                },
                {
                    "type": "Attribute",
                    "name": "createdAt",
                    "range": [
                        387,
                        392
                    ],
                    "children": [
                        {
                            "type": "Type",
                            "name": "datetime.datetime",
                            "range": [
                                389,
                                391
                            ],
                            "children": [
                                {
                                    "type": "Module",
                                    "name": "datetime",
                                    "range": [
                                        389,
                                        390
                                    ],
                                    "children": [],
                                    "content": ":list"
                                },
                                {
                                    "type": "Class",
                                    "name": "datetime",
                                    "range": [
                                        391,
                                        392
                                    ],
                                    "children": [],
                                    "content": "[str"
                                }
                            ],
                            "content": ":list["
                        }
                    ],
                    "content": "\ncategories:list[str"
                },
                {
                    "type": "Attribute",
                    "name": "updatedAt",
                    "range": [
                        393,
                        398
                    ],
                    "children": [
                        {
                            "type": "Type",
                            "name": "datetime.datetime",
                            "range": [
                                395,
                                397
                            ],
                            "children": [
                                {
                                    "type": "Module",
                                    "name": "datetime",
                                    "range": [
                                        395,
                                        396
                                    ],
                                    "children": [],
                                    "content": "version:"
                                },
                                {
                                    "type": "Class",
                                    "name": "datetime",
                                    "range": [
                                        397,
                                        398
                                    ],
                                    "children": [],
                                    "content": "int\n"
                                }
                            ],
                            "content": "version:int"
                        }
                    ],
                    "content": "]\nversion:int\n"
                },
                {
                    "type": "Attribute",
                    "name": "graph",
                    "range": [
                        399,
                        409
                    ],
                    "children": [
                        {
                            "type": "Type",
                            "name": "dict[str, Any]",
                            "range": [
                                401,
                                408
                            ],
                            "children": [
                                {
                                    "type": "Type",
                                    "name": "str",
                                    "range": [
                                        403,
                                        404
                                    ],
                                    "children": [],
                                    "content": "datetime\n"
                                },
                                {
                                    "type": "Type",
                                    "name": "Any",
                                    "range": [
                                        405,
                                        407
                                    ],
                                    "children": [
                                        {
                                            "type": "Module",
                                            "name": "typing",
                                            "range": [
                                                405,
                                                406
                                            ],
                                            "children": [],
                                            "content": "updatedAt:"
                                        },
                                        {
                                            "type": "Class",
                                            "name": "Any",
                                            "range": [
                                                407,
                                                408
                                            ],
                                            "children": [],
                                            "content": "datetime."
                                        }
                                    ],
                                    "content": "updatedAt:datetime"
                                }
                            ],
                            "content": "datetime.datetime\nupdatedAt:datetime."
                        }
                    ],
                    "content": "createdAt:datetime.datetime\nupdatedAt:datetime.datetime"
                }
            ],
            "content": "int=0\ndownloads:int=0\n\n\nclass AgentDetailResponse(pydantic.BaseModel):\n\"\"\" \\n     Represents the response data for an agent detail. \\n  \\n     Attributes: \\n         id (str): The ID of the agent. \\n         name (Optional[str]): The name of the agent. \\n         description (Optional[str]): The description of the agent. \\n         author (Optional[str]): The author of the agent. \\n         keywords (List[str]): The keywords associated with the agent. \\n         categories (List[str]): The categories the agent belongs to. \\n         version (int): The version of the agent. \\n         createdAt (str): The creation date of the agent. \\n         updatedAt (str): The last update date of the agent. \\n         graph (Dict[str, Any]): The graph data of the agent. \\n     \"\"\"\n\nid:str\nname:typing.Optional[str]\ndescription:typing.Optional[str]\nauthor:typing.Optional[str]\nkeywords:list[str]\ncategories:list[str]\nversion:int\ncreatedAt:datetime.datetime\nupdatedAt:datetime.datetime\n"
        },
        {
            "type": "ClassDecl",
            "name": "FeaturedAgentResponse",
            "range": [
                411,
                417
            ],
            "children": [
                {
                    "type": "Inheritance",
                    "name": "BaseModel",
                    "range": [
                        414,
                        416
                    ],
                    "children": [],
                    "content": "[str,"
                }
            ],
            "content": "graph:dict[str,typing"
        },
        {
            "type": "Docstring",
            "name": "Docstring",
            "range": [
                420,
                422
            ],
            "children": [],
            "content": "]\n\n"
        },
        {
            "type": "FieldDecl",
            "name": "agentId",
            "range": [
                425,
                427
            ],
            "children": [
                {
                    "type": "TypeAnnotation",
                    "name": "str",
                    "range": [
                        427,
                        427
                    ],
                    "children": [],
                    "content": "pydantic"
                }
            ],
            "content": "FeaturedAgentResponse(pydantic"
        },
        {
            "type": "FieldDecl",
            "name": "featuredCategories",
            "range": [
                429,
                434
            ],
            "children": [
                {
                    "type": "TypeAnnotation",
                    "name": "list[str]",
                    "range": [
                        431,
                        434
                    ],
                    "children": [],
                    "content": ":\n\"\"\" \\n     Represents the response data for an agent detail. \\n     \""
                }
            ],
            "content": "BaseModel):\n\"\"\" \\n     Represents the response data for an agent detail. \\n     \""
        },
        {
            "type": "FieldDecl",
            "name": "createdAt",
            "range": [
                436,
                441
            ],
            "children": [
                {
                    "type": "TypeAnnotation",
                    "name": "datetime.datetime",
                    "range": [
                        438,
                        440
                    ],
                    "children": [],
                    "content": "agentId:str"
                }
            ],
            "content": "\n\nagentId:str\n"
        },
        {
            "type": "FieldDecl",
            "name": "updatedAt",
            "range": [
                442,
                446
            ],
            "children": [
                {
                    "type": "TypeAnnotation",
                    "name": "datetime.datetime",
                    "range": [
                        444,
                        446
                    ],
                    "children": [],
                    "content": "list[str"
                }
            ],
            "content": "featuredCategories:list[str"
        },
        {
            "type": "FieldDecl",
            "name": "isActive",
            "range": [
                448,
                450
            ],
            "children": [
                {
                    "type": "TypeAnnotation",
                    "name": "bool",
                    "range": [
                        450,
                        450
                    ],
                    "children": [],
                    "content": ":"
                }
            ],
            "content": "\ncreatedAt:"
        },
        {
            "type": "ClassDecl",
            "name": "CategoriesResponse",
            "range": [
                453,
                474
            ],
            "children": [
                {
                    "type": "Inheritance",
                    "name": "BaseModel",
                    "range": [
                        455,
                        459
                    ],
                    "children": [
                        {
                            "type": "Module",
                            "name": "pydantic",
                            "range": [
                                456,
                                458
                            ],
                            "children": [],
                            "content": ":datetime."
                        }
                    ],
                    "content": "updatedAt:datetime.datetime"
                },
                {
                    "type": "Docstring",
                    "name": "",
                    "range": [
                        462,
                        464
                    ],
                    "children": [],
                    "content": ":bool\n"
                },
                {
                    "type": "AttributeDecl",
                    "name": "unique_categories",
                    "range": [
                        467,
                        472
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "list[str]",
                            "range": [
                                469,
                                472
                            ],
                            "children": [],
                            "content": "(pydantic.BaseModel"
                        }
                    ],
                    "content": "class CategoriesResponse(pydantic.BaseModel"
                }
            ],
            "content": "datetime\nupdatedAt:datetime.datetime\nisActive:bool\n\n\nclass CategoriesResponse(pydantic.BaseModel):"
        },
        {
            "type": "TypeVarDeclaration",
            "name": "T",
            "range": [
                475,
                480
            ],
            "children": [
                {
                    "type": "TypeVar",
                    "name": "TypeVar",
                    "range": [
                        477,
                        477
                    ],
                    "children": [],
                    "content": "\" \\n     Represents the response data for a list of categories. \\n  \\n     Attributes: \\n         unique_categories (list[str]): The list of unique categories. \\n     \""
                },
                {
                    "type": "Literal",
                    "name": "\"T\"",
                    "range": [
                        479,
                        479
                    ],
                    "children": [],
                    "content": "\n"
                }
            ],
            "content": "\n\"\"\" \\n     Represents the response data for a list of categories. \\n  \\n     Attributes: \\n         unique_categories (list[str]): The list of unique categories. \\n     \"\"\"\n\n"
        },
        {
            "type": "ClassDecl",
            "name": "ListResponse",
            "range": [
                483,
                525
            ],
            "children": [
                {
                    "type": "Inheritance",
                    "name": "BaseModel",
                    "range": [
                        486,
                        488
                    ],
                    "children": [],
                    "content": "]\n\n"
                },
                {
                    "type": "Inheritance",
                    "name": "Generic",
                    "range": [
                        490,
                        493
                    ],
                    "children": [
                        {
                            "type": "TypeParameter",
                            "name": "T",
                            "range": [
                                492,
                                492
                            ],
                            "children": [],
                            "content": "TypeVar"
                        }
                    ],
                    "content": "T=TypeVar("
                },
                {
                    "type": "Docstring",
                    "name": "Docstring",
                    "range": [
                        497,
                        499
                    ],
                    "children": [],
                    "content": "\n\nclass"
                },
                {
                    "type": "ClassBody",
                    "name": "ClassBody",
                    "range": [
                        500,
                        525
                    ],
                    "children": [
                        {
                            "type": "Attribute",
                            "name": "items",
                            "range": [
                                502,
                                507
                            ],
                            "children": [
                                {
                                    "type": "TypeAnnotation",
                                    "name": "list[T]",
                                    "range": [
                                        504,
                                        507
                                    ],
                                    "children": [],
                                    "content": "BaseModel,Generic["
                                }
                            ],
                            "content": "pydantic.BaseModel,Generic["
                        },
                        {
                            "type": "Attribute",
                            "name": "total_count",
                            "range": [
                                509,
                                511
                            ],
                            "children": [
                                {
                                    "type": "TypeAnnotation",
                                    "name": "int",
                                    "range": [
                                        511,
                                        511
                                    ],
                                    "children": [],
                                    "content": ":"
                                }
                            ],
                            "content": "]):"
                        },
                        {
                            "type": "Attribute",
                            "name": "page",
                            "range": [
                                513,
                                515
                            ],
                            "children": [
                                {
                                    "type": "TypeAnnotation",
                                    "name": "int",
                                    "range": [
                                        515,
                                        515
                                    ],
                                    "children": [],
                                    "content": "\"\""
                                }
                            ],
                            "content": "\"\"\" \\n     Represents a list response. \\n  \\n     Attributes: \\n         items (list[T]): The list of items. \\n         total_count (int): The total count of items. \\n         page (int): The current page number. \\n         page_size (int): The number of items per page. \\n         total_pages (int): The total number of pages. \\n     \"\"\""
                        },
                        {
                            "type": "Attribute",
                            "name": "page_size",
                            "range": [
                                517,
                                519
                            ],
                            "children": [
                                {
                                    "type": "TypeAnnotation",
                                    "name": "int",
                                    "range": [
                                        519,
                                        519
                                    ],
                                    "children": [],
                                    "content": ":"
                                }
                            ],
                            "content": "\nitems:"
                        },
                        {
                            "type": "Attribute",
                            "name": "total_pages",
                            "range": [
                                521,
                                523
                            ],
                            "children": [
                                {
                                    "type": "TypeAnnotation",
                                    "name": "int",
                                    "range": [
                                        523,
                                        523
                                    ],
                                    "children": [],
                                    "content": "]"
                                }
                            ],
                            "content": "[T]"
                        }
                    ],
                    "content": "ListResponse(pydantic.BaseModel,Generic[T]):\n\"\"\" \\n     Represents a list response. \\n  \\n     Attributes: \\n         items (list[T]): The list of items. \\n         total_count (int): The total count of items. \\n         page (int): The current page number. \\n         page_size (int): The number of items per page. \\n         total_pages (int): The total number of pages. \\n     \"\"\"\n\nitems:list[T]\ntotal_count"
                }
            ],
            "content": "list[str]\n\n\nT=TypeVar(\"T\")\n\n\nclass ListResponse(pydantic.BaseModel,Generic[T]):\n\"\"\" \\n     Represents a list response. \\n  \\n     Attributes: \\n         items (list[T]): The list of items. \\n         total_count (int): The total count of items. \\n         page (int): The current page number. \\n         page_size (int): The number of items per page. \\n         total_pages (int): The total number of pages. \\n     \"\"\"\n\nitems:list[T]\ntotal_count"
        }
    ],
    "content": "import datetime\nimport typing\nfrom enum import Enum\nfrom typing import Generic,Literal,TypeVar,Union\n\nimport prisma.enums\nimport pydantic\n\n\nclass InstallationLocation(str,Enum):\nLOCAL=\"local\"\nCLOUD=\"cloud\"\n\n\nclass AgentInstalledFromMarketplaceEventData(pydantic.BaseModel):\nmarketplace_agent_id:str\ninstalled_agent_id:str\ninstallation_location:InstallationLocation\n\n\nclass AgentInstalledFromTemplateEventData(pydantic.BaseModel):\ntemplate_id:str\ninstalled_agent_id:str\ninstallation_location:InstallationLocation\n\n\nclass AgentInstalledFromMarketplaceEvent(pydantic.BaseModel):\nevent_name:Literal[\"agent_installed_from_marketplace\"]\nevent_data:AgentInstalledFromMarketplaceEventData\n\n\nclass AgentInstalledFromTemplateEvent(pydantic.BaseModel):\nevent_name:Literal[\"agent_installed_from_template\"]\nevent_data:AgentInstalledFromTemplateEventData\n\n\nAnalyticsEvent=Union[\nAgentInstalledFromMarketplaceEvent,AgentInstalledFromTemplateEvent\n]\n\n\nclass AnalyticsRequest(pydantic.BaseModel):\nevent:AnalyticsEvent\n\n\nclass AddAgentRequest(pydantic.BaseModel):\ngraph:dict[str,typing.Any]\nauthor:str\nkeywords:list[str]\ncategories:list[str]\n\n\nclass SubmissionReviewRequest(pydantic.BaseModel):\nagent_id:str\nversion:int\nstatus:prisma.enums.SubmissionStatus\ncomments:str|None\n\n\nclass AgentResponse(pydantic.BaseModel):\n\"\"\" \\n     Represents a response from an agent. \\n  \\n     Attributes: \\n         id (str): The ID of the agent. \\n         name (str, optional): The name of the agent. \\n         description (str, optional): The description of the agent. \\n         author (str, optional): The author of the agent. \\n         keywords (list[str]): The keywords associated with the agent. \\n         categories (list[str]): The categories the agent belongs to. \\n         version (int): The version of the agent. \\n         createdAt (str): The creation date of the agent. \\n         updatedAt (str): The last update date of the agent. \\n     \"\"\"\n\nid:str\nname:typing.Optional[str]\ndescription:typing.Optional[str]\nauthor:typing.Optional[str]\nkeywords:list[str]\ncategories:list[str]\nversion:int\ncreatedAt:datetime.datetime\nupdatedAt:datetime.datetime\nsubmissionStatus:str\nviews:int=0\ndownloads:int=0\n\n\nclass AgentDetailResponse(pydantic.BaseModel):\n\"\"\" \\n     Represents the response data for an agent detail. \\n  \\n     Attributes: \\n         id (str): The ID of the agent. \\n         name (Optional[str]): The name of the agent. \\n         description (Optional[str]): The description of the agent. \\n         author (Optional[str]): The author of the agent. \\n         keywords (List[str]): The keywords associated with the agent. \\n         categories (List[str]): The categories the agent belongs to. \\n         version (int): The version of the agent. \\n         createdAt (str): The creation date of the agent. \\n         updatedAt (str): The last update date of the agent. \\n         graph (Dict[str, Any]): The graph data of the agent. \\n     \"\"\"\n\nid:str\nname:typing.Optional[str]\ndescription:typing.Optional[str]\nauthor:typing.Optional[str]\nkeywords:list[str]\ncategories:list[str]\nversion:int\ncreatedAt:datetime.datetime\nupdatedAt:datetime.datetime\ngraph:dict[str,typing.Any]\n\n\nclass FeaturedAgentResponse(pydantic.BaseModel):\n\"\"\" \\n     Represents the response data for an agent detail. \\n     \"\"\"\n\nagentId:str\nfeaturedCategories:list[str]\ncreatedAt:datetime.datetime\nupdatedAt:datetime.datetime\nisActive:bool\n\n\nclass CategoriesResponse(pydantic.BaseModel):\n\"\"\" \\n     Represents the response data for a list of categories. \\n  \\n     Attributes: \\n         unique_categories (list[str]): The list of unique categories. \\n     \"\"\"\n\nunique_categories:list[str]\n\n\nT=TypeVar(\"T\")\n\n\nclass ListResponse(pydantic.BaseModel,Generic[T]):\n\"\"\" \\n     Represents a list response. \\n  \\n     Attributes: \\n         items (list[T]): The list of items. \\n         total_count (int): The total count of items. \\n         page (int): The current page number. \\n         page_size (int): The number of items per page. \\n         total_pages (int): The total number of pages. \\n     \"\"\"\n\nitems:list[T]\ntotal_count"
}