{
    "type": "Program",
    "name": "Global",
    "range": [
        0,
        1403
    ],
    "children": [
        {
            "type": "ImportDeclaration",
            "name": "io",
            "range": [
                0,
                2
            ],
            "children": [],
            "content": "import io\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "unittest.mock",
            "range": [
                3,
                7
            ],
            "children": [],
            "content": "import unittest.mock\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "fastapi",
            "range": [
                9,
                11
            ],
            "children": [],
            "content": "import fastapi\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "pytest",
            "range": [
                12,
                14
            ],
            "children": [],
            "content": "import pytest\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "starlette.datastructures",
            "range": [
                15,
                19
            ],
            "children": [],
            "content": "import starlette.datastructures\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "backend.server.v2.store.exceptions",
            "range": [
                21,
                31
            ],
            "children": [],
            "content": "import backend.server.v2.store.exceptions\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "backend.server.v2.store.media",
            "range": [
                32,
                42
            ],
            "children": [],
            "content": "import backend.server.v2.store.media\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "Settings",
            "range": [
                43,
                51
            ],
            "children": [],
            "content": "from backend.util.settings import Settings\n"
        },
        {
            "type": "FunctionDecl",
            "name": "mock_settings",
            "range": [
                59,
                101
            ],
            "children": [
                {
                    "type": "Parameter",
                    "name": "monkeypatch",
                    "range": [
                        62,
                        62
                    ],
                    "children": [],
                    "content": "monkeypatch"
                },
                {
                    "type": "BlockStatement",
                    "range": [
                        64,
                        101
                    ],
                    "children": [
                        {
                            "type": "VariableDecl",
                            "name": "settings",
                            "range": [
                                66,
                                70
                            ],
                            "children": [
                                {
                                    "type": "AssignmentExpression",
                                    "range": [
                                        67,
                                        70
                                    ],
                                    "children": [
                                        {
                                            "type": "NewExpression",
                                            "name": "Settings",
                                            "range": [
                                                68,
                                                70
                                            ],
                                            "children": [],
                                            "content": "Settings()"
                                        }
                                    ],
                                    "content": "=Settings()"
                                }
                            ],
                            "content": "settings=Settings()"
                        },
                        {
                            "type": "ExpressionStatement",
                            "range": [
                                72,
                                78
                            ],
                            "children": [
                                {
                                    "type": "AssignmentExpression",
                                    "range": [
                                        77,
                                        78
                                    ],
                                    "children": [
                                        {
                                            "type": "MemberExpression",
                                            "range": [
                                                72,
                                                76
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "settings",
                                                    "range": [
                                                        72,
                                                        72
                                                    ],
                                                    "children": [],
                                                    "content": "settings"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "config",
                                                    "range": [
                                                        74,
                                                        74
                                                    ],
                                                    "children": [],
                                                    "content": "config"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "media_gcs_bucket_name",
                                                    "range": [
                                                        76,
                                                        76
                                                    ],
                                                    "children": [],
                                                    "content": "media_gcs_bucket_name"
                                                }
                                            ],
                                            "content": "settings.config.media_gcs_bucket_name"
                                        },
                                        {
                                            "type": "Literal",
                                            "value": "test-bucket",
                                            "range": [
                                                78,
                                                78
                                            ],
                                            "children": [],
                                            "content": "\"test-bucket\""
                                        }
                                    ],
                                    "content": "=\"test-bucket\""
                                }
                            ],
                            "content": "settings.config.media_gcs_bucket_name=\"test-bucket\""
                        },
                        {
                            "type": "ExpressionStatement",
                            "range": [
                                80,
                                86
                            ],
                            "children": [
                                {
                                    "type": "AssignmentExpression",
                                    "range": [
                                        85,
                                        86
                                    ],
                                    "children": [
                                        {
                                            "type": "MemberExpression",
                                            "range": [
                                                80,
                                                84
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "settings",
                                                    "range": [
                                                        80,
                                                        80
                                                    ],
                                                    "children": [],
                                                    "content": "settings"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "config",
                                                    "range": [
                                                        82,
                                                        82
                                                    ],
                                                    "children": [],
                                                    "content": "config"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "google_application_credentials",
                                                    "range": [
                                                        84,
                                                        84
                                                    ],
                                                    "children": [],
                                                    "content": "google_application_credentials"
                                                }
                                            ],
                                            "content": "settings.config.google_application_credentials"
                                        },
                                        {
                                            "type": "Literal",
                                            "value": "test-credentials",
                                            "range": [
                                                86,
                                                86
                                            ],
                                            "children": [],
                                            "content": "\"test-credentials\""
                                        }
                                    ],
                                    "content": "=\"test-credentials\""
                                }
                            ],
                            "content": "settings.config.google_application_credentials=\"test-credentials\""
                        },
                        {
                            "type": "ExpressionStatement",
                            "range": [
                                88,
                                97
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "range": [
                                        90,
                                        97
                                    ],
                                    "children": [
                                        {
                                            "type": "MemberExpression",
                                            "range": [
                                                88,
                                                90
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "monkeypatch",
                                                    "range": [
                                                        88,
                                                        88
                                                    ],
                                                    "children": [],
                                                    "content": "monkeypatch"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "setattr",
                                                    "range": [
                                                        90,
                                                        90
                                                    ],
                                                    "children": [],
                                                    "content": "setattr"
                                                }
                                            ],
                                            "content": "monkeypatch.setattr"
                                        },
                                        {
                                            "type": "Literal",
                                            "value": "backend.server.v2.store.media.Settings",
                                            "range": [
                                                92,
                                                92
                                            ],
                                            "children": [],
                                            "content": "\"backend.server.v2.store.media.Settings\""
                                        },
                                        {
                                            "type": "ArrowFunctionExpression",
                                            "range": [
                                                94,
                                                97
                                            ],
                                            "children": [
                                                {
                                                    "type": "BlockStatement",
                                                    "range": [
                                                        96,
                                                        97
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "settings",
                                                            "range": [
                                                                96,
                                                                96
                                                            ],
                                                            "children": [],
                                                            "content": "settings"
                                                        }
                                                    ],
                                                    "content": "settings)"
                                                }
                                            ],
                                            "content": "lambda:settings)"
                                        }
                                    ],
                                    "content": "setattr(\"backend.server.v2.store.media.Settings\",lambda:settings)"
                                }
                            ],
                            "content": "monkeypatch.setattr(\"backend.server.v2.store.media.Settings\",lambda:settings)"
                        },
                        {
                            "type": "ReturnStatement",
                            "range": [
                                99,
                                100
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "settings",
                                    "range": [
                                        100,
                                        100
                                    ],
                                    "children": [],
                                    "content": "settings"
                                }
                            ],
                            "content": "return settings"
                        }
                    ],
                    "content": ":\nsettings=Settings()\nsettings.config.media_gcs_bucket_name=\"test-bucket\"\nsettings.config.google_application_credentials=\"test-credentials\"\nmonkeypatch.setattr(\"backend.server.v2.store.media.Settings\",lambda:settings)\nreturn settings\n"
                }
            ],
            "content": "def mock_settings(monkeypatch):\nsettings=Settings()\nsettings.config.media_gcs_bucket_name=\"test-bucket\"\nsettings.config.google_application_credentials=\"test-credentials\"\nmonkeypatch.setattr(\"backend.server.v2.store.media.Settings\",lambda:settings)\nreturn settings\n"
        },
        {
            "type": "FunctionDecl",
            "name": "mock_storage_client",
            "range": [
                107,
                182
            ],
            "children": [
                {
                    "type": "VariableDecl",
                    "name": "mock_client",
                    "range": [
                        114,
                        122
                    ],
                    "children": [
                        {
                            "type": "AssignmentExpression",
                            "name": "=",
                            "range": [
                                115,
                                122
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "MagicMock",
                                    "range": [
                                        116,
                                        122
                                    ],
                                    "children": [],
                                    "content": "mock_client=unittest.mock.MagicMock"
                                }
                            ],
                            "content": "\nmock_client=unittest.mock.MagicMock"
                        }
                    ],
                    "content": ":\nmock_client=unittest.mock.MagicMock"
                },
                {
                    "type": "VariableDecl",
                    "name": "mock_bucket",
                    "range": [
                        124,
                        132
                    ],
                    "children": [
                        {
                            "type": "AssignmentExpression",
                            "name": "=",
                            "range": [
                                125,
                                132
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "MagicMock",
                                    "range": [
                                        126,
                                        132
                                    ],
                                    "children": [],
                                    "content": "mock_bucket=unittest.mock.MagicMock"
                                }
                            ],
                            "content": "\nmock_bucket=unittest.mock.MagicMock"
                        }
                    ],
                    "content": ")\nmock_bucket=unittest.mock.MagicMock"
                },
                {
                    "type": "VariableDecl",
                    "name": "mock_blob",
                    "range": [
                        134,
                        142
                    ],
                    "children": [
                        {
                            "type": "AssignmentExpression",
                            "name": "=",
                            "range": [
                                135,
                                142
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "MagicMock",
                                    "range": [
                                        136,
                                        142
                                    ],
                                    "children": [],
                                    "content": "mock_blob=unittest.mock.MagicMock"
                                }
                            ],
                            "content": "\nmock_blob=unittest.mock.MagicMock"
                        }
                    ],
                    "content": ")\nmock_blob=unittest.mock.MagicMock"
                },
                {
                    "type": "ExpressionStatement",
                    "name": "",
                    "range": [
                        145,
                        152
                    ],
                    "children": [
                        {
                            "type": "AssignmentExpression",
                            "name": "=",
                            "range": [
                                150,
                                152
                            ],
                            "children": [
                                {
                                    "type": "MemberExpression",
                                    "name": ".",
                                    "range": [
                                        146,
                                        149
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "mock_client",
                                            "range": [
                                                145,
                                                146
                                            ],
                                            "children": [],
                                            "content": "\n\n"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "bucket",
                                            "range": [
                                                147,
                                                148
                                            ],
                                            "children": [],
                                            "content": "mock_client."
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "return_value",
                                            "range": [
                                                149,
                                                149
                                            ],
                                            "children": [],
                                            "content": "bucket"
                                        }
                                    ],
                                    "content": "\nmock_client.bucket"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "mock_bucket",
                                    "range": [
                                        151,
                                        152
                                    ],
                                    "children": [],
                                    "content": "return_value="
                                }
                            ],
                            "content": ".return_value="
                        }
                    ],
                    "content": "\n\nmock_client.bucket.return_value="
                },
                {
                    "type": "ExpressionStatement",
                    "name": "",
                    "range": [
                        153,
                        160
                    ],
                    "children": [
                        {
                            "type": "AssignmentExpression",
                            "name": "=",
                            "range": [
                                158,
                                160
                            ],
                            "children": [
                                {
                                    "type": "MemberExpression",
                                    "name": ".",
                                    "range": [
                                        154,
                                        157
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "mock_bucket",
                                            "range": [
                                                153,
                                                154
                                            ],
                                            "children": [],
                                            "content": "mock_bucket\n"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "blob",
                                            "range": [
                                                155,
                                                156
                                            ],
                                            "children": [],
                                            "content": "mock_bucket."
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "return_value",
                                            "range": [
                                                157,
                                                157
                                            ],
                                            "children": [],
                                            "content": "blob"
                                        }
                                    ],
                                    "content": "\nmock_bucket.blob"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "mock_blob",
                                    "range": [
                                        159,
                                        160
                                    ],
                                    "children": [],
                                    "content": "return_value="
                                }
                            ],
                            "content": ".return_value="
                        }
                    ],
                    "content": "mock_bucket\nmock_bucket.blob.return_value="
                },
                {
                    "type": "ExpressionStatement",
                    "name": "",
                    "range": [
                        161,
                        166
                    ],
                    "children": [
                        {
                            "type": "AssignmentExpression",
                            "name": "=",
                            "range": [
                                164,
                                166
                            ],
                            "children": [
                                {
                                    "type": "MemberExpression",
                                    "name": ".",
                                    "range": [
                                        162,
                                        163
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "mock_blob",
                                            "range": [
                                                161,
                                                162
                                            ],
                                            "children": [],
                                            "content": "mock_blob\n"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "public_url",
                                            "range": [
                                                163,
                                                163
                                            ],
                                            "children": [],
                                            "content": "mock_blob"
                                        }
                                    ],
                                    "content": "\nmock_blob"
                                },
                                {
                                    "type": "Literal",
                                    "name": "\"http://test-url/media/laptop.jpeg\"",
                                    "range": [
                                        165,
                                        166
                                    ],
                                    "children": [],
                                    "content": "public_url="
                                }
                            ],
                            "content": ".public_url="
                        }
                    ],
                    "content": "mock_blob\nmock_blob.public_url="
                },
                {
                    "type": "ExpressionStatement",
                    "name": "",
                    "range": [
                        168,
                        178
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "patch",
                            "range": [
                                170,
                                178
                            ],
                            "children": [
                                {
                                    "type": "MemberExpression",
                                    "name": ".",
                                    "range": [
                                        169,
                                        170
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "mocker",
                                            "range": [
                                                168,
                                                169
                                            ],
                                            "children": [],
                                            "content": "\n\n"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "patch",
                                            "range": [
                                                170,
                                                170
                                            ],
                                            "children": [],
                                            "content": "mocker"
                                        }
                                    ],
                                    "content": "\nmocker"
                                },
                                {
                                    "type": "Literal",
                                    "name": "\"google.cloud.storage.Client\"",
                                    "range": [
                                        172,
                                        173
                                    ],
                                    "children": [],
                                    "content": "patch("
                                },
                                {
                                    "type": "AssignmentExpression",
                                    "name": "=",
                                    "range": [
                                        175,
                                        176
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "return_value",
                                            "range": [
                                                174,
                                                175
                                            ],
                                            "children": [],
                                            "content": "\"google.cloud.storage.Client\","
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "mock_client",
                                            "range": [
                                                176,
                                                176
                                            ],
                                            "children": [],
                                            "content": "return_value"
                                        }
                                    ],
                                    "content": ",return_value"
                                }
                            ],
                            "content": "mocker.patch(\"google.cloud.storage.Client\",return_value=mock_client"
                        }
                    ],
                    "content": "\n\nmocker.patch(\"google.cloud.storage.Client\",return_value=mock_client"
                },
                {
                    "type": "ReturnStatement",
                    "name": "",
                    "range": [
                        180,
                        182
                    ],
                    "children": [
                        {
                            "type": "Identifier",
                            "name": "mock_client",
                            "range": [
                                181,
                                182
                            ],
                            "children": [],
                            "content": "\nreturn"
                        }
                    ],
                    "content": "\n\nreturn"
                }
            ],
            "content": "fixture\ndef mock_storage_client(mocker):\nmock_client=unittest.mock.MagicMock()\nmock_bucket=unittest.mock.MagicMock()\nmock_blob=unittest.mock.MagicMock()\n\nmock_client.bucket.return_value=mock_bucket\nmock_bucket.blob.return_value=mock_blob\nmock_blob.public_url=\"http://test-url/media/laptop.jpeg\"\n\nmocker.patch(\"google.cloud.storage.Client\",return_value=mock_client)\n\nreturn"
        },
        {
            "type": "FunctionDecl",
            "name": "test_upload_media_success",
            "range": [
                183,
                303
            ],
            "children": [
                {
                    "type": "ParameterList",
                    "name": "parameters",
                    "range": [
                        186,
                        190
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "mock_settings",
                            "range": [
                                187,
                                187
                            ],
                            "children": [],
                            "content": "async"
                        },
                        {
                            "type": "Parameter",
                            "name": "mock_storage_client",
                            "range": [
                                189,
                                189
                            ],
                            "children": [],
                            "content": "test_upload_media_success"
                        }
                    ],
                    "content": "\nasync def test_upload_media_success("
                },
                {
                    "type": "BlockStatement",
                    "name": "body",
                    "range": [
                        192,
                        303
                    ],
                    "children": [
                        {
                            "type": "Comment",
                            "name": "Create test JPEG data with valid signature",
                            "range": [
                                193,
                                201
                            ],
                            "children": [],
                            "content": "mock_storage_client):\n#Create test JPEG data"
                        },
                        {
                            "type": "VariableDecl",
                            "name": "test_data",
                            "range": [
                                202,
                                209
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "b\"\\xFF\\xD8\\xFF\"",
                                    "range": [
                                        204,
                                        205
                                    ],
                                    "children": [],
                                    "content": "signature\n"
                                },
                                {
                                    "type": "Literal",
                                    "name": "b\"test data\"",
                                    "range": [
                                        207,
                                        208
                                    ],
                                    "children": [],
                                    "content": "=b"
                                }
                            ],
                            "content": "with valid signature\ntest_data=b \"\\xFF\\xD8\\xFF\""
                        },
                        {
                            "type": "VariableDecl",
                            "name": "test_file",
                            "range": [
                                211,
                                250
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "UploadFile",
                                    "range": [
                                        213,
                                        249
                                    ],
                                    "children": [
                                        {
                                            "type": "Argument",
                                            "name": "filename=\"laptop.jpeg\"",
                                            "range": [
                                                218,
                                                220
                                            ],
                                            "children": [],
                                            "content": ".UploadFile("
                                        },
                                        {
                                            "type": "Argument",
                                            "name": "file=io.BytesIO(test_data)",
                                            "range": [
                                                223,
                                                230
                                            ],
                                            "children": [],
                                            "content": "=\"laptop.jpeg\",\nfile=io."
                                        },
                                        {
                                            "type": "Argument",
                                            "name": "headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"})",
                                            "range": [
                                                233,
                                                246
                                            ],
                                            "children": [],
                                            "content": "test_data),\nheaders=starlette.datastructures.Headers({\"content-type\""
                                        }
                                    ],
                                    "content": "\n\ntest_file=fastapi.UploadFile(\nfilename=\"laptop.jpeg\",\nfile=io.BytesIO(test_data),\nheaders=starlette.datastructures.Headers({\"content-type\":\"image/jpeg\"}"
                                }
                            ],
                            "content": "b \"test data\"\n\ntest_file=fastapi.UploadFile(\nfilename=\"laptop.jpeg\",\nfile=io.BytesIO(test_data),\nheaders=starlette.datastructures.Headers({\"content-type\":\"image/jpeg\"})"
                        },
                        {
                            "type": "VariableDecl",
                            "name": "result",
                            "range": [
                                252,
                                271
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "upload_media",
                                    "range": [
                                        255,
                                        270
                                    ],
                                    "children": [
                                        {
                                            "type": "Argument",
                                            "name": "\"test-user\"",
                                            "range": [
                                                267,
                                                267
                                            ],
                                            "children": [],
                                            "content": "media"
                                        },
                                        {
                                            "type": "Argument",
                                            "name": "test_file",
                                            "range": [
                                                269,
                                                269
                                            ],
                                            "children": [],
                                            "content": "upload_media"
                                        }
                                    ],
                                    "content": "\nresult=await backend.server.v2.store.media.upload_media("
                                }
                            ],
                            "content": "\n)\n\nresult=await backend.server.v2.store.media.upload_media(\"test-user\""
                        },
                        {
                            "type": "AssertStatement",
                            "name": "assert result == \"http://test-url/media/laptop.jpeg\"",
                            "range": [
                                273,
                                278
                            ],
                            "children": [],
                            "content": "test_file)\n\nassert result"
                        },
                        {
                            "type": "VariableDecl",
                            "name": "mock_bucket",
                            "range": [
                                279,
                                286
                            ],
                            "children": [
                                {
                                    "type": "MemberExpression",
                                    "name": "mock_storage_client.bucket.return_value",
                                    "range": [
                                        281,
                                        285
                                    ],
                                    "children": [],
                                    "content": "\"http://test-url/media/laptop.jpeg\"\nmock_bucket=mock_storage_client"
                                }
                            ],
                            "content": "==\"http://test-url/media/laptop.jpeg\"\nmock_bucket=mock_storage_client."
                        },
                        {
                            "type": "VariableDecl",
                            "name": "mock_blob",
                            "range": [
                                287,
                                294
                            ],
                            "children": [
                                {
                                    "type": "MemberExpression",
                                    "name": "mock_bucket.blob.return_value",
                                    "range": [
                                        289,
                                        293
                                    ],
                                    "children": [],
                                    "content": "return_value\nmock_blob=mock_bucket"
                                }
                            ],
                            "content": "bucket.return_value\nmock_blob=mock_bucket."
                        },
                        {
                            "type": "ExpressionStatement",
                            "name": "mock_blob.upload_from_string.assert_called_once()",
                            "range": [
                                295,
                                302
                            ],
                            "children": [],
                            "content": "blob.return_value\nmock_blob.upload_from_string."
                        }
                    ],
                    "content": ",mock_storage_client):\n#Create test JPEG data with valid signature\ntest_data=b \"\\xFF\\xD8\\xFF\"+b \"test data\"\n\ntest_file=fastapi.UploadFile(\nfilename=\"laptop.jpeg\",\nfile=io.BytesIO(test_data),\nheaders=starlette.datastructures.Headers({\"content-type\":\"image/jpeg\"}),\n)\n\nresult=await backend.server.v2.store.media.upload_media(\"test-user\",test_file)\n\nassert result==\"http://test-url/media/laptop.jpeg\"\nmock_bucket=mock_storage_client.bucket.return_value\nmock_blob=mock_bucket.blob.return_value\nmock_blob.upload_from_string.assert_called_once"
                }
            ],
            "content": "mock_client\n\n\nasync def test_upload_media_success(mock_settings,mock_storage_client):\n#Create test JPEG data with valid signature\ntest_data=b \"\\xFF\\xD8\\xFF\"+b \"test data\"\n\ntest_file=fastapi.UploadFile(\nfilename=\"laptop.jpeg\",\nfile=io.BytesIO(test_data),\nheaders=starlette.datastructures.Headers({\"content-type\":\"image/jpeg\"}),\n)\n\nresult=await backend.server.v2.store.media.upload_media(\"test-user\",test_file)\n\nassert result==\"http://test-url/media/laptop.jpeg\"\nmock_bucket=mock_storage_client.bucket.return_value\nmock_blob=mock_bucket.blob.return_value\nmock_blob.upload_from_string.assert_called_once"
        },
        {
            "type": "FunctionDecl",
            "name": "test_upload_media_invalid_type",
            "range": [
                304,
                392
            ],
            "children": [
                {
                    "type": "Keyword",
                    "name": "async",
                    "range": [
                        304,
                        308
                    ],
                    "children": [],
                    "content": "()\n\n\n"
                },
                {
                    "type": "Keyword",
                    "name": "def",
                    "range": [
                        305,
                        308
                    ],
                    "children": [],
                    "content": ")\n\n\n"
                },
                {
                    "type": "Identifier",
                    "name": "test_upload_media_invalid_type",
                    "range": [
                        306,
                        334
                    ],
                    "children": [],
                    "content": "\n\n\nasync def test_upload_media_invalid_type(mock_settings,mock_storage_client):\ntest_file=fastapi.UploadFile(\nfilename=\"test.txt\",\nfile=io."
                },
                {
                    "type": "ParameterList",
                    "name": "",
                    "range": [
                        307,
                        311
                    ],
                    "children": [
                        {
                            "type": "Identifier",
                            "name": "mock_settings",
                            "range": [
                                308,
                                321
                            ],
                            "children": [],
                            "content": "\nasync def test_upload_media_invalid_type(mock_settings,mock_storage_client):\ntest_file=fastapi"
                        },
                        {
                            "type": "Identifier",
                            "name": "mock_storage_client",
                            "range": [
                                310,
                                330
                            ],
                            "children": [],
                            "content": "def test_upload_media_invalid_type(mock_settings,mock_storage_client):\ntest_file=fastapi.UploadFile(\nfilename=\"test.txt\",\n"
                        }
                    ],
                    "content": "\n\nasync def test_upload_media_invalid_type"
                },
                {
                    "type": "Block",
                    "name": "",
                    "range": [
                        312,
                        392
                    ],
                    "children": [
                        {
                            "type": "VariableDecl",
                            "name": "test_file",
                            "range": [
                                314,
                                353
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "test_file",
                                    "range": [
                                        314,
                                        323
                                    ],
                                    "children": [],
                                    "content": ",mock_storage_client):\ntest_file=fastapi.UploadFile"
                                },
                                {
                                    "type": "AssignmentExpression",
                                    "name": "=",
                                    "range": [
                                        315,
                                        316
                                    ],
                                    "children": [],
                                    "content": "mock_storage_client)"
                                },
                                {
                                    "type": "NewExpression",
                                    "name": "UploadFile",
                                    "range": [
                                        316,
                                        353
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "fastapi",
                                            "range": [
                                                316,
                                                323
                                            ],
                                            "children": [],
                                            "content": "):\ntest_file=fastapi.UploadFile"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "UploadFile",
                                            "range": [
                                                318,
                                                327
                                            ],
                                            "children": [],
                                            "content": "\ntest_file=fastapi.UploadFile(\nfilename="
                                        },
                                        {
                                            "type": "ArgumentList",
                                            "name": "",
                                            "range": [
                                                319,
                                                353
                                            ],
                                            "children": [
                                                {
                                                    "type": "NamedArgument",
                                                    "name": "filename",
                                                    "range": [
                                                        321,
                                                        332
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Literal",
                                                            "name": "\"test.txt\"",
                                                            "range": [
                                                                323,
                                                                332
                                                            ],
                                                            "children": [],
                                                            "content": "UploadFile(\nfilename=\"test.txt\",\nfile="
                                                        }
                                                    ],
                                                    "content": "fastapi.UploadFile(\nfilename=\"test.txt\",\nfile="
                                                },
                                                {
                                                    "type": "NamedArgument",
                                                    "name": "file",
                                                    "range": [
                                                        326,
                                                        334
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "NewExpression",
                                                            "name": "BytesIO",
                                                            "range": [
                                                                328,
                                                                334
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "io",
                                                                    "range": [
                                                                        328,
                                                                        330
                                                                    ],
                                                                    "children": [],
                                                                    "content": "\"test.txt\",\n"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "BytesIO",
                                                                    "range": [
                                                                        330,
                                                                        337
                                                                    ],
                                                                    "children": [],
                                                                    "content": "\nfile=io.BytesIO(b"
                                                                },
                                                                {
                                                                    "type": "ArgumentList",
                                                                    "name": "",
                                                                    "range": [
                                                                        331,
                                                                        334
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "BinaryExpression",
                                                                            "name": "b",
                                                                            "range": [
                                                                                332,
                                                                                333
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "Literal",
                                                                                    "name": "\"test data\"",
                                                                                    "range": [
                                                                                        333,
                                                                                        344
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "io.BytesIO(b \"test data\"),\nheaders=starlette"
                                                                                }
                                                                            ],
                                                                            "content": "=io"
                                                                        }
                                                                    ],
                                                                    "content": "file=io."
                                                                }
                                                            ],
                                                            "content": "\"test.txt\",\nfile=io."
                                                        }
                                                    ],
                                                    "content": "filename=\"test.txt\",\nfile=io."
                                                },
                                                {
                                                    "type": "NamedArgument",
                                                    "name": "headers",
                                                    "range": [
                                                        337,
                                                        350
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "NewExpression",
                                                            "name": "Headers",
                                                            "range": [
                                                                339,
                                                                350
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "starlette",
                                                                    "range": [
                                                                        339,
                                                                        348
                                                                    ],
                                                                    "children": [],
                                                                    "content": "),\nheaders=starlette.datastructures.Headers"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "datastructures",
                                                                    "range": [
                                                                        340,
                                                                        353
                                                                    ],
                                                                    "children": [],
                                                                    "content": ",\nheaders=starlette.datastructures.Headers({\"content-type\":\"text/plain\""
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "Headers",
                                                                    "range": [
                                                                        343,
                                                                        350
                                                                    ],
                                                                    "children": [],
                                                                    "content": "=starlette.datastructures.Headers({"
                                                                },
                                                                {
                                                                    "type": "ArgumentList",
                                                                    "name": "",
                                                                    "range": [
                                                                        344,
                                                                        350
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "ObjectLiteral",
                                                                            "name": "",
                                                                            "range": [
                                                                                345,
                                                                                349
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "Property",
                                                                                    "name": "content-type",
                                                                                    "range": [
                                                                                        346,
                                                                                        348
                                                                                    ],
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "Literal",
                                                                                            "name": "\"text/plain\"",
                                                                                            "range": [
                                                                                                348,
                                                                                                359
                                                                                            ],
                                                                                            "children": [],
                                                                                            "content": "Headers({\"content-type\":\"text/plain\"}),\n)\n"
                                                                                        }
                                                                                    ],
                                                                                    "content": "datastructures.Headers"
                                                                                }
                                                                            ],
                                                                            "content": ".datastructures.Headers("
                                                                        }
                                                                    ],
                                                                    "content": "starlette.datastructures.Headers({"
                                                                }
                                                            ],
                                                            "content": "),\nheaders=starlette.datastructures.Headers({"
                                                        }
                                                    ],
                                                    "content": "b \"test data\"),\nheaders=starlette.datastructures.Headers({"
                                                }
                                            ],
                                            "content": "test_file=fastapi.UploadFile(\nfilename=\"test.txt\",\nfile=io.BytesIO(b \"test data\"),\nheaders=starlette.datastructures.Headers({\"content-type\":\"text/plain\""
                                        }
                                    ],
                                    "content": "):\ntest_file=fastapi.UploadFile(\nfilename=\"test.txt\",\nfile=io.BytesIO(b \"test data\"),\nheaders=starlette.datastructures.Headers({\"content-type\":\"text/plain\""
                                }
                            ],
                            "content": ",mock_storage_client):\ntest_file=fastapi.UploadFile(\nfilename=\"test.txt\",\nfile=io.BytesIO(b \"test data\"),\nheaders=starlette.datastructures.Headers({\"content-type\":\"text/plain\""
                        },
                        {
                            "type": "WithStatement",
                            "name": "",
                            "range": [
                                356,
                                392
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "raises",
                                    "range": [
                                        357,
                                        372
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "pytest",
                                            "range": [
                                                357,
                                                363
                                            ],
                                            "children": [],
                                            "content": "\n)\n\nwith pytest."
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "raises",
                                            "range": [
                                                359,
                                                365
                                            ],
                                            "children": [],
                                            "content": "\n\nwith pytest.raises("
                                        },
                                        {
                                            "type": "ArgumentList",
                                            "name": "",
                                            "range": [
                                                360,
                                                372
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "InvalidFileTypeError",
                                                    "range": [
                                                        361,
                                                        380
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "backend",
                                                            "range": [
                                                                361,
                                                                368
                                                            ],
                                                            "children": [],
                                                            "content": "with pytest.raises(backend.server"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "server",
                                                            "range": [
                                                                362,
                                                                368
                                                            ],
                                                            "children": [],
                                                            "content": "pytest.raises(backend.server"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "v2",
                                                            "range": [
                                                                364,
                                                                366
                                                            ],
                                                            "children": [],
                                                            "content": "raises(backend"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "store",
                                                            "range": [
                                                                366,
                                                                371
                                                            ],
                                                            "children": [],
                                                            "content": "backend.server.v2."
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "exceptions",
                                                            "range": [
                                                                369,
                                                                379
                                                            ],
                                                            "children": [],
                                                            "content": ".v2.store.exceptions.InvalidFileTypeError):\n"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "InvalidFileTypeError",
                                                            "range": [
                                                                371,
                                                                392
                                                            ],
                                                            "children": [],
                                                            "content": ".store.exceptions.InvalidFileTypeError):\nawait backend.server.v2.store.media.upload_media("
                                                        }
                                                    ],
                                                    "content": "with pytest.raises(backend.server.v2.store.exceptions.InvalidFileTypeError):\nawait"
                                                }
                                            ],
                                            "content": "\nwith pytest.raises(backend.server.v2.store"
                                        }
                                    ],
                                    "content": "\n)\n\nwith pytest.raises(backend.server.v2.store"
                                },
                                {
                                    "type": "Block",
                                    "name": "",
                                    "range": [
                                        373,
                                        392
                                    ],
                                    "children": [
                                        {
                                            "type": "ExpressionStatement",
                                            "name": "",
                                            "range": [
                                                375,
                                                392
                                            ],
                                            "children": [
                                                {
                                                    "type": "AwaitExpression",
                                                    "name": "",
                                                    "range": [
                                                        375,
                                                        392
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "CallExpression",
                                                            "name": "upload_media",
                                                            "range": [
                                                                376,
                                                                391
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "backend",
                                                                    "range": [
                                                                        376,
                                                                        383
                                                                    ],
                                                                    "children": [],
                                                                    "content": "InvalidFileTypeError):\nawait backend.server"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "server",
                                                                    "range": [
                                                                        377,
                                                                        383
                                                                    ],
                                                                    "children": [],
                                                                    "content": "):\nawait backend.server"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "v2",
                                                                    "range": [
                                                                        379,
                                                                        381
                                                                    ],
                                                                    "children": [],
                                                                    "content": "\nawait backend"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "store",
                                                                    "range": [
                                                                        381,
                                                                        386
                                                                    ],
                                                                    "children": [],
                                                                    "content": "backend.server.v2."
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "media",
                                                                    "range": [
                                                                        383,
                                                                        388
                                                                    ],
                                                                    "children": [],
                                                                    "content": "server.v2.store."
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "upload_media",
                                                                    "range": [
                                                                        386,
                                                                        398
                                                                    ],
                                                                    "children": [],
                                                                    "content": ".store.media.upload_media(\"test-user\",test_file)\n\n"
                                                                },
                                                                {
                                                                    "type": "ArgumentList",
                                                                    "name": "",
                                                                    "range": [
                                                                        387,
                                                                        391
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Literal",
                                                                            "name": "\"test-user\"",
                                                                            "range": [
                                                                                388,
                                                                                399
                                                                            ],
                                                                            "children": [],
                                                                            "content": ".media.upload_media(\"test-user\",test_file)\n\nmock_bucket"
                                                                        },
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "test_file",
                                                                            "range": [
                                                                                390,
                                                                                399
                                                                            ],
                                                                            "children": [],
                                                                            "content": ".upload_media(\"test-user\",test_file)\n\nmock_bucket"
                                                                        }
                                                                    ],
                                                                    "content": "store.media.upload_media"
                                                                }
                                                            ],
                                                            "content": "InvalidFileTypeError):\nawait backend.server.v2.store.media.upload_media"
                                                        }
                                                    ],
                                                    "content": ".InvalidFileTypeError):\nawait backend.server.v2.store.media.upload_media("
                                                }
                                            ],
                                            "content": ".InvalidFileTypeError):\nawait backend.server.v2.store.media.upload_media("
                                        }
                                    ],
                                    "content": ".exceptions.InvalidFileTypeError):\nawait backend.server.v2.store.media.upload_media("
                                }
                            ],
                            "content": ",\n)\n\nwith pytest.raises(backend.server.v2.store.exceptions.InvalidFileTypeError):\nawait backend.server.v2.store.media.upload_media("
                        }
                    ],
                    "content": "(mock_settings,mock_storage_client):\ntest_file=fastapi.UploadFile(\nfilename=\"test.txt\",\nfile=io.BytesIO(b \"test data\"),\nheaders=starlette.datastructures.Headers({\"content-type\":\"text/plain\"}),\n)\n\nwith pytest.raises(backend.server.v2.store.exceptions.InvalidFileTypeError):\nawait backend.server.v2.store.media.upload_media("
                }
            ],
            "content": "()\n\n\nasync def test_upload_media_invalid_type(mock_settings,mock_storage_client):\ntest_file=fastapi.UploadFile(\nfilename=\"test.txt\",\nfile=io.BytesIO(b \"test data\"),\nheaders=starlette.datastructures.Headers({\"content-type\":\"text/plain\"}),\n)\n\nwith pytest.raises(backend.server.v2.store.exceptions.InvalidFileTypeError):\nawait backend.server.v2.store.media.upload_media("
        },
        {
            "type": "ExpressionStatement",
            "name": "",
            "range": [
                394,
                417
            ],
            "children": [
                {
                    "type": "AssignmentExpression",
                    "name": "=",
                    "range": [
                        395,
                        396
                    ],
                    "children": [
                        {
                            "type": "Identifier",
                            "name": "mock_bucket",
                            "range": [
                                394,
                                405
                            ],
                            "children": [],
                            "content": ",test_file)\n\nmock_bucket=mock_storage_client.bucket.return_value"
                        },
                        {
                            "type": "MemberExpression",
                            "name": ".",
                            "range": [
                                396,
                                401
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "mock_storage_client",
                                    "range": [
                                        396,
                                        414
                                    ],
                                    "children": [],
                                    "content": ")\n\nmock_bucket=mock_storage_client.bucket.return_value\nmock_blob=mock_bucket.blob.return_value\n"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "bucket",
                                    "range": [
                                        397,
                                        403
                                    ],
                                    "children": [],
                                    "content": "\n\nmock_bucket=mock_storage_client.bucket"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "return_value",
                                    "range": [
                                        399,
                                        411
                                    ],
                                    "children": [],
                                    "content": "mock_bucket=mock_storage_client.bucket.return_value\nmock_blob=mock_bucket.blob"
                                }
                            ],
                            "content": ")\n\nmock_bucket=mock_storage_client"
                        }
                    ],
                    "content": "test_file)"
                }
            ],
            "content": ",test_file)\n\nmock_bucket=mock_storage_client.bucket.return_value\nmock_blob=mock_bucket.blob.return_value\nmock_blob.upload_from_string"
        },
        {
            "type": "ExpressionStatement",
            "name": "",
            "range": [
                402,
                417
            ],
            "children": [
                {
                    "type": "AssignmentExpression",
                    "name": "=",
                    "range": [
                        403,
                        404
                    ],
                    "children": [
                        {
                            "type": "Identifier",
                            "name": "mock_blob",
                            "range": [
                                402,
                                411
                            ],
                            "children": [],
                            "content": ".bucket.return_value\nmock_blob=mock_bucket.blob"
                        },
                        {
                            "type": "MemberExpression",
                            "name": ".",
                            "range": [
                                404,
                                409
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "mock_bucket",
                                    "range": [
                                        404,
                                        415
                                    ],
                                    "children": [],
                                    "content": ".return_value\nmock_blob=mock_bucket.blob.return_value\nmock_blob"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "blob",
                                    "range": [
                                        405,
                                        409
                                    ],
                                    "children": [],
                                    "content": "return_value\nmock_blob=mock_bucket"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "return_value",
                                    "range": [
                                        407,
                                        419
                                    ],
                                    "children": [],
                                    "content": "mock_blob=mock_bucket.blob.return_value\nmock_blob.upload_from_string.assert_not_called"
                                }
                            ],
                            "content": ".return_value\nmock_blob=mock_bucket"
                        }
                    ],
                    "content": "bucket."
                }
            ],
            "content": ".bucket.return_value\nmock_blob=mock_bucket.blob.return_value\nmock_blob.upload_from_string"
        },
        {
            "type": "ExpressionStatement",
            "name": "",
            "range": [
                410,
                417
            ],
            "children": [
                {
                    "type": "CallExpression",
                    "name": "assert_not_called",
                    "range": [
                        411,
                        416
                    ],
                    "children": [
                        {
                            "type": "Identifier",
                            "name": "mock_blob",
                            "range": [
                                410,
                                419
                            ],
                            "children": [],
                            "content": ".blob.return_value\nmock_blob.upload_from_string.assert_not_called"
                        },
                        {
                            "type": "Identifier",
                            "name": "upload_from_string",
                            "range": [
                                412,
                                430
                            ],
                            "children": [],
                            "content": ".return_value\nmock_blob.upload_from_string.assert_not_called()\n\n\nasync def test_upload_media_missing_credentials(monkeypatch)"
                        },
                        {
                            "type": "Identifier",
                            "name": "assert_not_called",
                            "range": [
                                414,
                                430
                            ],
                            "children": [],
                            "content": "\nmock_blob.upload_from_string.assert_not_called()\n\n\nasync def test_upload_media_missing_credentials(monkeypatch)"
                        }
                    ],
                    "content": "blob.return_value\nmock_blob."
                }
            ],
            "content": ".blob.return_value\nmock_blob.upload_from_string"
        },
        {
            "type": "FunctionDecl",
            "name": "test_upload_media_missing_credentials",
            "range": [
                418,
                546
            ],
            "children": [
                {
                    "type": "VariableDecl",
                    "name": "settings",
                    "range": [
                        426,
                        430
                    ],
                    "children": [
                        {
                            "type": "AssignmentExpression",
                            "name": "",
                            "range": [
                                427,
                                430
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "Settings",
                                    "range": [
                                        428,
                                        430
                                    ],
                                    "children": [],
                                    "content": "(monkeypatch)"
                                }
                            ],
                            "content": "test_upload_media_missing_credentials(monkeypatch)"
                        }
                    ],
                    "content": "def test_upload_media_missing_credentials(monkeypatch)"
                },
                {
                    "type": "AssignmentExpression",
                    "name": "",
                    "range": [
                        432,
                        446
                    ],
                    "children": [
                        {
                            "type": "MemberExpression",
                            "name": "settings.config.media_gcs_bucket_name",
                            "range": [
                                432,
                                436
                            ],
                            "children": [],
                            "content": "\nsettings=Settings("
                        },
                        {
                            "type": "Literal",
                            "name": "",
                            "range": [
                                437,
                                438
                            ],
                            "children": [],
                            "content": ")\n"
                        }
                    ],
                    "content": "\nsettings=Settings()\nsettings.config.media_gcs_bucket_name=\"\"\n"
                },
                {
                    "type": "AssignmentExpression",
                    "name": "",
                    "range": [
                        440,
                        446
                    ],
                    "children": [
                        {
                            "type": "MemberExpression",
                            "name": "settings.config.google_application_credentials",
                            "range": [
                                440,
                                444
                            ],
                            "children": [],
                            "content": ".config.media_gcs_bucket_name="
                        },
                        {
                            "type": "Literal",
                            "name": "",
                            "range": [
                                445,
                                446
                            ],
                            "children": [],
                            "content": "\"\"\n"
                        }
                    ],
                    "content": ".config.media_gcs_bucket_name=\"\"\n"
                },
                {
                    "type": "CallExpression",
                    "name": "monkeypatch.setattr",
                    "range": [
                        448,
                        457
                    ],
                    "children": [
                        {
                            "type": "Literal",
                            "name": "\"backend.server.v2.store.media.Settings\"",
                            "range": [
                                452,
                                452
                            ],
                            "children": [],
                            "content": "="
                        },
                        {
                            "type": "LambdaExpression",
                            "name": "",
                            "range": [
                                454,
                                457
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "settings",
                                    "range": [
                                        456,
                                        456
                                    ],
                                    "children": [],
                                    "content": "."
                                }
                            ],
                            "content": "\nmonkeypatch.setattr"
                        }
                    ],
                    "content": ".config.google_application_credentials=\"\"\nmonkeypatch.setattr"
                },
                {
                    "type": "VariableDecl",
                    "name": "test_file",
                    "range": [
                        460,
                        506
                    ],
                    "children": [
                        {
                            "type": "AssignmentExpression",
                            "name": "",
                            "range": [
                                461,
                                506
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "fastapi.UploadFile",
                                    "range": [
                                        462,
                                        506
                                    ],
                                    "children": [
                                        {
                                            "type": "KeywordArgument",
                                            "name": "filename",
                                            "range": [
                                                467,
                                                469
                                            ],
                                            "children": [
                                                {
                                                    "type": "Literal",
                                                    "name": "\"laptop.jpeg\"",
                                                    "range": [
                                                        469,
                                                        469
                                                    ],
                                                    "children": [],
                                                    "content": "fastapi"
                                                }
                                            ],
                                            "content": "test_file=fastapi"
                                        },
                                        {
                                            "type": "KeywordArgument",
                                            "name": "file",
                                            "range": [
                                                472,
                                                483
                                            ],
                                            "children": [
                                                {
                                                    "type": "CallExpression",
                                                    "name": "io.BytesIO",
                                                    "range": [
                                                        474,
                                                        483
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "BinaryExpression",
                                                            "name": "",
                                                            "range": [
                                                                478,
                                                                482
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Literal",
                                                                    "name": "b\"\\xFF\\xD8\\xFF\"",
                                                                    "range": [
                                                                        479,
                                                                        479
                                                                    ],
                                                                    "children": [],
                                                                    "content": "file"
                                                                },
                                                                {
                                                                    "type": "Literal",
                                                                    "name": "b\"test data\"",
                                                                    "range": [
                                                                        482,
                                                                        482
                                                                    ],
                                                                    "children": [],
                                                                    "content": "."
                                                                }
                                                            ],
                                                            "content": "\nfile=io."
                                                        }
                                                    ],
                                                    "content": "filename=\"laptop.jpeg\",\nfile=io.BytesIO"
                                                }
                                            ],
                                            "content": "(\nfilename=\"laptop.jpeg\",\nfile=io.BytesIO"
                                        },
                                        {
                                            "type": "KeywordArgument",
                                            "name": "headers",
                                            "range": [
                                                490,
                                                503
                                            ],
                                            "children": [
                                                {
                                                    "type": "CallExpression",
                                                    "name": "starlette.datastructures.Headers",
                                                    "range": [
                                                        492,
                                                        503
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "ObjectExpression",
                                                            "name": "",
                                                            "range": [
                                                                498,
                                                                502
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Property",
                                                                    "name": "\"content-type\"",
                                                                    "range": [
                                                                        499,
                                                                        501
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Literal",
                                                                            "name": "\"image/jpeg\"",
                                                                            "range": [
                                                                                501,
                                                                                501
                                                                            ],
                                                                            "children": [],
                                                                            "content": "datastructures"
                                                                        }
                                                                    ],
                                                                    "content": "starlette.datastructures"
                                                                }
                                                            ],
                                                            "content": "=starlette.datastructures."
                                                        }
                                                    ],
                                                    "content": "#Valid JPEG signature\nheaders=starlette.datastructures.Headers"
                                                }
                                            ],
                                            "content": "),#Valid JPEG signature\nheaders=starlette.datastructures.Headers"
                                        }
                                    ],
                                    "content": ":settings)\n\ntest_file=fastapi.UploadFile(\nfilename=\"laptop.jpeg\",\nfile=io.BytesIO(b \"\\xFF\\xD8\\xFF\"+b \"test data\"),#Valid JPEG signature\nheaders=starlette.datastructures.Headers({\"content-type\""
                                }
                            ],
                            "content": "lambda:settings)\n\ntest_file=fastapi.UploadFile(\nfilename=\"laptop.jpeg\",\nfile=io.BytesIO(b \"\\xFF\\xD8\\xFF\"+b \"test data\"),#Valid JPEG signature\nheaders=starlette.datastructures.Headers({\"content-type\""
                        }
                    ],
                    "content": ",lambda:settings)\n\ntest_file=fastapi.UploadFile(\nfilename=\"laptop.jpeg\",\nfile=io.BytesIO(b \"\\xFF\\xD8\\xFF\"+b \"test data\"),#Valid JPEG signature\nheaders=starlette.datastructures.Headers({\"content-type\""
                },
                {
                    "type": "WithStatement",
                    "name": "",
                    "range": [
                        509,
                        545
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "pytest.raises",
                            "range": [
                                510,
                                525
                            ],
                            "children": [
                                {
                                    "type": "MemberExpression",
                                    "name": "backend.server.v2.store.exceptions.StorageConfigError",
                                    "range": [
                                        514,
                                        524
                                    ],
                                    "children": [],
                                    "content": "\n\nwith pytest.raises(backend.server."
                                }
                            ],
                            "content": "),\n)\n\nwith pytest.raises(backend.server.v2"
                        },
                        {
                            "type": "AwaitExpression",
                            "name": "",
                            "range": [
                                528,
                                544
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "backend.server.v2.store.media.upload_media",
                                    "range": [
                                        529,
                                        544
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "name": "\"test-user\"",
                                            "range": [
                                                541,
                                                541
                                            ],
                                            "children": [],
                                            "content": "."
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "test_file",
                                            "range": [
                                                543,
                                                543
                                            ],
                                            "children": [],
                                            "content": "."
                                        }
                                    ],
                                    "content": "exceptions.StorageConfigError):\nawait backend.server.v2.store.media"
                                }
                            ],
                            "content": ".exceptions.StorageConfigError):\nawait backend.server.v2.store.media"
                        }
                    ],
                    "content": "}),\n)\n\nwith pytest.raises(backend.server.v2.store.exceptions.StorageConfigError):\nawait backend.server.v2.store.media."
                }
            ],
            "content": ".assert_not_called()\n\n\nasync def test_upload_media_missing_credentials(monkeypatch):\nsettings=Settings()\nsettings.config.media_gcs_bucket_name=\"\"\nsettings.config.google_application_credentials=\"\"\nmonkeypatch.setattr(\"backend.server.v2.store.media.Settings\",lambda:settings)\n\ntest_file=fastapi.UploadFile(\nfilename=\"laptop.jpeg\",\nfile=io.BytesIO(b \"\\xFF\\xD8\\xFF\"+b \"test data\"),#Valid JPEG signature\nheaders=starlette.datastructures.Headers({\"content-type\":\"image/jpeg\"}),\n)\n\nwith pytest.raises(backend.server.v2.store.exceptions.StorageConfigError):\nawait backend.server.v2.store.media.upload_media"
        },
        {
            "type": "FunctionDecl",
            "name": "test_upload_media_video_type",
            "range": [
                547,
                653
            ],
            "children": [
                {
                    "type": "ParameterList",
                    "name": "parameters",
                    "range": [
                        550,
                        554
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "mock_settings",
                            "range": [
                                551,
                                551
                            ],
                            "children": [],
                            "content": ")"
                        },
                        {
                            "type": "Parameter",
                            "name": "mock_storage_client",
                            "range": [
                                553,
                                553
                            ],
                            "children": [],
                            "content": "\n"
                        }
                    ],
                    "content": "test_file)\n\n\n"
                },
                {
                    "type": "BlockStatement",
                    "name": "body",
                    "range": [
                        555,
                        653
                    ],
                    "children": [
                        {
                            "type": "VariableDecl",
                            "name": "test_file",
                            "range": [
                                557,
                                600
                            ],
                            "children": [
                                {
                                    "type": "AssignmentExpression",
                                    "name": "=",
                                    "range": [
                                        558,
                                        600
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "UploadFile",
                                            "range": [
                                                559,
                                                600
                                            ],
                                            "children": [
                                                {
                                                    "type": "ArgumentList",
                                                    "name": "arguments",
                                                    "range": [
                                                        562,
                                                        600
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "KeywordArgument",
                                                            "name": "filename",
                                                            "range": [
                                                                564,
                                                                566
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Literal",
                                                                    "name": "\"test.mp4\"",
                                                                    "range": [
                                                                        566,
                                                                        566
                                                                    ],
                                                                    "children": [],
                                                                    "content": "="
                                                                }
                                                            ],
                                                            "content": "\ntest_file="
                                                        },
                                                        {
                                                            "type": "KeywordArgument",
                                                            "name": "file",
                                                            "range": [
                                                                569,
                                                                577
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "CallExpression",
                                                                    "name": "BytesIO",
                                                                    "range": [
                                                                        571,
                                                                        577
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "ArgumentList",
                                                                            "name": "arguments",
                                                                            "range": [
                                                                                574,
                                                                                577
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "Literal",
                                                                                    "name": "b\"\\x00\\x00\\x00\\x18ftypmp42\"",
                                                                                    "range": [
                                                                                        575,
                                                                                        576
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": ",\n"
                                                                                }
                                                                            ],
                                                                            "content": "\"test.mp4\",\nfile"
                                                                        }
                                                                    ],
                                                                    "content": "\nfilename=\"test.mp4\",\nfile"
                                                                }
                                                            ],
                                                            "content": "UploadFile(\nfilename=\"test.mp4\",\nfile"
                                                        },
                                                        {
                                                            "type": "KeywordArgument",
                                                            "name": "headers",
                                                            "range": [
                                                                584,
                                                                597
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "CallExpression",
                                                                    "name": "Headers",
                                                                    "range": [
                                                                        586,
                                                                        597
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "ArgumentList",
                                                                            "name": "arguments",
                                                                            "range": [
                                                                                591,
                                                                                597
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "ObjectLiteral",
                                                                                    "name": "{\"content-type\":\"video/mp4\"}",
                                                                                    "range": [
                                                                                        592,
                                                                                        596
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "headers=starlette.datastructures"
                                                                                }
                                                                            ],
                                                                            "content": "\nheaders=starlette.datastructures."
                                                                        }
                                                                    ],
                                                                    "content": ",#Valid MP4 signature\nheaders=starlette.datastructures."
                                                                }
                                                            ],
                                                            "content": "\"\\x00\\x00\\x00\\x18ftypmp42\"),#Valid MP4 signature\nheaders=starlette.datastructures."
                                                        }
                                                    ],
                                                    "content": "):\ntest_file=fastapi.UploadFile(\nfilename=\"test.mp4\",\nfile=io.BytesIO(b \"\\x00\\x00\\x00\\x18ftypmp42\"),#Valid MP4 signature\nheaders=starlette.datastructures.Headers({"
                                                }
                                            ],
                                            "content": "mock_settings,mock_storage_client):\ntest_file=fastapi.UploadFile(\nfilename=\"test.mp4\",\nfile=io.BytesIO(b \"\\x00\\x00\\x00\\x18ftypmp42\"),#Valid MP4 signature\nheaders=starlette.datastructures.Headers({"
                                        }
                                    ],
                                    "content": "(mock_settings,mock_storage_client):\ntest_file=fastapi.UploadFile(\nfilename=\"test.mp4\",\nfile=io.BytesIO(b \"\\x00\\x00\\x00\\x18ftypmp42\"),#Valid MP4 signature\nheaders=starlette.datastructures.Headers({"
                                }
                            ],
                            "content": "test_upload_media_video_type(mock_settings,mock_storage_client):\ntest_file=fastapi.UploadFile(\nfilename=\"test.mp4\",\nfile=io.BytesIO(b \"\\x00\\x00\\x00\\x18ftypmp42\"),#Valid MP4 signature\nheaders=starlette.datastructures.Headers({"
                        },
                        {
                            "type": "ExpressionStatement",
                            "name": "result",
                            "range": [
                                603,
                                622
                            ],
                            "children": [
                                {
                                    "type": "AssignmentExpression",
                                    "name": "=",
                                    "range": [
                                        604,
                                        622
                                    ],
                                    "children": [
                                        {
                                            "type": "AwaitExpression",
                                            "name": "await",
                                            "range": [
                                                605,
                                                622
                                            ],
                                            "children": [
                                                {
                                                    "type": "CallExpression",
                                                    "name": "upload_media",
                                                    "range": [
                                                        606,
                                                        622
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "ArgumentList",
                                                            "name": "arguments",
                                                            "range": [
                                                                617,
                                                                622
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Literal",
                                                                    "name": "\"test-user\"",
                                                                    "range": [
                                                                        618,
                                                                        618
                                                                    ],
                                                                    "children": [],
                                                                    "content": "v2"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "test_file",
                                                                    "range": [
                                                                        620,
                                                                        620
                                                                    ],
                                                                    "children": [],
                                                                    "content": "store"
                                                                }
                                                            ],
                                                            "content": ".v2.store.media"
                                                        }
                                                    ],
                                                    "content": ",\n)\n\nresult=await backend.server.v2.store.media"
                                                }
                                            ],
                                            "content": "),\n)\n\nresult=await backend.server.v2.store.media"
                                        }
                                    ],
                                    "content": "}),\n)\n\nresult=await backend.server.v2.store.media"
                                }
                            ],
                            "content": "\"video/mp4\"}),\n)\n\nresult=await backend.server.v2.store.media"
                        },
                        {
                            "type": "AssertStatement",
                            "name": "assert",
                            "range": [
                                624,
                                629
                            ],
                            "children": [
                                {
                                    "type": "BinaryExpression",
                                    "name": "==",
                                    "range": [
                                        626,
                                        628
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "result",
                                            "range": [
                                                625,
                                                625
                                            ],
                                            "children": [],
                                            "content": "("
                                        },
                                        {
                                            "type": "Literal",
                                            "name": "\"http://test-url/media/laptop.jpeg\"",
                                            "range": [
                                                628,
                                                628
                                            ],
                                            "children": [],
                                            "content": "test_file"
                                        }
                                    ],
                                    "content": "\"test-user\",test_file"
                                }
                            ],
                            "content": "upload_media(\"test-user\",test_file)"
                        },
                        {
                            "type": "ExpressionStatement",
                            "name": "mock_bucket",
                            "range": [
                                630,
                                637
                            ],
                            "children": [
                                {
                                    "type": "AssignmentExpression",
                                    "name": "=",
                                    "range": [
                                        631,
                                        637
                                    ],
                                    "children": [
                                        {
                                            "type": "MemberExpression",
                                            "name": "mock_storage_client.bucket.return_value",
                                            "range": [
                                                632,
                                                636
                                            ],
                                            "children": [],
                                            "content": "assert result==\"http://test-url/media/laptop.jpeg\""
                                        }
                                    ],
                                    "content": "\nassert result==\"http://test-url/media/laptop.jpeg\"\n"
                                }
                            ],
                            "content": "\n\nassert result==\"http://test-url/media/laptop.jpeg\"\n"
                        },
                        {
                            "type": "ExpressionStatement",
                            "name": "mock_blob",
                            "range": [
                                638,
                                645
                            ],
                            "children": [
                                {
                                    "type": "AssignmentExpression",
                                    "name": "=",
                                    "range": [
                                        639,
                                        645
                                    ],
                                    "children": [
                                        {
                                            "type": "MemberExpression",
                                            "name": "mock_bucket.blob.return_value",
                                            "range": [
                                                640,
                                                644
                                            ],
                                            "children": [],
                                            "content": "mock_storage_client.bucket.return_value"
                                        }
                                    ],
                                    "content": "=mock_storage_client.bucket.return_value\n"
                                }
                            ],
                            "content": "mock_bucket=mock_storage_client.bucket.return_value\n"
                        },
                        {
                            "type": "ExpressionStatement",
                            "name": "mock_blob.upload_from_string.assert_called_once",
                            "range": [
                                646,
                                653
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "assert_called_once",
                                    "range": [
                                        648,
                                        653
                                    ],
                                    "children": [
                                        {
                                            "type": "ArgumentList",
                                            "name": "arguments",
                                            "range": [
                                                651,
                                                653
                                            ],
                                            "children": [],
                                            "content": ".return_value\n"
                                        }
                                    ],
                                    "content": "mock_bucket.blob.return_value\n"
                                }
                            ],
                            "content": "mock_blob=mock_bucket.blob.return_value\n"
                        }
                    ],
                    "content": "async def test_upload_media_video_type(mock_settings,mock_storage_client):\ntest_file=fastapi.UploadFile(\nfilename=\"test.mp4\",\nfile=io.BytesIO(b \"\\x00\\x00\\x00\\x18ftypmp42\"),#Valid MP4 signature\nheaders=starlette.datastructures.Headers({\"content-type\":\"video/mp4\"}),\n)\n\nresult=await backend.server.v2.store.media.upload_media(\"test-user\",test_file)\n\nassert result==\"http://test-url/media/laptop.jpeg\"\nmock_bucket=mock_storage_client.bucket.return_value\nmock_blob=mock_bucket.blob.return_value\n"
                }
            ],
            "content": "(\"test-user\",test_file)\n\n\nasync def test_upload_media_video_type(mock_settings,mock_storage_client):\ntest_file=fastapi.UploadFile(\nfilename=\"test.mp4\",\nfile=io.BytesIO(b \"\\x00\\x00\\x00\\x18ftypmp42\"),#Valid MP4 signature\nheaders=starlette.datastructures.Headers({\"content-type\":\"video/mp4\"}),\n)\n\nresult=await backend.server.v2.store.media.upload_media(\"test-user\",test_file)\n\nassert result==\"http://test-url/media/laptop.jpeg\"\nmock_bucket=mock_storage_client.bucket.return_value\nmock_blob=mock_bucket.blob.return_value\n"
        },
        {
            "type": "FunctionDecl",
            "name": "test_upload_media_file_too_large",
            "range": [
                654,
                772
            ],
            "children": [
                {
                    "type": "FunctionSignature",
                    "name": "test_upload_media_file_too_large",
                    "range": [
                        654,
                        662
                    ],
                    "children": [
                        {
                            "type": "Keyword",
                            "name": "async",
                            "range": [
                                654,
                                658
                            ],
                            "children": [],
                            "content": "mock_blob.upload_from_string.assert_called_once"
                        },
                        {
                            "type": "Keyword",
                            "name": "def",
                            "range": [
                                655,
                                658
                            ],
                            "children": [],
                            "content": ".upload_from_string.assert_called_once"
                        },
                        {
                            "type": "Identifier",
                            "name": "test_upload_media_file_too_large",
                            "range": [
                                656,
                                689
                            ],
                            "children": [],
                            "content": "upload_from_string.assert_called_once()\n\n\nasync def test_upload_media_file_too_large(mock_settings,mock_storage_client):\nlarge_data=b \"\\xFF\\xD8\\xFF\"+b \"x\"*(\n50*1024*1024+"
                        },
                        {
                            "type": "Identifier",
                            "name": "mock_settings",
                            "range": [
                                658,
                                671
                            ],
                            "children": [],
                            "content": "assert_called_once()\n\n\nasync def test_upload_media_file_too_large(mock_settings,mock_storage_client)"
                        },
                        {
                            "type": "Identifier",
                            "name": "mock_storage_client",
                            "range": [
                                660,
                                680
                            ],
                            "children": [],
                            "content": ")\n\n\nasync def test_upload_media_file_too_large(mock_settings,mock_storage_client):\nlarge_data=b \"\\xFF\\xD8\\xFF\"+b \"x\""
                        }
                    ],
                    "content": "mock_blob.upload_from_string.assert_called_once()\n\n"
                },
                {
                    "type": "Block",
                    "name": "FunctionBody",
                    "range": [
                        663,
                        772
                    ],
                    "children": [
                        {
                            "type": "VariableDecl",
                            "name": "large_data",
                            "range": [
                                664,
                                682
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "large_data",
                                    "range": [
                                        664,
                                        674
                                    ],
                                    "children": [],
                                    "content": "async def test_upload_media_file_too_large(mock_settings,mock_storage_client):\nlarge_data"
                                },
                                {
                                    "type": "Literal",
                                    "name": "b\"\\xFF\\xD8\\xFF\"",
                                    "range": [
                                        666,
                                        677
                                    ],
                                    "children": [],
                                    "content": "test_upload_media_file_too_large(mock_settings,mock_storage_client):\nlarge_data=b \"\\xFF\\xD8\\xFF\""
                                },
                                {
                                    "type": "Literal",
                                    "name": "b\"x\"",
                                    "range": [
                                        669,
                                        672
                                    ],
                                    "children": [],
                                    "content": ",mock_storage_client):"
                                },
                                {
                                    "type": "Literal",
                                    "name": "50",
                                    "range": [
                                        674,
                                        676
                                    ],
                                    "children": [],
                                    "content": "large_data=b"
                                },
                                {
                                    "type": "Literal",
                                    "name": "1024",
                                    "range": [
                                        676,
                                        680
                                    ],
                                    "children": [],
                                    "content": "b \"\\xFF\\xD8\\xFF\"+b \"x\""
                                },
                                {
                                    "type": "Literal",
                                    "name": "1024",
                                    "range": [
                                        678,
                                        682
                                    ],
                                    "children": [],
                                    "content": "+b \"x\"*("
                                },
                                {
                                    "type": "Literal",
                                    "name": "1",
                                    "range": [
                                        680,
                                        681
                                    ],
                                    "children": [],
                                    "content": "\"x\"*"
                                }
                            ],
                            "content": "async def test_upload_media_file_too_large(mock_settings,mock_storage_client):\nlarge_data=b \"\\xFF\\xD8\\xFF\"+b \"x\"*("
                        },
                        {
                            "type": "Comment",
                            "name": "# 50 MB + 1 byte with valid JPEG signature",
                            "range": [
                                683,
                                693
                            ],
                            "children": [],
                            "content": "\n50*1024*1024+1\n)#"
                        },
                        {
                            "type": "VariableDecl",
                            "name": "test_file",
                            "range": [
                                694,
                                732
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "test_file",
                                    "range": [
                                        694,
                                        703
                                    ],
                                    "children": [],
                                    "content": "50MB+1byte with valid JPEG signature\n"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "fastapi.UploadFile",
                                    "range": [
                                        696,
                                        711
                                    ],
                                    "children": [],
                                    "content": "+1byte with valid JPEG signature\ntest_file=fastapi.UploadFile(\nfilename"
                                },
                                {
                                    "type": "KeywordArgument",
                                    "name": "filename=\"laptop.jpeg\"",
                                    "range": [
                                        701,
                                        714
                                    ],
                                    "children": [],
                                    "content": "JPEG signature\ntest_file=fastapi.UploadFile(\nfilename=\"laptop.jpeg\","
                                },
                                {
                                    "type": "KeywordArgument",
                                    "name": "file=io.BytesIO(large_data)",
                                    "range": [
                                        706,
                                        730
                                    ],
                                    "children": [],
                                    "content": "fastapi.UploadFile(\nfilename=\"laptop.jpeg\",\nfile=io.BytesIO(large_data),\nheaders=starlette.datastructures"
                                },
                                {
                                    "type": "KeywordArgument",
                                    "name": "headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"})",
                                    "range": [
                                        716,
                                        732
                                    ],
                                    "children": [],
                                    "content": "file=io.BytesIO(large_data),\nheaders=starlette.datastructures.Headers"
                                }
                            ],
                            "content": "50MB+1byte with valid JPEG signature\ntest_file=fastapi.UploadFile(\nfilename=\"laptop.jpeg\",\nfile=io.BytesIO(large_data),\nheaders=starlette.datastructures.Headers"
                        },
                        {
                            "type": "WithStatement",
                            "name": "with pytest.raises(backend.server.v2.store.exceptions.FileSizeTooLargeError):",
                            "range": [
                                735,
                                771
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "pytest.raises",
                                    "range": [
                                        736,
                                        751
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "backend.server.v2.store.exceptions.FileSizeTooLargeError",
                                            "range": [
                                                740,
                                                751
                                            ],
                                            "children": [],
                                            "content": ",\n)\n\nwith pytest.raises(backend."
                                        }
                                    ],
                                    "content": ":\"image/jpeg\"}),\n)\n\nwith pytest.raises(backend."
                                },
                                {
                                    "type": "Block",
                                    "name": "WithBody",
                                    "range": [
                                        753,
                                        771
                                    ],
                                    "children": [
                                        {
                                            "type": "ExpressionStatement",
                                            "name": "await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                                            "range": [
                                                754,
                                                771
                                            ],
                                            "children": [
                                                {
                                                    "type": "Keyword",
                                                    "name": "await",
                                                    "range": [
                                                        754,
                                                        759
                                                    ],
                                                    "children": [],
                                                    "content": "v2.store.exceptions."
                                                },
                                                {
                                                    "type": "CallExpression",
                                                    "name": "backend.server.v2.store.media.upload_media",
                                                    "range": [
                                                        755,
                                                        770
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Literal",
                                                            "name": "\"test-user\"",
                                                            "range": [
                                                                767,
                                                                778
                                                            ],
                                                            "children": [],
                                                            "content": "server.v2.store.media.upload_media(\"test-user\","
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "test_file",
                                                            "range": [
                                                                769,
                                                                778
                                                            ],
                                                            "children": [],
                                                            "content": "v2.store.media.upload_media(\"test-user\","
                                                        }
                                                    ],
                                                    "content": ".store.exceptions.FileSizeTooLargeError):\nawait backend.server.v2."
                                                }
                                            ],
                                            "content": "v2.store.exceptions.FileSizeTooLargeError):\nawait backend.server.v2.store"
                                        }
                                    ],
                                    "content": ".v2.store.exceptions.FileSizeTooLargeError):\nawait backend.server.v2.store"
                                }
                            ],
                            "content": "\"content-type\":\"image/jpeg\"}),\n)\n\nwith pytest.raises(backend.server.v2.store.exceptions.FileSizeTooLargeError):\nawait backend.server.v2.store"
                        }
                    ],
                    "content": "\nasync def test_upload_media_file_too_large(mock_settings,mock_storage_client):\nlarge_data=b \"\\xFF\\xD8\\xFF\"+b \"x\"*(\n50*1024*1024+1\n)#50MB+1byte with valid JPEG signature\ntest_file=fastapi.UploadFile(\nfilename=\"laptop.jpeg\",\nfile=io.BytesIO(large_data),\nheaders=starlette.datastructures.Headers({\"content-type\":\"image/jpeg\"}),\n)\n\nwith pytest.raises(backend.server.v2.store.exceptions.FileSizeTooLargeError):\nawait backend.server.v2.store."
                }
            ],
            "content": "mock_blob.upload_from_string.assert_called_once()\n\n\nasync def test_upload_media_file_too_large(mock_settings,mock_storage_client):\nlarge_data=b \"\\xFF\\xD8\\xFF\"+b \"x\"*(\n50*1024*1024+1\n)#50MB+1byte with valid JPEG signature\ntest_file=fastapi.UploadFile(\nfilename=\"laptop.jpeg\",\nfile=io.BytesIO(large_data),\nheaders=starlette.datastructures.Headers({\"content-type\":\"image/jpeg\"}),\n)\n\nwith pytest.raises(backend.server.v2.store.exceptions.FileSizeTooLargeError):\nawait backend.server.v2.store."
        },
        {
            "type": "FunctionDecl",
            "name": "test_upload_media_file_read_error",
            "range": [
                773,
                888
            ],
            "children": [
                {
                    "type": "ParameterList",
                    "name": "",
                    "range": [
                        776,
                        780
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "mock_settings",
                            "range": [
                                777,
                                777
                            ],
                            "children": [],
                            "content": "\"test-user\""
                        },
                        {
                            "type": "Parameter",
                            "name": "mock_storage_client",
                            "range": [
                                779,
                                779
                            ],
                            "children": [],
                            "content": "test_file"
                        }
                    ],
                    "content": "(\"test-user\",test_file)"
                },
                {
                    "type": "BlockStatement",
                    "name": "",
                    "range": [
                        781,
                        888
                    ],
                    "children": [
                        {
                            "type": "VariableDeclaration",
                            "name": "test_file",
                            "range": [
                                783,
                                831
                            ],
                            "children": [
                                {
                                    "type": "AssignmentExpression",
                                    "name": "",
                                    "range": [
                                        784,
                                        831
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "UploadFile",
                                            "range": [
                                                785,
                                                831
                                            ],
                                            "children": [
                                                {
                                                    "type": "ArgumentList",
                                                    "name": "",
                                                    "range": [
                                                        788,
                                                        831
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "KeywordArgument",
                                                            "name": "filename",
                                                            "range": [
                                                                790,
                                                                792
                                                            ],
                                                            "children": [],
                                                            "content": "mock_storage_client):"
                                                        },
                                                        {
                                                            "type": "KeywordArgument",
                                                            "name": "file",
                                                            "range": [
                                                                795,
                                                                803
                                                            ],
                                                            "children": [],
                                                            "content": "=fastapi.UploadFile(\nfilename=\"laptop.jpeg\""
                                                        },
                                                        {
                                                            "type": "KeywordArgument",
                                                            "name": "headers",
                                                            "range": [
                                                                815,
                                                                828
                                                            ],
                                                            "children": [],
                                                            "content": ",#Empty file that will raise error on read\nheaders=starlette"
                                                        }
                                                    ],
                                                    "content": "mock_settings,mock_storage_client):\ntest_file=fastapi.UploadFile(\nfilename=\"laptop.jpeg\",\nfile=io.BytesIO(b\"\"),#Empty file that will raise error on read\nheaders=starlette.datastructures."
                                                }
                                            ],
                                            "content": "def test_upload_media_file_read_error(mock_settings,mock_storage_client):\ntest_file=fastapi.UploadFile(\nfilename=\"laptop.jpeg\",\nfile=io.BytesIO(b\"\"),#Empty file that will raise error on read\nheaders=starlette.datastructures."
                                        }
                                    ],
                                    "content": "async def test_upload_media_file_read_error(mock_settings,mock_storage_client):\ntest_file=fastapi.UploadFile(\nfilename=\"laptop.jpeg\",\nfile=io.BytesIO(b\"\"),#Empty file that will raise error on read\nheaders=starlette.datastructures."
                                }
                            ],
                            "content": "\nasync def test_upload_media_file_read_error(mock_settings,mock_storage_client):\ntest_file=fastapi.UploadFile(\nfilename=\"laptop.jpeg\",\nfile=io.BytesIO(b\"\"),#Empty file that will raise error on read\nheaders=starlette.datastructures."
                        },
                        {
                            "type": "ExpressionStatement",
                            "name": "",
                            "range": [
                                833,
                                850
                            ],
                            "children": [
                                {
                                    "type": "AssignmentExpression",
                                    "name": "",
                                    "range": [
                                        834,
                                        850
                                    ],
                                    "children": [
                                        {
                                            "type": "MemberExpression",
                                            "name": "read",
                                            "range": [
                                                834,
                                                835
                                            ],
                                            "children": [],
                                            "content": "{\"content-type\""
                                        },
                                        {
                                            "type": "CallExpression",
                                            "name": "AsyncMock",
                                            "range": [
                                                837,
                                                849
                                            ],
                                            "children": [
                                                {
                                                    "type": "ArgumentList",
                                                    "name": "",
                                                    "range": [
                                                        842,
                                                        849
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "KeywordArgument",
                                                            "name": "side_effect",
                                                            "range": [
                                                                843,
                                                                848
                                                            ],
                                                            "children": [],
                                                            "content": "\ntest_file.read=unittest"
                                                        }
                                                    ],
                                                    "content": ")\ntest_file.read=unittest."
                                                }
                                            ],
                                            "content": "\"image/jpeg\"}),\n)\ntest_file.read=unittest."
                                        }
                                    ],
                                    "content": "{\"content-type\":\"image/jpeg\"}),\n)\ntest_file.read=unittest.mock"
                                }
                            ],
                            "content": "({\"content-type\":\"image/jpeg\"}),\n)\ntest_file.read=unittest.mock"
                        },
                        {
                            "type": "WithStatement",
                            "name": "",
                            "range": [
                                852,
                                888
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "raises",
                                    "range": [
                                        853,
                                        868
                                    ],
                                    "children": [
                                        {
                                            "type": "ArgumentList",
                                            "name": "",
                                            "range": [
                                                856,
                                                868
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "FileReadError",
                                                    "range": [
                                                        867,
                                                        867
                                                    ],
                                                    "children": [],
                                                    "content": "("
                                                }
                                            ],
                                            "content": "Exception(\"Read error\"))\n\nwith pytest.raises(backend"
                                        }
                                    ],
                                    "content": "(side_effect=Exception(\"Read error\"))\n\nwith pytest.raises(backend"
                                },
                                {
                                    "type": "BlockStatement",
                                    "name": "",
                                    "range": [
                                        869,
                                        888
                                    ],
                                    "children": [
                                        {
                                            "type": "ExpressionStatement",
                                            "name": "",
                                            "range": [
                                                871,
                                                888
                                            ],
                                            "children": [
                                                {
                                                    "type": "AwaitExpression",
                                                    "name": "",
                                                    "range": [
                                                        871,
                                                        887
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "CallExpression",
                                                            "name": "upload_media",
                                                            "range": [
                                                                872,
                                                                887
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "ArgumentList",
                                                                    "name": "",
                                                                    "range": [
                                                                        883,
                                                                        887
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "StringLiteral",
                                                                            "name": "test-user",
                                                                            "range": [
                                                                                884,
                                                                                884
                                                                            ],
                                                                            "children": [],
                                                                            "content": "."
                                                                        },
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "test_file",
                                                                            "range": [
                                                                                886,
                                                                                886
                                                                            ],
                                                                            "children": [],
                                                                            "content": "."
                                                                        }
                                                                    ],
                                                                    "content": "backend.server.v2"
                                                                }
                                                            ],
                                                            "content": "v2.store.exceptions.FileReadError):\nawait backend.server.v2"
                                                        }
                                                    ],
                                                    "content": ".v2.store.exceptions.FileReadError):\nawait backend.server.v2"
                                                }
                                            ],
                                            "content": ".v2.store.exceptions.FileReadError):\nawait backend.server.v2."
                                        }
                                    ],
                                    "content": ".server.v2.store.exceptions.FileReadError):\nawait backend.server.v2."
                                }
                            ],
                            "content": "AsyncMock(side_effect=Exception(\"Read error\"))\n\nwith pytest.raises(backend.server.v2.store.exceptions.FileReadError):\nawait backend.server.v2."
                        }
                    ],
                    "content": "\n\n\nasync def test_upload_media_file_read_error(mock_settings,mock_storage_client):\ntest_file=fastapi.UploadFile(\nfilename=\"laptop.jpeg\",\nfile=io.BytesIO(b\"\"),#Empty file that will raise error on read\nheaders=starlette.datastructures.Headers({\"content-type\":\"image/jpeg\"}),\n)\ntest_file.read=unittest.mock.AsyncMock(side_effect=Exception(\"Read error\"))\n\nwith pytest.raises(backend.server.v2.store.exceptions.FileReadError):\nawait backend.server.v2."
                }
            ],
            "content": "media.upload_media(\"test-user\",test_file)\n\n\nasync def test_upload_media_file_read_error(mock_settings,mock_storage_client):\ntest_file=fastapi.UploadFile(\nfilename=\"laptop.jpeg\",\nfile=io.BytesIO(b\"\"),#Empty file that will raise error on read\nheaders=starlette.datastructures.Headers({\"content-type\":\"image/jpeg\"}),\n)\ntest_file.read=unittest.mock.AsyncMock(side_effect=Exception(\"Read error\"))\n\nwith pytest.raises(backend.server.v2.store.exceptions.FileReadError):\nawait backend.server.v2."
        },
        {
            "type": "FunctionDecl",
            "name": "test_upload_media_png_success",
            "range": [
                889,
                971
            ],
            "children": [
                {
                    "type": "FunctionSignature",
                    "name": "test_upload_media_png_success",
                    "range": [
                        889,
                        897
                    ],
                    "children": [
                        {
                            "type": "Keyword",
                            "name": "async",
                            "range": [
                                889,
                                894
                            ],
                            "children": [],
                            "content": "store.media.upload_media("
                        },
                        {
                            "type": "Keyword",
                            "name": "def",
                            "range": [
                                890,
                                893
                            ],
                            "children": [],
                            "content": ".media.upload_media"
                        },
                        {
                            "type": "Identifier",
                            "name": "test_upload_media_png_success",
                            "range": [
                                891,
                                920
                            ],
                            "children": [],
                            "content": "media.upload_media(\"test-user\",test_file)\n\n\nasync def test_upload_media_png_success(mock_settings,mock_storage_client):\ntest_file=fastapi.UploadFile(\nfilename="
                        },
                        {
                            "type": "ParameterList",
                            "name": "",
                            "range": [
                                892,
                                896
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "mock_settings",
                                    "range": [
                                        893,
                                        906
                                    ],
                                    "children": [],
                                    "content": "upload_media(\"test-user\",test_file)\n\n\nasync def test_upload_media_png_success(mock_settings"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "mock_storage_client",
                                    "range": [
                                        895,
                                        914
                                    ],
                                    "children": [],
                                    "content": "\"test-user\",test_file)\n\n\nasync def test_upload_media_png_success(mock_settings,mock_storage_client):\ntest_file=fastapi"
                                }
                            ],
                            "content": ".upload_media(\"test-user\","
                        }
                    ],
                    "content": "store.media.upload_media(\"test-user\",test_file"
                },
                {
                    "type": "Block",
                    "name": "",
                    "range": [
                        898,
                        971
                    ],
                    "children": [
                        {
                            "type": "VariableDeclaration",
                            "name": "test_file",
                            "range": [
                                899,
                                942
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "test_file",
                                    "range": [
                                        899,
                                        908
                                    ],
                                    "children": [],
                                    "content": "\n\n\nasync def test_upload_media_png_success(mock_settings,mock_storage_client"
                                },
                                {
                                    "type": "Assignment",
                                    "name": "=",
                                    "range": [
                                        900,
                                        901
                                    ],
                                    "children": [],
                                    "content": "\n\n"
                                },
                                {
                                    "type": "NewExpression",
                                    "name": "UploadFile",
                                    "range": [
                                        901,
                                        942
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "fastapi",
                                            "range": [
                                                901,
                                                908
                                            ],
                                            "children": [],
                                            "content": "\nasync def test_upload_media_png_success(mock_settings,mock_storage_client"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "UploadFile",
                                            "range": [
                                                903,
                                                912
                                            ],
                                            "children": [],
                                            "content": "def test_upload_media_png_success(mock_settings,mock_storage_client):\ntest_file"
                                        },
                                        {
                                            "type": "ArgumentList",
                                            "name": "",
                                            "range": [
                                                904,
                                                942
                                            ],
                                            "children": [
                                                {
                                                    "type": "NamedArgument",
                                                    "name": "filename",
                                                    "range": [
                                                        906,
                                                        908
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Literal",
                                                            "name": "\"test.png\"",
                                                            "range": [
                                                                908,
                                                                918
                                                            ],
                                                            "children": [],
                                                            "content": "mock_storage_client):\ntest_file=fastapi.UploadFile(\n"
                                                        }
                                                    ],
                                                    "content": "mock_settings,mock_storage_client"
                                                },
                                                {
                                                    "type": "NamedArgument",
                                                    "name": "file",
                                                    "range": [
                                                        911,
                                                        919
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "NewExpression",
                                                            "name": "BytesIO",
                                                            "range": [
                                                                913,
                                                                919
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "io",
                                                                    "range": [
                                                                        913,
                                                                        915
                                                                    ],
                                                                    "children": [],
                                                                    "content": "=fastapi."
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "BytesIO",
                                                                    "range": [
                                                                        915,
                                                                        922
                                                                    ],
                                                                    "children": [],
                                                                    "content": ".UploadFile(\nfilename=\"test.png\","
                                                                },
                                                                {
                                                                    "type": "ArgumentList",
                                                                    "name": "",
                                                                    "range": [
                                                                        916,
                                                                        919
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Literal",
                                                                            "name": "b\"\\x89PNG\\r\\n\\x1a\\n\"",
                                                                            "range": [
                                                                                917,
                                                                                918
                                                                            ],
                                                                            "children": [],
                                                                            "content": "(\n"
                                                                        }
                                                                    ],
                                                                    "content": "UploadFile(\nfilename"
                                                                }
                                                            ],
                                                            "content": "=fastapi.UploadFile(\nfilename"
                                                        }
                                                    ],
                                                    "content": "\ntest_file=fastapi.UploadFile(\nfilename"
                                                },
                                                {
                                                    "type": "NamedArgument",
                                                    "name": "headers",
                                                    "range": [
                                                        926,
                                                        939
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "NewExpression",
                                                            "name": "Headers",
                                                            "range": [
                                                                928,
                                                                939
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "starlette",
                                                                    "range": [
                                                                        928,
                                                                        937
                                                                    ],
                                                                    "children": [],
                                                                    "content": "BytesIO(b \"\\x89PNG\\r\\n\\x1a\\n\"),#Valid PNG signature"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "datastructures",
                                                                    "range": [
                                                                        929,
                                                                        944
                                                                    ],
                                                                    "children": [],
                                                                    "content": "(b \"\\x89PNG\\r\\n\\x1a\\n\"),#Valid PNG signature\nheaders=starlette.datastructures."
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "Headers",
                                                                    "range": [
                                                                        932,
                                                                        939
                                                                    ],
                                                                    "children": [],
                                                                    "content": "),#Valid PNG signature\nheaders"
                                                                },
                                                                {
                                                                    "type": "ArgumentList",
                                                                    "name": "",
                                                                    "range": [
                                                                        933,
                                                                        939
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "ObjectLiteral",
                                                                            "name": "",
                                                                            "range": [
                                                                                934,
                                                                                938
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "Property",
                                                                                    "name": "content-type",
                                                                                    "range": [
                                                                                        935,
                                                                                        937
                                                                                    ],
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "Literal",
                                                                                            "name": "\"image/png\"",
                                                                                            "range": [
                                                                                                937,
                                                                                                947
                                                                                            ],
                                                                                            "children": [],
                                                                                            "content": "signature\nheaders=starlette.datastructures.Headers({"
                                                                                        }
                                                                                    ],
                                                                                    "content": "Valid PNG signature"
                                                                                }
                                                                            ],
                                                                            "content": "#Valid PNG signature\n"
                                                                        }
                                                                    ],
                                                                    "content": ",#Valid PNG signature\nheaders"
                                                                }
                                                            ],
                                                            "content": "BytesIO(b \"\\x89PNG\\r\\n\\x1a\\n\"),#Valid PNG signature\nheaders"
                                                        }
                                                    ],
                                                    "content": "io.BytesIO(b \"\\x89PNG\\r\\n\\x1a\\n\"),#Valid PNG signature\nheaders"
                                                }
                                            ],
                                            "content": "test_upload_media_png_success(mock_settings,mock_storage_client):\ntest_file=fastapi.UploadFile(\nfilename=\"test.png\",\nfile=io.BytesIO(b \"\\x89PNG\\r\\n\\x1a\\n\"),#Valid PNG signature\nheaders=starlette."
                                        }
                                    ],
                                    "content": "\nasync def test_upload_media_png_success(mock_settings,mock_storage_client):\ntest_file=fastapi.UploadFile(\nfilename=\"test.png\",\nfile=io.BytesIO(b \"\\x89PNG\\r\\n\\x1a\\n\"),#Valid PNG signature\nheaders=starlette."
                                }
                            ],
                            "content": "\n\n\nasync def test_upload_media_png_success(mock_settings,mock_storage_client):\ntest_file=fastapi.UploadFile(\nfilename=\"test.png\",\nfile=io.BytesIO(b \"\\x89PNG\\r\\n\\x1a\\n\"),#Valid PNG signature\nheaders=starlette."
                        },
                        {
                            "type": "ExpressionStatement",
                            "name": "result",
                            "range": [
                                945,
                                964
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "result",
                                    "range": [
                                        945,
                                        951
                                    ],
                                    "children": [],
                                    "content": "Headers({\"content-type\":\"image/png\"}"
                                },
                                {
                                    "type": "Assignment",
                                    "name": "=",
                                    "range": [
                                        946,
                                        947
                                    ],
                                    "children": [],
                                    "content": "({"
                                },
                                {
                                    "type": "AwaitExpression",
                                    "name": "await",
                                    "range": [
                                        947,
                                        952
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "upload_media",
                                            "range": [
                                                948,
                                                963
                                            ],
                                            "children": [
                                                {
                                                    "type": "MemberExpression",
                                                    "name": "backend.server.v2.store.media.upload_media",
                                                    "range": [
                                                        948,
                                                        958
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "backend",
                                                            "range": [
                                                                948,
                                                                954
                                                            ],
                                                            "children": [],
                                                            "content": "\"content-type\":\"image/png\"}),\n"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "server",
                                                            "range": [
                                                                949,
                                                                955
                                                            ],
                                                            "children": [],
                                                            "content": ":\"image/png\"}),\n)"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "v2",
                                                            "range": [
                                                                950,
                                                                952
                                                            ],
                                                            "children": [],
                                                            "content": "\"image/png\"})"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "store",
                                                            "range": [
                                                                951,
                                                                956
                                                            ],
                                                            "children": [],
                                                            "content": "}),\n)\n"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "media",
                                                            "range": [
                                                                952,
                                                                957
                                                            ],
                                                            "children": [],
                                                            "content": "),\n)\n\n"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "upload_media",
                                                            "range": [
                                                                954,
                                                                963
                                                            ],
                                                            "children": [],
                                                            "content": "\n)\n\nresult=await backend.server"
                                                        }
                                                    ],
                                                    "content": "\"content-type\":\"image/png\"}),\n)\n\nresult"
                                                },
                                                {
                                                    "type": "ArgumentList",
                                                    "name": "",
                                                    "range": [
                                                        959,
                                                        963
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Literal",
                                                            "name": "\"test-user\"",
                                                            "range": [
                                                                960,
                                                                970
                                                            ],
                                                            "children": [],
                                                            "content": "await backend.server.v2.store.media."
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "test_file",
                                                            "range": [
                                                                962,
                                                                971
                                                            ],
                                                            "children": [],
                                                            "content": ".server.v2.store.media.upload_media"
                                                        }
                                                    ],
                                                    "content": "=await backend.server"
                                                }
                                            ],
                                            "content": "\"content-type\":\"image/png\"}),\n)\n\nresult=await backend.server"
                                        }
                                    ],
                                    "content": "{\"content-type\":\"image/png\"})"
                                }
                            ],
                            "content": "Headers({\"content-type\":\"image/png\"}),\n)\n\nresult=await backend.server."
                        },
                        {
                            "type": "AssertStatement",
                            "name": "assert",
                            "range": [
                                965,
                                970
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "result",
                                    "range": [
                                        965,
                                        971
                                    ],
                                    "children": [],
                                    "content": "v2.store.media.upload_media"
                                },
                                {
                                    "type": "BinaryExpression",
                                    "name": "==",
                                    "range": [
                                        967,
                                        968
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "result",
                                            "range": [
                                                965,
                                                971
                                            ],
                                            "children": [],
                                            "content": "v2.store.media.upload_media"
                                        },
                                        {
                                            "type": "Literal",
                                            "name": "\"http://test-url/media/laptop.jpeg\"",
                                            "range": [
                                                969,
                                                1001
                                            ],
                                            "children": [],
                                            "content": "media.upload_media(\"test-user\",test_file)\nassert result==\"http://test-url/media/laptop.jpeg\"\n\n\nasync def test_upload_media_gif_success(mock_settings,mock_storage_client):\ntest_file=fastapi.UploadFile("
                                        }
                                    ],
                                    "content": "store."
                                }
                            ],
                            "content": "v2.store.media."
                        }
                    ],
                    "content": ")\n\n\nasync def test_upload_media_png_success(mock_settings,mock_storage_client):\ntest_file=fastapi.UploadFile(\nfilename=\"test.png\",\nfile=io.BytesIO(b \"\\x89PNG\\r\\n\\x1a\\n\"),#Valid PNG signature\nheaders=starlette.datastructures.Headers({\"content-type\":\"image/png\"}),\n)\n\nresult=await backend.server.v2.store.media.upload_media"
                }
            ],
            "content": "store.media.upload_media(\"test-user\",test_file)\n\n\nasync def test_upload_media_png_success(mock_settings,mock_storage_client):\ntest_file=fastapi.UploadFile(\nfilename=\"test.png\",\nfile=io.BytesIO(b \"\\x89PNG\\r\\n\\x1a\\n\"),#Valid PNG signature\nheaders=starlette.datastructures.Headers({\"content-type\":\"image/png\"}),\n)\n\nresult=await backend.server.v2.store.media.upload_media"
        },
        {
            "type": "FunctionDecl",
            "name": "test_upload_media_gif_success",
            "range": [
                972,
                1053
            ],
            "children": [
                {
                    "type": "FunctionSignature",
                    "name": "test_upload_media_gif_success",
                    "range": [
                        972,
                        980
                    ],
                    "children": [
                        {
                            "type": "Keyword",
                            "name": "async",
                            "range": [
                                972,
                                976
                            ],
                            "children": [],
                            "content": "(\"test-user\",test_file)"
                        },
                        {
                            "type": "Keyword",
                            "name": "def",
                            "range": [
                                973,
                                976
                            ],
                            "children": [],
                            "content": "\"test-user\",test_file)"
                        },
                        {
                            "type": "Identifier",
                            "name": "test_upload_media_gif_success",
                            "range": [
                                974,
                                1006
                            ],
                            "children": [],
                            "content": ",test_file)\nassert result==\"http://test-url/media/laptop.jpeg\"\n\n\nasync def test_upload_media_gif_success(mock_settings,mock_storage_client):\ntest_file=fastapi.UploadFile(\nfilename=\"test.gif\","
                        },
                        {
                            "type": "ParameterList",
                            "name": "",
                            "range": [
                                975,
                                979
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "mock_settings",
                                    "range": [
                                        976,
                                        988
                                    ],
                                    "children": [],
                                    "content": ")\nassert result==\"http://test-url/media/laptop.jpeg\"\n\n\nasync def test_upload_media_gif_success"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "mock_storage_client",
                                    "range": [
                                        978,
                                        998
                                    ],
                                    "children": [],
                                    "content": "assert result==\"http://test-url/media/laptop.jpeg\"\n\n\nasync def test_upload_media_gif_success(mock_settings,mock_storage_client):\ntest_file=fastapi"
                                }
                            ],
                            "content": "test_file)\nassert result"
                        }
                    ],
                    "content": "(\"test-user\",test_file)\nassert result="
                },
                {
                    "type": "Block",
                    "name": "",
                    "range": [
                        981,
                        1053
                    ],
                    "children": [
                        {
                            "type": "VariableDecl",
                            "name": "test_file",
                            "range": [
                                982,
                                1025
                            ],
                            "children": [
                                {
                                    "type": "Assignment",
                                    "name": "=",
                                    "range": [
                                        983,
                                        984
                                    ],
                                    "children": [],
                                    "content": "\n\n"
                                },
                                {
                                    "type": "NewExpression",
                                    "name": "UploadFile",
                                    "range": [
                                        984,
                                        1025
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "fastapi",
                                            "range": [
                                                984,
                                                991
                                            ],
                                            "children": [],
                                            "content": "\n\nasync def test_upload_media_gif_success(mock_settings,"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "UploadFile",
                                            "range": [
                                                986,
                                                995
                                            ],
                                            "children": [],
                                            "content": "async def test_upload_media_gif_success(mock_settings,mock_storage_client):\n"
                                        },
                                        {
                                            "type": "ArgumentList",
                                            "name": "",
                                            "range": [
                                                987,
                                                1025
                                            ],
                                            "children": [
                                                {
                                                    "type": "NamedArgument",
                                                    "name": "filename",
                                                    "range": [
                                                        989,
                                                        991
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Literal",
                                                            "name": "\"test.gif\"",
                                                            "range": [
                                                                991,
                                                                999
                                                            ],
                                                            "children": [],
                                                            "content": ",mock_storage_client):\ntest_file=fastapi."
                                                        }
                                                    ],
                                                    "content": "(mock_settings,"
                                                },
                                                {
                                                    "type": "NamedArgument",
                                                    "name": "file",
                                                    "range": [
                                                        994,
                                                        996
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "NewExpression",
                                                            "name": "BytesIO",
                                                            "range": [
                                                                996,
                                                                1002
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "io",
                                                                    "range": [
                                                                        996,
                                                                        998
                                                                    ],
                                                                    "children": [],
                                                                    "content": "test_file=fastapi"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "BytesIO",
                                                                    "range": [
                                                                        998,
                                                                        1004
                                                                    ],
                                                                    "children": [],
                                                                    "content": "fastapi.UploadFile(\nfilename="
                                                                },
                                                                {
                                                                    "type": "ArgumentList",
                                                                    "name": "",
                                                                    "range": [
                                                                        999,
                                                                        1002
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "BinaryExpression",
                                                                            "name": "b",
                                                                            "range": [
                                                                                1000,
                                                                                1001
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "Literal",
                                                                                    "name": "\"GIF89a\"",
                                                                                    "range": [
                                                                                        1001,
                                                                                        1007
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "(\nfilename=\"test.gif\",\n"
                                                                                }
                                                                            ],
                                                                            "content": "UploadFile("
                                                                        }
                                                                    ],
                                                                    "content": ".UploadFile(\n"
                                                                }
                                                            ],
                                                            "content": "test_file=fastapi.UploadFile(\n"
                                                        }
                                                    ],
                                                    "content": ":\ntest_file"
                                                },
                                                {
                                                    "type": "NamedArgument",
                                                    "name": "headers",
                                                    "range": [
                                                        1009,
                                                        1010
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "NewExpression",
                                                            "name": "Headers",
                                                            "range": [
                                                                1011,
                                                                1022
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "starlette",
                                                                    "range": [
                                                                        1011,
                                                                        1019
                                                                    ],
                                                                    "children": [],
                                                                    "content": ".BytesIO(b \"GIF89a\"),#Valid"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "datastructures",
                                                                    "range": [
                                                                        1012,
                                                                        1024
                                                                    ],
                                                                    "children": [],
                                                                    "content": "BytesIO(b \"GIF89a\"),#Valid GIF signature\nheaders="
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "Headers",
                                                                    "range": [
                                                                        1015,
                                                                        1021
                                                                    ],
                                                                    "children": [],
                                                                    "content": "\"GIF89a\"),#Valid GIF signature"
                                                                },
                                                                {
                                                                    "type": "ArgumentList",
                                                                    "name": "",
                                                                    "range": [
                                                                        1016,
                                                                        1022
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "ObjectLiteral",
                                                                            "name": "",
                                                                            "range": [
                                                                                1017,
                                                                                1021
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "Property",
                                                                                    "name": "content-type",
                                                                                    "range": [
                                                                                        1018,
                                                                                        1020
                                                                                    ],
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "Literal",
                                                                                            "name": "\"image/gif\"",
                                                                                            "range": [
                                                                                                1020,
                                                                                                1028
                                                                                            ],
                                                                                            "children": [],
                                                                                            "content": "GIF signature\nheaders=starlette.datastructures."
                                                                                        }
                                                                                    ],
                                                                                    "content": "#Valid GIF"
                                                                                }
                                                                            ],
                                                                            "content": ",#Valid GIF signature"
                                                                        }
                                                                    ],
                                                                    "content": "),#Valid GIF signature\n"
                                                                }
                                                            ],
                                                            "content": ".BytesIO(b \"GIF89a\"),#Valid GIF signature\n"
                                                        }
                                                    ],
                                                    "content": "=io"
                                                }
                                            ],
                                            "content": "def test_upload_media_gif_success(mock_settings,mock_storage_client):\ntest_file=fastapi.UploadFile(\nfilename=\"test.gif\",\nfile=io.BytesIO(b \"GIF89a\"),#Valid GIF signature\nheaders=starlette"
                                        }
                                    ],
                                    "content": "\n\nasync def test_upload_media_gif_success(mock_settings,mock_storage_client):\ntest_file=fastapi.UploadFile(\nfilename=\"test.gif\",\nfile=io.BytesIO(b \"GIF89a\"),#Valid GIF signature\nheaders=starlette"
                                }
                            ],
                            "content": "\"http://test-url/media/laptop.jpeg\"\n\n\nasync def test_upload_media_gif_success(mock_settings,mock_storage_client):\ntest_file=fastapi.UploadFile(\nfilename=\"test.gif\",\nfile=io.BytesIO(b \"GIF89a\"),#Valid GIF signature\nheaders=starlette"
                        },
                        {
                            "type": "VariableDecl",
                            "name": "result",
                            "range": [
                                1028,
                                1047
                            ],
                            "children": [
                                {
                                    "type": "Assignment",
                                    "name": "=",
                                    "range": [
                                        1029,
                                        1030
                                    ],
                                    "children": [],
                                    "content": "Headers("
                                },
                                {
                                    "type": "AwaitExpression",
                                    "name": "await",
                                    "range": [
                                        1030,
                                        1031
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "upload_media",
                                            "range": [
                                                1031,
                                                1046
                                            ],
                                            "children": [
                                                {
                                                    "type": "MemberExpression",
                                                    "name": ".",
                                                    "range": [
                                                        1031,
                                                        1041
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "backend",
                                                            "range": [
                                                                1031,
                                                                1037
                                                            ],
                                                            "children": [],
                                                            "content": "{\"content-type\":\"image/gif\"}),"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "server",
                                                            "range": [
                                                                1032,
                                                                1038
                                                            ],
                                                            "children": [],
                                                            "content": "\"content-type\":\"image/gif\"}),\n"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "v2",
                                                            "range": [
                                                                1033,
                                                                1035
                                                            ],
                                                            "children": [],
                                                            "content": ":\"image/gif\"}"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "store",
                                                            "range": [
                                                                1034,
                                                                1040
                                                            ],
                                                            "children": [],
                                                            "content": "\"image/gif\"}),\n)\n"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "media",
                                                            "range": [
                                                                1035,
                                                                1041
                                                            ],
                                                            "children": [],
                                                            "content": "}),\n)\n\n"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "upload_media",
                                                            "range": [
                                                                1037,
                                                                1045
                                                            ],
                                                            "children": [],
                                                            "content": ",\n)\n\nresult=await backend"
                                                        }
                                                    ],
                                                    "content": "{\"content-type\":\"image/gif\"}),\n)\n\n"
                                                },
                                                {
                                                    "type": "ArgumentList",
                                                    "name": "",
                                                    "range": [
                                                        1042,
                                                        1046
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Literal",
                                                            "name": "\"test-user\"",
                                                            "range": [
                                                                1043,
                                                                1051
                                                            ],
                                                            "children": [],
                                                            "content": "=await backend.server.v2.store"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "test_file",
                                                            "range": [
                                                                1045,
                                                                1053
                                                            ],
                                                            "children": [],
                                                            "content": "backend.server.v2.store.media"
                                                        }
                                                    ],
                                                    "content": "result=await backend."
                                                }
                                            ],
                                            "content": "{\"content-type\":\"image/gif\"}),\n)\n\nresult=await backend."
                                        }
                                    ],
                                    "content": "({"
                                }
                            ],
                            "content": ".Headers({\"content-type\":\"image/gif\"}),\n)\n\nresult=await backend.server"
                        },
                        {
                            "type": "AssertStatement",
                            "name": "assert",
                            "range": [
                                1048,
                                1053
                            ],
                            "children": [
                                {
                                    "type": "BinaryExpression",
                                    "name": "==",
                                    "range": [
                                        1049,
                                        1051
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "result",
                                            "range": [
                                                1049,
                                                1055
                                            ],
                                            "children": [],
                                            "content": "v2.store.media.upload_media"
                                        },
                                        {
                                            "type": "Literal",
                                            "name": "\"http://test-url/media/laptop.jpeg\"",
                                            "range": [
                                                1051,
                                                1087
                                            ],
                                            "children": [],
                                            "content": "store.media.upload_media(\"test-user\",test_file)\nassert result==\"http://test-url/media/laptop.jpeg\"\n\n\nasync def test_upload_media_webp_success(mock_settings,mock_storage_client):\ntest_file=fastapi.UploadFile(\nfilename"
                                        }
                                    ],
                                    "content": "v2.store"
                                }
                            ],
                            "content": ".v2.store.media"
                        }
                    ],
                    "content": "=\"http://test-url/media/laptop.jpeg\"\n\n\nasync def test_upload_media_gif_success(mock_settings,mock_storage_client):\ntest_file=fastapi.UploadFile(\nfilename=\"test.gif\",\nfile=io.BytesIO(b \"GIF89a\"),#Valid GIF signature\nheaders=starlette.datastructures.Headers({\"content-type\":\"image/gif\"}),\n)\n\nresult=await backend.server.v2.store.media"
                }
            ],
            "content": "(\"test-user\",test_file)\nassert result==\"http://test-url/media/laptop.jpeg\"\n\n\nasync def test_upload_media_gif_success(mock_settings,mock_storage_client):\ntest_file=fastapi.UploadFile(\nfilename=\"test.gif\",\nfile=io.BytesIO(b \"GIF89a\"),#Valid GIF signature\nheaders=starlette.datastructures.Headers({\"content-type\":\"image/gif\"}),\n)\n\nresult=await backend.server.v2.store.media"
        },
        {
            "type": "FunctionDecl",
            "name": "test_upload_media_webp_success",
            "range": [
                1054,
                1135
            ],
            "children": [
                {
                    "type": "ParameterList",
                    "name": "",
                    "range": [
                        1057,
                        1061
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "mock_settings",
                            "range": [
                                1058,
                                1058
                            ],
                            "children": [],
                            "content": ","
                        },
                        {
                            "type": "Parameter",
                            "name": "mock_storage_client",
                            "range": [
                                1060,
                                1060
                            ],
                            "children": [],
                            "content": ")"
                        }
                    ],
                    "content": "\"test-user\",test_file)\n"
                },
                {
                    "type": "BlockStatement",
                    "name": "",
                    "range": [
                        1062,
                        1135
                    ],
                    "children": [
                        {
                            "type": "VariableDeclaration",
                            "name": "test_file",
                            "range": [
                                1064,
                                1107
                            ],
                            "children": [
                                {
                                    "type": "AssignmentExpression",
                                    "name": "=",
                                    "range": [
                                        1065,
                                        1107
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "UploadFile",
                                            "range": [
                                                1066,
                                                1107
                                            ],
                                            "children": [
                                                {
                                                    "type": "ArgumentList",
                                                    "name": "",
                                                    "range": [
                                                        1069,
                                                        1107
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "KeywordArgument",
                                                            "name": "filename",
                                                            "range": [
                                                                1071,
                                                                1073
                                                            ],
                                                            "children": [],
                                                            "content": "def test_upload_media_webp_success("
                                                        },
                                                        {
                                                            "type": "KeywordArgument",
                                                            "name": "file",
                                                            "range": [
                                                                1076,
                                                                1084
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "CallExpression",
                                                                    "name": "BytesIO",
                                                                    "range": [
                                                                        1078,
                                                                        1084
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "ArgumentList",
                                                                            "name": "",
                                                                            "range": [
                                                                                1081,
                                                                                1084
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "Literal",
                                                                                    "name": "b\"RIFF\\x00\\x00\\x00\\x00WEBP\"",
                                                                                    "range": [
                                                                                        1082,
                                                                                        1083
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "fastapi."
                                                                                }
                                                                            ],
                                                                            "content": "=fastapi.UploadFile"
                                                                        }
                                                                    ],
                                                                    "content": ":\ntest_file=fastapi.UploadFile"
                                                                }
                                                            ],
                                                            "content": "mock_storage_client):\ntest_file=fastapi.UploadFile"
                                                        },
                                                        {
                                                            "type": "KeywordArgument",
                                                            "name": "headers",
                                                            "range": [
                                                                1091,
                                                                1104
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "CallExpression",
                                                                    "name": "Headers",
                                                                    "range": [
                                                                        1093,
                                                                        1104
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "ArgumentList",
                                                                            "name": "",
                                                                            "range": [
                                                                                1098,
                                                                                1104
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "ObjectLiteral",
                                                                                    "name": "",
                                                                                    "range": [
                                                                                        1099,
                                                                                        1103
                                                                                    ],
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "Property",
                                                                                            "name": "content-type",
                                                                                            "range": [
                                                                                                1100,
                                                                                                1102
                                                                                            ],
                                                                                            "children": [],
                                                                                            "content": "),#"
                                                                                        }
                                                                                    ],
                                                                                    "content": "\"RIFF\\x00\\x00\\x00\\x00WEBP\"),#Valid"
                                                                                }
                                                                            ],
                                                                            "content": "b \"RIFF\\x00\\x00\\x00\\x00WEBP\"),#Valid WebP"
                                                                        }
                                                                    ],
                                                                    "content": "=io.BytesIO(b \"RIFF\\x00\\x00\\x00\\x00WEBP\"),#Valid WebP"
                                                                }
                                                            ],
                                                            "content": "\nfile=io.BytesIO(b \"RIFF\\x00\\x00\\x00\\x00WEBP\"),#Valid WebP"
                                                        }
                                                    ],
                                                    "content": "\nasync def test_upload_media_webp_success(mock_settings,mock_storage_client):\ntest_file=fastapi.UploadFile(\nfilename=\"test.webp\",\nfile=io.BytesIO(b \"RIFF\\x00\\x00\\x00\\x00WEBP\"),#Valid WebP signature\nheaders"
                                                }
                                            ],
                                            "content": "\"http://test-url/media/laptop.jpeg\"\n\n\nasync def test_upload_media_webp_success(mock_settings,mock_storage_client):\ntest_file=fastapi.UploadFile(\nfilename=\"test.webp\",\nfile=io.BytesIO(b \"RIFF\\x00\\x00\\x00\\x00WEBP\"),#Valid WebP signature\nheaders"
                                        }
                                    ],
                                    "content": "=\"http://test-url/media/laptop.jpeg\"\n\n\nasync def test_upload_media_webp_success(mock_settings,mock_storage_client):\ntest_file=fastapi.UploadFile(\nfilename=\"test.webp\",\nfile=io.BytesIO(b \"RIFF\\x00\\x00\\x00\\x00WEBP\"),#Valid WebP signature\nheaders"
                                }
                            ],
                            "content": "==\"http://test-url/media/laptop.jpeg\"\n\n\nasync def test_upload_media_webp_success(mock_settings,mock_storage_client):\ntest_file=fastapi.UploadFile(\nfilename=\"test.webp\",\nfile=io.BytesIO(b \"RIFF\\x00\\x00\\x00\\x00WEBP\"),#Valid WebP signature\nheaders"
                        },
                        {
                            "type": "ExpressionStatement",
                            "name": "",
                            "range": [
                                1110,
                                1129
                            ],
                            "children": [
                                {
                                    "type": "AssignmentExpression",
                                    "name": "=",
                                    "range": [
                                        1111,
                                        1129
                                    ],
                                    "children": [
                                        {
                                            "type": "AwaitExpression",
                                            "name": "await",
                                            "range": [
                                                1112,
                                                1129
                                            ],
                                            "children": [
                                                {
                                                    "type": "CallExpression",
                                                    "name": "upload_media",
                                                    "range": [
                                                        1113,
                                                        1129
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "ArgumentList",
                                                            "name": "",
                                                            "range": [
                                                                1124,
                                                                1129
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Literal",
                                                                    "name": "\"test-user\"",
                                                                    "range": [
                                                                        1125,
                                                                        1125
                                                                    ],
                                                                    "children": [],
                                                                    "content": "\n"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "test_file",
                                                                    "range": [
                                                                        1127,
                                                                        1127
                                                                    ],
                                                                    "children": [],
                                                                    "content": "="
                                                                }
                                                            ],
                                                            "content": "\n\nresult=await backend"
                                                        }
                                                    ],
                                                    "content": "Headers({\"content-type\":\"image/webp\"}),\n)\n\nresult=await backend"
                                                }
                                            ],
                                            "content": ".Headers({\"content-type\":\"image/webp\"}),\n)\n\nresult=await backend"
                                        }
                                    ],
                                    "content": "datastructures.Headers({\"content-type\":\"image/webp\"}),\n)\n\nresult=await backend"
                                }
                            ],
                            "content": ".datastructures.Headers({\"content-type\":\"image/webp\"}),\n)\n\nresult=await backend"
                        },
                        {
                            "type": "ExpressionStatement",
                            "name": "",
                            "range": [
                                1130,
                                1135
                            ],
                            "children": [
                                {
                                    "type": "AssertStatement",
                                    "name": "assert",
                                    "range": [
                                        1130,
                                        1135
                                    ],
                                    "children": [
                                        {
                                            "type": "BinaryExpression",
                                            "name": "==",
                                            "range": [
                                                1131,
                                                1134
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "result",
                                                    "range": [
                                                        1131,
                                                        1131
                                                    ],
                                                    "children": [],
                                                    "content": "server"
                                                },
                                                {
                                                    "type": "Literal",
                                                    "name": "\"http://test-url/media/laptop.jpeg\"",
                                                    "range": [
                                                        1134,
                                                        1134
                                                    ],
                                                    "children": [],
                                                    "content": "."
                                                }
                                            ],
                                            "content": "server.v2."
                                        }
                                    ],
                                    "content": ".server.v2.store"
                                }
                            ],
                            "content": ".server.v2.store"
                        }
                    ],
                    "content": "assert result==\"http://test-url/media/laptop.jpeg\"\n\n\nasync def test_upload_media_webp_success(mock_settings,mock_storage_client):\ntest_file=fastapi.UploadFile(\nfilename=\"test.webp\",\nfile=io.BytesIO(b \"RIFF\\x00\\x00\\x00\\x00WEBP\"),#Valid WebP signature\nheaders=starlette.datastructures.Headers({\"content-type\":\"image/webp\"}),\n)\n\nresult=await backend.server.v2.store"
                }
            ],
            "content": ".upload_media(\"test-user\",test_file)\nassert result==\"http://test-url/media/laptop.jpeg\"\n\n\nasync def test_upload_media_webp_success(mock_settings,mock_storage_client):\ntest_file=fastapi.UploadFile(\nfilename=\"test.webp\",\nfile=io.BytesIO(b \"RIFF\\x00\\x00\\x00\\x00WEBP\"),#Valid WebP signature\nheaders=starlette.datastructures.Headers({\"content-type\":\"image/webp\"}),\n)\n\nresult=await backend.server.v2.store"
        },
        {
            "type": "FunctionDecl",
            "name": "test_upload_media_webm_success",
            "range": [
                1136,
                1217
            ],
            "children": [
                {
                    "type": "ParameterList",
                    "name": "",
                    "range": [
                        1139,
                        1143
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "mock_settings",
                            "range": [
                                1140,
                                1140
                            ],
                            "children": [],
                            "content": "("
                        },
                        {
                            "type": "Parameter",
                            "name": "mock_storage_client",
                            "range": [
                                1142,
                                1142
                            ],
                            "children": [],
                            "content": ","
                        }
                    ],
                    "content": "upload_media(\"test-user\",test_file"
                },
                {
                    "type": "BlockStatement",
                    "name": "",
                    "range": [
                        1144,
                        1217
                    ],
                    "children": [
                        {
                            "type": "VariableDeclaration",
                            "name": "test_file",
                            "range": [
                                1146,
                                1189
                            ],
                            "children": [
                                {
                                    "type": "AssignmentExpression",
                                    "name": "=",
                                    "range": [
                                        1147,
                                        1189
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "UploadFile",
                                            "range": [
                                                1148,
                                                1189
                                            ],
                                            "children": [
                                                {
                                                    "type": "ArgumentList",
                                                    "name": "",
                                                    "range": [
                                                        1151,
                                                        1189
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Argument",
                                                            "name": "filename",
                                                            "range": [
                                                                1153,
                                                                1155
                                                            ],
                                                            "children": [],
                                                            "content": "\nasync def"
                                                        },
                                                        {
                                                            "type": "Argument",
                                                            "name": "file",
                                                            "range": [
                                                                1158,
                                                                1166
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "CallExpression",
                                                                    "name": "BytesIO",
                                                                    "range": [
                                                                        1160,
                                                                        1166
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "ArgumentList",
                                                                            "name": "",
                                                                            "range": [
                                                                                1163,
                                                                                1166
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "Argument",
                                                                                    "name": "b",
                                                                                    "range": [
                                                                                        1164,
                                                                                        1165
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "test_file="
                                                                                }
                                                                            ],
                                                                            "content": "\ntest_file=fastapi"
                                                                        }
                                                                    ],
                                                                    "content": "mock_storage_client):\ntest_file=fastapi"
                                                                }
                                                            ],
                                                            "content": "mock_settings,mock_storage_client):\ntest_file=fastapi"
                                                        },
                                                        {
                                                            "type": "Argument",
                                                            "name": "headers",
                                                            "range": [
                                                                1173,
                                                                1186
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "CallExpression",
                                                                    "name": "Headers",
                                                                    "range": [
                                                                        1175,
                                                                        1186
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "ArgumentList",
                                                                            "name": "",
                                                                            "range": [
                                                                                1180,
                                                                                1186
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "Argument",
                                                                                    "name": "",
                                                                                    "range": [
                                                                                        1181,
                                                                                        1185
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "(b \"\\x1a\\x45\\xdf\\xa3\"),"
                                                                                }
                                                                            ],
                                                                            "content": "BytesIO(b \"\\x1a\\x45\\xdf\\xa3\"),#"
                                                                        }
                                                                    ],
                                                                    "content": "\nfile=io.BytesIO(b \"\\x1a\\x45\\xdf\\xa3\"),#"
                                                                }
                                                            ],
                                                            "content": "\"test.webm\",\nfile=io.BytesIO(b \"\\x1a\\x45\\xdf\\xa3\"),#"
                                                        }
                                                    ],
                                                    "content": "\n\n\nasync def test_upload_media_webm_success(mock_settings,mock_storage_client):\ntest_file=fastapi.UploadFile(\nfilename=\"test.webm\",\nfile=io.BytesIO(b \"\\x1a\\x45\\xdf\\xa3\"),#Valid WebM signature"
                                                }
                                            ],
                                            "content": "==\"http://test-url/media/laptop.jpeg\"\n\n\nasync def test_upload_media_webm_success(mock_settings,mock_storage_client):\ntest_file=fastapi.UploadFile(\nfilename=\"test.webm\",\nfile=io.BytesIO(b \"\\x1a\\x45\\xdf\\xa3\"),#Valid WebM signature"
                                        }
                                    ],
                                    "content": "result==\"http://test-url/media/laptop.jpeg\"\n\n\nasync def test_upload_media_webm_success(mock_settings,mock_storage_client):\ntest_file=fastapi.UploadFile(\nfilename=\"test.webm\",\nfile=io.BytesIO(b \"\\x1a\\x45\\xdf\\xa3\"),#Valid WebM signature"
                                }
                            ],
                            "content": "assert result==\"http://test-url/media/laptop.jpeg\"\n\n\nasync def test_upload_media_webm_success(mock_settings,mock_storage_client):\ntest_file=fastapi.UploadFile(\nfilename=\"test.webm\",\nfile=io.BytesIO(b \"\\x1a\\x45\\xdf\\xa3\"),#Valid WebM signature"
                        },
                        {
                            "type": "ExpressionStatement",
                            "name": "result",
                            "range": [
                                1192,
                                1210
                            ],
                            "children": [
                                {
                                    "type": "AssignmentExpression",
                                    "name": "=",
                                    "range": [
                                        1193,
                                        1210
                                    ],
                                    "children": [
                                        {
                                            "type": "AwaitExpression",
                                            "name": "await",
                                            "range": [
                                                1194,
                                                1210
                                            ],
                                            "children": [
                                                {
                                                    "type": "CallExpression",
                                                    "name": "upload_media",
                                                    "range": [
                                                        1195,
                                                        1210
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "ArgumentList",
                                                            "name": "",
                                                            "range": [
                                                                1206,
                                                                1210
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Argument",
                                                                    "name": "\"test-user\"",
                                                                    "range": [
                                                                        1207,
                                                                        1207
                                                                    ],
                                                                    "children": [],
                                                                    "content": ")"
                                                                },
                                                                {
                                                                    "type": "Argument",
                                                                    "name": "test_file",
                                                                    "range": [
                                                                        1209,
                                                                        1209
                                                                    ],
                                                                    "children": [],
                                                                    "content": "\n"
                                                                }
                                                            ],
                                                            "content": "\n)\n\nresult"
                                                        }
                                                    ],
                                                    "content": "datastructures.Headers({\"content-type\":\"video/webm\"}),\n)\n\nresult"
                                                }
                                            ],
                                            "content": ".datastructures.Headers({\"content-type\":\"video/webm\"}),\n)\n\nresult"
                                        }
                                    ],
                                    "content": "starlette.datastructures.Headers({\"content-type\":\"video/webm\"}),\n)\n\nresult"
                                }
                            ],
                            "content": "=starlette.datastructures.Headers({\"content-type\":\"video/webm\"}),\n)\n\nresult"
                        },
                        {
                            "type": "ExpressionStatement",
                            "name": "assert",
                            "range": [
                                1212,
                                1216
                            ],
                            "children": [
                                {
                                    "type": "BinaryExpression",
                                    "name": "==",
                                    "range": [
                                        1213,
                                        1216
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "result",
                                            "range": [
                                                1213,
                                                1213
                                            ],
                                            "children": [],
                                            "content": "backend"
                                        },
                                        {
                                            "type": "Literal",
                                            "name": "\"http://test-url/media/laptop.jpeg\"",
                                            "range": [
                                                1215,
                                                1216
                                            ],
                                            "children": [],
                                            "content": "server."
                                        }
                                    ],
                                    "content": "backend.server."
                                }
                            ],
                            "content": "await backend.server."
                        }
                    ],
                    "content": ")\nassert result==\"http://test-url/media/laptop.jpeg\"\n\n\nasync def test_upload_media_webm_success(mock_settings,mock_storage_client):\ntest_file=fastapi.UploadFile(\nfilename=\"test.webm\",\nfile=io.BytesIO(b \"\\x1a\\x45\\xdf\\xa3\"),#Valid WebM signature\nheaders=starlette.datastructures.Headers({\"content-type\":\"video/webm\"}),\n)\n\nresult=await backend.server.v2"
                }
            ],
            "content": ".media.upload_media(\"test-user\",test_file)\nassert result==\"http://test-url/media/laptop.jpeg\"\n\n\nasync def test_upload_media_webm_success(mock_settings,mock_storage_client):\ntest_file=fastapi.UploadFile(\nfilename=\"test.webm\",\nfile=io.BytesIO(b \"\\x1a\\x45\\xdf\\xa3\"),#Valid WebM signature\nheaders=starlette.datastructures.Headers({\"content-type\":\"video/webm\"}),\n)\n\nresult=await backend.server.v2"
        },
        {
            "type": "FunctionDecl",
            "name": "test_upload_media_mismatched_signature",
            "range": [
                1218,
                1314
            ],
            "children": [
                {
                    "type": "ParameterList",
                    "name": "",
                    "range": [
                        1221,
                        1225
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "mock_settings",
                            "range": [
                                1222,
                                1222
                            ],
                            "children": [],
                            "content": "."
                        },
                        {
                            "type": "Parameter",
                            "name": "mock_storage_client",
                            "range": [
                                1224,
                                1224
                            ],
                            "children": [],
                            "content": "("
                        }
                    ],
                    "content": "media.upload_media(\"test-user\""
                },
                {
                    "type": "BlockStatement",
                    "name": "",
                    "range": [
                        1226,
                        1314
                    ],
                    "children": [
                        {
                            "type": "VariableDeclaration",
                            "name": "test_file",
                            "range": [
                                1228,
                                1274
                            ],
                            "children": [
                                {
                                    "type": "AssignmentExpression",
                                    "name": "=",
                                    "range": [
                                        1229,
                                        1274
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "UploadFile",
                                            "range": [
                                                1230,
                                                1274
                                            ],
                                            "children": [
                                                {
                                                    "type": "ArgumentList",
                                                    "name": "",
                                                    "range": [
                                                        1233,
                                                        1274
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "KeywordArgument",
                                                            "name": "filename",
                                                            "range": [
                                                                1235,
                                                                1237
                                                            ],
                                                            "children": [],
                                                            "content": "\n\n\n"
                                                        },
                                                        {
                                                            "type": "KeywordArgument",
                                                            "name": "file",
                                                            "range": [
                                                                1240,
                                                                1248
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "CallExpression",
                                                                    "name": "BytesIO",
                                                                    "range": [
                                                                        1242,
                                                                        1248
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "ArgumentList",
                                                                            "name": "",
                                                                            "range": [
                                                                                1245,
                                                                                1248
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "Literal",
                                                                                    "name": "b\"\\x89PNG\\r\\n\\x1a\\n\"",
                                                                                    "range": [
                                                                                        1246,
                                                                                        1247
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": ":\n"
                                                                                }
                                                                            ],
                                                                            "content": "):\ntest_file"
                                                                        }
                                                                    ],
                                                                    "content": "mock_settings,mock_storage_client):\ntest_file"
                                                                }
                                                            ],
                                                            "content": "test_upload_media_mismatched_signature(mock_settings,mock_storage_client):\ntest_file"
                                                        },
                                                        {
                                                            "type": "KeywordArgument",
                                                            "name": "headers",
                                                            "range": [
                                                                1258,
                                                                1271
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "CallExpression",
                                                                    "name": "Headers",
                                                                    "range": [
                                                                        1260,
                                                                        1271
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "ArgumentList",
                                                                            "name": "",
                                                                            "range": [
                                                                                1265,
                                                                                1271
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "ObjectExpression",
                                                                                    "name": "",
                                                                                    "range": [
                                                                                        1266,
                                                                                        1270
                                                                                    ],
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "Property",
                                                                                            "name": "content-type",
                                                                                            "range": [
                                                                                                1267,
                                                                                                1269
                                                                                            ],
                                                                                            "children": [],
                                                                                            "content": "\"\\x89PNG\\r\\n\\x1a\\n\"),"
                                                                                        }
                                                                                    ],
                                                                                    "content": "b \"\\x89PNG\\r\\n\\x1a\\n\"),#"
                                                                                }
                                                                            ],
                                                                            "content": "(b \"\\x89PNG\\r\\n\\x1a\\n\"),#PNG"
                                                                        }
                                                                    ],
                                                                    "content": "file=io.BytesIO(b \"\\x89PNG\\r\\n\\x1a\\n\"),#PNG"
                                                                }
                                                            ],
                                                            "content": ",\nfile=io.BytesIO(b \"\\x89PNG\\r\\n\\x1a\\n\"),#PNG"
                                                        }
                                                    ],
                                                    "content": "=\"http://test-url/media/laptop.jpeg\"\n\n\nasync def test_upload_media_mismatched_signature(mock_settings,mock_storage_client):\ntest_file=fastapi.UploadFile(\nfilename=\"test.jpeg\",\nfile=io.BytesIO(b \"\\x89PNG\\r\\n\\x1a\\n\"),#PNG signature with JPEG"
                                                }
                                            ],
                                            "content": "assert result==\"http://test-url/media/laptop.jpeg\"\n\n\nasync def test_upload_media_mismatched_signature(mock_settings,mock_storage_client):\ntest_file=fastapi.UploadFile(\nfilename=\"test.jpeg\",\nfile=io.BytesIO(b \"\\x89PNG\\r\\n\\x1a\\n\"),#PNG signature with JPEG"
                                        }
                                    ],
                                    "content": "\nassert result==\"http://test-url/media/laptop.jpeg\"\n\n\nasync def test_upload_media_mismatched_signature(mock_settings,mock_storage_client):\ntest_file=fastapi.UploadFile(\nfilename=\"test.jpeg\",\nfile=io.BytesIO(b \"\\x89PNG\\r\\n\\x1a\\n\"),#PNG signature with JPEG"
                                }
                            ],
                            "content": ")\nassert result==\"http://test-url/media/laptop.jpeg\"\n\n\nasync def test_upload_media_mismatched_signature(mock_settings,mock_storage_client):\ntest_file=fastapi.UploadFile(\nfilename=\"test.jpeg\",\nfile=io.BytesIO(b \"\\x89PNG\\r\\n\\x1a\\n\"),#PNG signature with JPEG"
                        },
                        {
                            "type": "WithStatement",
                            "name": "",
                            "range": [
                                1277,
                                1313
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "raises",
                                    "range": [
                                        1278,
                                        1293
                                    ],
                                    "children": [
                                        {
                                            "type": "ArgumentList",
                                            "name": "",
                                            "range": [
                                                1281,
                                                1293
                                            ],
                                            "children": [
                                                {
                                                    "type": "MemberExpression",
                                                    "name": "InvalidFileTypeError",
                                                    "range": [
                                                        1282,
                                                        1292
                                                    ],
                                                    "children": [],
                                                    "content": "datastructures.Headers({\"content-type\":\"image/jpeg\"}),"
                                                }
                                            ],
                                            "content": ".datastructures.Headers({\"content-type\":\"image/jpeg\"}),\n"
                                        }
                                    ],
                                    "content": "headers=starlette.datastructures.Headers({\"content-type\":\"image/jpeg\"}),\n"
                                },
                                {
                                    "type": "BlockStatement",
                                    "name": "",
                                    "range": [
                                        1294,
                                        1313
                                    ],
                                    "children": [
                                        {
                                            "type": "ExpressionStatement",
                                            "name": "",
                                            "range": [
                                                1296,
                                                1312
                                            ],
                                            "children": [
                                                {
                                                    "type": "AwaitExpression",
                                                    "name": "",
                                                    "range": [
                                                        1296,
                                                        1312
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "CallExpression",
                                                            "name": "upload_media",
                                                            "range": [
                                                                1297,
                                                                1312
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "ArgumentList",
                                                                    "name": "",
                                                                    "range": [
                                                                        1308,
                                                                        1312
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Literal",
                                                                            "name": "\"test-user\"",
                                                                            "range": [
                                                                                1309,
                                                                                1309
                                                                            ],
                                                                            "children": [],
                                                                            "content": "."
                                                                        },
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "test_file",
                                                                            "range": [
                                                                                1311,
                                                                                1311
                                                                            ],
                                                                            "children": [],
                                                                            "content": "."
                                                                        }
                                                                    ],
                                                                    "content": "store.exceptions.InvalidFileTypeError"
                                                                }
                                                            ],
                                                            "content": "with pytest.raises(backend.server.v2.store.exceptions.InvalidFileTypeError"
                                                        }
                                                    ],
                                                    "content": "\nwith pytest.raises(backend.server.v2.store.exceptions.InvalidFileTypeError"
                                                }
                                            ],
                                            "content": "\nwith pytest.raises(backend.server.v2.store.exceptions.InvalidFileTypeError"
                                        }
                                    ],
                                    "content": ")\n\nwith pytest.raises(backend.server.v2.store.exceptions.InvalidFileTypeError)"
                                }
                            ],
                            "content": "\nheaders=starlette.datastructures.Headers({\"content-type\":\"image/jpeg\"}),\n)\n\nwith pytest.raises(backend.server.v2.store.exceptions.InvalidFileTypeError)"
                        }
                    ],
                    "content": ",test_file)\nassert result==\"http://test-url/media/laptop.jpeg\"\n\n\nasync def test_upload_media_mismatched_signature(mock_settings,mock_storage_client):\ntest_file=fastapi.UploadFile(\nfilename=\"test.jpeg\",\nfile=io.BytesIO(b \"\\x89PNG\\r\\n\\x1a\\n\"),#PNG signature with JPEG content type\nheaders=starlette.datastructures.Headers({\"content-type\":\"image/jpeg\"}),\n)\n\nwith pytest.raises(backend.server.v2.store.exceptions.InvalidFileTypeError):"
                }
            ],
            "content": ".store.media.upload_media(\"test-user\",test_file)\nassert result==\"http://test-url/media/laptop.jpeg\"\n\n\nasync def test_upload_media_mismatched_signature(mock_settings,mock_storage_client):\ntest_file=fastapi.UploadFile(\nfilename=\"test.jpeg\",\nfile=io.BytesIO(b \"\\x89PNG\\r\\n\\x1a\\n\"),#PNG signature with JPEG content type\nheaders=starlette.datastructures.Headers({\"content-type\":\"image/jpeg\"}),\n)\n\nwith pytest.raises(backend.server.v2.store.exceptions.InvalidFileTypeError):"
        },
        {
            "type": "FunctionDecl",
            "name": "test_upload_media_invalid_signature",
            "range": [
                1315,
                1403
            ],
            "children": [
                {
                    "type": "ParameterList",
                    "name": "parameters",
                    "range": [
                        1318,
                        1322
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "mock_settings",
                            "range": [
                                1319,
                                1319
                            ],
                            "children": [],
                            "content": "server"
                        },
                        {
                            "type": "Parameter",
                            "name": "mock_storage_client",
                            "range": [
                                1321,
                                1321
                            ],
                            "children": [],
                            "content": "v2"
                        }
                    ],
                    "content": ".server.v2."
                },
                {
                    "type": "BlockStatement",
                    "name": "body",
                    "range": [
                        1324,
                        1403
                    ],
                    "children": [
                        {
                            "type": "VariableDeclaration",
                            "name": "test_file",
                            "range": [
                                1325,
                                1364
                            ],
                            "children": [
                                {
                                    "type": "AssignmentExpression",
                                    "name": "=",
                                    "range": [
                                        1326,
                                        1364
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "UploadFile",
                                            "range": [
                                                1327,
                                                1364
                                            ],
                                            "children": [
                                                {
                                                    "type": "ArgumentList",
                                                    "name": "arguments",
                                                    "range": [
                                                        1330,
                                                        1364
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "filename",
                                                            "range": [
                                                                1332,
                                                                1334
                                                            ],
                                                            "children": [],
                                                            "content": ")\n\n"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "file",
                                                            "range": [
                                                                1337,
                                                                1345
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "CallExpression",
                                                                    "name": "BytesIO",
                                                                    "range": [
                                                                        1339,
                                                                        1345
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "ArgumentList",
                                                                            "name": "arguments",
                                                                            "range": [
                                                                                1342,
                                                                                1345
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "Literal",
                                                                                    "name": "b",
                                                                                    "range": [
                                                                                        1343,
                                                                                        1344
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "):"
                                                                                }
                                                                            ],
                                                                            "content": "mock_storage_client):\n"
                                                                        }
                                                                    ],
                                                                    "content": "(mock_settings,mock_storage_client):\n"
                                                                }
                                                            ],
                                                            "content": "def test_upload_media_invalid_signature(mock_settings,mock_storage_client):\n"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "headers",
                                                            "range": [
                                                                1348,
                                                                1361
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "CallExpression",
                                                                    "name": "Headers",
                                                                    "range": [
                                                                        1350,
                                                                        1361
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "ArgumentList",
                                                                            "name": "arguments",
                                                                            "range": [
                                                                                1355,
                                                                                1361
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "ObjectExpression",
                                                                                    "name": "headers",
                                                                                    "range": [
                                                                                        1356,
                                                                                        1360
                                                                                    ],
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "Property",
                                                                                            "name": "content-type",
                                                                                            "range": [
                                                                                                1357,
                                                                                                1359
                                                                                            ],
                                                                                            "children": [],
                                                                                            "content": "\nfile="
                                                                                        }
                                                                                    ],
                                                                                    "content": ",\nfile=io"
                                                                                }
                                                                            ],
                                                                            "content": "\"test.jpeg\",\nfile=io."
                                                                        }
                                                                    ],
                                                                    "content": "UploadFile(\nfilename=\"test.jpeg\",\nfile=io."
                                                                }
                                                            ],
                                                            "content": "fastapi.UploadFile(\nfilename=\"test.jpeg\",\nfile=io."
                                                        }
                                                    ],
                                                    "content": ",test_file)\n\n\nasync def test_upload_media_invalid_signature(mock_settings,mock_storage_client):\ntest_file=fastapi.UploadFile(\nfilename=\"test.jpeg\",\nfile=io.BytesIO(b"
                                                }
                                            ],
                                            "content": "upload_media(\"test-user\",test_file)\n\n\nasync def test_upload_media_invalid_signature(mock_settings,mock_storage_client):\ntest_file=fastapi.UploadFile(\nfilename=\"test.jpeg\",\nfile=io.BytesIO(b"
                                        }
                                    ],
                                    "content": ".upload_media(\"test-user\",test_file)\n\n\nasync def test_upload_media_invalid_signature(mock_settings,mock_storage_client):\ntest_file=fastapi.UploadFile(\nfilename=\"test.jpeg\",\nfile=io.BytesIO(b"
                                }
                            ],
                            "content": "media.upload_media(\"test-user\",test_file)\n\n\nasync def test_upload_media_invalid_signature(mock_settings,mock_storage_client):\ntest_file=fastapi.UploadFile(\nfilename=\"test.jpeg\",\nfile=io.BytesIO(b"
                        },
                        {
                            "type": "WithStatement",
                            "name": "with",
                            "range": [
                                1367,
                                1403
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "raises",
                                    "range": [
                                        1368,
                                        1383
                                    ],
                                    "children": [
                                        {
                                            "type": "ArgumentList",
                                            "name": "arguments",
                                            "range": [
                                                1371,
                                                1383
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "InvalidFileTypeError",
                                                    "range": [
                                                        1372,
                                                        1382
                                                    ],
                                                    "children": [],
                                                    "content": ".datastructures.Headers({\"content-type\":\"image/jpeg\"})"
                                                }
                                            ],
                                            "content": "starlette.datastructures.Headers({\"content-type\":\"image/jpeg\"}),"
                                        }
                                    ],
                                    "content": "\nheaders=starlette.datastructures.Headers({\"content-type\":\"image/jpeg\"}),"
                                },
                                {
                                    "type": "BlockStatement",
                                    "name": "body",
                                    "range": [
                                        1385,
                                        1403
                                    ],
                                    "children": [
                                        {
                                            "type": "ExpressionStatement",
                                            "name": "await",
                                            "range": [
                                                1386,
                                                1402
                                            ],
                                            "children": [
                                                {
                                                    "type": "CallExpression",
                                                    "name": "upload_media",
                                                    "range": [
                                                        1387,
                                                        1402
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "ArgumentList",
                                                            "name": "arguments",
                                                            "range": [
                                                                1398,
                                                                1402
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "test-user",
                                                                    "range": [
                                                                        1399,
                                                                        1399
                                                                    ],
                                                                    "children": [],
                                                                    "content": "store"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "test_file",
                                                                    "range": [
                                                                        1401,
                                                                        1401
                                                                    ],
                                                                    "children": [],
                                                                    "content": "exceptions"
                                                                }
                                                            ],
                                                            "content": ".store.exceptions."
                                                        }
                                                    ],
                                                    "content": "\nwith pytest.raises(backend.server.v2.store.exceptions."
                                                }
                                            ],
                                            "content": "\n\nwith pytest.raises(backend.server.v2.store.exceptions."
                                        }
                                    ],
                                    "content": ")\n\nwith pytest.raises(backend.server.v2.store.exceptions.InvalidFileTypeError"
                                }
                            ],
                            "content": ",\nheaders=starlette.datastructures.Headers({\"content-type\":\"image/jpeg\"}),\n)\n\nwith pytest.raises(backend.server.v2.store.exceptions.InvalidFileTypeError"
                        }
                    ],
                    "content": ".media.upload_media(\"test-user\",test_file)\n\n\nasync def test_upload_media_invalid_signature(mock_settings,mock_storage_client):\ntest_file=fastapi.UploadFile(\nfilename=\"test.jpeg\",\nfile=io.BytesIO(b \"invalid signature\"),\nheaders=starlette.datastructures.Headers({\"content-type\":\"image/jpeg\"}),\n)\n\nwith pytest.raises(backend.server.v2.store.exceptions.InvalidFileTypeError"
                }
            ],
            "content": "\nawait backend.server.v2.store.media.upload_media(\"test-user\",test_file)\n\n\nasync def test_upload_media_invalid_signature(mock_settings,mock_storage_client):\ntest_file=fastapi.UploadFile(\nfilename=\"test.jpeg\",\nfile=io.BytesIO(b \"invalid signature\"),\nheaders=starlette.datastructures.Headers({\"content-type\":\"image/jpeg\"}),\n)\n\nwith pytest.raises(backend.server.v2.store.exceptions.InvalidFileTypeError"
        }
    ],
    "content": "import io\nimport unittest.mock\n\nimport fastapi\nimport pytest\nimport starlette.datastructures\n\nimport backend.server.v2.store.exceptions\nimport backend.server.v2.store.media\nfrom backend.util.settings import Settings\n\n\n@pytest.fixture\ndef mock_settings(monkeypatch):\nsettings=Settings()\nsettings.config.media_gcs_bucket_name=\"test-bucket\"\nsettings.config.google_application_credentials=\"test-credentials\"\nmonkeypatch.setattr(\"backend.server.v2.store.media.Settings\",lambda:settings)\nreturn settings\n\n\n@pytest.fixture\ndef mock_storage_client(mocker):\nmock_client=unittest.mock.MagicMock()\nmock_bucket=unittest.mock.MagicMock()\nmock_blob=unittest.mock.MagicMock()\n\nmock_client.bucket.return_value=mock_bucket\nmock_bucket.blob.return_value=mock_blob\nmock_blob.public_url=\"http://test-url/media/laptop.jpeg\"\n\nmocker.patch(\"google.cloud.storage.Client\",return_value=mock_client)\n\nreturn mock_client\n\n\nasync def test_upload_media_success(mock_settings,mock_storage_client):\n#Create test JPEG data with valid signature\ntest_data=b \"\\xFF\\xD8\\xFF\"+b \"test data\"\n\ntest_file=fastapi.UploadFile(\nfilename=\"laptop.jpeg\",\nfile=io.BytesIO(test_data),\nheaders=starlette.datastructures.Headers({\"content-type\":\"image/jpeg\"}),\n)\n\nresult=await backend.server.v2.store.media.upload_media(\"test-user\",test_file)\n\nassert result==\"http://test-url/media/laptop.jpeg\"\nmock_bucket=mock_storage_client.bucket.return_value\nmock_blob=mock_bucket.blob.return_value\nmock_blob.upload_from_string.assert_called_once()\n\n\nasync def test_upload_media_invalid_type(mock_settings,mock_storage_client):\ntest_file=fastapi.UploadFile(\nfilename=\"test.txt\",\nfile=io.BytesIO(b \"test data\"),\nheaders=starlette.datastructures.Headers({\"content-type\":\"text/plain\"}),\n)\n\nwith pytest.raises(backend.server.v2.store.exceptions.InvalidFileTypeError):\nawait backend.server.v2.store.media.upload_media(\"test-user\",test_file)\n\nmock_bucket=mock_storage_client.bucket.return_value\nmock_blob=mock_bucket.blob.return_value\nmock_blob.upload_from_string.assert_not_called()\n\n\nasync def test_upload_media_missing_credentials(monkeypatch):\nsettings=Settings()\nsettings.config.media_gcs_bucket_name=\"\"\nsettings.config.google_application_credentials=\"\"\nmonkeypatch.setattr(\"backend.server.v2.store.media.Settings\",lambda:settings)\n\ntest_file=fastapi.UploadFile(\nfilename=\"laptop.jpeg\",\nfile=io.BytesIO(b \"\\xFF\\xD8\\xFF\"+b \"test data\"),#Valid JPEG signature\nheaders=starlette.datastructures.Headers({\"content-type\":\"image/jpeg\"}),\n)\n\nwith pytest.raises(backend.server.v2.store.exceptions.StorageConfigError):\nawait backend.server.v2.store.media.upload_media(\"test-user\",test_file)\n\n\nasync def test_upload_media_video_type(mock_settings,mock_storage_client):\ntest_file=fastapi.UploadFile(\nfilename=\"test.mp4\",\nfile=io.BytesIO(b \"\\x00\\x00\\x00\\x18ftypmp42\"),#Valid MP4 signature\nheaders=starlette.datastructures.Headers({\"content-type\":\"video/mp4\"}),\n)\n\nresult=await backend.server.v2.store.media.upload_media(\"test-user\",test_file)\n\nassert result==\"http://test-url/media/laptop.jpeg\"\nmock_bucket=mock_storage_client.bucket.return_value\nmock_blob=mock_bucket.blob.return_value\nmock_blob.upload_from_string.assert_called_once()\n\n\nasync def test_upload_media_file_too_large(mock_settings,mock_storage_client):\nlarge_data=b \"\\xFF\\xD8\\xFF\"+b \"x\"*(\n50*1024*1024+1\n)#50MB+1byte with valid JPEG signature\ntest_file=fastapi.UploadFile(\nfilename=\"laptop.jpeg\",\nfile=io.BytesIO(large_data),\nheaders=starlette.datastructures.Headers({\"content-type\":\"image/jpeg\"}),\n)\n\nwith pytest.raises(backend.server.v2.store.exceptions.FileSizeTooLargeError):\nawait backend.server.v2.store.media.upload_media(\"test-user\",test_file)\n\n\nasync def test_upload_media_file_read_error(mock_settings,mock_storage_client):\ntest_file=fastapi.UploadFile(\nfilename=\"laptop.jpeg\",\nfile=io.BytesIO(b\"\"),#Empty file that will raise error on read\nheaders=starlette.datastructures.Headers({\"content-type\":\"image/jpeg\"}),\n)\ntest_file.read=unittest.mock.AsyncMock(side_effect=Exception(\"Read error\"))\n\nwith pytest.raises(backend.server.v2.store.exceptions.FileReadError):\nawait backend.server.v2.store.media.upload_media(\"test-user\",test_file)\n\n\nasync def test_upload_media_png_success(mock_settings,mock_storage_client):\ntest_file=fastapi.UploadFile(\nfilename=\"test.png\",\nfile=io.BytesIO(b \"\\x89PNG\\r\\n\\x1a\\n\"),#Valid PNG signature\nheaders=starlette.datastructures.Headers({\"content-type\":\"image/png\"}),\n)\n\nresult=await backend.server.v2.store.media.upload_media(\"test-user\",test_file)\nassert result==\"http://test-url/media/laptop.jpeg\"\n\n\nasync def test_upload_media_gif_success(mock_settings,mock_storage_client):\ntest_file=fastapi.UploadFile(\nfilename=\"test.gif\",\nfile=io.BytesIO(b \"GIF89a\"),#Valid GIF signature\nheaders=starlette.datastructures.Headers({\"content-type\":\"image/gif\"}),\n)\n\nresult=await backend.server.v2.store.media.upload_media(\"test-user\",test_file)\nassert result==\"http://test-url/media/laptop.jpeg\"\n\n\nasync def test_upload_media_webp_success(mock_settings,mock_storage_client):\ntest_file=fastapi.UploadFile(\nfilename=\"test.webp\",\nfile=io.BytesIO(b \"RIFF\\x00\\x00\\x00\\x00WEBP\"),#Valid WebP signature\nheaders=starlette.datastructures.Headers({\"content-type\":\"image/webp\"}),\n)\n\nresult=await backend.server.v2.store.media.upload_media(\"test-user\",test_file)\nassert result==\"http://test-url/media/laptop.jpeg\"\n\n\nasync def test_upload_media_webm_success(mock_settings,mock_storage_client):\ntest_file=fastapi.UploadFile(\nfilename=\"test.webm\",\nfile=io.BytesIO(b \"\\x1a\\x45\\xdf\\xa3\"),#Valid WebM signature\nheaders=starlette.datastructures.Headers({\"content-type\":\"video/webm\"}),\n)\n\nresult=await backend.server.v2.store.media.upload_media(\"test-user\",test_file)\nassert result==\"http://test-url/media/laptop.jpeg\"\n\n\nasync def test_upload_media_mismatched_signature(mock_settings,mock_storage_client):\ntest_file=fastapi.UploadFile(\nfilename=\"test.jpeg\",\nfile=io.BytesIO(b \"\\x89PNG\\r\\n\\x1a\\n\"),#PNG signature with JPEG content type\nheaders=starlette.datastructures.Headers({\"content-type\":\"image/jpeg\"}),\n)\n\nwith pytest.raises(backend.server.v2.store.exceptions.InvalidFileTypeError):\nawait backend.server.v2.store.media.upload_media(\"test-user\",test_file)\n\n\nasync def test_upload_media_invalid_signature(mock_settings,mock_storage_client):\ntest_file=fastapi.UploadFile(\nfilename=\"test.jpeg\",\nfile=io.BytesIO(b \"invalid signature\"),\nheaders=starlette.datastructures.Headers({\"content-type\":\"image/jpeg\"}),\n)\n\nwith pytest.raises(backend.server.v2.store.exceptions.InvalidFileTypeError"
}