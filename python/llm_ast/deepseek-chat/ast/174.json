{
    "type": "Program",
    "name": "Global",
    "range": [
        0,
        409
    ],
    "children": [
        {
            "type": "EncodingDeclaration",
            "name": "utf-8",
            "range": [
                0,
                12
            ],
            "children": [
                {
                    "type": "Literal",
                    "name": "coding",
                    "range": [
                        4,
                        5
                    ],
                    "children": [],
                    "content": "coding:"
                },
                {
                    "type": "Literal",
                    "name": "utf",
                    "range": [
                        6,
                        7
                    ],
                    "children": [],
                    "content": "utf-"
                },
                {
                    "type": "Literal",
                    "name": "8",
                    "range": [
                        8,
                        9
                    ],
                    "children": [],
                    "content": "8-"
                }
            ],
            "content": "#-*-coding:utf-8-*-\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "collections.deque",
            "range": [
                13,
                17
            ],
            "children": [
                {
                    "type": "Identifier",
                    "name": "from",
                    "range": [
                        13,
                        14
                    ],
                    "children": [],
                    "content": "from collections"
                },
                {
                    "type": "Identifier",
                    "name": "collections",
                    "range": [
                        14,
                        15
                    ],
                    "children": [],
                    "content": "collections import"
                },
                {
                    "type": "Identifier",
                    "name": "import",
                    "range": [
                        15,
                        16
                    ],
                    "children": [],
                    "content": "import deque"
                },
                {
                    "type": "Identifier",
                    "name": "deque",
                    "range": [
                        16,
                        17
                    ],
                    "children": [],
                    "content": "deque\n"
                }
            ],
            "content": "from collections import deque\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "enum.Enum",
            "range": [
                18,
                22
            ],
            "children": [
                {
                    "type": "Identifier",
                    "name": "from",
                    "range": [
                        18,
                        19
                    ],
                    "children": [],
                    "content": "from enum"
                },
                {
                    "type": "Identifier",
                    "name": "enum",
                    "range": [
                        19,
                        20
                    ],
                    "children": [],
                    "content": "enum import"
                },
                {
                    "type": "Identifier",
                    "name": "import",
                    "range": [
                        20,
                        21
                    ],
                    "children": [],
                    "content": "import Enum"
                },
                {
                    "type": "Identifier",
                    "name": "Enum",
                    "range": [
                        21,
                        22
                    ],
                    "children": [],
                    "content": "Enum\n"
                }
            ],
            "content": "from enum import Enum\n"
        },
        {
            "type": "ClassDecl",
            "name": "State",
            "range": [
                25,
                40
            ],
            "children": [
                {
                    "type": "Property",
                    "name": "unvisited",
                    "range": [
                        32,
                        34
                    ],
                    "children": [
                        {
                            "type": "Literal",
                            "name": "0",
                            "range": [
                                34,
                                34
                            ],
                            "children": [],
                            "content": "0"
                        }
                    ],
                    "content": "unvisited=0"
                },
                {
                    "type": "Property",
                    "name": "visited",
                    "range": [
                        36,
                        38
                    ],
                    "children": [
                        {
                            "type": "Literal",
                            "name": "1",
                            "range": [
                                38,
                                38
                            ],
                            "children": [],
                            "content": "1"
                        }
                    ],
                    "content": "visited=1"
                }
            ],
            "content": "class State(Enum):\nunvisited=0\nvisited=1\n\n"
        },
        {
            "type": "ClassDecl",
            "name": "Graph",
            "range": [
                41,
                45
            ],
            "children": [
                {
                    "type": "FunctionDecl",
                    "name": "bfs",
                    "range": [
                        49,
                        156
                    ],
                    "children": [
                        {
                            "type": "ParameterList",
                            "name": "",
                            "range": [
                                51,
                                57
                            ],
                            "children": [
                                {
                                    "type": "Parameter",
                                    "name": "self",
                                    "range": [
                                        52,
                                        52
                                    ],
                                    "children": [],
                                    "content": "("
                                },
                                {
                                    "type": "Parameter",
                                    "name": "source",
                                    "range": [
                                        54,
                                        54
                                    ],
                                    "children": [],
                                    "content": ","
                                },
                                {
                                    "type": "Parameter",
                                    "name": "dest",
                                    "range": [
                                        56,
                                        56
                                    ],
                                    "children": [],
                                    "content": ","
                                }
                            ],
                            "content": "bfs(self,source,dest"
                        },
                        {
                            "type": "BlockStatement",
                            "name": "",
                            "range": [
                                58,
                                156
                            ],
                            "children": [
                                {
                                    "type": "IfStatement",
                                    "name": "",
                                    "range": [
                                        60,
                                        68
                                    ],
                                    "children": [
                                        {
                                            "type": "Condition",
                                            "name": "",
                                            "range": [
                                                61,
                                                63
                                            ],
                                            "children": [
                                                {
                                                    "type": "BinaryExpression",
                                                    "name": "is",
                                                    "range": [
                                                        62,
                                                        62
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "source",
                                                            "range": [
                                                                61,
                                                                61
                                                            ],
                                                            "children": [],
                                                            "content": "if"
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "name": "None",
                                                            "range": [
                                                                63,
                                                                63
                                                            ],
                                                            "children": [],
                                                            "content": "is"
                                                        }
                                                    ],
                                                    "content": "source"
                                                }
                                            ],
                                            "content": "if source is"
                                        },
                                        {
                                            "type": "BlockStatement",
                                            "name": "",
                                            "range": [
                                                65,
                                                68
                                            ],
                                            "children": [
                                                {
                                                    "type": "ReturnStatement",
                                                    "name": "",
                                                    "range": [
                                                        66,
                                                        67
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Literal",
                                                            "name": "False",
                                                            "range": [
                                                                67,
                                                                67
                                                            ],
                                                            "children": [],
                                                            "content": "return"
                                                        }
                                                    ],
                                                    "content": "\nreturn"
                                                }
                                            ],
                                            "content": ":\nreturn False"
                                        }
                                    ],
                                    "content": "\nif source is None:\nreturn False"
                                },
                                {
                                    "type": "VariableDeclaration",
                                    "name": "queue",
                                    "range": [
                                        69,
                                        73
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "deque",
                                            "range": [
                                                71,
                                                73
                                            ],
                                            "children": [],
                                            "content": "=deque("
                                        }
                                    ],
                                    "content": "\nqueue=deque("
                                },
                                {
                                    "type": "ExpressionStatement",
                                    "name": "",
                                    "range": [
                                        75,
                                        81
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "append",
                                            "range": [
                                                77,
                                                80
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "source",
                                                    "range": [
                                                        79,
                                                        79
                                                    ],
                                                    "children": [],
                                                    "content": "("
                                                }
                                            ],
                                            "content": ".append(source"
                                        }
                                    ],
                                    "content": "\nqueue.append(source)"
                                },
                                {
                                    "type": "ExpressionStatement",
                                    "name": "",
                                    "range": [
                                        82,
                                        89
                                    ],
                                    "children": [
                                        {
                                            "type": "AssignmentExpression",
                                            "name": "=",
                                            "range": [
                                                85,
                                                88
                                            ],
                                            "children": [
                                                {
                                                    "type": "MemberExpression",
                                                    "name": "visit_state",
                                                    "range": [
                                                        84,
                                                        84
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "source",
                                                            "range": [
                                                                82,
                                                                82
                                                            ],
                                                            "children": [],
                                                            "content": "\n"
                                                        }
                                                    ],
                                                    "content": "."
                                                },
                                                {
                                                    "type": "MemberExpression",
                                                    "name": "visited",
                                                    "range": [
                                                        88,
                                                        88
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "State",
                                                            "range": [
                                                                86,
                                                                86
                                                            ],
                                                            "children": [],
                                                            "content": "="
                                                        }
                                                    ],
                                                    "content": "."
                                                }
                                            ],
                                            "content": "visit_state=State."
                                        }
                                    ],
                                    "content": "\nsource.visit_state=State.visited"
                                },
                                {
                                    "type": "WhileStatement",
                                    "name": "",
                                    "range": [
                                        90,
                                        153
                                    ],
                                    "children": [
                                        {
                                            "type": "Condition",
                                            "name": "",
                                            "range": [
                                                91,
                                                91
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "queue",
                                                    "range": [
                                                        91,
                                                        91
                                                    ],
                                                    "children": [],
                                                    "content": "while"
                                                }
                                            ],
                                            "content": "while"
                                        },
                                        {
                                            "type": "BlockStatement",
                                            "name": "",
                                            "range": [
                                                93,
                                                153
                                            ],
                                            "children": [
                                                {
                                                    "type": "VariableDeclaration",
                                                    "name": "node",
                                                    "range": [
                                                        94,
                                                        100
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "CallExpression",
                                                            "name": "popleft",
                                                            "range": [
                                                                98,
                                                                100
                                                            ],
                                                            "children": [],
                                                            "content": ".popleft("
                                                        }
                                                    ],
                                                    "content": "\nnode=queue.popleft("
                                                },
                                                {
                                                    "type": "ExpressionStatement",
                                                    "name": "",
                                                    "range": [
                                                        102,
                                                        106
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "CallExpression",
                                                            "name": "print",
                                                            "range": [
                                                                103,
                                                                105
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "node",
                                                                    "range": [
                                                                        104,
                                                                        104
                                                                    ],
                                                                    "children": [],
                                                                    "content": "("
                                                                }
                                                            ],
                                                            "content": "print(node"
                                                        }
                                                    ],
                                                    "content": "\nprint(node)"
                                                },
                                                {
                                                    "type": "IfStatement",
                                                    "name": "",
                                                    "range": [
                                                        107,
                                                        115
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Condition",
                                                            "name": "",
                                                            "range": [
                                                                108,
                                                                110
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "BinaryExpression",
                                                                    "name": "is",
                                                                    "range": [
                                                                        109,
                                                                        109
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "dest",
                                                                            "range": [
                                                                                108,
                                                                                108
                                                                            ],
                                                                            "children": [],
                                                                            "content": "if"
                                                                        },
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "node",
                                                                            "range": [
                                                                                110,
                                                                                110
                                                                            ],
                                                                            "children": [],
                                                                            "content": "is"
                                                                        }
                                                                    ],
                                                                    "content": "dest"
                                                                }
                                                            ],
                                                            "content": "if dest is"
                                                        },
                                                        {
                                                            "type": "BlockStatement",
                                                            "name": "",
                                                            "range": [
                                                                112,
                                                                115
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "ReturnStatement",
                                                                    "name": "",
                                                                    "range": [
                                                                        113,
                                                                        114
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Literal",
                                                                            "name": "True",
                                                                            "range": [
                                                                                114,
                                                                                114
                                                                            ],
                                                                            "children": [],
                                                                            "content": "return"
                                                                        }
                                                                    ],
                                                                    "content": "\nreturn"
                                                                }
                                                            ],
                                                            "content": ":\nreturn True"
                                                        }
                                                    ],
                                                    "content": "\nif dest is node:\nreturn True"
                                                },
                                                {
                                                    "type": "ForStatement",
                                                    "name": "",
                                                    "range": [
                                                        116,
                                                        153
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "VariableDeclaration",
                                                            "name": "adjacent_node",
                                                            "range": [
                                                                117,
                                                                117
                                                            ],
                                                            "children": [],
                                                            "content": "for"
                                                        },
                                                        {
                                                            "type": "Expression",
                                                            "name": "",
                                                            "range": [
                                                                119,
                                                                125
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "MemberExpression",
                                                                    "name": "values",
                                                                    "range": [
                                                                        123,
                                                                        125
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "MemberExpression",
                                                                            "name": "adj_nodes",
                                                                            "range": [
                                                                                121,
                                                                                121
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "node",
                                                                                    "range": [
                                                                                        119,
                                                                                        119
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "in"
                                                                                }
                                                                            ],
                                                                            "content": "."
                                                                        }
                                                                    ],
                                                                    "content": ".values("
                                                                }
                                                            ],
                                                            "content": "in node.adj_nodes.values("
                                                        },
                                                        {
                                                            "type": "BlockStatement",
                                                            "name": "",
                                                            "range": [
                                                                127,
                                                                153
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "name": "",
                                                                    "range": [
                                                                        128,
                                                                        145
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Condition",
                                                                            "name": "",
                                                                            "range": [
                                                                                129,
                                                                                136
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "BinaryExpression",
                                                                                    "name": "==",
                                                                                    "range": [
                                                                                        133,
                                                                                        133
                                                                                    ],
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "MemberExpression",
                                                                                            "name": "visit_state",
                                                                                            "range": [
                                                                                                131,
                                                                                                131
                                                                                            ],
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "adjacent_node",
                                                                                                    "range": [
                                                                                                        129,
                                                                                                        129
                                                                                                    ],
                                                                                                    "children": [],
                                                                                                    "content": "if"
                                                                                                }
                                                                                            ],
                                                                                            "content": "."
                                                                                        },
                                                                                        {
                                                                                            "type": "MemberExpression",
                                                                                            "name": "unvisited",
                                                                                            "range": [
                                                                                                136,
                                                                                                136
                                                                                            ],
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "State",
                                                                                                    "range": [
                                                                                                        134,
                                                                                                        134
                                                                                                    ],
                                                                                                    "children": [],
                                                                                                    "content": "="
                                                                                                }
                                                                                            ],
                                                                                            "content": "."
                                                                                        }
                                                                                    ],
                                                                                    "content": "="
                                                                                }
                                                                            ],
                                                                            "content": "if adjacent_node.visit_state==State."
                                                                        },
                                                                        {
                                                                            "type": "BlockStatement",
                                                                            "name": "",
                                                                            "range": [
                                                                                138,
                                                                                145
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "name": "",
                                                                                    "range": [
                                                                                        139,
                                                                                        144
                                                                                    ],
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "CallExpression",
                                                                                            "name": "append",
                                                                                            "range": [
                                                                                                141,
                                                                                                143
                                                                                            ],
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "adjacent_node",
                                                                                                    "range": [
                                                                                                        143,
                                                                                                        143
                                                                                                    ],
                                                                                                    "children": [],
                                                                                                    "content": "("
                                                                                                }
                                                                                            ],
                                                                                            "content": ".append("
                                                                                        }
                                                                                    ],
                                                                                    "content": "\nqueue.append(adjacent_node"
                                                                                }
                                                                            ],
                                                                            "content": ":\nqueue.append(adjacent_node)"
                                                                        }
                                                                    ],
                                                                    "content": "\nif adjacent_node.visit_state==State.unvisited:\nqueue.append(adjacent_node)"
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "name": "",
                                                                    "range": [
                                                                        146,
                                                                        153
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "AssignmentExpression",
                                                                            "name": "=",
                                                                            "range": [
                                                                                149,
                                                                                152
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "MemberExpression",
                                                                                    "name": "visit_state",
                                                                                    "range": [
                                                                                        148,
                                                                                        148
                                                                                    ],
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "adjacent_node",
                                                                                            "range": [
                                                                                                146,
                                                                                                146
                                                                                            ],
                                                                                            "children": [],
                                                                                            "content": "\n"
                                                                                        }
                                                                                    ],
                                                                                    "content": "."
                                                                                },
                                                                                {
                                                                                    "type": "MemberExpression",
                                                                                    "name": "visited",
                                                                                    "range": [
                                                                                        152,
                                                                                        152
                                                                                    ],
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "State",
                                                                                            "range": [
                                                                                                150,
                                                                                                150
                                                                                            ],
                                                                                            "children": [],
                                                                                            "content": "="
                                                                                        }
                                                                                    ],
                                                                                    "content": "."
                                                                                }
                                                                            ],
                                                                            "content": "visit_state=State."
                                                                        }
                                                                    ],
                                                                    "content": "\nadjacent_node.visit_state=State.visited"
                                                                }
                                                            ],
                                                            "content": ":\nif adjacent_node.visit_state==State.unvisited:\nqueue.append(adjacent_node)\nadjacent_node.visit_state=State.visited"
                                                        }
                                                    ],
                                                    "content": "\nfor adjacent_node in node.adj_nodes.values():\nif adjacent_node.visit_state==State.unvisited:\nqueue.append(adjacent_node)\nadjacent_node.visit_state=State.visited"
                                                }
                                            ],
                                            "content": ":\nnode=queue.popleft()\nprint(node)\nif dest is node:\nreturn True\nfor adjacent_node in node.adj_nodes.values():\nif adjacent_node.visit_state==State.unvisited:\nqueue.append(adjacent_node)\nadjacent_node.visit_state=State.visited"
                                        }
                                    ],
                                    "content": "\nwhile queue:\nnode=queue.popleft()\nprint(node)\nif dest is node:\nreturn True\nfor adjacent_node in node.adj_nodes.values():\nif adjacent_node.visit_state==State.unvisited:\nqueue.append(adjacent_node)\nadjacent_node.visit_state=State.visited"
                                },
                                {
                                    "type": "ReturnStatement",
                                    "name": "",
                                    "range": [
                                        154,
                                        155
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "name": "False",
                                            "range": [
                                                155,
                                                155
                                            ],
                                            "children": [],
                                            "content": "return"
                                        }
                                    ],
                                    "content": "\nreturn"
                                }
                            ],
                            "content": "):\nif source is None:\nreturn False\nqueue=deque()\nqueue.append(source)\nsource.visit_state=State.visited\nwhile queue:\nnode=queue.popleft()\nprint(node)\nif dest is node:\nreturn True\nfor adjacent_node in node.adj_nodes.values():\nif adjacent_node.visit_state==State.unvisited:\nqueue.append(adjacent_node)\nadjacent_node.visit_state=State.visited\nreturn False"
                        }
                    ],
                    "content": "\ndef bfs(self,source,dest):\nif source is None:\nreturn False\nqueue=deque()\nqueue.append(source)\nsource.visit_state=State.visited\nwhile queue:\nnode=queue.popleft()\nprint(node)\nif dest is node:\nreturn True\nfor adjacent_node in node.adj_nodes.values():\nif adjacent_node.visit_state==State.unvisited:\nqueue.append(adjacent_node)\nadjacent_node.visit_state=State.visited\nreturn False"
                }
            ],
            "content": "\nclass Graph(object"
        },
        {
            "type": "ClassDecl",
            "name": "Person",
            "range": [
                158,
                197
            ],
            "children": [
                {
                    "type": "FunctionDecl",
                    "name": "__init__",
                    "range": [
                        166,
                        195
                    ],
                    "children": [
                        {
                            "type": "ParameterList",
                            "name": "",
                            "range": [
                                168,
                                174
                            ],
                            "children": [
                                {
                                    "type": "Parameter",
                                    "name": "self",
                                    "range": [
                                        169,
                                        169
                                    ],
                                    "content": "__init__"
                                },
                                {
                                    "type": "Parameter",
                                    "name": "id",
                                    "range": [
                                        171,
                                        171
                                    ],
                                    "content": "self"
                                },
                                {
                                    "type": "Parameter",
                                    "name": "name",
                                    "range": [
                                        173,
                                        173
                                    ],
                                    "content": "id"
                                }
                            ],
                            "content": "def __init__(self,id,"
                        },
                        {
                            "type": "BlockStatement",
                            "name": "",
                            "range": [
                                175,
                                195
                            ],
                            "children": [
                                {
                                    "type": "AssignmentExpression",
                                    "name": "id",
                                    "range": [
                                        177,
                                        181
                                    ],
                                    "children": [
                                        {
                                            "type": "MemberExpression",
                                            "name": "self.id",
                                            "range": [
                                                177,
                                                179
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "self",
                                                    "range": [
                                                        177,
                                                        177
                                                    ],
                                                    "content": ":"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "id",
                                                    "range": [
                                                        179,
                                                        179
                                                    ],
                                                    "content": "self"
                                                }
                                            ],
                                            "content": ":\nself"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "id",
                                            "range": [
                                                181,
                                                181
                                            ],
                                            "content": "id"
                                        }
                                    ],
                                    "content": ":\nself.id"
                                },
                                {
                                    "type": "AssignmentExpression",
                                    "name": "name",
                                    "range": [
                                        183,
                                        187
                                    ],
                                    "children": [
                                        {
                                            "type": "MemberExpression",
                                            "name": "self.name",
                                            "range": [
                                                183,
                                                185
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "self",
                                                    "range": [
                                                        183,
                                                        183
                                                    ],
                                                    "content": "id"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "name",
                                                    "range": [
                                                        185,
                                                        185
                                                    ],
                                                    "content": "self"
                                                }
                                            ],
                                            "content": "id\nself"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "name",
                                            "range": [
                                                187,
                                                187
                                            ],
                                            "content": "name"
                                        }
                                    ],
                                    "content": "id\nself.name"
                                },
                                {
                                    "type": "AssignmentExpression",
                                    "name": "friend_ids",
                                    "range": [
                                        189,
                                        194
                                    ],
                                    "children": [
                                        {
                                            "type": "MemberExpression",
                                            "name": "self.friend_ids",
                                            "range": [
                                                189,
                                                191
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "self",
                                                    "range": [
                                                        189,
                                                        189
                                                    ],
                                                    "content": "name"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "friend_ids",
                                                    "range": [
                                                        191,
                                                        191
                                                    ],
                                                    "content": "self"
                                                }
                                            ],
                                            "content": "name\nself"
                                        },
                                        {
                                            "type": "ArrayExpression",
                                            "name": "",
                                            "range": [
                                                193,
                                                194
                                            ],
                                            "children": [],
                                            "content": "friend_ids="
                                        }
                                    ],
                                    "content": "name\nself.friend_ids="
                                }
                            ],
                            "content": "name):\nself.id=id\nself.name=name\nself.friend_ids=["
                        }
                    ],
                    "content": "\n\ndef __init__(self,id,name):\nself.id=id\nself.name=name\nself.friend_ids=["
                }
            ],
            "content": "\n\nclass Person(object):\n\ndef __init__(self,id,name):\nself.id=id\nself.name=name\nself.friend_ids=[]\n"
        },
        {
            "type": "ClassDecl",
            "name": "LookupService",
            "range": [
                198,
                202
            ],
            "children": [
                {
                    "type": "FunctionDecl",
                    "name": "__init__",
                    "range": [
                        206,
                        227
                    ],
                    "children": [
                        {
                            "type": "ParameterList",
                            "name": "",
                            "range": [
                                208,
                                210
                            ],
                            "children": [
                                {
                                    "type": "Parameter",
                                    "name": "self",
                                    "range": [
                                        209,
                                        209
                                    ],
                                    "children": [],
                                    "content": "__init__"
                                }
                            ],
                            "content": "def __init__("
                        },
                        {
                            "type": "BlockStatement",
                            "name": "",
                            "range": [
                                212,
                                227
                            ],
                            "children": [
                                {
                                    "type": "AssignmentExpression",
                                    "name": "",
                                    "range": [
                                        213,
                                        218
                                    ],
                                    "children": [
                                        {
                                            "type": "MemberExpression",
                                            "name": "",
                                            "range": [
                                                213,
                                                215
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "self",
                                                    "range": [
                                                        213,
                                                        213
                                                    ],
                                                    "children": [],
                                                    "content": ":"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "lookup",
                                                    "range": [
                                                        215,
                                                        215
                                                    ],
                                                    "children": [],
                                                    "content": "self"
                                                }
                                            ],
                                            "content": ":\nself"
                                        },
                                        {
                                            "type": "ObjectExpression",
                                            "name": "",
                                            "range": [
                                                217,
                                                218
                                            ],
                                            "children": [],
                                            "content": "lookup="
                                        }
                                    ],
                                    "content": ":\nself.lookup="
                                }
                            ],
                            "content": "):\nself.lookup={}#key:person_id,value:"
                        }
                    ],
                    "content": "\n\ndef __init__(self):\nself.lookup={}#key:person_id,value:"
                },
                {
                    "type": "FunctionDecl",
                    "name": "get_person",
                    "range": [
                        229,
                        254
                    ],
                    "children": [
                        {
                            "type": "ParameterList",
                            "name": "",
                            "range": [
                                231,
                                235
                            ],
                            "children": [
                                {
                                    "type": "Parameter",
                                    "name": "self",
                                    "range": [
                                        232,
                                        232
                                    ],
                                    "children": [],
                                    "content": "get_person"
                                },
                                {
                                    "type": "Parameter",
                                    "name": "person_id",
                                    "range": [
                                        234,
                                        234
                                    ],
                                    "children": [],
                                    "content": "self"
                                }
                            ],
                            "content": "def get_person(self,"
                        },
                        {
                            "type": "BlockStatement",
                            "name": "",
                            "range": [
                                237,
                                254
                            ],
                            "children": [
                                {
                                    "type": "AssignmentExpression",
                                    "name": "",
                                    "range": [
                                        238,
                                        245
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "person_server",
                                            "range": [
                                                238,
                                                238
                                            ],
                                            "children": [],
                                            "content": ":"
                                        },
                                        {
                                            "type": "MemberExpression",
                                            "name": "",
                                            "range": [
                                                240,
                                                245
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "self",
                                                    "range": [
                                                        240,
                                                        240
                                                    ],
                                                    "children": [],
                                                    "content": "person_server"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "lookup",
                                                    "range": [
                                                        242,
                                                        242
                                                    ],
                                                    "children": [],
                                                    "content": "self"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "person_id",
                                                    "range": [
                                                        244,
                                                        244
                                                    ],
                                                    "children": [],
                                                    "content": "lookup"
                                                }
                                            ],
                                            "content": "person_server=self.lookup["
                                        }
                                    ],
                                    "content": ":\nperson_server=self.lookup["
                                },
                                {
                                    "type": "ReturnStatement",
                                    "name": "",
                                    "range": [
                                        247,
                                        253
                                    ],
                                    "children": [
                                        {
                                            "type": "MemberExpression",
                                            "name": "",
                                            "range": [
                                                248,
                                                253
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "person_server",
                                                    "range": [
                                                        248,
                                                        248
                                                    ],
                                                    "children": [],
                                                    "content": "\n"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "people",
                                                    "range": [
                                                        250,
                                                        250
                                                    ],
                                                    "children": [],
                                                    "content": "person_server"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "person_id",
                                                    "range": [
                                                        252,
                                                        252
                                                    ],
                                                    "children": [],
                                                    "content": "people"
                                                }
                                            ],
                                            "content": "\nreturn person_server.people["
                                        }
                                    ],
                                    "content": "]\nreturn person_server.people["
                                }
                            ],
                            "content": "):\nperson_server=self.lookup[person_id]\nreturn person_server.people[person_id"
                        }
                    ],
                    "content": "\n\ndef get_person(self,person_id):\nperson_server=self.lookup[person_id]\nreturn person_server.people[person_id"
                }
            ],
            "content": "\n\nclass LookupService("
        },
        {
            "type": "ClassDecl",
            "name": "PersonServer",
            "range": [
                257,
                261
            ],
            "children": [
                {
                    "type": "FunctionDecl",
                    "name": "__init__",
                    "range": [
                        265,
                        286
                    ],
                    "children": [
                        {
                            "type": "AssignmentExpression",
                            "name": "",
                            "range": [
                                272,
                                277
                            ],
                            "children": [
                                {
                                    "type": "MemberExpression",
                                    "name": "self.people",
                                    "range": [
                                        272,
                                        274
                                    ],
                                    "children": [],
                                    "content": ":\nself"
                                },
                                {
                                    "type": "ObjectExpression",
                                    "name": "",
                                    "range": [
                                        276,
                                        277
                                    ],
                                    "children": [],
                                    "content": "people="
                                }
                            ],
                            "content": ":\nself.people="
                        }
                    ],
                    "content": "\n\ndef __init__(self):\nself.people={}#key:person_id,value:"
                },
                {
                    "type": "FunctionDecl",
                    "name": "get_people",
                    "range": [
                        288,
                        330
                    ],
                    "children": [
                        {
                            "type": "VariableDecl",
                            "name": "results",
                            "range": [
                                297,
                                300
                            ],
                            "children": [
                                {
                                    "type": "ArrayExpression",
                                    "name": "",
                                    "range": [
                                        299,
                                        300
                                    ],
                                    "children": [],
                                    "content": "results="
                                }
                            ],
                            "content": ":\nresults="
                        },
                        {
                            "type": "ForStatement",
                            "name": "",
                            "range": [
                                302,
                                327
                            ],
                            "children": [
                                {
                                    "type": "VariableDecl",
                                    "name": "id",
                                    "range": [
                                        303,
                                        303
                                    ],
                                    "children": [],
                                    "content": "\n"
                                },
                                {
                                    "type": "MemberExpression",
                                    "name": "ids",
                                    "range": [
                                        305,
                                        305
                                    ],
                                    "children": [],
                                    "content": "id"
                                },
                                {
                                    "type": "IfStatement",
                                    "name": "",
                                    "range": [
                                        308,
                                        326
                                    ],
                                    "children": [
                                        {
                                            "type": "BinaryExpression",
                                            "name": "in",
                                            "range": [
                                                309,
                                                313
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "id",
                                                    "range": [
                                                        309,
                                                        309
                                                    ],
                                                    "children": [],
                                                    "content": "\n"
                                                },
                                                {
                                                    "type": "MemberExpression",
                                                    "name": "self.people",
                                                    "range": [
                                                        311,
                                                        313
                                                    ],
                                                    "children": [],
                                                    "content": "id in self"
                                                }
                                            ],
                                            "content": "\nif id in self"
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "name": "",
                                            "range": [
                                                316,
                                                326
                                            ],
                                            "children": [
                                                {
                                                    "type": "CallExpression",
                                                    "name": "append",
                                                    "range": [
                                                        317,
                                                        326
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "MemberExpression",
                                                            "name": "results",
                                                            "range": [
                                                                316,
                                                                316
                                                            ],
                                                            "children": [],
                                                            "content": ":"
                                                        },
                                                        {
                                                            "type": "MemberExpression",
                                                            "name": "self.people[id]",
                                                            "range": [
                                                                320,
                                                                325
                                                            ],
                                                            "children": [],
                                                            "content": "append(self.people["
                                                        }
                                                    ],
                                                    "content": "\nresults.append(self.people[id"
                                                }
                                            ],
                                            "content": ":\nresults.append(self.people[id"
                                        }
                                    ],
                                    "content": ":\nif id in self.people:\nresults.append(self.people[id"
                                }
                            ],
                            "content": "]\nfor id in ids:\nif id in self.people:\nresults.append(self.people[id]"
                        },
                        {
                            "type": "ReturnStatement",
                            "name": "",
                            "range": [
                                328,
                                329
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "results",
                                    "range": [
                                        329,
                                        329
                                    ],
                                    "children": [],
                                    "content": "\n"
                                }
                            ],
                            "content": ")\n"
                        }
                    ],
                    "content": "\n\ndef get_people(self,ids):\nresults=[]\nfor id in ids:\nif id in self.people:\nresults.append(self.people[id])\nreturn"
                }
            ],
            "content": "\n\nclass PersonServer("
        },
        {
            "type": "FunctionDecl",
            "name": "__init__",
            "range": [
                341,
                363
            ],
            "children": [
                {
                    "type": "ParameterList",
                    "name": "",
                    "range": [
                        343,
                        349
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "self",
                            "range": [
                                344,
                                344
                            ],
                            "children": [],
                            "content": "__init__"
                        },
                        {
                            "type": "Parameter",
                            "name": "person_ids",
                            "range": [
                                346,
                                346
                            ],
                            "children": [],
                            "content": "self"
                        },
                        {
                            "type": "Parameter",
                            "name": "lookup",
                            "range": [
                                348,
                                348
                            ],
                            "children": [],
                            "content": "person_ids"
                        }
                    ],
                    "content": "def __init__(self,person_ids,"
                },
                {
                    "type": "BlockStatement",
                    "name": "",
                    "range": [
                        351,
                        363
                    ],
                    "children": [
                        {
                            "type": "AssignmentExpression",
                            "name": "",
                            "range": [
                                352,
                                356
                            ],
                            "children": [
                                {
                                    "type": "MemberExpression",
                                    "name": "self.lookup",
                                    "range": [
                                        352,
                                        354
                                    ],
                                    "children": [],
                                    "content": ":\nself"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "lookup",
                                    "range": [
                                        356,
                                        356
                                    ],
                                    "children": [],
                                    "content": "lookup"
                                }
                            ],
                            "content": ":\nself.lookup"
                        },
                        {
                            "type": "AssignmentExpression",
                            "name": "",
                            "range": [
                                358,
                                362
                            ],
                            "children": [
                                {
                                    "type": "MemberExpression",
                                    "name": "self.person_ids",
                                    "range": [
                                        358,
                                        360
                                    ],
                                    "children": [],
                                    "content": "lookup\nself"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "person_ids",
                                    "range": [
                                        362,
                                        362
                                    ],
                                    "children": [],
                                    "content": "person_ids"
                                }
                            ],
                            "content": "lookup\nself.person_ids"
                        },
                        {
                            "type": "AssignmentExpression",
                            "name": "",
                            "range": [
                                364,
                                371
                            ],
                            "children": [
                                {
                                    "type": "MemberExpression",
                                    "name": "self.visited_ids",
                                    "range": [
                                        364,
                                        366
                                    ],
                                    "children": [],
                                    "content": "person_ids\nself"
                                },
                                {
                                    "type": "CallExpression",
                                    "name": "set",
                                    "range": [
                                        368,
                                        370
                                    ],
                                    "children": [],
                                    "content": "visited_ids=set"
                                }
                            ],
                            "content": "person_ids\nself.visited_ids=set("
                        }
                    ],
                    "content": "):\nself.lookup=lookup\nself.person_ids="
                }
            ],
            "content": "\n\ndef __init__(self,person_ids,lookup):\nself.lookup=lookup\nself.person_ids="
        },
        {
            "type": "FunctionDecl",
            "name": "bfs",
            "range": [
                373,
                408
            ],
            "children": [
                {
                    "type": "ParameterList",
                    "name": "",
                    "range": [
                        375,
                        381
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "self",
                            "range": [
                                376,
                                376
                            ],
                            "children": [],
                            "content": "bfs"
                        },
                        {
                            "type": "Parameter",
                            "name": "source",
                            "range": [
                                378,
                                378
                            ],
                            "children": [],
                            "content": "self"
                        },
                        {
                            "type": "Parameter",
                            "name": "dest",
                            "range": [
                                380,
                                380
                            ],
                            "children": [],
                            "content": "source"
                        }
                    ],
                    "content": "def bfs(self,source,"
                },
                {
                    "type": "BlockStatement",
                    "name": "",
                    "range": [
                        383,
                        408
                    ],
                    "children": [
                        {
                            "type": "Comment",
                            "name": "",
                            "range": [
                                384,
                                393
                            ],
                            "children": [],
                            "content": ":\n#Use self.visited_ids to track visited"
                        },
                        {
                            "type": "Comment",
                            "name": "",
                            "range": [
                                394,
                                406
                            ],
                            "children": [],
                            "content": "nodes\n#Use self.lookup to translate a person_id to a"
                        },
                        {
                            "type": "PassStatement",
                            "name": "",
                            "range": [
                                407,
                                407
                            ],
                            "children": [],
                            "content": "Person"
                        }
                    ],
                    "content": "):\n#Use self.visited_ids to track visited nodes\n#Use self.lookup to translate a person_id to a Person\n"
                }
            ],
            "content": "\n\ndef bfs(self,source,dest):\n#Use self.visited_ids to track visited nodes\n#Use self.lookup to translate a person_id to a Person\n"
        }
    ],
    "content": "#-*-coding:utf-8-*-\nfrom collections import deque\nfrom enum import Enum\n\n\nclass State(Enum):\nunvisited=0\nvisited=1\n\n\nclass Graph(object):\n\ndef bfs(self,source,dest):\nif source is None:\nreturn False\nqueue=deque()\nqueue.append(source)\nsource.visit_state=State.visited\nwhile queue:\nnode=queue.popleft()\nprint(node)\nif dest is node:\nreturn True\nfor adjacent_node in node.adj_nodes.values():\nif adjacent_node.visit_state==State.unvisited:\nqueue.append(adjacent_node)\nadjacent_node.visit_state=State.visited\nreturn False\n\n\nclass Person(object):\n\ndef __init__(self,id,name):\nself.id=id\nself.name=name\nself.friend_ids=[]\n\n\nclass LookupService(object):\n\ndef __init__(self):\nself.lookup={}#key:person_id,value:person_server\n\ndef get_person(self,person_id):\nperson_server=self.lookup[person_id]\nreturn person_server.people[person_id]\n\n\nclass PersonServer(object):\n\ndef __init__(self):\nself.people={}#key:person_id,value:person\n\ndef get_people(self,ids):\nresults=[]\nfor id in ids:\nif id in self.people:\nresults.append(self.people[id])\nreturn results\n\n\nclass UserGraphService(object):\n\ndef __init__(self,person_ids,lookup):\nself.lookup=lookup\nself.person_ids=person_ids\nself.visited_ids=set()\n\ndef bfs(self,source,dest):\n#Use self.visited_ids to track visited nodes\n#Use self.lookup to translate a person_id to a Person\npass"
}