{
    "type": "Program",
    "name": "Global",
    "range": [
        0,
        189
    ],
    "children": [
        {
            "type": "FunctionDecl",
            "name": "wait_for_postgres",
            "range": [
                11,
                140
            ],
            "children": [
                {
                    "type": "Parameters",
                    "name": "parameters",
                    "range": [
                        13,
                        21
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "max_retries",
                            "range": [
                                14,
                                16
                            ],
                            "children": [],
                            "content": "max_retries=5"
                        },
                        {
                            "type": "Parameter",
                            "name": "delay",
                            "range": [
                                18,
                                20
                            ],
                            "children": [],
                            "content": "delay=5"
                        }
                    ],
                    "content": "(max_retries=5,delay=5)"
                },
                {
                    "type": "BlockStatement",
                    "name": "body",
                    "range": [
                        23,
                        140
                    ],
                    "children": [
                        {
                            "type": "ForStatement",
                            "name": "for_loop",
                            "range": [
                                24,
                                113
                            ],
                            "children": [
                                {
                                    "type": "Iteration",
                                    "name": "iteration",
                                    "range": [
                                        25,
                                        30
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "range",
                                            "range": [
                                                27,
                                                30
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "max_retries",
                                                    "range": [
                                                        29,
                                                        29
                                                    ],
                                                    "children": [],
                                                    "content": "max_retries"
                                                }
                                            ],
                                            "content": "range(max_retries)"
                                        }
                                    ],
                                    "content": "_ in range(max_retries)"
                                },
                                {
                                    "type": "BlockStatement",
                                    "name": "body",
                                    "range": [
                                        32,
                                        113
                                    ],
                                    "children": [
                                        {
                                            "type": "TryStatement",
                                            "name": "try_block",
                                            "range": [
                                                33,
                                                113
                                            ],
                                            "children": [
                                                {
                                                    "type": "BlockStatement",
                                                    "name": "body",
                                                    "range": [
                                                        35,
                                                        113
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "AssignmentExpression",
                                                            "name": "assignment",
                                                            "range": [
                                                                36,
                                                                96
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "result",
                                                                    "range": [
                                                                        36,
                                                                        36
                                                                    ],
                                                                    "children": [],
                                                                    "content": "result"
                                                                },
                                                                {
                                                                    "type": "CallExpression",
                                                                    "name": "subprocess.run",
                                                                    "range": [
                                                                        38,
                                                                        96
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Arguments",
                                                                            "name": "arguments",
                                                                            "range": [
                                                                                41,
                                                                                96
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "List",
                                                                                    "name": "command",
                                                                                    "range": [
                                                                                        43,
                                                                                        78
                                                                                    ],
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "Literal",
                                                                                            "name": "docker",
                                                                                            "range": [
                                                                                                45,
                                                                                                45
                                                                                            ],
                                                                                            "children": [],
                                                                                            "content": "\"docker\""
                                                                                        },
                                                                                        {
                                                                                            "type": "Literal",
                                                                                            "name": "compose",
                                                                                            "range": [
                                                                                                48,
                                                                                                48
                                                                                            ],
                                                                                            "children": [],
                                                                                            "content": "\"compose\""
                                                                                        },
                                                                                        {
                                                                                            "type": "Literal",
                                                                                            "name": "-f",
                                                                                            "range": [
                                                                                                51,
                                                                                                51
                                                                                            ],
                                                                                            "children": [],
                                                                                            "content": "\"-f\""
                                                                                        },
                                                                                        {
                                                                                            "type": "Literal",
                                                                                            "name": "docker-compose.test.yaml",
                                                                                            "range": [
                                                                                                54,
                                                                                                54
                                                                                            ],
                                                                                            "children": [],
                                                                                            "content": "\"docker-compose.test.yaml\""
                                                                                        },
                                                                                        {
                                                                                            "type": "Literal",
                                                                                            "name": "exec",
                                                                                            "range": [
                                                                                                57,
                                                                                                57
                                                                                            ],
                                                                                            "children": [],
                                                                                            "content": "\"exec\""
                                                                                        },
                                                                                        {
                                                                                            "type": "Literal",
                                                                                            "name": "postgres-test",
                                                                                            "range": [
                                                                                                60,
                                                                                                60
                                                                                            ],
                                                                                            "children": [],
                                                                                            "content": "\"postgres-test\""
                                                                                        },
                                                                                        {
                                                                                            "type": "Literal",
                                                                                            "name": "pg_isready",
                                                                                            "range": [
                                                                                                63,
                                                                                                63
                                                                                            ],
                                                                                            "children": [],
                                                                                            "content": "\"pg_isready\""
                                                                                        },
                                                                                        {
                                                                                            "type": "Literal",
                                                                                            "name": "-U",
                                                                                            "range": [
                                                                                                66,
                                                                                                66
                                                                                            ],
                                                                                            "children": [],
                                                                                            "content": "\"-U\""
                                                                                        },
                                                                                        {
                                                                                            "type": "Literal",
                                                                                            "name": "postgres",
                                                                                            "range": [
                                                                                                69,
                                                                                                69
                                                                                            ],
                                                                                            "children": [],
                                                                                            "content": "\"postgres\""
                                                                                        },
                                                                                        {
                                                                                            "type": "Literal",
                                                                                            "name": "-d",
                                                                                            "range": [
                                                                                                72,
                                                                                                72
                                                                                            ],
                                                                                            "children": [],
                                                                                            "content": "\"-d\""
                                                                                        },
                                                                                        {
                                                                                            "type": "Literal",
                                                                                            "name": "postgres",
                                                                                            "range": [
                                                                                                75,
                                                                                                75
                                                                                            ],
                                                                                            "children": [],
                                                                                            "content": "\"postgres\""
                                                                                        }
                                                                                    ],
                                                                                    "content": "[\n\"docker\",\n\"compose\",\n\"-f\",\n\"docker-compose.test.yaml\",\n\"exec\",\n\"postgres-test\",\n\"pg_isready\",\n\"-U\",\n\"postgres\",\n\"-d\",\n\"postgres\",\n]"
                                                                                },
                                                                                {
                                                                                    "type": "KeywordArgument",
                                                                                    "name": "check",
                                                                                    "range": [
                                                                                        81,
                                                                                        83
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "check=True"
                                                                                },
                                                                                {
                                                                                    "type": "KeywordArgument",
                                                                                    "name": "capture_output",
                                                                                    "range": [
                                                                                        86,
                                                                                        88
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "capture_output=True"
                                                                                },
                                                                                {
                                                                                    "type": "KeywordArgument",
                                                                                    "name": "text",
                                                                                    "range": [
                                                                                        91,
                                                                                        93
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "text=True"
                                                                                }
                                                                            ],
                                                                            "content": "(\n[\n\"docker\",\n\"compose\",\n\"-f\",\n\"docker-compose.test.yaml\",\n\"exec\",\n\"postgres-test\",\n\"pg_isready\",\n\"-U\",\n\"postgres\",\n\"-d\",\n\"postgres\",\n],\ncheck=True,\ncapture_output=True,\ntext=True,\n)"
                                                                        }
                                                                    ],
                                                                    "content": "subprocess.run(\n[\n\"docker\",\n\"compose\",\n\"-f\",\n\"docker-compose.test.yaml\",\n\"exec\",\n\"postgres-test\",\n\"pg_isready\",\n\"-U\",\n\"postgres\",\n\"-d\",\n\"postgres\",\n],\ncheck=True,\ncapture_output=True,\ntext=True,\n)"
                                                                }
                                                            ],
                                                            "content": "result=subprocess.run(\n[\n\"docker\",\n\"compose\",\n\"-f\",\n\"docker-compose.test.yaml\",\n\"exec\",\n\"postgres-test\",\n\"pg_isready\",\n\"-U\",\n\"postgres\",\n\"-d\",\n\"postgres\",\n],\ncheck=True,\ncapture_output=True,\ntext=True,\n)"
                                                        },
                                                        {
                                                            "type": "IfStatement",
                                                            "name": "if_statement",
                                                            "range": [
                                                                98,
                                                                113
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Condition",
                                                                    "name": "condition",
                                                                    "range": [
                                                                        99,
                                                                        104
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "BinaryExpression",
                                                                            "name": "in_expression",
                                                                            "range": [
                                                                                100,
                                                                                104
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "Literal",
                                                                                    "name": "accepting connections",
                                                                                    "range": [
                                                                                        99,
                                                                                        99
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "\"accepting connections\""
                                                                                },
                                                                                {
                                                                                    "type": "MemberExpression",
                                                                                    "name": "stdout",
                                                                                    "range": [
                                                                                        103,
                                                                                        104
                                                                                    ],
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "result",
                                                                                            "range": [
                                                                                                101,
                                                                                                101
                                                                                            ],
                                                                                            "children": [],
                                                                                            "content": "result"
                                                                                        }
                                                                                    ],
                                                                                    "content": "stdout:"
                                                                                }
                                                                            ],
                                                                            "content": "in result.stdout:"
                                                                        }
                                                                    ],
                                                                    "content": "\"accepting connections\" in result.stdout:"
                                                                },
                                                                {
                                                                    "type": "BlockStatement",
                                                                    "name": "body",
                                                                    "range": [
                                                                        105,
                                                                        113
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "CallExpression",
                                                                            "name": "print",
                                                                            "range": [
                                                                                106,
                                                                                109
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "Arguments",
                                                                                    "name": "arguments",
                                                                                    "range": [
                                                                                        107,
                                                                                        109
                                                                                    ],
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "Literal",
                                                                                            "name": "PostgreSQL is ready.",
                                                                                            "range": [
                                                                                                108,
                                                                                                108
                                                                                            ],
                                                                                            "children": [],
                                                                                            "content": "\"PostgreSQL is ready.\""
                                                                                        }
                                                                                    ],
                                                                                    "content": "(\"PostgreSQL is ready.\")"
                                                                                }
                                                                            ],
                                                                            "content": "print(\"PostgreSQL is ready.\")"
                                                                        },
                                                                        {
                                                                            "type": "ReturnStatement",
                                                                            "name": "return_statement",
                                                                            "range": [
                                                                                111,
                                                                                113
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "Literal",
                                                                                    "name": "True",
                                                                                    "range": [
                                                                                        112,
                                                                                        112
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "True"
                                                                                }
                                                                            ],
                                                                            "content": "return True\n"
                                                                        }
                                                                    ],
                                                                    "content": "\nprint(\"PostgreSQL is ready.\")\nreturn True\n"
                                                                }
                                                            ],
                                                            "content": "if \"accepting connections\" in result.stdout:\nprint(\"PostgreSQL is ready.\")\nreturn True\n"
                                                        }
                                                    ],
                                                    "content": "\nresult=subprocess.run(\n[\n\"docker\",\n\"compose\",\n\"-f\",\n\"docker-compose.test.yaml\",\n\"exec\",\n\"postgres-test\",\n\"pg_isready\",\n\"-U\",\n\"postgres\",\n\"-d\",\n\"postgres\",\n],\ncheck=True,\ncapture_output=True,\ntext=True,\n)\nif \"accepting connections\" in result.stdout:\nprint(\"PostgreSQL is ready.\")\nreturn True\n"
                                                },
                                                {
                                                    "type": "CatchClause",
                                                    "name": "except_block",
                                                    "range": [
                                                        114,
                                                        139
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Exception",
                                                            "name": "CalledProcessError",
                                                            "range": [
                                                                115,
                                                                117
                                                            ],
                                                            "children": [],
                                                            "content": "subprocess.CalledProcessError"
                                                        },
                                                        {
                                                            "type": "BlockStatement",
                                                            "name": "body",
                                                            "range": [
                                                                119,
                                                                139
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "CallExpression",
                                                                    "name": "print",
                                                                    "range": [
                                                                        120,
                                                                        124
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Arguments",
                                                                            "name": "arguments",
                                                                            "range": [
                                                                                121,
                                                                                124
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "TemplateLiteral",
                                                                                    "name": "f_string",
                                                                                    "range": [
                                                                                        122,
                                                                                        123
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "f \"PostgreSQL is not ready yet. Retrying in {delay} seconds...\""
                                                                                }
                                                                            ],
                                                                            "content": "(f \"PostgreSQL is not ready yet. Retrying in {delay} seconds...\")"
                                                                        }
                                                                    ],
                                                                    "content": "print(f \"PostgreSQL is not ready yet. Retrying in {delay} seconds...\")"
                                                                },
                                                                {
                                                                    "type": "CallExpression",
                                                                    "name": "time.sleep",
                                                                    "range": [
                                                                        126,
                                                                        131
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Arguments",
                                                                            "name": "arguments",
                                                                            "range": [
                                                                                129,
                                                                                131
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "delay",
                                                                                    "range": [
                                                                                        130,
                                                                                        130
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "delay"
                                                                                }
                                                                            ],
                                                                            "content": "(delay)"
                                                                        }
                                                                    ],
                                                                    "content": "time.sleep(delay)"
                                                                },
                                                                {
                                                                    "type": "CallExpression",
                                                                    "name": "print",
                                                                    "range": [
                                                                        133,
                                                                        136
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Arguments",
                                                                            "name": "arguments",
                                                                            "range": [
                                                                                134,
                                                                                136
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "Literal",
                                                                                    "name": "Failed to connect to PostgreSQL.",
                                                                                    "range": [
                                                                                        135,
                                                                                        135
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "\"Failed to connect to PostgreSQL.\""
                                                                                }
                                                                            ],
                                                                            "content": "(\"Failed to connect to PostgreSQL.\")"
                                                                        }
                                                                    ],
                                                                    "content": "print(\"Failed to connect to PostgreSQL.\")"
                                                                },
                                                                {
                                                                    "type": "ReturnStatement",
                                                                    "name": "return_statement",
                                                                    "range": [
                                                                        138,
                                                                        139
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Literal",
                                                                            "name": "False",
                                                                            "range": [
                                                                                139,
                                                                                139
                                                                            ],
                                                                            "children": [],
                                                                            "content": "False"
                                                                        }
                                                                    ],
                                                                    "content": "return False"
                                                                }
                                                            ],
                                                            "content": "\nprint(f \"PostgreSQL is not ready yet. Retrying in {delay} seconds...\")\ntime.sleep(delay)\nprint(\"Failed to connect to PostgreSQL.\")\nreturn False"
                                                        }
                                                    ],
                                                    "content": "except subprocess.CalledProcessError:\nprint(f \"PostgreSQL is not ready yet. Retrying in {delay} seconds...\")\ntime.sleep(delay)\nprint(\"Failed to connect to PostgreSQL.\")\nreturn False"
                                                }
                                            ],
                                            "content": "try:\nresult=subprocess.run(\n[\n\"docker\",\n\"compose\",\n\"-f\",\n\"docker-compose.test.yaml\",\n\"exec\",\n\"postgres-test\",\n\"pg_isready\",\n\"-U\",\n\"postgres\",\n\"-d\",\n\"postgres\",\n],\ncheck=True,\ncapture_output=True,\ntext=True,\n)\nif \"accepting connections\" in result.stdout:\nprint(\"PostgreSQL is ready.\")\nreturn True\n"
                                        }
                                    ],
                                    "content": "\ntry:\nresult=subprocess.run(\n[\n\"docker\",\n\"compose\",\n\"-f\",\n\"docker-compose.test.yaml\",\n\"exec\",\n\"postgres-test\",\n\"pg_isready\",\n\"-U\",\n\"postgres\",\n\"-d\",\n\"postgres\",\n],\ncheck=True,\ncapture_output=True,\ntext=True,\n)\nif \"accepting connections\" in result.stdout:\nprint(\"PostgreSQL is ready.\")\nreturn True\n"
                                }
                            ],
                            "content": "for _ in range(max_retries):\ntry:\nresult=subprocess.run(\n[\n\"docker\",\n\"compose\",\n\"-f\",\n\"docker-compose.test.yaml\",\n\"exec\",\n\"postgres-test\",\n\"pg_isready\",\n\"-U\",\n\"postgres\",\n\"-d\",\n\"postgres\",\n],\ncheck=True,\ncapture_output=True,\ntext=True,\n)\nif \"accepting connections\" in result.stdout:\nprint(\"PostgreSQL is ready.\")\nreturn True\n"
                        }
                    ],
                    "content": "\nfor _ in range(max_retries):\ntry:\nresult=subprocess.run(\n[\n\"docker\",\n\"compose\",\n\"-f\",\n\"docker-compose.test.yaml\",\n\"exec\",\n\"postgres-test\",\n\"pg_isready\",\n\"-U\",\n\"postgres\",\n\"-d\",\n\"postgres\",\n],\ncheck=True,\ncapture_output=True,\ntext=True,\n)\nif \"accepting connections\" in result.stdout:\nprint(\"PostgreSQL is ready.\")\nreturn True\nexcept subprocess.CalledProcessError:\nprint(f \"PostgreSQL is not ready yet. Retrying in {delay} seconds...\")\ntime.sleep(delay)\nprint(\"Failed to connect to PostgreSQL.\")\nreturn False\n"
                }
            ],
            "content": "def wait_for_postgres(max_retries=5,delay=5):\nfor _ in range(max_retries):\ntry:\nresult=subprocess.run(\n[\n\"docker\",\n\"compose\",\n\"-f\",\n\"docker-compose.test.yaml\",\n\"exec\",\n\"postgres-test\",\n\"pg_isready\",\n\"-U\",\n\"postgres\",\n\"-d\",\n\"postgres\",\n],\ncheck=True,\ncapture_output=True,\ntext=True,\n)\nif \"accepting connections\" in result.stdout:\nprint(\"PostgreSQL is ready.\")\nreturn True\nexcept subprocess.CalledProcessError:\nprint(f \"PostgreSQL is not ready yet. Retrying in {delay} seconds...\")\ntime.sleep(delay)\nprint(\"Failed to connect to PostgreSQL.\")\nreturn False\n"
        },
        {
            "type": "FunctionDecl",
            "name": "run_command",
            "range": [
                143,
                189
            ],
            "children": [
                {
                    "type": "ParameterList",
                    "name": "parameters",
                    "range": [
                        145,
                        151
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "command",
                            "range": [
                                146,
                                146
                            ],
                            "children": [],
                            "content": "command"
                        },
                        {
                            "type": "Parameter",
                            "name": "check",
                            "range": [
                                148,
                                150
                            ],
                            "children": [],
                            "content": "check=True"
                        }
                    ],
                    "content": "(command,check=True)"
                },
                {
                    "type": "BlockStatement",
                    "name": "body",
                    "range": [
                        152,
                        189
                    ],
                    "children": [
                        {
                            "type": "TryStatement",
                            "name": "try",
                            "range": [
                                154,
                                188
                            ],
                            "children": [
                                {
                                    "type": "BlockStatement",
                                    "name": "block",
                                    "range": [
                                        156,
                                        167
                                    ],
                                    "children": [
                                        {
                                            "type": "ExpressionStatement",
                                            "name": "subprocess.run",
                                            "range": [
                                                157,
                                                166
                                            ],
                                            "children": [
                                                {
                                                    "type": "CallExpression",
                                                    "name": "run",
                                                    "range": [
                                                        159,
                                                        166
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "ArgumentList",
                                                            "name": "arguments",
                                                            "range": [
                                                                160,
                                                                166
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Argument",
                                                                    "name": "command",
                                                                    "range": [
                                                                        161,
                                                                        161
                                                                    ],
                                                                    "children": [],
                                                                    "content": "command"
                                                                },
                                                                {
                                                                    "type": "Argument",
                                                                    "name": "check",
                                                                    "range": [
                                                                        163,
                                                                        165
                                                                    ],
                                                                    "children": [],
                                                                    "content": "check=check"
                                                                }
                                                            ],
                                                            "content": "(command,check=check)"
                                                        }
                                                    ],
                                                    "content": "run(command,check=check)"
                                                }
                                            ],
                                            "content": "subprocess.run(command,check=check)"
                                        }
                                    ],
                                    "content": "\nsubprocess.run(command,check=check)\n"
                                },
                                {
                                    "type": "CatchClause",
                                    "name": "catch",
                                    "range": [
                                        168,
                                        188
                                    ],
                                    "children": [
                                        {
                                            "type": "BlockStatement",
                                            "name": "block",
                                            "range": [
                                                175,
                                                188
                                            ],
                                            "children": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "name": "print",
                                                    "range": [
                                                        176,
                                                        180
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "CallExpression",
                                                            "name": "print",
                                                            "range": [
                                                                177,
                                                                180
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "ArgumentList",
                                                                    "name": "arguments",
                                                                    "range": [
                                                                        178,
                                                                        180
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Argument",
                                                                            "name": "f\"Command failed: {e}\"",
                                                                            "range": [
                                                                                179,
                                                                                179
                                                                            ],
                                                                            "children": [],
                                                                            "content": "\"Command failed: {e}\""
                                                                        }
                                                                    ],
                                                                    "content": "f \"Command failed: {e}\")"
                                                                }
                                                            ],
                                                            "content": "(f \"Command failed: {e}\")"
                                                        }
                                                    ],
                                                    "content": "print(f \"Command failed: {e}\")"
                                                },
                                                {
                                                    "type": "ExpressionStatement",
                                                    "name": "sys.exit",
                                                    "range": [
                                                        182,
                                                        187
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "CallExpression",
                                                            "name": "exit",
                                                            "range": [
                                                                184,
                                                                187
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "ArgumentList",
                                                                    "name": "arguments",
                                                                    "range": [
                                                                        185,
                                                                        187
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Argument",
                                                                            "name": "1",
                                                                            "range": [
                                                                                186,
                                                                                186
                                                                            ],
                                                                            "children": [],
                                                                            "content": "1"
                                                                        }
                                                                    ],
                                                                    "content": "(1)"
                                                                }
                                                            ],
                                                            "content": "exit(1)"
                                                        }
                                                    ],
                                                    "content": "sys.exit(1)"
                                                }
                                            ],
                                            "content": "\nprint(f \"Command failed: {e}\")\nsys.exit(1)\n"
                                        }
                                    ],
                                    "content": "except subprocess.CalledProcessError as e:\nprint(f \"Command failed: {e}\")\nsys.exit(1)\n"
                                }
                            ],
                            "content": "try:\nsubprocess.run(command,check=check)\nexcept subprocess.CalledProcessError as e:\nprint(f \"Command failed: {e}\")\nsys.exit(1)\n"
                        }
                    ],
                    "content": ":\ntry:\nsubprocess.run(command,check=check)\nexcept subprocess.CalledProcessError as e:\nprint(f \"Command failed: {e}\")\nsys.exit(1)\n\n"
                }
            ],
            "content": "def run_command(command,check=True):\ntry:\nsubprocess.run(command,check=check)\nexcept subprocess.CalledProcessError as e:\nprint(f \"Command failed: {e}\")\nsys.exit(1)\n\n"
        },
        {
            "type": "Error",
            "name": "InsufficientDataError",
            "range": [
                0,
                1
            ],
            "children": [],
            "message": "Insufficient data provided. The token list contains only a single newline character, which does not constitute a top-level declaration in any known programming language, including 'cangjie'. Please provide a more comprehensive token list for analysis.",
            "content": "import subprocess"
        }
    ],
    "content": "import subprocess\nimport sys\nimport time\n\n\ndef wait_for_postgres(max_retries=5,delay=5):\nfor _ in range(max_retries):\ntry:\nresult=subprocess.run(\n[\n\"docker\",\n\"compose\",\n\"-f\",\n\"docker-compose.test.yaml\",\n\"exec\",\n\"postgres-test\",\n\"pg_isready\",\n\"-U\",\n\"postgres\",\n\"-d\",\n\"postgres\",\n],\ncheck=True,\ncapture_output=True,\ntext=True,\n)\nif \"accepting connections\" in result.stdout:\nprint(\"PostgreSQL is ready.\")\nreturn True\nexcept subprocess.CalledProcessError:\nprint(f \"PostgreSQL is not ready yet. Retrying in {delay} seconds...\")\ntime.sleep(delay)\nprint(\"Failed to connect to PostgreSQL.\")\nreturn False\n\n\ndef run_command(command,check=True):\ntry:\nsubprocess.run(command,check=check)\nexcept subprocess.CalledProcessError as e:\nprint(f \"Command failed: {e}\")\nsys.exit(1)\n\n"
}