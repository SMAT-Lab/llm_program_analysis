{
    "type": "Program",
    "name": "Global",
    "range": [
        0,
        1205
    ],
    "children": [
        {
            "type": "ImportDeclaration",
            "name": "",
            "range": [
                0,
                2
            ],
            "children": [
                {
                    "type": "ImportSpecifier",
                    "name": "logging",
                    "range": [
                        1,
                        1
                    ],
                    "children": [],
                    "content": "logging"
                }
            ],
            "content": "import logging\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "",
            "range": [
                3,
                11
            ],
            "children": [
                {
                    "type": "ImportSpecifier",
                    "name": "TYPE_CHECKING",
                    "range": [
                        6,
                        6
                    ],
                    "children": [],
                    "content": "TYPE_CHECKING"
                },
                {
                    "type": "ImportSpecifier",
                    "name": "AsyncGenerator",
                    "range": [
                        8,
                        8
                    ],
                    "children": [],
                    "content": "AsyncGenerator"
                },
                {
                    "type": "ImportSpecifier",
                    "name": "Optional",
                    "range": [
                        10,
                        10
                    ],
                    "children": [],
                    "content": "Optional"
                }
            ],
            "content": "from typing import TYPE_CHECKING,AsyncGenerator,Optional\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "",
            "range": [
                13,
                17
            ],
            "children": [
                {
                    "type": "ImportSpecifier",
                    "name": "Json",
                    "range": [
                        16,
                        16
                    ],
                    "children": [],
                    "content": "Json"
                }
            ],
            "content": "from prisma import Json\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "",
            "range": [
                18,
                24
            ],
            "children": [
                {
                    "type": "ImportSpecifier",
                    "name": "IntegrationWebhook",
                    "range": [
                        23,
                        23
                    ],
                    "children": [],
                    "content": "IntegrationWebhook"
                }
            ],
            "content": "from prisma.models import IntegrationWebhook\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "",
            "range": [
                25,
                31
            ],
            "children": [
                {
                    "type": "ImportSpecifier",
                    "name": "Field",
                    "range": [
                        28,
                        28
                    ],
                    "children": [],
                    "content": "Field"
                },
                {
                    "type": "ImportSpecifier",
                    "name": "computed_field",
                    "range": [
                        30,
                        30
                    ],
                    "children": [],
                    "content": "computed_field"
                }
            ],
            "content": "from pydantic import Field,computed_field\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "",
            "range": [
                33,
                41
            ],
            "children": [
                {
                    "type": "ImportSpecifier",
                    "name": "INTEGRATION_WEBHOOK_INCLUDE",
                    "range": [
                        40,
                        40
                    ],
                    "children": [],
                    "content": "INTEGRATION_WEBHOOK_INCLUDE"
                }
            ],
            "content": "from backend.data.includes import INTEGRATION_WEBHOOK_INCLUDE\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "",
            "range": [
                42,
                50
            ],
            "children": [
                {
                    "type": "ImportSpecifier",
                    "name": "AsyncRedisEventBus",
                    "range": [
                        49,
                        49
                    ],
                    "children": [],
                    "content": "AsyncRedisEventBus"
                }
            ],
            "content": "from backend.data.queue import AsyncRedisEventBus\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "",
            "range": [
                51,
                59
            ],
            "children": [
                {
                    "type": "ImportSpecifier",
                    "name": "ProviderName",
                    "range": [
                        58,
                        58
                    ],
                    "children": [],
                    "content": "ProviderName"
                }
            ],
            "content": "from backend.integrations.providers import ProviderName\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "",
            "range": [
                60,
                70
            ],
            "children": [
                {
                    "type": "ImportSpecifier",
                    "name": "webhook_ingress_url",
                    "range": [
                        69,
                        69
                    ],
                    "children": [],
                    "content": "webhook_ingress_url"
                }
            ],
            "content": "from backend.integrations.webhooks.utils import webhook_ingress_url\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "",
            "range": [
                72,
                77
            ],
            "children": [
                {
                    "type": "ImportSpecifier",
                    "name": "BaseDbModel",
                    "range": [
                        76,
                        76
                    ],
                    "children": [],
                    "content": "BaseDbModel"
                }
            ],
            "content": "from.db import BaseDbModel\n"
        },
        {
            "type": "IfStatement",
            "name": "",
            "range": [
                79,
                82
            ],
            "children": [
                {
                    "type": "Identifier",
                    "name": "TYPE_CHECKING",
                    "range": [
                        80,
                        80
                    ],
                    "children": [],
                    "content": "TYPE_CHECKING"
                }
            ],
            "content": "if TYPE_CHECKING:\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "",
            "range": [
                83,
                88
            ],
            "children": [
                {
                    "type": "FromClause",
                    "name": "",
                    "range": [
                        83,
                        85
                    ],
                    "children": [
                        {
                            "type": "Identifier",
                            "name": ".",
                            "range": [
                                84,
                                84
                            ],
                            "children": [],
                            "content": "."
                        },
                        {
                            "type": "Identifier",
                            "name": "graph",
                            "range": [
                                85,
                                85
                            ],
                            "children": [],
                            "content": "graph"
                        }
                    ],
                    "content": "from.graph"
                },
                {
                    "type": "ImportClause",
                    "name": "",
                    "range": [
                        86,
                        87
                    ],
                    "children": [
                        {
                            "type": "Identifier",
                            "name": "NodeModel",
                            "range": [
                                87,
                                87
                            ],
                            "children": [],
                            "content": "NodeModel"
                        }
                    ],
                    "content": "import NodeModel"
                }
            ],
            "content": "from.graph import NodeModel\n"
        },
        {
            "type": "VariableDeclaration",
            "name": "logger",
            "range": [
                90,
                97
            ],
            "children": [
                {
                    "type": "AssignmentExpression",
                    "name": "",
                    "range": [
                        91,
                        97
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "",
                            "range": [
                                92,
                                97
                            ],
                            "children": [
                                {
                                    "type": "MemberExpression",
                                    "name": "",
                                    "range": [
                                        92,
                                        97
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "logging",
                                            "range": [
                                                92,
                                                92
                                            ],
                                            "children": [],
                                            "content": "logging"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "getLogger",
                                            "range": [
                                                94,
                                                94
                                            ],
                                            "children": [],
                                            "content": "getLogger"
                                        }
                                    ],
                                    "content": "logging.getLogger(__name__)"
                                },
                                {
                                    "type": "Literal",
                                    "name": "__name__",
                                    "range": [
                                        96,
                                        96
                                    ],
                                    "children": [],
                                    "content": "__name__"
                                }
                            ],
                            "content": "logging.getLogger(__name__)"
                        }
                    ],
                    "content": "=logging.getLogger(__name__)"
                }
            ],
            "content": "logger=logging.getLogger(__name__)"
        },
        {
            "type": "FunctionDecl",
            "name": "create_webhook",
            "range": [
                385,
                501
            ],
            "children": [
                {
                    "type": "Keyword",
                    "name": "async",
                    "range": [
                        385,
                        385
                    ],
                    "children": [],
                    "content": "async"
                },
                {
                    "type": "Keyword",
                    "name": "def",
                    "range": [
                        386,
                        386
                    ],
                    "children": [],
                    "content": "def"
                },
                {
                    "type": "Identifier",
                    "name": "create_webhook",
                    "range": [
                        387,
                        387
                    ],
                    "children": [],
                    "content": "create_webhook"
                },
                {
                    "type": "Parameter",
                    "name": "webhook",
                    "range": [
                        389,
                        392
                    ],
                    "children": [
                        {
                            "type": "Identifier",
                            "name": "webhook",
                            "range": [
                                389,
                                389
                            ],
                            "children": [],
                            "content": "webhook"
                        },
                        {
                            "type": "TypeAnnotation",
                            "name": "Webhook",
                            "range": [
                                391,
                                391
                            ],
                            "children": [],
                            "content": "Webhook"
                        }
                    ],
                    "content": "webhook:Webhook)"
                },
                {
                    "type": "ReturnType",
                    "name": "->",
                    "range": [
                        393,
                        394
                    ],
                    "children": [],
                    "content": "->"
                },
                {
                    "type": "TypeAnnotation",
                    "name": "Webhook",
                    "range": [
                        395,
                        395
                    ],
                    "children": [],
                    "content": "Webhook"
                },
                {
                    "type": "Block",
                    "name": "",
                    "range": [
                        397,
                        501
                    ],
                    "children": [
                        {
                            "type": "VariableDecl",
                            "name": "created_webhook",
                            "range": [
                                398,
                                491
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "created_webhook",
                                    "range": [
                                        398,
                                        398
                                    ],
                                    "children": [],
                                    "content": "created_webhook"
                                },
                                {
                                    "type": "Keyword",
                                    "name": "await",
                                    "range": [
                                        400,
                                        400
                                    ],
                                    "children": [],
                                    "content": "await"
                                },
                                {
                                    "type": "CallExpression",
                                    "name": "IntegrationWebhook.prisma().create",
                                    "range": [
                                        401,
                                        407
                                    ],
                                    "children": [
                                        {
                                            "type": "MemberExpression",
                                            "name": "IntegrationWebhook.prisma",
                                            "range": [
                                                401,
                                                403
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "IntegrationWebhook",
                                                    "range": [
                                                        401,
                                                        401
                                                    ],
                                                    "children": [],
                                                    "content": "IntegrationWebhook"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "prisma",
                                                    "range": [
                                                        403,
                                                        403
                                                    ],
                                                    "children": [],
                                                    "content": "prisma"
                                                }
                                            ],
                                            "content": "IntegrationWebhook.prisma"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "create",
                                            "range": [
                                                407,
                                                407
                                            ],
                                            "children": [],
                                            "content": "create"
                                        }
                                    ],
                                    "content": "IntegrationWebhook.prisma().create"
                                },
                                {
                                    "type": "ObjectExpression",
                                    "name": "data",
                                    "range": [
                                        410,
                                        489
                                    ],
                                    "children": [
                                        {
                                            "type": "Property",
                                            "name": "id",
                                            "range": [
                                                414,
                                                419
                                            ],
                                            "children": [
                                                {
                                                    "type": "Literal",
                                                    "name": "\"id\"",
                                                    "range": [
                                                        414,
                                                        414
                                                    ],
                                                    "children": [],
                                                    "content": "\"id\""
                                                },
                                                {
                                                    "type": "MemberExpression",
                                                    "name": "webhook.id",
                                                    "range": [
                                                        416,
                                                        418
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "webhook",
                                                            "range": [
                                                                416,
                                                                416
                                                            ],
                                                            "children": [],
                                                            "content": "webhook"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "id",
                                                            "range": [
                                                                418,
                                                                418
                                                            ],
                                                            "children": [],
                                                            "content": "id"
                                                        }
                                                    ],
                                                    "content": "webhook.id"
                                                }
                                            ],
                                            "content": "\"id\":webhook.id,"
                                        },
                                        {
                                            "type": "Property",
                                            "name": "userId",
                                            "range": [
                                                421,
                                                426
                                            ],
                                            "children": [
                                                {
                                                    "type": "Literal",
                                                    "name": "\"userId\"",
                                                    "range": [
                                                        421,
                                                        421
                                                    ],
                                                    "children": [],
                                                    "content": "\"userId\""
                                                },
                                                {
                                                    "type": "MemberExpression",
                                                    "name": "webhook.user_id",
                                                    "range": [
                                                        423,
                                                        425
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "webhook",
                                                            "range": [
                                                                423,
                                                                423
                                                            ],
                                                            "children": [],
                                                            "content": "webhook"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "user_id",
                                                            "range": [
                                                                425,
                                                                425
                                                            ],
                                                            "children": [],
                                                            "content": "user_id"
                                                        }
                                                    ],
                                                    "content": "webhook.user_id"
                                                }
                                            ],
                                            "content": "\"userId\":webhook.user_id,"
                                        },
                                        {
                                            "type": "Property",
                                            "name": "provider",
                                            "range": [
                                                428,
                                                435
                                            ],
                                            "children": [
                                                {
                                                    "type": "Literal",
                                                    "name": "\"provider\"",
                                                    "range": [
                                                        428,
                                                        428
                                                    ],
                                                    "children": [],
                                                    "content": "\"provider\""
                                                },
                                                {
                                                    "type": "MemberExpression",
                                                    "name": "webhook.provider.value",
                                                    "range": [
                                                        430,
                                                        434
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "webhook",
                                                            "range": [
                                                                430,
                                                                430
                                                            ],
                                                            "children": [],
                                                            "content": "webhook"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "provider",
                                                            "range": [
                                                                432,
                                                                432
                                                            ],
                                                            "children": [],
                                                            "content": "provider"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "value",
                                                            "range": [
                                                                434,
                                                                434
                                                            ],
                                                            "children": [],
                                                            "content": "value"
                                                        }
                                                    ],
                                                    "content": "webhook.provider.value"
                                                }
                                            ],
                                            "content": "\"provider\":webhook.provider.value,"
                                        },
                                        {
                                            "type": "Property",
                                            "name": "credentialsId",
                                            "range": [
                                                437,
                                                442
                                            ],
                                            "children": [
                                                {
                                                    "type": "Literal",
                                                    "name": "\"credentialsId\"",
                                                    "range": [
                                                        437,
                                                        437
                                                    ],
                                                    "children": [],
                                                    "content": "\"credentialsId\""
                                                },
                                                {
                                                    "type": "MemberExpression",
                                                    "name": "webhook.credentials_id",
                                                    "range": [
                                                        439,
                                                        441
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "webhook",
                                                            "range": [
                                                                439,
                                                                439
                                                            ],
                                                            "children": [],
                                                            "content": "webhook"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "credentials_id",
                                                            "range": [
                                                                441,
                                                                441
                                                            ],
                                                            "children": [],
                                                            "content": "credentials_id"
                                                        }
                                                    ],
                                                    "content": "webhook.credentials_id"
                                                }
                                            ],
                                            "content": "\"credentialsId\":webhook.credentials_id,"
                                        },
                                        {
                                            "type": "Property",
                                            "name": "webhookType",
                                            "range": [
                                                444,
                                                449
                                            ],
                                            "children": [
                                                {
                                                    "type": "Literal",
                                                    "name": "\"webhookType\"",
                                                    "range": [
                                                        444,
                                                        444
                                                    ],
                                                    "children": [],
                                                    "content": "\"webhookType\""
                                                },
                                                {
                                                    "type": "MemberExpression",
                                                    "name": "webhook.webhook_type",
                                                    "range": [
                                                        446,
                                                        448
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "webhook",
                                                            "range": [
                                                                446,
                                                                446
                                                            ],
                                                            "children": [],
                                                            "content": "webhook"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "webhook_type",
                                                            "range": [
                                                                448,
                                                                448
                                                            ],
                                                            "children": [],
                                                            "content": "webhook_type"
                                                        }
                                                    ],
                                                    "content": "webhook.webhook_type"
                                                }
                                            ],
                                            "content": "\"webhookType\":webhook.webhook_type,"
                                        },
                                        {
                                            "type": "Property",
                                            "name": "resource",
                                            "range": [
                                                451,
                                                456
                                            ],
                                            "children": [
                                                {
                                                    "type": "Literal",
                                                    "name": "\"resource\"",
                                                    "range": [
                                                        451,
                                                        451
                                                    ],
                                                    "children": [],
                                                    "content": "\"resource\""
                                                },
                                                {
                                                    "type": "MemberExpression",
                                                    "name": "webhook.resource",
                                                    "range": [
                                                        453,
                                                        455
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "webhook",
                                                            "range": [
                                                                453,
                                                                453
                                                            ],
                                                            "children": [],
                                                            "content": "webhook"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "resource",
                                                            "range": [
                                                                455,
                                                                455
                                                            ],
                                                            "children": [],
                                                            "content": "resource"
                                                        }
                                                    ],
                                                    "content": "webhook.resource"
                                                }
                                            ],
                                            "content": "\"resource\":webhook.resource,"
                                        },
                                        {
                                            "type": "Property",
                                            "name": "events",
                                            "range": [
                                                458,
                                                463
                                            ],
                                            "children": [
                                                {
                                                    "type": "Literal",
                                                    "name": "\"events\"",
                                                    "range": [
                                                        458,
                                                        458
                                                    ],
                                                    "children": [],
                                                    "content": "\"events\""
                                                },
                                                {
                                                    "type": "MemberExpression",
                                                    "name": "webhook.events",
                                                    "range": [
                                                        460,
                                                        462
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "webhook",
                                                            "range": [
                                                                460,
                                                                460
                                                            ],
                                                            "children": [],
                                                            "content": "webhook"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "events",
                                                            "range": [
                                                                462,
                                                                462
                                                            ],
                                                            "children": [],
                                                            "content": "events"
                                                        }
                                                    ],
                                                    "content": "webhook.events"
                                                }
                                            ],
                                            "content": "\"events\":webhook.events,"
                                        },
                                        {
                                            "type": "Property",
                                            "name": "config",
                                            "range": [
                                                465,
                                                473
                                            ],
                                            "children": [
                                                {
                                                    "type": "Literal",
                                                    "name": "\"config\"",
                                                    "range": [
                                                        465,
                                                        465
                                                    ],
                                                    "children": [],
                                                    "content": "\"config\""
                                                },
                                                {
                                                    "type": "CallExpression",
                                                    "name": "Json",
                                                    "range": [
                                                        467,
                                                        472
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "Json",
                                                            "range": [
                                                                467,
                                                                467
                                                            ],
                                                            "children": [],
                                                            "content": "Json"
                                                        },
                                                        {
                                                            "type": "MemberExpression",
                                                            "name": "webhook.config",
                                                            "range": [
                                                                469,
                                                                471
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "webhook",
                                                                    "range": [
                                                                        469,
                                                                        469
                                                                    ],
                                                                    "children": [],
                                                                    "content": "webhook"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "config",
                                                                    "range": [
                                                                        471,
                                                                        471
                                                                    ],
                                                                    "children": [],
                                                                    "content": "config"
                                                                }
                                                            ],
                                                            "content": "webhook.config"
                                                        }
                                                    ],
                                                    "content": "Json(webhook.config)"
                                                }
                                            ],
                                            "content": "\"config\":Json(webhook.config),"
                                        },
                                        {
                                            "type": "Property",
                                            "name": "secret",
                                            "range": [
                                                475,
                                                480
                                            ],
                                            "children": [
                                                {
                                                    "type": "Literal",
                                                    "name": "\"secret\"",
                                                    "range": [
                                                        475,
                                                        475
                                                    ],
                                                    "children": [],
                                                    "content": "\"secret\""
                                                },
                                                {
                                                    "type": "MemberExpression",
                                                    "name": "webhook.secret",
                                                    "range": [
                                                        477,
                                                        479
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "webhook",
                                                            "range": [
                                                                477,
                                                                477
                                                            ],
                                                            "children": [],
                                                            "content": "webhook"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "secret",
                                                            "range": [
                                                                479,
                                                                479
                                                            ],
                                                            "children": [],
                                                            "content": "secret"
                                                        }
                                                    ],
                                                    "content": "webhook.secret"
                                                }
                                            ],
                                            "content": "\"secret\":webhook.secret,"
                                        },
                                        {
                                            "type": "Property",
                                            "name": "providerWebhookId",
                                            "range": [
                                                482,
                                                487
                                            ],
                                            "children": [
                                                {
                                                    "type": "Literal",
                                                    "name": "\"providerWebhookId\"",
                                                    "range": [
                                                        482,
                                                        482
                                                    ],
                                                    "children": [],
                                                    "content": "\"providerWebhookId\""
                                                },
                                                {
                                                    "type": "MemberExpression",
                                                    "name": "webhook.provider_webhook_id",
                                                    "range": [
                                                        484,
                                                        486
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "webhook",
                                                            "range": [
                                                                484,
                                                                484
                                                            ],
                                                            "children": [],
                                                            "content": "webhook"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "provider_webhook_id",
                                                            "range": [
                                                                486,
                                                                486
                                                            ],
                                                            "children": [],
                                                            "content": "provider_webhook_id"
                                                        }
                                                    ],
                                                    "content": "webhook.provider_webhook_id"
                                                }
                                            ],
                                            "content": "\"providerWebhookId\":webhook.provider_webhook_id,"
                                        }
                                    ],
                                    "content": "data={\n\"id\":webhook.id,\n\"userId\":webhook.user_id,\n\"provider\":webhook.provider.value,\n\"credentialsId\":webhook.credentials_id,\n\"webhookType\":webhook.webhook_type,\n\"resource\":webhook.resource,\n\"events\":webhook.events,\n\"config\":Json(webhook.config),\n\"secret\":webhook.secret,\n\"providerWebhookId\":webhook.provider_webhook_id,\n}"
                                }
                            ],
                            "content": "created_webhook=await IntegrationWebhook.prisma().create(\ndata={\n\"id\":webhook.id,\n\"userId\":webhook.user_id,\n\"provider\":webhook.provider.value,\n\"credentialsId\":webhook.credentials_id,\n\"webhookType\":webhook.webhook_type,\n\"resource\":webhook.resource,\n\"events\":webhook.events,\n\"config\":Json(webhook.config),\n\"secret\":webhook.secret,\n\"providerWebhookId\":webhook.provider_webhook_id,\n}\n)"
                        },
                        {
                            "type": "ReturnStatement",
                            "name": "return",
                            "range": [
                                493,
                                500
                            ],
                            "children": [
                                {
                                    "type": "Keyword",
                                    "name": "return",
                                    "range": [
                                        493,
                                        493
                                    ],
                                    "children": [],
                                    "content": "return"
                                },
                                {
                                    "type": "CallExpression",
                                    "name": "Webhook.from_db",
                                    "range": [
                                        494,
                                        499
                                    ],
                                    "children": [
                                        {
                                            "type": "MemberExpression",
                                            "name": "Webhook.from_db",
                                            "range": [
                                                494,
                                                496
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "Webhook",
                                                    "range": [
                                                        494,
                                                        494
                                                    ],
                                                    "children": [],
                                                    "content": "Webhook"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "from_db",
                                                    "range": [
                                                        496,
                                                        496
                                                    ],
                                                    "children": [],
                                                    "content": "from_db"
                                                }
                                            ],
                                            "content": "Webhook.from_db"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "created_webhook",
                                            "range": [
                                                498,
                                                498
                                            ],
                                            "children": [],
                                            "content": "created_webhook"
                                        }
                                    ],
                                    "content": "Webhook.from_db(created_webhook)"
                                }
                            ],
                            "content": "return Webhook.from_db(created_webhook)\n"
                        }
                    ],
                    "content": "\ncreated_webhook=await IntegrationWebhook.prisma().create(\ndata={\n\"id\":webhook.id,\n\"userId\":webhook.user_id,\n\"provider\":webhook.provider.value,\n\"credentialsId\":webhook.credentials_id,\n\"webhookType\":webhook.webhook_type,\n\"resource\":webhook.resource,\n\"events\":webhook.events,\n\"config\":Json(webhook.config),\n\"secret\":webhook.secret,\n\"providerWebhookId\":webhook.provider_webhook_id,\n}\n)\nreturn Webhook.from_db(created_webhook)\n\n"
                }
            ],
            "content": "async def create_webhook(webhook:Webhook)->Webhook:\ncreated_webhook=await IntegrationWebhook.prisma().create(\ndata={\n\"id\":webhook.id,\n\"userId\":webhook.user_id,\n\"provider\":webhook.provider.value,\n\"credentialsId\":webhook.credentials_id,\n\"webhookType\":webhook.webhook_type,\n\"resource\":webhook.resource,\n\"events\":webhook.events,\n\"config\":Json(webhook.config),\n\"secret\":webhook.secret,\n\"providerWebhookId\":webhook.provider_webhook_id,\n}\n)\nreturn Webhook.from_db(created_webhook)\n\n"
        },
        {
            "type": "FunctionDecl",
            "name": "get_webhook",
            "range": [
                502,
                555
            ],
            "children": [
                {
                    "type": "Keyword",
                    "name": "async",
                    "range": [
                        502,
                        502
                    ],
                    "children": [],
                    "content": "\n"
                },
                {
                    "type": "Keyword",
                    "name": "def",
                    "range": [
                        503,
                        503
                    ],
                    "children": [],
                    "content": "async"
                },
                {
                    "type": "Identifier",
                    "name": "get_webhook",
                    "range": [
                        504,
                        504
                    ],
                    "children": [],
                    "content": "def"
                },
                {
                    "type": "Parameter",
                    "name": "webhook_id",
                    "range": [
                        506,
                        506
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                508,
                                508
                            ],
                            "children": [],
                            "content": ":"
                        }
                    ],
                    "content": "("
                },
                {
                    "type": "TypeAnnotation",
                    "name": "Webhook",
                    "range": [
                        512,
                        512
                    ],
                    "children": [],
                    "content": ">"
                },
                {
                    "type": "Literal",
                    "name": "\"⚠️ No `user_id` check: DO NOT USE without check in user-facing endpoints.\"",
                    "range": [
                        515,
                        517
                    ],
                    "children": [],
                    "content": "\n\"\"\"⚠️ No `user_id` check: DO NOT USE without check in user-facing endpoints.\""
                },
                {
                    "type": "VariableDecl",
                    "name": "webhook",
                    "range": [
                        519,
                        553
                    ],
                    "children": [
                        {
                            "type": "Keyword",
                            "name": "await",
                            "range": [
                                521,
                                521
                            ],
                            "children": [],
                            "content": "="
                        },
                        {
                            "type": "Identifier",
                            "name": "IntegrationWebhook",
                            "range": [
                                522,
                                522
                            ],
                            "children": [],
                            "content": "await"
                        },
                        {
                            "type": "Identifier",
                            "name": "prisma",
                            "range": [
                                524,
                                524
                            ],
                            "children": [],
                            "content": "."
                        },
                        {
                            "type": "Identifier",
                            "name": "find_unique_or_raise",
                            "range": [
                                528,
                                528
                            ],
                            "children": [],
                            "content": "."
                        },
                        {
                            "type": "ObjectLiteral",
                            "name": "where",
                            "range": [
                                531,
                                537
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "\"id\"",
                                    "range": [
                                        534,
                                        534
                                    ],
                                    "children": [],
                                    "content": "{"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "webhook_id",
                                    "range": [
                                        536,
                                        536
                                    ],
                                    "children": [],
                                    "content": ":"
                                }
                            ],
                            "content": "\nwhere={\"id\":webhook_id"
                        },
                        {
                            "type": "Identifier",
                            "name": "include",
                            "range": [
                                540,
                                540
                            ],
                            "children": [],
                            "content": "\n"
                        },
                        {
                            "type": "Identifier",
                            "name": "INTEGRATION_WEBHOOK_INCLUDE",
                            "range": [
                                542,
                                542
                            ],
                            "children": [],
                            "content": "="
                        }
                    ],
                    "content": "\nwebhook=await IntegrationWebhook.prisma().find_unique_or_raise(\nwhere={\"id\":webhook_id},\ninclude=INTEGRATION_WEBHOOK_INCLUDE,\n)\nreturn Webhook.from_db(webhook"
                },
                {
                    "type": "ReturnStatement",
                    "name": "return",
                    "range": [
                        547,
                        553
                    ],
                    "children": [
                        {
                            "type": "Identifier",
                            "name": "Webhook",
                            "range": [
                                548,
                                548
                            ],
                            "children": [],
                            "content": "return"
                        },
                        {
                            "type": "Identifier",
                            "name": "from_db",
                            "range": [
                                550,
                                550
                            ],
                            "children": [],
                            "content": "."
                        },
                        {
                            "type": "Identifier",
                            "name": "webhook",
                            "range": [
                                552,
                                552
                            ],
                            "children": [],
                            "content": "("
                        }
                    ],
                    "content": "\nreturn Webhook.from_db(webhook"
                }
            ],
            "content": "\nasync def get_webhook(webhook_id:str)->Webhook:\n\"\"\"⚠️ No `user_id` check: DO NOT USE without check in user-facing endpoints.\"\"\"\nwebhook=await IntegrationWebhook.prisma().find_unique_or_raise(\nwhere={\"id\":webhook_id},\ninclude=INTEGRATION_WEBHOOK_INCLUDE,\n)\nreturn Webhook.from_db(webhook)\n"
        },
        {
            "type": "FunctionDecl",
            "name": "get_all_webhooks_by_creds",
            "range": [
                556,
                629
            ],
            "children": [
                {
                    "type": "AsyncKeyword",
                    "name": "async",
                    "range": [
                        556,
                        556
                    ],
                    "children": [],
                    "content": "\n"
                },
                {
                    "type": "DefKeyword",
                    "name": "def",
                    "range": [
                        557,
                        557
                    ],
                    "children": [],
                    "content": "\n"
                },
                {
                    "type": "Identifier",
                    "name": "get_all_webhooks_by_creds",
                    "range": [
                        558,
                        558
                    ],
                    "children": [],
                    "content": "async"
                },
                {
                    "type": "ParameterList",
                    "name": "parameters",
                    "range": [
                        559,
                        563
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "credentials_id",
                            "range": [
                                560,
                                560
                            ],
                            "children": [],
                            "content": "get_all_webhooks_by_creds"
                        },
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                562,
                                562
                            ],
                            "children": [],
                            "content": "credentials_id"
                        }
                    ],
                    "content": "def get_all_webhooks_by_creds(credentials_id:"
                },
                {
                    "type": "ReturnType",
                    "name": "list[Webhook]",
                    "range": [
                        564,
                        569
                    ],
                    "children": [],
                    "content": "str)->list["
                },
                {
                    "type": "BlockStatement",
                    "name": "body",
                    "range": [
                        570,
                        629
                    ],
                    "children": [
                        {
                            "type": "Docstring",
                            "name": "docstring",
                            "range": [
                                572,
                                574
                            ],
                            "children": [],
                            "content": ":\n\"\""
                        },
                        {
                            "type": "IfStatement",
                            "name": "if",
                            "range": [
                                576,
                                586
                            ],
                            "children": [
                                {
                                    "type": "UnaryExpression",
                                    "name": "not credentials_id",
                                    "range": [
                                        577,
                                        578
                                    ],
                                    "children": [],
                                    "content": "\nif"
                                },
                                {
                                    "type": "RaiseStatement",
                                    "name": "raise",
                                    "range": [
                                        581,
                                        585
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "ValueError",
                                            "range": [
                                                582,
                                                582
                                            ],
                                            "children": [],
                                            "content": "\n"
                                        },
                                        {
                                            "type": "Literal",
                                            "name": "\"credentials_id must not be empty\"",
                                            "range": [
                                                584,
                                                584
                                            ],
                                            "children": [],
                                            "content": "ValueError"
                                        }
                                    ],
                                    "content": ":\nraise ValueError("
                                }
                            ],
                            "content": "\"\"\nif not credentials_id:\nraise ValueError(\"credentials_id must not be empty\""
                        },
                        {
                            "type": "VariableDecl",
                            "name": "webhooks",
                            "range": [
                                587,
                                614
                            ],
                            "children": [
                                {
                                    "type": "AwaitExpression",
                                    "name": "await",
                                    "range": [
                                        589,
                                        589
                                    ],
                                    "children": [],
                                    "content": "webhooks"
                                },
                                {
                                    "type": "CallExpression",
                                    "name": "IntegrationWebhook.prisma().find_many",
                                    "range": [
                                        590,
                                        613
                                    ],
                                    "children": [
                                        {
                                            "type": "Arguments",
                                            "name": "arguments",
                                            "range": [
                                                593,
                                                613
                                            ],
                                            "children": [
                                                {
                                                    "type": "KeywordArgument",
                                                    "name": "where",
                                                    "range": [
                                                        599,
                                                        605
                                                    ],
                                                    "children": [],
                                                    "content": "(\nwhere={\"credentialsId\":"
                                                },
                                                {
                                                    "type": "KeywordArgument",
                                                    "name": "include",
                                                    "range": [
                                                        608,
                                                        610
                                                    ],
                                                    "children": [],
                                                    "content": ",\ninclude"
                                                }
                                            ],
                                            "content": ".prisma().find_many(\nwhere={\"credentialsId\":credentials_id},\ninclude=INTEGRATION_WEBHOOK_INCLUDE,"
                                        }
                                    ],
                                    "content": "=await IntegrationWebhook.prisma().find_many(\nwhere={\"credentialsId\":credentials_id},\ninclude=INTEGRATION_WEBHOOK_INCLUDE,"
                                }
                            ],
                            "content": ")\nwebhooks=await IntegrationWebhook.prisma().find_many(\nwhere={\"credentialsId\":credentials_id},\ninclude=INTEGRATION_WEBHOOK_INCLUDE,\n"
                        },
                        {
                            "type": "ReturnStatement",
                            "name": "return",
                            "range": [
                                615,
                                628
                            ],
                            "children": [
                                {
                                    "type": "ListComprehension",
                                    "name": "list comprehension",
                                    "range": [
                                        616,
                                        627
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "Webhook.from_db(webhook)",
                                            "range": [
                                                617,
                                                622
                                            ],
                                            "children": [],
                                            "content": "return[Webhook.from_db("
                                        },
                                        {
                                            "type": "ForStatement",
                                            "name": "for webhook in webhooks",
                                            "range": [
                                                623,
                                                626
                                            ],
                                            "children": [],
                                            "content": "webhook)for webhook"
                                        }
                                    ],
                                    "content": "\nreturn[Webhook.from_db(webhook)for webhook in"
                                }
                            ],
                            "content": ")\nreturn[Webhook.from_db(webhook)for webhook in webhooks"
                        }
                    ],
                    "content": "Webhook]:\n\"\"\"⚠️ No `user_id` check: DO NOT USE without check in user-facing endpoints.\"\"\"\nif not credentials_id:\nraise ValueError(\"credentials_id must not be empty\")\nwebhooks=await IntegrationWebhook.prisma().find_many(\nwhere={\"credentialsId\":credentials_id},\ninclude=INTEGRATION_WEBHOOK_INCLUDE,\n)\nreturn[Webhook.from_db(webhook)for webhook in webhooks]"
                }
            ],
            "content": "\n\nasync def get_all_webhooks_by_creds(credentials_id:str)->list[Webhook]:\n\"\"\"⚠️ No `user_id` check: DO NOT USE without check in user-facing endpoints.\"\"\"\nif not credentials_id:\nraise ValueError(\"credentials_id must not be empty\")\nwebhooks=await IntegrationWebhook.prisma().find_many(\nwhere={\"credentialsId\":credentials_id},\ninclude=INTEGRATION_WEBHOOK_INCLUDE,\n)\nreturn[Webhook.from_db(webhook)for webhook in webhooks]"
        },
        {
            "type": "FunctionDecl",
            "name": "find_webhook_by_credentials_and_props",
            "range": [
                630,
                727
            ],
            "children": [
                {
                    "type": "AsyncKeyword",
                    "name": "async",
                    "range": [
                        630,
                        634
                    ],
                    "children": [],
                    "content": "\n\n\nasync def"
                },
                {
                    "type": "DefKeyword",
                    "name": "def",
                    "range": [
                        631,
                        634
                    ],
                    "children": [],
                    "content": "\n\nasync def"
                },
                {
                    "type": "FunctionName",
                    "name": "find_webhook_by_credentials_and_props",
                    "range": [
                        632,
                        663
                    ],
                    "children": [],
                    "content": "\nasync def find_webhook_by_credentials_and_props(\ncredentials_id:str,webhook_type:str,resource:str,events:list[str]\n)->Webhook|None:"
                },
                {
                    "type": "ParameterList",
                    "name": "parameters",
                    "range": [
                        633,
                        653
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "credentials_id",
                            "range": [
                                635,
                                637
                            ],
                            "children": [],
                            "content": "find_webhook_by_credentials_and_props(\n"
                        },
                        {
                            "type": "Parameter",
                            "name": "webhook_type",
                            "range": [
                                639,
                                641
                            ],
                            "children": [],
                            "content": ":str,"
                        },
                        {
                            "type": "Parameter",
                            "name": "resource",
                            "range": [
                                643,
                                645
                            ],
                            "children": [],
                            "content": ":str,"
                        },
                        {
                            "type": "Parameter",
                            "name": "events",
                            "range": [
                                647,
                                652
                            ],
                            "children": [],
                            "content": ":str,events:list"
                        }
                    ],
                    "content": "async def find_webhook_by_credentials_and_props(\ncredentials_id:str,webhook_type:str,resource:str,events:list["
                },
                {
                    "type": "ReturnType",
                    "name": "-> Webhook | None",
                    "range": [
                        655,
                        659
                    ],
                    "children": [],
                    "content": "]\n)->"
                },
                {
                    "type": "FunctionBody",
                    "name": "body",
                    "range": [
                        661,
                        727
                    ],
                    "children": [
                        {
                            "type": "Docstring",
                            "name": "\"⚠️ No `user_id` check: DO NOT USE without check in user-facing endpoints.\"",
                            "range": [
                                662,
                                664
                            ],
                            "children": [],
                            "content": "None:\n"
                        },
                        {
                            "type": "Assignment",
                            "name": "webhook = await IntegrationWebhook.prisma().find_first(...)",
                            "range": [
                                666,
                                714
                            ],
                            "children": [],
                            "content": "\"⚠️ No `user_id` check: DO NOT USE without check in user-facing endpoints.\"\"\"\nwebhook=await IntegrationWebhook.prisma().find_first(\nwhere={\n\"credentialsId\":credentials_id,\n\"webhookType\":webhook_type,\n\"resource\":resource,\n\"events\":{\"has_every\":events},\n},\ninclude=INTEGRATION_WEBHOOK_INCLUDE"
                        },
                        {
                            "type": "ReturnStatement",
                            "name": "return Webhook.from_db(webhook) if webhook else None",
                            "range": [
                                716,
                                726
                            ],
                            "children": [],
                            "content": "\n)\nreturn Webhook.from_db(webhook)if"
                        }
                    ],
                    "content": "|None:\n\"\"\"⚠️ No `user_id` check: DO NOT USE without check in user-facing endpoints.\"\"\"\nwebhook=await IntegrationWebhook.prisma().find_first(\nwhere={\n\"credentialsId\":credentials_id,\n\"webhookType\":webhook_type,\n\"resource\":resource,\n\"events\":{\"has_every\":events},\n},\ninclude=INTEGRATION_WEBHOOK_INCLUDE,\n)\nreturn Webhook.from_db(webhook)if webhook"
                }
            ],
            "content": "\n\n\nasync def find_webhook_by_credentials_and_props(\ncredentials_id:str,webhook_type:str,resource:str,events:list[str]\n)->Webhook|None:\n\"\"\"⚠️ No `user_id` check: DO NOT USE without check in user-facing endpoints.\"\"\"\nwebhook=await IntegrationWebhook.prisma().find_first(\nwhere={\n\"credentialsId\":credentials_id,\n\"webhookType\":webhook_type,\n\"resource\":resource,\n\"events\":{\"has_every\":events},\n},\ninclude=INTEGRATION_WEBHOOK_INCLUDE,\n)\nreturn Webhook.from_db(webhook)if webhook"
        },
        {
            "type": "FunctionDecl",
            "name": "find_webhook_by_graph_and_props",
            "range": [
                729,
                835
            ],
            "children": [
                {
                    "type": "Keyword",
                    "name": "async",
                    "range": [
                        729,
                        729
                    ],
                    "children": [],
                    "content": "None"
                },
                {
                    "type": "Keyword",
                    "name": "def",
                    "range": [
                        730,
                        730
                    ],
                    "children": [],
                    "content": "\n"
                },
                {
                    "type": "Identifier",
                    "name": "find_webhook_by_graph_and_props",
                    "range": [
                        731,
                        731
                    ],
                    "children": [],
                    "content": "\n"
                },
                {
                    "type": "Parameter",
                    "name": "graph_id",
                    "range": [
                        734,
                        736
                    ],
                    "children": [
                        {
                            "type": "Identifier",
                            "name": "graph_id",
                            "range": [
                                734,
                                734
                            ],
                            "children": [],
                            "content": "def"
                        },
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                736,
                                736
                            ],
                            "children": [],
                            "content": "("
                        }
                    ],
                    "content": "def find_webhook_by_graph_and_props("
                },
                {
                    "type": "Parameter",
                    "name": "provider",
                    "range": [
                        738,
                        740
                    ],
                    "children": [
                        {
                            "type": "Identifier",
                            "name": "provider",
                            "range": [
                                738,
                                738
                            ],
                            "children": [],
                            "content": "graph_id"
                        },
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                740,
                                740
                            ],
                            "children": [],
                            "content": "str"
                        }
                    ],
                    "content": "graph_id:str"
                },
                {
                    "type": "Parameter",
                    "name": "webhook_type",
                    "range": [
                        742,
                        744
                    ],
                    "children": [
                        {
                            "type": "Identifier",
                            "name": "webhook_type",
                            "range": [
                                742,
                                742
                            ],
                            "children": [],
                            "content": "provider"
                        },
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                744,
                                744
                            ],
                            "children": [],
                            "content": "str"
                        }
                    ],
                    "content": "provider:str"
                },
                {
                    "type": "Parameter",
                    "name": "events",
                    "range": [
                        746,
                        751
                    ],
                    "children": [
                        {
                            "type": "Identifier",
                            "name": "events",
                            "range": [
                                746,
                                746
                            ],
                            "children": [],
                            "content": "webhook_type"
                        },
                        {
                            "type": "TypeAnnotation",
                            "name": "list",
                            "range": [
                                748,
                                748
                            ],
                            "children": [],
                            "content": "str"
                        },
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                750,
                                750
                            ],
                            "children": [],
                            "content": "events"
                        }
                    ],
                    "content": "webhook_type:str,events:"
                },
                {
                    "type": "ReturnType",
                    "name": "->",
                    "range": [
                        754,
                        755
                    ],
                    "children": [],
                    "content": "str]"
                },
                {
                    "type": "TypeAnnotation",
                    "name": "Webhook",
                    "range": [
                        756,
                        756
                    ],
                    "children": [],
                    "content": "\n"
                },
                {
                    "type": "TypeAnnotation",
                    "name": "None",
                    "range": [
                        758,
                        758
                    ],
                    "children": [],
                    "content": "-"
                },
                {
                    "type": "Literal",
                    "name": "\"⚠️ No `user_id` check: DO NOT USE without check in user-facing endpoints.\"",
                    "range": [
                        762,
                        762
                    ],
                    "children": [],
                    "content": "None"
                },
                {
                    "type": "VariableDecl",
                    "name": "webhook",
                    "range": [
                        765,
                        833
                    ],
                    "children": [
                        {
                            "type": "Identifier",
                            "name": "webhook",
                            "range": [
                                765,
                                765
                            ],
                            "children": [],
                            "content": "\"\""
                        },
                        {
                            "type": "Keyword",
                            "name": "await",
                            "range": [
                                767,
                                767
                            ],
                            "children": [],
                            "content": "\"\""
                        },
                        {
                            "type": "Identifier",
                            "name": "IntegrationWebhook",
                            "range": [
                                768,
                                768
                            ],
                            "children": [],
                            "content": "\n"
                        },
                        {
                            "type": "Identifier",
                            "name": "prisma",
                            "range": [
                                770,
                                770
                            ],
                            "children": [],
                            "content": "="
                        },
                        {
                            "type": "Identifier",
                            "name": "find_first",
                            "range": [
                                774,
                                774
                            ],
                            "children": [],
                            "content": "prisma"
                        },
                        {
                            "type": "ObjectLiteral",
                            "name": "where",
                            "range": [
                                777,
                                813
                            ],
                            "children": [
                                {
                                    "type": "Property",
                                    "name": "\"provider\"",
                                    "range": [
                                        781,
                                        783
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "name": "\"provider\"",
                                            "range": [
                                                781,
                                                781
                                            ],
                                            "children": [],
                                            "content": "where"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "provider",
                                            "range": [
                                                783,
                                                783
                                            ],
                                            "children": [],
                                            "content": "{"
                                        }
                                    ],
                                    "content": "where={"
                                },
                                {
                                    "type": "Property",
                                    "name": "\"webhookType\"",
                                    "range": [
                                        786,
                                        788
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "name": "\"webhookType\"",
                                            "range": [
                                                786,
                                                786
                                            ],
                                            "children": [],
                                            "content": ":"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "webhook_type",
                                            "range": [
                                                788,
                                                788
                                            ],
                                            "children": [],
                                            "content": ","
                                        }
                                    ],
                                    "content": ":provider,"
                                },
                                {
                                    "type": "Property",
                                    "name": "\"events\"",
                                    "range": [
                                        791,
                                        797
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "name": "\"events\"",
                                            "range": [
                                                791,
                                                791
                                            ],
                                            "children": [],
                                            "content": ":"
                                        },
                                        {
                                            "type": "ObjectLiteral",
                                            "name": "{\"has_every\": events}",
                                            "range": [
                                                793,
                                                797
                                            ],
                                            "children": [
                                                {
                                                    "type": "Property",
                                                    "name": "\"has_every\"",
                                                    "range": [
                                                        794,
                                                        796
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Literal",
                                                            "name": "\"has_every\"",
                                                            "range": [
                                                                794,
                                                                794
                                                            ],
                                                            "children": [],
                                                            "content": "\n"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "events",
                                                            "range": [
                                                                796,
                                                                796
                                                            ],
                                                            "children": [],
                                                            "content": ":"
                                                        }
                                                    ],
                                                    "content": "\n\"events\":"
                                                }
                                            ],
                                            "content": ",\n\"events\":{"
                                        }
                                    ],
                                    "content": ":webhook_type,\n\"events\":{"
                                },
                                {
                                    "type": "Property",
                                    "name": "\"AgentNodes\"",
                                    "range": [
                                        800,
                                        810
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "name": "\"AgentNodes\"",
                                            "range": [
                                                800,
                                                800
                                            ],
                                            "children": [],
                                            "content": "events"
                                        },
                                        {
                                            "type": "ObjectLiteral",
                                            "name": "{\"some\": {\"agentGraphId\": graph_id}}",
                                            "range": [
                                                802,
                                                810
                                            ],
                                            "children": [
                                                {
                                                    "type": "Property",
                                                    "name": "\"some\"",
                                                    "range": [
                                                        803,
                                                        805
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Literal",
                                                            "name": "\"some\"",
                                                            "range": [
                                                                803,
                                                                803
                                                            ],
                                                            "children": [],
                                                            "content": "\n"
                                                        },
                                                        {
                                                            "type": "ObjectLiteral",
                                                            "name": "{\"agentGraphId\": graph_id}",
                                                            "range": [
                                                                805,
                                                                809
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Property",
                                                                    "name": "\"agentGraphId\"",
                                                                    "range": [
                                                                        806,
                                                                        808
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Literal",
                                                                            "name": "\"agentGraphId\"",
                                                                            "range": [
                                                                                806,
                                                                                806
                                                                            ],
                                                                            "children": [],
                                                                            "content": "{"
                                                                        },
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "graph_id",
                                                                            "range": [
                                                                                808,
                                                                                808
                                                                            ],
                                                                            "children": [],
                                                                            "content": ":"
                                                                        }
                                                                    ],
                                                                    "content": "{\"some\":"
                                                                }
                                                            ],
                                                            "content": ":{\"some\":{"
                                                        }
                                                    ],
                                                    "content": "\n\"AgentNodes\":"
                                                }
                                            ],
                                            "content": ",\n\"AgentNodes\":{\"some\":{\"agentGraphId\""
                                        }
                                    ],
                                    "content": "events},\n\"AgentNodes\":{\"some\":{\"agentGraphId\""
                                }
                            ],
                            "content": ".find_first(\nwhere={\n\"provider\":provider,\n\"webhookType\":webhook_type,\n\"events\":{\"has_every\":events},\n\"AgentNodes\":{\"some\":{\"agentGraphId\":graph_id}"
                        },
                        {
                            "type": "Identifier",
                            "name": "include",
                            "range": [
                                816,
                                816
                            ],
                            "children": [],
                            "content": "\n"
                        },
                        {
                            "type": "Identifier",
                            "name": "INTEGRATION_WEBHOOK_INCLUDE",
                            "range": [
                                818,
                                818
                            ],
                            "children": [],
                            "content": ","
                        }
                    ],
                    "content": "\"\"\"⚠️ No `user_id` check: DO NOT USE without check in user-facing endpoints.\"\"\"\nwebhook=await IntegrationWebhook.prisma().find_first(\nwhere={\n\"provider\":provider,\n\"webhookType\":webhook_type,\n\"events\":{\"has_every\":events},\n\"AgentNodes\":{\"some\":{\"agentGraphId\":graph_id}},\n},\ninclude=INTEGRATION_WEBHOOK_INCLUDE,\n)\nreturn Webhook.from_db(webhook)"
                },
                {
                    "type": "ReturnStatement",
                    "name": "return",
                    "range": [
                        823,
                        833
                    ],
                    "children": [
                        {
                            "type": "Identifier",
                            "name": "Webhook",
                            "range": [
                                824,
                                824
                            ],
                            "children": [],
                            "content": "\n"
                        },
                        {
                            "type": "Identifier",
                            "name": "from_db",
                            "range": [
                                826,
                                826
                            ],
                            "children": [],
                            "content": "\n"
                        },
                        {
                            "type": "Identifier",
                            "name": "webhook",
                            "range": [
                                828,
                                828
                            ],
                            "children": [],
                            "content": "Webhook"
                        },
                        {
                            "type": "IfStatement",
                            "name": "if",
                            "range": [
                                830,
                                830
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "webhook",
                                    "range": [
                                        831,
                                        831
                                    ],
                                    "children": [],
                                    "content": "("
                                }
                            ],
                            "content": "from_db"
                        },
                        {
                            "type": "Keyword",
                            "name": "else",
                            "range": [
                                832,
                                832
                            ],
                            "children": [],
                            "content": "webhook"
                        },
                        {
                            "type": "Identifier",
                            "name": "None",
                            "range": [
                                833,
                                833
                            ],
                            "children": [],
                            "content": ")"
                        }
                    ],
                    "content": ",\n)\nreturn Webhook.from_db(webhook)"
                }
            ],
            "content": "None\n\n\nasync def find_webhook_by_graph_and_props(\ngraph_id:str,provider:str,webhook_type:str,events:list[str]\n)->Webhook|None:\n\"\"\"⚠️ No `user_id` check: DO NOT USE without check in user-facing endpoints.\"\"\"\nwebhook=await IntegrationWebhook.prisma().find_first(\nwhere={\n\"provider\":provider,\n\"webhookType\":webhook_type,\n\"events\":{\"has_every\":events},\n\"AgentNodes\":{\"some\":{\"agentGraphId\":graph_id}},\n},\ninclude=INTEGRATION_WEBHOOK_INCLUDE,\n)\nreturn Webhook.from_db(webhook)if webhook"
        },
        {
            "type": "FunctionDecl",
            "name": "update_webhook_config",
            "range": [
                836,
                918
            ],
            "children": [
                {
                    "type": "Keyword",
                    "name": "async",
                    "range": [
                        836,
                        836
                    ],
                    "children": [],
                    "content": "else"
                },
                {
                    "type": "Keyword",
                    "name": "def",
                    "range": [
                        837,
                        837
                    ],
                    "children": [],
                    "content": "None"
                },
                {
                    "type": "Identifier",
                    "name": "update_webhook_config",
                    "range": [
                        838,
                        838
                    ],
                    "children": [],
                    "content": "\n"
                },
                {
                    "type": "Parameter",
                    "name": "webhook_id",
                    "range": [
                        840,
                        842
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                842,
                                842
                            ],
                            "children": [],
                            "content": "def"
                        }
                    ],
                    "content": "\nasync def"
                },
                {
                    "type": "Parameter",
                    "name": "updated_config",
                    "range": [
                        844,
                        846
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "dict",
                            "range": [
                                846,
                                846
                            ],
                            "children": [],
                            "content": ":"
                        }
                    ],
                    "content": "(webhook_id:"
                },
                {
                    "type": "TypeAnnotation",
                    "name": "Webhook",
                    "range": [
                        850,
                        850
                    ],
                    "children": [],
                    "content": ":"
                },
                {
                    "type": "Literal",
                    "name": "\"⚠️ No `user_id` check: DO NOT USE without check in user-facing endpoints.\"",
                    "range": [
                        854,
                        854
                    ],
                    "children": [],
                    "content": ">"
                },
                {
                    "type": "VariableDecl",
                    "name": "_updated_webhook",
                    "range": [
                        857,
                        895
                    ],
                    "children": [
                        {
                            "type": "Keyword",
                            "name": "await",
                            "range": [
                                859,
                                859
                            ],
                            "children": [],
                            "content": "\"⚠️ No `user_id` check: DO NOT USE without check in user-facing endpoints.\""
                        },
                        {
                            "type": "Identifier",
                            "name": "IntegrationWebhook",
                            "range": [
                                860,
                                860
                            ],
                            "children": [],
                            "content": "\"\""
                        },
                        {
                            "type": "Identifier",
                            "name": "prisma",
                            "range": [
                                862,
                                862
                            ],
                            "children": [],
                            "content": "_updated_webhook"
                        },
                        {
                            "type": "Identifier",
                            "name": "update",
                            "range": [
                                866,
                                866
                            ],
                            "children": [],
                            "content": "."
                        },
                        {
                            "type": "ObjectLiteral",
                            "name": "where",
                            "range": [
                                869,
                                875
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "\"id\"",
                                    "range": [
                                        872,
                                        872
                                    ],
                                    "children": [],
                                    "content": "("
                                },
                                {
                                    "type": "Identifier",
                                    "name": "webhook_id",
                                    "range": [
                                        874,
                                        874
                                    ],
                                    "children": [],
                                    "content": "where"
                                }
                            ],
                            "content": ").update(\nwhere="
                        },
                        {
                            "type": "ObjectLiteral",
                            "name": "data",
                            "range": [
                                878,
                                887
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "\"config\"",
                                    "range": [
                                        881,
                                        881
                                    ],
                                    "children": [],
                                    "content": ","
                                },
                                {
                                    "type": "Identifier",
                                    "name": "Json",
                                    "range": [
                                        883,
                                        883
                                    ],
                                    "children": [],
                                    "content": "data"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "updated_config",
                                    "range": [
                                        885,
                                        885
                                    ],
                                    "children": [],
                                    "content": "{"
                                }
                            ],
                            "content": ":webhook_id},\ndata={\"config\":"
                        },
                        {
                            "type": "Identifier",
                            "name": "include",
                            "range": [
                                890,
                                892
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "INTEGRATION_WEBHOOK_INCLUDE",
                                    "range": [
                                        892,
                                        892
                                    ],
                                    "children": [],
                                    "content": "}"
                                }
                            ],
                            "content": "updated_config)}"
                        }
                    ],
                    "content": "\n\"\"\"⚠️ No `user_id` check: DO NOT USE without check in user-facing endpoints.\"\"\"\n_updated_webhook=await IntegrationWebhook.prisma().update(\nwhere={\"id\":webhook_id},\ndata={\"config\":Json(updated_config)},\ninclude"
                },
                {
                    "type": "IfStatement",
                    "name": "if",
                    "range": [
                        897,
                        909
                    ],
                    "children": [
                        {
                            "type": "Identifier",
                            "name": "_updated_webhook",
                            "range": [
                                898,
                                898
                            ],
                            "children": [],
                            "content": ","
                        },
                        {
                            "type": "Keyword",
                            "name": "is",
                            "range": [
                                899,
                                899
                            ],
                            "children": [],
                            "content": "\n"
                        },
                        {
                            "type": "Identifier",
                            "name": "None",
                            "range": [
                                900,
                                900
                            ],
                            "children": [],
                            "content": ")"
                        },
                        {
                            "type": "RaiseStatement",
                            "name": "raise",
                            "range": [
                                903,
                                908
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "ValueError",
                                    "range": [
                                        904,
                                        904
                                    ],
                                    "children": [],
                                    "content": "is"
                                },
                                {
                                    "type": "Literal",
                                    "name": "f\"Webhook #{webhook_id} not found\"",
                                    "range": [
                                        907,
                                        907
                                    ],
                                    "children": [],
                                    "content": "\n"
                                }
                            ],
                            "content": "_updated_webhook is None:\nraise"
                        }
                    ],
                    "content": "INTEGRATION_WEBHOOK_INCLUDE,\n)\nif _updated_webhook is None:\nraise ValueError"
                },
                {
                    "type": "ReturnStatement",
                    "name": "return",
                    "range": [
                        910,
                        917
                    ],
                    "children": [
                        {
                            "type": "Identifier",
                            "name": "Webhook",
                            "range": [
                                911,
                                911
                            ],
                            "children": [],
                            "content": "f"
                        },
                        {
                            "type": "Identifier",
                            "name": "from_db",
                            "range": [
                                913,
                                913
                            ],
                            "children": [],
                            "content": ")"
                        },
                        {
                            "type": "Identifier",
                            "name": "_updated_webhook",
                            "range": [
                                915,
                                915
                            ],
                            "children": [],
                            "content": "return"
                        }
                    ],
                    "content": "(f \"Webhook #{webhook_id} not found\")\nreturn Webhook."
                }
            ],
            "content": "else None\n\n\nasync def update_webhook_config(webhook_id:str,updated_config:dict)->Webhook:\n\"\"\"⚠️ No `user_id` check: DO NOT USE without check in user-facing endpoints.\"\"\"\n_updated_webhook=await IntegrationWebhook.prisma().update(\nwhere={\"id\":webhook_id},\ndata={\"config\":Json(updated_config)},\ninclude=INTEGRATION_WEBHOOK_INCLUDE,\n)\nif _updated_webhook is None:\nraise ValueError(f \"Webhook #{webhook_id} not found\")\nreturn Webhook.from_db"
        },
        {
            "type": "FunctionDecl",
            "name": "delete_webhook",
            "range": [
                919,
                968
            ],
            "children": [
                {
                    "type": "Keyword",
                    "name": "async",
                    "range": [
                        919,
                        919
                    ],
                    "children": [],
                    "content": "("
                },
                {
                    "type": "Keyword",
                    "name": "def",
                    "range": [
                        920,
                        920
                    ],
                    "children": [],
                    "content": "_updated_webhook"
                },
                {
                    "type": "Identifier",
                    "name": "delete_webhook",
                    "range": [
                        921,
                        921
                    ],
                    "children": [],
                    "content": ")"
                },
                {
                    "type": "Parameter",
                    "name": "webhook_id",
                    "range": [
                        923,
                        923
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                925,
                                925
                            ],
                            "children": [],
                            "content": "async"
                        }
                    ],
                    "content": "\n"
                },
                {
                    "type": "ReturnType",
                    "name": "->",
                    "range": [
                        927,
                        928
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "None",
                            "range": [
                                929,
                                929
                            ],
                            "children": [],
                            "content": "webhook_id"
                        }
                    ],
                    "content": "delete_webhook("
                },
                {
                    "type": "BlockStatement",
                    "name": "",
                    "range": [
                        931,
                        968
                    ],
                    "children": [
                        {
                            "type": "Literal",
                            "name": "\"⚠️ No `user_id` check: DO NOT USE without check in user-facing endpoints.\"",
                            "range": [
                                932,
                                934
                            ],
                            "children": [],
                            "content": ")->"
                        },
                        {
                            "type": "VariableDeclaration",
                            "name": "deleted",
                            "range": [
                                936,
                                954
                            ],
                            "children": [
                                {
                                    "type": "Keyword",
                                    "name": "await",
                                    "range": [
                                        938,
                                        938
                                    ],
                                    "children": [],
                                    "content": "\"\""
                                },
                                {
                                    "type": "CallExpression",
                                    "name": "IntegrationWebhook.prisma.delete",
                                    "range": [
                                        939,
                                        945
                                    ],
                                    "children": [
                                        {
                                            "type": "MemberExpression",
                                            "name": "IntegrationWebhook.prisma.delete",
                                            "range": [
                                                939,
                                                945
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "IntegrationWebhook",
                                                    "range": [
                                                        939,
                                                        939
                                                    ],
                                                    "children": [],
                                                    "content": "\"⚠️ No `user_id` check: DO NOT USE without check in user-facing endpoints.\""
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "prisma",
                                                    "range": [
                                                        941,
                                                        941
                                                    ],
                                                    "children": [],
                                                    "content": "\n"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "delete",
                                                    "range": [
                                                        945,
                                                        945
                                                    ],
                                                    "children": [],
                                                    "content": "IntegrationWebhook"
                                                }
                                            ],
                                            "content": "\"⚠️ No `user_id` check: DO NOT USE without check in user-facing endpoints.\"\"\"\ndeleted=await IntegrationWebhook"
                                        }
                                    ],
                                    "content": "\"⚠️ No `user_id` check: DO NOT USE without check in user-facing endpoints.\"\"\"\ndeleted=await IntegrationWebhook"
                                },
                                {
                                    "type": "ObjectExpression",
                                    "name": "where",
                                    "range": [
                                        947,
                                        953
                                    ],
                                    "children": [
                                        {
                                            "type": "Property",
                                            "name": "id",
                                            "range": [
                                                950,
                                                952
                                            ],
                                            "children": [
                                                {
                                                    "type": "Literal",
                                                    "name": "\"id\"",
                                                    "range": [
                                                        950,
                                                        950
                                                    ],
                                                    "children": [],
                                                    "content": "."
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "webhook_id",
                                                    "range": [
                                                        952,
                                                        952
                                                    ],
                                                    "children": [],
                                                    "content": "("
                                                }
                                            ],
                                            "content": ".delete("
                                        }
                                    ],
                                    "content": "prisma().delete(where"
                                }
                            ],
                            "content": ":\n\"\"\"⚠️ No `user_id` check: DO NOT USE without check in user-facing endpoints.\"\"\"\ndeleted=await IntegrationWebhook.prisma().delete(where="
                        },
                        {
                            "type": "IfStatement",
                            "name": "",
                            "range": [
                                956,
                                967
                            ],
                            "children": [
                                {
                                    "type": "UnaryExpression",
                                    "name": "not",
                                    "range": [
                                        957,
                                        957
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "deleted",
                                            "range": [
                                                958,
                                                958
                                            ],
                                            "children": [],
                                            "content": "webhook_id"
                                        }
                                    ],
                                    "content": ":"
                                },
                                {
                                    "type": "BlockStatement",
                                    "name": "",
                                    "range": [
                                        960,
                                        967
                                    ],
                                    "children": [
                                        {
                                            "type": "ThrowStatement",
                                            "name": "",
                                            "range": [
                                                961,
                                                966
                                            ],
                                            "children": [
                                                {
                                                    "type": "NewExpression",
                                                    "name": "ValueError",
                                                    "range": [
                                                        962,
                                                        966
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "ValueError",
                                                            "range": [
                                                                962,
                                                                962
                                                            ],
                                                            "children": [],
                                                            "content": "if"
                                                        },
                                                        {
                                                            "type": "TemplateLiteral",
                                                            "name": "f\"Webhook #{webhook_id} not found\"",
                                                            "range": [
                                                                964,
                                                                965
                                                            ],
                                                            "children": [],
                                                            "content": "deleted:"
                                                        }
                                                    ],
                                                    "content": "if not deleted:\n"
                                                }
                                            ],
                                            "content": "\nif not deleted:\n"
                                        }
                                    ],
                                    "content": ")\nif not deleted:\nraise"
                                }
                            ],
                            "content": "\"id\":webhook_id})\nif not deleted:\nraise"
                        }
                    ],
                    "content": "str)->None:\n\"\"\"⚠️ No `user_id` check: DO NOT USE without check in user-facing endpoints.\"\"\"\ndeleted=await IntegrationWebhook.prisma().delete(where={\"id\":webhook_id})\nif not deleted:\nraise ValueError"
                }
            ],
            "content": "(_updated_webhook)\n\n\nasync def delete_webhook(webhook_id:str)->None:\n\"\"\"⚠️ No `user_id` check: DO NOT USE without check in user-facing endpoints.\"\"\"\ndeleted=await IntegrationWebhook.prisma().delete(where={\"id\":webhook_id})\nif not deleted:\nraise ValueError"
        },
        {
            "type": "Comment",
            "name": "",
            "range": [
                970,
                1015
            ],
            "children": [],
            "content": "f \"Webhook #{webhook_id} not found\")\n\n\n#---------------------WEBHOOK EVENTS----------------"
        },
        {
            "type": "NewLine",
            "name": "",
            "range": [
                1016,
                1018
            ],
            "children": [],
            "content": "---"
        },
        {
            "type": "ClassDecl",
            "name": "WebhookEvent",
            "range": [
                1019,
                1042
            ],
            "children": [
                {
                    "type": "Inheritance",
                    "name": "BaseDbModel",
                    "range": [
                        1021,
                        1023
                    ],
                    "children": [],
                    "content": "#\n\n"
                },
                {
                    "type": "Property",
                    "name": "provider",
                    "range": [
                        1026,
                        1028
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                1028,
                                1028
                            ],
                            "children": [],
                            "content": "BaseDbModel"
                        }
                    ],
                    "content": "WebhookEvent(BaseDbModel"
                },
                {
                    "type": "Property",
                    "name": "webhook_id",
                    "range": [
                        1030,
                        1032
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                1032,
                                1032
                            ],
                            "children": [],
                            "content": "provider"
                        }
                    ],
                    "content": ":\nprovider"
                },
                {
                    "type": "Property",
                    "name": "event_type",
                    "range": [
                        1034,
                        1036
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                1036,
                                1036
                            ],
                            "children": [],
                            "content": "webhook_id"
                        }
                    ],
                    "content": "str\nwebhook_id"
                },
                {
                    "type": "Property",
                    "name": "payload",
                    "range": [
                        1038,
                        1040
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "dict",
                            "range": [
                                1040,
                                1040
                            ],
                            "children": [],
                            "content": "event_type"
                        }
                    ],
                    "content": "str\nevent_type"
                }
            ],
            "content": "--#\n\n\nclass WebhookEvent(BaseDbModel):\nprovider:str\nwebhook_id:str\nevent_type:str"
        },
        {
            "type": "ClassDecl",
            "name": "WebhookEventBus",
            "range": [
                1043,
                1056
            ],
            "children": [
                {
                    "type": "Inheritance",
                    "name": "AsyncRedisEventBus",
                    "range": [
                        1045,
                        1050
                    ],
                    "children": [
                        {
                            "type": "GenericType",
                            "name": "WebhookEvent",
                            "range": [
                                1047,
                                1049
                            ],
                            "children": [],
                            "content": "\n\n\n"
                        }
                    ],
                    "content": ":dict\n\n\nclass"
                },
                {
                    "type": "VariableDecl",
                    "name": "Model",
                    "range": [
                        1053,
                        1055
                    ],
                    "children": [
                        {
                            "type": "AssignmentExpression",
                            "name": "=",
                            "range": [
                                1054,
                                1054
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "WebhookEvent",
                                    "range": [
                                        1055,
                                        1055
                                    ],
                                    "children": [],
                                    "content": "WebhookEvent"
                                }
                            ],
                            "content": "["
                        }
                    ],
                    "content": "AsyncRedisEventBus[WebhookEvent"
                }
            ],
            "content": "\npayload:dict\n\n\nclass WebhookEventBus(AsyncRedisEventBus[WebhookEvent]"
        },
        {
            "type": "FunctionDecl",
            "name": "event_bus_name",
            "range": [
                1058,
                1073
            ],
            "children": [
                {
                    "type": "ReturnType",
                    "name": "str",
                    "range": [
                        1067,
                        1068
                    ],
                    "children": [],
                    "content": "\ndef"
                },
                {
                    "type": "ReturnStatement",
                    "name": "",
                    "range": [
                        1071,
                        1072
                    ],
                    "children": [
                        {
                            "type": "Literal",
                            "name": "\"webhooks\"",
                            "range": [
                                1072,
                                1072
                            ],
                            "children": [],
                            "content": ")"
                        }
                    ],
                    "content": "self)"
                }
            ],
            "content": ":\nModel=WebhookEvent\n\n@property\ndef event_bus_name(self)-"
        },
        {
            "type": "AssignmentExpression",
            "name": "=",
            "range": [
                1077,
                1080
            ],
            "children": [
                {
                    "type": "Identifier",
                    "name": "_webhook_event_bus",
                    "range": [
                        1076,
                        1076
                    ],
                    "children": [],
                    "content": ":"
                },
                {
                    "type": "CallExpression",
                    "name": "WebhookEventBus",
                    "range": [
                        1078,
                        1080
                    ],
                    "children": [],
                    "content": "return \"webhooks\"\n"
                }
            ],
            "content": "\nreturn \"webhooks\"\n"
        },
        {
            "type": "FunctionDecl",
            "name": "publish_webhook_event",
            "range": [
                1084,
                1107
            ],
            "children": [
                {
                    "type": "Keyword",
                    "name": "async",
                    "range": [
                        1084,
                        1084
                    ],
                    "children": [],
                    "content": "="
                },
                {
                    "type": "Keyword",
                    "name": "def",
                    "range": [
                        1085,
                        1085
                    ],
                    "children": [],
                    "content": "WebhookEventBus"
                },
                {
                    "type": "Identifier",
                    "name": "publish_webhook_event",
                    "range": [
                        1086,
                        1086
                    ],
                    "children": [],
                    "content": "("
                },
                {
                    "type": "Identifier",
                    "name": "event",
                    "range": [
                        1088,
                        1088
                    ],
                    "children": [],
                    "content": "\n"
                },
                {
                    "type": "Identifier",
                    "name": "WebhookEvent",
                    "range": [
                        1090,
                        1090
                    ],
                    "children": [],
                    "content": "\n"
                },
                {
                    "type": "Keyword",
                    "name": "await",
                    "range": [
                        1094,
                        1094
                    ],
                    "children": [],
                    "content": "("
                },
                {
                    "type": "Identifier",
                    "name": "_webhook_event_bus",
                    "range": [
                        1095,
                        1095
                    ],
                    "children": [],
                    "content": "event"
                },
                {
                    "type": "CallExpression",
                    "name": "publish_event",
                    "range": [
                        1097,
                        1097
                    ],
                    "children": [
                        {
                            "type": "Identifier",
                            "name": "event",
                            "range": [
                                1100,
                                1100
                            ],
                            "children": [],
                            "content": "\n"
                        },
                        {
                            "type": "Literal",
                            "name": "\"{event.webhook_id}/{event.event_type}\"",
                            "range": [
                                1103,
                                1103
                            ],
                            "children": [],
                            "content": "."
                        }
                    ],
                    "content": "WebhookEvent"
                }
            ],
            "content": "=WebhookEventBus()\n\n\nasync def publish_webhook_event(event:WebhookEvent):\nawait _webhook_event_bus.publish_event(\nevent"
        },
        {
            "type": "FunctionDecl",
            "name": "listen_for_webhook_events",
            "range": [
                1108,
                1155
            ],
            "children": [
                {
                    "type": "AsyncKeyword",
                    "name": "async",
                    "range": [
                        1108,
                        1112
                    ],
                    "children": [],
                    "content": ",f \"{event.webhook_id}/{event.event_type}\"\n)"
                },
                {
                    "type": "DefKeyword",
                    "name": "def",
                    "range": [
                        1109,
                        1112
                    ],
                    "children": [],
                    "content": "f \"{event.webhook_id}/{event.event_type}\"\n)"
                },
                {
                    "type": "FunctionName",
                    "name": "listen_for_webhook_events",
                    "range": [
                        1110,
                        1135
                    ],
                    "children": [],
                    "content": "\"{event.webhook_id}/{event.event_type}\"\n)\n\n\nasync def listen_for_webhook_events(\nwebhook_id:str,event_type:Optional[str]=None\n)-"
                },
                {
                    "type": "ParameterList",
                    "name": "",
                    "range": [
                        1111,
                        1126
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "webhook_id",
                            "range": [
                                1113,
                                1115
                            ],
                            "children": [],
                            "content": "\n\n\n"
                        },
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                1115,
                                1118
                            ],
                            "children": [],
                            "content": "\nasync def listen_for_webhook_events"
                        },
                        {
                            "type": "Parameter",
                            "name": "event_type",
                            "range": [
                                1117,
                                1124
                            ],
                            "children": [],
                            "content": "def listen_for_webhook_events(\nwebhook_id:str,"
                        },
                        {
                            "type": "TypeAnnotation",
                            "name": "Optional[str]",
                            "range": [
                                1118,
                                1124
                            ],
                            "children": [],
                            "content": "listen_for_webhook_events(\nwebhook_id:str,"
                        }
                    ],
                    "content": "\n)\n\n\nasync def listen_for_webhook_events(\nwebhook_id:str,event_type:"
                },
                {
                    "type": "ReturnType",
                    "name": "AsyncGenerator[WebhookEvent, None]",
                    "range": [
                        1127,
                        1135
                    ],
                    "children": [],
                    "content": "Optional[str]=None\n)-"
                },
                {
                    "type": "FunctionBody",
                    "name": "",
                    "range": [
                        1136,
                        1155
                    ],
                    "children": [
                        {
                            "type": "AsyncForStatement",
                            "name": "",
                            "range": [
                                1137,
                                1154
                            ],
                            "children": [
                                {
                                    "type": "ForKeyword",
                                    "name": "for",
                                    "range": [
                                        1138,
                                        1141
                                    ],
                                    "children": [],
                                    "content": "[WebhookEvent,None"
                                },
                                {
                                    "type": "VariableDecl",
                                    "name": "event",
                                    "range": [
                                        1139,
                                        1141
                                    ],
                                    "children": [],
                                    "content": "WebhookEvent,None"
                                },
                                {
                                    "type": "InKeyword",
                                    "name": "in",
                                    "range": [
                                        1140,
                                        1141
                                    ],
                                    "children": [],
                                    "content": ",None"
                                },
                                {
                                    "type": "CallExpression",
                                    "name": "_webhook_event_bus.listen_events",
                                    "range": [
                                        1141,
                                        1149
                                    ],
                                    "children": [],
                                    "content": "None]:\nasync for event in _webhook_event_bus"
                                },
                                {
                                    "type": "Block",
                                    "name": "",
                                    "range": [
                                        1150,
                                        1154
                                    ],
                                    "children": [
                                        {
                                            "type": "YieldStatement",
                                            "name": "yield event",
                                            "range": [
                                                1152,
                                                1153
                                            ],
                                            "children": [],
                                            "content": "(\n"
                                        }
                                    ],
                                    "content": ".listen_events(\nf"
                                }
                            ],
                            "content": "AsyncGenerator[WebhookEvent,None]:\nasync for event in _webhook_event_bus.listen_events(\nf"
                        }
                    ],
                    "content": ">AsyncGenerator[WebhookEvent,None]:\nasync for event in _webhook_event_bus.listen_events(\nf \"{webhook_id}/{event_type or '*'}\""
                }
            ],
            "content": ",f \"{event.webhook_id}/{event.event_type}\"\n)\n\n\nasync def listen_for_webhook_events(\nwebhook_id:str,event_type:Optional[str]=None\n)->AsyncGenerator[WebhookEvent,None]:\nasync for event in _webhook_event_bus.listen_events(\nf \"{webhook_id}/{event_type or '*'}\""
        },
        {
            "type": "FunctionDecl",
            "name": "wait_for_webhook_event",
            "range": [
                1156,
                1205
            ],
            "children": [
                {
                    "type": "Keyword",
                    "name": "async",
                    "range": [
                        1156,
                        1156
                    ],
                    "children": [],
                    "content": "\n"
                },
                {
                    "type": "Keyword",
                    "name": "def",
                    "range": [
                        1157,
                        1157
                    ],
                    "children": [],
                    "content": ")"
                },
                {
                    "type": "Identifier",
                    "name": "wait_for_webhook_event",
                    "range": [
                        1158,
                        1158
                    ],
                    "children": [],
                    "content": ":"
                },
                {
                    "type": "Parameter",
                    "name": "webhook_id",
                    "range": [
                        1161,
                        1163
                    ],
                    "children": [
                        {
                            "type": "Identifier",
                            "name": "webhook_id",
                            "range": [
                                1161,
                                1161
                            ],
                            "children": [],
                            "content": "event"
                        },
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                1163,
                                1163
                            ],
                            "children": [],
                            "content": "\n"
                        }
                    ],
                    "content": "event\n\n"
                },
                {
                    "type": "Parameter",
                    "name": "event_type",
                    "range": [
                        1165,
                        1172
                    ],
                    "children": [
                        {
                            "type": "Identifier",
                            "name": "event_type",
                            "range": [
                                1165,
                                1165
                            ],
                            "children": [],
                            "content": "async"
                        },
                        {
                            "type": "TypeAnnotation",
                            "name": "Optional[str]",
                            "range": [
                                1167,
                                1170
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "Optional",
                                    "range": [
                                        1167,
                                        1167
                                    ],
                                    "children": [],
                                    "content": "wait_for_webhook_event"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "str",
                                    "range": [
                                        1169,
                                        1169
                                    ],
                                    "children": [],
                                    "content": "\n"
                                }
                            ],
                            "content": "wait_for_webhook_event(\nwebhook_id"
                        },
                        {
                            "type": "Identifier",
                            "name": "None",
                            "range": [
                                1172,
                                1172
                            ],
                            "children": [],
                            "content": "str"
                        }
                    ],
                    "content": "async def wait_for_webhook_event(\nwebhook_id:str"
                },
                {
                    "type": "Parameter",
                    "name": "timeout",
                    "range": [
                        1174,
                        1181
                    ],
                    "children": [
                        {
                            "type": "Identifier",
                            "name": "timeout",
                            "range": [
                                1174,
                                1174
                            ],
                            "children": [],
                            "content": "event_type"
                        },
                        {
                            "type": "TypeAnnotation",
                            "name": "Optional[float]",
                            "range": [
                                1176,
                                1179
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "Optional",
                                    "range": [
                                        1176,
                                        1176
                                    ],
                                    "children": [],
                                    "content": "Optional"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "float",
                                    "range": [
                                        1178,
                                        1178
                                    ],
                                    "children": [],
                                    "content": "str"
                                }
                            ],
                            "content": "Optional[str]"
                        },
                        {
                            "type": "Identifier",
                            "name": "None",
                            "range": [
                                1181,
                                1181
                            ],
                            "children": [],
                            "content": "None"
                        }
                    ],
                    "content": "event_type:Optional[str]=None"
                },
                {
                    "type": "ReturnType",
                    "name": "->",
                    "range": [
                        1184,
                        1185
                    ],
                    "children": [],
                    "content": ":Optional"
                },
                {
                    "type": "TypeAnnotation",
                    "name": "WebhookEvent | None",
                    "range": [
                        1186,
                        1188
                    ],
                    "children": [
                        {
                            "type": "Identifier",
                            "name": "WebhookEvent",
                            "range": [
                                1186,
                                1186
                            ],
                            "children": [],
                            "content": "["
                        },
                        {
                            "type": "Identifier",
                            "name": "None",
                            "range": [
                                1188,
                                1188
                            ],
                            "children": [],
                            "content": "]"
                        }
                    ],
                    "content": "[float]"
                },
                {
                    "type": "Block",
                    "name": "",
                    "range": [
                        1190,
                        1205
                    ],
                    "children": [
                        {
                            "type": "Keyword",
                            "name": "return",
                            "range": [
                                1191,
                                1191
                            ],
                            "children": [],
                            "content": "\n"
                        },
                        {
                            "type": "Keyword",
                            "name": "await",
                            "range": [
                                1192,
                                1192
                            ],
                            "children": [],
                            "content": ")"
                        },
                        {
                            "type": "CallExpression",
                            "name": "_webhook_event_bus.wait_for_event",
                            "range": [
                                1193,
                                1203
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "_webhook_event_bus",
                                    "range": [
                                        1193,
                                        1193
                                    ],
                                    "children": [],
                                    "content": "-"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "wait_for_event",
                                    "range": [
                                        1195,
                                        1195
                                    ],
                                    "children": [],
                                    "content": "WebhookEvent"
                                },
                                {
                                    "type": "Literal",
                                    "name": "f\"{webhook_id}/{event_type or '*'}\"",
                                    "range": [
                                        1198,
                                        1199
                                    ],
                                    "children": [],
                                    "content": ":\n"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "timeout",
                                    "range": [
                                        1201,
                                        1201
                                    ],
                                    "children": [],
                                    "content": "await"
                                }
                            ],
                            "content": "->WebhookEvent|None:\nreturn await _webhook_event_bus."
                        }
                    ],
                    "content": "None\n)->WebhookEvent|None:\nreturn await _webhook_event_bus.wait_for_event("
                }
            ],
            "content": "\n):\nyield event\n\n\nasync def wait_for_webhook_event(\nwebhook_id:str,event_type:Optional[str]=None,timeout:Optional[float]=None\n)->WebhookEvent|None:\nreturn await _webhook_event_bus.wait_for_event("
        }
    ],
    "content": "import logging\nfrom typing import TYPE_CHECKING,AsyncGenerator,Optional\n\nfrom prisma import Json\nfrom prisma.models import IntegrationWebhook\nfrom pydantic import Field,computed_field\n\nfrom backend.data.includes import INTEGRATION_WEBHOOK_INCLUDE\nfrom backend.data.queue import AsyncRedisEventBus\nfrom backend.integrations.providers import ProviderName\nfrom backend.integrations.webhooks.utils import webhook_ingress_url\n\nfrom.db import BaseDbModel\n\nif TYPE_CHECKING:\nfrom.graph import NodeModel\n\nlogger=logging.getLogger(__name__)\n\n\nclass Webhook(BaseDbModel):\nuser_id:str\nprovider:ProviderName\ncredentials_id:str\nwebhook_type:str\nresource:str\nevents:list[str]\nconfig:dict=Field(default_factory=dict)\nsecret:str\n\nprovider_webhook_id:str\n\nattached_nodes:Optional[list[\"NodeModel\"]]=None\n\n@computed_field\n@property\ndef url(self)->str:\nreturn webhook_ingress_url(self.provider.value,self.id)\n\n@staticmethod\ndef from_db(webhook:IntegrationWebhook):\nfrom.graph import NodeModel\n\nreturn Webhook(\nid=webhook.id,\nuser_id=webhook.userId,\nprovider=ProviderName(webhook.provider),\ncredentials_id=webhook.credentialsId,\nwebhook_type=webhook.webhookType,\nresource=webhook.resource,\nevents=webhook.events,\nconfig=dict(webhook.config),\nsecret=webhook.secret,\nprovider_webhook_id=webhook.providerWebhookId,\nattached_nodes=(\n[NodeModel.from_db(node)for node in webhook.AgentNodes]\nif webhook.AgentNodes is not None\nelse None\n),\n)\n\n\n#---------------------CRUD functions---------------------#\n\n\nasync def create_webhook(webhook:Webhook)->Webhook:\ncreated_webhook=await IntegrationWebhook.prisma().create(\ndata={\n\"id\":webhook.id,\n\"userId\":webhook.user_id,\n\"provider\":webhook.provider.value,\n\"credentialsId\":webhook.credentials_id,\n\"webhookType\":webhook.webhook_type,\n\"resource\":webhook.resource,\n\"events\":webhook.events,\n\"config\":Json(webhook.config),\n\"secret\":webhook.secret,\n\"providerWebhookId\":webhook.provider_webhook_id,\n}\n)\nreturn Webhook.from_db(created_webhook)\n\n\nasync def get_webhook(webhook_id:str)->Webhook:\n\"\"\"⚠️ No `user_id` check: DO NOT USE without check in user-facing endpoints.\"\"\"\nwebhook=await IntegrationWebhook.prisma().find_unique_or_raise(\nwhere={\"id\":webhook_id},\ninclude=INTEGRATION_WEBHOOK_INCLUDE,\n)\nreturn Webhook.from_db(webhook)\n\n\nasync def get_all_webhooks_by_creds(credentials_id:str)->list[Webhook]:\n\"\"\"⚠️ No `user_id` check: DO NOT USE without check in user-facing endpoints.\"\"\"\nif not credentials_id:\nraise ValueError(\"credentials_id must not be empty\")\nwebhooks=await IntegrationWebhook.prisma().find_many(\nwhere={\"credentialsId\":credentials_id},\ninclude=INTEGRATION_WEBHOOK_INCLUDE,\n)\nreturn[Webhook.from_db(webhook)for webhook in webhooks]\n\n\nasync def find_webhook_by_credentials_and_props(\ncredentials_id:str,webhook_type:str,resource:str,events:list[str]\n)->Webhook|None:\n\"\"\"⚠️ No `user_id` check: DO NOT USE without check in user-facing endpoints.\"\"\"\nwebhook=await IntegrationWebhook.prisma().find_first(\nwhere={\n\"credentialsId\":credentials_id,\n\"webhookType\":webhook_type,\n\"resource\":resource,\n\"events\":{\"has_every\":events},\n},\ninclude=INTEGRATION_WEBHOOK_INCLUDE,\n)\nreturn Webhook.from_db(webhook)if webhook else None\n\n\nasync def find_webhook_by_graph_and_props(\ngraph_id:str,provider:str,webhook_type:str,events:list[str]\n)->Webhook|None:\n\"\"\"⚠️ No `user_id` check: DO NOT USE without check in user-facing endpoints.\"\"\"\nwebhook=await IntegrationWebhook.prisma().find_first(\nwhere={\n\"provider\":provider,\n\"webhookType\":webhook_type,\n\"events\":{\"has_every\":events},\n\"AgentNodes\":{\"some\":{\"agentGraphId\":graph_id}},\n},\ninclude=INTEGRATION_WEBHOOK_INCLUDE,\n)\nreturn Webhook.from_db(webhook)if webhook else None\n\n\nasync def update_webhook_config(webhook_id:str,updated_config:dict)->Webhook:\n\"\"\"⚠️ No `user_id` check: DO NOT USE without check in user-facing endpoints.\"\"\"\n_updated_webhook=await IntegrationWebhook.prisma().update(\nwhere={\"id\":webhook_id},\ndata={\"config\":Json(updated_config)},\ninclude=INTEGRATION_WEBHOOK_INCLUDE,\n)\nif _updated_webhook is None:\nraise ValueError(f \"Webhook #{webhook_id} not found\")\nreturn Webhook.from_db(_updated_webhook)\n\n\nasync def delete_webhook(webhook_id:str)->None:\n\"\"\"⚠️ No `user_id` check: DO NOT USE without check in user-facing endpoints.\"\"\"\ndeleted=await IntegrationWebhook.prisma().delete(where={\"id\":webhook_id})\nif not deleted:\nraise ValueError(f \"Webhook #{webhook_id} not found\")\n\n\n#---------------------WEBHOOK EVENTS---------------------#\n\n\nclass WebhookEvent(BaseDbModel):\nprovider:str\nwebhook_id:str\nevent_type:str\npayload:dict\n\n\nclass WebhookEventBus(AsyncRedisEventBus[WebhookEvent]):\nModel=WebhookEvent\n\n@property\ndef event_bus_name(self)->str:\nreturn \"webhooks\"\n\n\n_webhook_event_bus=WebhookEventBus()\n\n\nasync def publish_webhook_event(event:WebhookEvent):\nawait _webhook_event_bus.publish_event(\nevent,f \"{event.webhook_id}/{event.event_type}\"\n)\n\n\nasync def listen_for_webhook_events(\nwebhook_id:str,event_type:Optional[str]=None\n)->AsyncGenerator[WebhookEvent,None]:\nasync for event in _webhook_event_bus.listen_events(\nf \"{webhook_id}/{event_type or '*'}\"\n):\nyield event\n\n\nasync def wait_for_webhook_event(\nwebhook_id:str,event_type:Optional[str]=None,timeout:Optional[float]=None\n)->WebhookEvent|None:\nreturn await _webhook_event_bus.wait_for_event("
}