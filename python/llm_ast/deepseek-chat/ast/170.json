{
    "type": "Program",
    "name": "Global",
    "range": [
        0,
        251
    ],
    "children": [
        {
            "type": "Comment",
            "name": "",
            "range": [
                0,
                12
            ],
            "children": [
                {
                    "type": "Literal",
                    "name": "#",
                    "range": [
                        0,
                        1
                    ],
                    "children": [],
                    "content": "#-"
                },
                {
                    "type": "Literal",
                    "name": "coding",
                    "range": [
                        4,
                        5
                    ],
                    "children": [],
                    "content": "coding:"
                },
                {
                    "type": "Literal",
                    "name": ":",
                    "range": [
                        5,
                        6
                    ],
                    "children": [],
                    "content": ":utf"
                },
                {
                    "type": "Literal",
                    "name": "utf",
                    "range": [
                        6,
                        7
                    ],
                    "children": [],
                    "content": "utf-"
                },
                {
                    "type": "Literal",
                    "name": "8",
                    "range": [
                        8,
                        9
                    ],
                    "children": [],
                    "content": "8-"
                }
            ],
            "content": "#-*-coding:utf-8-*-\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "",
            "range": [
                14,
                20
            ],
            "children": [
                {
                    "type": "Literal",
                    "name": "from",
                    "range": [
                        14,
                        15
                    ],
                    "children": [],
                    "content": "from mrjob"
                },
                {
                    "type": "Identifier",
                    "name": "mrjob",
                    "range": [
                        15,
                        16
                    ],
                    "children": [],
                    "content": "mrjob."
                },
                {
                    "type": "Identifier",
                    "name": "job",
                    "range": [
                        17,
                        18
                    ],
                    "children": [],
                    "content": "job import"
                },
                {
                    "type": "Literal",
                    "name": "import",
                    "range": [
                        18,
                        19
                    ],
                    "children": [],
                    "content": "import MRJob"
                },
                {
                    "type": "Identifier",
                    "name": "MRJob",
                    "range": [
                        19,
                        20
                    ],
                    "children": [],
                    "content": "MRJob\n"
                }
            ],
            "content": "from mrjob.job import MRJob\n"
        },
        {
            "type": "FunctionDecl",
            "name": "__init__",
            "range": [
                31,
                45
            ],
            "children": [
                {
                    "type": "ParameterList",
                    "name": "parameters",
                    "range": [
                        33,
                        37
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "self",
                            "range": [
                                34,
                                34
                            ],
                            "children": [],
                            "content": "self"
                        },
                        {
                            "type": "Parameter",
                            "name": "categorizer",
                            "range": [
                                36,
                                36
                            ],
                            "children": [],
                            "content": "categorizer"
                        }
                    ],
                    "content": "(self,categorizer)"
                },
                {
                    "type": "BlockStatement",
                    "name": "body",
                    "range": [
                        38,
                        45
                    ],
                    "children": [
                        {
                            "type": "ExpressionStatement",
                            "name": "assignment",
                            "range": [
                                40,
                                44
                            ],
                            "children": [
                                {
                                    "type": "AssignmentExpression",
                                    "name": "=",
                                    "range": [
                                        43,
                                        43
                                    ],
                                    "children": [
                                        {
                                            "type": "MemberExpression",
                                            "name": "self.categorizer",
                                            "range": [
                                                40,
                                                42
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "self",
                                                    "range": [
                                                        40,
                                                        40
                                                    ],
                                                    "children": [],
                                                    "content": "self"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "categorizer",
                                                    "range": [
                                                        42,
                                                        42
                                                    ],
                                                    "children": [],
                                                    "content": "categorizer"
                                                }
                                            ],
                                            "content": "self.categorizer"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "categorizer",
                                            "range": [
                                                44,
                                                44
                                            ],
                                            "children": [],
                                            "content": "categorizer"
                                        }
                                    ],
                                    "content": "="
                                }
                            ],
                            "content": "self.categorizer=categorizer"
                        }
                    ],
                    "content": ":\nself.categorizer=categorizer\n"
                }
            ],
            "content": "def __init__(self,categorizer):\nself.categorizer=categorizer\n"
        },
        {
            "type": "FunctionDecl",
            "name": "current_year_month",
            "range": [
                51,
                65
            ],
            "children": [
                {
                    "type": "ParameterList",
                    "name": "parameters",
                    "range": [
                        53,
                        55
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "self",
                            "range": [
                                54,
                                54
                            ],
                            "children": [],
                            "content": "self"
                        }
                    ],
                    "content": "(self)"
                },
                {
                    "type": "BlockStatement",
                    "name": "body",
                    "range": [
                        56,
                        65
                    ],
                    "children": [
                        {
                            "type": "ReturnStatement",
                            "name": "return",
                            "range": [
                                58,
                                60
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "\"Return the current year and month.\"",
                                    "range": [
                                        59,
                                        59
                                    ],
                                    "children": [],
                                    "content": "\"Return the current year and month.\""
                                }
                            ],
                            "content": "\"\"\"Return the current year and month.\"\"\""
                        }
                    ],
                    "content": ":\n\"\"\"Return the current year and month.\"\"\"\n...\n"
                }
            ],
            "content": "def current_year_month(self):\n\"\"\"Return the current year and month.\"\"\"\n...\n"
        },
        {
            "type": "FunctionDecl",
            "name": "extract_year_month",
            "range": [
                67,
                83
            ],
            "children": [
                {
                    "type": "ParameterList",
                    "name": "parameters",
                    "range": [
                        69,
                        73
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "self",
                            "range": [
                                70,
                                70
                            ],
                            "children": [],
                            "content": "self"
                        },
                        {
                            "type": "Parameter",
                            "name": "timestamp",
                            "range": [
                                72,
                                72
                            ],
                            "children": [],
                            "content": "timestamp"
                        }
                    ],
                    "content": "(self,timestamp)"
                },
                {
                    "type": "BlockStatement",
                    "name": "body",
                    "range": [
                        74,
                        83
                    ],
                    "children": [
                        {
                            "type": "ReturnStatement",
                            "name": "return",
                            "range": [
                                76,
                                78
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "\"Return the year and month portions of the timestamp.\"",
                                    "range": [
                                        77,
                                        77
                                    ],
                                    "children": [],
                                    "content": "\"Return the year and month portions of the timestamp.\""
                                }
                            ],
                            "content": "\"\"\"Return the year and month portions of the timestamp.\"\"\""
                        }
                    ],
                    "content": ":\n\"\"\"Return the year and month portions of the timestamp.\"\"\"\n...\n"
                }
            ],
            "content": "def extract_year_month(self,timestamp):\n\"\"\"Return the year and month portions of the timestamp.\"\"\"\n...\n"
        },
        {
            "type": "FunctionDecl",
            "name": "handle_budget_notifications",
            "range": [
                85,
                103
            ],
            "children": [
                {
                    "type": "ParameterList",
                    "name": "parameters",
                    "range": [
                        87,
                        93
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "self",
                            "range": [
                                88,
                                88
                            ],
                            "children": [],
                            "content": "self"
                        },
                        {
                            "type": "Parameter",
                            "name": "key",
                            "range": [
                                90,
                                90
                            ],
                            "children": [],
                            "content": "key"
                        },
                        {
                            "type": "Parameter",
                            "name": "total",
                            "range": [
                                92,
                                92
                            ],
                            "children": [],
                            "content": "total"
                        }
                    ],
                    "content": "(self,key,total)"
                },
                {
                    "type": "BlockStatement",
                    "name": "body",
                    "range": [
                        94,
                        103
                    ],
                    "children": [
                        {
                            "type": "ReturnStatement",
                            "name": "return",
                            "range": [
                                96,
                                98
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "\"Call notification API if nearing or exceeded budget.\"",
                                    "range": [
                                        97,
                                        97
                                    ],
                                    "children": [],
                                    "content": "\"Call notification API if nearing or exceeded budget.\""
                                }
                            ],
                            "content": "\"\"\"Call notification API if nearing or exceeded budget.\"\"\""
                        }
                    ],
                    "content": ":\n\"\"\"Call notification API if nearing or exceeded budget.\"\"\"\n...\n"
                }
            ],
            "content": "def handle_budget_notifications(self,key,total):\n\"\"\"Call notification API if nearing or exceeded budget.\"\"\"\n...\n"
        },
        {
            "type": "FunctionDecl",
            "name": "mapper",
            "range": [
                105,
                162
            ],
            "children": [
                {
                    "type": "ParameterList",
                    "name": "parameters",
                    "range": [
                        107,
                        113
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "self",
                            "range": [
                                108,
                                108
                            ],
                            "children": [],
                            "content": "self"
                        },
                        {
                            "type": "Parameter",
                            "name": "_",
                            "range": [
                                110,
                                110
                            ],
                            "children": [],
                            "content": "_"
                        },
                        {
                            "type": "Parameter",
                            "name": "line",
                            "range": [
                                112,
                                112
                            ],
                            "children": [],
                            "content": "line"
                        }
                    ],
                    "content": "(self,_,line)"
                },
                {
                    "type": "BlockStatement",
                    "name": "body",
                    "range": [
                        114,
                        162
                    ],
                    "children": [
                        {
                            "type": "VariableDeclaration",
                            "name": "timestamp, category, amount",
                            "range": [
                                120,
                                131
                            ],
                            "children": [
                                {
                                    "type": "VariableDeclarator",
                                    "name": "timestamp",
                                    "range": [
                                        120,
                                        120
                                    ],
                                    "children": [],
                                    "content": "timestamp"
                                },
                                {
                                    "type": "VariableDeclarator",
                                    "name": "category",
                                    "range": [
                                        122,
                                        122
                                    ],
                                    "children": [],
                                    "content": "category"
                                },
                                {
                                    "type": "VariableDeclarator",
                                    "name": "amount",
                                    "range": [
                                        124,
                                        124
                                    ],
                                    "children": [],
                                    "content": "amount"
                                },
                                {
                                    "type": "AssignmentExpression",
                                    "name": "=",
                                    "range": [
                                        125,
                                        125
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "line.split",
                                            "range": [
                                                126,
                                                131
                                            ],
                                            "children": [
                                                {
                                                    "type": "MemberExpression",
                                                    "name": "line.split",
                                                    "range": [
                                                        126,
                                                        128
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "line",
                                                            "range": [
                                                                126,
                                                                126
                                                            ],
                                                            "children": [],
                                                            "content": "line"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "split",
                                                            "range": [
                                                                128,
                                                                128
                                                            ],
                                                            "children": [],
                                                            "content": "split"
                                                        }
                                                    ],
                                                    "content": "line.split"
                                                },
                                                {
                                                    "type": "Literal",
                                                    "name": "'\\t'",
                                                    "range": [
                                                        130,
                                                        130
                                                    ],
                                                    "children": [],
                                                    "content": "'\\t'"
                                                }
                                            ],
                                            "content": "line.split('\\t')"
                                        }
                                    ],
                                    "content": "="
                                }
                            ],
                            "content": "timestamp,category,amount=line.split('\\t')"
                        },
                        {
                            "type": "VariableDeclaration",
                            "name": "period",
                            "range": [
                                133,
                                141
                            ],
                            "children": [
                                {
                                    "type": "VariableDeclarator",
                                    "name": "period",
                                    "range": [
                                        133,
                                        133
                                    ],
                                    "children": [],
                                    "content": "period"
                                },
                                {
                                    "type": "AssignmentExpression",
                                    "name": "=",
                                    "range": [
                                        134,
                                        134
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "self.extract_year_month",
                                            "range": [
                                                135,
                                                141
                                            ],
                                            "children": [
                                                {
                                                    "type": "MemberExpression",
                                                    "name": "self.extract_year_month",
                                                    "range": [
                                                        135,
                                                        137
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "self",
                                                            "range": [
                                                                135,
                                                                135
                                                            ],
                                                            "children": [],
                                                            "content": "self"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "extract_year_month",
                                                            "range": [
                                                                137,
                                                                137
                                                            ],
                                                            "children": [],
                                                            "content": "extract_year_month"
                                                        }
                                                    ],
                                                    "content": "self.extract_year_month"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "timestamp",
                                                    "range": [
                                                        139,
                                                        139
                                                    ],
                                                    "children": [],
                                                    "content": "timestamp"
                                                }
                                            ],
                                            "content": "self.extract_year_month(timestamp)\n"
                                        }
                                    ],
                                    "content": "="
                                }
                            ],
                            "content": "period=self.extract_year_month(timestamp)\n"
                        },
                        {
                            "type": "IfStatement",
                            "name": "if",
                            "range": [
                                142,
                                161
                            ],
                            "children": [
                                {
                                    "type": "BinaryExpression",
                                    "name": "==",
                                    "range": [
                                        143,
                                        145
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "period",
                                            "range": [
                                                143,
                                                143
                                            ],
                                            "children": [],
                                            "content": "period"
                                        },
                                        {
                                            "type": "CallExpression",
                                            "name": "self.current_year_month",
                                            "range": [
                                                146,
                                                150
                                            ],
                                            "children": [
                                                {
                                                    "type": "MemberExpression",
                                                    "name": "self.current_year_month",
                                                    "range": [
                                                        146,
                                                        148
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "self",
                                                            "range": [
                                                                146,
                                                                146
                                                            ],
                                                            "children": [],
                                                            "content": "self"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "current_year_month",
                                                            "range": [
                                                                148,
                                                                148
                                                            ],
                                                            "children": [],
                                                            "content": "current_year_month"
                                                        }
                                                    ],
                                                    "content": "self.current_year_month"
                                                }
                                            ],
                                            "content": "self.current_year_month()"
                                        }
                                    ],
                                    "content": "period=="
                                },
                                {
                                    "type": "BlockStatement",
                                    "name": "consequent",
                                    "range": [
                                        151,
                                        161
                                    ],
                                    "children": [
                                        {
                                            "type": "YieldExpression",
                                            "name": "yield",
                                            "range": [
                                                153,
                                                160
                                            ],
                                            "children": [
                                                {
                                                    "type": "SequenceExpression",
                                                    "name": ",",
                                                    "range": [
                                                        154,
                                                        158
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "period",
                                                            "range": [
                                                                155,
                                                                155
                                                            ],
                                                            "children": [],
                                                            "content": "period"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "category",
                                                            "range": [
                                                                157,
                                                                157
                                                            ],
                                                            "children": [],
                                                            "content": "category"
                                                        }
                                                    ],
                                                    "content": "(period,category)"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "amount",
                                                    "range": [
                                                        160,
                                                        160
                                                    ],
                                                    "children": [],
                                                    "content": "amount"
                                                }
                                            ],
                                            "content": "yield(period,category),amount"
                                        }
                                    ],
                                    "content": ":\nyield(period,category),amount\n"
                                }
                            ],
                            "content": "if period==self.current_year_month():\nyield(period,category),amount\n"
                        }
                    ],
                    "content": ":\n\"\"\"Parse each log line, extract and transform relevant lines. \\n  \\n         Emit key value pairs of the form: \\n  \\n         (2016-01, shopping), 25 \\n         (2016-01, shopping), 100 \\n         (2016-01, gas), 50 \\n         \"\"\"\ntimestamp,category,amount=line.split('\\t')\nperiod=self.extract_year_month(timestamp)\nif period==self.current_year_month():\nyield(period,category),amount\n\n"
                }
            ],
            "content": "def mapper(self,_,line):\n\"\"\"Parse each log line, extract and transform relevant lines. \\n  \\n         Emit key value pairs of the form: \\n  \\n         (2016-01, shopping), 25 \\n         (2016-01, shopping), 100 \\n         (2016-01, gas), 50 \\n         \"\"\"\ntimestamp,category,amount=line.split('\\t')\nperiod=self.extract_year_month(timestamp)\nif period==self.current_year_month():\nyield(period,category),amount\n\n"
        },
        {
            "type": "FunctionDecl",
            "name": "reducer",
            "range": [
                163,
                202
            ],
            "children": [
                {
                    "type": "ParameterList",
                    "name": "parameters",
                    "range": [
                        165,
                        171
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "self",
                            "range": [
                                166,
                                166
                            ],
                            "children": [],
                            "content": "self"
                        },
                        {
                            "type": "Parameter",
                            "name": "key",
                            "range": [
                                168,
                                168
                            ],
                            "children": [],
                            "content": "key"
                        },
                        {
                            "type": "Parameter",
                            "name": "values",
                            "range": [
                                170,
                                170
                            ],
                            "children": [],
                            "content": "values"
                        }
                    ],
                    "content": "(self,key,values)"
                },
                {
                    "type": "BlockStatement",
                    "name": "body",
                    "range": [
                        172,
                        202
                    ],
                    "children": [
                        {
                            "type": "VariableDeclaration",
                            "name": "total",
                            "range": [
                                178,
                                184
                            ],
                            "children": [
                                {
                                    "type": "VariableDeclarator",
                                    "name": "total",
                                    "range": [
                                        178,
                                        178
                                    ],
                                    "children": [],
                                    "content": "total"
                                },
                                {
                                    "type": "AssignmentExpression",
                                    "name": "=",
                                    "range": [
                                        179,
                                        179
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "sum",
                                            "range": [
                                                180,
                                                184
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "values",
                                                    "range": [
                                                        182,
                                                        182
                                                    ],
                                                    "children": [],
                                                    "content": "values"
                                                }
                                            ],
                                            "content": "sum(values)\n"
                                        }
                                    ],
                                    "content": "="
                                }
                            ],
                            "content": "total=sum(values)\n"
                        },
                        {
                            "type": "ExpressionStatement",
                            "name": "call",
                            "range": [
                                185,
                                193
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "self.handle_budget_notifications",
                                    "range": [
                                        185,
                                        193
                                    ],
                                    "children": [
                                        {
                                            "type": "MemberExpression",
                                            "name": "self.handle_budget_notifications",
                                            "range": [
                                                185,
                                                187
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "self",
                                                    "range": [
                                                        185,
                                                        185
                                                    ],
                                                    "children": [],
                                                    "content": "self"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "handle_budget_notifications",
                                                    "range": [
                                                        187,
                                                        187
                                                    ],
                                                    "children": [],
                                                    "content": "handle_budget_notifications"
                                                }
                                            ],
                                            "content": "self.handle_budget_notifications"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "key",
                                            "range": [
                                                189,
                                                189
                                            ],
                                            "children": [],
                                            "content": "key"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "total",
                                            "range": [
                                                191,
                                                191
                                            ],
                                            "children": [],
                                            "content": "total"
                                        }
                                    ],
                                    "content": "self.handle_budget_notifications(key,total)\n"
                                }
                            ],
                            "content": "self.handle_budget_notifications(key,total)\n"
                        },
                        {
                            "type": "YieldExpression",
                            "name": "yield",
                            "range": [
                                194,
                                201
                            ],
                            "children": [
                                {
                                    "type": "SequenceExpression",
                                    "name": ",",
                                    "range": [
                                        195,
                                        197
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "key",
                                            "range": [
                                                195,
                                                195
                                            ],
                                            "children": [],
                                            "content": "key"
                                        },
                                        {
                                            "type": "CallExpression",
                                            "name": "sum",
                                            "range": [
                                                198,
                                                201
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "values",
                                                    "range": [
                                                        199,
                                                        199
                                                    ],
                                                    "children": [],
                                                    "content": "values"
                                                }
                                            ],
                                            "content": "(values)\n"
                                        }
                                    ],
                                    "content": "key,sum"
                                }
                            ],
                            "content": "yield key,sum(values)\n"
                        }
                    ],
                    "content": ":\n\"\"\"Sum values for each key. \\n  \\n         (2016-01, shopping), 125 \\n         (2016-01, gas), 50 \\n         \"\"\"\ntotal=sum(values)\nself.handle_budget_notifications(key,total)\nyield key,sum(values)\n\n"
                }
            ],
            "content": "def reducer(self,key,values):\n\"\"\"Sum values for each key. \\n  \\n         (2016-01, shopping), 125 \\n         (2016-01, gas), 50 \\n         \"\"\"\ntotal=sum(values)\nself.handle_budget_notifications(key,total)\nyield key,sum(values)\n\n"
        },
        {
            "type": "FunctionDecl",
            "name": "steps",
            "range": [
                203,
                237
            ],
            "children": [
                {
                    "type": "ParameterList",
                    "name": "parameters",
                    "range": [
                        205,
                        207
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "self",
                            "range": [
                                206,
                                206
                            ],
                            "children": [],
                            "content": "self"
                        }
                    ],
                    "content": "(self)"
                },
                {
                    "type": "BlockStatement",
                    "name": "body",
                    "range": [
                        208,
                        237
                    ],
                    "children": [
                        {
                            "type": "ReturnStatement",
                            "name": "return",
                            "range": [
                                214,
                                236
                            ],
                            "children": [
                                {
                                    "type": "ArrayExpression",
                                    "name": "[",
                                    "range": [
                                        215,
                                        235
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "self.mr",
                                            "range": [
                                                217,
                                                234
                                            ],
                                            "children": [
                                                {
                                                    "type": "MemberExpression",
                                                    "name": "self.mr",
                                                    "range": [
                                                        217,
                                                        219
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "self",
                                                            "range": [
                                                                217,
                                                                217
                                                            ],
                                                            "children": [],
                                                            "content": "self"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "mr",
                                                            "range": [
                                                                219,
                                                                219
                                                            ],
                                                            "children": [],
                                                            "content": "mr"
                                                        }
                                                    ],
                                                    "content": "self.mr"
                                                },
                                                {
                                                    "type": "ObjectExpression",
                                                    "name": "{",
                                                    "range": [
                                                        220,
                                                        233
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Property",
                                                            "name": "mapper",
                                                            "range": [
                                                                221,
                                                                226
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "mapper",
                                                                    "range": [
                                                                        221,
                                                                        221
                                                                    ],
                                                                    "children": [],
                                                                    "content": "mapper"
                                                                },
                                                                {
                                                                    "type": "MemberExpression",
                                                                    "name": "self.mapper",
                                                                    "range": [
                                                                        223,
                                                                        225
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "self",
                                                                            "range": [
                                                                                223,
                                                                                223
                                                                            ],
                                                                            "children": [],
                                                                            "content": "self"
                                                                        },
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "mapper",
                                                                            "range": [
                                                                                225,
                                                                                225
                                                                            ],
                                                                            "children": [],
                                                                            "content": "mapper"
                                                                        }
                                                                    ],
                                                                    "content": "self.mapper"
                                                                }
                                                            ],
                                                            "content": "mapper=self.mapper,"
                                                        },
                                                        {
                                                            "type": "Property",
                                                            "name": "reducer",
                                                            "range": [
                                                                228,
                                                                233
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "reducer",
                                                                    "range": [
                                                                        228,
                                                                        228
                                                                    ],
                                                                    "children": [],
                                                                    "content": "reducer"
                                                                },
                                                                {
                                                                    "type": "MemberExpression",
                                                                    "name": "self.reducer",
                                                                    "range": [
                                                                        230,
                                                                        232
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "self",
                                                                            "range": [
                                                                                230,
                                                                                230
                                                                            ],
                                                                            "children": [],
                                                                            "content": "self"
                                                                        },
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "reducer",
                                                                            "range": [
                                                                                232,
                                                                                232
                                                                            ],
                                                                            "children": [],
                                                                            "content": "reducer"
                                                                        }
                                                                    ],
                                                                    "content": "self.reducer"
                                                                }
                                                            ],
                                                            "content": "reducer=self.reducer)"
                                                        }
                                                    ],
                                                    "content": "(mapper=self.mapper,\nreducer=self.reducer)"
                                                }
                                            ],
                                            "content": "self.mr(mapper=self.mapper,\nreducer=self.reducer)\n"
                                        }
                                    ],
                                    "content": "[\nself.mr(mapper=self.mapper,\nreducer=self.reducer)\n]"
                                }
                            ],
                            "content": "return[\nself.mr(mapper=self.mapper,\nreducer=self.reducer)\n]\n"
                        }
                    ],
                    "content": ":\n\"\"\"Run the map and reduce steps.\"\"\"\nreturn[\nself.mr(mapper=self.mapper,\nreducer=self.reducer)\n]\n\n"
                }
            ],
            "content": "def steps(self):\n\"\"\"Run the map and reduce steps.\"\"\"\nreturn[\nself.mr(mapper=self.mapper,\nreducer=self.reducer)\n]\n\n"
        },
        {
            "type": "IfStatement",
            "name": "",
            "range": [
                238,
                250
            ],
            "children": [
                {
                    "type": "BinaryExpression",
                    "name": "",
                    "range": [
                        239,
                        242
                    ],
                    "children": [
                        {
                            "type": "Identifier",
                            "name": "__name__",
                            "range": [
                                239,
                                239
                            ],
                            "children": [],
                            "content": "if"
                        },
                        {
                            "type": "Literal",
                            "name": "'__main__'",
                            "range": [
                                242,
                                242
                            ],
                            "children": [],
                            "content": "="
                        }
                    ],
                    "content": "if __name__=="
                },
                {
                    "type": "BlockStatement",
                    "name": "",
                    "range": [
                        244,
                        250
                    ],
                    "children": [
                        {
                            "type": "ExpressionStatement",
                            "name": "",
                            "range": [
                                245,
                                249
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "",
                                    "range": [
                                        245,
                                        249
                                    ],
                                    "children": [
                                        {
                                            "type": "MemberExpression",
                                            "name": "",
                                            "range": [
                                                245,
                                                247
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "SpendingByCategory",
                                                    "range": [
                                                        245,
                                                        245
                                                    ],
                                                    "children": [],
                                                    "content": "\n"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "run",
                                                    "range": [
                                                        247,
                                                        247
                                                    ],
                                                    "children": [],
                                                    "content": "."
                                                }
                                            ],
                                            "content": "\nSpendingByCategory."
                                        }
                                    ],
                                    "content": "\nSpendingByCategory.run("
                                }
                            ],
                            "content": "\nSpendingByCategory.run("
                        }
                    ],
                    "content": ":\nSpendingByCategory.run()"
                }
            ],
            "content": "\nif __name__=='__main__':\nSpendingByCategory.run()"
        }
    ],
    "content": "#-*-coding:utf-8-*-\n\nfrom mrjob.job import MRJob\n\n\nclass SpendingByCategory(MRJob):\n\ndef __init__(self,categorizer):\nself.categorizer=categorizer\n...\n\ndef current_year_month(self):\n\"\"\"Return the current year and month.\"\"\"\n...\n\ndef extract_year_month(self,timestamp):\n\"\"\"Return the year and month portions of the timestamp.\"\"\"\n...\n\ndef handle_budget_notifications(self,key,total):\n\"\"\"Call notification API if nearing or exceeded budget.\"\"\"\n...\n\ndef mapper(self,_,line):\n\"\"\"Parse each log line, extract and transform relevant lines. \\n  \\n         Emit key value pairs of the form: \\n  \\n         (2016-01, shopping), 25 \\n         (2016-01, shopping), 100 \\n         (2016-01, gas), 50 \\n         \"\"\"\ntimestamp,category,amount=line.split('\\t')\nperiod=self.extract_year_month(timestamp)\nif period==self.current_year_month():\nyield(period,category),amount\n\ndef reducer(self,key,values):\n\"\"\"Sum values for each key. \\n  \\n         (2016-01, shopping), 125 \\n         (2016-01, gas), 50 \\n         \"\"\"\ntotal=sum(values)\nself.handle_budget_notifications(key,total)\nyield key,sum(values)\n\ndef steps(self):\n\"\"\"Run the map and reduce steps.\"\"\"\nreturn[\nself.mr(mapper=self.mapper,\nreducer=self.reducer)\n]\n\n\nif __name__=='__main__':\nSpendingByCategory.run()\n"
}