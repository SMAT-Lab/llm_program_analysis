{
    "type": "Program",
    "name": "Global",
    "range": [
        0,
        279
    ],
    "children": [
        {
            "type": "FunctionDecl",
            "name": "requires_user",
            "range": [
                26,
                54
            ],
            "children": [
                {
                    "type": "Parameter",
                    "name": "payload",
                    "range": [
                        29,
                        39
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "dict",
                            "range": [
                                31,
                                31
                            ],
                            "content": "dict"
                        },
                        {
                            "type": "DefaultValue",
                            "name": "fastapi.Depends(auth_middleware)",
                            "range": [
                                33,
                                38
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "Depends",
                                    "range": [
                                        35,
                                        38
                                    ],
                                    "children": [
                                        {
                                            "type": "Argument",
                                            "name": "auth_middleware",
                                            "range": [
                                                37,
                                                37
                                            ],
                                            "content": "auth_middleware"
                                        }
                                    ],
                                    "content": "Depends(auth_middleware)"
                                }
                            ],
                            "content": "fastapi.Depends(auth_middleware)"
                        }
                    ],
                    "content": "payload:dict=fastapi.Depends(auth_middleware))"
                },
                {
                    "type": "ReturnType",
                    "name": "User",
                    "range": [
                        42,
                        42
                    ],
                    "content": "User"
                },
                {
                    "type": "ReturnStatement",
                    "name": "verify_user",
                    "range": [
                        46,
                        53
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "verify_user",
                            "range": [
                                46,
                                53
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "payload",
                                    "range": [
                                        48,
                                        48
                                    ],
                                    "content": "payload"
                                },
                                {
                                    "type": "Argument",
                                    "name": "admin_only",
                                    "range": [
                                        50,
                                        52
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "name": "False",
                                            "range": [
                                                52,
                                                52
                                            ],
                                            "content": "False"
                                        }
                                    ],
                                    "content": "admin_only=False"
                                }
                            ],
                            "content": "verify_user(payload,admin_only=False)"
                        }
                    ],
                    "content": "verify_user(payload,admin_only=False)"
                }
            ],
            "content": "def requires_user(payload:dict=fastapi.Depends(auth_middleware))->User:\nreturn verify_user(payload,admin_only=False)\n"
        },
        {
            "type": "FunctionDecl",
            "name": "requires_admin_user",
            "range": [
                57,
                88
            ],
            "children": [
                {
                    "type": "Parameter",
                    "name": "payload",
                    "range": [
                        61,
                        70
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "dict",
                            "range": [
                                63,
                                63
                            ],
                            "children": [],
                            "content": "dict"
                        },
                        {
                            "type": "DefaultValue",
                            "name": "fastapi.Depends(auth_middleware)",
                            "range": [
                                65,
                                70
                            ],
                            "children": [],
                            "content": "fastapi.Depends(auth_middleware)"
                        }
                    ],
                    "content": "payload:dict=fastapi.Depends(auth_middleware)"
                },
                {
                    "type": "ReturnType",
                    "name": "User",
                    "range": [
                        76,
                        76
                    ],
                    "children": [],
                    "content": "User"
                },
                {
                    "type": "ReturnStatement",
                    "name": "return verify_user(payload, admin_only=True)",
                    "range": [
                        79,
                        87
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "verify_user",
                            "range": [
                                80,
                                87
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "payload",
                                    "range": [
                                        82,
                                        82
                                    ],
                                    "children": [],
                                    "content": "payload"
                                },
                                {
                                    "type": "KeywordArgument",
                                    "name": "admin_only=True",
                                    "range": [
                                        84,
                                        86
                                    ],
                                    "children": [],
                                    "content": "admin_only=True"
                                }
                            ],
                            "content": "verify_user(payload,admin_only=True)"
                        }
                    ],
                    "content": "return verify_user(payload,admin_only=True)"
                }
            ],
            "content": "def requires_admin_user(\npayload:dict=fastapi.Depends(auth_middleware),\n)->User:\nreturn verify_user(payload,admin_only=True)\n"
        },
        {
            "type": "FunctionDecl",
            "name": "verify_user",
            "range": [
                91,
                225
            ],
            "children": [
                {
                    "type": "ParameterList",
                    "name": "parameters",
                    "range": [
                        93,
                        103
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "payload",
                            "range": [
                                94,
                                98
                            ],
                            "children": [],
                            "content": "payload:dict|None"
                        },
                        {
                            "type": "Parameter",
                            "name": "admin_only",
                            "range": [
                                100,
                                102
                            ],
                            "children": [],
                            "content": "admin_only:bool"
                        }
                    ],
                    "content": "(payload:dict|None,admin_only:bool)"
                },
                {
                    "type": "ReturnType",
                    "name": "User",
                    "range": [
                        104,
                        106
                    ],
                    "children": [],
                    "content": "->User"
                },
                {
                    "type": "Block",
                    "name": "body",
                    "range": [
                        108,
                        225
                    ],
                    "children": [
                        {
                            "type": "IfStatement",
                            "name": "if_not_payload",
                            "range": [
                                109,
                                135
                            ],
                            "children": [
                                {
                                    "type": "Condition",
                                    "name": "not_payload",
                                    "range": [
                                        110,
                                        111
                                    ],
                                    "children": [],
                                    "content": "not payload"
                                },
                                {
                                    "type": "Block",
                                    "name": "then",
                                    "range": [
                                        113,
                                        135
                                    ],
                                    "children": [
                                        {
                                            "type": "IfStatement",
                                            "name": "if_ENABLE_AUTH",
                                            "range": [
                                                114,
                                                135
                                            ],
                                            "children": [
                                                {
                                                    "type": "Condition",
                                                    "name": "Settings.ENABLE_AUTH",
                                                    "range": [
                                                        115,
                                                        117
                                                    ],
                                                    "children": [],
                                                    "content": "Settings.ENABLE_AUTH"
                                                },
                                                {
                                                    "type": "Block",
                                                    "name": "then",
                                                    "range": [
                                                        119,
                                                        135
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "RaiseStatement",
                                                            "name": "raise_HTTPException",
                                                            "range": [
                                                                120,
                                                                134
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "CallExpression",
                                                                    "name": "fastapi.HTTPException",
                                                                    "range": [
                                                                        121,
                                                                        134
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "ArgumentList",
                                                                            "name": "arguments",
                                                                            "range": [
                                                                                124,
                                                                                133
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "Argument",
                                                                                    "name": "status_code=401",
                                                                                    "range": [
                                                                                        126,
                                                                                        128
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "status_code=401"
                                                                                },
                                                                                {
                                                                                    "type": "Argument",
                                                                                    "name": "detail=\"Authorization header is missing\"",
                                                                                    "range": [
                                                                                        130,
                                                                                        132
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "detail=\"Authorization header is missing\""
                                                                                }
                                                                            ],
                                                                            "content": "(\nstatus_code=401,detail=\"Authorization header is missing\"\n"
                                                                        }
                                                                    ],
                                                                    "content": "fastapi.HTTPException(\nstatus_code=401,detail=\"Authorization header is missing\"\n)"
                                                                }
                                                            ],
                                                            "content": "raise fastapi.HTTPException(\nstatus_code=401,detail=\"Authorization header is missing\"\n)"
                                                        }
                                                    ],
                                                    "content": "\nraise fastapi.HTTPException(\nstatus_code=401,detail=\"Authorization header is missing\"\n)\n"
                                                }
                                            ],
                                            "content": "if Settings.ENABLE_AUTH:\nraise fastapi.HTTPException(\nstatus_code=401,detail=\"Authorization header is missing\"\n)\n"
                                        }
                                    ],
                                    "content": "\nif Settings.ENABLE_AUTH:\nraise fastapi.HTTPException(\nstatus_code=401,detail=\"Authorization header is missing\"\n)\n"
                                }
                            ],
                            "content": "if not payload:\nif Settings.ENABLE_AUTH:\nraise fastapi.HTTPException(\nstatus_code=401,detail=\"Authorization header is missing\"\n)\n"
                        },
                        {
                            "type": "Comment",
                            "name": "comment",
                            "range": [
                                136,
                                145
                            ],
                            "children": [],
                            "content": "#This handles the case when authentication is disabled\n"
                        },
                        {
                            "type": "Assignment",
                            "name": "payload_assignment",
                            "range": [
                                146,
                                156
                            ],
                            "children": [
                                {
                                    "type": "ObjectLiteral",
                                    "name": "payload",
                                    "range": [
                                        148,
                                        156
                                    ],
                                    "children": [
                                        {
                                            "type": "Property",
                                            "name": "sub",
                                            "range": [
                                                149,
                                                151
                                            ],
                                            "children": [],
                                            "content": "\"sub\":DEFAULT_USER_ID"
                                        },
                                        {
                                            "type": "Property",
                                            "name": "role",
                                            "range": [
                                                153,
                                                155
                                            ],
                                            "children": [],
                                            "content": "\"role\":\"admin\""
                                        }
                                    ],
                                    "content": "{\"sub\":DEFAULT_USER_ID,\"role\":\"admin\"}"
                                }
                            ],
                            "content": "payload={\"sub\":DEFAULT_USER_ID,\"role\":\"admin\"}"
                        },
                        {
                            "type": "Assignment",
                            "name": "user_id_assignment",
                            "range": [
                                159,
                                167
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "payload.get",
                                    "range": [
                                        161,
                                        167
                                    ],
                                    "children": [
                                        {
                                            "type": "ArgumentList",
                                            "name": "arguments",
                                            "range": [
                                                164,
                                                166
                                            ],
                                            "children": [
                                                {
                                                    "type": "Argument",
                                                    "name": "\"sub\"",
                                                    "range": [
                                                        165,
                                                        165
                                                    ],
                                                    "children": [],
                                                    "content": "\"sub\""
                                                }
                                            ],
                                            "content": "(\"sub\")"
                                        }
                                    ],
                                    "content": "payload.get(\"sub\")\n"
                                }
                            ],
                            "content": "user_id=payload.get(\"sub\")\n"
                        },
                        {
                            "type": "IfStatement",
                            "name": "if_not_user_id",
                            "range": [
                                169,
                                189
                            ],
                            "children": [
                                {
                                    "type": "Condition",
                                    "name": "not_user_id",
                                    "range": [
                                        170,
                                        171
                                    ],
                                    "children": [],
                                    "content": "not user_id"
                                },
                                {
                                    "type": "Block",
                                    "name": "then",
                                    "range": [
                                        173,
                                        189
                                    ],
                                    "children": [
                                        {
                                            "type": "RaiseStatement",
                                            "name": "raise_HTTPException",
                                            "range": [
                                                174,
                                                188
                                            ],
                                            "children": [
                                                {
                                                    "type": "CallExpression",
                                                    "name": "fastapi.HTTPException",
                                                    "range": [
                                                        175,
                                                        188
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "ArgumentList",
                                                            "name": "arguments",
                                                            "range": [
                                                                178,
                                                                187
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Argument",
                                                                    "name": "status_code=401",
                                                                    "range": [
                                                                        180,
                                                                        182
                                                                    ],
                                                                    "children": [],
                                                                    "content": "status_code=401"
                                                                },
                                                                {
                                                                    "type": "Argument",
                                                                    "name": "detail=\"User ID not found in token\"",
                                                                    "range": [
                                                                        184,
                                                                        186
                                                                    ],
                                                                    "children": [],
                                                                    "content": "detail=\"User ID not found in token\""
                                                                }
                                                            ],
                                                            "content": "(\nstatus_code=401,detail=\"User ID not found in token\"\n"
                                                        }
                                                    ],
                                                    "content": "fastapi.HTTPException(\nstatus_code=401,detail=\"User ID not found in token\"\n)"
                                                }
                                            ],
                                            "content": "raise fastapi.HTTPException(\nstatus_code=401,detail=\"User ID not found in token\"\n)"
                                        }
                                    ],
                                    "content": "\nraise fastapi.HTTPException(\nstatus_code=401,detail=\"User ID not found in token\"\n)\n"
                                }
                            ],
                            "content": "if not user_id:\nraise fastapi.HTTPException(\nstatus_code=401,detail=\"User ID not found in token\"\n)\n"
                        },
                        {
                            "type": "IfStatement",
                            "name": "if_admin_only",
                            "range": [
                                191,
                                216
                            ],
                            "children": [
                                {
                                    "type": "Condition",
                                    "name": "admin_only_and_payload_role_not_admin",
                                    "range": [
                                        192,
                                        200
                                    ],
                                    "children": [],
                                    "content": "admin_only and payload[\"role\"]!=\"admin\""
                                },
                                {
                                    "type": "Block",
                                    "name": "then",
                                    "range": [
                                        202,
                                        216
                                    ],
                                    "children": [
                                        {
                                            "type": "RaiseStatement",
                                            "name": "raise_HTTPException",
                                            "range": [
                                                203,
                                                215
                                            ],
                                            "children": [
                                                {
                                                    "type": "CallExpression",
                                                    "name": "fastapi.HTTPException",
                                                    "range": [
                                                        204,
                                                        215
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "ArgumentList",
                                                            "name": "arguments",
                                                            "range": [
                                                                207,
                                                                214
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Argument",
                                                                    "name": "status_code=403",
                                                                    "range": [
                                                                        208,
                                                                        210
                                                                    ],
                                                                    "children": [],
                                                                    "content": "status_code=403"
                                                                },
                                                                {
                                                                    "type": "Argument",
                                                                    "name": "detail=\"Admin access required\"",
                                                                    "range": [
                                                                        212,
                                                                        214
                                                                    ],
                                                                    "children": [],
                                                                    "content": "detail=\"Admin access required\""
                                                                }
                                                            ],
                                                            "content": "(status_code=403,detail=\"Admin access required\""
                                                        }
                                                    ],
                                                    "content": "fastapi.HTTPException(status_code=403,detail=\"Admin access required\")"
                                                }
                                            ],
                                            "content": "raise fastapi.HTTPException(status_code=403,detail=\"Admin access required\")"
                                        }
                                    ],
                                    "content": "\nraise fastapi.HTTPException(status_code=403,detail=\"Admin access required\")\n"
                                }
                            ],
                            "content": "if admin_only and payload[\"role\"]!=\"admin\":\nraise fastapi.HTTPException(status_code=403,detail=\"Admin access required\")\n"
                        },
                        {
                            "type": "ReturnStatement",
                            "name": "return_User_from_payload",
                            "range": [
                                218,
                                225
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "User.from_payload",
                                    "range": [
                                        219,
                                        225
                                    ],
                                    "children": [
                                        {
                                            "type": "ArgumentList",
                                            "name": "arguments",
                                            "range": [
                                                222,
                                                224
                                            ],
                                            "children": [
                                                {
                                                    "type": "Argument",
                                                    "name": "payload",
                                                    "range": [
                                                        223,
                                                        223
                                                    ],
                                                    "children": [],
                                                    "content": "payload"
                                                }
                                            ],
                                            "content": "(payload)"
                                        }
                                    ],
                                    "content": "User.from_payload(payload)\n"
                                }
                            ],
                            "content": "return User.from_payload(payload)\n"
                        }
                    ],
                    "content": "\nif not payload:\nif Settings.ENABLE_AUTH:\nraise fastapi.HTTPException(\nstatus_code=401,detail=\"Authorization header is missing\"\n)\n#This handles the case when authentication is disabled\npayload={\"sub\":DEFAULT_USER_ID,\"role\":\"admin\"}\n\nuser_id=payload.get(\"sub\")\n\nif not user_id:\nraise fastapi.HTTPException(\nstatus_code=401,detail=\"User ID not found in token\"\n)\n\nif admin_only and payload[\"role\"]!=\"admin\":\nraise fastapi.HTTPException(status_code=403,detail=\"Admin access required\")\n\nreturn User.from_payload(payload)\n"
                }
            ],
            "content": "def verify_user(payload:dict|None,admin_only:bool)->User:\nif not payload:\nif Settings.ENABLE_AUTH:\nraise fastapi.HTTPException(\nstatus_code=401,detail=\"Authorization header is missing\"\n)\n#This handles the case when authentication is disabled\npayload={\"sub\":DEFAULT_USER_ID,\"role\":\"admin\"}\n\nuser_id=payload.get(\"sub\")\n\nif not user_id:\nraise fastapi.HTTPException(\nstatus_code=401,detail=\"User ID not found in token\"\n)\n\nif admin_only and payload[\"role\"]!=\"admin\":\nraise fastapi.HTTPException(status_code=403,detail=\"Admin access required\")\n\nreturn User.from_payload(payload)\n"
        },
        {
            "type": "FunctionDecl",
            "name": "get_user_id",
            "range": [
                228,
                279
            ],
            "children": [
                {
                    "type": "Parameter",
                    "name": "payload",
                    "range": [
                        231,
                        240
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "dict",
                            "range": [
                                233,
                                233
                            ],
                            "children": [],
                            "content": "dict"
                        },
                        {
                            "type": "DefaultValue",
                            "name": "fastapi.Depends(auth_middleware)",
                            "range": [
                                235,
                                240
                            ],
                            "children": [],
                            "content": "fastapi.Depends(auth_middleware)"
                        }
                    ],
                    "content": "payload:dict=fastapi.Depends(auth_middleware)"
                },
                {
                    "type": "ReturnType",
                    "name": "str",
                    "range": [
                        244,
                        244
                    ],
                    "children": [],
                    "content": "str"
                },
                {
                    "type": "BlockStatement",
                    "name": "",
                    "range": [
                        246,
                        279
                    ],
                    "children": [
                        {
                            "type": "VariableDecl",
                            "name": "user_id",
                            "range": [
                                247,
                                254
                            ],
                            "children": [
                                {
                                    "type": "AssignmentExpression",
                                    "name": "=",
                                    "range": [
                                        248,
                                        254
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "payload.get",
                                            "range": [
                                                249,
                                                252
                                            ],
                                            "children": [],
                                            "content": "payload.get("
                                        },
                                        {
                                            "type": "Literal",
                                            "name": "\"sub\"",
                                            "range": [
                                                253,
                                                253
                                            ],
                                            "children": [],
                                            "content": "\"sub\""
                                        }
                                    ],
                                    "content": "=payload.get(\"sub\")"
                                }
                            ],
                            "content": "user_id=payload.get(\"sub\")"
                        },
                        {
                            "type": "IfStatement",
                            "name": "",
                            "range": [
                                256,
                                275
                            ],
                            "children": [
                                {
                                    "type": "UnaryExpression",
                                    "name": "not",
                                    "range": [
                                        257,
                                        257
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "user_id",
                                            "range": [
                                                258,
                                                258
                                            ],
                                            "children": [],
                                            "content": "user_id"
                                        }
                                    ],
                                    "content": "not"
                                },
                                {
                                    "type": "BlockStatement",
                                    "name": "",
                                    "range": [
                                        260,
                                        275
                                    ],
                                    "children": [
                                        {
                                            "type": "ThrowStatement",
                                            "name": "raise",
                                            "range": [
                                                261,
                                                275
                                            ],
                                            "children": [
                                                {
                                                    "type": "NewExpression",
                                                    "name": "fastapi.HTTPException",
                                                    "range": [
                                                        262,
                                                        275
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "ArgumentList",
                                                            "name": "",
                                                            "range": [
                                                                265,
                                                                275
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "AssignmentExpression",
                                                                    "name": "status_code=",
                                                                    "range": [
                                                                        267,
                                                                        269
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Literal",
                                                                            "name": "401",
                                                                            "range": [
                                                                                269,
                                                                                269
                                                                            ],
                                                                            "children": [],
                                                                            "content": "401"
                                                                        }
                                                                    ],
                                                                    "content": "status_code=401"
                                                                },
                                                                {
                                                                    "type": "AssignmentExpression",
                                                                    "name": "detail=",
                                                                    "range": [
                                                                        271,
                                                                        273
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Literal",
                                                                            "name": "\"User ID not found in token\"",
                                                                            "range": [
                                                                                273,
                                                                                273
                                                                            ],
                                                                            "children": [],
                                                                            "content": "\"User ID not found in token\""
                                                                        }
                                                                    ],
                                                                    "content": "detail=\"User ID not found in token\""
                                                                }
                                                            ],
                                                            "content": "(\nstatus_code=401,detail=\"User ID not found in token\"\n)"
                                                        }
                                                    ],
                                                    "content": "fastapi.HTTPException(\nstatus_code=401,detail=\"User ID not found in token\"\n)"
                                                }
                                            ],
                                            "content": "raise fastapi.HTTPException(\nstatus_code=401,detail=\"User ID not found in token\"\n)"
                                        }
                                    ],
                                    "content": "\nraise fastapi.HTTPException(\nstatus_code=401,detail=\"User ID not found in token\"\n)"
                                }
                            ],
                            "content": "if not user_id:\nraise fastapi.HTTPException(\nstatus_code=401,detail=\"User ID not found in token\"\n)"
                        },
                        {
                            "type": "ReturnStatement",
                            "name": "return",
                            "range": [
                                277,
                                278
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "user_id",
                                    "range": [
                                        278,
                                        278
                                    ],
                                    "children": [],
                                    "content": "user_id"
                                }
                            ],
                            "content": "return user_id"
                        }
                    ],
                    "content": "\nuser_id=payload.get(\"sub\")\nif not user_id:\nraise fastapi.HTTPException(\nstatus_code=401,detail=\"User ID not found in token\"\n)\nreturn user_id\n"
                }
            ],
            "content": "def get_user_id(payload:dict=fastapi.Depends(auth_middleware))->str:\nuser_id=payload.get(\"sub\")\nif not user_id:\nraise fastapi.HTTPException(\nstatus_code=401,detail=\"User ID not found in token\"\n)\nreturn user_id\n"
        }
    ],
    "content": "import fastapi\n\nfrom.config import Settings\nfrom.middleware import auth_middleware\nfrom.models import DEFAULT_USER_ID,User\n\n\ndef requires_user(payload:dict=fastapi.Depends(auth_middleware))->User:\nreturn verify_user(payload,admin_only=False)\n\n\ndef requires_admin_user(\npayload:dict=fastapi.Depends(auth_middleware),\n)->User:\nreturn verify_user(payload,admin_only=True)\n\n\ndef verify_user(payload:dict|None,admin_only:bool)->User:\nif not payload:\nif Settings.ENABLE_AUTH:\nraise fastapi.HTTPException(\nstatus_code=401,detail=\"Authorization header is missing\"\n)\n#This handles the case when authentication is disabled\npayload={\"sub\":DEFAULT_USER_ID,\"role\":\"admin\"}\n\nuser_id=payload.get(\"sub\")\n\nif not user_id:\nraise fastapi.HTTPException(\nstatus_code=401,detail=\"User ID not found in token\"\n)\n\nif admin_only and payload[\"role\"]!=\"admin\":\nraise fastapi.HTTPException(status_code=403,detail=\"Admin access required\")\n\nreturn User.from_payload(payload)\n\n\ndef get_user_id(payload:dict=fastapi.Depends(auth_middleware))->str:\nuser_id=payload.get(\"sub\")\nif not user_id:\nraise fastapi.HTTPException(\nstatus_code=401,detail=\"User ID not found in token\"\n)\nreturn user_id\n"
}