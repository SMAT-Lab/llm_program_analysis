{
    "type": "Program",
    "name": "Global",
    "range": [
        80,
        850
    ],
    "children": [
        {
            "type": "FunctionDecl",
            "name": "get_or_create_user",
            "range": [
                80,
                223
            ],
            "children": [
                {
                    "type": "FunctionSignature",
                    "name": "get_or_create_user",
                    "range": [
                        80,
                        91
                    ],
                    "children": [
                        {
                            "type": "Keyword",
                            "name": "async",
                            "range": [
                                80,
                                85
                            ],
                            "children": [],
                            "content": "\nasync def get_or_create_user(user_data"
                        },
                        {
                            "type": "Keyword",
                            "name": "def",
                            "range": [
                                81,
                                84
                            ],
                            "children": [],
                            "content": "async def get_or_create_user("
                        },
                        {
                            "type": "Identifier",
                            "name": "get_or_create_user",
                            "range": [
                                82,
                                100
                            ],
                            "children": [],
                            "content": "def get_or_create_user(user_data:dict)->User:\nuser_id=user_data.get(\"sub\""
                        },
                        {
                            "type": "ParameterList",
                            "name": "parameters",
                            "range": [
                                83,
                                87
                            ],
                            "children": [
                                {
                                    "type": "Parameter",
                                    "name": "user_data",
                                    "range": [
                                        84,
                                        86
                                    ],
                                    "children": [
                                        {
                                            "type": "TypeAnnotation",
                                            "name": "dict",
                                            "range": [
                                                86,
                                                90
                                            ],
                                            "children": [],
                                            "content": ":dict)->"
                                        }
                                    ],
                                    "content": "(user_data:"
                                }
                            ],
                            "content": "get_or_create_user(user_data:dict"
                        },
                        {
                            "type": "ReturnType",
                            "name": "User",
                            "range": [
                                88,
                                91
                            ],
                            "children": [],
                            "content": ")->User"
                        }
                    ],
                    "content": "\nasync def get_or_create_user(user_data:dict)->User"
                },
                {
                    "type": "FunctionBody",
                    "name": "body",
                    "range": [
                        92,
                        223
                    ],
                    "children": [
                        {
                            "type": "VariableDecl",
                            "name": "user_id",
                            "range": [
                                93,
                                101
                            ],
                            "children": [
                                {
                                    "type": "Assignment",
                                    "name": "=",
                                    "range": [
                                        94,
                                        95
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "user_data.get",
                                            "range": [
                                                95,
                                                100
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "user_data",
                                                    "range": [
                                                        95,
                                                        103
                                                    ],
                                                    "children": [],
                                                    "content": "=user_data.get(\"sub\")\nif"
                                                },
                                                {
                                                    "type": "PropertyAccess",
                                                    "name": ".",
                                                    "range": [
                                                        96,
                                                        97
                                                    ],
                                                    "children": [],
                                                    "content": "user_data."
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "get",
                                                    "range": [
                                                        97,
                                                        100
                                                    ],
                                                    "children": [],
                                                    "content": ".get(\"sub\""
                                                }
                                            ],
                                            "content": "=user_data.get(\"sub\""
                                        },
                                        {
                                            "type": "Literal",
                                            "name": "\"sub\"",
                                            "range": [
                                                99,
                                                103
                                            ],
                                            "children": [],
                                            "content": "(\"sub\")\nif"
                                        }
                                    ],
                                    "content": "user_id="
                                }
                            ],
                            "content": "\nuser_id=user_data.get(\"sub\")"
                        },
                        {
                            "type": "IfStatement",
                            "name": "if",
                            "range": [
                                102,
                                118
                            ],
                            "children": [
                                {
                                    "type": "Condition",
                                    "name": "not user_id",
                                    "range": [
                                        103,
                                        105
                                    ],
                                    "children": [
                                        {
                                            "type": "UnaryExpression",
                                            "name": "not",
                                            "range": [
                                                103,
                                                106
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "user_id",
                                                    "range": [
                                                        104,
                                                        108
                                                    ],
                                                    "children": [],
                                                    "content": "not user_id:\nraise"
                                                }
                                            ],
                                            "content": "if not user_id:"
                                        }
                                    ],
                                    "content": "if not user_id"
                                },
                                {
                                    "type": "Block",
                                    "name": "block",
                                    "range": [
                                        106,
                                        118
                                    ],
                                    "children": [
                                        {
                                            "type": "RaiseStatement",
                                            "name": "raise",
                                            "range": [
                                                107,
                                                118
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "HTTPException",
                                                    "range": [
                                                        108,
                                                        121
                                                    ],
                                                    "children": [],
                                                    "content": "raise HTTPException(status_code=401,detail=\"User ID not found in token\")\n\nuser_email"
                                                },
                                                {
                                                    "type": "ArgumentList",
                                                    "name": "arguments",
                                                    "range": [
                                                        109,
                                                        117
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "KeywordArgument",
                                                            "name": "status_code",
                                                            "range": [
                                                                110,
                                                                112
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Literal",
                                                                    "name": "401",
                                                                    "range": [
                                                                        111,
                                                                        114
                                                                    ],
                                                                    "children": [],
                                                                    "content": "status_code=401,"
                                                                }
                                                            ],
                                                            "content": "(status_code="
                                                        },
                                                        {
                                                            "type": "KeywordArgument",
                                                            "name": "detail",
                                                            "range": [
                                                                114,
                                                                116
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Literal",
                                                                    "name": "\"User ID not found in token\"",
                                                                    "range": [
                                                                        115,
                                                                        117
                                                                    ],
                                                                    "children": [],
                                                                    "content": "detail=\"User ID not found in token\""
                                                                }
                                                            ],
                                                            "content": ",detail="
                                                        }
                                                    ],
                                                    "content": "HTTPException(status_code=401,detail=\"User ID not found in token\""
                                                }
                                            ],
                                            "content": "\nraise HTTPException(status_code=401,detail=\"User ID not found in token\")"
                                        }
                                    ],
                                    "content": ":\nraise HTTPException(status_code=401,detail=\"User ID not found in token\")"
                                }
                            ],
                            "content": "\nif not user_id:\nraise HTTPException(status_code=401,detail=\"User ID not found in token\")"
                        },
                        {
                            "type": "VariableDecl",
                            "name": "user_email",
                            "range": [
                                120,
                                128
                            ],
                            "children": [
                                {
                                    "type": "Assignment",
                                    "name": "=",
                                    "range": [
                                        121,
                                        122
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "user_data.get",
                                            "range": [
                                                122,
                                                127
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "user_data",
                                                    "range": [
                                                        122,
                                                        130
                                                    ],
                                                    "children": [],
                                                    "content": "=user_data.get(\"email\")\nif"
                                                },
                                                {
                                                    "type": "PropertyAccess",
                                                    "name": ".",
                                                    "range": [
                                                        123,
                                                        124
                                                    ],
                                                    "children": [],
                                                    "content": "user_data."
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "get",
                                                    "range": [
                                                        124,
                                                        127
                                                    ],
                                                    "children": [],
                                                    "content": ".get(\"email\""
                                                }
                                            ],
                                            "content": "=user_data.get(\"email\""
                                        },
                                        {
                                            "type": "Literal",
                                            "name": "\"email\"",
                                            "range": [
                                                126,
                                                130
                                            ],
                                            "children": [],
                                            "content": "(\"email\")\nif"
                                        }
                                    ],
                                    "content": "user_email="
                                }
                            ],
                            "content": "\nuser_email=user_data.get(\"email\")"
                        },
                        {
                            "type": "IfStatement",
                            "name": "if",
                            "range": [
                                129,
                                145
                            ],
                            "children": [
                                {
                                    "type": "Condition",
                                    "name": "not user_email",
                                    "range": [
                                        130,
                                        132
                                    ],
                                    "children": [
                                        {
                                            "type": "UnaryExpression",
                                            "name": "not",
                                            "range": [
                                                130,
                                                133
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "user_email",
                                                    "range": [
                                                        131,
                                                        135
                                                    ],
                                                    "children": [],
                                                    "content": "not user_email:\nraise"
                                                }
                                            ],
                                            "content": "if not user_email:"
                                        }
                                    ],
                                    "content": "if not user_email"
                                },
                                {
                                    "type": "Block",
                                    "name": "block",
                                    "range": [
                                        132,
                                        145
                                    ],
                                    "children": [
                                        {
                                            "type": "RaiseStatement",
                                            "name": "raise",
                                            "range": [
                                                134,
                                                145
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "HTTPException",
                                                    "range": [
                                                        135,
                                                        148
                                                    ],
                                                    "children": [],
                                                    "content": "raise HTTPException(status_code=401,detail=\"Email not found in token\")\n\nuser"
                                                },
                                                {
                                                    "type": "ArgumentList",
                                                    "name": "arguments",
                                                    "range": [
                                                        136,
                                                        144
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "KeywordArgument",
                                                            "name": "status_code",
                                                            "range": [
                                                                137,
                                                                139
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Literal",
                                                                    "name": "401",
                                                                    "range": [
                                                                        138,
                                                                        141
                                                                    ],
                                                                    "children": [],
                                                                    "content": "status_code=401,"
                                                                }
                                                            ],
                                                            "content": "(status_code="
                                                        },
                                                        {
                                                            "type": "KeywordArgument",
                                                            "name": "detail",
                                                            "range": [
                                                                141,
                                                                143
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Literal",
                                                                    "name": "\"Email not found in token\"",
                                                                    "range": [
                                                                        142,
                                                                        144
                                                                    ],
                                                                    "children": [],
                                                                    "content": "detail=\"Email not found in token\""
                                                                }
                                                            ],
                                                            "content": ",detail="
                                                        }
                                                    ],
                                                    "content": "HTTPException(status_code=401,detail=\"Email not found in token\""
                                                }
                                            ],
                                            "content": "\nraise HTTPException(status_code=401,detail=\"Email not found in token\")"
                                        }
                                    ],
                                    "content": "user_email:\nraise HTTPException(status_code=401,detail=\"Email not found in token\")"
                                }
                            ],
                            "content": "\nif not user_email:\nraise HTTPException(status_code=401,detail=\"Email not found in token\")"
                        },
                        {
                            "type": "VariableDecl",
                            "name": "user",
                            "range": [
                                147,
                                164
                            ],
                            "children": [
                                {
                                    "type": "Assignment",
                                    "name": "=",
                                    "range": [
                                        148,
                                        149
                                    ],
                                    "children": [
                                        {
                                            "type": "AwaitExpression",
                                            "name": "await",
                                            "range": [
                                                149,
                                                154
                                            ],
                                            "children": [
                                                {
                                                    "type": "CallExpression",
                                                    "name": "prisma.user.find_unique",
                                                    "range": [
                                                        150,
                                                        163
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "prisma",
                                                            "range": [
                                                                150,
                                                                156
                                                            ],
                                                            "children": [],
                                                            "content": "await prisma.user.find_unique("
                                                        },
                                                        {
                                                            "type": "PropertyAccess",
                                                            "name": ".",
                                                            "range": [
                                                                151,
                                                                152
                                                            ],
                                                            "children": [],
                                                            "content": "prisma."
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "user",
                                                            "range": [
                                                                152,
                                                                156
                                                            ],
                                                            "children": [],
                                                            "content": ".user.find_unique("
                                                        },
                                                        {
                                                            "type": "PropertyAccess",
                                                            "name": ".",
                                                            "range": [
                                                                153,
                                                                154
                                                            ],
                                                            "children": [],
                                                            "content": "user."
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "find_unique",
                                                            "range": [
                                                                154,
                                                                165
                                                            ],
                                                            "children": [],
                                                            "content": ".find_unique(where={\"id\":user_id})\n"
                                                        }
                                                    ],
                                                    "content": "await prisma.user.find_unique(where={\"id\":user_id}"
                                                },
                                                {
                                                    "type": "ArgumentList",
                                                    "name": "arguments",
                                                    "range": [
                                                        155,
                                                        163
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "KeywordArgument",
                                                            "name": "where",
                                                            "range": [
                                                                156,
                                                                158
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "ObjectLiteral",
                                                                    "name": "object",
                                                                    "range": [
                                                                        158,
                                                                        162
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Property",
                                                                            "name": "id",
                                                                            "range": [
                                                                                159,
                                                                                161
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "user_id",
                                                                                    "range": [
                                                                                        161,
                                                                                        167
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": ":user_id})\nif not"
                                                                                }
                                                                            ],
                                                                            "content": "{\"id\":"
                                                                        }
                                                                    ],
                                                                    "content": "={\"id\":user_id"
                                                                }
                                                            ],
                                                            "content": "(where="
                                                        }
                                                    ],
                                                    "content": "find_unique(where={\"id\":user_id}"
                                                }
                                            ],
                                            "content": "=await prisma.user."
                                        }
                                    ],
                                    "content": "user="
                                }
                            ],
                            "content": "\nuser=await prisma.user.find_unique(where={\"id\":user_id})"
                        },
                        {
                            "type": "IfStatement",
                            "name": "if",
                            "range": [
                                165,
                                215
                            ],
                            "children": [
                                {
                                    "type": "Condition",
                                    "name": "not user",
                                    "range": [
                                        166,
                                        168
                                    ],
                                    "children": [
                                        {
                                            "type": "UnaryExpression",
                                            "name": "not",
                                            "range": [
                                                166,
                                                169
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "user",
                                                    "range": [
                                                        167,
                                                        171
                                                    ],
                                                    "children": [],
                                                    "content": "not user:\nuser"
                                                }
                                            ],
                                            "content": "if not user:"
                                        }
                                    ],
                                    "content": "if not user"
                                },
                                {
                                    "type": "Block",
                                    "name": "block",
                                    "range": [
                                        168,
                                        215
                                    ],
                                    "children": [
                                        {
                                            "type": "VariableDecl",
                                            "name": "user",
                                            "range": [
                                                170,
                                                215
                                            ],
                                            "children": [
                                                {
                                                    "type": "Assignment",
                                                    "name": "=",
                                                    "range": [
                                                        171,
                                                        172
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "AwaitExpression",
                                                            "name": "await",
                                                            "range": [
                                                                172,
                                                                177
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "CallExpression",
                                                                    "name": "prisma.user.create",
                                                                    "range": [
                                                                        173,
                                                                        214
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "prisma",
                                                                            "range": [
                                                                                173,
                                                                                179
                                                                            ],
                                                                            "children": [],
                                                                            "content": "await prisma.user.create("
                                                                        },
                                                                        {
                                                                            "type": "PropertyAccess",
                                                                            "name": ".",
                                                                            "range": [
                                                                                174,
                                                                                175
                                                                            ],
                                                                            "children": [],
                                                                            "content": "prisma."
                                                                        },
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "user",
                                                                            "range": [
                                                                                175,
                                                                                179
                                                                            ],
                                                                            "children": [],
                                                                            "content": ".user.create("
                                                                        },
                                                                        {
                                                                            "type": "PropertyAccess",
                                                                            "name": ".",
                                                                            "range": [
                                                                                176,
                                                                                177
                                                                            ],
                                                                            "children": [],
                                                                            "content": "user."
                                                                        },
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "create",
                                                                            "range": [
                                                                                177,
                                                                                183
                                                                            ],
                                                                            "children": [],
                                                                            "content": ".create(\ndata={"
                                                                        }
                                                                    ],
                                                                    "content": "await prisma.user.create(\ndata={\n\"id\":user_id,\n\"email\":user_email,\n\"name\":user_data.get(\"user_metadata\",{}).get(\"name\"),\n}\n"
                                                                },
                                                                {
                                                                    "type": "ArgumentList",
                                                                    "name": "arguments",
                                                                    "range": [
                                                                        178,
                                                                        214
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "KeywordArgument",
                                                                            "name": "data",
                                                                            "range": [
                                                                                180,
                                                                                182
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "ObjectLiteral",
                                                                                    "name": "object",
                                                                                    "range": [
                                                                                        182,
                                                                                        212
                                                                                    ],
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "Property",
                                                                                            "name": "id",
                                                                                            "range": [
                                                                                                184,
                                                                                                186
                                                                                            ],
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "user_id",
                                                                                                    "range": [
                                                                                                        186,
                                                                                                        192
                                                                                                    ],
                                                                                                    "children": [],
                                                                                                    "content": ":user_id,\n\"email\":user_email"
                                                                                                }
                                                                                            ],
                                                                                            "content": "\n\"id\":"
                                                                                        },
                                                                                        {
                                                                                            "type": "Property",
                                                                                            "name": "email",
                                                                                            "range": [
                                                                                                189,
                                                                                                191
                                                                                            ],
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "user_email",
                                                                                                    "range": [
                                                                                                        191,
                                                                                                        201
                                                                                                    ],
                                                                                                    "children": [],
                                                                                                    "content": ":user_email,\n\"name\":user_data.get(\"user_metadata\""
                                                                                                }
                                                                                            ],
                                                                                            "content": "\n\"email\":"
                                                                                        },
                                                                                        {
                                                                                            "type": "Property",
                                                                                            "name": "name",
                                                                                            "range": [
                                                                                                194,
                                                                                                210
                                                                                            ],
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "CallExpression",
                                                                                                    "name": "user_data.get",
                                                                                                    "range": [
                                                                                                        196,
                                                                                                        209
                                                                                                    ],
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "user_data",
                                                                                                            "range": [
                                                                                                                196,
                                                                                                                204
                                                                                                            ],
                                                                                                            "children": [],
                                                                                                            "content": ":user_data.get(\"user_metadata\",{}"
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "PropertyAccess",
                                                                                                            "name": ".",
                                                                                                            "range": [
                                                                                                                197,
                                                                                                                198
                                                                                                            ],
                                                                                                            "children": [],
                                                                                                            "content": "user_data."
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "get",
                                                                                                            "range": [
                                                                                                                198,
                                                                                                                201
                                                                                                            ],
                                                                                                            "children": [],
                                                                                                            "content": ".get(\"user_metadata\""
                                                                                                        }
                                                                                                    ],
                                                                                                    "content": ":user_data.get(\"user_metadata\",{}).get(\"name\""
                                                                                                },
                                                                                                {
                                                                                                    "type": "ArgumentList",
                                                                                                    "name": "arguments",
                                                                                                    "range": [
                                                                                                        199,
                                                                                                        209
                                                                                                    ],
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "Literal",
                                                                                                            "name": "\"user_metadata\"",
                                                                                                            "range": [
                                                                                                                200,
                                                                                                                214
                                                                                                            ],
                                                                                                            "children": [],
                                                                                                            "content": "(\"user_metadata\",{}).get(\"name\"),\n}\n"
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "ObjectLiteral",
                                                                                                            "name": "object",
                                                                                                            "range": [
                                                                                                                202,
                                                                                                                204
                                                                                                            ],
                                                                                                            "children": [],
                                                                                                            "content": ",{}"
                                                                                                        }
                                                                                                    ],
                                                                                                    "content": "get(\"user_metadata\",{}).get(\"name\""
                                                                                                },
                                                                                                {
                                                                                                    "type": "PropertyAccess",
                                                                                                    "name": ".",
                                                                                                    "range": [
                                                                                                        205,
                                                                                                        206
                                                                                                    ],
                                                                                                    "children": [],
                                                                                                    "content": ")."
                                                                                                },
                                                                                                {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "get",
                                                                                                    "range": [
                                                                                                        206,
                                                                                                        209
                                                                                                    ],
                                                                                                    "children": [],
                                                                                                    "content": ".get(\"name\""
                                                                                                },
                                                                                                {
                                                                                                    "type": "ArgumentList",
                                                                                                    "name": "arguments",
                                                                                                    "range": [
                                                                                                        207,
                                                                                                        209
                                                                                                    ],
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "Literal",
                                                                                                            "name": "\"name\"",
                                                                                                            "range": [
                                                                                                                208,
                                                                                                                210
                                                                                                            ],
                                                                                                            "children": [],
                                                                                                            "content": "(\"name\")"
                                                                                                        }
                                                                                                    ],
                                                                                                    "content": "get(\"name\""
                                                                                                }
                                                                                            ],
                                                                                            "content": "\n\"name\":user_data.get(\"user_metadata\",{}).get(\"name\")"
                                                                                        }
                                                                                    ],
                                                                                    "content": "={\n\"id\":user_id,\n\"email\":user_email,\n\"name\":user_data.get(\"user_metadata\",{}).get(\"name\"),\n"
                                                                                }
                                                                            ],
                                                                            "content": "\ndata="
                                                                        }
                                                                    ],
                                                                    "content": "create(\ndata={\n\"id\":user_id,\n\"email\":user_email,\n\"name\":user_data.get(\"user_metadata\",{}).get(\"name\"),\n}\n"
                                                                }
                                                            ],
                                                            "content": "=await prisma.user."
                                                        }
                                                    ],
                                                    "content": "user="
                                                }
                                            ],
                                            "content": "\nuser=await prisma.user.create(\ndata={\n\"id\":user_id,\n\"email\":user_email,\n\"name\":user_data.get(\"user_metadata\",{}).get(\"name\"),\n}\n)"
                                        }
                                    ],
                                    "content": "user:\nuser=await prisma.user.create(\ndata={\n\"id\":user_id,\n\"email\":user_email,\n\"name\":user_data.get(\"user_metadata\",{}).get(\"name\"),\n}\n)"
                                }
                            ],
                            "content": "\nif not user:\nuser=await prisma.user.create(\ndata={\n\"id\":user_id,\n\"email\":user_email,\n\"name\":user_data.get(\"user_metadata\",{}).get(\"name\"),\n}\n)"
                        },
                        {
                            "type": "ReturnStatement",
                            "name": "return",
                            "range": [
                                216,
                                223
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "User.model_validate",
                                    "range": [
                                        217,
                                        222
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "User",
                                            "range": [
                                                217,
                                                221
                                            ],
                                            "children": [],
                                            "content": "return User.model_validate("
                                        },
                                        {
                                            "type": "PropertyAccess",
                                            "name": ".",
                                            "range": [
                                                218,
                                                219
                                            ],
                                            "children": [],
                                            "content": "User."
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "model_validate",
                                            "range": [
                                                219,
                                                233
                                            ],
                                            "children": [],
                                            "content": ".model_validate(user)\n\n\nasync def get_user_by_id(user_id:str"
                                        }
                                    ],
                                    "content": "return User.model_validate(user"
                                },
                                {
                                    "type": "ArgumentList",
                                    "name": "arguments",
                                    "range": [
                                        220,
                                        222
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "user",
                                            "range": [
                                                221,
                                                225
                                            ],
                                            "children": [],
                                            "content": "(user)\n\n"
                                        }
                                    ],
                                    "content": "model_validate(user"
                                }
                            ],
                            "content": "\nreturn User.model_validate(user)"
                        }
                    ],
                    "content": ":\nuser_id=user_data.get(\"sub\")\nif not user_id:\nraise HTTPException(status_code=401,detail=\"User ID not found in token\")\n\nuser_email=user_data.get(\"email\")\nif not user_email:\nraise HTTPException(status_code=401,detail=\"Email not found in token\")\n\nuser=await prisma.user.find_unique(where={\"id\":user_id})\nif not user:\nuser=await prisma.user.create(\ndata={\n\"id\":user_id,\n\"email\":user_email,\n\"name\":user_data.get(\"user_metadata\",{}).get(\"name\"),\n}\n)\nreturn User.model_validate(user)"
                }
            ],
            "content": "\nasync def get_or_create_user(user_data:dict)->User:\nuser_id=user_data.get(\"sub\")\nif not user_id:\nraise HTTPException(status_code=401,detail=\"User ID not found in token\")\n\nuser_email=user_data.get(\"email\")\nif not user_email:\nraise HTTPException(status_code=401,detail=\"Email not found in token\")\n\nuser=await prisma.user.find_unique(where={\"id\":user_id})\nif not user:\nuser=await prisma.user.create(\ndata={\n\"id\":user_id,\n\"email\":user_email,\n\"name\":user_data.get(\"user_metadata\",{}).get(\"name\"),\n}\n)\nreturn User.model_validate(user)"
        },
        {
            "type": "FunctionDecl",
            "name": "get_user_by_id",
            "range": [
                224,
                269
            ],
            "children": [
                {
                    "type": "AsyncKeyword",
                    "name": "async",
                    "range": [
                        224,
                        224
                    ],
                    "children": [],
                    "content": "\n"
                },
                {
                    "type": "DefKeyword",
                    "name": "def",
                    "range": [
                        225,
                        225
                    ],
                    "children": [],
                    "content": "\n"
                },
                {
                    "type": "Identifier",
                    "name": "get_user_by_id",
                    "range": [
                        226,
                        226
                    ],
                    "children": [],
                    "content": "\n"
                },
                {
                    "type": "ParameterList",
                    "name": "parameters",
                    "range": [
                        227,
                        231
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "user_id",
                            "range": [
                                228,
                                228
                            ],
                            "children": [],
                            "content": "def"
                        },
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                230,
                                230
                            ],
                            "children": [],
                            "content": "("
                        }
                    ],
                    "content": "async def get_user_by_id(user_id"
                },
                {
                    "type": "ReturnTypeAnnotation",
                    "name": "Optional[User]",
                    "range": [
                        232,
                        237
                    ],
                    "children": [
                        {
                            "type": "OptionalKeyword",
                            "name": "Optional",
                            "range": [
                                234,
                                234
                            ],
                            "children": [],
                            "content": ")"
                        },
                        {
                            "type": "Identifier",
                            "name": "User",
                            "range": [
                                236,
                                236
                            ],
                            "children": [],
                            "content": ">"
                        }
                    ],
                    "content": ":str)->Optional"
                },
                {
                    "type": "BlockStatement",
                    "name": "body",
                    "range": [
                        239,
                        269
                    ],
                    "children": [
                        {
                            "type": "VariableDeclaration",
                            "name": "user",
                            "range": [
                                240,
                                256
                            ],
                            "children": [
                                {
                                    "type": "AssignmentExpression",
                                    "name": "=",
                                    "range": [
                                        241,
                                        241
                                    ],
                                    "children": [],
                                    "content": ":"
                                },
                                {
                                    "type": "AwaitExpression",
                                    "name": "await",
                                    "range": [
                                        242,
                                        242
                                    ],
                                    "children": [],
                                    "content": "\n"
                                },
                                {
                                    "type": "CallExpression",
                                    "name": "prisma.user.find_unique",
                                    "range": [
                                        243,
                                        247
                                    ],
                                    "children": [
                                        {
                                            "type": "MemberExpression",
                                            "name": "prisma.user.find_unique",
                                            "range": [
                                                243,
                                                247
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "prisma",
                                                    "range": [
                                                        243,
                                                        243
                                                    ],
                                                    "children": [],
                                                    "content": "user"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "user",
                                                    "range": [
                                                        245,
                                                        245
                                                    ],
                                                    "children": [],
                                                    "content": "await"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "find_unique",
                                                    "range": [
                                                        247,
                                                        247
                                                    ],
                                                    "children": [],
                                                    "content": "."
                                                }
                                            ],
                                            "content": "user=await prisma."
                                        }
                                    ],
                                    "content": "user=await prisma."
                                },
                                {
                                    "type": "ArgumentList",
                                    "name": "arguments",
                                    "range": [
                                        248,
                                        256
                                    ],
                                    "children": [
                                        {
                                            "type": "ObjectExpression",
                                            "name": "where",
                                            "range": [
                                                249,
                                                255
                                            ],
                                            "children": [
                                                {
                                                    "type": "Property",
                                                    "name": "id",
                                                    "range": [
                                                        252,
                                                        252
                                                    ],
                                                    "children": [],
                                                    "content": "where"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "user_id",
                                                    "range": [
                                                        254,
                                                        254
                                                    ],
                                                    "children": [],
                                                    "content": "{"
                                                }
                                            ],
                                            "content": ".find_unique(where={\"id\""
                                        }
                                    ],
                                    "content": "user.find_unique(where={\"id\":"
                                }
                            ],
                            "content": "]:\nuser=await prisma.user.find_unique(where={\"id\":"
                        },
                        {
                            "type": "ReturnStatement",
                            "name": "return",
                            "range": [
                                258,
                                268
                            ],
                            "children": [
                                {
                                    "type": "IfStatement",
                                    "name": "if",
                                    "range": [
                                        265,
                                        268
                                    ],
                                    "children": [
                                        {
                                            "type": "Condition",
                                            "name": "user",
                                            "range": [
                                                266,
                                                266
                                            ],
                                            "children": [],
                                            "content": "user"
                                        },
                                        {
                                            "type": "BlockStatement",
                                            "name": "Consequent",
                                            "range": [
                                                259,
                                                264
                                            ],
                                            "children": [
                                                {
                                                    "type": "CallExpression",
                                                    "name": "User.model_validate",
                                                    "range": [
                                                        259,
                                                        261
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "MemberExpression",
                                                            "name": "User.model_validate",
                                                            "range": [
                                                                259,
                                                                261
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "User",
                                                                    "range": [
                                                                        259,
                                                                        259
                                                                    ],
                                                                    "children": [],
                                                                    "content": ")"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "model_validate",
                                                                    "range": [
                                                                        261,
                                                                        261
                                                                    ],
                                                                    "children": [],
                                                                    "content": "return"
                                                                }
                                                            ],
                                                            "content": ")\nreturn"
                                                        }
                                                    ],
                                                    "content": ")\nreturn"
                                                },
                                                {
                                                    "type": "ArgumentList",
                                                    "name": "arguments",
                                                    "range": [
                                                        262,
                                                        264
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "user",
                                                            "range": [
                                                                263,
                                                                263
                                                            ],
                                                            "children": [],
                                                            "content": "."
                                                        }
                                                    ],
                                                    "content": "User.model_validate"
                                                }
                                            ],
                                            "content": ")\nreturn User.model_validate"
                                        },
                                        {
                                            "type": "BlockStatement",
                                            "name": "Alternate",
                                            "range": [
                                                268,
                                                268
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "None",
                                                    "range": [
                                                        268,
                                                        268
                                                    ],
                                                    "children": [],
                                                    "content": "if"
                                                }
                                            ],
                                            "content": "if"
                                        }
                                    ],
                                    "content": "(user)if"
                                }
                            ],
                            "content": "})\nreturn User.model_validate(user)if"
                        }
                    ],
                    "content": "User]:\nuser=await prisma.user.find_unique(where={\"id\":user_id})\nreturn User.model_validate(user)if user"
                }
            ],
            "content": "\n\n\nasync def get_user_by_id(user_id:str)->Optional[User]:\nuser=await prisma.user.find_unique(where={\"id\":user_id})\nreturn User.model_validate(user)if user"
        },
        {
            "type": "FunctionDecl",
            "name": "create_default_user",
            "range": [
                270,
                346
            ],
            "children": [
                {
                    "type": "AsyncKeyword",
                    "name": "async",
                    "range": [
                        270,
                        270
                    ],
                    "children": [],
                    "content": "else"
                },
                {
                    "type": "DefKeyword",
                    "name": "def",
                    "range": [
                        271,
                        271
                    ],
                    "children": [],
                    "content": "None"
                },
                {
                    "type": "Identifier",
                    "name": "create_default_user",
                    "range": [
                        272,
                        272
                    ],
                    "children": [],
                    "content": "\n"
                },
                {
                    "type": "ParameterList",
                    "name": "()",
                    "range": [
                        273,
                        274
                    ],
                    "children": [],
                    "content": "\n\n"
                },
                {
                    "type": "ReturnType",
                    "name": "-> Optional[User]",
                    "range": [
                        275,
                        280
                    ],
                    "children": [
                        {
                            "type": "OptionalKeyword",
                            "name": "Optional",
                            "range": [
                                277,
                                277
                            ],
                            "children": [],
                            "content": "create_default_user"
                        },
                        {
                            "type": "Identifier",
                            "name": "User",
                            "range": [
                                279,
                                279
                            ],
                            "children": [],
                            "content": ")"
                        }
                    ],
                    "content": "async def create_default_user()-"
                },
                {
                    "type": "BlockStatement",
                    "name": "",
                    "range": [
                        282,
                        346
                    ],
                    "children": [
                        {
                            "type": "VariableDecl",
                            "name": "user = await prisma.user.find_unique(where={\"id\": DEFAULT_USER_ID})",
                            "range": [
                                283,
                                299
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "user",
                                    "range": [
                                        283,
                                        283
                                    ],
                                    "children": [],
                                    "content": "["
                                },
                                {
                                    "type": "AssignmentOperator",
                                    "name": "=",
                                    "range": [
                                        284,
                                        284
                                    ],
                                    "children": [],
                                    "content": "User"
                                },
                                {
                                    "type": "AwaitExpression",
                                    "name": "await prisma.user.find_unique(where={\"id\": DEFAULT_USER_ID})",
                                    "range": [
                                        285,
                                        299
                                    ],
                                    "children": [
                                        {
                                            "type": "AwaitKeyword",
                                            "name": "await",
                                            "range": [
                                                285,
                                                285
                                            ],
                                            "children": [],
                                            "content": "]"
                                        },
                                        {
                                            "type": "CallExpression",
                                            "name": "prisma.user.find_unique(where={\"id\": DEFAULT_USER_ID})",
                                            "range": [
                                                286,
                                                299
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "prisma",
                                                    "range": [
                                                        286,
                                                        286
                                                    ],
                                                    "children": [],
                                                    "content": ":"
                                                },
                                                {
                                                    "type": "MemberExpression",
                                                    "name": "user",
                                                    "range": [
                                                        288,
                                                        288
                                                    ],
                                                    "children": [],
                                                    "content": "user"
                                                },
                                                {
                                                    "type": "MemberExpression",
                                                    "name": "find_unique",
                                                    "range": [
                                                        290,
                                                        290
                                                    ],
                                                    "children": [],
                                                    "content": "await"
                                                },
                                                {
                                                    "type": "ArgumentList",
                                                    "name": "(where={\"id\": DEFAULT_USER_ID})",
                                                    "range": [
                                                        291,
                                                        299
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "NamedArgument",
                                                            "name": "where={\"id\": DEFAULT_USER_ID}",
                                                            "range": [
                                                                292,
                                                                298
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "where",
                                                                    "range": [
                                                                        292,
                                                                        292
                                                                    ],
                                                                    "children": [],
                                                                    "content": "."
                                                                },
                                                                {
                                                                    "type": "AssignmentOperator",
                                                                    "name": "=",
                                                                    "range": [
                                                                        293,
                                                                        293
                                                                    ],
                                                                    "children": [],
                                                                    "content": "user"
                                                                },
                                                                {
                                                                    "type": "ObjectExpression",
                                                                    "name": "{\"id\": DEFAULT_USER_ID}",
                                                                    "range": [
                                                                        294,
                                                                        298
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Property",
                                                                            "name": "\"id\": DEFAULT_USER_ID",
                                                                            "range": [
                                                                                295,
                                                                                297
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "Literal",
                                                                                    "name": "\"id\"",
                                                                                    "range": [
                                                                                        295,
                                                                                        295
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "find_unique"
                                                                                },
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "DEFAULT_USER_ID",
                                                                                    "range": [
                                                                                        297,
                                                                                        297
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "where"
                                                                                }
                                                                            ],
                                                                            "content": "find_unique(where"
                                                                        }
                                                                    ],
                                                                    "content": ".find_unique(where="
                                                                }
                                                            ],
                                                            "content": ".user.find_unique(where="
                                                        }
                                                    ],
                                                    "content": "prisma.user.find_unique(where={"
                                                }
                                            ],
                                            "content": ":\nuser=await prisma.user.find_unique(where={"
                                        }
                                    ],
                                    "content": "]:\nuser=await prisma.user.find_unique(where={"
                                }
                            ],
                            "content": "[User]:\nuser=await prisma.user.find_unique(where={"
                        },
                        {
                            "type": "IfStatement",
                            "name": "if not user:",
                            "range": [
                                301,
                                305
                            ],
                            "children": [
                                {
                                    "type": "IfKeyword",
                                    "name": "if",
                                    "range": [
                                        301,
                                        301
                                    ],
                                    "children": [],
                                    "content": ":"
                                },
                                {
                                    "type": "NotKeyword",
                                    "name": "not",
                                    "range": [
                                        302,
                                        302
                                    ],
                                    "children": [],
                                    "content": "DEFAULT_USER_ID"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "user",
                                    "range": [
                                        303,
                                        303
                                    ],
                                    "children": [],
                                    "content": "}"
                                }
                            ],
                            "content": ":DEFAULT_USER_ID})\n"
                        },
                        {
                            "type": "BlockStatement",
                            "name": "",
                            "range": [
                                306,
                                338
                            ],
                            "children": [
                                {
                                    "type": "VariableDecl",
                                    "name": "user = await prisma.user.create(data={\"id\": DEFAULT_USER_ID, \"email\": \"default@example.com\", \"name\": \"Default User\"})",
                                    "range": [
                                        306,
                                        337
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "user",
                                            "range": [
                                                306,
                                                306
                                            ],
                                            "children": [],
                                            "content": "if"
                                        },
                                        {
                                            "type": "AssignmentOperator",
                                            "name": "=",
                                            "range": [
                                                307,
                                                307
                                            ],
                                            "children": [],
                                            "content": "not"
                                        },
                                        {
                                            "type": "AwaitExpression",
                                            "name": "await prisma.user.create(data={\"id\": DEFAULT_USER_ID, \"email\": \"default@example.com\", \"name\": \"Default User\"})",
                                            "range": [
                                                308,
                                                337
                                            ],
                                            "children": [
                                                {
                                                    "type": "AwaitKeyword",
                                                    "name": "await",
                                                    "range": [
                                                        308,
                                                        308
                                                    ],
                                                    "children": [],
                                                    "content": "user"
                                                },
                                                {
                                                    "type": "CallExpression",
                                                    "name": "prisma.user.create(data={\"id\": DEFAULT_USER_ID, \"email\": \"default@example.com\", \"name\": \"Default User\"})",
                                                    "range": [
                                                        309,
                                                        337
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "prisma",
                                                            "range": [
                                                                309,
                                                                309
                                                            ],
                                                            "children": [],
                                                            "content": ":"
                                                        },
                                                        {
                                                            "type": "MemberExpression",
                                                            "name": "user",
                                                            "range": [
                                                                311,
                                                                311
                                                            ],
                                                            "children": [],
                                                            "content": "user"
                                                        },
                                                        {
                                                            "type": "MemberExpression",
                                                            "name": "create",
                                                            "range": [
                                                                313,
                                                                313
                                                            ],
                                                            "children": [],
                                                            "content": "await"
                                                        },
                                                        {
                                                            "type": "ArgumentList",
                                                            "name": "(data={\"id\": DEFAULT_USER_ID, \"email\": \"default@example.com\", \"name\": \"Default User\"})",
                                                            "range": [
                                                                314,
                                                                337
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "NamedArgument",
                                                                    "name": "data={\"id\": DEFAULT_USER_ID, \"email\": \"default@example.com\", \"name\": \"Default User\"}",
                                                                    "range": [
                                                                        316,
                                                                        335
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "data",
                                                                            "range": [
                                                                                316,
                                                                                316
                                                                            ],
                                                                            "children": [],
                                                                            "content": "user"
                                                                        },
                                                                        {
                                                                            "type": "AssignmentOperator",
                                                                            "name": "=",
                                                                            "range": [
                                                                                317,
                                                                                317
                                                                            ],
                                                                            "children": [],
                                                                            "content": "."
                                                                        },
                                                                        {
                                                                            "type": "ObjectExpression",
                                                                            "name": "{\"id\": DEFAULT_USER_ID, \"email\": \"default@example.com\", \"name\": \"Default User\"}",
                                                                            "range": [
                                                                                318,
                                                                                335
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "Property",
                                                                                    "name": "\"id\": DEFAULT_USER_ID",
                                                                                    "range": [
                                                                                        320,
                                                                                        322
                                                                                    ],
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "Literal",
                                                                                            "name": "\"id\"",
                                                                                            "range": [
                                                                                                320,
                                                                                                320
                                                                                            ],
                                                                                            "children": [],
                                                                                            "content": "\n"
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "DEFAULT_USER_ID",
                                                                                            "range": [
                                                                                                322,
                                                                                                322
                                                                                            ],
                                                                                            "children": [],
                                                                                            "content": "="
                                                                                        }
                                                                                    ],
                                                                                    "content": "\ndata="
                                                                                },
                                                                                {
                                                                                    "type": "Property",
                                                                                    "name": "\"email\": \"default@example.com\"",
                                                                                    "range": [
                                                                                        325,
                                                                                        327
                                                                                    ],
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "Literal",
                                                                                            "name": "\"email\"",
                                                                                            "range": [
                                                                                                325,
                                                                                                325
                                                                                            ],
                                                                                            "children": [],
                                                                                            "content": "\"id\""
                                                                                        },
                                                                                        {
                                                                                            "type": "Literal",
                                                                                            "name": "\"default@example.com\"",
                                                                                            "range": [
                                                                                                327,
                                                                                                327
                                                                                            ],
                                                                                            "children": [],
                                                                                            "content": "DEFAULT_USER_ID"
                                                                                        }
                                                                                    ],
                                                                                    "content": "\"id\":DEFAULT_USER_ID"
                                                                                },
                                                                                {
                                                                                    "type": "Property",
                                                                                    "name": "\"name\": \"Default User\"",
                                                                                    "range": [
                                                                                        330,
                                                                                        332
                                                                                    ],
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "Literal",
                                                                                            "name": "\"name\"",
                                                                                            "range": [
                                                                                                330,
                                                                                                330
                                                                                            ],
                                                                                            "children": [],
                                                                                            "content": "\"email\""
                                                                                        },
                                                                                        {
                                                                                            "type": "Literal",
                                                                                            "name": "\"Default User\"",
                                                                                            "range": [
                                                                                                332,
                                                                                                332
                                                                                            ],
                                                                                            "children": [],
                                                                                            "content": "\"default@example.com\""
                                                                                        }
                                                                                    ],
                                                                                    "content": "\"email\":\"default@example.com\""
                                                                                }
                                                                            ],
                                                                            "content": "create(\ndata={\n\"id\":DEFAULT_USER_ID,\n\"email\":\"default@example.com\",\n\"name\""
                                                                        }
                                                                    ],
                                                                    "content": "user.create(\ndata={\n\"id\":DEFAULT_USER_ID,\n\"email\":\"default@example.com\",\n\"name\""
                                                                }
                                                            ],
                                                            "content": "prisma.user.create(\ndata={\n\"id\":DEFAULT_USER_ID,\n\"email\":\"default@example.com\",\n\"name\":\"Default User\""
                                                        }
                                                    ],
                                                    "content": ":\nuser=await prisma.user.create(\ndata={\n\"id\":DEFAULT_USER_ID,\n\"email\":\"default@example.com\",\n\"name\":\"Default User\""
                                                }
                                            ],
                                            "content": "user:\nuser=await prisma.user.create(\ndata={\n\"id\":DEFAULT_USER_ID,\n\"email\":\"default@example.com\",\n\"name\":\"Default User\""
                                        }
                                    ],
                                    "content": "if not user:\nuser=await prisma.user.create(\ndata={\n\"id\":DEFAULT_USER_ID,\n\"email\":\"default@example.com\",\n\"name\":\"Default User\""
                                }
                            ],
                            "content": "if not user:\nuser=await prisma.user.create(\ndata={\n\"id\":DEFAULT_USER_ID,\n\"email\":\"default@example.com\",\n\"name\":\"Default User\","
                        },
                        {
                            "type": "ReturnStatement",
                            "name": "return User.model_validate(user)",
                            "range": [
                                339,
                                345
                            ],
                            "children": [
                                {
                                    "type": "ReturnKeyword",
                                    "name": "return",
                                    "range": [
                                        339,
                                        339
                                    ],
                                    "children": [],
                                    "content": "\n"
                                },
                                {
                                    "type": "CallExpression",
                                    "name": "User.model_validate(user)",
                                    "range": [
                                        340,
                                        345
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "User",
                                            "range": [
                                                340,
                                                340
                                            ],
                                            "children": [],
                                            "content": "}"
                                        },
                                        {
                                            "type": "MemberExpression",
                                            "name": "model_validate",
                                            "range": [
                                                342,
                                                342
                                            ],
                                            "children": [],
                                            "content": ")"
                                        },
                                        {
                                            "type": "ArgumentList",
                                            "name": "(user)",
                                            "range": [
                                                343,
                                                345
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "user",
                                                    "range": [
                                                        344,
                                                        344
                                                    ],
                                                    "children": [],
                                                    "content": "return"
                                                }
                                            ],
                                            "content": "\nreturn User"
                                        }
                                    ],
                                    "content": "}\n)\nreturn User"
                                }
                            ],
                            "content": "\n}\n)\nreturn User"
                        }
                    ],
                    "content": "Optional[User]:\nuser=await prisma.user.find_unique(where={\"id\":DEFAULT_USER_ID})\nif not user:\nuser=await prisma.user.create(\ndata={\n\"id\":DEFAULT_USER_ID,\n\"email\":\"default@example.com\",\n\"name\":\"Default User\",\n}\n)\nreturn User."
                }
            ],
            "content": "else None\n\n\nasync def create_default_user()->Optional[User]:\nuser=await prisma.user.find_unique(where={\"id\":DEFAULT_USER_ID})\nif not user:\nuser=await prisma.user.create(\ndata={\n\"id\":DEFAULT_USER_ID,\n\"email\":\"default@example.com\",\n\"name\":\"Default User\",\n}\n)\nreturn User."
        },
        {
            "type": "FunctionDecl",
            "name": "get_user_metadata",
            "range": [
                347,
                402
            ],
            "children": [
                {
                    "type": "AsyncKeyword",
                    "name": "async",
                    "range": [
                        347,
                        351
                    ],
                    "children": [],
                    "content": "model_validate(user)\n"
                },
                {
                    "type": "DefKeyword",
                    "name": "def",
                    "range": [
                        348,
                        351
                    ],
                    "children": [],
                    "content": "(user)\n"
                },
                {
                    "type": "FunctionName",
                    "name": "get_user_metadata",
                    "range": [
                        349,
                        366
                    ],
                    "children": [],
                    "content": "user)\n\n\nasync def get_user_metadata(user_id:str)->UserMetadata:\n"
                },
                {
                    "type": "ParameterList",
                    "name": "parameters",
                    "range": [
                        350,
                        354
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "user_id",
                            "range": [
                                351,
                                357
                            ],
                            "children": [
                                {
                                    "type": "ParameterName",
                                    "name": "user_id",
                                    "range": [
                                        351,
                                        357
                                    ],
                                    "children": [],
                                    "content": "\n\n\nasync def get_user_metadata("
                                },
                                {
                                    "type": "TypeAnnotation",
                                    "name": "str",
                                    "range": [
                                        352,
                                        355
                                    ],
                                    "children": [],
                                    "content": "\n\nasync def"
                                }
                            ],
                            "content": "\n\n\nasync def get_user_metadata("
                        }
                    ],
                    "content": ")\n\n\nasync"
                },
                {
                    "type": "ReturnType",
                    "name": "UserMetadata",
                    "range": [
                        355,
                        363
                    ],
                    "children": [],
                    "content": "def get_user_metadata(user_id:str)->"
                },
                {
                    "type": "FunctionBody",
                    "name": "body",
                    "range": [
                        358,
                        402
                    ],
                    "children": [
                        {
                            "type": "VariableDecl",
                            "name": "user",
                            "range": [
                                360,
                                381
                            ],
                            "children": [
                                {
                                    "type": "VariableName",
                                    "name": "user",
                                    "range": [
                                        360,
                                        364
                                    ],
                                    "children": [],
                                    "content": "str)->UserMetadata"
                                },
                                {
                                    "type": "Assignment",
                                    "name": "=",
                                    "range": [
                                        361,
                                        362
                                    ],
                                    "children": [],
                                    "content": ")-"
                                },
                                {
                                    "type": "AwaitExpression",
                                    "name": "await",
                                    "range": [
                                        362,
                                        367
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "User.prisma().find_unique_or_raise",
                                            "range": [
                                                363,
                                                381
                                            ],
                                            "children": [
                                                {
                                                    "type": "MemberExpression",
                                                    "name": "User.prisma",
                                                    "range": [
                                                        363,
                                                        371
                                                    ],
                                                    "children": [],
                                                    "content": ">UserMetadata:\nuser=await User."
                                                },
                                                {
                                                    "type": "CallExpression",
                                                    "name": "find_unique_or_raise",
                                                    "range": [
                                                        369,
                                                        381
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "ArgumentList",
                                                            "name": "arguments",
                                                            "range": [
                                                                370,
                                                                380
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "ObjectExpression",
                                                                    "name": "where",
                                                                    "range": [
                                                                        372,
                                                                        378
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Property",
                                                                            "name": "id",
                                                                            "range": [
                                                                                375,
                                                                                377
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "Key",
                                                                                    "name": "id",
                                                                                    "range": [
                                                                                        375,
                                                                                        377
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": ".find_unique_or_raise("
                                                                                },
                                                                                {
                                                                                    "type": "Value",
                                                                                    "name": "user_id",
                                                                                    "range": [
                                                                                        377,
                                                                                        377
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "("
                                                                                }
                                                                            ],
                                                                            "content": ".find_unique_or_raise("
                                                                        }
                                                                    ],
                                                                    "content": "prisma().find_unique_or_raise(\n"
                                                                }
                                                            ],
                                                            "content": "User.prisma().find_unique_or_raise(\nwhere="
                                                        }
                                                    ],
                                                    "content": "await User.prisma().find_unique_or_raise(\nwhere={"
                                                }
                                            ],
                                            "content": ">UserMetadata:\nuser=await User.prisma().find_unique_or_raise(\nwhere={"
                                        }
                                    ],
                                    "content": "->UserMetadata:\nuser"
                                }
                            ],
                            "content": "str)->UserMetadata:\nuser=await User.prisma().find_unique_or_raise(\nwhere={"
                        },
                        {
                            "type": "VariableDecl",
                            "name": "metadata",
                            "range": [
                                384,
                                393
                            ],
                            "children": [
                                {
                                    "type": "VariableName",
                                    "name": "metadata",
                                    "range": [
                                        384,
                                        392
                                    ],
                                    "children": [],
                                    "content": "user_id},\n)\n\nmetadata="
                                },
                                {
                                    "type": "Assignment",
                                    "name": "=",
                                    "range": [
                                        385,
                                        386
                                    ],
                                    "children": [],
                                    "content": "},"
                                },
                                {
                                    "type": "CastExpression",
                                    "name": "cast",
                                    "range": [
                                        386,
                                        393
                                    ],
                                    "children": [
                                        {
                                            "type": "Type",
                                            "name": "UserMetadataRaw",
                                            "range": [
                                                388,
                                                402
                                            ],
                                            "children": [],
                                            "content": ")\n\nmetadata=cast(UserMetadataRaw,user.metadata)\nreturn"
                                        },
                                        {
                                            "type": "Value",
                                            "name": "user.metadata",
                                            "range": [
                                                390,
                                                393
                                            ],
                                            "children": [],
                                            "content": "\nmetadata=cast"
                                        }
                                    ],
                                    "content": ",\n)\n\nmetadata=cast"
                                }
                            ],
                            "content": "user_id},\n)\n\nmetadata=cast"
                        },
                        {
                            "type": "ReturnStatement",
                            "name": "return",
                            "range": [
                                395,
                                402
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "UserMetadata.model_validate",
                                    "range": [
                                        396,
                                        402
                                    ],
                                    "children": [
                                        {
                                            "type": "MemberExpression",
                                            "name": "UserMetadata.model_validate",
                                            "range": [
                                                396,
                                                402
                                            ],
                                            "children": [],
                                            "content": ",user.metadata)\nreturn"
                                        },
                                        {
                                            "type": "ArgumentList",
                                            "name": "arguments",
                                            "range": [
                                                399,
                                                401
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "metadata",
                                                    "range": [
                                                        400,
                                                        401
                                                    ],
                                                    "children": [],
                                                    "content": ")\n"
                                                }
                                            ],
                                            "content": "metadata)\n"
                                        }
                                    ],
                                    "content": ",user.metadata)\nreturn"
                                }
                            ],
                            "content": "UserMetadataRaw,user.metadata)\nreturn"
                        }
                    ],
                    "content": "user_id:str)->UserMetadata:\nuser=await User.prisma().find_unique_or_raise(\nwhere={\"id\":user_id},\n)\n\nmetadata=cast(UserMetadataRaw,user.metadata)\nreturn"
                }
            ],
            "content": "model_validate(user)\n\n\nasync def get_user_metadata(user_id:str)->UserMetadata:\nuser=await User.prisma().find_unique_or_raise(\nwhere={\"id\":user_id},\n)\n\nmetadata=cast(UserMetadataRaw,user.metadata)\nreturn"
        },
        {
            "type": "FunctionDecl",
            "name": "update_user_metadata",
            "range": [
                403,
                453
            ],
            "children": [
                {
                    "type": "Keyword",
                    "name": "async",
                    "range": [
                        403,
                        403
                    ],
                    "children": [],
                    "content": "UserMetadata"
                },
                {
                    "type": "Keyword",
                    "name": "def",
                    "range": [
                        404,
                        404
                    ],
                    "children": [],
                    "content": "."
                },
                {
                    "type": "Identifier",
                    "name": "update_user_metadata",
                    "range": [
                        405,
                        405
                    ],
                    "children": [],
                    "content": "model_validate"
                },
                {
                    "type": "Parameter",
                    "name": "user_id",
                    "range": [
                        407,
                        409
                    ],
                    "children": [
                        {
                            "type": "Identifier",
                            "name": "user_id",
                            "range": [
                                407,
                                407
                            ],
                            "children": [],
                            "content": "metadata"
                        },
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                409,
                                409
                            ],
                            "children": [],
                            "content": "\n"
                        }
                    ],
                    "content": "metadata)\n"
                },
                {
                    "type": "Parameter",
                    "name": "metadata",
                    "range": [
                        411,
                        413
                    ],
                    "children": [
                        {
                            "type": "Identifier",
                            "name": "metadata",
                            "range": [
                                411,
                                411
                            ],
                            "children": [],
                            "content": "\n"
                        },
                        {
                            "type": "TypeAnnotation",
                            "name": "UserMetadata",
                            "range": [
                                413,
                                413
                            ],
                            "children": [],
                            "content": "def"
                        }
                    ],
                    "content": "\nasync def"
                },
                {
                    "type": "BlockStatement",
                    "name": "",
                    "range": [
                        416,
                        453
                    ],
                    "children": [
                        {
                            "type": "Keyword",
                            "name": "await",
                            "range": [
                                417,
                                417
                            ],
                            "children": [],
                            "content": ":"
                        },
                        {
                            "type": "MemberExpression",
                            "name": "User.prisma",
                            "range": [
                                418,
                                420
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "User",
                                    "range": [
                                        418,
                                        418
                                    ],
                                    "children": [],
                                    "content": "str"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "prisma",
                                    "range": [
                                        420,
                                        420
                                    ],
                                    "children": [],
                                    "content": "metadata"
                                }
                            ],
                            "content": "str,metadata"
                        },
                        {
                            "type": "CallExpression",
                            "name": "",
                            "range": [
                                421,
                                452
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "update",
                                    "range": [
                                        424,
                                        424
                                    ],
                                    "children": [],
                                    "content": ":"
                                },
                                {
                                    "type": "ObjectExpression",
                                    "name": "",
                                    "range": [
                                        426,
                                        449
                                    ],
                                    "children": [
                                        {
                                            "type": "Property",
                                            "name": "where",
                                            "range": [
                                                427,
                                                433
                                            ],
                                            "children": [
                                                {
                                                    "type": "ObjectExpression",
                                                    "name": "",
                                                    "range": [
                                                        429,
                                                        433
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Property",
                                                            "name": "id",
                                                            "range": [
                                                                430,
                                                                432
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Literal",
                                                                    "name": "\"id\"",
                                                                    "range": [
                                                                        430,
                                                                        430
                                                                    ],
                                                                    "children": [],
                                                                    "content": "("
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "user_id",
                                                                    "range": [
                                                                        432,
                                                                        432
                                                                    ],
                                                                    "children": [],
                                                                    "content": "."
                                                                }
                                                            ],
                                                            "content": "()."
                                                        }
                                                    ],
                                                    "content": "prisma().update"
                                                }
                                            ],
                                            "content": "User.prisma().update"
                                        },
                                        {
                                            "type": "Property",
                                            "name": "data",
                                            "range": [
                                                435,
                                                449
                                            ],
                                            "children": [
                                                {
                                                    "type": "ObjectExpression",
                                                    "name": "",
                                                    "range": [
                                                        437,
                                                        449
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Property",
                                                            "name": "metadata",
                                                            "range": [
                                                                438,
                                                                448
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Literal",
                                                                    "name": "\"metadata\"",
                                                                    "range": [
                                                                        438,
                                                                        438
                                                                    ],
                                                                    "children": [],
                                                                    "content": "{"
                                                                },
                                                                {
                                                                    "type": "CallExpression",
                                                                    "name": "Json",
                                                                    "range": [
                                                                        440,
                                                                        448
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "Json",
                                                                            "range": [
                                                                                440,
                                                                                440
                                                                            ],
                                                                            "children": [],
                                                                            "content": ":"
                                                                        },
                                                                        {
                                                                            "type": "MemberExpression",
                                                                            "name": "metadata.model_dump",
                                                                            "range": [
                                                                                442,
                                                                                445
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "metadata",
                                                                                    "range": [
                                                                                        442,
                                                                                        442
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "}"
                                                                                },
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "model_dump",
                                                                                    "range": [
                                                                                        444,
                                                                                        444
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "\n"
                                                                                }
                                                                            ],
                                                                            "content": "},\ndata"
                                                                        }
                                                                    ],
                                                                    "content": ":user_id},\ndata={\"metadata\""
                                                                }
                                                            ],
                                                            "content": "{\"id\":user_id},\ndata={\"metadata\""
                                                        }
                                                    ],
                                                    "content": "={\"id\":user_id},\ndata={\"metadata\":"
                                                }
                                            ],
                                            "content": "\nwhere={\"id\":user_id},\ndata={\"metadata\":"
                                        }
                                    ],
                                    "content": "await User.prisma().update(\nwhere={\"id\":user_id},\ndata={\"metadata\":"
                                }
                            ],
                            "content": ":UserMetadata):\nawait User.prisma().update(\nwhere={\"id\":user_id},\ndata={\"metadata\":Json(metadata"
                        }
                    ],
                    "content": "user_id:str,metadata:UserMetadata):\nawait User.prisma().update(\nwhere={\"id\":user_id},\ndata={\"metadata\":Json(metadata."
                }
            ],
            "content": "UserMetadata.model_validate(metadata)\n\n\nasync def update_user_metadata(user_id:str,metadata:UserMetadata):\nawait User.prisma().update(\nwhere={\"id\":user_id},\ndata={\"metadata\":Json(metadata."
        },
        {
            "type": "FunctionDecl",
            "name": "get_user_integrations",
            "range": [
                454,
                526
            ],
            "children": [
                {
                    "type": "AsyncKeyword",
                    "name": "async",
                    "range": [
                        454,
                        454
                    ],
                    "children": [],
                    "content": "model_dump"
                },
                {
                    "type": "DefKeyword",
                    "name": "def",
                    "range": [
                        455,
                        455
                    ],
                    "children": [],
                    "content": "("
                },
                {
                    "type": "Identifier",
                    "name": "get_user_integrations",
                    "range": [
                        456,
                        456
                    ],
                    "children": [],
                    "content": ")"
                },
                {
                    "type": "ParameterList",
                    "name": "parameters",
                    "range": [
                        457,
                        461
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "user_id",
                            "range": [
                                458,
                                458
                            ],
                            "children": [
                                {
                                    "type": "TypeAnnotation",
                                    "name": "str",
                                    "range": [
                                        460,
                                        460
                                    ],
                                    "children": [],
                                    "content": "\n"
                                }
                            ],
                            "content": "}"
                        }
                    ],
                    "content": ")},\n)"
                },
                {
                    "type": "ReturnType",
                    "name": "UserIntegrations",
                    "range": [
                        462,
                        464
                    ],
                    "children": [],
                    "content": "\n\n\n"
                },
                {
                    "type": "BlockStatement",
                    "name": "body",
                    "range": [
                        466,
                        526
                    ],
                    "children": [
                        {
                            "type": "VariableDecl",
                            "name": "user",
                            "range": [
                                467,
                                488
                            ],
                            "children": [
                                {
                                    "type": "AwaitExpression",
                                    "name": "await",
                                    "range": [
                                        469,
                                        469
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "User.prisma().find_unique_or_raise",
                                            "range": [
                                                470,
                                                488
                                            ],
                                            "children": [
                                                {
                                                    "type": "Argument",
                                                    "name": "where",
                                                    "range": [
                                                        479,
                                                        485
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "ObjectLiteral",
                                                            "name": "{\"id\": user_id}",
                                                            "range": [
                                                                481,
                                                                485
                                                            ],
                                                            "children": [],
                                                            "content": "User.prisma()"
                                                        }
                                                    ],
                                                    "content": "=await User.prisma()"
                                                }
                                            ],
                                            "content": ":str)->UserIntegrations:\nuser=await User.prisma().find_unique_or_raise("
                                        }
                                    ],
                                    "content": "user_id"
                                }
                            ],
                            "content": "get_user_integrations(user_id:str)->UserIntegrations:\nuser=await User.prisma().find_unique_or_raise("
                        },
                        {
                            "type": "VariableDecl",
                            "name": "encrypted_integrations",
                            "range": [
                                491,
                                496
                            ],
                            "children": [
                                {
                                    "type": "MemberExpression",
                                    "name": "user.integrations",
                                    "range": [
                                        493,
                                        495
                                    ],
                                    "children": [],
                                    "content": "\"id\":user_id"
                                }
                            ],
                            "content": "={\"id\":user_id}"
                        },
                        {
                            "type": "IfStatement",
                            "name": "if",
                            "range": [
                                497,
                                506
                            ],
                            "children": [
                                {
                                    "type": "Condition",
                                    "name": "not encrypted_integrations",
                                    "range": [
                                        498,
                                        499
                                    ],
                                    "children": [],
                                    "content": "\n)"
                                },
                                {
                                    "type": "BlockStatement",
                                    "name": "then",
                                    "range": [
                                        501,
                                        506
                                    ],
                                    "children": [
                                        {
                                            "type": "ReturnStatement",
                                            "name": "return UserIntegrations()",
                                            "range": [
                                                502,
                                                505
                                            ],
                                            "children": [],
                                            "content": "encrypted_integrations=user."
                                        }
                                    ],
                                    "content": "\nencrypted_integrations=user.integrations"
                                }
                            ],
                            "content": ",\n)\n\nencrypted_integrations=user.integrations"
                        },
                        {
                            "type": "ElseStatement",
                            "name": "else",
                            "range": [
                                507,
                                526
                            ],
                            "children": [
                                {
                                    "type": "BlockStatement",
                                    "name": "else",
                                    "range": [
                                        509,
                                        526
                                    ],
                                    "children": [
                                        {
                                            "type": "ReturnStatement",
                                            "name": "return UserIntegrations.model_validate(JSONCryptor().decrypt(encrypted_integrations))",
                                            "range": [
                                                510,
                                                525
                                            ],
                                            "children": [
                                                {
                                                    "type": "CallExpression",
                                                    "name": "UserIntegrations.model_validate",
                                                    "range": [
                                                        511,
                                                        525
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "CallExpression",
                                                            "name": "JSONCryptor().decrypt",
                                                            "range": [
                                                                516,
                                                                523
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Argument",
                                                                    "name": "encrypted_integrations",
                                                                    "range": [
                                                                        522,
                                                                        522
                                                                    ],
                                                                    "children": [],
                                                                    "content": "UserIntegrations"
                                                                }
                                                            ],
                                                            "content": ")\nelse:\nreturn UserIntegrations."
                                                        }
                                                    ],
                                                    "content": ":\nreturn UserIntegrations()\nelse:\nreturn UserIntegrations.model_validate("
                                                }
                                            ],
                                            "content": "encrypted_integrations:\nreturn UserIntegrations()\nelse:\nreturn UserIntegrations.model_validate("
                                        }
                                    ],
                                    "content": "not encrypted_integrations:\nreturn UserIntegrations()\nelse:\nreturn UserIntegrations.model_validate(\n"
                                }
                            ],
                            "content": "\nif not encrypted_integrations:\nreturn UserIntegrations()\nelse:\nreturn UserIntegrations.model_validate(\n"
                        }
                    ],
                    "content": "def get_user_integrations(user_id:str)->UserIntegrations:\nuser=await User.prisma().find_unique_or_raise(\nwhere={\"id\":user_id},\n)\n\nencrypted_integrations=user.integrations\nif not encrypted_integrations:\nreturn UserIntegrations()\nelse:\nreturn UserIntegrations.model_validate(\n"
                }
            ],
            "content": "model_dump())},\n)\n\n\nasync def get_user_integrations(user_id:str)->UserIntegrations:\nuser=await User.prisma().find_unique_or_raise(\nwhere={\"id\":user_id},\n)\n\nencrypted_integrations=user.integrations\nif not encrypted_integrations:\nreturn UserIntegrations()\nelse:\nreturn UserIntegrations.model_validate(\n"
        },
        {
            "type": "FunctionDecl",
            "name": "update_user_integrations",
            "range": [
                527,
                585
            ],
            "children": [
                {
                    "type": "Keyword",
                    "name": "async",
                    "range": [
                        527,
                        531
                    ],
                    "children": [],
                    "content": "JSONCryptor().decrypt"
                },
                {
                    "type": "Keyword",
                    "name": "def",
                    "range": [
                        528,
                        531
                    ],
                    "children": [],
                    "content": "().decrypt"
                },
                {
                    "type": "Identifier",
                    "name": "update_user_integrations",
                    "range": [
                        529,
                        553
                    ],
                    "children": [],
                    "content": ").decrypt(encrypted_integrations)\n)\n\n\nasync def update_user_integrations(user_id:str,data:UserIntegrations):\n"
                },
                {
                    "type": "ParameterList",
                    "name": "",
                    "range": [
                        530,
                        538
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "user_id",
                            "range": [
                                531,
                                537
                            ],
                            "children": [
                                {
                                    "type": "TypeAnnotation",
                                    "name": "str",
                                    "range": [
                                        533,
                                        536
                                    ],
                                    "children": [],
                                    "content": "encrypted_integrations)\n)"
                                }
                            ],
                            "content": "decrypt(encrypted_integrations)\n)\n"
                        },
                        {
                            "type": "Parameter",
                            "name": "data",
                            "range": [
                                535,
                                537
                            ],
                            "children": [
                                {
                                    "type": "TypeAnnotation",
                                    "name": "UserIntegrations",
                                    "range": [
                                        537,
                                        537
                                    ],
                                    "children": [],
                                    "content": "\n"
                                }
                            ],
                            "content": "\n)\n"
                        }
                    ],
                    "content": ".decrypt(encrypted_integrations)\n)\n\n"
                },
                {
                    "type": "BlockStatement",
                    "name": "",
                    "range": [
                        539,
                        585
                    ],
                    "children": [
                        {
                            "type": "VariableDecl",
                            "name": "encrypted_data",
                            "range": [
                                541,
                                554
                            ],
                            "children": [
                                {
                                    "type": "AssignmentExpression",
                                    "name": "=",
                                    "range": [
                                        542,
                                        554
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "JSONCryptor.encrypt",
                                            "range": [
                                                543,
                                                554
                                            ],
                                            "children": [
                                                {
                                                    "type": "CallExpression",
                                                    "name": "data.model_dump",
                                                    "range": [
                                                        549,
                                                        553
                                                    ],
                                                    "children": [],
                                                    "content": ":UserIntegrations):\n"
                                                }
                                            ],
                                            "content": "(user_id:str,data:UserIntegrations):\nencrypted_data"
                                        }
                                    ],
                                    "content": "update_user_integrations(user_id:str,data:UserIntegrations):\nencrypted_data"
                                }
                            ],
                            "content": "def update_user_integrations(user_id:str,data:UserIntegrations):\nencrypted_data"
                        },
                        {
                            "type": "ExpressionStatement",
                            "name": "await",
                            "range": [
                                556,
                                584
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "User.prisma.update",
                                    "range": [
                                        557,
                                        584
                                    ],
                                    "children": [
                                        {
                                            "type": "ObjectExpression",
                                            "name": "where",
                                            "range": [
                                                566,
                                                572
                                            ],
                                            "children": [
                                                {
                                                    "type": "Property",
                                                    "name": "id",
                                                    "range": [
                                                        569,
                                                        571
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "user_id",
                                                            "range": [
                                                                571,
                                                                571
                                                            ],
                                                            "children": [],
                                                            "content": "."
                                                        }
                                                    ],
                                                    "content": "await User."
                                                }
                                            ],
                                            "content": "))\nawait User.prisma"
                                        },
                                        {
                                            "type": "ObjectExpression",
                                            "name": "data",
                                            "range": [
                                                575,
                                                581
                                            ],
                                            "children": [
                                                {
                                                    "type": "Property",
                                                    "name": "integrations",
                                                    "range": [
                                                        578,
                                                        580
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "encrypted_data",
                                                            "range": [
                                                                580,
                                                                580
                                                            ],
                                                            "children": [],
                                                            "content": "="
                                                        }
                                                    ],
                                                    "content": "\nwhere="
                                                }
                                            ],
                                            "content": ".update(\nwhere={"
                                        }
                                    ],
                                    "content": "().encrypt(data.model_dump())\nawait User.prisma().update(\nwhere={\"id\":user_id"
                                }
                            ],
                            "content": "JSONCryptor().encrypt(data.model_dump())\nawait User.prisma().update(\nwhere={\"id\":user_id"
                        }
                    ],
                    "content": "\nasync def update_user_integrations(user_id:str,data:UserIntegrations):\nencrypted_data=JSONCryptor().encrypt(data.model_dump())\nawait User.prisma().update(\nwhere={\"id\":user_id}"
                }
            ],
            "content": "JSONCryptor().decrypt(encrypted_integrations)\n)\n\n\nasync def update_user_integrations(user_id:str,data:UserIntegrations):\nencrypted_data=JSONCryptor().encrypt(data.model_dump())\nawait User.prisma().update(\nwhere={\"id\":user_id}"
        },
        {
            "type": "FunctionDecl",
            "name": "migrate_and_encrypt_user_integrations",
            "range": [
                586,
                850
            ],
            "children": [
                {
                    "type": "AsyncKeyword",
                    "name": "async",
                    "range": [
                        586,
                        586
                    ],
                    "content": ","
                },
                {
                    "type": "DefKeyword",
                    "name": "def",
                    "range": [
                        587,
                        587
                    ],
                    "content": "\n"
                },
                {
                    "type": "FunctionName",
                    "name": "migrate_and_encrypt_user_integrations",
                    "range": [
                        588,
                        588
                    ],
                    "content": "data"
                },
                {
                    "type": "Parameters",
                    "name": "parameters",
                    "range": [
                        589,
                        590
                    ],
                    "children": [],
                    "content": "={"
                },
                {
                    "type": "Colon",
                    "name": ":",
                    "range": [
                        591,
                        591
                    ],
                    "content": "\"integrations\""
                },
                {
                    "type": "Docstring",
                    "name": "docstring",
                    "range": [
                        593,
                        595
                    ],
                    "children": [
                        {
                            "type": "Literal",
                            "name": "\"Migrate integration credentials and OAuth states from metadata to integrations column.\"",
                            "range": [
                                594,
                                594
                            ],
                            "content": "}"
                        }
                    ],
                    "content": "encrypted_data},"
                },
                {
                    "type": "AssignmentExpression",
                    "name": "assignment",
                    "range": [
                        597,
                        653
                    ],
                    "children": [
                        {
                            "type": "Identifier",
                            "name": "users",
                            "range": [
                                597,
                                597
                            ],
                            "content": ")"
                        },
                        {
                            "type": "AssignmentOperator",
                            "name": "=",
                            "range": [
                                598,
                                598
                            ],
                            "content": "\n"
                        },
                        {
                            "type": "AwaitKeyword",
                            "name": "await",
                            "range": [
                                599,
                                599
                            ],
                            "content": "\n"
                        },
                        {
                            "type": "Identifier",
                            "name": "User",
                            "range": [
                                600,
                                600
                            ],
                            "content": "\n"
                        },
                        {
                            "type": "Dot",
                            "name": ".",
                            "range": [
                                601,
                                601
                            ],
                            "content": "async"
                        },
                        {
                            "type": "Identifier",
                            "name": "prisma",
                            "range": [
                                602,
                                602
                            ],
                            "content": "def"
                        },
                        {
                            "type": "CallExpression",
                            "name": "call",
                            "range": [
                                603,
                                604
                            ],
                            "children": [],
                            "content": "migrate_and_encrypt_user_integrations("
                        },
                        {
                            "type": "Dot",
                            "name": ".",
                            "range": [
                                605,
                                605
                            ],
                            "content": ")"
                        },
                        {
                            "type": "Identifier",
                            "name": "find_many",
                            "range": [
                                606,
                                606
                            ],
                            "content": ":"
                        },
                        {
                            "type": "CallExpression",
                            "name": "call",
                            "range": [
                                607,
                                653
                            ],
                            "children": [
                                {
                                    "type": "KeywordArgument",
                                    "name": "where",
                                    "range": [
                                        609,
                                        651
                                    ],
                                    "children": [
                                        {
                                            "type": "Dictionary",
                                            "name": "dictionary",
                                            "range": [
                                                611,
                                                651
                                            ],
                                            "children": [
                                                {
                                                    "type": "KeyValuePair",
                                                    "name": "key_value_pair",
                                                    "range": [
                                                        613,
                                                        645
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Literal",
                                                            "name": "\"metadata\"",
                                                            "range": [
                                                                613,
                                                                613
                                                            ],
                                                            "content": "="
                                                        },
                                                        {
                                                            "type": "Colon",
                                                            "name": ":",
                                                            "range": [
                                                                614,
                                                                614
                                                            ],
                                                            "content": "await"
                                                        },
                                                        {
                                                            "type": "Dictionary",
                                                            "name": "dictionary",
                                                            "range": [
                                                                615,
                                                                645
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "KeyValuePair",
                                                                    "name": "key_value_pair",
                                                                    "range": [
                                                                        617,
                                                                        634
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Literal",
                                                                            "name": "\"path\"",
                                                                            "range": [
                                                                                617,
                                                                                617
                                                                            ],
                                                                            "content": "prisma"
                                                                        },
                                                                        {
                                                                            "type": "Colon",
                                                                            "name": ":",
                                                                            "range": [
                                                                                618,
                                                                                618
                                                                            ],
                                                                            "content": "("
                                                                        },
                                                                        {
                                                                            "type": "List",
                                                                            "name": "list",
                                                                            "range": [
                                                                                619,
                                                                                621
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "Literal",
                                                                                    "name": "\"integration_credentials\"",
                                                                                    "range": [
                                                                                        620,
                                                                                        620
                                                                                    ],
                                                                                    "content": "."
                                                                                }
                                                                            ],
                                                                            "content": ").find_many"
                                                                        }
                                                                    ],
                                                                    "content": "prisma().find_many(\nwhere={\n\"metadata\":{\n\"path\":["
                                                                },
                                                                {
                                                                    "type": "KeyValuePair",
                                                                    "name": "key_value_pair",
                                                                    "range": [
                                                                        624,
                                                                        633
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Literal",
                                                                            "name": "\"not\"",
                                                                            "range": [
                                                                                624,
                                                                                624
                                                                            ],
                                                                            "content": "where"
                                                                        },
                                                                        {
                                                                            "type": "Colon",
                                                                            "name": ":",
                                                                            "range": [
                                                                                625,
                                                                                625
                                                                            ],
                                                                            "content": "="
                                                                        },
                                                                        {
                                                                            "type": "CallExpression",
                                                                            "name": "call",
                                                                            "range": [
                                                                                626,
                                                                                633
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "Json",
                                                                                    "range": [
                                                                                        626,
                                                                                        626
                                                                                    ],
                                                                                    "content": "{"
                                                                                },
                                                                                {
                                                                                    "type": "Dictionary",
                                                                                    "name": "dictionary",
                                                                                    "range": [
                                                                                        628,
                                                                                        632
                                                                                    ],
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "KeyValuePair",
                                                                                            "name": "key_value_pair",
                                                                                            "range": [
                                                                                                629,
                                                                                                631
                                                                                            ],
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "Literal",
                                                                                                    "name": "\"a\"",
                                                                                                    "range": [
                                                                                                        629,
                                                                                                        629
                                                                                                    ],
                                                                                                    "content": ":"
                                                                                                },
                                                                                                {
                                                                                                    "type": "Colon",
                                                                                                    "name": ":",
                                                                                                    "range": [
                                                                                                        630,
                                                                                                        630
                                                                                                    ],
                                                                                                    "content": "{"
                                                                                                },
                                                                                                {
                                                                                                    "type": "Literal",
                                                                                                    "name": "\"yolo\"",
                                                                                                    "range": [
                                                                                                        631,
                                                                                                        631
                                                                                                    ],
                                                                                                    "content": "\n"
                                                                                                }
                                                                                            ],
                                                                                            "content": ":{\n"
                                                                                        }
                                                                                    ],
                                                                                    "content": "\"metadata\":{\n\"path\""
                                                                                }
                                                                            ],
                                                                            "content": "{\n\"metadata\":{\n\"path\":"
                                                                        }
                                                                    ],
                                                                    "content": "where={\n\"metadata\":{\n\"path\":"
                                                                }
                                                            ],
                                                            "content": "User.prisma().find_many(\nwhere={\n\"metadata\":{\n\"path\":[\"integration_credentials\"],\n\"not\":Json({\"a\":"
                                                        }
                                                    ],
                                                    "content": "=await User.prisma().find_many(\nwhere={\n\"metadata\":{\n\"path\":[\"integration_credentials\"],\n\"not\":Json({\"a\":"
                                                }
                                            ],
                                            "content": "\nusers=await User.prisma().find_many(\nwhere={\n\"metadata\":{\n\"path\":[\"integration_credentials\"],\n\"not\":Json({\"a\":\"yolo\"}),#bogus"
                                        }
                                    ],
                                    "content": "\"Migrate integration credentials and OAuth states from metadata to integrations column.\"\"\"\nusers=await User.prisma().find_many(\nwhere={\n\"metadata\":{\n\"path\":[\"integration_credentials\"],\n\"not\":Json({\"a\":\"yolo\"}),#bogus"
                                }
                            ],
                            "content": "\n\"\"\"Migrate integration credentials and OAuth states from metadata to integrations column.\"\"\"\nusers=await User.prisma().find_many(\nwhere={\n\"metadata\":{\n\"path\":[\"integration_credentials\"],\n\"not\":Json({\"a\":\"yolo\"}),#bogus value works"
                        }
                    ],
                    "content": ")\n\n\nasync def migrate_and_encrypt_user_integrations():\n\"\"\"Migrate integration credentials and OAuth states from metadata to integrations column.\"\"\"\nusers=await User.prisma().find_many(\nwhere={\n\"metadata\":{\n\"path\":[\"integration_credentials\"],\n\"not\":Json({\"a\":\"yolo\"}),#bogus value works"
                },
                {
                    "type": "ExpressionStatement",
                    "name": "logging",
                    "range": [
                        655,
                        661
                    ],
                    "children": [
                        {
                            "type": "Identifier",
                            "name": "logger",
                            "range": [
                                655,
                                655
                            ],
                            "content": "check"
                        },
                        {
                            "type": "Dot",
                            "name": ".",
                            "range": [
                                656,
                                656
                            ],
                            "content": "if"
                        },
                        {
                            "type": "Identifier",
                            "name": "info",
                            "range": [
                                657,
                                657
                            ],
                            "content": "key"
                        },
                        {
                            "type": "CallExpression",
                            "name": "call",
                            "range": [
                                658,
                                661
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "f\"Migrating integration credentials for {len(users)} users\"",
                                    "range": [
                                        660,
                                        660
                                    ],
                                    "content": "}"
                                }
                            ],
                            "content": "exists\n}#"
                        }
                    ],
                    "content": "check if key exists\n}#"
                },
                {
                    "type": "ForStatement",
                    "name": "for_loop",
                    "range": [
                        664,
                        850
                    ],
                    "children": [
                        {
                            "type": "ForKeyword",
                            "name": "for",
                            "range": [
                                664,
                                664
                            ],
                            "content": "ignore"
                        },
                        {
                            "type": "Identifier",
                            "name": "user",
                            "range": [
                                665,
                                665
                            ],
                            "content": "\n"
                        },
                        {
                            "type": "InKeyword",
                            "name": "in",
                            "range": [
                                666,
                                666
                            ],
                            "content": "}"
                        },
                        {
                            "type": "Identifier",
                            "name": "users",
                            "range": [
                                667,
                                667
                            ],
                            "content": "\n"
                        },
                        {
                            "type": "Colon",
                            "name": ":",
                            "range": [
                                668,
                                668
                            ],
                            "content": ")"
                        },
                        {
                            "type": "AssignmentExpression",
                            "name": "assignment",
                            "range": [
                                670,
                                679
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "raw_metadata",
                                    "range": [
                                        670,
                                        670
                                    ],
                                    "content": "logger"
                                },
                                {
                                    "type": "AssignmentOperator",
                                    "name": "=",
                                    "range": [
                                        671,
                                        671
                                    ],
                                    "content": "."
                                },
                                {
                                    "type": "Identifier",
                                    "name": "cast",
                                    "range": [
                                        672,
                                        672
                                    ],
                                    "content": "info"
                                },
                                {
                                    "type": "CallExpression",
                                    "name": "call",
                                    "range": [
                                        673,
                                        679
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "UserMetadataRaw",
                                            "range": [
                                                674,
                                                674
                                            ],
                                            "content": "f"
                                        },
                                        {
                                            "type": "Comma",
                                            "name": ",",
                                            "range": [
                                                675,
                                                675
                                            ],
                                            "content": "\"Migrating integration credentials for {len(users)} users\""
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "user",
                                            "range": [
                                                676,
                                                676
                                            ],
                                            "content": ")"
                                        },
                                        {
                                            "type": "Dot",
                                            "name": ".",
                                            "range": [
                                                677,
                                                677
                                            ],
                                            "content": "\n"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "metadata",
                                            "range": [
                                                678,
                                                678
                                            ],
                                            "content": "\n"
                                        }
                                    ],
                                    "content": "(f \"Migrating integration credentials for {len(users)} users\")\n\nfor"
                                }
                            ],
                            "content": "logger.info(f \"Migrating integration credentials for {len(users)} users\")\n\nfor"
                        },
                        {
                            "type": "AssignmentExpression",
                            "name": "assignment",
                            "range": [
                                681,
                                688
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "metadata",
                                    "range": [
                                        681,
                                        681
                                    ],
                                    "content": "in"
                                },
                                {
                                    "type": "AssignmentOperator",
                                    "name": "=",
                                    "range": [
                                        682,
                                        682
                                    ],
                                    "content": "users"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "UserMetadata",
                                    "range": [
                                        683,
                                        683
                                    ],
                                    "content": ":"
                                },
                                {
                                    "type": "Dot",
                                    "name": ".",
                                    "range": [
                                        684,
                                        684
                                    ],
                                    "content": "\n"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "model_validate",
                                    "range": [
                                        685,
                                        685
                                    ],
                                    "content": "raw_metadata"
                                },
                                {
                                    "type": "CallExpression",
                                    "name": "call",
                                    "range": [
                                        686,
                                        688
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "raw_metadata",
                                            "range": [
                                                687,
                                                687
                                            ],
                                            "content": "cast"
                                        }
                                    ],
                                    "content": "=cast("
                                }
                            ],
                            "content": "in users:\nraw_metadata=cast("
                        },
                        {
                            "type": "AssignmentExpression",
                            "name": "assignment",
                            "range": [
                                697,
                                707
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "integrations",
                                    "range": [
                                        697,
                                        697
                                    ],
                                    "content": "="
                                },
                                {
                                    "type": "AssignmentOperator",
                                    "name": "=",
                                    "range": [
                                        698,
                                        698
                                    ],
                                    "content": "UserMetadata"
                                },
                                {
                                    "type": "AwaitKeyword",
                                    "name": "await",
                                    "range": [
                                        699,
                                        699
                                    ],
                                    "content": "."
                                },
                                {
                                    "type": "Identifier",
                                    "name": "get_user_integrations",
                                    "range": [
                                        700,
                                        700
                                    ],
                                    "content": "model_validate"
                                },
                                {
                                    "type": "CallExpression",
                                    "name": "call",
                                    "range": [
                                        701,
                                        707
                                    ],
                                    "children": [
                                        {
                                            "type": "KeywordArgument",
                                            "name": "user_id",
                                            "range": [
                                                702,
                                                706
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "user",
                                                    "range": [
                                                        704,
                                                        704
                                                    ],
                                                    "content": "\n"
                                                },
                                                {
                                                    "type": "Dot",
                                                    "name": ".",
                                                    "range": [
                                                        705,
                                                        705
                                                    ],
                                                    "content": "\n"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "id",
                                                    "range": [
                                                        706,
                                                        706
                                                    ],
                                                    "content": "#"
                                                }
                                            ],
                                            "content": "raw_metadata)\n\n#"
                                        }
                                    ],
                                    "content": "(raw_metadata)\n\n#Get"
                                }
                            ],
                            "content": "=UserMetadata.model_validate(raw_metadata)\n\n#Get"
                        },
                        {
                            "type": "IfStatement",
                            "name": "if_statement",
                            "range": [
                                722,
                                740
                            ],
                            "children": [
                                {
                                    "type": "IfKeyword",
                                    "name": "if",
                                    "range": [
                                        722,
                                        722
                                    ],
                                    "content": ")"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "metadata",
                                    "range": [
                                        723,
                                        723
                                    ],
                                    "content": "\n"
                                },
                                {
                                    "type": "Dot",
                                    "name": ".",
                                    "range": [
                                        724,
                                        724
                                    ],
                                    "content": "\n"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "integration_credentials",
                                    "range": [
                                        725,
                                        725
                                    ],
                                    "content": "#"
                                },
                                {
                                    "type": "AndKeyword",
                                    "name": "and",
                                    "range": [
                                        726,
                                        726
                                    ],
                                    "content": "Copy"
                                },
                                {
                                    "type": "NotKeyword",
                                    "name": "not",
                                    "range": [
                                        727,
                                        727
                                    ],
                                    "content": "credentials"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "integrations",
                                    "range": [
                                        728,
                                        728
                                    ],
                                    "content": "and"
                                },
                                {
                                    "type": "Dot",
                                    "name": ".",
                                    "range": [
                                        729,
                                        729
                                    ],
                                    "content": "oauth"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "credentials",
                                    "range": [
                                        730,
                                        730
                                    ],
                                    "content": "states"
                                },
                                {
                                    "type": "Colon",
                                    "name": ":",
                                    "range": [
                                        731,
                                        731
                                    ],
                                    "content": "from"
                                },
                                {
                                    "type": "AssignmentExpression",
                                    "name": "assignment",
                                    "range": [
                                        733,
                                        740
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "integrations",
                                            "range": [
                                                733,
                                                733
                                            ],
                                            "content": "if"
                                        },
                                        {
                                            "type": "Dot",
                                            "name": ".",
                                            "range": [
                                                734,
                                                734
                                            ],
                                            "content": "they"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "credentials",
                                            "range": [
                                                735,
                                                735
                                            ],
                                            "content": "exist"
                                        },
                                        {
                                            "type": "AssignmentOperator",
                                            "name": "=",
                                            "range": [
                                                736,
                                                736
                                            ],
                                            "content": "\n"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "metadata",
                                            "range": [
                                                737,
                                                737
                                            ],
                                            "content": "if"
                                        },
                                        {
                                            "type": "Dot",
                                            "name": ".",
                                            "range": [
                                                738,
                                                738
                                            ],
                                            "content": "metadata"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "integration_credentials",
                                            "range": [
                                                739,
                                                739
                                            ],
                                            "content": "."
                                        }
                                    ],
                                    "content": "if they exist\nif metadata.integration_credentials"
                                }
                            ],
                            "content": ")\n\n#Copy credentials and oauth states from metadata if they exist\nif metadata.integration_credentials"
                        },
                        {
                            "type": "IfStatement",
                            "name": "if_statement",
                            "range": [
                                741,
                                754
                            ],
                            "children": [
                                {
                                    "type": "IfKeyword",
                                    "name": "if",
                                    "range": [
                                        741,
                                        741
                                    ],
                                    "content": "and"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "metadata",
                                    "range": [
                                        742,
                                        742
                                    ],
                                    "content": "not"
                                },
                                {
                                    "type": "Dot",
                                    "name": ".",
                                    "range": [
                                        743,
                                        743
                                    ],
                                    "content": "integrations"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "integration_oauth_states",
                                    "range": [
                                        744,
                                        744
                                    ],
                                    "content": "."
                                },
                                {
                                    "type": "Colon",
                                    "name": ":",
                                    "range": [
                                        745,
                                        745
                                    ],
                                    "content": "credentials"
                                },
                                {
                                    "type": "AssignmentExpression",
                                    "name": "assignment",
                                    "range": [
                                        747,
                                        754
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "integrations",
                                            "range": [
                                                747,
                                                747
                                            ],
                                            "content": "\n"
                                        },
                                        {
                                            "type": "Dot",
                                            "name": ".",
                                            "range": [
                                                748,
                                                748
                                            ],
                                            "content": "integrations"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "oauth_states",
                                            "range": [
                                                749,
                                                749
                                            ],
                                            "content": "."
                                        },
                                        {
                                            "type": "AssignmentOperator",
                                            "name": "=",
                                            "range": [
                                                750,
                                                750
                                            ],
                                            "content": "credentials"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "metadata",
                                            "range": [
                                                751,
                                                751
                                            ],
                                            "content": "="
                                        },
                                        {
                                            "type": "Dot",
                                            "name": ".",
                                            "range": [
                                                752,
                                                752
                                            ],
                                            "content": "metadata"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "integration_oauth_states",
                                            "range": [
                                                753,
                                                753
                                            ],
                                            "content": "."
                                        }
                                    ],
                                    "content": "\nintegrations.credentials=metadata.integration_credentials"
                                }
                            ],
                            "content": "and not integrations.credentials:\nintegrations.credentials=metadata.integration_credentials"
                        },
                        {
                            "type": "ExpressionStatement",
                            "name": "await",
                            "range": [
                                762,
                                774
                            ],
                            "children": [
                                {
                                    "type": "AwaitKeyword",
                                    "name": "await",
                                    "range": [
                                        762,
                                        762
                                    ],
                                    "content": "integrations"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "update_user_integrations",
                                    "range": [
                                        763,
                                        763
                                    ],
                                    "content": "."
                                },
                                {
                                    "type": "CallExpression",
                                    "name": "call",
                                    "range": [
                                        764,
                                        774
                                    ],
                                    "children": [
                                        {
                                            "type": "KeywordArgument",
                                            "name": "user_id",
                                            "range": [
                                                765,
                                                769
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "user",
                                                    "range": [
                                                        767,
                                                        767
                                                    ],
                                                    "content": "."
                                                },
                                                {
                                                    "type": "Dot",
                                                    "name": ".",
                                                    "range": [
                                                        768,
                                                        768
                                                    ],
                                                    "content": "integration_oauth_states"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "id",
                                                    "range": [
                                                        769,
                                                        769
                                                    ],
                                                    "content": "\n"
                                                }
                                            ],
                                            "content": "=metadata.integration_oauth_states\n"
                                        },
                                        {
                                            "type": "KeywordArgument",
                                            "name": "data",
                                            "range": [
                                                771,
                                                773
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "integrations",
                                                    "range": [
                                                        773,
                                                        773
                                                    ],
                                                    "content": "to"
                                                }
                                            ],
                                            "content": "#Save to"
                                        }
                                    ],
                                    "content": "oauth_states=metadata.integration_oauth_states\n\n#Save to integrations"
                                }
                            ],
                            "content": "integrations.oauth_states=metadata.integration_oauth_states\n\n#Save to integrations"
                        },
                        {
                            "type": "AssignmentExpression",
                            "name": "assignment",
                            "range": [
                                782,
                                796
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "raw_metadata",
                                    "range": [
                                        782,
                                        782
                                    ],
                                    "content": "user"
                                },
                                {
                                    "type": "AssignmentOperator",
                                    "name": "=",
                                    "range": [
                                        783,
                                        783
                                    ],
                                    "content": "."
                                },
                                {
                                    "type": "Identifier",
                                    "name": "dict",
                                    "range": [
                                        784,
                                        784
                                    ],
                                    "content": "id"
                                },
                                {
                                    "type": "CallExpression",
                                    "name": "call",
                                    "range": [
                                        785,
                                        787
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "raw_metadata",
                                            "range": [
                                                786,
                                                786
                                            ],
                                            "content": "data"
                                        }
                                    ],
                                    "content": ",data="
                                }
                            ],
                            "content": "user.id,data=integrations)\n\n#Remove from metadata\n"
                        },
                        {
                            "type": "ExpressionStatement",
                            "name": "method_call",
                            "range": [
                                789,
                                796
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "raw_metadata",
                                    "range": [
                                        789,
                                        789
                                    ],
                                    "content": ")"
                                },
                                {
                                    "type": "Dot",
                                    "name": ".",
                                    "range": [
                                        790,
                                        790
                                    ],
                                    "content": "\n"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "pop",
                                    "range": [
                                        791,
                                        791
                                    ],
                                    "content": "\n"
                                },
                                {
                                    "type": "CallExpression",
                                    "name": "call",
                                    "range": [
                                        792,
                                        796
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "name": "\"integration_credentials\"",
                                            "range": [
                                                793,
                                                793
                                            ],
                                            "content": "Remove"
                                        },
                                        {
                                            "type": "Comma",
                                            "name": ",",
                                            "range": [
                                                794,
                                                794
                                            ],
                                            "content": "from"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "None",
                                            "range": [
                                                795,
                                                795
                                            ],
                                            "content": "metadata"
                                        }
                                    ],
                                    "content": "#Remove from metadata\n"
                                }
                            ],
                            "content": ")\n\n#Remove from metadata\n"
                        },
                        {
                            "type": "ExpressionStatement",
                            "name": "method_call",
                            "range": [
                                798,
                                805
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "raw_metadata",
                                    "range": [
                                        798,
                                        798
                                    ],
                                    "content": "="
                                },
                                {
                                    "type": "Dot",
                                    "name": ".",
                                    "range": [
                                        799,
                                        799
                                    ],
                                    "content": "dict"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "pop",
                                    "range": [
                                        800,
                                        800
                                    ],
                                    "content": "("
                                },
                                {
                                    "type": "CallExpression",
                                    "name": "call",
                                    "range": [
                                        801,
                                        805
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "name": "\"integration_oauth_states\"",
                                            "range": [
                                                802,
                                                802
                                            ],
                                            "content": ")"
                                        },
                                        {
                                            "type": "Comma",
                                            "name": ",",
                                            "range": [
                                                803,
                                                803
                                            ],
                                            "content": "\n"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "None",
                                            "range": [
                                                804,
                                                804
                                            ],
                                            "content": "raw_metadata"
                                        }
                                    ],
                                    "content": "raw_metadata)\nraw_metadata."
                                }
                            ],
                            "content": "=dict(raw_metadata)\nraw_metadata."
                        },
                        {
                            "type": "ExpressionStatement",
                            "name": "await",
                            "range": [
                                815,
                                848
                            ],
                            "children": [
                                {
                                    "type": "AwaitKeyword",
                                    "name": "await",
                                    "range": [
                                        815,
                                        815
                                    ],
                                    "content": "pop"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "User",
                                    "range": [
                                        816,
                                        816
                                    ],
                                    "content": "("
                                },
                                {
                                    "type": "Dot",
                                    "name": ".",
                                    "range": [
                                        817,
                                        817
                                    ],
                                    "content": "\"integration_oauth_states\""
                                },
                                {
                                    "type": "Identifier",
                                    "name": "prisma",
                                    "range": [
                                        818,
                                        818
                                    ],
                                    "content": ","
                                },
                                {
                                    "type": "CallExpression",
                                    "name": "call",
                                    "range": [
                                        819,
                                        820
                                    ],
                                    "children": [],
                                    "content": "None)"
                                },
                                {
                                    "type": "Dot",
                                    "name": ".",
                                    "range": [
                                        821,
                                        821
                                    ],
                                    "content": "\n"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "update",
                                    "range": [
                                        822,
                                        822
                                    ],
                                    "content": "\n"
                                },
                                {
                                    "type": "CallExpression",
                                    "name": "call",
                                    "range": [
                                        823,
                                        848
                                    ],
                                    "children": [
                                        {
                                            "type": "KeywordArgument",
                                            "name": "where",
                                            "range": [
                                                825,
                                                833
                                            ],
                                            "children": [
                                                {
                                                    "type": "Dictionary",
                                                    "name": "dictionary",
                                                    "range": [
                                                        827,
                                                        833
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "KeyValuePair",
                                                            "name": "key_value_pair",
                                                            "range": [
                                                                828,
                                                                832
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Literal",
                                                                    "name": "\"id\"",
                                                                    "range": [
                                                                        828,
                                                                        828
                                                                    ],
                                                                    "content": "data"
                                                                },
                                                                {
                                                                    "type": "Colon",
                                                                    "name": ":",
                                                                    "range": [
                                                                        829,
                                                                        829
                                                                    ],
                                                                    "content": "\n"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "user",
                                                                    "range": [
                                                                        830,
                                                                        830
                                                                    ],
                                                                    "content": "await"
                                                                },
                                                                {
                                                                    "type": "Dot",
                                                                    "name": ".",
                                                                    "range": [
                                                                        831,
                                                                        831
                                                                    ],
                                                                    "content": "User"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "id",
                                                                    "range": [
                                                                        832,
                                                                        832
                                                                    ],
                                                                    "content": "."
                                                                }
                                                            ],
                                                            "content": "data\nawait User."
                                                        }
                                                    ],
                                                    "content": "integration data\nawait User.prisma"
                                                }
                                            ],
                                            "content": "metadata without integration data\nawait User.prisma"
                                        },
                                        {
                                            "type": "KeywordArgument",
                                            "name": "data",
                                            "range": [
                                                836,
                                                845
                                            ],
                                            "children": [
                                                {
                                                    "type": "Dictionary",
                                                    "name": "dictionary",
                                                    "range": [
                                                        838,
                                                        845
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "KeyValuePair",
                                                            "name": "key_value_pair",
                                                            "range": [
                                                                839,
                                                                844
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Literal",
                                                                    "name": "\"metadata\"",
                                                                    "range": [
                                                                        839,
                                                                        839
                                                                    ],
                                                                    "content": "\n"
                                                                },
                                                                {
                                                                    "type": "Colon",
                                                                    "name": ":",
                                                                    "range": [
                                                                        840,
                                                                        840
                                                                    ],
                                                                    "content": "where"
                                                                },
                                                                {
                                                                    "type": "CallExpression",
                                                                    "name": "call",
                                                                    "range": [
                                                                        841,
                                                                        844
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "Json",
                                                                            "range": [
                                                                                841,
                                                                                841
                                                                            ],
                                                                            "content": "="
                                                                        },
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "raw_metadata",
                                                                            "range": [
                                                                                843,
                                                                                843
                                                                            ],
                                                                            "content": "\"id\""
                                                                        }
                                                                    ],
                                                                    "content": "={\"id\":"
                                                                }
                                                            ],
                                                            "content": "\nwhere={\"id\":"
                                                        }
                                                    ],
                                                    "content": "(\nwhere={\"id\":user"
                                                }
                                            ],
                                            "content": ".update(\nwhere={\"id\":user"
                                        }
                                    ],
                                    "content": "#Update metadata without integration data\nawait User.prisma().update(\nwhere={\"id\":user.id}"
                                }
                            ],
                            "content": "pop(\"integration_oauth_states\",None)\n\n#Update metadata without integration data\nawait User.prisma().update(\nwhere={\"id\":user.id}"
                        }
                    ],
                    "content": "ignore\n}\n)\nlogger.info(f \"Migrating integration credentials for {len(users)} users\")\n\nfor user in users:\nraw_metadata=cast(UserMetadataRaw,user.metadata)\nmetadata=UserMetadata.model_validate(raw_metadata)\n\n#Get existing integrations data\nintegrations=await get_user_integrations(user_id=user.id)\n\n#Copy credentials and oauth states from metadata if they exist\nif metadata.integration_credentials and not integrations.credentials:\nintegrations.credentials=metadata.integration_credentials\nif metadata.integration_oauth_states:\nintegrations.oauth_states=metadata.integration_oauth_states\n\n#Save to integrations column\nawait update_user_integrations(user_id=user.id,data=integrations)\n\n#Remove from metadata\nraw_metadata=dict(raw_metadata)\nraw_metadata.pop(\"integration_credentials\",None)\nraw_metadata.pop(\"integration_oauth_states\",None)\n\n#Update metadata without integration data\nawait User.prisma().update(\nwhere={\"id\":user.id},\n"
                }
            ],
            "content": ",\ndata={\"integrations\":encrypted_data},\n)\n\n\nasync def migrate_and_encrypt_user_integrations():\n\"\"\"Migrate integration credentials and OAuth states from metadata to integrations column.\"\"\"\nusers=await User.prisma().find_many(\nwhere={\n\"metadata\":{\n\"path\":[\"integration_credentials\"],\n\"not\":Json({\"a\":\"yolo\"}),#bogus value works to check if key exists\n}#type:ignore\n}\n)\nlogger.info(f \"Migrating integration credentials for {len(users)} users\")\n\nfor user in users:\nraw_metadata=cast(UserMetadataRaw,user.metadata)\nmetadata=UserMetadata.model_validate(raw_metadata)\n\n#Get existing integrations data\nintegrations=await get_user_integrations(user_id=user.id)\n\n#Copy credentials and oauth states from metadata if they exist\nif metadata.integration_credentials and not integrations.credentials:\nintegrations.credentials=metadata.integration_credentials\nif metadata.integration_oauth_states:\nintegrations.oauth_states=metadata.integration_oauth_states\n\n#Save to integrations column\nawait update_user_integrations(user_id=user.id,data=integrations)\n\n#Remove from metadata\nraw_metadata=dict(raw_metadata)\nraw_metadata.pop(\"integration_credentials\",None)\nraw_metadata.pop(\"integration_oauth_states\",None)\n\n#Update metadata without integration data\nawait User.prisma().update(\nwhere={\"id\":user.id},\n"
        }
    ],
    "content": "\nasync def get_or_create_user(user_data:dict)->User:\nuser_id=user_data.get(\"sub\")\nif not user_id:\nraise HTTPException(status_code=401,detail=\"User ID not found in token\")\n\nuser_email=user_data.get(\"email\")\nif not user_email:\nraise HTTPException(status_code=401,detail=\"Email not found in token\")\n\nuser=await prisma.user.find_unique(where={\"id\":user_id})\nif not user:\nuser=await prisma.user.create(\ndata={\n\"id\":user_id,\n\"email\":user_email,\n\"name\":user_data.get(\"user_metadata\",{}).get(\"name\"),\n}\n)\nreturn User.model_validate(user)\n\n\nasync def get_user_by_id(user_id:str)->Optional[User]:\nuser=await prisma.user.find_unique(where={\"id\":user_id})\nreturn User.model_validate(user)if user else None\n\n\nasync def create_default_user()->Optional[User]:\nuser=await prisma.user.find_unique(where={\"id\":DEFAULT_USER_ID})\nif not user:\nuser=await prisma.user.create(\ndata={\n\"id\":DEFAULT_USER_ID,\n\"email\":\"default@example.com\",\n\"name\":\"Default User\",\n}\n)\nreturn User.model_validate(user)\n\n\nasync def get_user_metadata(user_id:str)->UserMetadata:\nuser=await User.prisma().find_unique_or_raise(\nwhere={\"id\":user_id},\n)\n\nmetadata=cast(UserMetadataRaw,user.metadata)\nreturn UserMetadata.model_validate(metadata)\n\n\nasync def update_user_metadata(user_id:str,metadata:UserMetadata):\nawait User.prisma().update(\nwhere={\"id\":user_id},\ndata={\"metadata\":Json(metadata.model_dump())},\n)\n\n\nasync def get_user_integrations(user_id:str)->UserIntegrations:\nuser=await User.prisma().find_unique_or_raise(\nwhere={\"id\":user_id},\n)\n\nencrypted_integrations=user.integrations\nif not encrypted_integrations:\nreturn UserIntegrations()\nelse:\nreturn UserIntegrations.model_validate(\nJSONCryptor().decrypt(encrypted_integrations)\n)\n\n\nasync def update_user_integrations(user_id:str,data:UserIntegrations):\nencrypted_data=JSONCryptor().encrypt(data.model_dump())\nawait User.prisma().update(\nwhere={\"id\":user_id},\ndata={\"integrations\":encrypted_data},\n)\n\n\nasync def migrate_and_encrypt_user_integrations():\n\"\"\"Migrate integration credentials and OAuth states from metadata to integrations column.\"\"\"\nusers=await User.prisma().find_many(\nwhere={\n\"metadata\":{\n\"path\":[\"integration_credentials\"],\n\"not\":Json({\"a\":\"yolo\"}),#bogus value works to check if key exists\n}#type:ignore\n}\n)\nlogger.info(f \"Migrating integration credentials for {len(users)} users\")\n\nfor user in users:\nraw_metadata=cast(UserMetadataRaw,user.metadata)\nmetadata=UserMetadata.model_validate(raw_metadata)\n\n#Get existing integrations data\nintegrations=await get_user_integrations(user_id=user.id)\n\n#Copy credentials and oauth states from metadata if they exist\nif metadata.integration_credentials and not integrations.credentials:\nintegrations.credentials=metadata.integration_credentials\nif metadata.integration_oauth_states:\nintegrations.oauth_states=metadata.integration_oauth_states\n\n#Save to integrations column\nawait update_user_integrations(user_id=user.id,data=integrations)\n\n#Remove from metadata\nraw_metadata=dict(raw_metadata)\nraw_metadata.pop(\"integration_credentials\",None)\nraw_metadata.pop(\"integration_oauth_states\",None)\n\n#Update metadata without integration data\nawait User.prisma().update(\nwhere={\"id\":user.id},\n"
}