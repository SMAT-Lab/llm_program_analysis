{
    "type": "Program",
    "name": "Global",
    "range": [
        0,
        380
    ],
    "children": [
        {
            "type": "ImportDeclaration",
            "name": "",
            "range": [
                0,
                2
            ],
            "children": [
                {
                    "type": "ImportSpecifier",
                    "name": "logging",
                    "range": [
                        1,
                        1
                    ],
                    "children": [],
                    "content": "logging"
                }
            ],
            "content": "import logging\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "",
            "range": [
                3,
                5
            ],
            "children": [
                {
                    "type": "ImportSpecifier",
                    "name": "os",
                    "range": [
                        4,
                        4
                    ],
                    "children": [],
                    "content": "os"
                }
            ],
            "content": "import os\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "",
            "range": [
                7,
                11
            ],
            "children": [
                {
                    "type": "ImportSpecifier",
                    "name": "load_dotenv",
                    "range": [
                        10,
                        10
                    ],
                    "children": [],
                    "content": "load_dotenv"
                }
            ],
            "content": "from dotenv import load_dotenv\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "",
            "range": [
                12,
                16
            ],
            "children": [
                {
                    "type": "ImportSpecifier",
                    "name": "Redis",
                    "range": [
                        15,
                        15
                    ],
                    "children": [],
                    "content": "Redis"
                }
            ],
            "content": "from redis import Redis\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "",
            "range": [
                17,
                25
            ],
            "children": [
                {
                    "type": "ImportSpecifier",
                    "name": "AsyncRedis",
                    "range": [
                        24,
                        24
                    ],
                    "children": [],
                    "content": "AsyncRedis"
                }
            ],
            "content": "from redis.asyncio import Redis as AsyncRedis\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "",
            "range": [
                27,
                35
            ],
            "children": [
                {
                    "type": "ImportSpecifier",
                    "name": "conn_retry",
                    "range": [
                        34,
                        34
                    ],
                    "children": [],
                    "content": "conn_retry"
                }
            ],
            "content": "from backend.util.retry import conn_retry\n"
        },
        {
            "type": "VariableDeclaration",
            "name": "HOST",
            "range": [
                42,
                52
            ],
            "children": [
                {
                    "type": "AssignmentExpression",
                    "name": "=",
                    "range": [
                        43,
                        51
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "getenv",
                            "range": [
                                46,
                                51
                            ],
                            "children": [
                                {
                                    "type": "MemberExpression",
                                    "name": ".",
                                    "range": [
                                        44,
                                        46
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "os",
                                            "range": [
                                                44,
                                                44
                                            ],
                                            "children": [],
                                            "content": "os"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "getenv",
                                            "range": [
                                                46,
                                                46
                                            ],
                                            "children": [],
                                            "content": "getenv"
                                        }
                                    ],
                                    "content": "os.getenv"
                                },
                                {
                                    "type": "Literal",
                                    "name": "REDIS_HOST",
                                    "range": [
                                        48,
                                        48
                                    ],
                                    "children": [],
                                    "content": "\"REDIS_HOST\""
                                },
                                {
                                    "type": "Literal",
                                    "name": "localhost",
                                    "range": [
                                        50,
                                        50
                                    ],
                                    "children": [],
                                    "content": "\"localhost\""
                                }
                            ],
                            "content": "getenv(\"REDIS_HOST\",\"localhost\")"
                        }
                    ],
                    "content": "=os.getenv(\"REDIS_HOST\",\"localhost\")"
                }
            ],
            "content": "HOST=os.getenv(\"REDIS_HOST\",\"localhost\")\n"
        },
        {
            "type": "VariableDeclaration",
            "name": "PORT",
            "range": [
                53,
                66
            ],
            "children": [
                {
                    "type": "AssignmentExpression",
                    "name": "=",
                    "range": [
                        54,
                        65
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "int",
                            "range": [
                                55,
                                65
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "getenv",
                                    "range": [
                                        59,
                                        64
                                    ],
                                    "children": [
                                        {
                                            "type": "MemberExpression",
                                            "name": ".",
                                            "range": [
                                                57,
                                                59
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "os",
                                                    "range": [
                                                        57,
                                                        57
                                                    ],
                                                    "children": [],
                                                    "content": "os"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "getenv",
                                                    "range": [
                                                        59,
                                                        59
                                                    ],
                                                    "children": [],
                                                    "content": "getenv"
                                                }
                                            ],
                                            "content": "os.getenv"
                                        },
                                        {
                                            "type": "Literal",
                                            "name": "REDIS_PORT",
                                            "range": [
                                                61,
                                                61
                                            ],
                                            "children": [],
                                            "content": "\"REDIS_PORT\""
                                        },
                                        {
                                            "type": "Literal",
                                            "name": "6379",
                                            "range": [
                                                63,
                                                63
                                            ],
                                            "children": [],
                                            "content": "\"6379\""
                                        }
                                    ],
                                    "content": "getenv(\"REDIS_PORT\",\"6379\")"
                                }
                            ],
                            "content": "int(os.getenv(\"REDIS_PORT\",\"6379\"))"
                        }
                    ],
                    "content": "=int(os.getenv(\"REDIS_PORT\",\"6379\"))"
                }
            ],
            "content": "PORT=int(os.getenv(\"REDIS_PORT\",\"6379\"))\n"
        },
        {
            "type": "VariableDeclaration",
            "name": "PASSWORD",
            "range": [
                67,
                77
            ],
            "children": [
                {
                    "type": "AssignmentExpression",
                    "name": "=",
                    "range": [
                        68,
                        76
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "getenv",
                            "range": [
                                71,
                                76
                            ],
                            "children": [
                                {
                                    "type": "MemberExpression",
                                    "name": ".",
                                    "range": [
                                        69,
                                        71
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "os",
                                            "range": [
                                                69,
                                                69
                                            ],
                                            "children": [],
                                            "content": "os"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "getenv",
                                            "range": [
                                                71,
                                                71
                                            ],
                                            "children": [],
                                            "content": "getenv"
                                        }
                                    ],
                                    "content": "os.getenv"
                                },
                                {
                                    "type": "Literal",
                                    "name": "REDIS_PASSWORD",
                                    "range": [
                                        73,
                                        73
                                    ],
                                    "children": [],
                                    "content": "\"REDIS_PASSWORD\""
                                },
                                {
                                    "type": "Literal",
                                    "name": "password",
                                    "range": [
                                        75,
                                        75
                                    ],
                                    "children": [],
                                    "content": "\"password\""
                                }
                            ],
                            "content": "getenv(\"REDIS_PASSWORD\",\"password\")"
                        }
                    ],
                    "content": "=os.getenv(\"REDIS_PASSWORD\",\"password\")"
                }
            ],
            "content": "PASSWORD=os.getenv(\"REDIS_PASSWORD\",\"password\")\n"
        },
        {
            "type": "VariableDeclaration",
            "name": "logger",
            "range": [
                79,
                87
            ],
            "children": [
                {
                    "type": "AssignmentExpression",
                    "name": "=",
                    "range": [
                        80,
                        86
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "getLogger",
                            "range": [
                                83,
                                86
                            ],
                            "children": [
                                {
                                    "type": "MemberExpression",
                                    "name": ".",
                                    "range": [
                                        81,
                                        83
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "logging",
                                            "range": [
                                                81,
                                                81
                                            ],
                                            "children": [],
                                            "content": "logging"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "getLogger",
                                            "range": [
                                                83,
                                                83
                                            ],
                                            "children": [],
                                            "content": "getLogger"
                                        }
                                    ],
                                    "content": "logging.getLogger"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "__name__",
                                    "range": [
                                        85,
                                        85
                                    ],
                                    "children": [],
                                    "content": "__name__"
                                }
                            ],
                            "content": "getLogger(__name__)"
                        }
                    ],
                    "content": "=logging.getLogger(__name__)"
                }
            ],
            "content": "logger=logging.getLogger(__name__)\n"
        },
        {
            "type": "VariableDeclaration",
            "name": "connection",
            "range": [
                88,
                95
            ],
            "children": [
                {
                    "type": "TypeAnnotation",
                    "name": ":",
                    "range": [
                        89,
                        92
                    ],
                    "children": [
                        {
                            "type": "UnionType",
                            "name": "|",
                            "range": [
                                91,
                                92
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "Redis",
                                    "range": [
                                        90,
                                        90
                                    ],
                                    "children": [],
                                    "content": "Redis"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "None",
                                    "range": [
                                        92,
                                        92
                                    ],
                                    "children": [],
                                    "content": "None"
                                }
                            ],
                            "content": "|None"
                        }
                    ],
                    "content": ":Redis|None"
                },
                {
                    "type": "AssignmentExpression",
                    "name": "=",
                    "range": [
                        93,
                        94
                    ],
                    "children": [
                        {
                            "type": "Identifier",
                            "name": "None",
                            "range": [
                                94,
                                94
                            ],
                            "children": [],
                            "content": "None"
                        }
                    ],
                    "content": "=None"
                }
            ],
            "content": "connection:Redis|None=None\n"
        },
        {
            "type": "VariableDeclaration",
            "name": "connection_async",
            "range": [
                96,
                103
            ],
            "children": [
                {
                    "type": "TypeAnnotation",
                    "name": ":",
                    "range": [
                        97,
                        100
                    ],
                    "children": [
                        {
                            "type": "UnionType",
                            "name": "|",
                            "range": [
                                99,
                                100
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "AsyncRedis",
                                    "range": [
                                        98,
                                        98
                                    ],
                                    "children": [],
                                    "content": "AsyncRedis"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "None",
                                    "range": [
                                        100,
                                        100
                                    ],
                                    "children": [],
                                    "content": "None"
                                }
                            ],
                            "content": "|None"
                        }
                    ],
                    "content": ":AsyncRedis|None"
                },
                {
                    "type": "AssignmentExpression",
                    "name": "=",
                    "range": [
                        101,
                        102
                    ],
                    "children": [
                        {
                            "type": "Identifier",
                            "name": "None",
                            "range": [
                                102,
                                102
                            ],
                            "children": [],
                            "content": "None"
                        }
                    ],
                    "content": "=None"
                }
            ],
            "content": "connection_async:AsyncRedis|None=None\n"
        },
        {
            "type": "FunctionDecl",
            "name": "connect",
            "range": [
                113,
                172
            ],
            "children": [
                {
                    "type": "ReturnType",
                    "name": "Redis",
                    "range": [
                        117,
                        119
                    ],
                    "children": [],
                    "content": ")->"
                },
                {
                    "type": "VariableDecl",
                    "name": "connection",
                    "range": [
                        122,
                        123
                    ],
                    "children": [],
                    "content": "\nglobal"
                },
                {
                    "type": "IfStatement",
                    "name": "",
                    "range": [
                        125,
                        131
                    ],
                    "children": [
                        {
                            "type": "Identifier",
                            "name": "connection",
                            "range": [
                                126,
                                126
                            ],
                            "children": [],
                            "content": "if"
                        },
                        {
                            "type": "ReturnStatement",
                            "name": "",
                            "range": [
                                129,
                                130
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "connection",
                                    "range": [
                                        130,
                                        130
                                    ],
                                    "children": [],
                                    "content": "return"
                                }
                            ],
                            "content": "\nreturn"
                        }
                    ],
                    "content": "\nif connection:\nreturn connection"
                },
                {
                    "type": "VariableDecl",
                    "name": "c",
                    "range": [
                        133,
                        168
                    ],
                    "children": [
                        {
                            "type": "NewExpression",
                            "name": "Redis",
                            "range": [
                                135,
                                158
                            ],
                            "children": [
                                {
                                    "type": "Property",
                                    "name": "host",
                                    "range": [
                                        138,
                                        140
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "HOST",
                                            "range": [
                                                140,
                                                140
                                            ],
                                            "children": [],
                                            "content": "="
                                        }
                                    ],
                                    "content": "\nhost="
                                },
                                {
                                    "type": "Property",
                                    "name": "port",
                                    "range": [
                                        143,
                                        145
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "PORT",
                                            "range": [
                                                145,
                                                145
                                            ],
                                            "children": [],
                                            "content": "="
                                        }
                                    ],
                                    "content": "\nport="
                                },
                                {
                                    "type": "Property",
                                    "name": "password",
                                    "range": [
                                        148,
                                        150
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "PASSWORD",
                                            "range": [
                                                150,
                                                150
                                            ],
                                            "children": [],
                                            "content": "="
                                        }
                                    ],
                                    "content": "\npassword="
                                },
                                {
                                    "type": "Property",
                                    "name": "decode_responses",
                                    "range": [
                                        153,
                                        155
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "name": "True",
                                            "range": [
                                                155,
                                                155
                                            ],
                                            "children": [],
                                            "content": "="
                                        }
                                    ],
                                    "content": "\ndecode_responses="
                                }
                            ],
                            "content": "=Redis(\nhost=HOST,\nport=PORT,\npassword=PASSWORD,\ndecode_responses=True,\n"
                        },
                        {
                            "type": "CallExpression",
                            "name": "ping",
                            "range": [
                                160,
                                164
                            ],
                            "children": [],
                            "content": "\nc.ping("
                        }
                    ],
                    "content": "\nc=Redis(\nhost=HOST,\nport=PORT,\npassword=PASSWORD,\ndecode_responses=True,\n)\nc.ping()\nconnection="
                },
                {
                    "type": "AssignmentExpression",
                    "name": "connection",
                    "range": [
                        166,
                        168
                    ],
                    "children": [
                        {
                            "type": "Identifier",
                            "name": "c",
                            "range": [
                                168,
                                168
                            ],
                            "children": [],
                            "content": "="
                        }
                    ],
                    "content": "\nconnection="
                },
                {
                    "type": "ReturnStatement",
                    "name": "",
                    "range": [
                        170,
                        171
                    ],
                    "children": [
                        {
                            "type": "Identifier",
                            "name": "connection",
                            "range": [
                                171,
                                171
                            ],
                            "children": [],
                            "content": "return"
                        }
                    ],
                    "content": "\nreturn"
                }
            ],
            "content": "\ndef connect()->Redis:\nglobal connection\nif connection:\nreturn connection\n\nc=Redis(\nhost=HOST,\nport=PORT,\npassword=PASSWORD,\ndecode_responses=True,\n)\nc.ping()\nconnection=c\nreturn connection"
        },
        {
            "type": "FunctionDecl",
            "name": "disconnect",
            "range": [
                181,
                203
            ],
            "children": [
                {
                    "type": "BlockStatement",
                    "range": [
                        185,
                        203
                    ],
                    "children": [
                        {
                            "type": "ExpressionStatement",
                            "range": [
                                187,
                                189
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "connection",
                                    "range": [
                                        188,
                                        188
                                    ],
                                    "content": ":"
                                }
                            ],
                            "content": "):\n"
                        },
                        {
                            "type": "IfStatement",
                            "range": [
                                190,
                                203
                            ],
                            "children": [
                                {
                                    "type": "ExpressionStatement",
                                    "range": [
                                        191,
                                        191
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "connection",
                                            "range": [
                                                191,
                                                191
                                            ],
                                            "content": "connection"
                                        }
                                    ],
                                    "content": "connection"
                                },
                                {
                                    "type": "BlockStatement",
                                    "range": [
                                        193,
                                        203
                                    ],
                                    "children": [
                                        {
                                            "type": "ExpressionStatement",
                                            "range": [
                                                194,
                                                198
                                            ],
                                            "children": [
                                                {
                                                    "type": "CallExpression",
                                                    "range": [
                                                        194,
                                                        198
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "MemberExpression",
                                                            "range": [
                                                                194,
                                                                196
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "connection",
                                                                    "range": [
                                                                        194,
                                                                        194
                                                                    ],
                                                                    "content": "connection"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "close",
                                                                    "range": [
                                                                        196,
                                                                        196
                                                                    ],
                                                                    "content": "\n"
                                                                }
                                                            ],
                                                            "content": "connection:\n"
                                                        }
                                                    ],
                                                    "content": "connection:\nconnection."
                                                }
                                            ],
                                            "content": "connection:\nconnection."
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "range": [
                                                200,
                                                202
                                            ],
                                            "children": [
                                                {
                                                    "type": "AssignmentExpression",
                                                    "range": [
                                                        200,
                                                        202
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "connection",
                                                            "range": [
                                                                200,
                                                                200
                                                            ],
                                                            "content": "("
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "None",
                                                            "range": [
                                                                202,
                                                                202
                                                            ],
                                                            "content": "\n"
                                                        }
                                                    ],
                                                    "content": "()\n"
                                                }
                                            ],
                                            "content": "()\n"
                                        }
                                    ],
                                    "content": "if connection:\nconnection.close()\nconnection"
                                }
                            ],
                            "content": "global connection\nif connection:\nconnection.close()\nconnection"
                        }
                    ],
                    "content": "disconnect():\nglobal connection\nif connection:\nconnection.close()\nconnection"
                }
            ],
            "content": "\"Releasing connection\")\ndef disconnect():\nglobal connection\nif connection:\nconnection.close()\nconnection"
        },
        {
            "type": "FunctionDecl",
            "name": "get_redis",
            "range": [
                204,
                239
            ],
            "children": [
                {
                    "type": "Parameter",
                    "name": "auto_connect",
                    "range": [
                        207,
                        211
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "bool",
                            "range": [
                                208,
                                209
                            ],
                            "children": [],
                            "content": "\ndef"
                        },
                        {
                            "type": "Assignment",
                            "name": "=",
                            "range": [
                                210,
                                211
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "True",
                                    "range": [
                                        211,
                                        211
                                    ],
                                    "children": [],
                                    "content": "("
                                }
                            ],
                            "content": "get_redis("
                        }
                    ],
                    "content": "\n\ndef get_redis("
                },
                {
                    "type": "ReturnType",
                    "name": "Redis",
                    "range": [
                        213,
                        215
                    ],
                    "children": [],
                    "content": ":bool="
                },
                {
                    "type": "BlockStatement",
                    "name": "",
                    "range": [
                        217,
                        239
                    ],
                    "children": [
                        {
                            "type": "IfStatement",
                            "name": "",
                            "range": [
                                218,
                                224
                            ],
                            "children": [
                                {
                                    "type": "Condition",
                                    "name": "connection",
                                    "range": [
                                        219,
                                        219
                                    ],
                                    "children": [],
                                    "content": ">"
                                },
                                {
                                    "type": "BlockStatement",
                                    "name": "",
                                    "range": [
                                        221,
                                        224
                                    ],
                                    "children": [
                                        {
                                            "type": "ReturnStatement",
                                            "name": "",
                                            "range": [
                                                222,
                                                223
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "connection",
                                                    "range": [
                                                        223,
                                                        223
                                                    ],
                                                    "children": [],
                                                    "content": "if"
                                                }
                                            ],
                                            "content": "\nif"
                                        }
                                    ],
                                    "content": ":\nif connection"
                                }
                            ],
                            "content": "->Redis:\nif connection"
                        },
                        {
                            "type": "IfStatement",
                            "name": "",
                            "range": [
                                225,
                                233
                            ],
                            "children": [
                                {
                                    "type": "Condition",
                                    "name": "auto_connect",
                                    "range": [
                                        226,
                                        226
                                    ],
                                    "children": [],
                                    "content": "\n"
                                },
                                {
                                    "type": "BlockStatement",
                                    "name": "",
                                    "range": [
                                        228,
                                        233
                                    ],
                                    "children": [
                                        {
                                            "type": "ReturnStatement",
                                            "name": "",
                                            "range": [
                                                229,
                                                232
                                            ],
                                            "children": [
                                                {
                                                    "type": "CallExpression",
                                                    "name": "connect",
                                                    "range": [
                                                        230,
                                                        232
                                                    ],
                                                    "children": [],
                                                    "content": "if auto_connect:"
                                                }
                                            ],
                                            "content": "\nif auto_connect:"
                                        }
                                    ],
                                    "content": "connection\nif auto_connect:\n"
                                }
                            ],
                            "content": ":\nreturn connection\nif auto_connect:\n"
                        },
                        {
                            "type": "RaiseStatement",
                            "name": "",
                            "range": [
                                234,
                                238
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "RuntimeError",
                                    "range": [
                                        235,
                                        238
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "name": "\"Redis connection is not established\"",
                                            "range": [
                                                237,
                                                237
                                            ],
                                            "children": [],
                                            "content": ")"
                                        }
                                    ],
                                    "content": "connect()\n"
                                }
                            ],
                            "content": "return connect()\n"
                        }
                    ],
                    "content": ")->Redis:\nif connection:\nreturn connection\nif auto_connect:\nreturn connect()\nraise"
                }
            ],
            "content": "=None\n\n\ndef get_redis(auto_connect:bool=True)->Redis:\nif connection:\nreturn connection\nif auto_connect:\nreturn connect()\nraise"
        },
        {
            "type": "FunctionDecl",
            "name": "connect_async",
            "range": [
                248,
                309
            ],
            "children": [
                {
                    "type": "Parameter",
                    "name": "",
                    "range": [
                        251,
                        252
                    ],
                    "children": [],
                    "content": ",\"Acquiring connection\""
                },
                {
                    "type": "ReturnType",
                    "name": "AsyncRedis",
                    "range": [
                        253,
                        255
                    ],
                    "children": [],
                    "content": ")\nasync"
                },
                {
                    "type": "VariableDecl",
                    "name": "connection_async",
                    "range": [
                        258,
                        259
                    ],
                    "children": [],
                    "content": "()"
                },
                {
                    "type": "IfStatement",
                    "name": "",
                    "range": [
                        261,
                        267
                    ],
                    "children": [
                        {
                            "type": "Identifier",
                            "name": "connection_async",
                            "range": [
                                262,
                                262
                            ],
                            "children": [],
                            "content": "AsyncRedis"
                        },
                        {
                            "type": "ReturnStatement",
                            "name": "",
                            "range": [
                                265,
                                266
                            ],
                            "children": [],
                            "content": "global connection_async"
                        }
                    ],
                    "content": ">AsyncRedis:\nglobal connection_async\n"
                },
                {
                    "type": "VariableDecl",
                    "name": "c",
                    "range": [
                        269,
                        295
                    ],
                    "children": [
                        {
                            "type": "AssignmentExpression",
                            "name": "",
                            "range": [
                                270,
                                271
                            ],
                            "children": [],
                            "content": ":\n"
                        },
                        {
                            "type": "NewExpression",
                            "name": "AsyncRedis",
                            "range": [
                                271,
                                294
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "host",
                                    "range": [
                                        274,
                                        276
                                    ],
                                    "children": [],
                                    "content": "\n\nc"
                                },
                                {
                                    "type": "Literal",
                                    "name": "port",
                                    "range": [
                                        279,
                                        281
                                    ],
                                    "children": [],
                                    "content": "(\nhost"
                                },
                                {
                                    "type": "Literal",
                                    "name": "password",
                                    "range": [
                                        284,
                                        286
                                    ],
                                    "children": [],
                                    "content": ",\nport"
                                },
                                {
                                    "type": "Literal",
                                    "name": "decode_responses",
                                    "range": [
                                        289,
                                        291
                                    ],
                                    "children": [],
                                    "content": ",\npassword"
                                }
                            ],
                            "content": "\nreturn connection_async\n\nc=AsyncRedis(\nhost=HOST,\nport=PORT,\npassword=PASSWORD,"
                        }
                    ],
                    "content": "connection_async:\nreturn connection_async\n\nc=AsyncRedis(\nhost=HOST,\nport=PORT,\npassword=PASSWORD,\n"
                },
                {
                    "type": "AwaitExpression",
                    "name": "",
                    "range": [
                        296,
                        302
                    ],
                    "children": [
                        {
                            "type": "MemberExpression",
                            "name": "c.ping",
                            "range": [
                                297,
                                299
                            ],
                            "children": [],
                            "content": "=True,"
                        }
                    ],
                    "content": "decode_responses=True,\n)\n"
                },
                {
                    "type": "AssignmentExpression",
                    "name": "connection_async",
                    "range": [
                        303,
                        305
                    ],
                    "children": [],
                    "content": "await c."
                },
                {
                    "type": "ReturnStatement",
                    "name": "",
                    "range": [
                        307,
                        308
                    ],
                    "children": [],
                    "content": "()"
                }
            ],
            "content": "conn_retry(\"AsyncRedis\",\"Acquiring connection\")\nasync def connect_async()->AsyncRedis:\nglobal connection_async\nif connection_async:\nreturn connection_async\n\nc=AsyncRedis(\nhost=HOST,\nport=PORT,\npassword=PASSWORD,\ndecode_responses=True,\n)\nawait c.ping()\n"
        },
        {
            "type": "FunctionDecl",
            "name": "get_redis_async",
            "range": [
                343,
                380
            ],
            "children": [
                {
                    "type": "Parameter",
                    "name": "auto_connect",
                    "range": [
                        347,
                        351
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "bool",
                            "range": [
                                349,
                                349
                            ],
                            "children": [],
                            "content": "="
                        },
                        {
                            "type": "AssignmentExpression",
                            "name": "=",
                            "range": [
                                350,
                                350
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "True",
                                    "range": [
                                        351,
                                        351
                                    ],
                                    "children": [],
                                    "content": "\n"
                                }
                            ],
                            "content": "None"
                        }
                    ],
                    "content": "\nconnection_async=None\n"
                },
                {
                    "type": "ReturnType",
                    "name": "AsyncRedis",
                    "range": [
                        355,
                        355
                    ],
                    "children": [],
                    "content": "def"
                },
                {
                    "type": "BlockStatement",
                    "name": "",
                    "range": [
                        357,
                        380
                    ],
                    "children": [
                        {
                            "type": "IfStatement",
                            "name": "",
                            "range": [
                                358,
                                364
                            ],
                            "children": [
                                {
                                    "type": "Condition",
                                    "name": "connection_async",
                                    "range": [
                                        359,
                                        359
                                    ],
                                    "children": [],
                                    "content": ":"
                                },
                                {
                                    "type": "ReturnStatement",
                                    "name": "",
                                    "range": [
                                        362,
                                        363
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "connection_async",
                                            "range": [
                                                363,
                                                363
                                            ],
                                            "children": [],
                                            "content": ")"
                                        }
                                    ],
                                    "content": "True)"
                                }
                            ],
                            "content": "auto_connect:bool=True)-"
                        },
                        {
                            "type": "IfStatement",
                            "name": "",
                            "range": [
                                365,
                                374
                            ],
                            "children": [
                                {
                                    "type": "Condition",
                                    "name": "auto_connect",
                                    "range": [
                                        366,
                                        366
                                    ],
                                    "children": [],
                                    "content": "AsyncRedis"
                                },
                                {
                                    "type": "ReturnStatement",
                                    "name": "",
                                    "range": [
                                        369,
                                        373
                                    ],
                                    "children": [
                                        {
                                            "type": "AwaitExpression",
                                            "name": "",
                                            "range": [
                                                370,
                                                373
                                            ],
                                            "children": [
                                                {
                                                    "type": "CallExpression",
                                                    "name": "connect_async",
                                                    "range": [
                                                        371,
                                                        373
                                                    ],
                                                    "children": [],
                                                    "content": ":\nreturn"
                                                }
                                            ],
                                            "content": "connection_async:\nreturn"
                                        }
                                    ],
                                    "content": "if connection_async:\nreturn"
                                }
                            ],
                            "content": ">AsyncRedis:\nif connection_async:\nreturn connection_async"
                        },
                        {
                            "type": "ThrowStatement",
                            "name": "",
                            "range": [
                                375,
                                379
                            ],
                            "children": [
                                {
                                    "type": "NewExpression",
                                    "name": "RuntimeError",
                                    "range": [
                                        376,
                                        379
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "name": "\"AsyncRedis connection is not established\"",
                                            "range": [
                                                378,
                                                378
                                            ],
                                            "children": [],
                                            "content": ":"
                                        }
                                    ],
                                    "content": "if auto_connect:\n"
                                }
                            ],
                            "content": "\nif auto_connect:\n"
                        }
                    ],
                    "content": "(auto_connect:bool=True)->AsyncRedis:\nif connection_async:\nreturn connection_async\nif auto_connect:\nreturn"
                }
            ],
            "content": ".close()\nconnection_async=None\n\n\nasync def get_redis_async(auto_connect:bool=True)->AsyncRedis:\nif connection_async:\nreturn connection_async\nif auto_connect:\nreturn"
        }
    ],
    "content": "import logging\nimport os\n\nfrom dotenv import load_dotenv\nfrom redis import Redis\nfrom redis.asyncio import Redis as AsyncRedis\n\nfrom backend.util.retry import conn_retry\n\nload_dotenv()\n\nHOST=os.getenv(\"REDIS_HOST\",\"localhost\")\nPORT=int(os.getenv(\"REDIS_PORT\",\"6379\"))\nPASSWORD=os.getenv(\"REDIS_PASSWORD\",\"password\")\n\nlogger=logging.getLogger(__name__)\nconnection:Redis|None=None\nconnection_async:AsyncRedis|None=None\n\n\n@conn_retry(\"Redis\",\"Acquiring connection\")\ndef connect()->Redis:\nglobal connection\nif connection:\nreturn connection\n\nc=Redis(\nhost=HOST,\nport=PORT,\npassword=PASSWORD,\ndecode_responses=True,\n)\nc.ping()\nconnection=c\nreturn connection\n\n\n@conn_retry(\"Redis\",\"Releasing connection\")\ndef disconnect():\nglobal connection\nif connection:\nconnection.close()\nconnection=None\n\n\ndef get_redis(auto_connect:bool=True)->Redis:\nif connection:\nreturn connection\nif auto_connect:\nreturn connect()\nraise RuntimeError(\"Redis connection is not established\")\n\n\n@conn_retry(\"AsyncRedis\",\"Acquiring connection\")\nasync def connect_async()->AsyncRedis:\nglobal connection_async\nif connection_async:\nreturn connection_async\n\nc=AsyncRedis(\nhost=HOST,\nport=PORT,\npassword=PASSWORD,\ndecode_responses=True,\n)\nawait c.ping()\nconnection_async=c\nreturn connection_async\n\n\n@conn_retry(\"AsyncRedis\",\"Releasing connection\")\nasync def disconnect_async():\nglobal connection_async\nif connection_async:\nawait connection_async.close()\nconnection_async=None\n\n\nasync def get_redis_async(auto_connect:bool=True)->AsyncRedis:\nif connection_async:\nreturn connection_async\nif auto_connect:\nreturn"
}