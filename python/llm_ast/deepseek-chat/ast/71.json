{
    "type": "Program",
    "name": "Global",
    "range": [
        0,
        835
    ],
    "children": [
        {
            "type": "Comment",
            "name": "",
            "range": [
                1,
                1
            ],
            "children": [
                {
                    "type": "Literal",
                    "name": "",
                    "range": [
                        1,
                        1
                    ],
                    "value": " \\n Given a partially filled 9x9 2D array, the objective is to fill a 9x9 \\n square grid with digits numbered 1 to 9, so that every row, column, and \\n and each of the nine 3x3 sub-grids contains all of the digits. \\n  \\n This can be solved using Backtracking and is similar to n-queens. \\n We check to see if a cell is safe or not and recursively call the \\n function on the next column to see if it returns True. if yes, we \\n have solved the puzzle. else, we backtrack and place another number \\n in that cell and repeat this process. \\n ",
                    "children": [],
                    "content": "\" \\n Given a partially filled 9x9 2D array, the objective is to fill a 9x9 \\n square grid with digits numbered 1 to 9, so that every row, column, and \\n and each of the nine 3x3 sub-grids contains all of the digits. \\n  \\n This can be solved using Backtracking and is similar to n-queens. \\n We check to see if a cell is safe or not and recursively call the \\n function on the next column to see if it returns True. if yes, we \\n have solved the puzzle. else, we backtrack and place another number \\n in that cell and repeat this process. \\n \""
                }
            ],
            "content": "\" \\n Given a partially filled 9x9 2D array, the objective is to fill a 9x9 \\n square grid with digits numbered 1 to 9, so that every row, column, and \\n and each of the nine 3x3 sub-grids contains all of the digits. \\n  \\n This can be solved using Backtracking and is similar to n-queens. \\n We check to see if a cell is safe or not and recursively call the \\n function on the next column to see if it returns True. if yes, we \\n have solved the puzzle. else, we backtrack and place another number \\n in that cell and repeat this process. \\n \""
        },
        {
            "type": "ImportDeclaration",
            "name": "annotations",
            "range": [
                4,
                8
            ],
            "children": [
                {
                    "type": "FromKeyword",
                    "name": "from",
                    "range": [
                        4,
                        4
                    ],
                    "children": [],
                    "content": "\n"
                },
                {
                    "type": "ModuleSpecifier",
                    "name": "__future__",
                    "range": [
                        5,
                        5
                    ],
                    "children": [],
                    "content": "from"
                },
                {
                    "type": "ImportKeyword",
                    "name": "import",
                    "range": [
                        6,
                        6
                    ],
                    "children": [],
                    "content": "__future__"
                },
                {
                    "type": "ImportedDefaultBinding",
                    "name": "annotations",
                    "range": [
                        7,
                        7
                    ],
                    "children": [],
                    "content": "import"
                }
            ],
            "content": "\nfrom __future__ import annotations"
        },
        {
            "type": "VariableDeclaration",
            "name": "Matrix",
            "range": [
                9,
                18
            ],
            "children": [
                {
                    "type": "AssignmentExpression",
                    "name": "",
                    "range": [
                        10,
                        17
                    ],
                    "children": [
                        {
                            "type": "ArrayExpression",
                            "name": "",
                            "range": [
                                11,
                                17
                            ],
                            "children": [
                                {
                                    "type": "ArrayExpression",
                                    "name": "",
                                    "range": [
                                        13,
                                        16
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "name": "int",
                                            "range": [
                                                15,
                                                15
                                            ],
                                            "children": [],
                                            "content": "list"
                                        }
                                    ],
                                    "content": "list[list["
                                }
                            ],
                            "content": "Matrix=list[list[int"
                        }
                    ],
                    "content": "\nMatrix=list[list[int"
                }
            ],
            "content": "\n\nMatrix=list[list[int]"
        },
        {
            "type": "VariableDeclaration",
            "name": "initial_grid",
            "range": [
                19,
                215
            ],
            "children": [
                {
                    "type": "TypeAnnotation",
                    "name": "Matrix",
                    "range": [
                        21,
                        21
                    ],
                    "children": [],
                    "content": "\n"
                },
                {
                    "type": "AssignmentExpression",
                    "name": "=",
                    "range": [
                        22,
                        22
                    ],
                    "children": [],
                    "content": "#"
                },
                {
                    "type": "ArrayExpression",
                    "name": "",
                    "range": [
                        23,
                        214
                    ],
                    "children": [
                        {
                            "type": "ArrayExpression",
                            "name": "",
                            "range": [
                                25,
                                43
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "3",
                                    "range": [
                                        26,
                                        26
                                    ],
                                    "children": [],
                                    "content": "to"
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        28,
                                        28
                                    ],
                                    "children": [],
                                    "content": "grid"
                                },
                                {
                                    "type": "Literal",
                                    "name": "6",
                                    "range": [
                                        30,
                                        30
                                    ],
                                    "children": [],
                                    "content": "initial_grid"
                                },
                                {
                                    "type": "Literal",
                                    "name": "5",
                                    "range": [
                                        32,
                                        32
                                    ],
                                    "children": [],
                                    "content": "Matrix"
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        34,
                                        34
                                    ],
                                    "children": [],
                                    "content": "["
                                },
                                {
                                    "type": "Literal",
                                    "name": "8",
                                    "range": [
                                        36,
                                        36
                                    ],
                                    "children": [],
                                    "content": "["
                                },
                                {
                                    "type": "Literal",
                                    "name": "4",
                                    "range": [
                                        38,
                                        38
                                    ],
                                    "children": [],
                                    "content": ","
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        40,
                                        40
                                    ],
                                    "children": [],
                                    "content": ","
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        42,
                                        42
                                    ],
                                    "children": [],
                                    "content": ","
                                }
                            ],
                            "content": "values to the grid\ninitial_grid:Matrix=[\n[3,0,6,5"
                        },
                        {
                            "type": "ArrayExpression",
                            "name": "",
                            "range": [
                                46,
                                64
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "5",
                                    "range": [
                                        47,
                                        47
                                    ],
                                    "children": [],
                                    "content": "8"
                                },
                                {
                                    "type": "Literal",
                                    "name": "2",
                                    "range": [
                                        49,
                                        49
                                    ],
                                    "children": [],
                                    "content": "4"
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        51,
                                        51
                                    ],
                                    "children": [],
                                    "content": "0"
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        53,
                                        53
                                    ],
                                    "children": [],
                                    "content": "0"
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        55,
                                        55
                                    ],
                                    "children": [],
                                    "content": ","
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        57,
                                        57
                                    ],
                                    "children": [],
                                    "content": "["
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        59,
                                        59
                                    ],
                                    "children": [],
                                    "content": ","
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        61,
                                        61
                                    ],
                                    "children": [],
                                    "content": ","
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        63,
                                        63
                                    ],
                                    "children": [],
                                    "content": ","
                                }
                            ],
                            "content": ",8,4,0,0],\n[5,2,0,0"
                        },
                        {
                            "type": "ArrayExpression",
                            "name": "",
                            "range": [
                                67,
                                85
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        68,
                                        68
                                    ],
                                    "children": [],
                                    "content": "0"
                                },
                                {
                                    "type": "Literal",
                                    "name": "8",
                                    "range": [
                                        70,
                                        70
                                    ],
                                    "children": [],
                                    "content": "0"
                                },
                                {
                                    "type": "Literal",
                                    "name": "7",
                                    "range": [
                                        72,
                                        72
                                    ],
                                    "children": [],
                                    "content": "0"
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        74,
                                        74
                                    ],
                                    "children": [],
                                    "content": "0"
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        76,
                                        76
                                    ],
                                    "children": [],
                                    "content": ","
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        78,
                                        78
                                    ],
                                    "children": [],
                                    "content": "["
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        80,
                                        80
                                    ],
                                    "children": [],
                                    "content": ","
                                },
                                {
                                    "type": "Literal",
                                    "name": "3",
                                    "range": [
                                        82,
                                        82
                                    ],
                                    "children": [],
                                    "content": ","
                                },
                                {
                                    "type": "Literal",
                                    "name": "1",
                                    "range": [
                                        84,
                                        84
                                    ],
                                    "children": [],
                                    "content": ","
                                }
                            ],
                            "content": ",0,0,0,0],\n[0,8,7,0"
                        },
                        {
                            "type": "ArrayExpression",
                            "name": "",
                            "range": [
                                88,
                                106
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        89,
                                        89
                                    ],
                                    "children": [],
                                    "content": "0"
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        91,
                                        91
                                    ],
                                    "children": [],
                                    "content": "0"
                                },
                                {
                                    "type": "Literal",
                                    "name": "3",
                                    "range": [
                                        93,
                                        93
                                    ],
                                    "children": [],
                                    "content": "3"
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        95,
                                        95
                                    ],
                                    "children": [],
                                    "content": "1"
                                },
                                {
                                    "type": "Literal",
                                    "name": "1",
                                    "range": [
                                        97,
                                        97
                                    ],
                                    "children": [],
                                    "content": ","
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        99,
                                        99
                                    ],
                                    "children": [],
                                    "content": "["
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        101,
                                        101
                                    ],
                                    "children": [],
                                    "content": ","
                                },
                                {
                                    "type": "Literal",
                                    "name": "8",
                                    "range": [
                                        103,
                                        103
                                    ],
                                    "children": [],
                                    "content": ","
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        105,
                                        105
                                    ],
                                    "children": [],
                                    "content": ","
                                }
                            ],
                            "content": ",0,0,3,1],\n[0,0,3,0"
                        },
                        {
                            "type": "ArrayExpression",
                            "name": "",
                            "range": [
                                109,
                                127
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "9",
                                    "range": [
                                        110,
                                        110
                                    ],
                                    "children": [],
                                    "content": "0"
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        112,
                                        112
                                    ],
                                    "children": [],
                                    "content": "0"
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        114,
                                        114
                                    ],
                                    "children": [],
                                    "content": "8"
                                },
                                {
                                    "type": "Literal",
                                    "name": "8",
                                    "range": [
                                        116,
                                        116
                                    ],
                                    "children": [],
                                    "content": "0"
                                },
                                {
                                    "type": "Literal",
                                    "name": "6",
                                    "range": [
                                        118,
                                        118
                                    ],
                                    "children": [],
                                    "content": ","
                                },
                                {
                                    "type": "Literal",
                                    "name": "3",
                                    "range": [
                                        120,
                                        120
                                    ],
                                    "children": [],
                                    "content": "["
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        122,
                                        122
                                    ],
                                    "children": [],
                                    "content": ","
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        124,
                                        124
                                    ],
                                    "children": [],
                                    "content": ","
                                },
                                {
                                    "type": "Literal",
                                    "name": "5",
                                    "range": [
                                        126,
                                        126
                                    ],
                                    "children": [],
                                    "content": ","
                                }
                            ],
                            "content": ",0,0,8,0],\n[9,0,0,8"
                        },
                        {
                            "type": "ArrayExpression",
                            "name": "",
                            "range": [
                                130,
                                148
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        131,
                                        131
                                    ],
                                    "children": [],
                                    "content": "3"
                                },
                                {
                                    "type": "Literal",
                                    "name": "5",
                                    "range": [
                                        133,
                                        133
                                    ],
                                    "children": [],
                                    "content": "0"
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        135,
                                        135
                                    ],
                                    "children": [],
                                    "content": "0"
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        137,
                                        137
                                    ],
                                    "children": [],
                                    "content": "5"
                                },
                                {
                                    "type": "Literal",
                                    "name": "9",
                                    "range": [
                                        139,
                                        139
                                    ],
                                    "children": [],
                                    "content": ","
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        141,
                                        141
                                    ],
                                    "children": [],
                                    "content": "["
                                },
                                {
                                    "type": "Literal",
                                    "name": "6",
                                    "range": [
                                        143,
                                        143
                                    ],
                                    "children": [],
                                    "content": ","
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        145,
                                        145
                                    ],
                                    "children": [],
                                    "content": ","
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        147,
                                        147
                                    ],
                                    "children": [],
                                    "content": ","
                                }
                            ],
                            "content": ",3,0,0,5],\n[0,5,0,0"
                        },
                        {
                            "type": "ArrayExpression",
                            "name": "",
                            "range": [
                                151,
                                169
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "1",
                                    "range": [
                                        152,
                                        152
                                    ],
                                    "children": [],
                                    "content": "0"
                                },
                                {
                                    "type": "Literal",
                                    "name": "3",
                                    "range": [
                                        154,
                                        154
                                    ],
                                    "children": [],
                                    "content": "6"
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        156,
                                        156
                                    ],
                                    "children": [],
                                    "content": "0"
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        158,
                                        158
                                    ],
                                    "children": [],
                                    "content": "0"
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        160,
                                        160
                                    ],
                                    "children": [],
                                    "content": ","
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        162,
                                        162
                                    ],
                                    "children": [],
                                    "content": "["
                                },
                                {
                                    "type": "Literal",
                                    "name": "2",
                                    "range": [
                                        164,
                                        164
                                    ],
                                    "children": [],
                                    "content": ","
                                },
                                {
                                    "type": "Literal",
                                    "name": "5",
                                    "range": [
                                        166,
                                        166
                                    ],
                                    "children": [],
                                    "content": ","
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        168,
                                        168
                                    ],
                                    "children": [],
                                    "content": ","
                                }
                            ],
                            "content": ",0,6,0,0],\n[1,3,0,0"
                        },
                        {
                            "type": "ArrayExpression",
                            "name": "",
                            "range": [
                                172,
                                190
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        173,
                                        173
                                    ],
                                    "children": [],
                                    "content": "0"
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        175,
                                        175
                                    ],
                                    "children": [],
                                    "content": "2"
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        177,
                                        177
                                    ],
                                    "children": [],
                                    "content": "5"
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        179,
                                        179
                                    ],
                                    "children": [],
                                    "content": "0"
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        181,
                                        181
                                    ],
                                    "children": [],
                                    "content": ","
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        183,
                                        183
                                    ],
                                    "children": [],
                                    "content": "["
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        185,
                                        185
                                    ],
                                    "children": [],
                                    "content": ","
                                },
                                {
                                    "type": "Literal",
                                    "name": "7",
                                    "range": [
                                        187,
                                        187
                                    ],
                                    "children": [],
                                    "content": ","
                                },
                                {
                                    "type": "Literal",
                                    "name": "4",
                                    "range": [
                                        189,
                                        189
                                    ],
                                    "children": [],
                                    "content": ","
                                }
                            ],
                            "content": ",0,2,5,0],\n[0,0,0,0"
                        },
                        {
                            "type": "ArrayExpression",
                            "name": "",
                            "range": [
                                193,
                                211
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        194,
                                        194
                                    ],
                                    "children": [],
                                    "content": "0"
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        196,
                                        196
                                    ],
                                    "children": [],
                                    "content": "0"
                                },
                                {
                                    "type": "Literal",
                                    "name": "5",
                                    "range": [
                                        198,
                                        198
                                    ],
                                    "children": [],
                                    "content": "7"
                                },
                                {
                                    "type": "Literal",
                                    "name": "2",
                                    "range": [
                                        200,
                                        200
                                    ],
                                    "children": [],
                                    "content": "4"
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        202,
                                        202
                                    ],
                                    "children": [],
                                    "content": ","
                                },
                                {
                                    "type": "Literal",
                                    "name": "6",
                                    "range": [
                                        204,
                                        204
                                    ],
                                    "children": [],
                                    "content": "["
                                },
                                {
                                    "type": "Literal",
                                    "name": "3",
                                    "range": [
                                        206,
                                        206
                                    ],
                                    "children": [],
                                    "content": ","
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        208,
                                        208
                                    ],
                                    "children": [],
                                    "content": ","
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        210,
                                        210
                                    ],
                                    "children": [],
                                    "content": ","
                                }
                            ],
                            "content": ",0,0,7,4],\n[0,0,5,2"
                        }
                    ],
                    "content": "assigning initial values to the grid\ninitial_grid:Matrix=[\n[3,0,6,5,0,8,4,0,0],\n[5,2,0,0,0,0,0,0,0],\n[0,8,7,0,0,0,0,3,1],\n[0,0,3,0,1,0,0,8,0],\n[9,0,0,8,6,3,0,0,5],\n[0,5,0,0,9,0,6,0,0],\n[1,3,0,0,0,0,2,5,0],\n[0,0,0,0,0,0,0,7,4],\n[0,0,5,2,0,"
                }
            ],
            "content": "]\n\n#assigning initial values to the grid\ninitial_grid:Matrix=[\n[3,0,6,5,0,8,4,0,0],\n[5,2,0,0,0,0,0,0,0],\n[0,8,7,0,0,0,0,3,1],\n[0,0,3,0,1,0,0,8,0],\n[9,0,0,8,6,3,0,0,5],\n[0,5,0,0,9,0,6,0,0],\n[1,3,0,0,0,0,2,5,0],\n[0,0,0,0,0,0,0,7,4],\n[0,0,5,2,0,6"
        },
        {
            "type": "VariableDeclaration",
            "name": "Matrix",
            "range": [
                216,
                412
            ],
            "children": [
                {
                    "type": "ArrayExpression",
                    "name": "",
                    "range": [
                        220,
                        411
                    ],
                    "children": [
                        {
                            "type": "ArrayExpression",
                            "name": "",
                            "range": [
                                222,
                                240
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "5",
                                    "range": [
                                        223,
                                        224
                                    ],
                                    "content": ",\n"
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        225,
                                        226
                                    ],
                                    "content": "]\n"
                                },
                                {
                                    "type": "Literal",
                                    "name": "6",
                                    "range": [
                                        227,
                                        228
                                    ],
                                    "content": "\n#"
                                },
                                {
                                    "type": "Literal",
                                    "name": "5",
                                    "range": [
                                        229,
                                        230
                                    ],
                                    "content": "a grid"
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        231,
                                        232
                                    ],
                                    "content": "with no"
                                },
                                {
                                    "type": "Literal",
                                    "name": "8",
                                    "range": [
                                        233,
                                        234
                                    ],
                                    "content": "solution\n"
                                },
                                {
                                    "type": "Literal",
                                    "name": "4",
                                    "range": [
                                        235,
                                        236
                                    ],
                                    "content": "no_solution:"
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        237,
                                        238
                                    ],
                                    "content": "Matrix="
                                },
                                {
                                    "type": "Literal",
                                    "name": "3",
                                    "range": [
                                        239,
                                        240
                                    ],
                                    "content": "[\n"
                                }
                            ],
                            "content": "],\n]\n\n#a grid with no solution\nno_solution:Matrix=[\n"
                        },
                        {
                            "type": "ArrayExpression",
                            "name": "",
                            "range": [
                                243,
                                261
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "5",
                                    "range": [
                                        244,
                                        245
                                    ],
                                    "content": "0,"
                                },
                                {
                                    "type": "Literal",
                                    "name": "2",
                                    "range": [
                                        246,
                                        247
                                    ],
                                    "content": "6,"
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        248,
                                        249
                                    ],
                                    "content": "5,"
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        250,
                                        251
                                    ],
                                    "content": "0,"
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        252,
                                        253
                                    ],
                                    "content": "8,"
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        254,
                                        255
                                    ],
                                    "content": "4,"
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        256,
                                        257
                                    ],
                                    "content": "0,"
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        258,
                                        259
                                    ],
                                    "content": "3]"
                                },
                                {
                                    "type": "Literal",
                                    "name": "2",
                                    "range": [
                                        260,
                                        261
                                    ],
                                    "content": ",\n"
                                }
                            ],
                            "content": ",0,6,5,0,8,4,0,3],\n"
                        },
                        {
                            "type": "ArrayExpression",
                            "name": "",
                            "range": [
                                264,
                                282
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "1",
                                    "range": [
                                        265,
                                        266
                                    ],
                                    "content": "2,"
                                },
                                {
                                    "type": "Literal",
                                    "name": "8",
                                    "range": [
                                        267,
                                        268
                                    ],
                                    "content": "0,"
                                },
                                {
                                    "type": "Literal",
                                    "name": "7",
                                    "range": [
                                        269,
                                        270
                                    ],
                                    "content": "0,"
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        271,
                                        272
                                    ],
                                    "content": "0,"
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        273,
                                        274
                                    ],
                                    "content": "0,"
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        275,
                                        276
                                    ],
                                    "content": "0,"
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        277,
                                        278
                                    ],
                                    "content": "0,"
                                },
                                {
                                    "type": "Literal",
                                    "name": "3",
                                    "range": [
                                        279,
                                        280
                                    ],
                                    "content": "2]"
                                },
                                {
                                    "type": "Literal",
                                    "name": "1",
                                    "range": [
                                        281,
                                        282
                                    ],
                                    "content": ",\n"
                                }
                            ],
                            "content": ",2,0,0,0,0,0,0,2],\n"
                        },
                        {
                            "type": "ArrayExpression",
                            "name": "",
                            "range": [
                                285,
                                303
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        286,
                                        287
                                    ],
                                    "content": "8,"
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        288,
                                        289
                                    ],
                                    "content": "7,"
                                },
                                {
                                    "type": "Literal",
                                    "name": "3",
                                    "range": [
                                        290,
                                        291
                                    ],
                                    "content": "0,"
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        292,
                                        293
                                    ],
                                    "content": "0,"
                                },
                                {
                                    "type": "Literal",
                                    "name": "1",
                                    "range": [
                                        294,
                                        295
                                    ],
                                    "content": "0,"
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        296,
                                        297
                                    ],
                                    "content": "0,"
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        298,
                                        299
                                    ],
                                    "content": "3,"
                                },
                                {
                                    "type": "Literal",
                                    "name": "8",
                                    "range": [
                                        300,
                                        301
                                    ],
                                    "content": "1]"
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        302,
                                        303
                                    ],
                                    "content": ",\n"
                                }
                            ],
                            "content": ",8,7,0,0,0,0,3,1],\n"
                        },
                        {
                            "type": "ArrayExpression",
                            "name": "",
                            "range": [
                                306,
                                324
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "9",
                                    "range": [
                                        307,
                                        308
                                    ],
                                    "content": "0,"
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        309,
                                        310
                                    ],
                                    "content": "3,"
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        311,
                                        312
                                    ],
                                    "content": "0,"
                                },
                                {
                                    "type": "Literal",
                                    "name": "8",
                                    "range": [
                                        313,
                                        314
                                    ],
                                    "content": "1,"
                                },
                                {
                                    "type": "Literal",
                                    "name": "6",
                                    "range": [
                                        315,
                                        316
                                    ],
                                    "content": "0,"
                                },
                                {
                                    "type": "Literal",
                                    "name": "3",
                                    "range": [
                                        317,
                                        318
                                    ],
                                    "content": "0,"
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        319,
                                        320
                                    ],
                                    "content": "8,"
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        321,
                                        322
                                    ],
                                    "content": "0]"
                                },
                                {
                                    "type": "Literal",
                                    "name": "5",
                                    "range": [
                                        323,
                                        324
                                    ],
                                    "content": ",\n"
                                }
                            ],
                            "content": ",0,3,0,1,0,0,8,0],\n"
                        },
                        {
                            "type": "ArrayExpression",
                            "name": "",
                            "range": [
                                327,
                                345
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        328,
                                        329
                                    ],
                                    "content": "0,"
                                },
                                {
                                    "type": "Literal",
                                    "name": "5",
                                    "range": [
                                        330,
                                        331
                                    ],
                                    "content": "0,"
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        332,
                                        333
                                    ],
                                    "content": "8,"
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        334,
                                        335
                                    ],
                                    "content": "6,"
                                },
                                {
                                    "type": "Literal",
                                    "name": "9",
                                    "range": [
                                        336,
                                        337
                                    ],
                                    "content": "3,"
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        338,
                                        339
                                    ],
                                    "content": "0,"
                                },
                                {
                                    "type": "Literal",
                                    "name": "6",
                                    "range": [
                                        340,
                                        341
                                    ],
                                    "content": "0,"
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        342,
                                        343
                                    ],
                                    "content": "5]"
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        344,
                                        345
                                    ],
                                    "content": ",\n"
                                }
                            ],
                            "content": ",0,0,8,6,3,0,0,5],\n"
                        },
                        {
                            "type": "ArrayExpression",
                            "name": "",
                            "range": [
                                348,
                                366
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "1",
                                    "range": [
                                        349,
                                        350
                                    ],
                                    "content": "5,"
                                },
                                {
                                    "type": "Literal",
                                    "name": "3",
                                    "range": [
                                        351,
                                        352
                                    ],
                                    "content": "0,"
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        353,
                                        354
                                    ],
                                    "content": "0,"
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        355,
                                        356
                                    ],
                                    "content": "9,"
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        357,
                                        358
                                    ],
                                    "content": "0,"
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        359,
                                        360
                                    ],
                                    "content": "6,"
                                },
                                {
                                    "type": "Literal",
                                    "name": "2",
                                    "range": [
                                        361,
                                        362
                                    ],
                                    "content": "0,"
                                },
                                {
                                    "type": "Literal",
                                    "name": "5",
                                    "range": [
                                        363,
                                        364
                                    ],
                                    "content": "0]"
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        365,
                                        366
                                    ],
                                    "content": ",\n"
                                }
                            ],
                            "content": ",5,0,0,9,0,6,0,0],\n"
                        },
                        {
                            "type": "ArrayExpression",
                            "name": "",
                            "range": [
                                369,
                                387
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        370,
                                        371
                                    ],
                                    "content": "3,"
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        372,
                                        373
                                    ],
                                    "content": "0,"
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        374,
                                        375
                                    ],
                                    "content": "0,"
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        376,
                                        377
                                    ],
                                    "content": "0,"
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        378,
                                        379
                                    ],
                                    "content": "0,"
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        380,
                                        381
                                    ],
                                    "content": "2,"
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        382,
                                        383
                                    ],
                                    "content": "5,"
                                },
                                {
                                    "type": "Literal",
                                    "name": "7",
                                    "range": [
                                        384,
                                        385
                                    ],
                                    "content": "0]"
                                },
                                {
                                    "type": "Literal",
                                    "name": "4",
                                    "range": [
                                        386,
                                        387
                                    ],
                                    "content": ",\n"
                                }
                            ],
                            "content": ",3,0,0,0,0,2,5,0],\n"
                        },
                        {
                            "type": "ArrayExpression",
                            "name": "",
                            "range": [
                                390,
                                408
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        391,
                                        392
                                    ],
                                    "content": "0,"
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        393,
                                        394
                                    ],
                                    "content": "0,"
                                },
                                {
                                    "type": "Literal",
                                    "name": "5",
                                    "range": [
                                        395,
                                        396
                                    ],
                                    "content": "0,"
                                },
                                {
                                    "type": "Literal",
                                    "name": "2",
                                    "range": [
                                        397,
                                        398
                                    ],
                                    "content": "0,"
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        399,
                                        400
                                    ],
                                    "content": "0,"
                                },
                                {
                                    "type": "Literal",
                                    "name": "6",
                                    "range": [
                                        401,
                                        402
                                    ],
                                    "content": "0,"
                                },
                                {
                                    "type": "Literal",
                                    "name": "3",
                                    "range": [
                                        403,
                                        404
                                    ],
                                    "content": "7,"
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        405,
                                        406
                                    ],
                                    "content": "4]"
                                },
                                {
                                    "type": "Literal",
                                    "name": "0",
                                    "range": [
                                        407,
                                        408
                                    ],
                                    "content": ",\n"
                                }
                            ],
                            "content": ",0,0,0,0,0,0,7,4],\n"
                        }
                    ],
                    "content": ",0],\n]\n\n#a grid with no solution\nno_solution:Matrix=[\n[5,0,6,5,0,8,4,0,3],\n[5,2,0,0,0,0,0,0,2],\n[1,8,7,0,0,0,0,3,1],\n[0,0,3,0,1,0,0,8,0],\n[9,0,0,8,6,3,0,0,5],\n[0,5,0,0,9,0,6,0,0],\n[1,3,0,0,0,0,2,5,0],\n[0,0,0,0,0,0,0,7,4],\n[0,"
                }
            ],
            "content": ",3,0,0],\n]\n\n#a grid with no solution\nno_solution:Matrix=[\n[5,0,6,5,0,8,4,0,3],\n[5,2,0,0,0,0,0,0,2],\n[1,8,7,0,0,0,0,3,1],\n[0,0,3,0,1,0,0,8,0],\n[9,0,0,8,6,3,0,0,5],\n[0,5,0,0,9,0,6,0,0],\n[1,3,0,0,0,0,2,5,0],\n[0,0,0,0,0,0,0,7,4],\n[0,0"
        },
        {
            "type": "FunctionDecl",
            "name": "is_safe",
            "range": [
                413,
                529
            ],
            "children": [
                {
                    "type": "ParameterList",
                    "name": "parameters",
                    "range": [
                        415,
                        431
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "grid",
                            "range": [
                                416,
                                418
                            ],
                            "children": [],
                            "content": "2,0"
                        },
                        {
                            "type": "Parameter",
                            "name": "row",
                            "range": [
                                420,
                                422
                            ],
                            "children": [],
                            "content": "6,3"
                        },
                        {
                            "type": "Parameter",
                            "name": "column",
                            "range": [
                                424,
                                426
                            ],
                            "children": [],
                            "content": "0,0"
                        },
                        {
                            "type": "Parameter",
                            "name": "n",
                            "range": [
                                428,
                                430
                            ],
                            "children": [],
                            "content": ",\n]"
                        }
                    ],
                    "content": ",2,0,6,3,0,0],\n]\n"
                },
                {
                    "type": "ReturnType",
                    "name": "bool",
                    "range": [
                        432,
                        434
                    ],
                    "children": [],
                    "content": "\n\ndef"
                },
                {
                    "type": "FunctionBody",
                    "name": "body",
                    "range": [
                        435,
                        529
                    ],
                    "children": [
                        {
                            "type": "Docstring",
                            "name": "docstring",
                            "range": [
                                437,
                                439
                            ],
                            "children": [],
                            "content": "grid:Matrix"
                        },
                        {
                            "type": "ForStatement",
                            "name": "for_loop",
                            "range": [
                                441,
                                474
                            ],
                            "children": [
                                {
                                    "type": "Range",
                                    "name": "range",
                                    "range": [
                                        444,
                                        447
                                    ],
                                    "children": [],
                                    "content": ",column:int"
                                },
                                {
                                    "type": "IfStatement",
                                    "name": "if_statement",
                                    "range": [
                                        450,
                                        473
                                    ],
                                    "children": [
                                        {
                                            "type": "Condition",
                                            "name": "condition",
                                            "range": [
                                                451,
                                                469
                                            ],
                                            "children": [],
                                            "content": "int)->bool:\n\"\"\" \\n     This function checks the grid to see if each row, \\n     column, and the 3x3 subgrids contain the digit 'n'. \\n     It returns False if it is not 'safe' (a duplicate digit \\n     is found) else returns True if it is 'safe' \\n     \"\"\"\nfor i in range(9):"
                                        },
                                        {
                                            "type": "ReturnStatement",
                                            "name": "return_false",
                                            "range": [
                                                472,
                                                473
                                            ],
                                            "children": [],
                                            "content": "n in"
                                        }
                                    ],
                                    "content": ":int)->bool:\n\"\"\" \\n     This function checks the grid to see if each row, \\n     column, and the 3x3 subgrids contain the digit 'n'. \\n     It returns False if it is not 'safe' (a duplicate digit \\n     is found) else returns True if it is 'safe' \\n     \"\"\"\nfor i in range(9):\nif n in"
                                }
                            ],
                            "content": "row:int,column:int,n:int)->bool:\n\"\"\" \\n     This function checks the grid to see if each row, \\n     column, and the 3x3 subgrids contain the digit 'n'. \\n     It returns False if it is not 'safe' (a duplicate digit \\n     is found) else returns True if it is 'safe' \\n     \"\"\"\nfor i in range(9):\nif n in{"
                        },
                        {
                            "type": "ForStatement",
                            "name": "for_loop",
                            "range": [
                                476,
                                525
                            ],
                            "children": [
                                {
                                    "type": "Range",
                                    "name": "range",
                                    "range": [
                                        479,
                                        482
                                    ],
                                    "children": [],
                                    "content": "[i],"
                                },
                                {
                                    "type": "ForStatement",
                                    "name": "for_loop",
                                    "range": [
                                        485,
                                        524
                                    ],
                                    "children": [
                                        {
                                            "type": "Range",
                                            "name": "range",
                                            "range": [
                                                488,
                                                491
                                            ],
                                            "children": [],
                                            "content": "column]}:"
                                        },
                                        {
                                            "type": "IfStatement",
                                            "name": "if_statement",
                                            "range": [
                                                494,
                                                523
                                            ],
                                            "children": [
                                                {
                                                    "type": "Condition",
                                                    "name": "condition",
                                                    "range": [
                                                        495,
                                                        520
                                                    ],
                                                    "children": [],
                                                    "content": "\n\nfor i in range(3):\nfor j in range(3):\nif grid[(row-"
                                                },
                                                {
                                                    "type": "ReturnStatement",
                                                    "name": "return_false",
                                                    "range": [
                                                        523,
                                                        524
                                                    ],
                                                    "children": [],
                                                    "content": "3)"
                                                }
                                            ],
                                            "content": "False\n\nfor i in range(3):\nfor j in range(3):\nif grid[(row-row%3"
                                        }
                                    ],
                                    "content": "i][column]}:\nreturn False\n\nfor i in range(3):\nfor j in range(3):\nif grid[(row-row%3)"
                                }
                            ],
                            "content": "[row][i],grid[i][column]}:\nreturn False\n\nfor i in range(3):\nfor j in range(3):\nif grid[(row-row%3)+"
                        },
                        {
                            "type": "ReturnStatement",
                            "name": "return_true",
                            "range": [
                                527,
                                528
                            ],
                            "children": [],
                            "content": "]["
                        }
                    ],
                    "content": "is_safe(grid:Matrix,row:int,column:int,n:int)->bool:\n\"\"\" \\n     This function checks the grid to see if each row, \\n     column, and the 3x3 subgrids contain the digit 'n'. \\n     It returns False if it is not 'safe' (a duplicate digit \\n     is found) else returns True if it is 'safe' \\n     \"\"\"\nfor i in range(9):\nif n in{grid[row][i],grid[i][column]}:\nreturn False\n\nfor i in range(3):\nfor j in range(3):\nif grid[(row-row%3)+i][("
                }
            ],
            "content": ",5,2,0,6,3,0,0],\n]\n\n\ndef is_safe(grid:Matrix,row:int,column:int,n:int)->bool:\n\"\"\" \\n     This function checks the grid to see if each row, \\n     column, and the 3x3 subgrids contain the digit 'n'. \\n     It returns False if it is not 'safe' (a duplicate digit \\n     is found) else returns True if it is 'safe' \\n     \"\"\"\nfor i in range(9):\nif n in{grid[row][i],grid[i][column]}:\nreturn False\n\nfor i in range(3):\nfor j in range(3):\nif grid[(row-row%3)+i][("
        },
        {
            "type": "FunctionDecl",
            "name": "find_empty_location",
            "range": [
                530,
                591
            ],
            "children": [
                {
                    "type": "FunctionSignature",
                    "name": "find_empty_location",
                    "range": [
                        530,
                        547
                    ],
                    "children": [
                        {
                            "type": "Keyword",
                            "name": "def",
                            "range": [
                                530,
                                533
                            ],
                            "children": [],
                            "content": "column-column%"
                        },
                        {
                            "type": "Identifier",
                            "name": "find_empty_location",
                            "range": [
                                531,
                                531
                            ],
                            "children": [],
                            "content": "-"
                        },
                        {
                            "type": "ParameterList",
                            "name": "grid",
                            "range": [
                                532,
                                536
                            ],
                            "children": [
                                {
                                    "type": "Parameter",
                                    "name": "grid",
                                    "range": [
                                        533,
                                        533
                                    ],
                                    "children": [],
                                    "content": "%"
                                },
                                {
                                    "type": "TypeAnnotation",
                                    "name": "Matrix",
                                    "range": [
                                        535,
                                        535
                                    ],
                                    "children": [],
                                    "content": ")"
                                }
                            ],
                            "content": "column%3)+"
                        },
                        {
                            "type": "ReturnType",
                            "name": "tuple[int, int] | None",
                            "range": [
                                537,
                                547
                            ],
                            "children": [
                                {
                                    "type": "Type",
                                    "name": "tuple",
                                    "range": [
                                        539,
                                        539
                                    ],
                                    "children": [],
                                    "content": "="
                                },
                                {
                                    "type": "Type",
                                    "name": "int",
                                    "range": [
                                        541,
                                        541
                                    ],
                                    "children": [],
                                    "content": "n"
                                },
                                {
                                    "type": "Type",
                                    "name": "int",
                                    "range": [
                                        543,
                                        543
                                    ],
                                    "children": [],
                                    "content": "\n"
                                },
                                {
                                    "type": "Type",
                                    "name": "None",
                                    "range": [
                                        546,
                                        546
                                    ],
                                    "children": [],
                                    "content": "\n"
                                }
                            ],
                            "content": "j]==n:\nreturn False\n\n"
                        }
                    ],
                    "content": "column-column%3)+j]==n:\nreturn False\n\n"
                },
                {
                    "type": "FunctionBody",
                    "name": "find_empty_location",
                    "range": [
                        548,
                        591
                    ],
                    "children": [
                        {
                            "type": "Docstring",
                            "name": "find_empty_location",
                            "range": [
                                549,
                                551
                            ],
                            "children": [],
                            "content": "True\n\n"
                        },
                        {
                            "type": "ForStatement",
                            "name": "i",
                            "range": [
                                553,
                                588
                            ],
                            "children": [
                                {
                                    "type": "ForStatement",
                                    "name": "i",
                                    "range": [
                                        553,
                                        560
                                    ],
                                    "children": [
                                        {
                                            "type": "Keyword",
                                            "name": "for",
                                            "range": [
                                                553,
                                                553
                                            ],
                                            "children": [],
                                            "content": "def"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "i",
                                            "range": [
                                                554,
                                                554
                                            ],
                                            "children": [],
                                            "content": "find_empty_location"
                                        },
                                        {
                                            "type": "Keyword",
                                            "name": "in",
                                            "range": [
                                                555,
                                                555
                                            ],
                                            "children": [],
                                            "content": "("
                                        },
                                        {
                                            "type": "Literal",
                                            "name": "9",
                                            "range": [
                                                556,
                                                559
                                            ],
                                            "children": [],
                                            "content": "grid:Matrix)"
                                        }
                                    ],
                                    "content": "def find_empty_location(grid:Matrix)-"
                                },
                                {
                                    "type": "ForStatement",
                                    "name": "j",
                                    "range": [
                                        562,
                                        588
                                    ],
                                    "children": [
                                        {
                                            "type": "ForStatement",
                                            "name": "j",
                                            "range": [
                                                562,
                                                569
                                            ],
                                            "children": [
                                                {
                                                    "type": "Keyword",
                                                    "name": "for",
                                                    "range": [
                                                        562,
                                                        562
                                                    ],
                                                    "children": [],
                                                    "content": "tuple"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "j",
                                                    "range": [
                                                        563,
                                                        563
                                                    ],
                                                    "children": [],
                                                    "content": "["
                                                },
                                                {
                                                    "type": "Keyword",
                                                    "name": "in",
                                                    "range": [
                                                        564,
                                                        564
                                                    ],
                                                    "children": [],
                                                    "content": "int"
                                                },
                                                {
                                                    "type": "Literal",
                                                    "name": "9",
                                                    "range": [
                                                        565,
                                                        568
                                                    ],
                                                    "children": [],
                                                    "content": ",int]|"
                                                }
                                            ],
                                            "content": "tuple[int,int]|None"
                                        },
                                        {
                                            "type": "IfStatement",
                                            "name": "grid[i][j] == 0",
                                            "range": [
                                                571,
                                                588
                                            ],
                                            "children": [
                                                {
                                                    "type": "Keyword",
                                                    "name": "if",
                                                    "range": [
                                                        571,
                                                        571
                                                    ],
                                                    "children": [],
                                                    "content": "\n"
                                                },
                                                {
                                                    "type": "BinaryExpression",
                                                    "name": "grid[i][j] == 0",
                                                    "range": [
                                                        572,
                                                        582
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "MemberExpression",
                                                            "name": "grid[i][j]",
                                                            "range": [
                                                                572,
                                                                578
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "grid",
                                                                    "range": [
                                                                        572,
                                                                        572
                                                                    ],
                                                                    "children": [],
                                                                    "content": "\"\""
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "i",
                                                                    "range": [
                                                                        574,
                                                                        574
                                                                    ],
                                                                    "children": [],
                                                                    "content": "\"\""
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "j",
                                                                    "range": [
                                                                        577,
                                                                        577
                                                                    ],
                                                                    "children": [],
                                                                    "content": "i"
                                                                }
                                                            ],
                                                            "content": "\"\"\" \\n     This function finds an empty location so that we can assign a number \\n     for that particular row and column. \\n     \"\"\"\nfor i in"
                                                        },
                                                        {
                                                            "type": "Operator",
                                                            "name": "==",
                                                            "range": [
                                                                579,
                                                                580
                                                            ],
                                                            "children": [],
                                                            "content": "range("
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "name": "0",
                                                            "range": [
                                                                581,
                                                                581
                                                            ],
                                                            "children": [],
                                                            "content": "9"
                                                        }
                                                    ],
                                                    "content": "\"\"\" \\n     This function finds an empty location so that we can assign a number \\n     for that particular row and column. \\n     \"\"\"\nfor i in range(9)"
                                                },
                                                {
                                                    "type": "ReturnStatement",
                                                    "name": "i, j",
                                                    "range": [
                                                        584,
                                                        588
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Keyword",
                                                            "name": "return",
                                                            "range": [
                                                                584,
                                                                584
                                                            ],
                                                            "children": [],
                                                            "content": "\n"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "i",
                                                            "range": [
                                                                585,
                                                                585
                                                            ],
                                                            "children": [],
                                                            "content": "for"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "j",
                                                            "range": [
                                                                587,
                                                                587
                                                            ],
                                                            "children": [],
                                                            "content": "in"
                                                        }
                                                    ],
                                                    "content": "\nfor j in range"
                                                }
                                            ],
                                            "content": "\n\"\"\" \\n     This function finds an empty location so that we can assign a number \\n     for that particular row and column. \\n     \"\"\"\nfor i in range(9):\nfor j in range"
                                        }
                                    ],
                                    "content": "tuple[int,int]|None:\n\"\"\" \\n     This function finds an empty location so that we can assign a number \\n     for that particular row and column. \\n     \"\"\"\nfor i in range(9):\nfor j in range"
                                }
                            ],
                            "content": "def find_empty_location(grid:Matrix)->tuple[int,int]|None:\n\"\"\" \\n     This function finds an empty location so that we can assign a number \\n     for that particular row and column. \\n     \"\"\"\nfor i in range(9):\nfor j in range"
                        },
                        {
                            "type": "ReturnStatement",
                            "name": "None",
                            "range": [
                                589,
                                591
                            ],
                            "children": [
                                {
                                    "type": "Keyword",
                                    "name": "return",
                                    "range": [
                                        589,
                                        589
                                    ],
                                    "children": [],
                                    "content": "("
                                },
                                {
                                    "type": "Keyword",
                                    "name": "None",
                                    "range": [
                                        590,
                                        590
                                    ],
                                    "children": [],
                                    "content": "9"
                                }
                            ],
                            "content": "(9)"
                        }
                    ],
                    "content": "return True\n\n\ndef find_empty_location(grid:Matrix)->tuple[int,int]|None:\n\"\"\" \\n     This function finds an empty location so that we can assign a number \\n     for that particular row and column. \\n     \"\"\"\nfor i in range(9):\nfor j in range(9)"
                }
            ],
            "content": "column-column%3)+j]==n:\nreturn False\n\nreturn True\n\n\ndef find_empty_location(grid:Matrix)->tuple[int,int]|None:\n\"\"\" \\n     This function finds an empty location so that we can assign a number \\n     for that particular row and column. \\n     \"\"\"\nfor i in range(9):\nfor j in range(9)"
        },
        {
            "type": "FunctionDecl",
            "name": "sudoku",
            "range": [
                592,
                713
            ],
            "children": [
                {
                    "type": "Parameter",
                    "name": "grid",
                    "range": [
                        595,
                        598
                    ],
                    "children": [],
                    "content": "grid[i]"
                },
                {
                    "type": "ReturnType",
                    "name": "Matrix | None",
                    "range": [
                        599,
                        604
                    ],
                    "children": [],
                    "content": "[j]==0"
                },
                {
                    "type": "Docstring",
                    "name": "",
                    "range": [
                        606,
                        608
                    ],
                    "children": [],
                    "content": "\nreturn i"
                },
                {
                    "type": "IfStatement",
                    "name": "",
                    "range": [
                        610,
                        649
                    ],
                    "children": [
                        {
                            "type": "AssignmentExpression",
                            "name": "location",
                            "range": [
                                611,
                                617
                            ],
                            "children": [],
                            "content": "\nreturn None\n\n\ndef"
                        },
                        {
                            "type": "AssignmentExpression",
                            "name": "row, column",
                            "range": [
                                620,
                                624
                            ],
                            "children": [],
                            "content": "grid:Matrix)-"
                        },
                        {
                            "type": "ReturnStatement",
                            "name": "",
                            "range": [
                                647,
                                648
                            ],
                            "children": [],
                            "content": "column="
                        }
                    ],
                    "content": "j\nreturn None\n\n\ndef sudoku(grid:Matrix)->Matrix|None:\n\"\"\" \\n     Takes a partially filled-in grid and attempts to assign values to \\n     all unassigned locations in such a way to meet the requirements \\n     for Sudoku solution (non-duplication across rows, columns, and boxes) \\n  \\n     >>> sudoku(initial_grid)  # doctest: +NORMALIZE_WHITESPACE \\n     [[3, 1, 6, 5, 7, 8, 4, 9, 2], \\n      [5, 2, 9, 1, 3, 4, 7, 6, 8], \\n      [4, 8, 7, 6, 2, 9, 5, 3, 1], \\n      [2, 6, 3, 4, 1, 5, 9, 8, 7], \\n      [9, 7, 4, 8, 6, 3, 1, 2, 5], \\n      [8, 5, 1, 7, 9, 2, 6, 4, 3], \\n      [1, 3, 8, 9, 4, 7, 2, 5, 6], \\n      [6, 9, 2, 3, 5, 1, 8, 7, 4], \\n      [7, 4, 5, 2, 8, 6, 3, 1, 9]] \\n      >>> sudoku(no_solution) is None \\n      True \\n     \"\"\"\nif location:=find_empty_location(grid):\nrow,column=location"
                },
                {
                    "type": "ForStatement",
                    "name": "",
                    "range": [
                        651,
                        709
                    ],
                    "children": [
                        {
                            "type": "Range",
                            "name": "digit",
                            "range": [
                                652,
                                659
                            ],
                            "children": [],
                            "content": ":\n#If the location is`"
                        },
                        {
                            "type": "IfStatement",
                            "name": "",
                            "range": [
                                662,
                                698
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "is_safe",
                                    "range": [
                                        663,
                                        672
                                    ],
                                    "children": [],
                                    "content": "`,then the grid is solved.\nreturn"
                                },
                                {
                                    "type": "AssignmentExpression",
                                    "name": "grid[row][column]",
                                    "range": [
                                        675,
                                        683
                                    ],
                                    "children": [],
                                    "content": "\nfor digit in range(1,10"
                                },
                                {
                                    "type": "CallExpression",
                                    "name": "sudoku",
                                    "range": [
                                        687,
                                        690
                                    ],
                                    "children": [],
                                    "content": "if is_safe(grid"
                                },
                                {
                                    "type": "ReturnStatement",
                                    "name": "",
                                    "range": [
                                        696,
                                        697
                                    ],
                                    "children": [],
                                    "content": "digit)"
                                }
                            ],
                            "content": "``,then the grid is solved.\nreturn grid\n\nfor digit in range(1,10):\nif is_safe(grid,row,column,digit):"
                        },
                        {
                            "type": "AssignmentExpression",
                            "name": "grid[row][column]",
                            "range": [
                                700,
                                708
                            ],
                            "children": [],
                            "content": "grid[row][column]=digit"
                        }
                    ],
                    "content": "else:\n#If the location is``None``,then the grid is solved.\nreturn grid\n\nfor digit in range(1,10):\nif is_safe(grid,row,column,digit):\ngrid[row][column]=digit\n"
                },
                {
                    "type": "ReturnStatement",
                    "name": "",
                    "range": [
                        711,
                        712
                    ],
                    "children": [],
                    "content": "if sudoku"
                }
            ],
            "content": ":\nif grid[i][j]==0:\nreturn i,j\nreturn None\n\n\ndef sudoku(grid:Matrix)->Matrix|None:\n\"\"\" \\n     Takes a partially filled-in grid and attempts to assign values to \\n     all unassigned locations in such a way to meet the requirements \\n     for Sudoku solution (non-duplication across rows, columns, and boxes) \\n  \\n     >>> sudoku(initial_grid)  # doctest: +NORMALIZE_WHITESPACE \\n     [[3, 1, 6, 5, 7, 8, 4, 9, 2], \\n      [5, 2, 9, 1, 3, 4, 7, 6, 8], \\n      [4, 8, 7, 6, 2, 9, 5, 3, 1], \\n      [2, 6, 3, 4, 1, 5, 9, 8, 7], \\n      [9, 7, 4, 8, 6, 3, 1, 2, 5], \\n      [8, 5, 1, 7, 9, 2, 6, 4, 3], \\n      [1, 3, 8, 9, 4, 7, 2, 5, 6], \\n      [6, 9, 2, 3, 5, 1, 8, 7, 4], \\n      [7, 4, 5, 2, 8, 6, 3, 1, 9]] \\n      >>> sudoku(no_solution) is None \\n      True \\n     \"\"\"\nif location:=find_empty_location(grid):\nrow,column=location\nelse:\n#If the location is``None``,then the grid is solved.\nreturn grid\n\nfor digit in range(1,10):\nif is_safe(grid,row,column,digit):\ngrid[row][column]=digit\n\nif sudoku("
        },
        {
            "type": "FunctionDecl",
            "name": "print_solution",
            "range": [
                714,
                755
            ],
            "children": [
                {
                    "type": "FunctionSignature",
                    "name": "print_solution",
                    "range": [
                        714,
                        724
                    ],
                    "children": [
                        {
                            "type": "Keyword",
                            "name": "def",
                            "range": [
                                714,
                                714
                            ],
                            "children": [],
                            "content": "grid"
                        },
                        {
                            "type": "Identifier",
                            "name": "print_solution",
                            "range": [
                                715,
                                715
                            ],
                            "children": [],
                            "content": ")"
                        },
                        {
                            "type": "ParameterList",
                            "name": "parameters",
                            "range": [
                                716,
                                720
                            ],
                            "children": [
                                {
                                    "type": "Parameter",
                                    "name": "grid",
                                    "range": [
                                        717,
                                        717
                                    ],
                                    "children": [],
                                    "content": "not"
                                },
                                {
                                    "type": "TypeAnnotation",
                                    "name": "Matrix",
                                    "range": [
                                        719,
                                        719
                                    ],
                                    "children": [],
                                    "content": ":"
                                }
                            ],
                            "content": "is not None:\n"
                        },
                        {
                            "type": "ReturnType",
                            "name": "None",
                            "range": [
                                721,
                                723
                            ],
                            "children": [],
                            "content": "return grid\n"
                        }
                    ],
                    "content": "grid)is not None:\nreturn grid\n\n"
                },
                {
                    "type": "FunctionBody",
                    "name": "body",
                    "range": [
                        725,
                        755
                    ],
                    "children": [
                        {
                            "type": "Docstring",
                            "name": "docstring",
                            "range": [
                                726,
                                728
                            ],
                            "children": [],
                            "content": "[row]"
                        },
                        {
                            "type": "ForStatement",
                            "name": "outer_loop",
                            "range": [
                                730,
                                750
                            ],
                            "children": [
                                {
                                    "type": "LoopHeader",
                                    "name": "header",
                                    "range": [
                                        730,
                                        734
                                    ],
                                    "children": [
                                        {
                                            "type": "Keyword",
                                            "name": "for",
                                            "range": [
                                                730,
                                                730
                                            ],
                                            "children": [],
                                            "content": "column"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "row",
                                            "range": [
                                                731,
                                                731
                                            ],
                                            "children": [],
                                            "content": "]"
                                        },
                                        {
                                            "type": "Keyword",
                                            "name": "in",
                                            "range": [
                                                732,
                                                732
                                            ],
                                            "children": [],
                                            "content": "="
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "grid",
                                            "range": [
                                                733,
                                                733
                                            ],
                                            "children": [],
                                            "content": "0"
                                        }
                                    ],
                                    "content": "column]=0\n"
                                },
                                {
                                    "type": "ForStatement",
                                    "name": "inner_loop",
                                    "range": [
                                        736,
                                        749
                                    ],
                                    "children": [
                                        {
                                            "type": "LoopHeader",
                                            "name": "header",
                                            "range": [
                                                736,
                                                740
                                            ],
                                            "children": [
                                                {
                                                    "type": "Keyword",
                                                    "name": "for",
                                                    "range": [
                                                        736,
                                                        736
                                                    ],
                                                    "children": [],
                                                    "content": "return"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "cell",
                                                    "range": [
                                                        737,
                                                        737
                                                    ],
                                                    "children": [],
                                                    "content": "None"
                                                },
                                                {
                                                    "type": "Keyword",
                                                    "name": "in",
                                                    "range": [
                                                        738,
                                                        738
                                                    ],
                                                    "children": [],
                                                    "content": "\n"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "row",
                                                    "range": [
                                                        739,
                                                        739
                                                    ],
                                                    "children": [],
                                                    "content": "\n"
                                                }
                                            ],
                                            "content": "return None\n\n\n"
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "name": "print",
                                            "range": [
                                                742,
                                                749
                                            ],
                                            "children": [
                                                {
                                                    "type": "CallExpression",
                                                    "name": "print",
                                                    "range": [
                                                        742,
                                                        749
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "print",
                                                            "range": [
                                                                742,
                                                                742
                                                            ],
                                                            "children": [],
                                                            "content": "print_solution"
                                                        },
                                                        {
                                                            "type": "ArgumentList",
                                                            "name": "arguments",
                                                            "range": [
                                                                743,
                                                                749
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "cell",
                                                                    "range": [
                                                                        744,
                                                                        744
                                                                    ],
                                                                    "children": [],
                                                                    "content": "grid"
                                                                },
                                                                {
                                                                    "type": "KeywordArgument",
                                                                    "name": "end",
                                                                    "range": [
                                                                        746,
                                                                        748
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "end",
                                                                            "range": [
                                                                                746,
                                                                                746
                                                                            ],
                                                                            "children": [],
                                                                            "content": "Matrix"
                                                                        },
                                                                        {
                                                                            "type": "Literal",
                                                                            "name": "\" \"",
                                                                            "range": [
                                                                                748,
                                                                                748
                                                                            ],
                                                                            "children": [],
                                                                            "content": "-"
                                                                        }
                                                                    ],
                                                                    "content": "Matrix)-"
                                                                }
                                                            ],
                                                            "content": "(grid:Matrix)->"
                                                        }
                                                    ],
                                                    "content": "print_solution(grid:Matrix)->"
                                                }
                                            ],
                                            "content": "print_solution(grid:Matrix)->"
                                        }
                                    ],
                                    "content": "return None\n\n\ndef print_solution(grid:Matrix)->"
                                }
                            ],
                            "content": "column]=0\n\nreturn None\n\n\ndef print_solution(grid:Matrix)->None"
                        },
                        {
                            "type": "ExpressionStatement",
                            "name": "print",
                            "range": [
                                751,
                                754
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "print",
                                    "range": [
                                        751,
                                        754
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "print",
                                            "range": [
                                                751,
                                                751
                                            ],
                                            "children": [],
                                            "content": ":"
                                        },
                                        {
                                            "type": "ArgumentList",
                                            "name": "arguments",
                                            "range": [
                                                752,
                                                754
                                            ],
                                            "children": [],
                                            "content": "\n\"\"\" \\n     A function to print the solution in the form \\n     of a 9x9 grid \\n     \""
                                        }
                                    ],
                                    "content": ":\n\"\"\" \\n     A function to print the solution in the form \\n     of a 9x9 grid \\n     \""
                                }
                            ],
                            "content": ":\n\"\"\" \\n     A function to print the solution in the form \\n     of a 9x9 grid \\n     \""
                        }
                    ],
                    "content": "grid[row][column]=0\n\nreturn None\n\n\ndef print_solution(grid:Matrix)->None:\n\"\"\" \\n     A function to print the solution in the form \\n     of a 9x9 grid \\n     \"\"\""
                }
            ],
            "content": "grid)is not None:\nreturn grid\n\ngrid[row][column]=0\n\nreturn None\n\n\ndef print_solution(grid:Matrix)->None:\n\"\"\" \\n     A function to print the solution in the form \\n     of a 9x9 grid \\n     \"\"\""
        },
        {
            "type": "IfStatement",
            "name": "",
            "range": [
                756,
                761
            ],
            "children": [
                {
                    "type": "BinaryExpression",
                    "name": "",
                    "range": [
                        757,
                        760
                    ],
                    "children": [
                        {
                            "type": "Identifier",
                            "name": "__name__",
                            "range": [
                                757,
                                757
                            ],
                            "children": [],
                            "content": "for"
                        },
                        {
                            "type": "Literal",
                            "name": "\"__main__\"",
                            "range": [
                                760,
                                760
                            ],
                            "children": [],
                            "content": "grid"
                        }
                    ],
                    "content": "for row in grid"
                }
            ],
            "content": "\nfor row in grid:"
        },
        {
            "type": "Comment",
            "name": "",
            "range": [
                763,
                777
            ],
            "children": [],
            "content": "for cell in row:\nprint(cell,end=\" \")\n"
        },
        {
            "type": "ForStatement",
            "name": "",
            "range": [
                779,
                787
            ],
            "children": [
                {
                    "type": "VariableDeclaration",
                    "name": "example_grid",
                    "range": [
                        780,
                        780
                    ],
                    "children": [],
                    "content": ")"
                },
                {
                    "type": "SequenceExpression",
                    "name": "",
                    "range": [
                        783,
                        785
                    ],
                    "children": [
                        {
                            "type": "Identifier",
                            "name": "initial_grid",
                            "range": [
                                783,
                                783
                            ],
                            "children": [],
                            "content": "\n"
                        },
                        {
                            "type": "Identifier",
                            "name": "no_solution",
                            "range": [
                                785,
                                785
                            ],
                            "children": [],
                            "content": "__name__"
                        }
                    ],
                    "content": "\nif __name__"
                }
            ],
            "content": "()\n\n\nif __name__=="
        },
        {
            "type": "ExpressionStatement",
            "name": "",
            "range": [
                789,
                796
            ],
            "children": [
                {
                    "type": "CallExpression",
                    "name": "print",
                    "range": [
                        789,
                        796
                    ],
                    "children": [
                        {
                            "type": "BinaryExpression",
                            "name": "",
                            "range": [
                                791,
                                795
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "\"\\nExample grid:\\n\"",
                                    "range": [
                                        791,
                                        791
                                    ],
                                    "children": [],
                                    "content": "#"
                                },
                                {
                                    "type": "Literal",
                                    "name": "\"=\"",
                                    "range": [
                                        793,
                                        793
                                    ],
                                    "children": [],
                                    "content": "a"
                                },
                                {
                                    "type": "Literal",
                                    "name": "20",
                                    "range": [
                                        795,
                                        795
                                    ],
                                    "children": [],
                                    "content": "of"
                                }
                            ],
                            "content": "#make a copy of"
                        }
                    ],
                    "content": ":\n#make a copy of grid"
                }
            ],
            "content": ":\n#make a copy of grid"
        },
        {
            "type": "ExpressionStatement",
            "name": "",
            "range": [
                798,
                801
            ],
            "children": [
                {
                    "type": "CallExpression",
                    "name": "print_solution",
                    "range": [
                        798,
                        801
                    ],
                    "children": [
                        {
                            "type": "Identifier",
                            "name": "example_grid",
                            "range": [
                                800,
                                800
                            ],
                            "children": [],
                            "content": "can"
                        }
                    ],
                    "content": "that you can compare"
                }
            ],
            "content": "that you can compare"
        },
        {
            "type": "ExpressionStatement",
            "name": "",
            "range": [
                803,
                806
            ],
            "children": [
                {
                    "type": "CallExpression",
                    "name": "print",
                    "range": [
                        803,
                        806
                    ],
                    "children": [
                        {
                            "type": "Literal",
                            "name": "\"\\nExample grid solution:\"",
                            "range": [
                                805,
                                805
                            ],
                            "children": [],
                            "content": "grid"
                        }
                    ],
                    "content": "the unmodified grid\n"
                }
            ],
            "content": "the unmodified grid\n"
        },
        {
            "type": "VariableDeclaration",
            "name": "solution",
            "range": [
                808,
                814
            ],
            "children": [
                {
                    "type": "CallExpression",
                    "name": "sudoku",
                    "range": [
                        810,
                        813
                    ],
                    "children": [
                        {
                            "type": "Identifier",
                            "name": "example_grid",
                            "range": [
                                812,
                                812
                            ],
                            "children": [],
                            "content": ","
                        }
                    ],
                    "content": "(initial_grid,no_solution"
                }
            ],
            "content": "example_grid in(initial_grid,no_solution)"
        },
        {
            "type": "IfStatement",
            "name": "",
            "range": [
                815,
                820
            ],
            "children": [
                {
                    "type": "BinaryExpression",
                    "name": "",
                    "range": [
                        816,
                        819
                    ],
                    "children": [
                        {
                            "type": "Identifier",
                            "name": "solution",
                            "range": [
                                816,
                                816
                            ],
                            "children": [],
                            "content": "\n"
                        },
                        {
                            "type": "Literal",
                            "name": "None",
                            "range": [
                                819,
                                819
                            ],
                            "children": [],
                            "content": "\"\\nExample grid:\\n\""
                        }
                    ],
                    "content": "\nprint(\"\\nExample grid:\\n\""
                }
            ],
            "content": ":\nprint(\"\\nExample grid:\\n\"+"
        },
        {
            "type": "ExpressionStatement",
            "name": "",
            "range": [
                822,
                825
            ],
            "children": [
                {
                    "type": "CallExpression",
                    "name": "print_solution",
                    "range": [
                        822,
                        825
                    ],
                    "children": [
                        {
                            "type": "Identifier",
                            "name": "solution",
                            "range": [
                                824,
                                824
                            ],
                            "children": [],
                            "content": ")"
                        }
                    ],
                    "content": "*20)\n"
                }
            ],
            "content": "*20)\n"
        },
        {
            "type": "ExpressionStatement",
            "name": "",
            "range": [
                830,
                833
            ],
            "children": [
                {
                    "type": "CallExpression",
                    "name": "print",
                    "range": [
                        830,
                        833
                    ],
                    "children": [
                        {
                            "type": "Literal",
                            "name": "\"Cannot find a solution.\"",
                            "range": [
                                832,
                                832
                            ],
                            "children": [],
                            "content": "("
                        }
                    ],
                    "content": "\nprint(\"\\nExample grid solution:\""
                }
            ],
            "content": "\nprint(\"\\nExample grid solution:\""
        }
    ],
    "content": "\"\"\" \\n Given a partially filled 9x9 2D array, the objective is to fill a 9x9 \\n square grid with digits numbered 1 to 9, so that every row, column, and \\n and each of the nine 3x3 sub-grids contains all of the digits. \\n  \\n This can be solved using Backtracking and is similar to n-queens. \\n We check to see if a cell is safe or not and recursively call the \\n function on the next column to see if it returns True. if yes, we \\n have solved the puzzle. else, we backtrack and place another number \\n in that cell and repeat this process. \\n \"\"\"\n\nfrom __future__ import annotations\n\nMatrix=list[list[int]]\n\n#assigning initial values to the grid\ninitial_grid:Matrix=[\n[3,0,6,5,0,8,4,0,0],\n[5,2,0,0,0,0,0,0,0],\n[0,8,7,0,0,0,0,3,1],\n[0,0,3,0,1,0,0,8,0],\n[9,0,0,8,6,3,0,0,5],\n[0,5,0,0,9,0,6,0,0],\n[1,3,0,0,0,0,2,5,0],\n[0,0,0,0,0,0,0,7,4],\n[0,0,5,2,0,6,3,0,0],\n]\n\n#a grid with no solution\nno_solution:Matrix=[\n[5,0,6,5,0,8,4,0,3],\n[5,2,0,0,0,0,0,0,2],\n[1,8,7,0,0,0,0,3,1],\n[0,0,3,0,1,0,0,8,0],\n[9,0,0,8,6,3,0,0,5],\n[0,5,0,0,9,0,6,0,0],\n[1,3,0,0,0,0,2,5,0],\n[0,0,0,0,0,0,0,7,4],\n[0,0,5,2,0,6,3,0,0],\n]\n\n\ndef is_safe(grid:Matrix,row:int,column:int,n:int)->bool:\n\"\"\" \\n     This function checks the grid to see if each row, \\n     column, and the 3x3 subgrids contain the digit 'n'. \\n     It returns False if it is not 'safe' (a duplicate digit \\n     is found) else returns True if it is 'safe' \\n     \"\"\"\nfor i in range(9):\nif n in{grid[row][i],grid[i][column]}:\nreturn False\n\nfor i in range(3):\nfor j in range(3):\nif grid[(row-row%3)+i][(column-column%3)+j]==n:\nreturn False\n\nreturn True\n\n\ndef find_empty_location(grid:Matrix)->tuple[int,int]|None:\n\"\"\" \\n     This function finds an empty location so that we can assign a number \\n     for that particular row and column. \\n     \"\"\"\nfor i in range(9):\nfor j in range(9):\nif grid[i][j]==0:\nreturn i,j\nreturn None\n\n\ndef sudoku(grid:Matrix)->Matrix|None:\n\"\"\" \\n     Takes a partially filled-in grid and attempts to assign values to \\n     all unassigned locations in such a way to meet the requirements \\n     for Sudoku solution (non-duplication across rows, columns, and boxes) \\n  \\n     >>> sudoku(initial_grid)  # doctest: +NORMALIZE_WHITESPACE \\n     [[3, 1, 6, 5, 7, 8, 4, 9, 2], \\n      [5, 2, 9, 1, 3, 4, 7, 6, 8], \\n      [4, 8, 7, 6, 2, 9, 5, 3, 1], \\n      [2, 6, 3, 4, 1, 5, 9, 8, 7], \\n      [9, 7, 4, 8, 6, 3, 1, 2, 5], \\n      [8, 5, 1, 7, 9, 2, 6, 4, 3], \\n      [1, 3, 8, 9, 4, 7, 2, 5, 6], \\n      [6, 9, 2, 3, 5, 1, 8, 7, 4], \\n      [7, 4, 5, 2, 8, 6, 3, 1, 9]] \\n      >>> sudoku(no_solution) is None \\n      True \\n     \"\"\"\nif location:=find_empty_location(grid):\nrow,column=location\nelse:\n#If the location is``None``,then the grid is solved.\nreturn grid\n\nfor digit in range(1,10):\nif is_safe(grid,row,column,digit):\ngrid[row][column]=digit\n\nif sudoku(grid)is not None:\nreturn grid\n\ngrid[row][column]=0\n\nreturn None\n\n\ndef print_solution(grid:Matrix)->None:\n\"\"\" \\n     A function to print the solution in the form \\n     of a 9x9 grid \\n     \"\"\"\nfor row in grid:\nfor cell in row:\nprint(cell,end=\" \")\nprint()\n\n\nif __name__==\"__main__\":\n#make a copy of grid so that you can compare with the unmodified grid\nfor example_grid in(initial_grid,no_solution):\nprint(\"\\nExample grid:\\n\"+\"=\"*20)\nprint_solution(example_grid)\nprint(\"\\nExample grid solution:\")\n"
}