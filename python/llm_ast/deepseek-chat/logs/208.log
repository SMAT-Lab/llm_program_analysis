2025-01-08 10:27:27,806 - INFO - Processing sample 208
2025-01-08 10:27:27,807 - INFO - Starting Step 0: Splitting code into top-level declarations
2025-01-08 10:27:34,111 - INFO - Successfully split code into 3 top-level declarations
2025-01-08 10:27:34,113 - INFO - Processing chunk #0 (size=75 chars, start_index=0)
2025-01-08 10:27:34,113 - INFO - Processing chunk with 75 chars starting at index 0
2025-01-08 10:27:34,113 - INFO - Starting main AST analysis flow
2025-01-08 10:27:34,113 - INFO - Tokenized code into 19 tokens
2025-01-08 10:27:34,113 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:34,114 - INFO - Processing chunk #1 (size=523 chars, start_index=19)
2025-01-08 10:27:34,114 - INFO - Processing chunk with 523 chars starting at index 19
2025-01-08 10:27:34,114 - INFO - Starting main AST analysis flow
2025-01-08 10:27:34,115 - INFO - Tokenized code into 113 tokens
2025-01-08 10:27:34,115 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:34,116 - INFO - Processing chunk #2 (size=600 chars, start_index=132)
2025-01-08 10:27:34,117 - INFO - Processing chunk with 600 chars starting at index 132
2025-01-08 10:27:34,121 - INFO - Starting main AST analysis flow
2025-01-08 10:27:34,121 - INFO - Tokenized code into 132 tokens
2025-01-08 10:27:34,121 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:42,748 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [0, 18], 'children': [{'type': 'ImportDeclaration', 'name': 'asyncio', 'range': [0, 2], 'children': []}, {'type': 'ImportDeclaration', 'name': 'pytest', 'range': [4, 6], 'children': []}, {'type': 'ImportDeclaration', 'name': 'conn_retry', 'range': [8, 16], 'children': []}]}
2025-01-08 10:27:42,750 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:27:44,163 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [132, 263], 'children': [{'type': 'FunctionDeclaration', 'name': 'test_conn_retry_async_function', 'range': [139, 212], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'test_function', 'range': [175, 212], 'children': []}, {'type': 'VariableDeclaration', 'name': 'retry_count', 'range': [214, 217], 'children': []}, {'type': 'VariableDeclaration', 'name': 'res', 'range': [218, 224], 'children': []}, {'type': 'VariableDeclaration', 'name': 'retry_count', 'range': [232, 235], 'children': []}, {'type': 'WithStatement', 'name': '', 'range': [236, 262], 'children': []}]}
2025-01-08 10:27:44,190 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:27:44,682 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [19, 131], 'children': [{'type': 'FunctionDeclaration', 'name': 'test_conn_retry_sync_function', 'range': [19, 53], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'test_function', 'range': [54, 82], 'children': []}, {'type': 'VariableDeclaration', 'name': 'retry_count', 'range': [84, 87], 'children': []}, {'type': 'ExpressionStatement', 'name': '', 'range': [88, 93], 'children': []}, {'type': 'AssertStatement', 'name': '', 'range': [94, 99], 'children': []}, {'type': 'VariableDeclaration', 'name': 'retry_count', 'range': [101, 104], 'children': []}, {'type': 'WithStatement', 'name': '', 'range': [105, 119], 'children': []}, {'type': 'AssertStatement', 'name': '', 'range': [120, 130], 'children': []}]}
2025-01-08 10:27:44,682 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:27:56,806 - INFO - Step 2 result: {'nodes': [{'type': 'ImportDeclaration', 'name': 'asyncio', 'range': [0, 2], 'children': [{'type': 'ImportSpecifier', 'name': 'asyncio', 'range': [0, 2], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'pytest', 'range': [4, 6], 'children': [{'type': 'ImportSpecifier', 'name': 'pytest', 'range': [4, 6], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'conn_retry', 'range': [8, 16], 'children': [{'type': 'ImportSpecifier', 'name': 'conn_retry', 'range': [14, 16], 'children': []}, {'type': 'FromClause', 'name': 'backend.util.retry', 'range': [8, 13], 'children': []}]}]}
2025-01-08 10:27:56,806 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:07,399 - INFO - Step 3 result: {'nodes': [{'type': 'ImportDeclaration', 'name': 'asyncio', 'range': [0, 2], 'children': [{'type': 'ImportSpecifier', 'name': 'asyncio', 'range': [0, 2], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'pytest', 'range': [4, 6], 'children': [{'type': 'ImportSpecifier', 'name': 'pytest', 'range': [4, 6], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'conn_retry', 'range': [8, 16], 'children': [{'type': 'ImportSpecifier', 'name': 'conn_retry', 'range': [14, 16], 'children': []}, {'type': 'FromClause', 'name': 'backend.util.retry', 'range': [8, 13], 'children': []}]}]}
2025-01-08 10:28:07,596 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:11,380 - INFO - Step 2 result: {'type': 'Program', 'name': '', 'range': [19, 131], 'children': [{'type': 'FunctionDeclaration', 'name': 'test_conn_retry_sync_function', 'range': [19, 53], 'children': [{'type': 'ParameterList', 'name': '', 'range': [21, 22], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [24, 53], 'children': [{'type': 'VariableDeclaration', 'name': 'retry_count', 'range': [25, 27], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'test_function', 'range': [54, 82], 'children': [{'type': 'ParameterList', 'name': '', 'range': [56, 57], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [59, 82], 'children': [{'type': 'NonLocalStatement', 'name': 'retry_count', 'range': [60, 61], 'children': []}, {'type': 'ExpressionStatement', 'name': '', 'range': [63, 66], 'children': []}, {'type': 'IfStatement', 'name': '', 'range': [68, 78], 'children': [{'type': 'BinaryExpression', 'name': '', 'range': [69, 71], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [73, 78], 'children': [{'type': 'RaiseStatement', 'name': '', 'range': [74, 78], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [80, 81], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'retry_count', 'range': [84, 87], 'children': []}, {'type': 'ExpressionStatement', 'name': '', 'range': [88, 93], 'children': []}, {'type': 'AssertStatement', 'name': '', 'range': [94, 99], 'children': []}, {'type': 'VariableDeclaration', 'name': 'retry_count', 'range': [101, 104], 'children': []}, {'type': 'WithStatement', 'name': '', 'range': [105, 119], 'children': [{'type': 'CallExpression', 'name': 'pytest.raises', 'range': [106, 111], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [114, 119], 'children': [{'type': 'ExpressionStatement', 'name': '', 'range': [116, 118], 'children': []}]}]}, {'type': 'AssertStatement', 'name': '', 'range': [120, 130], 'children': []}]}
2025-01-08 10:28:11,380 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:22,373 - INFO - Step 4 result: {'nodes': [{'type': 'ImportDeclaration', 'name': 'asyncio', 'range': [0, 2], 'children': [{'type': 'ImportSpecifier', 'name': 'asyncio', 'range': [0, 2], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'pytest', 'range': [4, 6], 'children': [{'type': 'ImportSpecifier', 'name': 'pytest', 'range': [4, 6], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'conn_retry', 'range': [8, 16], 'children': [{'type': 'ImportSpecifier', 'name': 'conn_retry', 'range': [14, 16], 'children': []}, {'type': 'FromClause', 'name': 'backend.util.retry', 'range': [8, 13], 'children': []}]}]}
2025-01-08 10:28:22,374 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:28:29,533 - INFO - Step 5 result: {'nodes': [{'type': 'Program', 'name': 'MainOrSomething', 'range': [0, 16], 'children': [{'type': 'ImportDeclaration', 'name': 'asyncio', 'range': [0, 2], 'children': [{'type': 'ImportSpecifier', 'name': 'asyncio', 'range': [0, 2], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'pytest', 'range': [4, 6], 'children': [{'type': 'ImportSpecifier', 'name': 'pytest', 'range': [4, 6], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'conn_retry', 'range': [8, 16], 'children': [{'type': 'ImportSpecifier', 'name': 'conn_retry', 'range': [14, 16], 'children': []}, {'type': 'FromClause', 'name': 'backend.util.retry', 'range': [8, 13], 'children': []}]}]}]}
2025-01-08 10:28:29,533 - INFO - Completed main AST analysis flow
2025-01-08 10:28:29,533 - INFO - Successfully processed chunk
2025-01-08 10:28:32,332 - INFO - Step 3 result: {'type': 'Program', 'name': '', 'range': [19, 131], 'children': [{'type': 'FunctionDeclaration', 'name': 'test_conn_retry_sync_function', 'range': [19, 53], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [24, 53], 'children': [{'type': 'VariableDeclaration', 'name': 'retry_count', 'range': [25, 27], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'test_function', 'range': [54, 82], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [59, 82], 'children': [{'type': 'NonLocalStatement', 'name': 'retry_count', 'range': [60, 61], 'children': []}, {'type': 'ExpressionStatement', 'name': '', 'range': [63, 66], 'children': []}, {'type': 'IfStatement', 'name': '', 'range': [68, 78], 'children': [{'type': 'BinaryExpression', 'name': '', 'range': [69, 71], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [73, 78], 'children': [{'type': 'RaiseStatement', 'name': '', 'range': [74, 78], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [80, 81], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'retry_count', 'range': [84, 87], 'children': []}, {'type': 'ExpressionStatement', 'name': '', 'range': [88, 93], 'children': []}, {'type': 'AssertStatement', 'name': '', 'range': [94, 99], 'children': []}, {'type': 'VariableDeclaration', 'name': 'retry_count', 'range': [101, 104], 'children': []}, {'type': 'WithStatement', 'name': '', 'range': [105, 119], 'children': [{'type': 'CallExpression', 'name': 'pytest.raises', 'range': [106, 111], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [114, 119], 'children': [{'type': 'ExpressionStatement', 'name': '', 'range': [116, 118], 'children': []}]}]}, {'type': 'AssertStatement', 'name': '', 'range': [120, 130], 'children': []}]}
2025-01-08 10:28:32,332 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:48,514 - INFO - Step 4 result: {'type': 'Program', 'name': '', 'range': [19, 131], 'children': [{'type': 'FunctionDecl', 'name': 'test_conn_retry_sync_function', 'range': [19, 53], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [24, 53], 'children': [{'type': 'VariableDecl', 'name': 'retry_count', 'range': [25, 27], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'test_function', 'range': [54, 82], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [59, 82], 'children': [{'type': 'NonLocalStatement', 'name': 'retry_count', 'range': [60, 61], 'children': []}, {'type': 'ExpressionStatement', 'name': '', 'range': [63, 66], 'children': []}, {'type': 'IfStatement', 'name': '', 'range': [68, 78], 'children': [{'type': 'BinaryExpression', 'name': '', 'range': [69, 71], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [73, 78], 'children': [{'type': 'RaiseStatement', 'name': '', 'range': [74, 78], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [80, 81], 'children': []}]}]}, {'type': 'VariableDecl', 'name': 'retry_count', 'range': [84, 87], 'children': []}, {'type': 'ExpressionStatement', 'name': '', 'range': [88, 93], 'children': []}, {'type': 'AssertStatement', 'name': '', 'range': [94, 99], 'children': []}, {'type': 'VariableDecl', 'name': 'retry_count', 'range': [101, 104], 'children': []}, {'type': 'WithStatement', 'name': '', 'range': [105, 119], 'children': [{'type': 'CallExpression', 'name': 'pytest.raises', 'range': [106, 111], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [114, 119], 'children': [{'type': 'ExpressionStatement', 'name': '', 'range': [116, 118], 'children': []}]}]}, {'type': 'AssertStatement', 'name': '', 'range': [120, 130], 'children': []}]}
2025-01-08 10:28:48,537 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:29:03,118 - INFO - Step 5 result: {'type': 'Program', 'name': '', 'range': [19, 131], 'children': [{'type': 'FunctionDecl', 'name': 'test_conn_retry_sync_function', 'range': [19, 53], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [24, 53], 'children': [{'type': 'VariableDecl', 'name': 'retry_count', 'range': [25, 27], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'test_function', 'range': [54, 82], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [59, 82], 'children': [{'type': 'NonLocalStatement', 'name': 'retry_count', 'range': [60, 61], 'children': []}, {'type': 'ExpressionStatement', 'name': '', 'range': [63, 66], 'children': []}, {'type': 'IfStatement', 'name': '', 'range': [68, 78], 'children': [{'type': 'BinaryExpression', 'name': '', 'range': [69, 71], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [73, 78], 'children': [{'type': 'RaiseStatement', 'name': '', 'range': [74, 78], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [80, 81], 'children': []}]}]}, {'type': 'VariableDecl', 'name': 'retry_count', 'range': [84, 87], 'children': []}, {'type': 'ExpressionStatement', 'name': '', 'range': [88, 93], 'children': []}, {'type': 'AssertStatement', 'name': '', 'range': [94, 99], 'children': []}, {'type': 'VariableDecl', 'name': 'retry_count', 'range': [101, 104], 'children': []}, {'type': 'WithStatement', 'name': '', 'range': [105, 119], 'children': [{'type': 'CallExpression', 'name': 'pytest.raises', 'range': [106, 111], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [114, 119], 'children': [{'type': 'ExpressionStatement', 'name': '', 'range': [116, 118], 'children': []}]}]}, {'type': 'AssertStatement', 'name': '', 'range': [120, 130], 'children': []}]}
2025-01-08 10:29:03,118 - INFO - Completed main AST analysis flow
2025-01-08 10:29:03,118 - INFO - Successfully processed chunk
2025-01-08 10:29:10,576 - INFO - Step 2 result: {'nodes': [{'type': 'FunctionDeclaration', 'name': 'test_conn_retry_async_function', 'range': [139, 212], 'children': [{'type': 'Decorator', 'name': '@pytest.mark.asyncio', 'range': [132, 138], 'children': []}, {'type': 'FunctionSignature', 'name': '', 'range': [139, 144], 'children': [{'type': 'Keyword', 'name': 'async', 'range': [139, 144], 'children': []}, {'type': 'Keyword', 'name': 'def', 'range': [140, 143], 'children': []}, {'type': 'Identifier', 'name': 'test_conn_retry_async_function', 'range': [141, 142], 'children': []}, {'type': 'Punctuation', 'name': '(', 'range': [142, 143], 'children': []}, {'type': 'Punctuation', 'name': ')', 'range': [143, 144], 'children': []}, {'type': 'Punctuation', 'name': ':', 'range': [144, 145], 'children': []}]}, {'type': 'Block', 'name': '', 'range': [145, 212], 'children': [{'type': 'VariableDeclaration', 'name': 'retry_count', 'range': [146, 149], 'children': [{'type': 'Identifier', 'name': 'retry_count', 'range': [146, 147], 'children': []}, {'type': 'Operator', 'name': '=', 'range': [147, 148], 'children': []}, {'type': 'NumericLiteral', 'name': '0', 'range': [148, 149], 'children': []}]}, {'type': 'Decorator', 'name': '@conn_retry', 'range': [151, 174], 'children': [{'type': 'CallExpression', 'name': '', 'range': [153, 173], 'children': [{'type': 'StringLiteral', 'name': '"Test"', 'range': [154, 155], 'children': []}, {'type': 'Punctuation', 'name': ',', 'range': [155, 156], 'children': []}, {'type': 'StringLiteral', 'name': '"Test function"', 'range': [156, 157], 'children': []}, {'type': 'Punctuation', 'name': ',', 'range': [157, 158], 'children': []}, {'type': 'Identifier', 'name': 'max_retry', 'range': [158, 159], 'children': []}, {'type': 'Operator', 'name': '=', 'range': [159, 160], 'children': []}, {'type': 'NumericLiteral', 'name': '2', 'range': [160, 161], 'children': []}, {'type': 'Punctuation', 'name': ',', 'range': [161, 162], 'children': []}, {'type': 'Identifier', 'name': 'max_wait', 'range': [162, 163], 'children': []}, {'type': 'Operator', 'name': '=', 'range': [163, 164], 'children': []}, {'type': 'NumericLiteral', 'name': '0.1', 'range': [164, 167], 'children': []}, {'type': 'Punctuation', 'name': ',', 'range': [167, 168], 'children': []}, {'type': 'Identifier', 'name': 'min_wait', 'range': [168, 169], 'children': []}, {'type': 'Operator', 'name': '=', 'range': [169, 170], 'children': []}, {'type': 'NumericLiteral', 'name': '0.1', 'range': [170, 173], 'children': []}, {'type': 'Punctuation', 'name': ')', 'range': [173, 174], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'test_function', 'range': [175, 212], 'children': [{'type': 'FunctionSignature', 'name': '', 'range': [175, 180], 'children': [{'type': 'Keyword', 'name': 'async', 'range': [175, 180], 'children': []}, {'type': 'Keyword', 'name': 'def', 'range': [176, 179], 'children': []}, {'type': 'Identifier', 'name': 'test_function', 'range': [177, 178], 'children': []}, {'type': 'Punctuation', 'name': '(', 'range': [178, 179], 'children': []}, {'type': 'Punctuation', 'name': ')', 'range': [179, 180], 'children': []}, {'type': 'Punctuation', 'name': ':', 'range': [180, 181], 'children': []}]}, {'type': 'Block', 'name': '', 'range': [181, 212], 'children': [{'type': 'NonlocalStatement', 'name': 'retry_count', 'range': [182, 184], 'children': [{'type': 'Keyword', 'name': 'nonlocal', 'range': [182, 183], 'children': []}, {'type': 'Identifier', 'name': 'retry_count', 'range': [183, 184], 'children': []}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [185, 192], 'children': [{'type': 'AwaitExpression', 'name': '', 'range': [185, 191], 'children': [{'type': 'CallExpression', 'name': '', 'range': [186, 191], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [186, 188], 'children': [{'type': 'Identifier', 'name': 'asyncio', 'range': [186, 187], 'children': []}, {'type': 'Punctuation', 'name': '.', 'range': [187, 188], 'children': []}, {'type': 'Identifier', 'name': 'sleep', 'range': [188, 189], 'children': []}]}, {'type': 'Punctuation', 'name': '(', 'range': [189, 190], 'children': []}, {'type': 'NumericLiteral', 'name': '1', 'range': [190, 191], 'children': []}, {'type': 'Punctuation', 'name': ')', 'range': [191, 192], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [193, 197], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [193, 196], 'children': [{'type': 'Identifier', 'name': 'retry_count', 'range': [193, 194], 'children': []}, {'type': 'Operator', 'name': '-=', 'range': [194, 196], 'children': []}, {'type': 'NumericLiteral', 'name': '1', 'range': [196, 197], 'children': []}]}]}, {'type': 'IfStatement', 'name': '', 'range': [198, 209], 'children': [{'type': 'Condition', 'name': '', 'range': [199, 202], 'children': [{'type': 'Identifier', 'name': 'retry_count', 'range': [199, 200], 'children': []}, {'type': 'Operator', 'name': '>', 'range': [200, 201], 'children': []}, {'type': 'NumericLiteral', 'name': '0', 'range': [201, 202], 'children': []}]}, {'type': 'Block', 'name': '', 'range': [203, 209], 'children': [{'type': 'ThrowStatement', 'name': '', 'range': [204, 208], 'children': [{'type': 'Keyword', 'name': 'raise', 'range': [204, 205], 'children': []}, {'type': 'NewExpression', 'name': '', 'range': [205, 208], 'children': [{'type': 'Identifier', 'name': 'ValueError', 'range': [205, 206], 'children': []}, {'type': 'Punctuation', 'name': '(', 'range': [206, 207], 'children': []}, {'type': 'StringLiteral', 'name': '"Test error"', 'range': [207, 208], 'children': []}, {'type': 'Punctuation', 'name': ')', 'range': [208, 209], 'children': []}]}]}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [210, 212], 'children': [{'type': 'Keyword', 'name': 'return', 'range': [210, 211], 'children': []}, {'type': 'StringLiteral', 'name': '"Success"', 'range': [211, 212], 'children': []}]}]}]}]}]}, {'type': 'VariableDeclaration', 'name': 'retry_count', 'range': [214, 217], 'children': [{'type': 'Identifier', 'name': 'retry_count', 'range': [214, 215], 'children': []}, {'type': 'Operator', 'name': '=', 'range': [215, 216], 'children': []}, {'type': 'NumericLiteral', 'name': '2', 'range': [216, 217], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'res', 'range': [218, 224], 'children': [{'type': 'Identifier', 'name': 'res', 'range': [218, 219], 'children': []}, {'type': 'Operator', 'name': '=', 'range': [219, 220], 'children': []}, {'type': 'AwaitExpression', 'name': '', 'range': [220, 223], 'children': [{'type': 'CallExpression', 'name': '', 'range': [221, 223], 'children': [{'type': 'Identifier', 'name': 'test_function', 'range': [221, 222], 'children': []}, {'type': 'Punctuation', 'name': '(', 'range': [222, 223], 'children': []}, {'type': 'Punctuation', 'name': ')', 'range': [223, 224], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'retry_count', 'range': [232, 235], 'children': [{'type': 'Identifier', 'name': 'retry_count', 'range': [232, 233], 'children': []}, {'type': 'Operator', 'name': '=', 'range': [233, 234], 'children': []}, {'type': 'NumericLiteral', 'name': '100', 'range': [234, 235], 'children': []}]}, {'type': 'WithStatement', 'name': '', 'range': [236, 262], 'children': [{'type': 'WithClause', 'name': '', 'range': [236, 245], 'children': [{'type': 'CallExpression', 'name': '', 'range': [237, 244], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [237, 239], 'children': [{'type': 'Identifier', 'name': 'pytest', 'range': [237, 238], 'children': []}, {'type': 'Punctuation', 'name': '.', 'range': [238, 239], 'children': []}, {'type': 'Identifier', 'name': 'raises', 'range': [239, 240], 'children': []}]}, {'type': 'Punctuation', 'name': '(', 'range': [240, 241], 'children': []}, {'type': 'Identifier', 'name': 'ValueError', 'range': [241, 242], 'children': []}, {'type': 'Punctuation', 'name': ')', 'range': [242, 243], 'children': []}, {'type': 'Keyword', 'name': 'as', 'range': [243, 244], 'children': []}, {'type': 'Identifier', 'name': 'e', 'range': [244, 245], 'children': []}]}]}, {'type': 'Block', 'name': '', 'range': [246, 262], 'children': [{'type': 'ExpressionStatement', 'name': '', 'range': [247, 251], 'children': [{'type': 'AwaitExpression', 'name': '', 'range': [247, 250], 'children': [{'type': 'CallExpression', 'name': '', 'range': [248, 250], 'children': [{'type': 'Identifier', 'name': 'test_function', 'range': [248, 249], 'children': []}, {'type': 'Punctuation', 'name': '(', 'range': [249, 250], 'children': []}, {'type': 'Punctuation', 'name': ')', 'range': [250, 251], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [252, 262], 'children': [{'type': 'CallExpression', 'name': '', 'range': [253, 261], 'children': [{'type': 'Identifier', 'name': 'assert', 'range': [252, 253], 'children': []}, {'type': 'CallExpression', 'name': '', 'range': [253, 261], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [253, 257], 'children': [{'type': 'Identifier', 'name': 'str', 'range': [253, 254], 'children': []}, {'type': 'Punctuation', 'name': '(', 'range': [254, 255], 'children': []}, {'type': 'Identifier', 'name': 'e', 'range': [255, 256], 'children': []}, {'type': 'Punctuation', 'name': '.', 'range': [256, 257], 'children': []}, {'type': 'Identifier', 'name': 'value', 'range': [257, 258], 'children': []}, {'type': 'Punctuation', 'name': ')', 'range': [258, 259], 'children': []}]}, {'type': 'Operator', 'name': '==', 'range': [259, 261], 'children': []}, {'type': 'StringLiteral', 'name': '"Test error"', 'range': [261, 262], 'children': []}]}]}]}]}]}]}
2025-01-08 10:29:10,577 - INFO - Starting Step 3: AST simplification
2025-01-08 10:30:05,783 - INFO - Step 3 result: {'nodes': [{'type': 'FunctionDeclaration', 'name': 'test_conn_retry_async_function', 'range': [139, 212], 'children': [{'type': 'Decorator', 'name': '@pytest.mark.asyncio', 'range': [132, 138], 'children': []}, {'type': 'FunctionSignature', 'name': '', 'range': [139, 144], 'children': [{'type': 'Keyword', 'name': 'async', 'range': [139, 144], 'children': []}, {'type': 'Keyword', 'name': 'def', 'range': [140, 143], 'children': []}, {'type': 'Identifier', 'name': 'test_conn_retry_async_function', 'range': [141, 142], 'children': []}]}, {'type': 'Block', 'name': '', 'range': [145, 212], 'children': [{'type': 'VariableDeclaration', 'name': 'retry_count', 'range': [146, 149], 'children': [{'type': 'Identifier', 'name': 'retry_count', 'range': [146, 147], 'children': []}, {'type': 'NumericLiteral', 'name': '0', 'range': [148, 149], 'children': []}]}, {'type': 'Decorator', 'name': '@conn_retry', 'range': [151, 174], 'children': [{'type': 'CallExpression', 'name': '', 'range': [153, 173], 'children': [{'type': 'StringLiteral', 'name': '"Test"', 'range': [154, 155], 'children': []}, {'type': 'StringLiteral', 'name': '"Test function"', 'range': [156, 157], 'children': []}, {'type': 'Identifier', 'name': 'max_retry', 'range': [158, 159], 'children': []}, {'type': 'NumericLiteral', 'name': '2', 'range': [160, 161], 'children': []}, {'type': 'Identifier', 'name': 'max_wait', 'range': [162, 163], 'children': []}, {'type': 'NumericLiteral', 'name': '0.1', 'range': [164, 167], 'children': []}, {'type': 'Identifier', 'name': 'min_wait', 'range': [168, 169], 'children': []}, {'type': 'NumericLiteral', 'name': '0.1', 'range': [170, 173], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'test_function', 'range': [175, 212], 'children': [{'type': 'FunctionSignature', 'name': '', 'range': [175, 180], 'children': [{'type': 'Keyword', 'name': 'async', 'range': [175, 180], 'children': []}, {'type': 'Keyword', 'name': 'def', 'range': [176, 179], 'children': []}, {'type': 'Identifier', 'name': 'test_function', 'range': [177, 178], 'children': []}]}, {'type': 'Block', 'name': '', 'range': [181, 212], 'children': [{'type': 'NonlocalStatement', 'name': 'retry_count', 'range': [182, 184], 'children': [{'type': 'Keyword', 'name': 'nonlocal', 'range': [182, 183], 'children': []}, {'type': 'Identifier', 'name': 'retry_count', 'range': [183, 184], 'children': []}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [185, 192], 'children': [{'type': 'AwaitExpression', 'name': '', 'range': [185, 191], 'children': [{'type': 'CallExpression', 'name': '', 'range': [186, 191], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [186, 188], 'children': [{'type': 'Identifier', 'name': 'asyncio', 'range': [186, 187], 'children': []}, {'type': 'Identifier', 'name': 'sleep', 'range': [188, 189], 'children': []}]}, {'type': 'NumericLiteral', 'name': '1', 'range': [190, 191], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [193, 197], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [193, 196], 'children': [{'type': 'Identifier', 'name': 'retry_count', 'range': [193, 194], 'children': []}, {'type': 'NumericLiteral', 'name': '1', 'range': [196, 197], 'children': []}]}]}, {'type': 'IfStatement', 'name': '', 'range': [198, 209], 'children': [{'type': 'Condition', 'name': '', 'range': [199, 202], 'children': [{'type': 'Identifier', 'name': 'retry_count', 'range': [199, 200], 'children': []}, {'type': 'NumericLiteral', 'name': '0', 'range': [201, 202], 'children': []}]}, {'type': 'Block', 'name': '', 'range': [203, 209], 'children': [{'type': 'ThrowStatement', 'name': '', 'range': [204, 208], 'children': [{'type': 'Keyword', 'name': 'raise', 'range': [204, 205], 'children': []}, {'type': 'NewExpression', 'name': '', 'range': [205, 208], 'children': [{'type': 'Identifier', 'name': 'ValueError', 'range': [205, 206], 'children': []}, {'type': 'StringLiteral', 'name': '"Test error"', 'range': [207, 208], 'children': []}]}]}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [210, 212], 'children': [{'type': 'Keyword', 'name': 'return', 'range': [210, 211], 'children': []}, {'type': 'StringLiteral', 'name': '"Success"', 'range': [211, 212], 'children': []}]}]}]}]}]}, {'type': 'VariableDeclaration', 'name': 'retry_count', 'range': [214, 217], 'children': [{'type': 'Identifier', 'name': 'retry_count', 'range': [214, 215], 'children': []}, {'type': 'NumericLiteral', 'name': '2', 'range': [216, 217], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'res', 'range': [218, 224], 'children': [{'type': 'Identifier', 'name': 'res', 'range': [218, 219], 'children': []}, {'type': 'AwaitExpression', 'name': '', 'range': [220, 223], 'children': [{'type': 'CallExpression', 'name': '', 'range': [221, 223], 'children': [{'type': 'Identifier', 'name': 'test_function', 'range': [221, 222], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'retry_count', 'range': [232, 235], 'children': [{'type': 'Identifier', 'name': 'retry_count', 'range': [232, 233], 'children': []}, {'type': 'NumericLiteral', 'name': '100', 'range': [234, 235], 'children': []}]}, {'type': 'WithStatement', 'name': '', 'range': [236, 262], 'children': [{'type': 'WithClause', 'name': '', 'range': [236, 245], 'children': [{'type': 'CallExpression', 'name': '', 'range': [237, 244], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [237, 239], 'children': [{'type': 'Identifier', 'name': 'pytest', 'range': [237, 238], 'children': []}, {'type': 'Identifier', 'name': 'raises', 'range': [239, 240], 'children': []}]}, {'type': 'Identifier', 'name': 'ValueError', 'range': [241, 242], 'children': []}, {'type': 'Identifier', 'name': 'e', 'range': [244, 245], 'children': []}]}]}, {'type': 'Block', 'name': '', 'range': [246, 262], 'children': [{'type': 'ExpressionStatement', 'name': '', 'range': [247, 251], 'children': [{'type': 'AwaitExpression', 'name': '', 'range': [247, 250], 'children': [{'type': 'CallExpression', 'name': '', 'range': [248, 250], 'children': [{'type': 'Identifier', 'name': 'test_function', 'range': [248, 249], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [252, 262], 'children': [{'type': 'CallExpression', 'name': '', 'range': [253, 261], 'children': [{'type': 'Identifier', 'name': 'assert', 'range': [252, 253], 'children': []}, {'type': 'CallExpression', 'name': '', 'range': [253, 261], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [253, 257], 'children': [{'type': 'Identifier', 'name': 'str', 'range': [253, 254], 'children': []}, {'type': 'Identifier', 'name': 'e', 'range': [255, 256], 'children': []}, {'type': 'Identifier', 'name': 'value', 'range': [257, 258], 'children': []}]}, {'type': 'StringLiteral', 'name': '"Test error"', 'range': [261, 262], 'children': []}]}]}]}]}]}]}
2025-01-08 10:30:05,783 - INFO - Starting Step 4: AST normalization
2025-01-08 10:31:01,226 - INFO - Step 4 result: {'nodes': [{'type': 'FunctionDecl', 'name': 'test_conn_retry_async_function', 'range': [139, 212], 'children': [{'type': 'Decorator', 'name': '@pytest.mark.asyncio', 'range': [132, 138], 'children': []}, {'type': 'FunctionSignature', 'name': '', 'range': [139, 144], 'children': [{'type': 'Keyword', 'name': 'async', 'range': [139, 144], 'children': []}, {'type': 'Keyword', 'name': 'def', 'range': [140, 143], 'children': []}, {'type': 'Identifier', 'name': 'test_conn_retry_async_function', 'range': [141, 142], 'children': []}]}, {'type': 'Block', 'name': '', 'range': [145, 212], 'children': [{'type': 'VariableDecl', 'name': 'retry_count', 'range': [146, 149], 'children': [{'type': 'Identifier', 'name': 'retry_count', 'range': [146, 147], 'children': []}, {'type': 'Literal', 'name': '0', 'range': [148, 149], 'children': []}]}, {'type': 'Decorator', 'name': '@conn_retry', 'range': [151, 174], 'children': [{'type': 'CallExpression', 'name': '', 'range': [153, 173], 'children': [{'type': 'Literal', 'name': '"Test"', 'range': [154, 155], 'children': []}, {'type': 'Literal', 'name': '"Test function"', 'range': [156, 157], 'children': []}, {'type': 'Identifier', 'name': 'max_retry', 'range': [158, 159], 'children': []}, {'type': 'Literal', 'name': '2', 'range': [160, 161], 'children': []}, {'type': 'Identifier', 'name': 'max_wait', 'range': [162, 163], 'children': []}, {'type': 'Literal', 'name': '0.1', 'range': [164, 167], 'children': []}, {'type': 'Identifier', 'name': 'min_wait', 'range': [168, 169], 'children': []}, {'type': 'Literal', 'name': '0.1', 'range': [170, 173], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'test_function', 'range': [175, 212], 'children': [{'type': 'FunctionSignature', 'name': '', 'range': [175, 180], 'children': [{'type': 'Keyword', 'name': 'async', 'range': [175, 180], 'children': []}, {'type': 'Keyword', 'name': 'def', 'range': [176, 179], 'children': []}, {'type': 'Identifier', 'name': 'test_function', 'range': [177, 178], 'children': []}]}, {'type': 'Block', 'name': '', 'range': [181, 212], 'children': [{'type': 'NonlocalStatement', 'name': 'retry_count', 'range': [182, 184], 'children': [{'type': 'Keyword', 'name': 'nonlocal', 'range': [182, 183], 'children': []}, {'type': 'Identifier', 'name': 'retry_count', 'range': [183, 184], 'children': []}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [185, 192], 'children': [{'type': 'AwaitExpression', 'name': '', 'range': [185, 191], 'children': [{'type': 'CallExpression', 'name': '', 'range': [186, 191], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [186, 188], 'children': [{'type': 'Identifier', 'name': 'asyncio', 'range': [186, 187], 'children': []}, {'type': 'Identifier', 'name': 'sleep', 'range': [188, 189], 'children': []}]}, {'type': 'Literal', 'name': '1', 'range': [190, 191], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [193, 197], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [193, 196], 'children': [{'type': 'Identifier', 'name': 'retry_count', 'range': [193, 194], 'children': []}, {'type': 'Literal', 'name': '1', 'range': [196, 197], 'children': []}]}]}, {'type': 'IfStatement', 'name': '', 'range': [198, 209], 'children': [{'type': 'Condition', 'name': '', 'range': [199, 202], 'children': [{'type': 'Identifier', 'name': 'retry_count', 'range': [199, 200], 'children': []}, {'type': 'Literal', 'name': '0', 'range': [201, 202], 'children': []}]}, {'type': 'Block', 'name': '', 'range': [203, 209], 'children': [{'type': 'ThrowStatement', 'name': '', 'range': [204, 208], 'children': [{'type': 'Keyword', 'name': 'raise', 'range': [204, 205], 'children': []}, {'type': 'NewExpression', 'name': '', 'range': [205, 208], 'children': [{'type': 'Identifier', 'name': 'ValueError', 'range': [205, 206], 'children': []}, {'type': 'Literal', 'name': '"Test error"', 'range': [207, 208], 'children': []}]}]}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [210, 212], 'children': [{'type': 'Keyword', 'name': 'return', 'range': [210, 211], 'children': []}, {'type': 'Literal', 'name': '"Success"', 'range': [211, 212], 'children': []}]}]}]}]}]}, {'type': 'VariableDecl', 'name': 'retry_count', 'range': [214, 217], 'children': [{'type': 'Identifier', 'name': 'retry_count', 'range': [214, 215], 'children': []}, {'type': 'Literal', 'name': '2', 'range': [216, 217], 'children': []}]}, {'type': 'VariableDecl', 'name': 'res', 'range': [218, 224], 'children': [{'type': 'Identifier', 'name': 'res', 'range': [218, 219], 'children': []}, {'type': 'AwaitExpression', 'name': '', 'range': [220, 223], 'children': [{'type': 'CallExpression', 'name': '', 'range': [221, 223], 'children': [{'type': 'Identifier', 'name': 'test_function', 'range': [221, 222], 'children': []}]}]}]}, {'type': 'VariableDecl', 'name': 'retry_count', 'range': [232, 235], 'children': [{'type': 'Identifier', 'name': 'retry_count', 'range': [232, 233], 'children': []}, {'type': 'Literal', 'name': '100', 'range': [234, 235], 'children': []}]}, {'type': 'WithStatement', 'name': '', 'range': [236, 262], 'children': [{'type': 'WithClause', 'name': '', 'range': [236, 245], 'children': [{'type': 'CallExpression', 'name': '', 'range': [237, 244], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [237, 239], 'children': [{'type': 'Identifier', 'name': 'pytest', 'range': [237, 238], 'children': []}, {'type': 'Identifier', 'name': 'raises', 'range': [239, 240], 'children': []}]}, {'type': 'Identifier', 'name': 'ValueError', 'range': [241, 242], 'children': []}, {'type': 'Identifier', 'name': 'e', 'range': [244, 245], 'children': []}]}]}, {'type': 'Block', 'name': '', 'range': [246, 262], 'children': [{'type': 'ExpressionStatement', 'name': '', 'range': [247, 251], 'children': [{'type': 'AwaitExpression', 'name': '', 'range': [247, 250], 'children': [{'type': 'CallExpression', 'name': '', 'range': [248, 250], 'children': [{'type': 'Identifier', 'name': 'test_function', 'range': [248, 249], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [252, 262], 'children': [{'type': 'CallExpression', 'name': '', 'range': [253, 261], 'children': [{'type': 'Identifier', 'name': 'assert', 'range': [252, 253], 'children': []}, {'type': 'CallExpression', 'name': '', 'range': [253, 261], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [253, 257], 'children': [{'type': 'Identifier', 'name': 'str', 'range': [253, 254], 'children': []}, {'type': 'Identifier', 'name': 'e', 'range': [255, 256], 'children': []}, {'type': 'Identifier', 'name': 'value', 'range': [257, 258], 'children': []}]}, {'type': 'Literal', 'name': '"Test error"', 'range': [261, 262], 'children': []}]}]}]}]}]}]}
2025-01-08 10:31:01,226 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:31:56,009 - ERROR - Failed to parse Step 5 result
2025-01-08 10:31:56,010 - INFO - Completed main AST analysis flow
2025-01-08 10:31:56,010 - INFO - Successfully processed chunk
2025-01-08 10:31:56,016 - INFO - Starting code generation from AST
2025-01-08 10:31:59,349 - INFO - Successfully generated code from AST
2025-01-08 10:31:59,351 - INFO - Starting static code similarity comparison
2025-01-08 10:31:59,353 - INFO - Static similarity result: {'final_score': 67.51, 'length_similarity': 43.38, 'token_similarity': 78.43, 'structure_similarity': 43.24, 'function_similarity': 100, 'complexity_similarity': 66.67, 'variable_similarity': 100}
