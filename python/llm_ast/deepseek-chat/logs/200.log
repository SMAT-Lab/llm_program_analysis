2025-01-08 10:27:27,738 - INFO - Processing sample 200
2025-01-08 10:27:27,739 - INFO - Starting Step 0: Splitting code into top-level declarations
2025-01-08 10:27:37,898 - INFO - Successfully split code into 11 top-level declarations
2025-01-08 10:27:38,794 - INFO - Processing chunk #0 (size=194 chars, start_index=0)
2025-01-08 10:27:38,795 - INFO - Processing chunk with 194 chars starting at index 0
2025-01-08 10:27:38,795 - INFO - Starting main AST analysis flow
2025-01-08 10:27:38,806 - INFO - Tokenized code into 43 tokens
2025-01-08 10:27:38,863 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:38,875 - INFO - Processing chunk #1 (size=599 chars, start_index=43)
2025-01-08 10:27:39,060 - INFO - Processing chunk with 599 chars starting at index 43
2025-01-08 10:27:39,061 - INFO - Starting main AST analysis flow
2025-01-08 10:27:39,061 - INFO - Tokenized code into 131 tokens
2025-01-08 10:27:39,066 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:39,073 - INFO - Processing chunk #2 (size=122 chars, start_index=174)
2025-01-08 10:27:39,233 - INFO - Processing chunk with 122 chars starting at index 174
2025-01-08 10:27:39,238 - INFO - Starting main AST analysis flow
2025-01-08 10:27:39,243 - INFO - Tokenized code into 27 tokens
2025-01-08 10:27:39,243 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:41,223 - INFO - Processing chunk #3 (size=373 chars, start_index=201)
2025-01-08 10:27:41,254 - INFO - Processing chunk with 373 chars starting at index 201
2025-01-08 10:27:41,269 - INFO - Processing chunk #4 (size=2 chars, start_index=295)
2025-01-08 10:27:41,274 - INFO - Processing chunk #5 (size=216 chars, start_index=297)
2025-01-08 10:27:41,282 - INFO - Starting main AST analysis flow
2025-01-08 10:27:41,283 - INFO - Processing chunk #6 (size=2 chars, start_index=334)
2025-01-08 10:27:41,297 - INFO - Processing chunk with 2 chars starting at index 295
2025-01-08 10:27:41,310 - INFO - Processing chunk with 216 chars starting at index 297
2025-01-08 10:27:41,319 - INFO - Tokenized code into 94 tokens
2025-01-08 10:27:41,322 - INFO - Processing chunk with 2 chars starting at index 334
2025-01-08 10:27:41,336 - INFO - Starting main AST analysis flow
2025-01-08 10:27:41,339 - INFO - Starting main AST analysis flow
2025-01-08 10:27:41,354 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:41,357 - INFO - Starting main AST analysis flow
2025-01-08 10:27:41,359 - INFO - Tokenized code into 2 tokens
2025-01-08 10:27:41,404 - INFO - Tokenized code into 37 tokens
2025-01-08 10:27:41,430 - INFO - Tokenized code into 2 tokens
2025-01-08 10:27:41,441 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:41,451 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:41,452 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:41,464 - INFO - Processing chunk #7 (size=1894 chars, start_index=336)
2025-01-08 10:27:41,465 - INFO - Processing chunk with 1894 chars starting at index 336
2025-01-08 10:27:41,465 - INFO - Processing chunk #8 (size=2 chars, start_index=640)
2025-01-08 10:27:41,465 - INFO - Starting main AST analysis flow
2025-01-08 10:27:41,467 - INFO - Processing chunk #9 (size=2304 chars, start_index=642)
2025-01-08 10:27:41,467 - INFO - Processing chunk with 2 chars starting at index 640
2025-01-08 10:27:41,468 - INFO - Tokenized code into 304 tokens
2025-01-08 10:27:41,469 - INFO - Processing chunk with 2304 chars starting at index 642
2025-01-08 10:27:41,469 - INFO - Processing chunk #10 (size=77 chars, start_index=1192)
2025-01-08 10:27:41,470 - INFO - Starting main AST analysis flow
2025-01-08 10:27:41,472 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:41,474 - INFO - Starting main AST analysis flow
2025-01-08 10:27:41,476 - INFO - Processing chunk with 77 chars starting at index 1192
2025-01-08 10:27:41,480 - INFO - Tokenized code into 2 tokens
2025-01-08 10:27:41,485 - INFO - Tokenized code into 550 tokens
2025-01-08 10:27:41,486 - INFO - Starting main AST analysis flow
2025-01-08 10:27:41,487 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:41,495 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:41,828 - INFO - Tokenized code into 15 tokens
2025-01-08 10:27:41,870 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:48,655 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [174, 200], 'children': [{'type': 'VariableDeclaration', 'name': 'ALLOWED_SCHEMES', 'range': [175, 181], 'children': []}, {'type': 'VariableDeclaration', 'name': 'HOSTNAME_REGEX', 'range': [183, 191], 'children': []}]}
2025-01-08 10:27:48,995 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:27:50,250 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [0, 42], 'children': [{'type': 'ImportDeclaration', 'name': 'ipaddress', 'range': [0, 2], 'children': []}, {'type': 'ImportDeclaration', 'name': 're', 'range': [3, 5], 'children': []}, {'type': 'ImportDeclaration', 'name': 'socket', 'range': [6, 8], 'children': []}, {'type': 'ImportDeclaration', 'name': 'Callable', 'range': [9, 13], 'children': []}, {'type': 'ImportDeclaration', 'name': 'urlparse, urlunparse', 'range': [14, 22], 'children': []}, {'type': 'ImportDeclaration', 'name': 'idna', 'range': [24, 26], 'children': []}, {'type': 'ImportDeclaration', 'name': 'req', 'range': [27, 31], 'children': []}, {'type': 'ImportDeclaration', 'name': 'Config', 'range': [33, 41], 'children': []}]}
2025-01-08 10:27:50,268 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:27:51,076 - INFO - Step 1 result: {'type': 'Program', 'name': '_is_ip_blocked', 'range': [297, 333], 'children': []}
2025-01-08 10:27:51,090 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:27:51,099 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [295, 296], 'children': []}
2025-01-08 10:27:51,105 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:27:51,328 - INFO - Step 1 result: {'type': 'Program', 'name': '_canonicalize_url', 'range': [201, 294], 'children': []}
2025-01-08 10:27:51,328 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:27:51,374 - INFO - Step 1 result: {'type': 'Program', 'name': 'validate_url', 'range': [336, 639], 'children': []}
2025-01-08 10:27:51,374 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:27:51,709 - INFO - Step 1 result: {'error': "Insufficient data to identify top-level declarations. The provided token list does not contain any tokens that can be identified as part of a top-level declaration in the 'cangjie' programming language."}
2025-01-08 10:27:51,709 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:27:51,772 - INFO - Step 1 result: {'error': "Insufficient data to identify top-level declarations. The provided token list does not contain any tokens that can be identified as part of a top-level declaration in the 'cangjie' programming language."}
2025-01-08 10:27:51,773 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:27:58,503 - INFO - Step 1 result: {'type': 'Program', 'name': 'Requests', 'range': [642, 1191], 'children': [{'type': 'FunctionDeclaration', 'name': '__init__', 'range': [651, 774], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'request', 'range': [776, 917], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'get', 'range': [919, 956], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'post', 'range': [958, 995], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'put', 'range': [997, 1034], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'delete', 'range': [1036, 1073], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'head', 'range': [1075, 1112], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'options', 'range': [1114, 1151], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'patch', 'range': [1153, 1190], 'children': []}]}
2025-01-08 10:27:58,524 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:27:59,360 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [43, 173], 'children': [{'type': 'VariableDeclaration', 'name': 'BLOCKED_IP_NETWORKS', 'range': [51, 173], 'children': [{'type': 'ArrayLiteral', 'name': '', 'range': [53, 172], 'children': [{'type': 'Comment', 'name': '', 'range': [55, 61], 'children': []}, {'type': 'ArrayElement', 'name': '', 'range': [63, 66], 'children': []}, {'type': 'FunctionCall', 'name': 'ipaddress.ip_network', 'range': [68, 73], 'children': []}, {'type': 'Comment', 'name': '', 'range': [75, 77], 'children': []}, {'type': 'FunctionCall', 'name': 'ipaddress.ip_network', 'range': [79, 84], 'children': []}, {'type': 'Comment', 'name': '', 'range': [86, 89], 'children': []}, {'type': 'FunctionCall', 'name': 'ipaddress.ip_network', 'range': [91, 96], 'children': []}, {'type': 'Comment', 'name': '', 'range': [98, 99], 'children': []}, {'type': 'FunctionCall', 'name': 'ipaddress.ip_network', 'range': [101, 106], 'children': []}, {'type': 'Comment', 'name': '', 'range': [108, 110], 'children': []}, {'type': 'FunctionCall', 'name': 'ipaddress.ip_network', 'range': [112, 117], 'children': []}, {'type': 'Comment', 'name': '', 'range': [119, 122], 'children': []}, {'type': 'FunctionCall', 'name': 'ipaddress.ip_network', 'range': [124, 129], 'children': []}, {'type': 'Comment', 'name': '', 'range': [131, 134], 'children': []}, {'type': 'FunctionCall', 'name': 'ipaddress.ip_network', 'range': [136, 141], 'children': []}, {'type': 'Comment', 'name': '', 'range': [143, 144], 'children': []}, {'type': 'FunctionCall', 'name': 'ipaddress.ip_network', 'range': [146, 151], 'children': []}, {'type': 'Comment', 'name': '', 'range': [153, 157], 'children': []}, {'type': 'Comment', 'name': '', 'range': [159, 165], 'children': []}, {'type': 'ArrayElement', 'name': '', 'range': [167, 170], 'children': []}]}]}]}
2025-01-08 10:27:59,360 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:27:59,456 - INFO - Step 2 result: {'type': 'Program', 'name': '', 'range': [295, 296], 'children': []}
2025-01-08 10:27:59,458 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:00,578 - INFO - Step 2 result: {'error': "Insufficient data to identify top-level declarations. The provided token list does not contain any tokens that can be identified as part of a top-level declaration in the 'cangjie' programming language."}
2025-01-08 10:28:00,584 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:01,138 - INFO - Step 2 result: {'error': "Insufficient data to identify top-level declarations. The provided token list does not contain any tokens that can be identified as part of a top-level declaration in the 'cangjie' programming language."}
2025-01-08 10:28:01,138 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:01,686 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [1192, 1206], 'children': [{'type': 'VariableDeclaration', 'name': 'requests', 'range': [1193, 1204], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [1194, 1204], 'children': [{'type': 'CallExpression', 'name': 'Requests', 'range': [1195, 1204], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [1197, 1203], 'children': [{'type': 'Property', 'name': 'trusted_origins', 'range': [1197, 1203], 'children': [{'type': 'CallExpression', 'name': 'Config', 'range': [1199, 1201], 'children': []}, {'type': 'MemberExpression', 'name': 'trust_endpoints_for_requests', 'range': [1202, 1203], 'children': []}]}]}]}]}]}]}
2025-01-08 10:28:01,686 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:04,001 - INFO - Step 2 result: {'nodes': [{'type': 'VariableDeclaration', 'name': 'ALLOWED_SCHEMES', 'range': [175, 181], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [176, 181], 'children': [{'type': 'ArrayExpression', 'name': '', 'range': [177, 181], 'children': [{'type': 'Literal', 'name': '"http"', 'range': [178, 178], 'children': []}, {'type': 'Literal', 'name': '"https"', 'range': [180, 180], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'HOSTNAME_REGEX', 'range': [183, 191], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [184, 191], 'children': [{'type': 'CallExpression', 'name': 're.compile', 'range': [185, 191], 'children': [{'type': 'Literal', 'name': 'r"^[A-Za-z0-9.-]+$"', 'range': [189, 190], 'children': []}]}]}]}]}
2025-01-08 10:28:04,001 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:08,349 - INFO - Step 2 result: {'nodes': [{'type': 'ImportDeclaration', 'name': 'ipaddress', 'range': [0, 2], 'children': [{'type': 'ImportSpecifier', 'name': 'ipaddress', 'range': [0, 2], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 're', 'range': [3, 5], 'children': [{'type': 'ImportSpecifier', 'name': 're', 'range': [3, 5], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'socket', 'range': [6, 8], 'children': [{'type': 'ImportSpecifier', 'name': 'socket', 'range': [6, 8], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'Callable', 'range': [9, 13], 'children': [{'type': 'ImportSpecifier', 'name': 'Callable', 'range': [9, 13], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'urlparse, urlunparse', 'range': [14, 22], 'children': [{'type': 'ImportSpecifier', 'name': 'urlparse', 'range': [14, 22], 'children': []}, {'type': 'ImportSpecifier', 'name': 'urlunparse', 'range': [14, 22], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'idna', 'range': [24, 26], 'children': [{'type': 'ImportSpecifier', 'name': 'idna', 'range': [24, 26], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'req', 'range': [27, 31], 'children': [{'type': 'ImportSpecifier', 'name': 'req', 'range': [27, 31], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'Config', 'range': [33, 41], 'children': [{'type': 'ImportSpecifier', 'name': 'Config', 'range': [33, 41], 'children': []}]}]}
2025-01-08 10:28:08,369 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:09,861 - INFO - Step 3 result: {'type': 'Program', 'name': '', 'range': [295, 296], 'children': []}
2025-01-08 10:28:09,862 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:10,088 - INFO - Step 3 result: {'type': 'Program', 'name': 'Program', 'range': [640, 641], 'children': []}
2025-01-08 10:28:10,088 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:10,319 - INFO - Step 3 result: {'refinedAST': []}
2025-01-08 10:28:10,319 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:10,827 - INFO - Step 2 result: {'type': 'Program', 'name': '_is_ip_blocked', 'range': [297, 333], 'children': [{'type': 'FunctionDef', 'name': '_is_ip_blocked', 'range': [297, 333], 'children': [{'type': 'Parameters', 'name': 'parameters', 'range': [299, 303], 'children': [{'type': 'Parameter', 'name': 'ip', 'range': [300, 302], 'children': []}]}, {'type': 'ReturnType', 'name': 'return_type', 'range': [304, 306], 'children': []}, {'type': 'Docstring', 'name': 'docstring', 'range': [309, 311], 'children': []}, {'type': 'Body', 'name': 'body', 'range': [313, 333], 'children': [{'type': 'Assignment', 'name': 'assignment', 'range': [313, 320], 'children': [{'type': 'Variable', 'name': 'ip_addr', 'range': [313, 315], 'children': []}, {'type': 'Call', 'name': 'ipaddress.ip_address', 'range': [315, 320], 'children': [{'type': 'Argument', 'name': 'ip', 'range': [319, 319], 'children': []}]}]}, {'type': 'Return', 'name': 'return', 'range': [322, 332], 'children': [{'type': 'Call', 'name': 'any', 'range': [323, 332], 'children': [{'type': 'GeneratorExp', 'name': 'generator_exp', 'range': [325, 332], 'children': [{'type': 'Comprehension', 'name': 'comprehension', 'range': [325, 332], 'children': [{'type': 'Target', 'name': 'ip_addr', 'range': [325, 325], 'children': []}, {'type': 'Iter', 'name': 'BLOCKED_IP_NETWORKS', 'range': [331, 331], 'children': []}]}]}]}]}]}]}]}
2025-01-08 10:28:10,837 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:12,379 - INFO - Step 2 result: {'type': 'Program', 'name': '_canonicalize_url', 'range': [201, 294], 'children': [{'type': 'FunctionDeclaration', 'name': '_canonicalize_url', 'range': [201, 294], 'children': [{'type': 'Parameter', 'name': 'url', 'range': [204, 206], 'children': []}, {'type': 'ReturnType', 'name': 'str', 'range': [210, 210], 'children': []}, {'type': 'Block', 'name': '', 'range': [212, 294], 'children': [{'type': 'Comment', 'name': '# Strip spaces and trailing slashes', 'range': [213, 219], 'children': []}, {'type': 'Assignment', 'name': 'url', 'range': [220, 231], 'children': [{'type': 'MethodCall', 'name': 'strip', 'range': [222, 226], 'children': []}, {'type': 'MethodCall', 'name': 'strip', 'range': [227, 231], 'children': []}]}, {'type': 'Comment', 'name': '# Ensure the URL starts with http:// or https://', 'range': [233, 248], 'children': []}, {'type': 'IfStatement', 'name': '', 'range': [249, 268], 'children': [{'type': 'Condition', 'name': '', 'range': [251, 260], 'children': [{'type': 'MethodCall', 'name': 'startswith', 'range': [253, 260], 'children': []}]}, {'type': 'Block', 'name': '', 'range': [262, 268], 'children': [{'type': 'Assignment', 'name': 'url', 'range': [263, 267], 'children': []}]}]}, {'type': 'Comment', 'name': '# Replace backslashes with forward slashes to avoid parsing ambiguities', 'range': [270, 280], 'children': []}, {'type': 'Assignment', 'name': 'url', 'range': [281, 290], 'children': [{'type': 'MethodCall', 'name': 'replace', 'range': [283, 290], 'children': []}]}, {'type': 'ReturnStatement', 'name': '', 'range': [292, 293], 'children': []}]}]}]}
2025-01-08 10:28:12,389 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:13,187 - INFO - Step 2 result: {'type': 'Program', 'name': 'validate_url', 'range': [336, 639], 'children': [{'type': 'FunctionDef', 'name': 'validate_url', 'range': [336, 639], 'children': [{'type': 'Parameters', 'name': 'parameters', 'range': [338, 349], 'children': [{'type': 'Parameter', 'name': 'url', 'range': [339, 341], 'children': []}, {'type': 'Parameter', 'name': 'trusted_origins', 'range': [343, 348], 'children': []}]}, {'type': 'ReturnType', 'name': 'return_type', 'range': [350, 352], 'children': []}, {'type': 'Docstring', 'name': 'docstring', 'range': [355, 357], 'children': []}, {'type': 'Body', 'name': 'body', 'range': [359, 638], 'children': [{'type': 'Assignment', 'name': 'assignment', 'range': [359, 364], 'children': []}, {'type': 'Assignment', 'name': 'assignment', 'range': [366, 371], 'children': []}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [378, 394], 'children': []}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [405, 416], 'children': []}, {'type': 'TryStatement', 'name': 'try_statement', 'range': [428, 457], 'children': []}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [465, 479], 'children': []}, {'type': 'Assignment', 'name': 'assignment', 'range': [495, 504], 'children': []}, {'type': 'Assignment', 'name': 'assignment', 'range': [506, 514], 'children': []}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [530, 538], 'children': []}, {'type': 'TryStatement', 'name': 'try_statement', 'range': [549, 586], 'children': []}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [589, 599], 'children': []}, {'type': 'ForStatement', 'name': 'for_statement', 'range': [614, 634], 'children': []}, {'type': 'ReturnStatement', 'name': 'return_statement', 'range': [637, 638], 'children': []}]}]}]}
2025-01-08 10:28:13,197 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:14,802 - INFO - Step 2 result: {'type': 'Program', 'name': '', 'range': [1192, 1206], 'children': [{'type': 'VariableDeclaration', 'name': 'requests', 'range': [1193, 1204], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [1194, 1204], 'children': [{'type': 'CallExpression', 'name': 'Requests', 'range': [1195, 1204], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [1197, 1203], 'children': [{'type': 'Property', 'name': 'trusted_origins', 'range': [1197, 1203], 'children': [{'type': 'CallExpression', 'name': 'Config', 'range': [1199, 1201], 'children': []}, {'type': 'MemberExpression', 'name': 'trust_endpoints_for_requests', 'range': [1202, 1203], 'children': []}]}]}]}]}]}]}
2025-01-08 10:28:15,031 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:17,101 - INFO - Step 3 result: {'nodes': [{'type': 'VariableDeclaration', 'name': 'ALLOWED_SCHEMES', 'range': [175, 181], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [176, 181], 'children': [{'type': 'ArrayExpression', 'name': '', 'range': [177, 181], 'children': [{'type': 'Literal', 'name': '"http"', 'range': [178, 178], 'children': []}, {'type': 'Literal', 'name': '"https"', 'range': [180, 180], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'HOSTNAME_REGEX', 'range': [183, 191], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [184, 191], 'children': [{'type': 'CallExpression', 'name': 're.compile', 'range': [185, 191], 'children': [{'type': 'Literal', 'name': 'r"^[A-Za-z0-9.-]+$"', 'range': [189, 190], 'children': []}]}]}]}]}
2025-01-08 10:28:17,101 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:17,387 - INFO - Step 4 result: {'type': 'Program', 'name': '', 'range': [295, 296], 'children': []}
2025-01-08 10:28:17,394 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:28:17,527 - INFO - Step 4 result: {'refinedAST': []}
2025-01-08 10:28:17,528 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:28:18,125 - INFO - Step 4 result: {'type': 'Program', 'name': 'Program', 'range': [640, 641], 'children': []}
2025-01-08 10:28:18,129 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:28:22,310 - INFO - Step 5 result: {'type': 'Program', 'name': '', 'range': [295, 296], 'children': []}
2025-01-08 10:28:22,315 - INFO - Completed main AST analysis flow
2025-01-08 10:28:22,315 - INFO - Successfully processed chunk
2025-01-08 10:28:22,678 - INFO - Step 5 result: {'refinedAST': [{'type': 'Program', 'name': 'MainOrSomething', 'range': [0, 200], 'children': []}]}
2025-01-08 10:28:22,679 - INFO - Completed main AST analysis flow
2025-01-08 10:28:22,679 - INFO - Successfully processed chunk
2025-01-08 10:28:22,846 - INFO - Step 5 result: {'type': 'Program', 'name': 'Program', 'range': [640, 641], 'children': []}
2025-01-08 10:28:22,846 - INFO - Completed main AST analysis flow
2025-01-08 10:28:22,846 - INFO - Successfully processed chunk
2025-01-08 10:28:25,659 - INFO - Step 3 result: {'type': 'Program', 'name': '', 'range': [1192, 1206], 'children': [{'type': 'VariableDeclaration', 'name': 'requests', 'range': [1193, 1204], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [1194, 1204], 'children': [{'type': 'CallExpression', 'name': 'Requests', 'range': [1195, 1204], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [1197, 1203], 'children': [{'type': 'Property', 'name': 'trusted_origins', 'range': [1197, 1203], 'children': [{'type': 'CallExpression', 'name': 'Config', 'range': [1199, 1201], 'children': []}, {'type': 'MemberExpression', 'name': 'trust_endpoints_for_requests', 'range': [1202, 1203], 'children': []}]}]}]}]}]}]}
2025-01-08 10:28:25,659 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:26,678 - INFO - Step 4 result: {'nodes': [{'type': 'VariableDeclaration', 'name': 'ALLOWED_SCHEMES', 'range': [175, 181], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [176, 181], 'children': [{'type': 'ArrayExpression', 'name': '', 'range': [177, 181], 'children': [{'type': 'Literal', 'name': '"http"', 'range': [178, 178], 'children': []}, {'type': 'Literal', 'name': '"https"', 'range': [180, 180], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'HOSTNAME_REGEX', 'range': [183, 191], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [184, 191], 'children': [{'type': 'CallExpression', 'name': 're.compile', 'range': [185, 191], 'children': [{'type': 'Literal', 'name': 'r"^[A-Za-z0-9.-]+$"', 'range': [189, 190], 'children': []}]}]}]}]}
2025-01-08 10:28:26,678 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:28:28,466 - INFO - Step 2 result: {'type': 'Program', 'name': '', 'range': [43, 173], 'children': [{'type': 'VariableDeclaration', 'name': 'BLOCKED_IP_NETWORKS', 'range': [51, 173], 'children': [{'type': 'ArrayLiteral', 'name': '', 'range': [53, 172], 'children': [{'type': 'Comment', 'name': '', 'range': [55, 61], 'children': []}, {'type': 'ArrayElement', 'name': '', 'range': [63, 66], 'children': []}, {'type': 'FunctionCall', 'name': 'ipaddress.ip_network', 'range': [68, 73], 'children': [{'type': 'StringLiteral', 'name': '', 'range': [72, 72], 'children': []}]}, {'type': 'Comment', 'name': '', 'range': [75, 77], 'children': []}, {'type': 'FunctionCall', 'name': 'ipaddress.ip_network', 'range': [79, 84], 'children': [{'type': 'StringLiteral', 'name': '', 'range': [83, 83], 'children': []}]}, {'type': 'Comment', 'name': '', 'range': [86, 89], 'children': []}, {'type': 'FunctionCall', 'name': 'ipaddress.ip_network', 'range': [91, 96], 'children': [{'type': 'StringLiteral', 'name': '', 'range': [95, 95], 'children': []}]}, {'type': 'Comment', 'name': '', 'range': [98, 99], 'children': []}, {'type': 'FunctionCall', 'name': 'ipaddress.ip_network', 'range': [101, 106], 'children': [{'type': 'StringLiteral', 'name': '', 'range': [105, 105], 'children': []}]}, {'type': 'Comment', 'name': '', 'range': [108, 110], 'children': []}, {'type': 'FunctionCall', 'name': 'ipaddress.ip_network', 'range': [112, 117], 'children': [{'type': 'StringLiteral', 'name': '', 'range': [116, 116], 'children': []}]}, {'type': 'Comment', 'name': '', 'range': [119, 122], 'children': []}, {'type': 'FunctionCall', 'name': 'ipaddress.ip_network', 'range': [124, 129], 'children': [{'type': 'StringLiteral', 'name': '', 'range': [128, 128], 'children': []}]}, {'type': 'Comment', 'name': '', 'range': [131, 134], 'children': []}, {'type': 'FunctionCall', 'name': 'ipaddress.ip_network', 'range': [136, 141], 'children': [{'type': 'StringLiteral', 'name': '', 'range': [140, 140], 'children': []}]}, {'type': 'Comment', 'name': '', 'range': [143, 144], 'children': []}, {'type': 'FunctionCall', 'name': 'ipaddress.ip_network', 'range': [146, 151], 'children': [{'type': 'StringLiteral', 'name': '', 'range': [150, 150], 'children': []}]}, {'type': 'Comment', 'name': '', 'range': [153, 157], 'children': []}, {'type': 'Comment', 'name': '', 'range': [159, 165], 'children': []}, {'type': 'ArrayElement', 'name': '', 'range': [167, 170], 'children': []}]}]}]}
2025-01-08 10:28:28,466 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:28,550 - INFO - Step 3 result: {'nodes': [{'type': 'ImportDeclaration', 'name': 'ipaddress', 'range': [0, 2], 'children': [{'type': 'ImportSpecifier', 'name': 'ipaddress', 'range': [0, 2], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 're', 'range': [3, 5], 'children': [{'type': 'ImportSpecifier', 'name': 're', 'range': [3, 5], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'socket', 'range': [6, 8], 'children': [{'type': 'ImportSpecifier', 'name': 'socket', 'range': [6, 8], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'Callable', 'range': [9, 13], 'children': [{'type': 'ImportSpecifier', 'name': 'Callable', 'range': [9, 13], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'urlparse, urlunparse', 'range': [14, 22], 'children': [{'type': 'ImportSpecifier', 'name': 'urlparse', 'range': [14, 22], 'children': []}, {'type': 'ImportSpecifier', 'name': 'urlunparse', 'range': [14, 22], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'idna', 'range': [24, 26], 'children': [{'type': 'ImportSpecifier', 'name': 'idna', 'range': [24, 26], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'req', 'range': [27, 31], 'children': [{'type': 'ImportSpecifier', 'name': 'req', 'range': [27, 31], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'Config', 'range': [33, 41], 'children': [{'type': 'ImportSpecifier', 'name': 'Config', 'range': [33, 41], 'children': []}]}]}
2025-01-08 10:28:28,555 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:29,103 - INFO - Step 3 result: {'type': 'Program', 'name': '_is_ip_blocked', 'range': [297, 333], 'children': [{'type': 'FunctionDef', 'name': '_is_ip_blocked', 'range': [297, 333], 'children': [{'type': 'Parameters', 'name': 'parameters', 'range': [299, 303], 'children': [{'type': 'Parameter', 'name': 'ip', 'range': [300, 302], 'children': []}]}, {'type': 'ReturnType', 'name': 'return_type', 'range': [304, 306], 'children': []}, {'type': 'Docstring', 'name': 'docstring', 'range': [309, 311], 'children': []}, {'type': 'Body', 'name': 'body', 'range': [313, 333], 'children': [{'type': 'Assignment', 'name': 'assignment', 'range': [313, 320], 'children': [{'type': 'Variable', 'name': 'ip_addr', 'range': [313, 315], 'children': []}, {'type': 'Call', 'name': 'ipaddress.ip_address', 'range': [315, 320], 'children': [{'type': 'Argument', 'name': 'ip', 'range': [319, 319], 'children': []}]}]}, {'type': 'Return', 'name': 'return', 'range': [322, 332], 'children': [{'type': 'Call', 'name': 'any', 'range': [323, 332], 'children': [{'type': 'GeneratorExp', 'name': 'generator_exp', 'range': [325, 332], 'children': [{'type': 'Comprehension', 'name': 'comprehension', 'range': [325, 332], 'children': [{'type': 'Target', 'name': 'ip_addr', 'range': [325, 325], 'children': []}, {'type': 'Iter', 'name': 'BLOCKED_IP_NETWORKS', 'range': [331, 331], 'children': []}]}]}]}]}]}]}]}
2025-01-08 10:28:29,103 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:31,057 - INFO - Step 3 result: {'type': 'Program', 'name': '_canonicalize_url', 'range': [201, 294], 'children': [{'type': 'FunctionDeclaration', 'name': '_canonicalize_url', 'range': [201, 294], 'children': [{'type': 'Parameter', 'name': 'url', 'range': [204, 206], 'children': []}, {'type': 'ReturnType', 'name': 'str', 'range': [210, 210], 'children': []}, {'type': 'Block', 'name': '', 'range': [212, 294], 'children': [{'type': 'Comment', 'name': '# Strip spaces and trailing slashes', 'range': [213, 219], 'children': []}, {'type': 'Assignment', 'name': 'url', 'range': [220, 231], 'children': [{'type': 'MethodCall', 'name': 'strip', 'range': [222, 226], 'children': []}, {'type': 'MethodCall', 'name': 'strip', 'range': [227, 231], 'children': []}]}, {'type': 'Comment', 'name': '# Ensure the URL starts with http:// or https://', 'range': [233, 248], 'children': []}, {'type': 'IfStatement', 'name': '', 'range': [249, 268], 'children': [{'type': 'Condition', 'name': '', 'range': [251, 260], 'children': [{'type': 'MethodCall', 'name': 'startswith', 'range': [253, 260], 'children': []}]}, {'type': 'Block', 'name': '', 'range': [262, 268], 'children': [{'type': 'Assignment', 'name': 'url', 'range': [263, 267], 'children': []}]}]}, {'type': 'Comment', 'name': '# Replace backslashes with forward slashes to avoid parsing ambiguities', 'range': [270, 280], 'children': []}, {'type': 'Assignment', 'name': 'url', 'range': [281, 290], 'children': [{'type': 'MethodCall', 'name': 'replace', 'range': [283, 290], 'children': []}]}, {'type': 'ReturnStatement', 'name': '', 'range': [292, 293], 'children': []}]}]}]}
2025-01-08 10:28:31,064 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:32,713 - INFO - Step 4 result: {'type': 'Program', 'name': '', 'range': [1192, 1206], 'children': [{'type': 'VariableDeclaration', 'name': 'requests', 'range': [1193, 1204], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [1194, 1204], 'children': [{'type': 'CallExpression', 'name': 'Requests', 'range': [1195, 1204], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [1197, 1203], 'children': [{'type': 'Property', 'name': 'trusted_origins', 'range': [1197, 1203], 'children': [{'type': 'CallExpression', 'name': 'Config', 'range': [1199, 1201], 'children': []}, {'type': 'MemberExpression', 'name': 'trust_endpoints_for_requests', 'range': [1202, 1203], 'children': []}]}]}]}]}]}]}
2025-01-08 10:28:32,713 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:28:32,999 - INFO - Step 3 result: {'type': 'Program', 'name': 'validate_url', 'range': [336, 639], 'children': [{'type': 'FunctionDef', 'name': 'validate_url', 'range': [336, 639], 'children': [{'type': 'Parameters', 'name': 'parameters', 'range': [338, 349], 'children': [{'type': 'Parameter', 'name': 'url', 'range': [339, 341], 'children': []}, {'type': 'Parameter', 'name': 'trusted_origins', 'range': [343, 348], 'children': []}]}, {'type': 'ReturnType', 'name': 'return_type', 'range': [350, 352], 'children': []}, {'type': 'Docstring', 'name': 'docstring', 'range': [355, 357], 'children': []}, {'type': 'Body', 'name': 'body', 'range': [359, 638], 'children': [{'type': 'Assignment', 'name': 'assignment', 'range': [359, 364], 'children': []}, {'type': 'Assignment', 'name': 'assignment', 'range': [366, 371], 'children': []}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [378, 394], 'children': []}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [405, 416], 'children': []}, {'type': 'TryStatement', 'name': 'try_statement', 'range': [428, 457], 'children': []}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [465, 479], 'children': []}, {'type': 'Assignment', 'name': 'assignment', 'range': [495, 504], 'children': []}, {'type': 'Assignment', 'name': 'assignment', 'range': [506, 514], 'children': []}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [530, 538], 'children': []}, {'type': 'TryStatement', 'name': 'try_statement', 'range': [549, 586], 'children': []}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [589, 599], 'children': []}, {'type': 'ForStatement', 'name': 'for_statement', 'range': [614, 634], 'children': []}, {'type': 'ReturnStatement', 'name': 'return_statement', 'range': [637, 638], 'children': []}]}]}]}
2025-01-08 10:28:32,999 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:35,579 - INFO - Step 5 result: {'nodes': [{'type': 'Program', 'name': 'MainOrSomething', 'range': [175, 191], 'children': [{'type': 'VariableDeclaration', 'name': 'ALLOWED_SCHEMES', 'range': [175, 181], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [176, 181], 'children': [{'type': 'ArrayExpression', 'name': '', 'range': [177, 181], 'children': [{'type': 'Literal', 'name': '"http"', 'range': [178, 178], 'children': []}, {'type': 'Literal', 'name': '"https"', 'range': [180, 180], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'HOSTNAME_REGEX', 'range': [183, 191], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [184, 191], 'children': [{'type': 'CallExpression', 'name': 're.compile', 'range': [185, 191], 'children': [{'type': 'Literal', 'name': 'r"^[A-Za-z0-9.-]+$"', 'range': [189, 190], 'children': []}]}]}]}]}]}
2025-01-08 10:28:35,579 - INFO - Completed main AST analysis flow
2025-01-08 10:28:35,579 - INFO - Successfully processed chunk
2025-01-08 10:28:40,653 - INFO - Step 5 result: {'type': 'Program', 'name': '', 'range': [1192, 1206], 'children': [{'type': 'VariableDeclaration', 'name': 'requests', 'range': [1193, 1204], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [1194, 1204], 'children': [{'type': 'CallExpression', 'name': 'Requests', 'range': [1195, 1204], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [1197, 1203], 'children': [{'type': 'Property', 'name': 'trusted_origins', 'range': [1197, 1203], 'children': [{'type': 'CallExpression', 'name': 'Config', 'range': [1199, 1201], 'children': []}, {'type': 'MemberExpression', 'name': 'trust_endpoints_for_requests', 'range': [1202, 1203], 'children': []}]}]}]}]}]}]}
2025-01-08 10:28:40,653 - INFO - Completed main AST analysis flow
2025-01-08 10:28:40,654 - INFO - Successfully processed chunk
2025-01-08 10:28:41,026 - INFO - Step 4 result: {'nodes': [{'type': 'ImportDeclaration', 'name': 'ipaddress', 'range': [0, 2], 'children': [{'type': 'ImportSpecifier', 'name': 'ipaddress', 'range': [0, 2], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 're', 'range': [3, 5], 'children': [{'type': 'ImportSpecifier', 'name': 're', 'range': [3, 5], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'socket', 'range': [6, 8], 'children': [{'type': 'ImportSpecifier', 'name': 'socket', 'range': [6, 8], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'Callable', 'range': [9, 13], 'children': [{'type': 'ImportSpecifier', 'name': 'Callable', 'range': [9, 13], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'urlparse, urlunparse', 'range': [14, 22], 'children': [{'type': 'ImportSpecifier', 'name': 'urlparse', 'range': [14, 22], 'children': []}, {'type': 'ImportSpecifier', 'name': 'urlunparse', 'range': [14, 22], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'idna', 'range': [24, 26], 'children': [{'type': 'ImportSpecifier', 'name': 'idna', 'range': [24, 26], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'req', 'range': [27, 31], 'children': [{'type': 'ImportSpecifier', 'name': 'req', 'range': [27, 31], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'Config', 'range': [33, 41], 'children': [{'type': 'ImportSpecifier', 'name': 'Config', 'range': [33, 41], 'children': []}]}]}
2025-01-08 10:28:41,026 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:28:42,222 - INFO - Step 4 result: {'type': 'Program', 'name': '_is_ip_blocked', 'range': [297, 333], 'children': [{'type': 'FunctionDecl', 'name': '_is_ip_blocked', 'range': [297, 333], 'children': [{'type': 'Parameters', 'name': 'parameters', 'range': [299, 303], 'children': [{'type': 'Parameter', 'name': 'ip', 'range': [300, 302], 'children': []}]}, {'type': 'ReturnType', 'name': 'return_type', 'range': [304, 306], 'children': []}, {'type': 'Docstring', 'name': 'docstring', 'range': [309, 311], 'children': []}, {'type': 'Body', 'name': 'body', 'range': [313, 333], 'children': [{'type': 'Assignment', 'name': 'assignment', 'range': [313, 320], 'children': [{'type': 'Identifier', 'name': 'ip_addr', 'range': [313, 315], 'children': []}, {'type': 'CallExpression', 'name': 'ipaddress.ip_address', 'range': [315, 320], 'children': [{'type': 'Argument', 'name': 'ip', 'range': [319, 319], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [322, 332], 'children': [{'type': 'CallExpression', 'name': 'any', 'range': [323, 332], 'children': [{'type': 'GeneratorExp', 'name': 'generator_exp', 'range': [325, 332], 'children': [{'type': 'Comprehension', 'name': 'comprehension', 'range': [325, 332], 'children': [{'type': 'Target', 'name': 'ip_addr', 'range': [325, 325], 'children': []}, {'type': 'Iter', 'name': 'BLOCKED_IP_NETWORKS', 'range': [331, 331], 'children': []}]}]}]}]}]}]}]}
2025-01-08 10:28:42,222 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:28:44,830 - INFO - Step 4 result: {'type': 'Program', 'name': '_canonicalize_url', 'range': [201, 294], 'children': [{'type': 'FunctionDecl', 'name': '_canonicalize_url', 'range': [201, 294], 'children': [{'type': 'Parameter', 'name': 'url', 'range': [204, 206], 'children': []}, {'type': 'ReturnType', 'name': 'str', 'range': [210, 210], 'children': []}, {'type': 'Block', 'name': '', 'range': [212, 294], 'children': [{'type': 'Comment', 'name': '# Strip spaces and trailing slashes', 'range': [213, 219], 'children': []}, {'type': 'Assignment', 'name': 'url', 'range': [220, 231], 'children': [{'type': 'CallExpression', 'name': 'strip', 'range': [222, 226], 'children': []}, {'type': 'CallExpression', 'name': 'strip', 'range': [227, 231], 'children': []}]}, {'type': 'Comment', 'name': '# Ensure the URL starts with http:// or https://', 'range': [233, 248], 'children': []}, {'type': 'IfStatement', 'name': '', 'range': [249, 268], 'children': [{'type': 'Condition', 'name': '', 'range': [251, 260], 'children': [{'type': 'CallExpression', 'name': 'startswith', 'range': [253, 260], 'children': []}]}, {'type': 'Block', 'name': '', 'range': [262, 268], 'children': [{'type': 'Assignment', 'name': 'url', 'range': [263, 267], 'children': []}]}]}, {'type': 'Comment', 'name': '# Replace backslashes with forward slashes to avoid parsing ambiguities', 'range': [270, 280], 'children': []}, {'type': 'Assignment', 'name': 'url', 'range': [281, 290], 'children': [{'type': 'CallExpression', 'name': 'replace', 'range': [283, 290], 'children': []}]}, {'type': 'ReturnStatement', 'name': '', 'range': [292, 293], 'children': []}]}]}]}
2025-01-08 10:28:44,830 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:28:48,232 - INFO - Step 3 result: {'type': 'Program', 'name': '', 'range': [43, 173], 'children': [{'type': 'VariableDeclaration', 'name': 'BLOCKED_IP_NETWORKS', 'range': [51, 173], 'children': [{'type': 'ArrayLiteral', 'name': '', 'range': [53, 172], 'children': [{'type': 'Comment', 'name': '', 'range': [55, 61], 'children': []}, {'type': 'FunctionCall', 'name': 'ipaddress.ip_network', 'range': [68, 73], 'children': [{'type': 'StringLiteral', 'name': '', 'range': [72, 72], 'children': []}]}, {'type': 'Comment', 'name': '', 'range': [75, 77], 'children': []}, {'type': 'FunctionCall', 'name': 'ipaddress.ip_network', 'range': [79, 84], 'children': [{'type': 'StringLiteral', 'name': '', 'range': [83, 83], 'children': []}]}, {'type': 'Comment', 'name': '', 'range': [86, 89], 'children': []}, {'type': 'FunctionCall', 'name': 'ipaddress.ip_network', 'range': [91, 96], 'children': [{'type': 'StringLiteral', 'name': '', 'range': [95, 95], 'children': []}]}, {'type': 'Comment', 'name': '', 'range': [98, 99], 'children': []}, {'type': 'FunctionCall', 'name': 'ipaddress.ip_network', 'range': [101, 106], 'children': [{'type': 'StringLiteral', 'name': '', 'range': [105, 105], 'children': []}]}, {'type': 'Comment', 'name': '', 'range': [108, 110], 'children': []}, {'type': 'FunctionCall', 'name': 'ipaddress.ip_network', 'range': [112, 117], 'children': [{'type': 'StringLiteral', 'name': '', 'range': [116, 116], 'children': []}]}, {'type': 'Comment', 'name': '', 'range': [119, 122], 'children': []}, {'type': 'FunctionCall', 'name': 'ipaddress.ip_network', 'range': [124, 129], 'children': [{'type': 'StringLiteral', 'name': '', 'range': [128, 128], 'children': []}]}, {'type': 'Comment', 'name': '', 'range': [131, 134], 'children': []}, {'type': 'FunctionCall', 'name': 'ipaddress.ip_network', 'range': [136, 141], 'children': [{'type': 'StringLiteral', 'name': '', 'range': [140, 140], 'children': []}]}, {'type': 'Comment', 'name': '', 'range': [143, 144], 'children': []}, {'type': 'FunctionCall', 'name': 'ipaddress.ip_network', 'range': [146, 151], 'children': [{'type': 'StringLiteral', 'name': '', 'range': [150, 150], 'children': []}]}, {'type': 'Comment', 'name': '', 'range': [153, 157], 'children': []}, {'type': 'Comment', 'name': '', 'range': [159, 165], 'children': []}]}]}]}
2025-01-08 10:28:48,232 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:49,255 - INFO - Step 4 result: {'type': 'Program', 'name': 'validate_url', 'range': [336, 639], 'children': [{'type': 'FunctionDecl', 'name': 'validate_url', 'range': [336, 639], 'children': [{'type': 'Parameters', 'name': 'parameters', 'range': [338, 349], 'children': [{'type': 'Parameter', 'name': 'url', 'range': [339, 341], 'children': []}, {'type': 'Parameter', 'name': 'trusted_origins', 'range': [343, 348], 'children': []}]}, {'type': 'ReturnType', 'name': 'return_type', 'range': [350, 352], 'children': []}, {'type': 'Docstring', 'name': 'docstring', 'range': [355, 357], 'children': []}, {'type': 'Body', 'name': 'body', 'range': [359, 638], 'children': [{'type': 'Assignment', 'name': 'assignment', 'range': [359, 364], 'children': []}, {'type': 'Assignment', 'name': 'assignment', 'range': [366, 371], 'children': []}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [378, 394], 'children': []}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [405, 416], 'children': []}, {'type': 'TryStatement', 'name': 'try_statement', 'range': [428, 457], 'children': []}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [465, 479], 'children': []}, {'type': 'Assignment', 'name': 'assignment', 'range': [495, 504], 'children': []}, {'type': 'Assignment', 'name': 'assignment', 'range': [506, 514], 'children': []}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [530, 538], 'children': []}, {'type': 'TryStatement', 'name': 'try_statement', 'range': [549, 586], 'children': []}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [589, 599], 'children': []}, {'type': 'ForStatement', 'name': 'for_statement', 'range': [614, 634], 'children': []}, {'type': 'ReturnStatement', 'name': 'return_statement', 'range': [637, 638], 'children': []}]}]}]}
2025-01-08 10:28:49,256 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:28:54,112 - INFO - Step 5 result: {'nodes': [{'type': 'Program', 'name': 'MainProgram', 'range': [0, 41], 'children': [{'type': 'ImportDeclaration', 'name': 'ipaddress', 'range': [0, 2], 'children': [{'type': 'ImportSpecifier', 'name': 'ipaddress', 'range': [0, 2], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 're', 'range': [3, 5], 'children': [{'type': 'ImportSpecifier', 'name': 're', 'range': [3, 5], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'socket', 'range': [6, 8], 'children': [{'type': 'ImportSpecifier', 'name': 'socket', 'range': [6, 8], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'Callable', 'range': [9, 13], 'children': [{'type': 'ImportSpecifier', 'name': 'Callable', 'range': [9, 13], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'urlparse, urlunparse', 'range': [14, 22], 'children': [{'type': 'ImportSpecifier', 'name': 'urlparse', 'range': [14, 22], 'children': []}, {'type': 'ImportSpecifier', 'name': 'urlunparse', 'range': [14, 22], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'idna', 'range': [24, 26], 'children': [{'type': 'ImportSpecifier', 'name': 'idna', 'range': [24, 26], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'req', 'range': [27, 31], 'children': [{'type': 'ImportSpecifier', 'name': 'req', 'range': [27, 31], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'Config', 'range': [33, 41], 'children': [{'type': 'ImportSpecifier', 'name': 'Config', 'range': [33, 41], 'children': []}]}]}]}
2025-01-08 10:28:54,112 - INFO - Completed main AST analysis flow
2025-01-08 10:28:54,113 - INFO - Successfully processed chunk
2025-01-08 10:28:54,512 - INFO - Step 5 result: {'type': 'Program', 'name': '_is_ip_blocked', 'range': [297, 333], 'children': [{'type': 'FunctionDecl', 'name': '_is_ip_blocked', 'range': [297, 333], 'children': [{'type': 'Parameters', 'name': 'parameters', 'range': [299, 303], 'children': [{'type': 'Parameter', 'name': 'ip', 'range': [300, 302], 'children': []}]}, {'type': 'ReturnType', 'name': 'return_type', 'range': [304, 306], 'children': []}, {'type': 'Docstring', 'name': 'docstring', 'range': [309, 311], 'children': []}, {'type': 'Body', 'name': 'body', 'range': [313, 333], 'children': [{'type': 'Assignment', 'name': 'assignment', 'range': [313, 320], 'children': [{'type': 'Identifier', 'name': 'ip_addr', 'range': [313, 315], 'children': []}, {'type': 'CallExpression', 'name': 'ipaddress.ip_address', 'range': [315, 320], 'children': [{'type': 'Argument', 'name': 'ip', 'range': [319, 319], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [322, 332], 'children': [{'type': 'CallExpression', 'name': 'any', 'range': [323, 332], 'children': [{'type': 'GeneratorExp', 'name': 'generator_exp', 'range': [325, 332], 'children': [{'type': 'Comprehension', 'name': 'comprehension', 'range': [325, 332], 'children': [{'type': 'Target', 'name': 'ip_addr', 'range': [325, 325], 'children': []}, {'type': 'Iter', 'name': 'BLOCKED_IP_NETWORKS', 'range': [331, 331], 'children': []}]}]}]}]}]}]}]}
2025-01-08 10:28:54,512 - INFO - Completed main AST analysis flow
2025-01-08 10:28:54,513 - INFO - Successfully processed chunk
2025-01-08 10:28:58,195 - INFO - Step 5 result: {'type': 'Program', 'name': '_canonicalize_url', 'range': [201, 294], 'children': [{'type': 'FunctionDecl', 'name': '_canonicalize_url', 'range': [201, 294], 'children': [{'type': 'Parameter', 'name': 'url', 'range': [204, 206], 'children': []}, {'type': 'ReturnType', 'name': 'str', 'range': [210, 210], 'children': []}, {'type': 'Block', 'name': '', 'range': [212, 294], 'children': [{'type': 'Comment', 'name': '# Strip spaces and trailing slashes', 'range': [213, 219], 'children': []}, {'type': 'Assignment', 'name': 'url', 'range': [220, 231], 'children': [{'type': 'CallExpression', 'name': 'strip', 'range': [222, 226], 'children': []}, {'type': 'CallExpression', 'name': 'strip', 'range': [227, 231], 'children': []}]}, {'type': 'Comment', 'name': '# Ensure the URL starts with http:// or https://', 'range': [233, 248], 'children': []}, {'type': 'IfStatement', 'name': '', 'range': [249, 268], 'children': [{'type': 'Condition', 'name': '', 'range': [251, 260], 'children': [{'type': 'CallExpression', 'name': 'startswith', 'range': [253, 260], 'children': []}]}, {'type': 'Block', 'name': '', 'range': [262, 268], 'children': [{'type': 'Assignment', 'name': 'url', 'range': [263, 267], 'children': []}]}]}, {'type': 'Comment', 'name': '# Replace backslashes with forward slashes to avoid parsing ambiguities', 'range': [270, 280], 'children': []}, {'type': 'Assignment', 'name': 'url', 'range': [281, 290], 'children': [{'type': 'CallExpression', 'name': 'replace', 'range': [283, 290], 'children': []}]}, {'type': 'ReturnStatement', 'name': '', 'range': [292, 293], 'children': []}]}]}]}
2025-01-08 10:28:58,196 - INFO - Completed main AST analysis flow
2025-01-08 10:28:58,196 - INFO - Successfully processed chunk
2025-01-08 10:29:03,146 - INFO - Step 5 result: {'type': 'Program', 'name': 'validate_url', 'range': [336, 639], 'children': [{'type': 'FunctionDecl', 'name': 'validate_url', 'range': [336, 639], 'children': [{'type': 'Parameters', 'name': 'parameters', 'range': [338, 349], 'children': [{'type': 'Parameter', 'name': 'url', 'range': [339, 341], 'children': []}, {'type': 'Parameter', 'name': 'trusted_origins', 'range': [343, 348], 'children': []}]}, {'type': 'ReturnType', 'name': 'return_type', 'range': [350, 352], 'children': []}, {'type': 'Docstring', 'name': 'docstring', 'range': [355, 357], 'children': []}, {'type': 'Body', 'name': 'body', 'range': [359, 638], 'children': [{'type': 'Assignment', 'name': 'assignment', 'range': [359, 364], 'children': []}, {'type': 'Assignment', 'name': 'assignment', 'range': [366, 371], 'children': []}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [378, 394], 'children': []}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [405, 416], 'children': []}, {'type': 'TryStatement', 'name': 'try_statement', 'range': [428, 457], 'children': []}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [465, 479], 'children': []}, {'type': 'Assignment', 'name': 'assignment', 'range': [495, 504], 'children': []}, {'type': 'Assignment', 'name': 'assignment', 'range': [506, 514], 'children': []}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [530, 538], 'children': []}, {'type': 'TryStatement', 'name': 'try_statement', 'range': [549, 586], 'children': []}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [589, 599], 'children': []}, {'type': 'ForStatement', 'name': 'for_statement', 'range': [614, 634], 'children': []}, {'type': 'ReturnStatement', 'name': 'return_statement', 'range': [637, 638], 'children': []}]}]}]}
2025-01-08 10:29:03,146 - INFO - Completed main AST analysis flow
2025-01-08 10:29:03,147 - INFO - Successfully processed chunk
2025-01-08 10:29:07,436 - INFO - Step 4 result: {'type': 'Program', 'name': '', 'range': [43, 173], 'children': [{'type': 'VariableDeclaration', 'name': 'BLOCKED_IP_NETWORKS', 'range': [51, 173], 'children': [{'type': 'ArrayExpression', 'name': '', 'range': [53, 172], 'children': [{'type': 'Comment', 'name': '', 'range': [55, 61], 'children': []}, {'type': 'CallExpression', 'name': 'ipaddress.ip_network', 'range': [68, 73], 'children': [{'type': 'Literal', 'name': '', 'range': [72, 72], 'children': []}]}, {'type': 'Comment', 'name': '', 'range': [75, 77], 'children': []}, {'type': 'CallExpression', 'name': 'ipaddress.ip_network', 'range': [79, 84], 'children': [{'type': 'Literal', 'name': '', 'range': [83, 83], 'children': []}]}, {'type': 'Comment', 'name': '', 'range': [86, 89], 'children': []}, {'type': 'CallExpression', 'name': 'ipaddress.ip_network', 'range': [91, 96], 'children': [{'type': 'Literal', 'name': '', 'range': [95, 95], 'children': []}]}, {'type': 'Comment', 'name': '', 'range': [98, 99], 'children': []}, {'type': 'CallExpression', 'name': 'ipaddress.ip_network', 'range': [101, 106], 'children': [{'type': 'Literal', 'name': '', 'range': [105, 105], 'children': []}]}, {'type': 'Comment', 'name': '', 'range': [108, 110], 'children': []}, {'type': 'CallExpression', 'name': 'ipaddress.ip_network', 'range': [112, 117], 'children': [{'type': 'Literal', 'name': '', 'range': [116, 116], 'children': []}]}, {'type': 'Comment', 'name': '', 'range': [119, 122], 'children': []}, {'type': 'CallExpression', 'name': 'ipaddress.ip_network', 'range': [124, 129], 'children': [{'type': 'Literal', 'name': '', 'range': [128, 128], 'children': []}]}, {'type': 'Comment', 'name': '', 'range': [131, 134], 'children': []}, {'type': 'CallExpression', 'name': 'ipaddress.ip_network', 'range': [136, 141], 'children': [{'type': 'Literal', 'name': '', 'range': [140, 140], 'children': []}]}, {'type': 'Comment', 'name': '', 'range': [143, 144], 'children': []}, {'type': 'CallExpression', 'name': 'ipaddress.ip_network', 'range': [146, 151], 'children': [{'type': 'Literal', 'name': '', 'range': [150, 150], 'children': []}]}, {'type': 'Comment', 'name': '', 'range': [153, 157], 'children': []}, {'type': 'Comment', 'name': '', 'range': [159, 165], 'children': []}]}]}]}
2025-01-08 10:29:07,436 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:29:09,999 - INFO - Step 2 result: {'type': 'Program', 'name': 'Requests', 'range': [642, 1191], 'children': [{'type': 'FunctionDeclaration', 'name': '__init__', 'range': [651, 774], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [655, 655], 'children': []}, {'type': 'Parameter', 'name': 'trusted_origins', 'range': [658, 667], 'children': [{'type': 'TypeAnnotation', 'name': 'list[str] | None', 'range': [660, 667], 'children': []}]}, {'type': 'Parameter', 'name': 'raise_for_status', 'range': [670, 674], 'children': [{'type': 'TypeAnnotation', 'name': 'bool', 'range': [672, 674], 'children': []}]}, {'type': 'Parameter', 'name': 'extra_url_validator', 'range': [677, 690], 'children': [{'type': 'TypeAnnotation', 'name': 'Callable[[str], str] | None', 'range': [679, 690], 'children': []}]}, {'type': 'Parameter', 'name': 'extra_headers', 'range': [693, 704], 'children': [{'type': 'TypeAnnotation', 'name': 'dict[str, str] | None', 'range': [695, 704], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [708, 774], 'children': [{'type': 'AssignmentExpression', 'name': 'self.trusted_origins = []', 'range': [710, 716], 'children': []}, {'type': 'ForStatement', 'name': 'for url in trusted_origins or []:', 'range': [717, 755], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [725, 755], 'children': [{'type': 'AssignmentExpression', 'name': 'hostname = urlparse(url).hostname', 'range': [726, 734], 'children': []}, {'type': 'IfStatement', 'name': 'if not hostname:', 'range': [735, 746], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [739, 746], 'children': [{'type': 'ThrowStatement', 'name': 'raise ValueError(f"Invalid URL: Unable to determine hostname of {url}")', 'range': [740, 745], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'self.trusted_origins.append(hostname)', 'range': [747, 755], 'children': []}]}]}, {'type': 'AssignmentExpression', 'name': 'self.raise_for_status = raise_for_status', 'range': [757, 762], 'children': []}, {'type': 'AssignmentExpression', 'name': 'self.extra_url_validator = extra_url_validator', 'range': [763, 768], 'children': []}, {'type': 'AssignmentExpression', 'name': 'self.extra_headers = extra_headers', 'range': [769, 774], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'request', 'range': [776, 917], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [780, 780], 'children': []}, {'type': 'Parameter', 'name': 'method', 'range': [782, 782], 'children': []}, {'type': 'Parameter', 'name': 'url', 'range': [784, 784], 'children': []}, {'type': 'Parameter', 'name': 'headers', 'range': [786, 788], 'children': []}, {'type': 'Parameter', 'name': 'allow_redirects', 'range': [790, 792], 'children': []}, {'type': 'Parameter', 'name': '*args', 'range': [794, 795], 'children': []}, {'type': 'Parameter', 'name': '**kwargs', 'range': [797, 799], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [801, 917], 'children': [{'type': 'IfStatement', 'name': 'if self.extra_headers is not None:', 'range': [809, 836], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [816, 836], 'children': [{'type': 'AssignmentExpression', 'name': 'headers = {**(headers or {}), **self.extra_headers}', 'range': [818, 836], 'children': []}]}]}, {'type': 'AssignmentExpression', 'name': 'url = validate_url(url, self.trusted_origins)', 'range': [838, 848], 'children': []}, {'type': 'IfStatement', 'name': 'if self.extra_url_validator is not None:', 'range': [849, 866], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [856, 866], 'children': [{'type': 'AssignmentExpression', 'name': 'url = self.extra_url_validator(url)', 'range': [858, 866], 'children': []}]}]}, {'type': 'AssignmentExpression', 'name': 'response = req.request(method, url, headers=headers, allow_redirects=allow_redirects, *args, **kwargs)', 'range': [868, 901], 'children': []}, {'type': 'IfStatement', 'name': 'if self.raise_for_status:', 'range': [902, 913], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [906, 913], 'children': [{'type': 'ExpressionStatement', 'name': 'response.raise_for_status()', 'range': [908, 913], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return response', 'range': [915, 917], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'get', 'range': [919, 956], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [922, 922], 'children': []}, {'type': 'Parameter', 'name': 'url', 'range': [924, 924], 'children': []}, {'type': 'Parameter', 'name': '*args', 'range': [926, 927], 'children': []}, {'type': 'Parameter', 'name': '**kwargs', 'range': [929, 931], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [933, 956], 'children': [{'type': 'ReturnStatement', 'name': 'return self.request("GET", url, *args, **kwargs)', 'range': [940, 956], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'post', 'range': [958, 995], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [961, 961], 'children': []}, {'type': 'Parameter', 'name': 'url', 'range': [963, 963], 'children': []}, {'type': 'Parameter', 'name': '*args', 'range': [965, 966], 'children': []}, {'type': 'Parameter', 'name': '**kwargs', 'range': [968, 970], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [972, 995], 'children': [{'type': 'ReturnStatement', 'name': 'return self.request("POST", url, *args, **kwargs)', 'range': [979, 995], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'put', 'range': [997, 1034], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1000, 1000], 'children': []}, {'type': 'Parameter', 'name': 'url', 'range': [1002, 1002], 'children': []}, {'type': 'Parameter', 'name': '*args', 'range': [1004, 1005], 'children': []}, {'type': 'Parameter', 'name': '**kwargs', 'range': [1007, 1009], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [1011, 1034], 'children': [{'type': 'ReturnStatement', 'name': 'return self.request("PUT", url, *args, **kwargs)', 'range': [1018, 1034], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'delete', 'range': [1036, 1073], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1039, 1039], 'children': []}, {'type': 'Parameter', 'name': 'url', 'range': [1041, 1041], 'children': []}, {'type': 'Parameter', 'name': '*args', 'range': [1043, 1044], 'children': []}, {'type': 'Parameter', 'name': '**kwargs', 'range': [1046, 1048], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [1050, 1073], 'children': [{'type': 'ReturnStatement', 'name': 'return self.request("DELETE", url, *args, **kwargs)', 'range': [1057, 1073], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'head', 'range': [1075, 1112], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1078, 1078], 'children': []}, {'type': 'Parameter', 'name': 'url', 'range': [1080, 1080], 'children': []}, {'type': 'Parameter', 'name': '*args', 'range': [1082, 1083], 'children': []}, {'type': 'Parameter', 'name': '**kwargs', 'range': [1085, 1087], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [1089, 1112], 'children': [{'type': 'ReturnStatement', 'name': 'return self.request("HEAD", url, *args, **kwargs)', 'range': [1096, 1112], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'options', 'range': [1114, 1151], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1117, 1117], 'children': []}, {'type': 'Parameter', 'name': 'url', 'range': [1119, 1119], 'children': []}, {'type': 'Parameter', 'name': '*args', 'range': [1121, 1122], 'children': []}, {'type': 'Parameter', 'name': '**kwargs', 'range': [1124, 1126], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [1128, 1151], 'children': [{'type': 'ReturnStatement', 'name': 'return self.request("OPTIONS", url, *args, **kwargs)', 'range': [1135, 1151], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'patch', 'range': [1153, 1190], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1156, 1156], 'children': []}, {'type': 'Parameter', 'name': 'url', 'range': [1158, 1158], 'children': []}, {'type': 'Parameter', 'name': '*args', 'range': [1160, 1161], 'children': []}, {'type': 'Parameter', 'name': '**kwargs', 'range': [1163, 1165], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [1167, 1190], 'children': [{'type': 'ReturnStatement', 'name': 'return self.request("PATCH", url, *args, **kwargs)', 'range': [1174, 1190], 'children': []}]}]}]}
2025-01-08 10:29:10,000 - INFO - Starting Step 3: AST simplification
2025-01-08 10:29:27,207 - INFO - Step 5 result: {'type': 'Program', 'name': '', 'range': [43, 173], 'children': [{'type': 'VariableDeclaration', 'name': 'BLOCKED_IP_NETWORKS', 'range': [51, 173], 'children': [{'type': 'ArrayExpression', 'name': '', 'range': [53, 172], 'children': [{'type': 'Comment', 'name': '', 'range': [55, 61], 'children': []}, {'type': 'CallExpression', 'name': 'ipaddress.ip_network', 'range': [68, 73], 'children': [{'type': 'Literal', 'name': '', 'range': [72, 72], 'children': []}]}, {'type': 'Comment', 'name': '', 'range': [75, 77], 'children': []}, {'type': 'CallExpression', 'name': 'ipaddress.ip_network', 'range': [79, 84], 'children': [{'type': 'Literal', 'name': '', 'range': [83, 83], 'children': []}]}, {'type': 'Comment', 'name': '', 'range': [86, 89], 'children': []}, {'type': 'CallExpression', 'name': 'ipaddress.ip_network', 'range': [91, 96], 'children': [{'type': 'Literal', 'name': '', 'range': [95, 95], 'children': []}]}, {'type': 'Comment', 'name': '', 'range': [98, 99], 'children': []}, {'type': 'CallExpression', 'name': 'ipaddress.ip_network', 'range': [101, 106], 'children': [{'type': 'Literal', 'name': '', 'range': [105, 105], 'children': []}]}, {'type': 'Comment', 'name': '', 'range': [108, 110], 'children': []}, {'type': 'CallExpression', 'name': 'ipaddress.ip_network', 'range': [112, 117], 'children': [{'type': 'Literal', 'name': '', 'range': [116, 116], 'children': []}]}, {'type': 'Comment', 'name': '', 'range': [119, 122], 'children': []}, {'type': 'CallExpression', 'name': 'ipaddress.ip_network', 'range': [124, 129], 'children': [{'type': 'Literal', 'name': '', 'range': [128, 128], 'children': []}]}, {'type': 'Comment', 'name': '', 'range': [131, 134], 'children': []}, {'type': 'CallExpression', 'name': 'ipaddress.ip_network', 'range': [136, 141], 'children': [{'type': 'Literal', 'name': '', 'range': [140, 140], 'children': []}]}, {'type': 'Comment', 'name': '', 'range': [143, 144], 'children': []}, {'type': 'CallExpression', 'name': 'ipaddress.ip_network', 'range': [146, 151], 'children': [{'type': 'Literal', 'name': '', 'range': [150, 150], 'children': []}]}, {'type': 'Comment', 'name': '', 'range': [153, 157], 'children': []}, {'type': 'Comment', 'name': '', 'range': [159, 165], 'children': []}]}]}]}
2025-01-08 10:29:27,207 - INFO - Completed main AST analysis flow
2025-01-08 10:29:27,208 - INFO - Successfully processed chunk
2025-01-08 10:30:14,489 - INFO - Step 3 result: {'type': 'Program', 'name': 'Requests', 'range': [642, 1191], 'children': [{'type': 'FunctionDeclaration', 'name': '__init__', 'range': [651, 774], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [655, 655], 'children': []}, {'type': 'Parameter', 'name': 'trusted_origins', 'range': [658, 667], 'children': [{'type': 'TypeAnnotation', 'name': 'list[str] | None', 'range': [660, 667], 'children': []}]}, {'type': 'Parameter', 'name': 'raise_for_status', 'range': [670, 674], 'children': [{'type': 'TypeAnnotation', 'name': 'bool', 'range': [672, 674], 'children': []}]}, {'type': 'Parameter', 'name': 'extra_url_validator', 'range': [677, 690], 'children': [{'type': 'TypeAnnotation', 'name': 'Callable[[str], str] | None', 'range': [679, 690], 'children': []}]}, {'type': 'Parameter', 'name': 'extra_headers', 'range': [693, 704], 'children': [{'type': 'TypeAnnotation', 'name': 'dict[str, str] | None', 'range': [695, 704], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [708, 774], 'children': [{'type': 'AssignmentExpression', 'name': 'self.trusted_origins = []', 'range': [710, 716], 'children': []}, {'type': 'ForStatement', 'name': 'for url in trusted_origins or []', 'range': [717, 755], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [725, 755], 'children': [{'type': 'AssignmentExpression', 'name': 'hostname = urlparse(url).hostname', 'range': [726, 734], 'children': []}, {'type': 'IfStatement', 'name': 'if not hostname', 'range': [735, 746], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [739, 746], 'children': [{'type': 'ThrowStatement', 'name': 'raise ValueError(f"Invalid URL: Unable to determine hostname of {url}")', 'range': [740, 745], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'self.trusted_origins.append(hostname)', 'range': [747, 755], 'children': []}]}]}, {'type': 'AssignmentExpression', 'name': 'self.raise_for_status = raise_for_status', 'range': [757, 762], 'children': []}, {'type': 'AssignmentExpression', 'name': 'self.extra_url_validator = extra_url_validator', 'range': [763, 768], 'children': []}, {'type': 'AssignmentExpression', 'name': 'self.extra_headers = extra_headers', 'range': [769, 774], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'request', 'range': [776, 917], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [780, 780], 'children': []}, {'type': 'Parameter', 'name': 'method', 'range': [782, 782], 'children': []}, {'type': 'Parameter', 'name': 'url', 'range': [784, 784], 'children': []}, {'type': 'Parameter', 'name': 'headers', 'range': [786, 788], 'children': []}, {'type': 'Parameter', 'name': 'allow_redirects', 'range': [790, 792], 'children': []}, {'type': 'Parameter', 'name': '*args', 'range': [794, 795], 'children': []}, {'type': 'Parameter', 'name': '**kwargs', 'range': [797, 799], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [801, 917], 'children': [{'type': 'IfStatement', 'name': 'if self.extra_headers is not None', 'range': [809, 836], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [816, 836], 'children': [{'type': 'AssignmentExpression', 'name': 'headers = {**(headers or {}), **self.extra_headers}', 'range': [818, 836], 'children': []}]}]}, {'type': 'AssignmentExpression', 'name': 'url = validate_url(url, self.trusted_origins)', 'range': [838, 848], 'children': []}, {'type': 'IfStatement', 'name': 'if self.extra_url_validator is not None', 'range': [849, 866], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [856, 866], 'children': [{'type': 'AssignmentExpression', 'name': 'url = self.extra_url_validator(url)', 'range': [858, 866], 'children': []}]}]}, {'type': 'AssignmentExpression', 'name': 'response = req.request(method, url, headers=headers, allow_redirects=allow_redirects, *args, **kwargs)', 'range': [868, 901], 'children': []}, {'type': 'IfStatement', 'name': 'if self.raise_for_status', 'range': [902, 913], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [906, 913], 'children': [{'type': 'ExpressionStatement', 'name': 'response.raise_for_status()', 'range': [908, 913], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return response', 'range': [915, 917], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'get', 'range': [919, 956], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [922, 922], 'children': []}, {'type': 'Parameter', 'name': 'url', 'range': [924, 924], 'children': []}, {'type': 'Parameter', 'name': '*args', 'range': [926, 927], 'children': []}, {'type': 'Parameter', 'name': '**kwargs', 'range': [929, 931], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [933, 956], 'children': [{'type': 'ReturnStatement', 'name': 'return self.request("GET", url, *args, **kwargs)', 'range': [940, 956], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'post', 'range': [958, 995], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [961, 961], 'children': []}, {'type': 'Parameter', 'name': 'url', 'range': [963, 963], 'children': []}, {'type': 'Parameter', 'name': '*args', 'range': [965, 966], 'children': []}, {'type': 'Parameter', 'name': '**kwargs', 'range': [968, 970], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [972, 995], 'children': [{'type': 'ReturnStatement', 'name': 'return self.request("POST", url, *args, **kwargs)', 'range': [979, 995], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'put', 'range': [997, 1034], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1000, 1000], 'children': []}, {'type': 'Parameter', 'name': 'url', 'range': [1002, 1002], 'children': []}, {'type': 'Parameter', 'name': '*args', 'range': [1004, 1005], 'children': []}, {'type': 'Parameter', 'name': '**kwargs', 'range': [1007, 1009], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [1011, 1034], 'children': [{'type': 'ReturnStatement', 'name': 'return self.request("PUT", url, *args, **kwargs)', 'range': [1018, 1034], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'delete', 'range': [1036, 1073], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1039, 1039], 'children': []}, {'type': 'Parameter', 'name': 'url', 'range': [1041, 1041], 'children': []}, {'type': 'Parameter', 'name': '*args', 'range': [1043, 1044], 'children': []}, {'type': 'Parameter', 'name': '**kwargs', 'range': [1046, 1048], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [1050, 1073], 'children': [{'type': 'ReturnStatement', 'name': 'return self.request("DELETE", url, *args, **kwargs)', 'range': [1057, 1073], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'head', 'range': [1075, 1112], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1078, 1078], 'children': []}, {'type': 'Parameter', 'name': 'url', 'range': [1080, 1080], 'children': []}, {'type': 'Parameter', 'name': '*args', 'range': [1082, 1083], 'children': []}, {'type': 'Parameter', 'name': '**kwargs', 'range': [1085, 1087], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [1089, 1112], 'children': [{'type': 'ReturnStatement', 'name': 'return self.request("HEAD", url, *args, **kwargs)', 'range': [1096, 1112], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'options', 'range': [1114, 1151], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1117, 1117], 'children': []}, {'type': 'Parameter', 'name': 'url', 'range': [1119, 1119], 'children': []}, {'type': 'Parameter', 'name': '*args', 'range': [1121, 1122], 'children': []}, {'type': 'Parameter', 'name': '**kwargs', 'range': [1124, 1126], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [1128, 1151], 'children': [{'type': 'ReturnStatement', 'name': 'return self.request("OPTIONS", url, *args, **kwargs)', 'range': [1135, 1151], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'patch', 'range': [1153, 1190], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1156, 1156], 'children': []}, {'type': 'Parameter', 'name': 'url', 'range': [1158, 1158], 'children': []}, {'type': 'Parameter', 'name': '*args', 'range': [1160, 1161], 'children': []}, {'type': 'Parameter', 'name': '**kwargs', 'range': [1163, 1165], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [1167, 1190], 'children': [{'type': 'ReturnStatement', 'name': 'return self.request("PATCH", url, *args, **kwargs)', 'range': [1174, 1190], 'children': []}]}]}]}
2025-01-08 10:30:14,490 - INFO - Starting Step 4: AST normalization
2025-01-08 10:31:19,123 - INFO - Step 4 result: {'type': 'Program', 'name': 'Requests', 'range': [642, 1191], 'children': [{'type': 'FunctionDecl', 'name': '__init__', 'range': [651, 774], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [655, 655], 'children': []}, {'type': 'Parameter', 'name': 'trusted_origins', 'range': [658, 667], 'children': [{'type': 'TypeAnnotation', 'name': 'list[str] | None', 'range': [660, 667], 'children': []}]}, {'type': 'Parameter', 'name': 'raise_for_status', 'range': [670, 674], 'children': [{'type': 'TypeAnnotation', 'name': 'bool', 'range': [672, 674], 'children': []}]}, {'type': 'Parameter', 'name': 'extra_url_validator', 'range': [677, 690], 'children': [{'type': 'TypeAnnotation', 'name': 'Callable[[str], str] | None', 'range': [679, 690], 'children': []}]}, {'type': 'Parameter', 'name': 'extra_headers', 'range': [693, 704], 'children': [{'type': 'TypeAnnotation', 'name': 'dict[str, str] | None', 'range': [695, 704], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [708, 774], 'children': [{'type': 'AssignmentExpression', 'name': 'self.trusted_origins = []', 'range': [710, 716], 'children': []}, {'type': 'ForStatement', 'name': 'for url in trusted_origins or []', 'range': [717, 755], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [725, 755], 'children': [{'type': 'AssignmentExpression', 'name': 'hostname = urlparse(url).hostname', 'range': [726, 734], 'children': []}, {'type': 'IfStatement', 'name': 'if not hostname', 'range': [735, 746], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [739, 746], 'children': [{'type': 'ThrowStatement', 'name': 'raise ValueError(f"Invalid URL: Unable to determine hostname of {url}")', 'range': [740, 745], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'self.trusted_origins.append(hostname)', 'range': [747, 755], 'children': []}]}]}, {'type': 'AssignmentExpression', 'name': 'self.raise_for_status = raise_for_status', 'range': [757, 762], 'children': []}, {'type': 'AssignmentExpression', 'name': 'self.extra_url_validator = extra_url_validator', 'range': [763, 768], 'children': []}, {'type': 'AssignmentExpression', 'name': 'self.extra_headers = extra_headers', 'range': [769, 774], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'request', 'range': [776, 917], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [780, 780], 'children': []}, {'type': 'Parameter', 'name': 'method', 'range': [782, 782], 'children': []}, {'type': 'Parameter', 'name': 'url', 'range': [784, 784], 'children': []}, {'type': 'Parameter', 'name': 'headers', 'range': [786, 788], 'children': []}, {'type': 'Parameter', 'name': 'allow_redirects', 'range': [790, 792], 'children': []}, {'type': 'Parameter', 'name': '*args', 'range': [794, 795], 'children': []}, {'type': 'Parameter', 'name': '**kwargs', 'range': [797, 799], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [801, 917], 'children': [{'type': 'IfStatement', 'name': 'if self.extra_headers is not None', 'range': [809, 836], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [816, 836], 'children': [{'type': 'AssignmentExpression', 'name': 'headers = {**(headers or {}), **self.extra_headers}', 'range': [818, 836], 'children': []}]}]}, {'type': 'AssignmentExpression', 'name': 'url = validate_url(url, self.trusted_origins)', 'range': [838, 848], 'children': []}, {'type': 'IfStatement', 'name': 'if self.extra_url_validator is not None', 'range': [849, 866], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [856, 866], 'children': [{'type': 'AssignmentExpression', 'name': 'url = self.extra_url_validator(url)', 'range': [858, 866], 'children': []}]}]}, {'type': 'AssignmentExpression', 'name': 'response = req.request(method, url, headers=headers, allow_redirects=allow_redirects, *args, **kwargs)', 'range': [868, 901], 'children': []}, {'type': 'IfStatement', 'name': 'if self.raise_for_status', 'range': [902, 913], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [906, 913], 'children': [{'type': 'ExpressionStatement', 'name': 'response.raise_for_status()', 'range': [908, 913], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return response', 'range': [915, 917], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'get', 'range': [919, 956], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [922, 922], 'children': []}, {'type': 'Parameter', 'name': 'url', 'range': [924, 924], 'children': []}, {'type': 'Parameter', 'name': '*args', 'range': [926, 927], 'children': []}, {'type': 'Parameter', 'name': '**kwargs', 'range': [929, 931], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [933, 956], 'children': [{'type': 'ReturnStatement', 'name': 'return self.request("GET", url, *args, **kwargs)', 'range': [940, 956], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'post', 'range': [958, 995], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [961, 961], 'children': []}, {'type': 'Parameter', 'name': 'url', 'range': [963, 963], 'children': []}, {'type': 'Parameter', 'name': '*args', 'range': [965, 966], 'children': []}, {'type': 'Parameter', 'name': '**kwargs', 'range': [968, 970], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [972, 995], 'children': [{'type': 'ReturnStatement', 'name': 'return self.request("POST", url, *args, **kwargs)', 'range': [979, 995], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'put', 'range': [997, 1034], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1000, 1000], 'children': []}, {'type': 'Parameter', 'name': 'url', 'range': [1002, 1002], 'children': []}, {'type': 'Parameter', 'name': '*args', 'range': [1004, 1005], 'children': []}, {'type': 'Parameter', 'name': '**kwargs', 'range': [1007, 1009], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [1011, 1034], 'children': [{'type': 'ReturnStatement', 'name': 'return self.request("PUT", url, *args, **kwargs)', 'range': [1018, 1034], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'delete', 'range': [1036, 1073], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1039, 1039], 'children': []}, {'type': 'Parameter', 'name': 'url', 'range': [1041, 1041], 'children': []}, {'type': 'Parameter', 'name': '*args', 'range': [1043, 1044], 'children': []}, {'type': 'Parameter', 'name': '**kwargs', 'range': [1046, 1048], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [1050, 1073], 'children': [{'type': 'ReturnStatement', 'name': 'return self.request("DELETE", url, *args, **kwargs)', 'range': [1057, 1073], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'head', 'range': [1075, 1112], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1078, 1078], 'children': []}, {'type': 'Parameter', 'name': 'url', 'range': [1080, 1080], 'children': []}, {'type': 'Parameter', 'name': '*args', 'range': [1082, 1083], 'children': []}, {'type': 'Parameter', 'name': '**kwargs', 'range': [1085, 1087], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [1089, 1112], 'children': [{'type': 'ReturnStatement', 'name': 'return self.request("HEAD", url, *args, **kwargs)', 'range': [1096, 1112], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'options', 'range': [1114, 1151], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1117, 1117], 'children': []}, {'type': 'Parameter', 'name': 'url', 'range': [1119, 1119], 'children': []}, {'type': 'Parameter', 'name': '*args', 'range': [1121, 1122], 'children': []}, {'type': 'Parameter', 'name': '**kwargs', 'range': [1124, 1126], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [1128, 1151], 'children': [{'type': 'ReturnStatement', 'name': 'return self.request("OPTIONS", url, *args, **kwargs)', 'range': [1135, 1151], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'patch', 'range': [1153, 1190], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1156, 1156], 'children': []}, {'type': 'Parameter', 'name': 'url', 'range': [1158, 1158], 'children': []}, {'type': 'Parameter', 'name': '*args', 'range': [1160, 1161], 'children': []}, {'type': 'Parameter', 'name': '**kwargs', 'range': [1163, 1165], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [1167, 1190], 'children': [{'type': 'ReturnStatement', 'name': 'return self.request("PATCH", url, *args, **kwargs)', 'range': [1174, 1190], 'children': []}]}]}]}
2025-01-08 10:31:19,123 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:32:21,560 - INFO - Step 5 result: {'type': 'Program', 'name': 'Requests', 'range': [642, 1191], 'children': [{'type': 'FunctionDecl', 'name': '__init__', 'range': [651, 774], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [655, 655], 'children': []}, {'type': 'Parameter', 'name': 'trusted_origins', 'range': [658, 667], 'children': [{'type': 'TypeAnnotation', 'name': 'list[str] | None', 'range': [660, 667], 'children': []}]}, {'type': 'Parameter', 'name': 'raise_for_status', 'range': [670, 674], 'children': [{'type': 'TypeAnnotation', 'name': 'bool', 'range': [672, 674], 'children': []}]}, {'type': 'Parameter', 'name': 'extra_url_validator', 'range': [677, 690], 'children': [{'type': 'TypeAnnotation', 'name': 'Callable[[str], str] | None', 'range': [679, 690], 'children': []}]}, {'type': 'Parameter', 'name': 'extra_headers', 'range': [693, 704], 'children': [{'type': 'TypeAnnotation', 'name': 'dict[str, str] | None', 'range': [695, 704], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [708, 774], 'children': [{'type': 'AssignmentExpression', 'name': 'self.trusted_origins = []', 'range': [710, 716], 'children': []}, {'type': 'ForStatement', 'name': 'for url in trusted_origins or []', 'range': [717, 755], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [725, 755], 'children': [{'type': 'AssignmentExpression', 'name': 'hostname = urlparse(url).hostname', 'range': [726, 734], 'children': []}, {'type': 'IfStatement', 'name': 'if not hostname', 'range': [735, 746], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [739, 746], 'children': [{'type': 'ThrowStatement', 'name': 'raise ValueError(f"Invalid URL: Unable to determine hostname of {url}")', 'range': [740, 745], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'self.trusted_origins.append(hostname)', 'range': [747, 755], 'children': []}]}]}, {'type': 'AssignmentExpression', 'name': 'self.raise_for_status = raise_for_status', 'range': [757, 762], 'children': []}, {'type': 'AssignmentExpression', 'name': 'self.extra_url_validator = extra_url_validator', 'range': [763, 768], 'children': []}, {'type': 'AssignmentExpression', 'name': 'self.extra_headers = extra_headers', 'range': [769, 774], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'request', 'range': [776, 917], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [780, 780], 'children': []}, {'type': 'Parameter', 'name': 'method', 'range': [782, 782], 'children': []}, {'type': 'Parameter', 'name': 'url', 'range': [784, 784], 'children': []}, {'type': 'Parameter', 'name': 'headers', 'range': [786, 788], 'children': []}, {'type': 'Parameter', 'name': 'allow_redirects', 'range': [790, 792], 'children': []}, {'type': 'Parameter', 'name': '*args', 'range': [794, 795], 'children': []}, {'type': 'Parameter', 'name': '**kwargs', 'range': [797, 799], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [801, 917], 'children': [{'type': 'IfStatement', 'name': 'if self.extra_headers is not None', 'range': [809, 836], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [816, 836], 'children': [{'type': 'AssignmentExpression', 'name': 'headers = {**(headers or {}), **self.extra_headers}', 'range': [818, 836], 'children': []}]}]}, {'type': 'AssignmentExpression', 'name': 'url = validate_url(url, self.trusted_origins)', 'range': [838, 848], 'children': []}, {'type': 'IfStatement', 'name': 'if self.extra_url_validator is not None', 'range': [849, 866], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [856, 866], 'children': [{'type': 'AssignmentExpression', 'name': 'url = self.extra_url_validator(url)', 'range': [858, 866], 'children': []}]}]}, {'type': 'AssignmentExpression', 'name': 'response = req.request(method, url, headers=headers, allow_redirects=allow_redirects, *args, **kwargs)', 'range': [868, 901], 'children': []}, {'type': 'IfStatement', 'name': 'if self.raise_for_status', 'range': [902, 913], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [906, 913], 'children': [{'type': 'ExpressionStatement', 'name': 'response.raise_for_status()', 'range': [908, 913], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return response', 'range': [915, 917], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'get', 'range': [919, 956], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [922, 922], 'children': []}, {'type': 'Parameter', 'name': 'url', 'range': [924, 924], 'children': []}, {'type': 'Parameter', 'name': '*args', 'range': [926, 927], 'children': []}, {'type': 'Parameter', 'name': '**kwargs', 'range': [929, 931], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [933, 956], 'children': [{'type': 'ReturnStatement', 'name': 'return self.request("GET", url, *args, **kwargs)', 'range': [940, 956], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'post', 'range': [958, 995], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [961, 961], 'children': []}, {'type': 'Parameter', 'name': 'url', 'range': [963, 963], 'children': []}, {'type': 'Parameter', 'name': '*args', 'range': [965, 966], 'children': []}, {'type': 'Parameter', 'name': '**kwargs', 'range': [968, 970], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [972, 995], 'children': [{'type': 'ReturnStatement', 'name': 'return self.request("POST", url, *args, **kwargs)', 'range': [979, 995], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'put', 'range': [997, 1034], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1000, 1000], 'children': []}, {'type': 'Parameter', 'name': 'url', 'range': [1002, 1002], 'children': []}, {'type': 'Parameter', 'name': '*args', 'range': [1004, 1005], 'children': []}, {'type': 'Parameter', 'name': '**kwargs', 'range': [1007, 1009], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [1011, 1034], 'children': [{'type': 'ReturnStatement', 'name': 'return self.request("PUT", url, *args, **kwargs)', 'range': [1018, 1034], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'delete', 'range': [1036, 1073], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1039, 1039], 'children': []}, {'type': 'Parameter', 'name': 'url', 'range': [1041, 1041], 'children': []}, {'type': 'Parameter', 'name': '*args', 'range': [1043, 1044], 'children': []}, {'type': 'Parameter', 'name': '**kwargs', 'range': [1046, 1048], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [1050, 1073], 'children': [{'type': 'ReturnStatement', 'name': 'return self.request("DELETE", url, *args, **kwargs)', 'range': [1057, 1073], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'head', 'range': [1075, 1112], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1078, 1078], 'children': []}, {'type': 'Parameter', 'name': 'url', 'range': [1080, 1080], 'children': []}, {'type': 'Parameter', 'name': '*args', 'range': [1082, 1083], 'children': []}, {'type': 'Parameter', 'name': '**kwargs', 'range': [1085, 1087], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [1089, 1112], 'children': [{'type': 'ReturnStatement', 'name': 'return self.request("HEAD", url, *args, **kwargs)', 'range': [1096, 1112], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'options', 'range': [1114, 1151], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1117, 1117], 'children': []}, {'type': 'Parameter', 'name': 'url', 'range': [1119, 1119], 'children': []}, {'type': 'Parameter', 'name': '*args', 'range': [1121, 1122], 'children': []}, {'type': 'Parameter', 'name': '**kwargs', 'range': [1124, 1126], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [1128, 1151], 'children': [{'type': 'ReturnStatement', 'name': 'return self.request("OPTIONS", url, *args, **kwargs)', 'range': [1135, 1151], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'patch', 'range': [1153, 1190], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1156, 1156], 'children': []}, {'type': 'Parameter', 'name': 'url', 'range': [1158, 1158], 'children': []}, {'type': 'Parameter', 'name': '*args', 'range': [1160, 1161], 'children': []}, {'type': 'Parameter', 'name': '**kwargs', 'range': [1163, 1165], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [1167, 1190], 'children': [{'type': 'ReturnStatement', 'name': 'return self.request("PATCH", url, *args, **kwargs)', 'range': [1174, 1190], 'children': []}]}]}]}
2025-01-08 10:32:21,561 - INFO - Completed main AST analysis flow
2025-01-08 10:32:21,562 - INFO - Successfully processed chunk
2025-01-08 10:32:21,603 - INFO - Starting code generation from AST
2025-01-08 10:32:50,569 - INFO - Successfully generated code from AST
2025-01-08 10:32:50,570 - INFO - Starting static code similarity comparison
2025-01-08 10:32:50,591 - INFO - Static similarity result: {'final_score': 79.22, 'length_similarity': 90.18, 'token_similarity': 53.18, 'structure_similarity': 86.67, 'function_similarity': 100, 'complexity_similarity': 80.77, 'variable_similarity': 100}
