2025-01-08 10:27:27,294 - INFO - Processing sample 70
2025-01-08 10:27:27,294 - INFO - Starting Step 0: Splitting code into top-level declarations
2025-01-08 10:27:43,647 - INFO - Successfully split code into 18 top-level declarations
2025-01-08 10:27:44,797 - INFO - Processing chunk #0 (size=990 chars, start_index=0)
2025-01-08 10:27:44,846 - INFO - Processing chunk with 990 chars starting at index 0
2025-01-08 10:27:44,856 - INFO - Starting main AST analysis flow
2025-01-08 10:27:44,889 - INFO - Processing chunk #1 (size=79 chars, start_index=171)
2025-01-08 10:27:45,202 - INFO - Processing chunk with 79 chars starting at index 171
2025-01-08 10:27:45,147 - INFO - Processing chunk #2 (size=164 chars, start_index=185)
2025-01-08 10:27:45,202 - INFO - Starting main AST analysis flow
2025-01-08 10:27:45,330 - INFO - Tokenized code into 14 tokens
2025-01-08 10:27:45,297 - INFO - Processing chunk with 164 chars starting at index 185
2025-01-08 10:27:45,144 - INFO - Tokenized code into 171 tokens
2025-01-08 10:27:45,894 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:45,388 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:45,419 - INFO - Starting main AST analysis flow
2025-01-08 10:27:45,336 - INFO - Processing chunk #3 (size=73 chars, start_index=223)
2025-01-08 10:27:46,503 - INFO - Processing chunk with 73 chars starting at index 223
2025-01-08 10:27:46,502 - INFO - Tokenized code into 38 tokens
2025-01-08 10:27:46,503 - INFO - Starting main AST analysis flow
2025-01-08 10:27:46,997 - INFO - Tokenized code into 16 tokens
2025-01-08 10:27:46,997 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:46,718 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:53,075 - INFO - Processing chunk #4 (size=802 chars, start_index=239)
2025-01-08 10:27:53,076 - INFO - Processing chunk with 802 chars starting at index 239
2025-01-08 10:27:53,076 - INFO - Starting main AST analysis flow
2025-01-08 10:27:53,120 - INFO - Tokenized code into 153 tokens
2025-01-08 10:27:53,120 - INFO - Processing chunk #5 (size=175 chars, start_index=392)
2025-01-08 10:27:53,125 - INFO - Processing chunk with 175 chars starting at index 392
2025-01-08 10:27:53,125 - INFO - Starting main AST analysis flow
2025-01-08 10:27:53,125 - INFO - Tokenized code into 41 tokens
2025-01-08 10:27:53,125 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:53,129 - INFO - Processing chunk #6 (size=2365 chars, start_index=433)
2025-01-08 10:27:53,124 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:53,165 - INFO - Processing chunk with 2365 chars starting at index 433
2025-01-08 10:27:53,167 - INFO - Starting main AST analysis flow
2025-01-08 10:27:53,167 - INFO - Tokenized code into 378 tokens
2025-01-08 10:27:53,167 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:53,165 - INFO - Processing chunk #7 (size=576 chars, start_index=811)
2025-01-08 10:27:53,260 - INFO - Processing chunk with 576 chars starting at index 811
2025-01-08 10:27:53,260 - INFO - Starting main AST analysis flow
2025-01-08 10:27:53,260 - INFO - Tokenized code into 120 tokens
2025-01-08 10:27:53,261 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:54,005 - INFO - Processing chunk #8 (size=722 chars, start_index=931)
2025-01-08 10:27:54,030 - INFO - Processing chunk with 722 chars starting at index 931
2025-01-08 10:27:54,031 - INFO - Starting main AST analysis flow
2025-01-08 10:27:54,031 - INFO - Tokenized code into 139 tokens
2025-01-08 10:27:54,031 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:54,158 - INFO - Processing chunk #9 (size=669 chars, start_index=1070)
2025-01-08 10:27:54,213 - INFO - Processing chunk with 669 chars starting at index 1070
2025-01-08 10:27:54,213 - INFO - Starting main AST analysis flow
2025-01-08 10:27:54,240 - INFO - Tokenized code into 117 tokens
2025-01-08 10:27:54,240 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:57,491 - INFO - Step 1 result: {'type': 'Program', 'name': 'LoginResponse', 'range': [223, 238], 'children': []}
2025-01-08 10:27:57,648 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:27:58,347 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [171, 184], 'children': []}
2025-01-08 10:27:58,373 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:27:58,752 - INFO - Processing chunk #10 (size=921 chars, start_index=1187)
2025-01-08 10:27:58,765 - INFO - Processing chunk with 921 chars starting at index 1187
2025-01-08 10:27:58,765 - INFO - Starting main AST analysis flow
2025-01-08 10:27:58,765 - INFO - Tokenized code into 170 tokens
2025-01-08 10:27:58,766 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:58,774 - INFO - Processing chunk #11 (size=331 chars, start_index=1357)
2025-01-08 10:27:58,781 - INFO - Processing chunk with 331 chars starting at index 1357
2025-01-08 10:27:58,786 - INFO - Starting main AST analysis flow
2025-01-08 10:27:58,790 - INFO - Tokenized code into 35 tokens
2025-01-08 10:27:58,800 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:58,830 - INFO - Processing chunk #12 (size=161 chars, start_index=1392)
2025-01-08 10:27:58,836 - INFO - Processing chunk #13 (size=1352 chars, start_index=1422)
2025-01-08 10:27:58,837 - INFO - Processing chunk with 161 chars starting at index 1392
2025-01-08 10:27:58,837 - INFO - Processing chunk #14 (size=1629 chars, start_index=1645)
2025-01-08 10:27:58,838 - INFO - Processing chunk with 1352 chars starting at index 1422
2025-01-08 10:27:58,839 - INFO - Processing chunk #15 (size=764 chars, start_index=1892)
2025-01-08 10:27:58,840 - INFO - Starting main AST analysis flow
2025-01-08 10:27:58,841 - INFO - Processing chunk with 1629 chars starting at index 1645
2025-01-08 10:27:58,842 - INFO - Starting main AST analysis flow
2025-01-08 10:27:58,849 - INFO - Processing chunk with 764 chars starting at index 1892
2025-01-08 10:27:58,852 - INFO - Processing chunk #16 (size=1577 chars, start_index=2038)
2025-01-08 10:27:58,852 - INFO - Tokenized code into 30 tokens
2025-01-08 10:27:58,854 - INFO - Starting main AST analysis flow
2025-01-08 10:27:58,855 - INFO - Tokenized code into 223 tokens
2025-01-08 10:27:58,860 - INFO - Starting main AST analysis flow
2025-01-08 10:27:58,861 - INFO - Processing chunk with 1577 chars starting at index 2038
2025-01-08 10:27:58,882 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:58,890 - INFO - Tokenized code into 247 tokens
2025-01-08 10:27:58,896 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:58,903 - INFO - Tokenized code into 146 tokens
2025-01-08 10:27:58,904 - INFO - Starting main AST analysis flow
2025-01-08 10:27:58,915 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:58,938 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:58,957 - INFO - Tokenized code into 169 tokens
2025-01-08 10:27:58,975 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:59,355 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [185, 222], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [185, 190], 'children': []}, {'type': 'VariableDeclaration', 'name': 'logger', 'range': [193, 200], 'children': []}, {'type': 'VariableDeclaration', 'name': 'settings', 'range': [202, 206], 'children': []}, {'type': 'VariableDeclaration', 'name': 'router', 'range': [208, 212], 'children': []}, {'type': 'VariableDeclaration', 'name': 'creds_manager', 'range': [215, 219], 'children': []}]}
2025-01-08 10:27:59,387 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:27:59,521 - INFO - Processing chunk #17 (size=1072 chars, start_index=2207)
2025-01-08 10:27:59,524 - INFO - Processing chunk with 1072 chars starting at index 2207
2025-01-08 10:27:59,524 - INFO - Starting main AST analysis flow
2025-01-08 10:27:59,524 - INFO - Tokenized code into 154 tokens
2025-01-08 10:27:59,526 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:28:00,521 - INFO - Step 1 result: {'type': 'Program', 'name': 'list_credentials_by_provider', 'range': [939, 1069], 'children': []}
2025-01-08 10:28:00,521 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:00,589 - INFO - Step 1 result: {'type': 'Program', 'name': 'get_credential', 'range': [1078, 1186], 'children': []}
2025-01-08 10:28:00,589 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:00,624 - INFO - Step 1 result: {'type': 'Program', 'name': 'CredentialsMetaResponse', 'range': [392, 432], 'children': []}
2025-01-08 10:28:00,625 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:00,819 - INFO - Step 1 result: {'type': 'Program', 'name': 'callback', 'range': [433, 810], 'children': []}
2025-01-08 10:28:00,819 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:07,743 - INFO - Step 2 result: {'type': 'Program', 'name': 'LoginResponse', 'range': [223, 238], 'children': [{'type': 'ClassDeclaration', 'name': 'LoginResponse', 'range': [223, 238], 'children': [{'type': 'Inheritance', 'name': 'BaseModel', 'range': [225, 227], 'children': []}, {'type': 'ClassBody', 'name': '', 'range': [228, 238], 'children': [{'type': 'PropertyDeclaration', 'name': 'login_url', 'range': [230, 233], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [232, 233], 'children': []}]}, {'type': 'PropertyDeclaration', 'name': 'state_token', 'range': [234, 237], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [236, 237], 'children': []}]}]}]}]}
2025-01-08 10:28:07,926 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [0, 170], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 2], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [3, 11], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [13, 29], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [30, 38], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [40, 48], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [49, 74], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [75, 97], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [98, 106], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [107, 115], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [116, 124], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [125, 133], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [134, 142], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [143, 151], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [152, 160], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [161, 169], 'children': []}]}
2025-01-08 10:28:08,062 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:08,097 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:08,245 - INFO - Step 1 result: {'type': 'Program', 'name': 'login', 'range': [239, 391], 'children': [{'type': 'FunctionDeclaration', 'name': 'login', 'range': [247, 391], 'children': [{'type': 'Parameter', 'name': 'provider', 'range': [251, 265], 'children': []}, {'type': 'Parameter', 'name': 'user_id', 'range': [268, 278], 'children': []}, {'type': 'Parameter', 'name': 'request', 'range': [281, 284], 'children': []}, {'type': 'Parameter', 'name': 'scopes', 'range': [286, 302], 'children': []}, {'type': 'ReturnType', 'name': 'LoginResponse', 'range': [308, 309], 'children': []}, {'type': 'FunctionBody', 'name': '', 'range': [310, 391], 'children': [{'type': 'VariableDeclaration', 'name': 'handler', 'range': [311, 318], 'children': []}, {'type': 'VariableDeclaration', 'name': 'requested_scopes', 'range': [321, 334], 'children': []}, {'type': 'VariableDeclaration', 'name': 'state_token', 'range': [350, 365], 'children': []}, {'type': 'VariableDeclaration', 'name': 'login_url', 'range': [368, 377], 'children': []}, {'type': 'ReturnStatement', 'name': '', 'range': [380, 391], 'children': []}]}]}]}
2025-01-08 10:28:08,765 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:09,812 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [811, 930], 'children': [{'type': 'FunctionDeclaration', 'name': 'list_credentials', 'range': [819, 930], 'children': [{'type': 'Parameter', 'name': 'user_id', 'range': [823, 833], 'children': []}, {'type': 'ReturnType', 'name': 'list[CredentialsMetaResponse]', 'range': [837, 842], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [843, 930], 'children': [{'type': 'VariableDeclaration', 'name': 'credentials', 'range': [845, 854], 'children': []}, {'type': 'ReturnStatement', 'name': '', 'range': [856, 929], 'children': [{'type': 'ArrayExpression', 'name': '', 'range': [857, 929], 'children': [{'type': 'ObjectExpression', 'name': 'CredentialsMetaResponse', 'range': [859, 922], 'children': [{'type': 'Property', 'name': 'id', 'range': [862, 867], 'children': []}, {'type': 'Property', 'name': 'provider', 'range': [869, 874], 'children': []}, {'type': 'Property', 'name': 'type', 'range': [876, 881], 'children': []}, {'type': 'Property', 'name': 'title', 'range': [883, 888], 'children': []}, {'type': 'Property', 'name': 'scopes', 'range': [890, 904], 'children': []}, {'type': 'Property', 'name': 'username', 'range': [906, 920], 'children': []}]}]}]}]}]}]}
2025-01-08 10:28:09,832 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:09,931 - INFO - Step 1 result: {'type': 'Program', 'name': 'delete_credentials', 'range': [1422, 1644], 'children': []}
2025-01-08 10:28:10,021 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:10,025 - INFO - Step 1 result: {'type': 'Program', 'name': 'webhook_ping', 'range': [1892, 2037], 'children': []}
2025-01-08 10:28:10,132 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:10,156 - INFO - Step 1 result: {'type': 'Program', 'name': 'remove_all_webhooks_for_credentials', 'range': [2038, 2206], 'children': []}
2025-01-08 10:28:10,169 - INFO - Step 1 result: {'type': 'Program', 'name': 'create_api_key_credentials', 'range': [1187, 1356], 'children': []}
2025-01-08 10:28:10,176 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:10,181 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:10,446 - INFO - Step 1 result: {'type': 'Program', 'name': '_get_provider_oauth_handler', 'range': [2207, 2360], 'children': []}
2025-01-08 10:28:10,446 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:10,746 - INFO - Step 1 result: {'type': 'Program', 'name': 'webhook_ingress_generic', 'range': [1645, 1891], 'children': []}
2025-01-08 10:28:10,746 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:10,849 - INFO - Step 1 result: {'type': 'Program', 'name': 'CredentialsDeletionResponse', 'range': [1357, 1391], 'children': [{'type': 'ClassDeclaration', 'name': 'CredentialsDeletionResponse', 'range': [1357, 1391], 'children': [{'type': 'PropertyDeclaration', 'name': 'deleted', 'range': [1364, 1371], 'children': []}, {'type': 'PropertyDeclaration', 'name': 'revoked', 'range': [1373, 1390], 'children': []}]}]}
2025-01-08 10:28:10,849 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:12,379 - INFO - Step 1 result: {'type': 'Program', 'name': 'CredentialsDeletionNeedsConfirmationResponse', 'range': [1392, 1421], 'children': [{'type': 'ClassDeclaration', 'name': 'CredentialsDeletionNeedsConfirmationResponse', 'range': [1392, 1421], 'children': [{'type': 'PropertyDeclaration', 'name': 'deleted', 'range': [1399, 1406], 'children': []}, {'type': 'PropertyDeclaration', 'name': 'need_confirmation', 'range': [1408, 1415], 'children': []}, {'type': 'PropertyDeclaration', 'name': 'message', 'range': [1417, 1420], 'children': []}]}]}
2025-01-08 10:28:12,389 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:16,862 - INFO - Step 2 result: {'type': 'Program', 'name': '', 'range': [171, 184], 'children': [{'type': 'IfStatement', 'name': '', 'range': [171, 174], 'children': [{'type': 'Identifier', 'name': 'TYPE_CHECKING', 'range': [172, 172], 'children': []}]}, {'type': 'ImportStatement', 'name': '', 'range': [175, 183], 'children': [{'type': 'FromImport', 'name': '', 'range': [175, 180], 'children': [{'type': 'Identifier', 'name': 'backend', 'range': [176, 176], 'children': []}, {'type': 'Identifier', 'name': 'integrations', 'range': [178, 178], 'children': []}, {'type': 'Identifier', 'name': 'oauth', 'range': [180, 180], 'children': []}]}, {'type': 'ImportClause', 'name': '', 'range': [181, 182], 'children': [{'type': 'Identifier', 'name': 'BaseOAuthHandler', 'range': [182, 182], 'children': []}]}]}]}
2025-01-08 10:28:17,005 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:18,449 - INFO - Step 3 result: {'type': 'Program', 'name': 'LoginResponse', 'range': [223, 238], 'children': [{'type': 'ClassDeclaration', 'name': 'LoginResponse', 'range': [223, 238], 'children': [{'type': 'Inheritance', 'name': 'BaseModel', 'range': [225, 227], 'children': []}, {'type': 'ClassBody', 'name': '', 'range': [228, 238], 'children': [{'type': 'PropertyDeclaration', 'name': 'login_url', 'range': [230, 233], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [232, 233], 'children': []}]}, {'type': 'PropertyDeclaration', 'name': 'state_token', 'range': [234, 237], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [236, 237], 'children': []}]}]}]}]}
2025-01-08 10:28:18,449 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:19,958 - INFO - Step 2 result: {'type': 'Program', 'name': 'CredentialsMetaResponse', 'range': [392, 432], 'children': [{'type': 'ClassDeclaration', 'name': 'CredentialsMetaResponse', 'range': [392, 432], 'children': [{'type': 'Inheritance', 'name': 'BaseModel', 'range': [394, 396], 'children': []}, {'type': 'ClassBody', 'name': '', 'range': [397, 432], 'children': [{'type': 'FieldDeclaration', 'name': 'id', 'range': [399, 401], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [401, 401], 'children': []}]}, {'type': 'FieldDeclaration', 'name': 'provider', 'range': [403, 405], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [405, 405], 'children': []}]}, {'type': 'FieldDeclaration', 'name': 'type', 'range': [407, 409], 'children': [{'type': 'TypeAnnotation', 'name': 'CredentialsType', 'range': [409, 409], 'children': []}]}, {'type': 'FieldDeclaration', 'name': 'title', 'range': [411, 415], 'children': [{'type': 'TypeAnnotation', 'name': 'str | None', 'range': [413, 415], 'children': []}]}, {'type': 'FieldDeclaration', 'name': 'scopes', 'range': [417, 424], 'children': [{'type': 'TypeAnnotation', 'name': 'list[str] | None', 'range': [419, 424], 'children': []}]}, {'type': 'FieldDeclaration', 'name': 'username', 'range': [426, 430], 'children': [{'type': 'TypeAnnotation', 'name': 'str | None', 'range': [428, 430], 'children': []}]}]}]}]}
2025-01-08 10:28:19,958 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:24,286 - INFO - Step 2 result: {'nodes': [{'type': 'ImportDeclaration', 'name': '', 'range': [185, 190], 'children': [{'type': 'ImportFrom', 'name': '', 'range': [185, 188], 'children': [{'type': 'Module', 'name': 'utils', 'range': [188, 188], 'children': []}]}, {'type': 'ImportedItem', 'name': 'get_user_id', 'range': [190, 190], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'logger', 'range': [193, 200], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [194, 200], 'children': [{'type': 'CallExpression', 'name': 'getLogger', 'range': [195, 200], 'children': [{'type': 'MemberExpression', 'name': 'logging', 'range': [195, 196], 'children': []}, {'type': 'Arguments', 'name': '', 'range': [198, 200], 'children': [{'type': 'StringLiteral', 'name': '__name__', 'range': [199, 199], 'children': []}]}]}]}]}, {'type': 'VariableDeclaration', 'name': 'settings', 'range': [202, 206], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [203, 206], 'children': [{'type': 'NewExpression', 'name': 'Settings', 'range': [204, 206], 'children': [{'type': 'Arguments', 'name': '', 'range': [205, 206], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'router', 'range': [208, 212], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [209, 212], 'children': [{'type': 'NewExpression', 'name': 'APIRouter', 'range': [210, 212], 'children': [{'type': 'Arguments', 'name': '', 'range': [211, 212], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'creds_manager', 'range': [215, 219], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [216, 219], 'children': [{'type': 'NewExpression', 'name': 'IntegrationCredentialsManager', 'range': [217, 219], 'children': [{'type': 'Arguments', 'name': '', 'range': [218, 219], 'children': []}]}]}]}]}
2025-01-08 10:28:24,286 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:25,113 - INFO - Step 2 result: {'type': 'Program', 'name': 'CredentialsDeletionNeedsConfirmationResponse', 'range': [1392, 1421], 'children': [{'type': 'ClassDeclaration', 'name': 'CredentialsDeletionNeedsConfirmationResponse', 'range': [1392, 1421], 'children': [{'type': 'PropertyDeclaration', 'name': 'deleted', 'range': [1399, 1406], 'children': [{'type': 'TypeAnnotation', 'name': 'Literal', 'range': [1401, 1404], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [1405, 1406], 'children': []}]}, {'type': 'PropertyDeclaration', 'name': 'need_confirmation', 'range': [1408, 1415], 'children': [{'type': 'TypeAnnotation', 'name': 'Literal', 'range': [1410, 1413], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [1414, 1415], 'children': []}]}, {'type': 'PropertyDeclaration', 'name': 'message', 'range': [1417, 1420], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1419, 1420], 'children': []}]}]}]}
2025-01-08 10:28:25,114 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:26,744 - INFO - Step 2 result: {'type': 'Program', 'name': 'CredentialsDeletionResponse', 'range': [1357, 1391], 'children': [{'type': 'ClassDeclaration', 'name': 'CredentialsDeletionResponse', 'range': [1357, 1391], 'children': [{'type': 'PropertyDeclaration', 'name': 'deleted', 'range': [1364, 1371], 'children': [{'type': 'TypeAnnotation', 'name': 'Literal', 'range': [1366, 1369], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [1370, 1371], 'children': [{'type': 'Literal', 'name': 'True', 'range': [1371, 1371], 'children': []}]}]}, {'type': 'PropertyDeclaration', 'name': 'revoked', 'range': [1373, 1390], 'children': [{'type': 'TypeAnnotation', 'name': 'bool | None', 'range': [1375, 1377], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [1378, 1390], 'children': [{'type': 'CallExpression', 'name': 'Field', 'range': [1379, 1390], 'children': [{'type': 'Argument', 'name': 'description', 'range': [1382, 1388], 'children': [{'type': 'StringLiteral', 'name': '"Indicates whether the credentials were also revoked by their "\n"provider. `None`/`null` if not applicable, e.g. when deleting "\n"non-revocable credentials such as API keys."', 'range': [1384, 1388], 'children': []}]}]}]}]}]}]}
2025-01-08 10:28:26,745 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:27,024 - INFO - Step 4 result: {'type': 'Program', 'name': 'LoginResponse', 'range': [223, 238], 'children': [{'type': 'ClassDecl', 'name': 'LoginResponse', 'range': [223, 238], 'children': [{'type': 'Inheritance', 'name': 'BaseModel', 'range': [225, 227], 'children': []}, {'type': 'ClassBody', 'name': '', 'range': [228, 238], 'children': [{'type': 'PropertyDecl', 'name': 'login_url', 'range': [230, 233], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [232, 233], 'children': []}]}, {'type': 'PropertyDecl', 'name': 'state_token', 'range': [234, 237], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [236, 237], 'children': []}]}]}]}]}
2025-01-08 10:28:27,025 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:28:27,359 - INFO - Step 3 result: {'type': 'Program', 'name': '', 'range': [171, 184], 'children': [{'type': 'IfStatement', 'name': '', 'range': [171, 174], 'children': [{'type': 'Identifier', 'name': 'TYPE_CHECKING', 'range': [172, 172], 'children': []}]}, {'type': 'ImportStatement', 'name': '', 'range': [175, 183], 'children': [{'type': 'FromImport', 'name': '', 'range': [175, 180], 'children': [{'type': 'Identifier', 'name': 'backend', 'range': [176, 176], 'children': []}, {'type': 'Identifier', 'name': 'integrations', 'range': [178, 178], 'children': []}, {'type': 'Identifier', 'name': 'oauth', 'range': [180, 180], 'children': []}]}, {'type': 'ImportClause', 'name': '', 'range': [181, 182], 'children': [{'type': 'Identifier', 'name': 'BaseOAuthHandler', 'range': [182, 182], 'children': []}]}]}]}
2025-01-08 10:28:27,360 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:29,995 - INFO - Step 2 result: {'type': 'Program', 'name': 'list_credentials_by_provider', 'range': [939, 1069], 'children': [{'type': 'FunctionDeclaration', 'name': 'list_credentials_by_provider', 'range': [939, 1069], 'children': [{'type': 'Parameter', 'name': 'provider', 'range': [943, 957], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated', 'range': [945, 957], 'children': [{'type': 'Type', 'name': 'ProviderName', 'range': [948, 948], 'children': []}, {'type': 'Type', 'name': 'Path', 'range': [950, 955], 'children': [{'type': 'Argument', 'name': 'title', 'range': [952, 954], 'children': []}]}]}]}, {'type': 'Parameter', 'name': 'user_id', 'range': [960, 970], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated', 'range': [962, 970], 'children': [{'type': 'Type', 'name': 'str', 'range': [964, 964], 'children': []}, {'type': 'Dependency', 'name': 'Depends', 'range': [966, 969], 'children': [{'type': 'FunctionCall', 'name': 'get_user_id', 'range': [968, 968], 'children': []}]}]}]}, {'type': 'ReturnType', 'name': 'list', 'range': [976, 979], 'children': [{'type': 'Type', 'name': 'CredentialsMetaResponse', 'range': [978, 978], 'children': []}]}, {'type': 'FunctionBody', 'name': '', 'range': [982, 1068], 'children': [{'type': 'Assignment', 'name': 'credentials', 'range': [982, 993], 'children': [{'type': 'FunctionCall', 'name': 'get_creds_by_provider', 'range': [988, 993], 'children': [{'type': 'Argument', 'name': 'user_id', 'range': [990, 990], 'children': []}, {'type': 'Argument', 'name': 'provider', 'range': [992, 992], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [995, 1068], 'children': [{'type': 'ListComprehension', 'name': '', 'range': [996, 1068], 'children': [{'type': 'FunctionCall', 'name': 'CredentialsMetaResponse', 'range': [998, 1061], 'children': [{'type': 'Argument', 'name': 'id', 'range': [1001, 1006], 'children': []}, {'type': 'Argument', 'name': 'provider', 'range': [1008, 1013], 'children': []}, {'type': 'Argument', 'name': 'type', 'range': [1015, 1020], 'children': []}, {'type': 'Argument', 'name': 'title', 'range': [1022, 1027], 'children': []}, {'type': 'Argument', 'name': 'scopes', 'range': [1029, 1043], 'children': []}, {'type': 'Argument', 'name': 'username', 'range': [1045, 1059], 'children': []}]}, {'type': 'ForLoop', 'name': '', 'range': [1063, 1067], 'children': [{'type': 'Variable', 'name': 'cred', 'range': [1064, 1064], 'children': []}, {'type': 'Iterable', 'name': 'credentials', 'range': [1066, 1066], 'children': []}]}]}]}]}]}]}
2025-01-08 10:28:29,995 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:32,471 - INFO - Step 2 result: {'type': 'Program', 'name': 'callback', 'range': [433, 810], 'children': [{'type': 'FunctionDeclaration', 'name': 'callback', 'range': [441, 810], 'children': [{'type': 'Decorator', 'name': '@router.post', 'range': [433, 440], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [443, 510], 'children': [{'type': 'Parameter', 'name': 'provider', 'range': [445, 459], 'children': []}, {'type': 'Parameter', 'name': 'code', 'range': [462, 474], 'children': []}, {'type': 'Parameter', 'name': 'state_token', 'range': [477, 489], 'children': []}, {'type': 'Parameter', 'name': 'user_id', 'range': [492, 502], 'children': []}, {'type': 'Parameter', 'name': 'request', 'range': [505, 508], 'children': []}]}, {'type': 'ReturnType', 'name': 'CredentialsMetaResponse', 'range': [511, 514], 'children': []}, {'type': 'Block', 'name': 'function_body', 'range': [515, 810], 'children': [{'type': 'ExpressionStatement', 'name': 'logger.debug', 'range': [516, 523], 'children': []}, {'type': 'Assignment', 'name': 'handler', 'range': [524, 532], 'children': []}, {'type': 'IfStatement', 'name': 'if_not_creds_manager.store.verify_state_token', 'range': [540, 575], 'children': [{'type': 'Block', 'name': 'if_body', 'range': [555, 575], 'children': [{'type': 'ExpressionStatement', 'name': 'logger.warning', 'range': [556, 563], 'children': []}, {'type': 'ThrowStatement', 'name': 'raise_HTTPException', 'range': [564, 575], 'children': []}]}]}, {'type': 'TryStatement', 'name': 'try', 'range': [577, 723], 'children': [{'type': 'Block', 'name': 'try_body', 'range': [579, 694], 'children': [{'type': 'Assignment', 'name': 'scopes', 'range': [580, 596], 'children': []}, {'type': 'ExpressionStatement', 'name': 'logger.debug', 'range': [597, 604], 'children': []}, {'type': 'Assignment', 'name': 'scopes', 'range': [606, 614], 'children': []}, {'type': 'Assignment', 'name': 'credentials', 'range': [616, 626], 'children': []}, {'type': 'ExpressionStatement', 'name': 'logger.debug', 'range': [627, 634], 'children': []}, {'type': 'IfStatement', 'name': 'if_not_set(scopes).issubset(set(credentials.scopes))', 'range': [649, 694], 'children': [{'type': 'Block', 'name': 'if_body', 'range': [666, 694], 'children': [{'type': 'ExpressionStatement', 'name': 'logger.warning', 'range': [681, 693], 'children': []}]}]}]}, {'type': 'CatchClause', 'name': 'except_Exception_as_e', 'range': [695, 723], 'children': [{'type': 'Block', 'name': 'catch_body', 'range': [700, 723], 'children': [{'type': 'ExpressionStatement', 'name': 'logger.error', 'range': [701, 708], 'children': []}, {'type': 'ThrowStatement', 'name': 'raise_HTTPException', 'range': [709, 723], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': 'creds_manager.create', 'range': [740, 748], 'children': []}, {'type': 'ExpressionStatement', 'name': 'logger.debug', 'range': [750, 762], 'children': []}, {'type': 'ReturnStatement', 'name': 'return_CredentialsMetaResponse', 'range': [763, 810], 'children': []}]}]}]}
2025-01-08 10:28:32,475 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:33,106 - INFO - Step 3 result: {'type': 'Program', 'name': 'CredentialsDeletionNeedsConfirmationResponse', 'range': [1392, 1421], 'children': [{'type': 'ClassDeclaration', 'name': 'CredentialsDeletionNeedsConfirmationResponse', 'range': [1392, 1421], 'children': [{'type': 'PropertyDeclaration', 'name': 'deleted', 'range': [1399, 1406], 'children': [{'type': 'TypeAnnotation', 'name': 'Literal', 'range': [1401, 1404], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [1405, 1406], 'children': []}]}, {'type': 'PropertyDeclaration', 'name': 'need_confirmation', 'range': [1408, 1415], 'children': [{'type': 'TypeAnnotation', 'name': 'Literal', 'range': [1410, 1413], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [1414, 1415], 'children': []}]}, {'type': 'PropertyDeclaration', 'name': 'message', 'range': [1417, 1420], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1419, 1420], 'children': []}]}]}]}
2025-01-08 10:28:33,106 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:33,346 - INFO - Step 3 result: {'type': 'Program', 'name': 'CredentialsMetaResponse', 'range': [392, 432], 'children': [{'type': 'ClassDeclaration', 'name': 'CredentialsMetaResponse', 'range': [392, 432], 'children': [{'type': 'Inheritance', 'name': 'BaseModel', 'range': [394, 396], 'children': []}, {'type': 'ClassBody', 'name': '', 'range': [397, 432], 'children': [{'type': 'FieldDeclaration', 'name': 'id', 'range': [399, 401], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [401, 401], 'children': []}]}, {'type': 'FieldDeclaration', 'name': 'provider', 'range': [403, 405], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [405, 405], 'children': []}]}, {'type': 'FieldDeclaration', 'name': 'type', 'range': [407, 409], 'children': [{'type': 'TypeAnnotation', 'name': 'CredentialsType', 'range': [409, 409], 'children': []}]}, {'type': 'FieldDeclaration', 'name': 'title', 'range': [411, 415], 'children': [{'type': 'TypeAnnotation', 'name': 'str | None', 'range': [413, 415], 'children': []}]}, {'type': 'FieldDeclaration', 'name': 'scopes', 'range': [417, 424], 'children': [{'type': 'TypeAnnotation', 'name': 'list[str] | None', 'range': [419, 424], 'children': []}]}, {'type': 'FieldDeclaration', 'name': 'username', 'range': [426, 430], 'children': [{'type': 'TypeAnnotation', 'name': 'str | None', 'range': [428, 430], 'children': []}]}]}]}]}
2025-01-08 10:28:33,346 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:33,625 - INFO - Step 2 result: {'type': 'Program', 'name': 'delete_credentials', 'range': [1422, 1644], 'children': [{'type': 'FunctionDeclaration', 'name': 'delete_credentials', 'range': [1422, 1644], 'children': [{'type': 'Decorator', 'name': '@router.delete', 'range': [1422, 1428], 'children': []}, {'type': 'FunctionSignature', 'name': 'delete_credentials', 'range': [1430, 1510], 'children': [{'type': 'Parameter', 'name': 'request', 'range': [1435, 1437], 'children': []}, {'type': 'Parameter', 'name': 'provider', 'range': [1440, 1454], 'children': []}, {'type': 'Parameter', 'name': 'cred_id', 'range': [1457, 1469], 'children': []}, {'type': 'Parameter', 'name': 'user_id', 'range': [1472, 1482], 'children': []}, {'type': 'Parameter', 'name': 'force', 'range': [1485, 1501], 'children': []}, {'type': 'ReturnType', 'name': 'CredentialsDeletionResponse | CredentialsDeletionNeedsConfirmationResponse', 'range': [1505, 1509], 'children': []}]}, {'type': 'FunctionBody', 'name': 'delete_credentials', 'range': [1511, 1644], 'children': [{'type': 'VariableDeclaration', 'name': 'creds', 'range': [1512, 1523], 'children': []}, {'type': 'IfStatement', 'name': 'if not creds', 'range': [1525, 1540], 'children': []}, {'type': 'IfStatement', 'name': 'if creds.provider != provider', 'range': [1542, 1563], 'children': []}, {'type': 'TryStatement', 'name': 'try', 'range': [1566, 1593], 'children': [{'type': 'AwaitExpression', 'name': 'await remove_all_webhooks_for_credentials', 'range': [1569, 1575], 'children': []}, {'type': 'CatchClause', 'name': 'except NeedConfirmation as e', 'range': [1577, 1593], 'children': []}]}, {'type': 'ExpressionStatement', 'name': 'creds_manager.delete', 'range': [1595, 1602], 'children': []}, {'type': 'VariableDeclaration', 'name': 'tokens_revoked', 'range': [1605, 1607], 'children': []}, {'type': 'IfStatement', 'name': 'if isinstance(creds, OAuth2Credentials)', 'range': [1609, 1635], 'children': []}, {'type': 'ReturnStatement', 'name': 'return CredentialsDeletionResponse', 'range': [1637, 1643], 'children': []}]}]}]}
2025-01-08 10:28:33,625 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:33,792 - INFO - Step 5 result: {'type': 'Program', 'name': 'LoginResponse', 'range': [223, 238], 'children': [{'type': 'ClassDecl', 'name': 'LoginResponse', 'range': [223, 238], 'children': [{'type': 'Inheritance', 'name': 'BaseModel', 'range': [225, 227], 'children': []}, {'type': 'ClassBody', 'name': '', 'range': [228, 238], 'children': [{'type': 'PropertyDecl', 'name': 'login_url', 'range': [230, 233], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [232, 233], 'children': []}]}, {'type': 'PropertyDecl', 'name': 'state_token', 'range': [234, 237], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [236, 237], 'children': []}]}]}]}]}
2025-01-08 10:28:33,792 - INFO - Completed main AST analysis flow
2025-01-08 10:28:33,793 - INFO - Successfully processed chunk
2025-01-08 10:28:33,860 - INFO - Step 2 result: {'type': 'Program', 'name': 'webhook_ping', 'range': [1892, 2037], 'children': [{'type': 'Decorator', 'name': '@router.post', 'range': [1892, 1898], 'children': [{'type': 'Argument', 'name': '"/webhooks/{webhook_id}/ping"', 'range': [1897, 1897], 'children': []}]}, {'type': 'FunctionDef', 'name': 'webhook_ping', 'range': [1900, 2037], 'children': [{'type': 'Parameter', 'name': 'webhook_id', 'range': [1905, 1917], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated[str, Path]', 'range': [1907, 1917], 'children': [{'type': 'Argument', 'name': 'title="Our ID for the webhook"', 'range': [1913, 1915], 'children': []}]}]}, {'type': 'Parameter', 'name': 'user_id', 'range': [1920, 1930], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated[str, Depends]', 'range': [1922, 1930], 'children': [{'type': 'Argument', 'name': 'get_user_id', 'range': [1928, 1928], 'children': []}]}]}, {'type': 'Comment', 'name': '# require auth', 'range': [1932, 1934], 'children': []}, {'type': 'Assignment', 'name': 'webhook = await get_webhook(webhook_id)', 'range': [1939, 1945], 'children': []}, {'type': 'Assignment', 'name': 'webhook_manager = WEBHOOK_MANAGERS_BY_NAME[webhook.provider]()', 'range': [1947, 1956], 'children': []}, {'type': 'Assignment', 'name': 'credentials = (creds_manager.get(user_id, webhook.credentials_id) if webhook.credentials_id else None)', 'range': [1959, 1981], 'children': []}, {'type': 'Try', 'name': 'try', 'range': [1984, 2003], 'children': [{'type': 'Await', 'name': 'await webhook_manager.trigger_ping(webhook, credentials)', 'range': [1987, 1995], 'children': []}, {'type': 'Except', 'name': 'except NotImplementedError', 'range': [1997, 2003], 'children': [{'type': 'Return', 'name': 'return False', 'range': [2001, 2002], 'children': []}]}]}, {'type': 'If', 'name': 'if not await wait_for_webhook_event(webhook_id, event_type="ping", timeout=10)', 'range': [2005, 2020], 'children': [{'type': 'Raise', 'name': 'raise HTTPException(status_code=504, detail="Webhook ping timed out")', 'range': [2022, 2032], 'children': []}]}, {'type': 'Return', 'name': 'return True', 'range': [2035, 2036], 'children': []}]}]}
2025-01-08 10:28:33,860 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:35,290 - INFO - Step 2 result: {'type': 'Program', 'name': 'get_credential', 'range': [1078, 1186], 'children': [{'type': 'FunctionDeclaration', 'name': 'get_credential', 'range': [1078, 1186], 'children': [{'type': 'FunctionSignature', 'name': 'get_credential', 'range': [1078, 1132], 'children': [{'type': 'Parameter', 'name': 'provider', 'range': [1082, 1096], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated', 'range': [1084, 1096], 'children': [{'type': 'Type', 'name': 'ProviderName', 'range': [1087, 1087], 'children': []}, {'type': 'Type', 'name': 'Path', 'range': [1089, 1094], 'children': []}]}]}, {'type': 'Parameter', 'name': 'cred_id', 'range': [1099, 1111], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated', 'range': [1101, 1111], 'children': [{'type': 'Type', 'name': 'str', 'range': [1103, 1103], 'children': []}, {'type': 'Type', 'name': 'Path', 'range': [1105, 1110], 'children': []}]}]}, {'type': 'Parameter', 'name': 'user_id', 'range': [1114, 1124], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated', 'range': [1116, 1124], 'children': [{'type': 'Type', 'name': 'str', 'range': [1118, 1118], 'children': []}, {'type': 'Type', 'name': 'Depends', 'range': [1120, 1123], 'children': []}]}]}, {'type': 'ReturnType', 'name': 'Credentials', 'range': [1130, 1130], 'children': []}]}, {'type': 'FunctionBody', 'name': 'get_credential', 'range': [1133, 1186], 'children': [{'type': 'VariableDeclaration', 'name': 'credential', 'range': [1133, 1142], 'children': [{'type': 'Assignment', 'name': '=', 'range': [1134, 1134], 'children': []}, {'type': 'FunctionCall', 'name': 'creds_manager.get', 'range': [1135, 1142], 'children': [{'type': 'Argument', 'name': 'user_id', 'range': [1139, 1139], 'children': []}, {'type': 'Argument', 'name': 'cred_id', 'range': [1141, 1141], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if', 'range': [1144, 1159], 'children': [{'type': 'Condition', 'name': 'not credential', 'range': [1145, 1146], 'children': []}, {'type': 'Block', 'name': '', 'range': [1147, 1159], 'children': [{'type': 'RaiseStatement', 'name': 'raise', 'range': [1149, 1159], 'children': [{'type': 'FunctionCall', 'name': 'HTTPException', 'range': [1150, 1159], 'children': [{'type': 'Argument', 'name': 'status_code', 'range': [1152, 1154], 'children': []}, {'type': 'Argument', 'name': 'detail', 'range': [1156, 1158], 'children': []}]}]}]}]}, {'type': 'IfStatement', 'name': 'if', 'range': [1161, 1182], 'children': [{'type': 'Condition', 'name': 'credential.provider != provider', 'range': [1162, 1167], 'children': []}, {'type': 'Block', 'name': '', 'range': [1168, 1182], 'children': [{'type': 'RaiseStatement', 'name': 'raise', 'range': [1170, 1182], 'children': [{'type': 'FunctionCall', 'name': 'HTTPException', 'range': [1171, 1182], 'children': [{'type': 'Argument', 'name': 'status_code', 'range': [1174, 1176], 'children': []}, {'type': 'Argument', 'name': 'detail', 'range': [1178, 1180], 'children': []}]}]}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [1184, 1185], 'children': []}]}]}]}
2025-01-08 10:28:35,290 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:35,878 - INFO - Step 4 result: {'type': 'Program', 'name': '', 'range': [171, 184], 'children': [{'type': 'IfStatement', 'name': '', 'range': [171, 174], 'children': [{'type': 'Identifier', 'name': 'TYPE_CHECKING', 'range': [172, 172], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [175, 183], 'children': [{'type': 'FromClause', 'name': '', 'range': [175, 180], 'children': [{'type': 'Identifier', 'name': 'backend', 'range': [176, 176], 'children': []}, {'type': 'Identifier', 'name': 'integrations', 'range': [178, 178], 'children': []}, {'type': 'Identifier', 'name': 'oauth', 'range': [180, 180], 'children': []}]}, {'type': 'ImportSpecifier', 'name': '', 'range': [181, 182], 'children': [{'type': 'Identifier', 'name': 'BaseOAuthHandler', 'range': [182, 182], 'children': []}]}]}]}
2025-01-08 10:28:35,878 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:28:36,832 - INFO - Step 3 result: {'type': 'Program', 'name': 'CredentialsDeletionResponse', 'range': [1357, 1391], 'children': [{'type': 'ClassDeclaration', 'name': 'CredentialsDeletionResponse', 'range': [1357, 1391], 'children': [{'type': 'PropertyDeclaration', 'name': 'deleted', 'range': [1364, 1371], 'children': [{'type': 'TypeAnnotation', 'name': 'Literal', 'range': [1366, 1369], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [1370, 1371], 'children': [{'type': 'Literal', 'name': 'True', 'range': [1371, 1371], 'children': []}]}]}, {'type': 'PropertyDeclaration', 'name': 'revoked', 'range': [1373, 1390], 'children': [{'type': 'TypeAnnotation', 'name': 'bool | None', 'range': [1375, 1377], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [1378, 1390], 'children': [{'type': 'CallExpression', 'name': 'Field', 'range': [1379, 1390], 'children': [{'type': 'Argument', 'name': 'description', 'range': [1382, 1388], 'children': [{'type': 'StringLiteral', 'name': '"Indicates whether the credentials were also revoked by their "\n"provider. `None`/`null` if not applicable, e.g. when deleting "\n"non-revocable credentials such as API keys."', 'range': [1384, 1388], 'children': []}]}]}]}]}]}]}
2025-01-08 10:28:36,832 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:39,789 - INFO - Step 3 result: {'nodes': [{'type': 'ImportDeclaration', 'name': '', 'range': [185, 190], 'children': [{'type': 'ImportFrom', 'name': '', 'range': [185, 188], 'children': [{'type': 'Module', 'name': 'utils', 'range': [188, 188], 'children': []}]}, {'type': 'ImportedItem', 'name': 'get_user_id', 'range': [190, 190], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'logger', 'range': [193, 200], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [194, 200], 'children': [{'type': 'CallExpression', 'name': 'getLogger', 'range': [195, 200], 'children': [{'type': 'MemberExpression', 'name': 'logging', 'range': [195, 196], 'children': []}, {'type': 'Arguments', 'name': '', 'range': [198, 200], 'children': [{'type': 'StringLiteral', 'name': '__name__', 'range': [199, 199], 'children': []}]}]}]}]}, {'type': 'VariableDeclaration', 'name': 'settings', 'range': [202, 206], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [203, 206], 'children': [{'type': 'NewExpression', 'name': 'Settings', 'range': [204, 206], 'children': [{'type': 'Arguments', 'name': '', 'range': [205, 206], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'router', 'range': [208, 212], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [209, 212], 'children': [{'type': 'NewExpression', 'name': 'APIRouter', 'range': [210, 212], 'children': [{'type': 'Arguments', 'name': '', 'range': [211, 212], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'creds_manager', 'range': [215, 219], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [216, 219], 'children': [{'type': 'NewExpression', 'name': 'IntegrationCredentialsManager', 'range': [217, 219], 'children': [{'type': 'Arguments', 'name': '', 'range': [218, 219], 'children': []}]}]}]}]}
2025-01-08 10:28:39,789 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:40,909 - INFO - Step 2 result: {'type': 'Program', 'name': '', 'range': [811, 930], 'children': [{'type': 'FunctionDeclaration', 'name': 'list_credentials', 'range': [819, 930], 'children': [{'type': 'Parameter', 'name': 'user_id', 'range': [823, 833], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated[str, Depends(get_user_id)]', 'range': [825, 833], 'children': []}]}, {'type': 'ReturnType', 'name': 'list[CredentialsMetaResponse]', 'range': [837, 842], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [843, 930], 'children': [{'type': 'VariableDeclaration', 'name': 'credentials', 'range': [845, 854], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [846, 854], 'children': [{'type': 'CallExpression', 'name': 'creds_manager.store.get_all_creds', 'range': [847, 854], 'children': [{'type': 'Identifier', 'name': 'user_id', 'range': [853, 854], 'children': []}]}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [856, 929], 'children': [{'type': 'ArrayExpression', 'name': '', 'range': [857, 929], 'children': [{'type': 'ObjectExpression', 'name': 'CredentialsMetaResponse', 'range': [859, 922], 'children': [{'type': 'Property', 'name': 'id', 'range': [862, 867], 'children': [{'type': 'Identifier', 'name': 'cred.id', 'range': [864, 867], 'children': []}]}, {'type': 'Property', 'name': 'provider', 'range': [869, 874], 'children': [{'type': 'Identifier', 'name': 'cred.provider', 'range': [871, 874], 'children': []}]}, {'type': 'Property', 'name': 'type', 'range': [876, 881], 'children': [{'type': 'Identifier', 'name': 'cred.type', 'range': [878, 881], 'children': []}]}, {'type': 'Property', 'name': 'title', 'range': [883, 888], 'children': [{'type': 'Identifier', 'name': 'cred.title', 'range': [885, 888], 'children': []}]}, {'type': 'Property', 'name': 'scopes', 'range': [890, 904], 'children': [{'type': 'ConditionalExpression', 'name': 'if isinstance(cred, OAuth2Credentials) else None', 'range': [895, 904], 'children': [{'type': 'CallExpression', 'name': 'isinstance', 'range': [896, 901], 'children': [{'type': 'Identifier', 'name': 'cred', 'range': [898, 899], 'children': []}, {'type': 'Identifier', 'name': 'OAuth2Credentials', 'range': [900, 901], 'children': []}]}, {'type': 'Identifier', 'name': 'None', 'range': [903, 904], 'children': []}]}]}, {'type': 'Property', 'name': 'username', 'range': [906, 920], 'children': [{'type': 'ConditionalExpression', 'name': 'if isinstance(cred, OAuth2Credentials) else None', 'range': [911, 920], 'children': [{'type': 'CallExpression', 'name': 'isinstance', 'range': [912, 917], 'children': [{'type': 'Identifier', 'name': 'cred', 'range': [914, 915], 'children': []}, {'type': 'Identifier', 'name': 'OAuth2Credentials', 'range': [916, 917], 'children': []}]}, {'type': 'Identifier', 'name': 'None', 'range': [919, 920], 'children': []}]}]}]}]}]}]}]}]}
2025-01-08 10:28:40,909 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:41,612 - INFO - Step 4 result: {'type': 'Program', 'name': 'CredentialsDeletionNeedsConfirmationResponse', 'range': [1392, 1421], 'children': [{'type': 'ClassDecl', 'name': 'CredentialsDeletionNeedsConfirmationResponse', 'range': [1392, 1421], 'children': [{'type': 'PropertyDecl', 'name': 'deleted', 'range': [1399, 1406], 'children': [{'type': 'TypeAnnotation', 'name': 'Literal', 'range': [1401, 1404], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [1405, 1406], 'children': []}]}, {'type': 'PropertyDecl', 'name': 'need_confirmation', 'range': [1408, 1415], 'children': [{'type': 'TypeAnnotation', 'name': 'Literal', 'range': [1410, 1413], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [1414, 1415], 'children': []}]}, {'type': 'PropertyDecl', 'name': 'message', 'range': [1417, 1420], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1419, 1420], 'children': []}]}]}]}
2025-01-08 10:28:41,612 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:28:43,442 - INFO - Step 2 result: {'type': 'Program', 'name': 'login', 'range': [239, 391], 'children': [{'type': 'FunctionDeclaration', 'name': 'login', 'range': [247, 391], 'children': [{'type': 'Parameter', 'name': 'provider', 'range': [251, 265], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated', 'range': [253, 265], 'children': [{'type': 'Type', 'name': 'ProviderName', 'range': [256, 256], 'children': []}, {'type': 'Type', 'name': 'Path', 'range': [258, 263], 'children': [{'type': 'Argument', 'name': 'title', 'range': [260, 262], 'children': []}]}]}]}, {'type': 'Parameter', 'name': 'user_id', 'range': [268, 278], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated', 'range': [270, 278], 'children': [{'type': 'Type', 'name': 'str', 'range': [272, 272], 'children': []}, {'type': 'Type', 'name': 'Depends', 'range': [274, 277], 'children': [{'type': 'Argument', 'name': 'get_user_id', 'range': [276, 276], 'children': []}]}]}]}, {'type': 'Parameter', 'name': 'request', 'range': [281, 284], 'children': [{'type': 'Type', 'name': 'Request', 'range': [283, 283], 'children': []}]}, {'type': 'Parameter', 'name': 'scopes', 'range': [286, 302], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated', 'range': [288, 302], 'children': [{'type': 'Type', 'name': 'str', 'range': [291, 291], 'children': []}, {'type': 'Type', 'name': 'Query', 'range': [293, 298], 'children': [{'type': 'Argument', 'name': 'title', 'range': [295, 297], 'children': []}]}]}]}, {'type': 'ReturnType', 'name': 'LoginResponse', 'range': [308, 309], 'children': []}, {'type': 'FunctionBody', 'name': '', 'range': [310, 391], 'children': [{'type': 'VariableDeclaration', 'name': 'handler', 'range': [311, 318], 'children': [{'type': 'CallExpression', 'name': '_get_provider_oauth_handler', 'range': [313, 318], 'children': [{'type': 'Argument', 'name': 'request', 'range': [315, 315], 'children': []}, {'type': 'Argument', 'name': 'provider', 'range': [317, 317], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'requested_scopes', 'range': [321, 334], 'children': [{'type': 'CallExpression', 'name': 'split', 'range': [325, 328], 'children': [{'type': 'Argument', 'name': '","', 'range': [327, 327], 'children': []}]}, {'type': 'ConditionalExpression', 'name': '', 'range': [329, 334], 'children': [{'type': 'Test', 'name': 'scopes', 'range': [330, 330], 'children': []}, {'type': 'Consequent', 'name': '', 'range': [332, 333], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'state_token', 'range': [350, 365], 'children': [{'type': 'CallExpression', 'name': 'store_state_token', 'range': [356, 365], 'children': [{'type': 'Argument', 'name': 'user_id', 'range': [359, 359], 'children': []}, {'type': 'Argument', 'name': 'provider', 'range': [361, 361], 'children': []}, {'type': 'Argument', 'name': 'requested_scopes', 'range': [363, 363], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'login_url', 'range': [368, 377], 'children': [{'type': 'CallExpression', 'name': 'get_login_url', 'range': [372, 377], 'children': [{'type': 'Argument', 'name': 'requested_scopes', 'range': [374, 374], 'children': []}, {'type': 'Argument', 'name': 'state_token', 'range': [376, 376], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [380, 391], 'children': [{'type': 'CallExpression', 'name': 'LoginResponse', 'range': [382, 390], 'children': [{'type': 'Argument', 'name': 'login_url', 'range': [384, 385], 'children': []}, {'type': 'Argument', 'name': 'state_token', 'range': [387, 389], 'children': []}]}]}]}]}]}
2025-01-08 10:28:43,442 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:43,489 - INFO - Step 5 result: {'type': 'Program', 'name': '', 'range': [171, 184], 'children': [{'type': 'IfStatement', 'name': '', 'range': [171, 174], 'children': [{'type': 'Identifier', 'name': 'TYPE_CHECKING', 'range': [172, 172], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [175, 183], 'children': [{'type': 'FromClause', 'name': '', 'range': [175, 180], 'children': [{'type': 'Identifier', 'name': 'backend', 'range': [176, 176], 'children': []}, {'type': 'Identifier', 'name': 'integrations', 'range': [178, 178], 'children': []}, {'type': 'Identifier', 'name': 'oauth', 'range': [180, 180], 'children': []}]}, {'type': 'ImportSpecifier', 'name': '', 'range': [181, 182], 'children': [{'type': 'Identifier', 'name': 'BaseOAuthHandler', 'range': [182, 182], 'children': []}]}]}]}
2025-01-08 10:28:43,489 - INFO - Completed main AST analysis flow
2025-01-08 10:28:43,490 - INFO - Successfully processed chunk
2025-01-08 10:28:44,188 - INFO - Step 2 result: {'type': 'Program', 'name': 'create_api_key_credentials', 'range': [1187, 1356], 'children': [{'type': 'Decorator', 'name': '@router.post', 'range': [1187, 1197], 'children': [{'type': 'Argument', 'name': '"/{provider}/credentials"', 'range': [1192, 1192], 'children': []}, {'type': 'Argument', 'name': 'status_code=201', 'range': [1194, 1196], 'children': []}]}, {'type': 'FunctionDef', 'name': 'create_api_key_credentials', 'range': [1199, 1356], 'children': [{'type': 'Parameter', 'name': 'user_id', 'range': [1203, 1213], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated[str, Depends(get_user_id)]', 'range': [1205, 1213], 'children': []}]}, {'type': 'Parameter', 'name': 'provider', 'range': [1216, 1230], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated[ProviderName, Path(title="The provider to create credentials for")]', 'range': [1218, 1230], 'children': []}]}, {'type': 'Parameter', 'name': 'api_key', 'range': [1233, 1245], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated[str, Body(title="The API key to store")]', 'range': [1235, 1245], 'children': []}]}, {'type': 'Parameter', 'name': 'title', 'range': [1248, 1260], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated[str, Body(title="Optional title for the credentials")]', 'range': [1250, 1260], 'children': []}]}, {'type': 'Parameter', 'name': 'expires_at', 'range': [1263, 1281], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated[int | None, Body(title="Unix timestamp when the key expires")]', 'range': [1265, 1278], 'children': []}]}, {'type': 'ReturnType', 'name': 'APIKeyCredentials', 'range': [1287, 1287], 'children': []}, {'type': 'Block', 'name': 'FunctionBody', 'range': [1290, 1356], 'children': [{'type': 'Assignment', 'name': 'new_credentials = APIKeyCredentials', 'range': [1290, 1318], 'children': [{'type': 'Call', 'name': 'APIKeyCredentials', 'range': [1292, 1318], 'children': [{'type': 'Argument', 'name': 'provider=provider', 'range': [1295, 1297], 'children': []}, {'type': 'Argument', 'name': 'api_key=SecretStr(api_key)', 'range': [1300, 1305], 'children': []}, {'type': 'Argument', 'name': 'title=title', 'range': [1308, 1310], 'children': []}, {'type': 'Argument', 'name': 'expires_at=expires_at', 'range': [1313, 1315], 'children': []}]}]}, {'type': 'Try', 'name': 'try', 'range': [1321, 1353], 'children': [{'type': 'Block', 'name': 'TryBody', 'range': [1324, 1332], 'children': [{'type': 'Call', 'name': 'creds_manager.create', 'range': [1324, 1331], 'children': [{'type': 'Argument', 'name': 'user_id', 'range': [1328, 1328], 'children': []}, {'type': 'Argument', 'name': 'new_credentials', 'range': [1330, 1330], 'children': []}]}]}, {'type': 'Except', 'name': 'except Exception as e', 'range': [1333, 1353], 'children': [{'type': 'Block', 'name': 'ExceptBody', 'range': [1339, 1352], 'children': [{'type': 'Raise', 'name': 'raise HTTPException', 'range': [1339, 1352], 'children': [{'type': 'Call', 'name': 'HTTPException', 'range': [1340, 1352], 'children': [{'type': 'Argument', 'name': 'status_code=500', 'range': [1343, 1345], 'children': []}, {'type': 'Argument', 'name': 'detail=f"Failed to store credentials: {str(e)}"', 'range': [1347, 1350], 'children': []}]}]}]}]}]}, {'type': 'Return', 'name': 'return new_credentials', 'range': [1354, 1355], 'children': []}]}]}]}
2025-01-08 10:28:44,188 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:45,922 - INFO - Step 4 result: {'type': 'Program', 'name': 'CredentialsMetaResponse', 'range': [392, 432], 'children': [{'type': 'ClassDecl', 'name': 'CredentialsMetaResponse', 'range': [392, 432], 'children': [{'type': 'Inheritance', 'name': 'BaseModel', 'range': [394, 396], 'children': []}, {'type': 'ClassBody', 'name': '', 'range': [397, 432], 'children': [{'type': 'FieldDecl', 'name': 'id', 'range': [399, 401], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [401, 401], 'children': []}]}, {'type': 'FieldDecl', 'name': 'provider', 'range': [403, 405], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [405, 405], 'children': []}]}, {'type': 'FieldDecl', 'name': 'type', 'range': [407, 409], 'children': [{'type': 'TypeAnnotation', 'name': 'CredentialsType', 'range': [409, 409], 'children': []}]}, {'type': 'FieldDecl', 'name': 'title', 'range': [411, 415], 'children': [{'type': 'TypeAnnotation', 'name': 'str | None', 'range': [413, 415], 'children': []}]}, {'type': 'FieldDecl', 'name': 'scopes', 'range': [417, 424], 'children': [{'type': 'TypeAnnotation', 'name': 'list[str] | None', 'range': [419, 424], 'children': []}]}, {'type': 'FieldDecl', 'name': 'username', 'range': [426, 430], 'children': [{'type': 'TypeAnnotation', 'name': 'str | None', 'range': [428, 430], 'children': []}]}]}]}]}
2025-01-08 10:28:45,922 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:28:47,437 - INFO - Step 4 result: {'type': 'Program', 'name': 'CredentialsDeletionResponse', 'range': [1357, 1391], 'children': [{'type': 'ClassDecl', 'name': 'CredentialsDeletionResponse', 'range': [1357, 1391], 'children': [{'type': 'PropertyDecl', 'name': 'deleted', 'range': [1364, 1371], 'children': [{'type': 'TypeAnnotation', 'name': 'Literal', 'range': [1366, 1369], 'children': []}, {'type': 'AssignmentExpression', 'name': '=', 'range': [1370, 1371], 'children': [{'type': 'Literal', 'name': 'True', 'range': [1371, 1371], 'children': []}]}]}, {'type': 'PropertyDecl', 'name': 'revoked', 'range': [1373, 1390], 'children': [{'type': 'TypeAnnotation', 'name': 'bool | None', 'range': [1375, 1377], 'children': []}, {'type': 'AssignmentExpression', 'name': '=', 'range': [1378, 1390], 'children': [{'type': 'CallExpression', 'name': 'Field', 'range': [1379, 1390], 'children': [{'type': 'Argument', 'name': 'description', 'range': [1382, 1388], 'children': [{'type': 'StringLiteral', 'name': '"Indicates whether the credentials were also revoked by their "\n"provider. `None`/`null` if not applicable, e.g. when deleting "\n"non-revocable credentials such as API keys."', 'range': [1384, 1388], 'children': []}]}]}]}]}]}]}
2025-01-08 10:28:47,438 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:28:49,297 - INFO - Step 5 result: {'type': 'Program', 'name': 'CredentialsDeletionNeedsConfirmationResponse', 'range': [1392, 1421], 'children': [{'type': 'ClassDecl', 'name': 'CredentialsDeletionNeedsConfirmationResponse', 'range': [1392, 1421], 'children': [{'type': 'PropertyDecl', 'name': 'deleted', 'range': [1399, 1406], 'children': [{'type': 'TypeAnnotation', 'name': 'Literal', 'range': [1401, 1404], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [1405, 1406], 'children': []}]}, {'type': 'PropertyDecl', 'name': 'need_confirmation', 'range': [1408, 1415], 'children': [{'type': 'TypeAnnotation', 'name': 'Literal', 'range': [1410, 1413], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [1414, 1415], 'children': []}]}, {'type': 'PropertyDecl', 'name': 'message', 'range': [1417, 1420], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1419, 1420], 'children': []}]}]}]}
2025-01-08 10:28:49,297 - INFO - Completed main AST analysis flow
2025-01-08 10:28:49,297 - INFO - Successfully processed chunk
2025-01-08 10:28:51,117 - INFO - Step 2 result: {'type': 'Program', 'name': '_get_provider_oauth_handler', 'range': [2207, 2360], 'children': [{'type': 'FunctionDeclaration', 'name': '_get_provider_oauth_handler', 'range': [2207, 2360], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [2209, 2218], 'children': [{'type': 'Parameter', 'name': 'req', 'range': [2211, 2213], 'children': []}, {'type': 'Parameter', 'name': 'provider_name', 'range': [2215, 2217], 'children': []}]}, {'type': 'ReturnType', 'name': 'return_type', 'range': [2220, 2222], 'children': []}, {'type': 'Block', 'name': 'body', 'range': [2224, 2360], 'children': [{'type': 'IfStatement', 'name': 'if_provider_not_in_handlers', 'range': [2225, 2248], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [2226, 2229], 'children': []}, {'type': 'Block', 'name': 'then', 'range': [2230, 2248], 'children': [{'type': 'RaiseStatement', 'name': 'raise_http_exception', 'range': [2232, 2247], 'children': [{'type': 'CallExpression', 'name': 'HTTPException', 'range': [2233, 2247], 'children': [{'type': 'ArgumentList', 'name': 'arguments', 'range': [2234, 2247], 'children': [{'type': 'Argument', 'name': 'status_code', 'range': [2236, 2238], 'children': []}, {'type': 'Argument', 'name': 'detail', 'range': [2241, 2244], 'children': []}]}]}]}]}]}, {'type': 'Assignment', 'name': 'client_id_assignment', 'range': [2250, 2261], 'children': [{'type': 'CallExpression', 'name': 'getattr', 'range': [2252, 2260], 'children': [{'type': 'ArgumentList', 'name': 'arguments', 'range': [2253, 2260], 'children': [{'type': 'Argument', 'name': 'settings.secrets', 'range': [2254, 2257], 'children': []}, {'type': 'Argument', 'name': 'f"{provider_name.value}_client_id"', 'range': [2258, 2259], 'children': []}]}]}]}, {'type': 'Assignment', 'name': 'client_secret_assignment', 'range': [2262, 2273], 'children': [{'type': 'CallExpression', 'name': 'getattr', 'range': [2264, 2272], 'children': [{'type': 'ArgumentList', 'name': 'arguments', 'range': [2265, 2272], 'children': [{'type': 'Argument', 'name': 'settings.secrets', 'range': [2266, 2269], 'children': []}, {'type': 'Argument', 'name': 'f"{provider_name.value}_client_secret"', 'range': [2270, 2271], 'children': []}]}]}]}, {'type': 'IfStatement', 'name': 'if_not_client_id_and_secret', 'range': [2274, 2303], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [2275, 2280], 'children': []}, {'type': 'Block', 'name': 'then', 'range': [2281, 2303], 'children': [{'type': 'RaiseStatement', 'name': 'raise_http_exception', 'range': [2283, 2302], 'children': [{'type': 'CallExpression', 'name': 'HTTPException', 'range': [2284, 2302], 'children': [{'type': 'ArgumentList', 'name': 'arguments', 'range': [2285, 2302], 'children': [{'type': 'Argument', 'name': 'status_code', 'range': [2287, 2289], 'children': []}, {'type': 'Argument', 'name': 'detail', 'range': [2292, 2297], 'children': []}]}]}]}]}]}, {'type': 'Assignment', 'name': 'handler_class_assignment', 'range': [2305, 2311], 'children': [{'type': 'SubscriptExpression', 'name': 'HANDLERS_BY_NAME[provider_name]', 'range': [2307, 2310], 'children': []}]}, {'type': 'Assignment', 'name': 'frontend_base_url_assignment', 'range': [2312, 2338], 'children': [{'type': 'ConditionalExpression', 'name': 'conditional_expression', 'range': [2314, 2337], 'children': [{'type': 'Condition', 'name': 'settings.config.frontend_base_url', 'range': [2316, 2321], 'children': []}, {'type': 'Condition', 'name': 'settings.config.platform_base_url', 'range': [2323, 2328], 'children': []}, {'type': 'Condition', 'name': 'str(req.base_url)', 'range': [2330, 2336], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return_handler_class', 'range': [2339, 2360], 'children': [{'type': 'CallExpression', 'name': 'handler_class', 'range': [2340, 2359], 'children': [{'type': 'ArgumentList', 'name': 'arguments', 'range': [2341, 2359], 'children': [{'type': 'Argument', 'name': 'client_id', 'range': [2343, 2345], 'children': []}, {'type': 'Argument', 'name': 'client_secret', 'range': [2348, 2350], 'children': []}, {'type': 'Argument', 'name': 'redirect_uri', 'range': [2353, 2356], 'children': []}]}]}]}]}]}]}
2025-01-08 10:28:51,117 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:51,782 - INFO - Step 3 result: {'type': 'Program', 'name': 'delete_credentials', 'range': [1422, 1644], 'children': [{'type': 'FunctionDeclaration', 'name': 'delete_credentials', 'range': [1422, 1644], 'children': [{'type': 'Decorator', 'name': '@router.delete', 'range': [1422, 1428], 'children': []}, {'type': 'FunctionSignature', 'name': 'delete_credentials', 'range': [1430, 1510], 'children': [{'type': 'Parameter', 'name': 'request', 'range': [1435, 1437], 'children': []}, {'type': 'Parameter', 'name': 'provider', 'range': [1440, 1454], 'children': []}, {'type': 'Parameter', 'name': 'cred_id', 'range': [1457, 1469], 'children': []}, {'type': 'Parameter', 'name': 'user_id', 'range': [1472, 1482], 'children': []}, {'type': 'Parameter', 'name': 'force', 'range': [1485, 1501], 'children': []}, {'type': 'ReturnType', 'name': 'CredentialsDeletionResponse | CredentialsDeletionNeedsConfirmationResponse', 'range': [1505, 1509], 'children': []}]}, {'type': 'FunctionBody', 'name': 'delete_credentials', 'range': [1511, 1644], 'children': [{'type': 'VariableDeclaration', 'name': 'creds', 'range': [1512, 1523], 'children': []}, {'type': 'IfStatement', 'name': 'if not creds', 'range': [1525, 1540], 'children': []}, {'type': 'IfStatement', 'name': 'if creds.provider != provider', 'range': [1542, 1563], 'children': []}, {'type': 'TryStatement', 'name': 'try', 'range': [1566, 1593], 'children': [{'type': 'AwaitExpression', 'name': 'await remove_all_webhooks_for_credentials', 'range': [1569, 1575], 'children': []}, {'type': 'CatchClause', 'name': 'except NeedConfirmation as e', 'range': [1577, 1593], 'children': []}]}, {'type': 'ExpressionStatement', 'name': 'creds_manager.delete', 'range': [1595, 1602], 'children': []}, {'type': 'VariableDeclaration', 'name': 'tokens_revoked', 'range': [1605, 1607], 'children': []}, {'type': 'IfStatement', 'name': 'if isinstance(creds, OAuth2Credentials)', 'range': [1609, 1635], 'children': []}, {'type': 'ReturnStatement', 'name': 'return CredentialsDeletionResponse', 'range': [1637, 1643], 'children': []}]}]}]}
2025-01-08 10:28:51,782 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:52,376 - INFO - Step 3 result: {'type': 'Program', 'name': 'list_credentials_by_provider', 'range': [939, 1069], 'children': [{'type': 'FunctionDeclaration', 'name': 'list_credentials_by_provider', 'range': [939, 1069], 'children': [{'type': 'Parameter', 'name': 'provider', 'range': [943, 957], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated', 'range': [945, 957], 'children': [{'type': 'Type', 'name': 'ProviderName', 'range': [948, 948], 'children': []}, {'type': 'Type', 'name': 'Path', 'range': [950, 955], 'children': [{'type': 'Argument', 'name': 'title', 'range': [952, 954], 'children': []}]}]}]}, {'type': 'Parameter', 'name': 'user_id', 'range': [960, 970], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated', 'range': [962, 970], 'children': [{'type': 'Type', 'name': 'str', 'range': [964, 964], 'children': []}, {'type': 'Dependency', 'name': 'Depends', 'range': [966, 969], 'children': [{'type': 'FunctionCall', 'name': 'get_user_id', 'range': [968, 968], 'children': []}]}]}]}, {'type': 'ReturnType', 'name': 'list', 'range': [976, 979], 'children': [{'type': 'Type', 'name': 'CredentialsMetaResponse', 'range': [978, 978], 'children': []}]}, {'type': 'FunctionBody', 'name': '', 'range': [982, 1068], 'children': [{'type': 'Assignment', 'name': 'credentials', 'range': [982, 993], 'children': [{'type': 'FunctionCall', 'name': 'get_creds_by_provider', 'range': [988, 993], 'children': [{'type': 'Argument', 'name': 'user_id', 'range': [990, 990], 'children': []}, {'type': 'Argument', 'name': 'provider', 'range': [992, 992], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [995, 1068], 'children': [{'type': 'ListComprehension', 'name': '', 'range': [996, 1068], 'children': [{'type': 'FunctionCall', 'name': 'CredentialsMetaResponse', 'range': [998, 1061], 'children': [{'type': 'Argument', 'name': 'id', 'range': [1001, 1006], 'children': []}, {'type': 'Argument', 'name': 'provider', 'range': [1008, 1013], 'children': []}, {'type': 'Argument', 'name': 'type', 'range': [1015, 1020], 'children': []}, {'type': 'Argument', 'name': 'title', 'range': [1022, 1027], 'children': []}, {'type': 'Argument', 'name': 'scopes', 'range': [1029, 1043], 'children': []}, {'type': 'Argument', 'name': 'username', 'range': [1045, 1059], 'children': []}]}, {'type': 'ForLoop', 'name': '', 'range': [1063, 1067], 'children': [{'type': 'Variable', 'name': 'cred', 'range': [1064, 1064], 'children': []}, {'type': 'Iterable', 'name': 'credentials', 'range': [1066, 1066], 'children': []}]}]}]}]}]}]}
2025-01-08 10:28:52,376 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:53,410 - INFO - Step 3 result: {'type': 'Program', 'name': 'webhook_ping', 'range': [1892, 2037], 'children': [{'type': 'Decorator', 'name': '@router.post', 'range': [1892, 1898], 'children': [{'type': 'Argument', 'name': '"/webhooks/{webhook_id}/ping"', 'range': [1897, 1897], 'children': []}]}, {'type': 'FunctionDef', 'name': 'webhook_ping', 'range': [1900, 2037], 'children': [{'type': 'Parameter', 'name': 'webhook_id', 'range': [1905, 1917], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated[str, Path]', 'range': [1907, 1917], 'children': [{'type': 'Argument', 'name': 'title="Our ID for the webhook"', 'range': [1913, 1915], 'children': []}]}]}, {'type': 'Parameter', 'name': 'user_id', 'range': [1920, 1930], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated[str, Depends]', 'range': [1922, 1930], 'children': [{'type': 'Argument', 'name': 'get_user_id', 'range': [1928, 1928], 'children': []}]}]}, {'type': 'Comment', 'name': '# require auth', 'range': [1932, 1934], 'children': []}, {'type': 'Assignment', 'name': 'webhook = await get_webhook(webhook_id)', 'range': [1939, 1945], 'children': []}, {'type': 'Assignment', 'name': 'webhook_manager = WEBHOOK_MANAGERS_BY_NAME[webhook.provider]()', 'range': [1947, 1956], 'children': []}, {'type': 'Assignment', 'name': 'credentials = (creds_manager.get(user_id, webhook.credentials_id) if webhook.credentials_id else None)', 'range': [1959, 1981], 'children': []}, {'type': 'Try', 'name': 'try', 'range': [1984, 2003], 'children': [{'type': 'Await', 'name': 'await webhook_manager.trigger_ping(webhook, credentials)', 'range': [1987, 1995], 'children': []}, {'type': 'Except', 'name': 'except NotImplementedError', 'range': [1997, 2003], 'children': [{'type': 'Return', 'name': 'return False', 'range': [2001, 2002], 'children': []}]}]}, {'type': 'If', 'name': 'if not await wait_for_webhook_event(webhook_id, event_type="ping", timeout=10)', 'range': [2005, 2020], 'children': [{'type': 'Raise', 'name': 'raise HTTPException(status_code=504, detail="Webhook ping timed out")', 'range': [2022, 2032], 'children': []}]}, {'type': 'Return', 'name': 'return True', 'range': [2035, 2036], 'children': []}]}]}
2025-01-08 10:28:53,411 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:55,000 - INFO - Step 4 result: {'nodes': [{'type': 'ImportDeclaration', 'name': '', 'range': [185, 190], 'children': [{'type': 'ImportFrom', 'name': '', 'range': [185, 188], 'children': [{'type': 'Module', 'name': 'utils', 'range': [188, 188], 'children': []}]}, {'type': 'ImportedItem', 'name': 'get_user_id', 'range': [190, 190], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'logger', 'range': [193, 200], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [194, 200], 'children': [{'type': 'CallExpression', 'name': 'getLogger', 'range': [195, 200], 'children': [{'type': 'MemberExpression', 'name': 'logging', 'range': [195, 196], 'children': []}, {'type': 'Arguments', 'name': '', 'range': [198, 200], 'children': [{'type': 'StringLiteral', 'name': '__name__', 'range': [199, 199], 'children': []}]}]}]}]}, {'type': 'VariableDeclaration', 'name': 'settings', 'range': [202, 206], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [203, 206], 'children': [{'type': 'NewExpression', 'name': 'Settings', 'range': [204, 206], 'children': [{'type': 'Arguments', 'name': '', 'range': [205, 206], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'router', 'range': [208, 212], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [209, 212], 'children': [{'type': 'NewExpression', 'name': 'APIRouter', 'range': [210, 212], 'children': [{'type': 'Arguments', 'name': '', 'range': [211, 212], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'creds_manager', 'range': [215, 219], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [216, 219], 'children': [{'type': 'NewExpression', 'name': 'IntegrationCredentialsManager', 'range': [217, 219], 'children': [{'type': 'Arguments', 'name': '', 'range': [218, 219], 'children': []}]}]}]}]}
2025-01-08 10:28:55,000 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:28:56,363 - INFO - Step 2 result: {'type': 'Program', 'name': '', 'range': [0, 170], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 2], 'children': [{'type': 'ImportSpecifier', 'name': 'logging', 'range': [1, 1], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [3, 11], 'children': [{'type': 'ImportSpecifier', 'name': 'typing', 'range': [4, 4], 'children': []}, {'type': 'ImportSpecifier', 'name': 'TYPE_CHECKING', 'range': [6, 6], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Annotated', 'range': [8, 8], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Literal', 'range': [10, 10], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [13, 29], 'children': [{'type': 'ImportSpecifier', 'name': 'fastapi', 'range': [14, 14], 'children': []}, {'type': 'ImportSpecifier', 'name': 'APIRouter', 'range': [16, 16], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Body', 'range': [18, 18], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Depends', 'range': [20, 20], 'children': []}, {'type': 'ImportSpecifier', 'name': 'HTTPException', 'range': [22, 22], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Path', 'range': [24, 24], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Query', 'range': [26, 26], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Request', 'range': [28, 28], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [30, 38], 'children': [{'type': 'ImportSpecifier', 'name': 'pydantic', 'range': [31, 31], 'children': []}, {'type': 'ImportSpecifier', 'name': 'BaseModel', 'range': [33, 33], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Field', 'range': [35, 35], 'children': []}, {'type': 'ImportSpecifier', 'name': 'SecretStr', 'range': [37, 37], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [40, 48], 'children': [{'type': 'ImportSpecifier', 'name': 'backend.data.graph', 'range': [41, 45], 'children': []}, {'type': 'ImportSpecifier', 'name': 'set_node_webhook', 'range': [47, 47], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [49, 74], 'children': [{'type': 'ImportSpecifier', 'name': 'backend.data.integrations', 'range': [50, 54], 'children': []}, {'type': 'ImportSpecifier', 'name': 'WebhookEvent', 'range': [58, 58], 'children': []}, {'type': 'ImportSpecifier', 'name': 'get_all_webhooks_by_creds', 'range': [61, 61], 'children': []}, {'type': 'ImportSpecifier', 'name': 'get_webhook', 'range': [64, 64], 'children': []}, {'type': 'ImportSpecifier', 'name': 'publish_webhook_event', 'range': [67, 67], 'children': []}, {'type': 'ImportSpecifier', 'name': 'wait_for_webhook_event', 'range': [70, 70], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [75, 97], 'children': [{'type': 'ImportSpecifier', 'name': 'backend.data.model', 'range': [76, 80], 'children': []}, {'type': 'ImportSpecifier', 'name': 'APIKeyCredentials', 'range': [84, 84], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Credentials', 'range': [87, 87], 'children': []}, {'type': 'ImportSpecifier', 'name': 'CredentialsType', 'range': [90, 90], 'children': []}, {'type': 'ImportSpecifier', 'name': 'OAuth2Credentials', 'range': [93, 93], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [98, 106], 'children': [{'type': 'ImportSpecifier', 'name': 'backend.executor.manager', 'range': [99, 103], 'children': []}, {'type': 'ImportSpecifier', 'name': 'ExecutionManager', 'range': [105, 105], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [107, 115], 'children': [{'type': 'ImportSpecifier', 'name': 'backend.integrations.creds_manager', 'range': [108, 112], 'children': []}, {'type': 'ImportSpecifier', 'name': 'IntegrationCredentialsManager', 'range': [114, 114], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [116, 124], 'children': [{'type': 'ImportSpecifier', 'name': 'backend.integrations.oauth', 'range': [117, 121], 'children': []}, {'type': 'ImportSpecifier', 'name': 'HANDLERS_BY_NAME', 'range': [123, 123], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [125, 133], 'children': [{'type': 'ImportSpecifier', 'name': 'backend.integrations.providers', 'range': [126, 130], 'children': []}, {'type': 'ImportSpecifier', 'name': 'ProviderName', 'range': [132, 132], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [134, 142], 'children': [{'type': 'ImportSpecifier', 'name': 'backend.integrations.webhooks', 'range': [135, 139], 'children': []}, {'type': 'ImportSpecifier', 'name': 'WEBHOOK_MANAGERS_BY_NAME', 'range': [141, 141], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [143, 151], 'children': [{'type': 'ImportSpecifier', 'name': 'backend.util.exceptions', 'range': [144, 148], 'children': []}, {'type': 'ImportSpecifier', 'name': 'NeedConfirmation', 'range': [150, 150], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [152, 160], 'children': [{'type': 'ImportSpecifier', 'name': 'backend.util.service', 'range': [153, 157], 'children': []}, {'type': 'ImportSpecifier', 'name': 'get_service_client', 'range': [159, 159], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [161, 169], 'children': [{'type': 'ImportSpecifier', 'name': 'backend.util.settings', 'range': [162, 166], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Settings', 'range': [168, 168], 'children': []}]}]}
2025-01-08 10:28:56,363 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:57,077 - INFO - Step 3 result: {'type': 'Program', 'name': 'callback', 'range': [433, 810], 'children': [{'type': 'FunctionDeclaration', 'name': 'callback', 'range': [441, 810], 'children': [{'type': 'Decorator', 'name': '@router.post', 'range': [433, 440], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [443, 510], 'children': [{'type': 'Parameter', 'name': 'provider', 'range': [445, 459], 'children': []}, {'type': 'Parameter', 'name': 'code', 'range': [462, 474], 'children': []}, {'type': 'Parameter', 'name': 'state_token', 'range': [477, 489], 'children': []}, {'type': 'Parameter', 'name': 'user_id', 'range': [492, 502], 'children': []}, {'type': 'Parameter', 'name': 'request', 'range': [505, 508], 'children': []}]}, {'type': 'ReturnType', 'name': 'CredentialsMetaResponse', 'range': [511, 514], 'children': []}, {'type': 'Block', 'name': 'function_body', 'range': [515, 810], 'children': [{'type': 'ExpressionStatement', 'name': 'logger.debug', 'range': [516, 523], 'children': []}, {'type': 'Assignment', 'name': 'handler', 'range': [524, 532], 'children': []}, {'type': 'IfStatement', 'name': 'if_not_creds_manager.store.verify_state_token', 'range': [540, 575], 'children': [{'type': 'Block', 'name': 'if_body', 'range': [555, 575], 'children': [{'type': 'ExpressionStatement', 'name': 'logger.warning', 'range': [556, 563], 'children': []}, {'type': 'ThrowStatement', 'name': 'raise_HTTPException', 'range': [564, 575], 'children': []}]}]}, {'type': 'TryStatement', 'name': 'try', 'range': [577, 723], 'children': [{'type': 'Block', 'name': 'try_body', 'range': [579, 694], 'children': [{'type': 'Assignment', 'name': 'scopes', 'range': [580, 596], 'children': []}, {'type': 'ExpressionStatement', 'name': 'logger.debug', 'range': [597, 604], 'children': []}, {'type': 'Assignment', 'name': 'scopes', 'range': [606, 614], 'children': []}, {'type': 'Assignment', 'name': 'credentials', 'range': [616, 626], 'children': []}, {'type': 'ExpressionStatement', 'name': 'logger.debug', 'range': [627, 634], 'children': []}, {'type': 'IfStatement', 'name': 'if_not_set(scopes).issubset(set(credentials.scopes))', 'range': [649, 694], 'children': [{'type': 'Block', 'name': 'if_body', 'range': [666, 694], 'children': [{'type': 'ExpressionStatement', 'name': 'logger.warning', 'range': [681, 693], 'children': []}]}]}]}, {'type': 'CatchClause', 'name': 'except_Exception_as_e', 'range': [695, 723], 'children': [{'type': 'Block', 'name': 'catch_body', 'range': [700, 723], 'children': [{'type': 'ExpressionStatement', 'name': 'logger.error', 'range': [701, 708], 'children': []}, {'type': 'ThrowStatement', 'name': 'raise_HTTPException', 'range': [709, 723], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': 'creds_manager.create', 'range': [740, 748], 'children': []}, {'type': 'ExpressionStatement', 'name': 'logger.debug', 'range': [750, 762], 'children': []}, {'type': 'ReturnStatement', 'name': 'return_CredentialsMetaResponse', 'range': [763, 810], 'children': []}]}]}]}
2025-01-08 10:28:57,077 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:57,515 - INFO - Step 5 result: {'type': 'Program', 'name': 'CredentialsMetaResponse', 'range': [392, 432], 'children': [{'type': 'ClassDecl', 'name': 'CredentialsMetaResponse', 'range': [392, 432], 'children': [{'type': 'Inheritance', 'name': 'BaseModel', 'range': [394, 396], 'children': []}, {'type': 'ClassBody', 'name': '', 'range': [397, 432], 'children': [{'type': 'FieldDecl', 'name': 'id', 'range': [399, 401], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [401, 401], 'children': []}]}, {'type': 'FieldDecl', 'name': 'provider', 'range': [403, 405], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [405, 405], 'children': []}]}, {'type': 'FieldDecl', 'name': 'type', 'range': [407, 409], 'children': [{'type': 'TypeAnnotation', 'name': 'CredentialsType', 'range': [409, 409], 'children': []}]}, {'type': 'FieldDecl', 'name': 'title', 'range': [411, 415], 'children': [{'type': 'TypeAnnotation', 'name': 'str | None', 'range': [413, 415], 'children': []}]}, {'type': 'FieldDecl', 'name': 'scopes', 'range': [417, 424], 'children': [{'type': 'TypeAnnotation', 'name': 'list[str] | None', 'range': [419, 424], 'children': []}]}, {'type': 'FieldDecl', 'name': 'username', 'range': [426, 430], 'children': [{'type': 'TypeAnnotation', 'name': 'str | None', 'range': [428, 430], 'children': []}]}]}]}]}
2025-01-08 10:28:57,515 - INFO - Completed main AST analysis flow
2025-01-08 10:28:57,515 - INFO - Successfully processed chunk
2025-01-08 10:28:57,871 - INFO - Step 5 result: {'type': 'Program', 'name': 'CredentialsDeletionResponse', 'range': [1357, 1391], 'children': [{'type': 'ClassDecl', 'name': 'CredentialsDeletionResponse', 'range': [1357, 1391], 'children': [{'type': 'PropertyDecl', 'name': 'deleted', 'range': [1364, 1371], 'children': [{'type': 'TypeAnnotation', 'name': 'Literal', 'range': [1366, 1369], 'children': []}, {'type': 'AssignmentExpression', 'name': '=', 'range': [1370, 1371], 'children': [{'type': 'Literal', 'name': 'True', 'range': [1371, 1371], 'children': []}]}]}, {'type': 'PropertyDecl', 'name': 'revoked', 'range': [1373, 1390], 'children': [{'type': 'TypeAnnotation', 'name': 'bool | None', 'range': [1375, 1377], 'children': []}, {'type': 'AssignmentExpression', 'name': '=', 'range': [1378, 1390], 'children': [{'type': 'CallExpression', 'name': 'Field', 'range': [1379, 1390], 'children': [{'type': 'Argument', 'name': 'description', 'range': [1382, 1388], 'children': [{'type': 'StringLiteral', 'name': '"Indicates whether the credentials were also revoked by their "\n"provider. `None`/`null` if not applicable, e.g. when deleting "\n"non-revocable credentials such as API keys."', 'range': [1384, 1388], 'children': []}]}]}]}]}]}]}
2025-01-08 10:28:57,871 - INFO - Completed main AST analysis flow
2025-01-08 10:28:57,871 - INFO - Successfully processed chunk
2025-01-08 10:29:01,610 - INFO - Step 3 result: {'type': 'Program', 'name': 'get_credential', 'range': [1078, 1186], 'children': [{'type': 'FunctionDeclaration', 'name': 'get_credential', 'range': [1078, 1186], 'children': [{'type': 'FunctionSignature', 'name': 'get_credential', 'range': [1078, 1132], 'children': [{'type': 'Parameter', 'name': 'provider', 'range': [1082, 1096], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated', 'range': [1084, 1096], 'children': [{'type': 'Type', 'name': 'ProviderName', 'range': [1087, 1087], 'children': []}, {'type': 'Type', 'name': 'Path', 'range': [1089, 1094], 'children': []}]}]}, {'type': 'Parameter', 'name': 'cred_id', 'range': [1099, 1111], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated', 'range': [1101, 1111], 'children': [{'type': 'Type', 'name': 'str', 'range': [1103, 1103], 'children': []}, {'type': 'Type', 'name': 'Path', 'range': [1105, 1110], 'children': []}]}]}, {'type': 'Parameter', 'name': 'user_id', 'range': [1114, 1124], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated', 'range': [1116, 1124], 'children': [{'type': 'Type', 'name': 'str', 'range': [1118, 1118], 'children': []}, {'type': 'Type', 'name': 'Depends', 'range': [1120, 1123], 'children': []}]}]}, {'type': 'ReturnType', 'name': 'Credentials', 'range': [1130, 1130], 'children': []}]}, {'type': 'FunctionBody', 'name': 'get_credential', 'range': [1133, 1186], 'children': [{'type': 'VariableDeclaration', 'name': 'credential', 'range': [1133, 1142], 'children': [{'type': 'Assignment', 'name': '=', 'range': [1134, 1134], 'children': []}, {'type': 'FunctionCall', 'name': 'creds_manager.get', 'range': [1135, 1142], 'children': [{'type': 'Argument', 'name': 'user_id', 'range': [1139, 1139], 'children': []}, {'type': 'Argument', 'name': 'cred_id', 'range': [1141, 1141], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if', 'range': [1144, 1159], 'children': [{'type': 'Condition', 'name': 'not credential', 'range': [1145, 1146], 'children': []}, {'type': 'Block', 'name': '', 'range': [1147, 1159], 'children': [{'type': 'RaiseStatement', 'name': 'raise', 'range': [1149, 1159], 'children': [{'type': 'FunctionCall', 'name': 'HTTPException', 'range': [1150, 1159], 'children': [{'type': 'Argument', 'name': 'status_code', 'range': [1152, 1154], 'children': []}, {'type': 'Argument', 'name': 'detail', 'range': [1156, 1158], 'children': []}]}]}]}]}, {'type': 'IfStatement', 'name': 'if', 'range': [1161, 1182], 'children': [{'type': 'Condition', 'name': 'credential.provider != provider', 'range': [1162, 1167], 'children': []}, {'type': 'Block', 'name': '', 'range': [1168, 1182], 'children': [{'type': 'RaiseStatement', 'name': 'raise', 'range': [1170, 1182], 'children': [{'type': 'FunctionCall', 'name': 'HTTPException', 'range': [1171, 1182], 'children': [{'type': 'Argument', 'name': 'status_code', 'range': [1174, 1176], 'children': []}, {'type': 'Argument', 'name': 'detail', 'range': [1178, 1180], 'children': []}]}]}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [1184, 1185], 'children': []}]}]}]}
2025-01-08 10:29:01,610 - INFO - Starting Step 4: AST normalization
2025-01-08 10:29:03,195 - INFO - Step 3 result: {'type': 'Program', 'name': '', 'range': [811, 930], 'children': [{'type': 'FunctionDeclaration', 'name': 'list_credentials', 'range': [819, 930], 'children': [{'type': 'Parameter', 'name': 'user_id', 'range': [823, 833], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated[str, Depends(get_user_id)]', 'range': [825, 833], 'children': []}]}, {'type': 'ReturnType', 'name': 'list[CredentialsMetaResponse]', 'range': [837, 842], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [843, 930], 'children': [{'type': 'VariableDeclaration', 'name': 'credentials', 'range': [845, 854], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [846, 854], 'children': [{'type': 'CallExpression', 'name': 'creds_manager.store.get_all_creds', 'range': [847, 854], 'children': [{'type': 'Identifier', 'name': 'user_id', 'range': [853, 854], 'children': []}]}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [856, 929], 'children': [{'type': 'ArrayExpression', 'name': '', 'range': [857, 929], 'children': [{'type': 'ObjectExpression', 'name': 'CredentialsMetaResponse', 'range': [859, 922], 'children': [{'type': 'Property', 'name': 'id', 'range': [862, 867], 'children': [{'type': 'Identifier', 'name': 'cred.id', 'range': [864, 867], 'children': []}]}, {'type': 'Property', 'name': 'provider', 'range': [869, 874], 'children': [{'type': 'Identifier', 'name': 'cred.provider', 'range': [871, 874], 'children': []}]}, {'type': 'Property', 'name': 'type', 'range': [876, 881], 'children': [{'type': 'Identifier', 'name': 'cred.type', 'range': [878, 881], 'children': []}]}, {'type': 'Property', 'name': 'title', 'range': [883, 888], 'children': [{'type': 'Identifier', 'name': 'cred.title', 'range': [885, 888], 'children': []}]}, {'type': 'Property', 'name': 'scopes', 'range': [890, 904], 'children': [{'type': 'ConditionalExpression', 'name': 'if isinstance(cred, OAuth2Credentials) else None', 'range': [895, 904], 'children': [{'type': 'CallExpression', 'name': 'isinstance', 'range': [896, 901], 'children': [{'type': 'Identifier', 'name': 'cred', 'range': [898, 899], 'children': []}, {'type': 'Identifier', 'name': 'OAuth2Credentials', 'range': [900, 901], 'children': []}]}, {'type': 'Identifier', 'name': 'None', 'range': [903, 904], 'children': []}]}]}, {'type': 'Property', 'name': 'username', 'range': [906, 920], 'children': [{'type': 'ConditionalExpression', 'name': 'if isinstance(cred, OAuth2Credentials) else None', 'range': [911, 920], 'children': [{'type': 'CallExpression', 'name': 'isinstance', 'range': [912, 917], 'children': [{'type': 'Identifier', 'name': 'cred', 'range': [914, 915], 'children': []}, {'type': 'Identifier', 'name': 'OAuth2Credentials', 'range': [916, 917], 'children': []}]}, {'type': 'Identifier', 'name': 'None', 'range': [919, 920], 'children': []}]}]}]}]}]}]}]}]}
2025-01-08 10:29:03,195 - INFO - Starting Step 4: AST normalization
2025-01-08 10:29:07,063 - INFO - Step 4 result: {'type': 'Program', 'name': 'delete_credentials', 'range': [1422, 1644], 'children': [{'type': 'FunctionDecl', 'name': 'delete_credentials', 'range': [1422, 1644], 'children': [{'type': 'Decorator', 'name': '@router.delete', 'range': [1422, 1428], 'children': []}, {'type': 'FunctionSignature', 'name': 'delete_credentials', 'range': [1430, 1510], 'children': [{'type': 'Parameter', 'name': 'request', 'range': [1435, 1437], 'children': []}, {'type': 'Parameter', 'name': 'provider', 'range': [1440, 1454], 'children': []}, {'type': 'Parameter', 'name': 'cred_id', 'range': [1457, 1469], 'children': []}, {'type': 'Parameter', 'name': 'user_id', 'range': [1472, 1482], 'children': []}, {'type': 'Parameter', 'name': 'force', 'range': [1485, 1501], 'children': []}, {'type': 'ReturnType', 'name': 'CredentialsDeletionResponse | CredentialsDeletionNeedsConfirmationResponse', 'range': [1505, 1509], 'children': []}]}, {'type': 'FunctionBody', 'name': 'delete_credentials', 'range': [1511, 1644], 'children': [{'type': 'VariableDecl', 'name': 'creds', 'range': [1512, 1523], 'children': []}, {'type': 'IfStatement', 'name': 'if not creds', 'range': [1525, 1540], 'children': []}, {'type': 'IfStatement', 'name': 'if creds.provider != provider', 'range': [1542, 1563], 'children': []}, {'type': 'TryStatement', 'name': 'try', 'range': [1566, 1593], 'children': [{'type': 'AwaitExpression', 'name': 'await remove_all_webhooks_for_credentials', 'range': [1569, 1575], 'children': []}, {'type': 'CatchClause', 'name': 'except NeedConfirmation as e', 'range': [1577, 1593], 'children': []}]}, {'type': 'ExpressionStatement', 'name': 'creds_manager.delete', 'range': [1595, 1602], 'children': []}, {'type': 'VariableDecl', 'name': 'tokens_revoked', 'range': [1605, 1607], 'children': []}, {'type': 'IfStatement', 'name': 'if isinstance(creds, OAuth2Credentials)', 'range': [1609, 1635], 'children': []}, {'type': 'ReturnStatement', 'name': 'return CredentialsDeletionResponse', 'range': [1637, 1643], 'children': []}]}]}]}
2025-01-08 10:29:07,064 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:29:10,208 - INFO - Step 3 result: {'type': 'Program', 'name': 'create_api_key_credentials', 'range': [1187, 1356], 'children': [{'type': 'Decorator', 'name': '@router.post', 'range': [1187, 1197], 'children': [{'type': 'Argument', 'name': '"/{provider}/credentials"', 'range': [1192, 1192], 'children': []}, {'type': 'Argument', 'name': 'status_code=201', 'range': [1194, 1196], 'children': []}]}, {'type': 'FunctionDef', 'name': 'create_api_key_credentials', 'range': [1199, 1356], 'children': [{'type': 'Parameter', 'name': 'user_id', 'range': [1203, 1213], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated[str, Depends(get_user_id)]', 'range': [1205, 1213], 'children': []}]}, {'type': 'Parameter', 'name': 'provider', 'range': [1216, 1230], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated[ProviderName, Path(title="The provider to create credentials for")]', 'range': [1218, 1230], 'children': []}]}, {'type': 'Parameter', 'name': 'api_key', 'range': [1233, 1245], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated[str, Body(title="The API key to store")]', 'range': [1235, 1245], 'children': []}]}, {'type': 'Parameter', 'name': 'title', 'range': [1248, 1260], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated[str, Body(title="Optional title for the credentials")]', 'range': [1250, 1260], 'children': []}]}, {'type': 'Parameter', 'name': 'expires_at', 'range': [1263, 1281], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated[int | None, Body(title="Unix timestamp when the key expires")]', 'range': [1265, 1278], 'children': []}]}, {'type': 'ReturnType', 'name': 'APIKeyCredentials', 'range': [1287, 1287], 'children': []}, {'type': 'Block', 'name': 'FunctionBody', 'range': [1290, 1356], 'children': [{'type': 'Assignment', 'name': 'new_credentials = APIKeyCredentials', 'range': [1290, 1318], 'children': [{'type': 'Call', 'name': 'APIKeyCredentials', 'range': [1292, 1318], 'children': [{'type': 'Argument', 'name': 'provider=provider', 'range': [1295, 1297], 'children': []}, {'type': 'Argument', 'name': 'api_key=SecretStr(api_key)', 'range': [1300, 1305], 'children': []}, {'type': 'Argument', 'name': 'title=title', 'range': [1308, 1310], 'children': []}, {'type': 'Argument', 'name': 'expires_at=expires_at', 'range': [1313, 1315], 'children': []}]}]}, {'type': 'Try', 'name': 'try', 'range': [1321, 1353], 'children': [{'type': 'Block', 'name': 'TryBody', 'range': [1324, 1332], 'children': [{'type': 'Call', 'name': 'creds_manager.create', 'range': [1324, 1331], 'children': [{'type': 'Argument', 'name': 'user_id', 'range': [1328, 1328], 'children': []}, {'type': 'Argument', 'name': 'new_credentials', 'range': [1330, 1330], 'children': []}]}]}, {'type': 'Except', 'name': 'except Exception as e', 'range': [1333, 1353], 'children': [{'type': 'Block', 'name': 'ExceptBody', 'range': [1339, 1352], 'children': [{'type': 'Raise', 'name': 'raise HTTPException', 'range': [1339, 1352], 'children': [{'type': 'Call', 'name': 'HTTPException', 'range': [1340, 1352], 'children': [{'type': 'Argument', 'name': 'status_code=500', 'range': [1343, 1345], 'children': []}, {'type': 'Argument', 'name': 'detail=f"Failed to store credentials: {str(e)}"', 'range': [1347, 1350], 'children': []}]}]}]}]}]}, {'type': 'Return', 'name': 'return new_credentials', 'range': [1354, 1355], 'children': []}]}]}]}
2025-01-08 10:29:10,209 - INFO - Starting Step 4: AST normalization
2025-01-08 10:29:10,611 - INFO - Step 5 result: {'nodes': [{'type': 'Program', 'name': 'MainProgram', 'range': [185, 219], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [185, 190], 'children': [{'type': 'ImportFrom', 'name': '', 'range': [185, 188], 'children': [{'type': 'Module', 'name': 'utils', 'range': [188, 188], 'children': []}]}, {'type': 'ImportedItem', 'name': 'get_user_id', 'range': [190, 190], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'logger', 'range': [193, 200], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [194, 200], 'children': [{'type': 'CallExpression', 'name': 'getLogger', 'range': [195, 200], 'children': [{'type': 'MemberExpression', 'name': 'logging', 'range': [195, 196], 'children': []}, {'type': 'Arguments', 'name': '', 'range': [198, 200], 'children': [{'type': 'StringLiteral', 'name': '__name__', 'range': [199, 199], 'children': []}]}]}]}]}, {'type': 'VariableDeclaration', 'name': 'settings', 'range': [202, 206], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [203, 206], 'children': [{'type': 'NewExpression', 'name': 'Settings', 'range': [204, 206], 'children': [{'type': 'Arguments', 'name': '', 'range': [205, 206], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'router', 'range': [208, 212], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [209, 212], 'children': [{'type': 'NewExpression', 'name': 'APIRouter', 'range': [210, 212], 'children': [{'type': 'Arguments', 'name': '', 'range': [211, 212], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'creds_manager', 'range': [215, 219], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [216, 219], 'children': [{'type': 'NewExpression', 'name': 'IntegrationCredentialsManager', 'range': [217, 219], 'children': [{'type': 'Arguments', 'name': '', 'range': [218, 219], 'children': []}]}]}]}]}]}
2025-01-08 10:29:10,611 - INFO - Completed main AST analysis flow
2025-01-08 10:29:10,612 - INFO - Successfully processed chunk
2025-01-08 10:29:10,904 - INFO - Step 4 result: {'type': 'Program', 'name': 'webhook_ping', 'range': [1892, 2037], 'children': [{'type': 'Decorator', 'name': '@router.post', 'range': [1892, 1898], 'children': [{'type': 'Argument', 'name': '"/webhooks/{webhook_id}/ping"', 'range': [1897, 1897], 'children': []}]}, {'type': 'FunctionDecl', 'name': 'webhook_ping', 'range': [1900, 2037], 'children': [{'type': 'Parameter', 'name': 'webhook_id', 'range': [1905, 1917], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated[str, Path]', 'range': [1907, 1917], 'children': [{'type': 'Argument', 'name': 'title="Our ID for the webhook"', 'range': [1913, 1915], 'children': []}]}]}, {'type': 'Parameter', 'name': 'user_id', 'range': [1920, 1930], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated[str, Depends]', 'range': [1922, 1930], 'children': [{'type': 'Argument', 'name': 'get_user_id', 'range': [1928, 1928], 'children': []}]}]}, {'type': 'Comment', 'name': '# require auth', 'range': [1932, 1934], 'children': []}, {'type': 'Assignment', 'name': 'webhook = await get_webhook(webhook_id)', 'range': [1939, 1945], 'children': []}, {'type': 'Assignment', 'name': 'webhook_manager = WEBHOOK_MANAGERS_BY_NAME[webhook.provider]()', 'range': [1947, 1956], 'children': []}, {'type': 'Assignment', 'name': 'credentials = (creds_manager.get(user_id, webhook.credentials_id) if webhook.credentials_id else None)', 'range': [1959, 1981], 'children': []}, {'type': 'TryStatement', 'name': 'try', 'range': [1984, 2003], 'children': [{'type': 'AwaitExpression', 'name': 'await webhook_manager.trigger_ping(webhook, credentials)', 'range': [1987, 1995], 'children': []}, {'type': 'CatchClause', 'name': 'except NotImplementedError', 'range': [1997, 2003], 'children': [{'type': 'ReturnStatement', 'name': 'return False', 'range': [2001, 2002], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if not await wait_for_webhook_event(webhook_id, event_type="ping", timeout=10)', 'range': [2005, 2020], 'children': [{'type': 'ThrowStatement', 'name': 'raise HTTPException(status_code=504, detail="Webhook ping timed out")', 'range': [2022, 2032], 'children': []}]}, {'type': 'ReturnStatement', 'name': 'return True', 'range': [2035, 2036], 'children': []}]}]}
2025-01-08 10:29:10,905 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:29:11,900 - INFO - Step 3 result: {'type': 'Program', 'name': 'login', 'range': [239, 391], 'children': [{'type': 'FunctionDeclaration', 'name': 'login', 'range': [247, 391], 'children': [{'type': 'Parameter', 'name': 'provider', 'range': [251, 265], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated', 'range': [253, 265], 'children': [{'type': 'Type', 'name': 'ProviderName', 'range': [256, 256], 'children': []}, {'type': 'Type', 'name': 'Path', 'range': [258, 263], 'children': [{'type': 'Argument', 'name': 'title', 'range': [260, 262], 'children': []}]}]}]}, {'type': 'Parameter', 'name': 'user_id', 'range': [268, 278], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated', 'range': [270, 278], 'children': [{'type': 'Type', 'name': 'str', 'range': [272, 272], 'children': []}, {'type': 'Type', 'name': 'Depends', 'range': [274, 277], 'children': [{'type': 'Argument', 'name': 'get_user_id', 'range': [276, 276], 'children': []}]}]}]}, {'type': 'Parameter', 'name': 'request', 'range': [281, 284], 'children': [{'type': 'Type', 'name': 'Request', 'range': [283, 283], 'children': []}]}, {'type': 'Parameter', 'name': 'scopes', 'range': [286, 302], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated', 'range': [288, 302], 'children': [{'type': 'Type', 'name': 'str', 'range': [291, 291], 'children': []}, {'type': 'Type', 'name': 'Query', 'range': [293, 298], 'children': [{'type': 'Argument', 'name': 'title', 'range': [295, 297], 'children': []}]}]}]}, {'type': 'ReturnType', 'name': 'LoginResponse', 'range': [308, 309], 'children': []}, {'type': 'FunctionBody', 'name': '', 'range': [310, 391], 'children': [{'type': 'VariableDeclaration', 'name': 'handler', 'range': [311, 318], 'children': [{'type': 'CallExpression', 'name': '_get_provider_oauth_handler', 'range': [313, 318], 'children': [{'type': 'Argument', 'name': 'request', 'range': [315, 315], 'children': []}, {'type': 'Argument', 'name': 'provider', 'range': [317, 317], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'requested_scopes', 'range': [321, 334], 'children': [{'type': 'CallExpression', 'name': 'split', 'range': [325, 328], 'children': [{'type': 'Argument', 'name': '","', 'range': [327, 327], 'children': []}]}, {'type': 'ConditionalExpression', 'name': '', 'range': [329, 334], 'children': [{'type': 'Test', 'name': 'scopes', 'range': [330, 330], 'children': []}, {'type': 'Consequent', 'name': '', 'range': [332, 333], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'state_token', 'range': [350, 365], 'children': [{'type': 'CallExpression', 'name': 'store_state_token', 'range': [356, 365], 'children': [{'type': 'Argument', 'name': 'user_id', 'range': [359, 359], 'children': []}, {'type': 'Argument', 'name': 'provider', 'range': [361, 361], 'children': []}, {'type': 'Argument', 'name': 'requested_scopes', 'range': [363, 363], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'login_url', 'range': [368, 377], 'children': [{'type': 'CallExpression', 'name': 'get_login_url', 'range': [372, 377], 'children': [{'type': 'Argument', 'name': 'requested_scopes', 'range': [374, 374], 'children': []}, {'type': 'Argument', 'name': 'state_token', 'range': [376, 376], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [380, 391], 'children': [{'type': 'CallExpression', 'name': 'LoginResponse', 'range': [382, 390], 'children': [{'type': 'Argument', 'name': 'login_url', 'range': [384, 385], 'children': []}, {'type': 'Argument', 'name': 'state_token', 'range': [387, 389], 'children': []}]}]}]}]}]}
2025-01-08 10:29:11,901 - INFO - Starting Step 4: AST normalization
2025-01-08 10:29:12,528 - INFO - Step 2 result: {'type': 'Program', 'name': 'remove_all_webhooks_for_credentials', 'range': [2038, 2206], 'children': [{'type': 'FunctionDeclaration', 'name': 'remove_all_webhooks_for_credentials', 'range': [2038, 2206], 'children': [{'type': 'AsyncKeyword', 'name': 'async', 'range': [2038, 2042], 'children': []}, {'type': 'DefKeyword', 'name': 'def', 'range': [2039, 2042], 'children': []}, {'type': 'FunctionName', 'name': 'remove_all_webhooks_for_credentials', 'range': [2040, 2072], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [2041, 2053], 'children': [{'type': 'Parameter', 'name': 'credentials', 'range': [2043, 2045], 'children': []}, {'type': 'TypeAnnotation', 'name': 'Credentials', 'range': [2045, 2046], 'children': []}, {'type': 'Parameter', 'name': 'force', 'range': [2047, 2049], 'children': []}, {'type': 'TypeAnnotation', 'name': 'bool', 'range': [2049, 2050], 'children': []}, {'type': 'DefaultValue', 'name': 'False', 'range': [2051, 2052], 'children': []}]}, {'type': 'ReturnType', 'name': 'None', 'range': [2054, 2056], 'children': []}, {'type': 'FunctionBody', 'name': 'body', 'range': [2057, 2206], 'children': [{'type': 'Docstring', 'name': 'docstring', 'range': [2059, 2061], 'children': []}, {'type': 'Assignment', 'name': 'webhooks', 'range': [2063, 2072], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [2065, 2071], 'children': [{'type': 'FunctionCall', 'name': 'get_all_webhooks_by_creds', 'range': [2066, 2071], 'children': [{'type': 'Argument', 'name': 'credentials.id', 'range': [2068, 2070], 'children': []}]}]}]}, {'type': 'IfStatement', 'name': 'if', 'range': [2073, 2103], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [2074, 2080], 'children': [{'type': 'MemberExpression', 'name': 'credentials.provider', 'range': [2075, 2076], 'children': []}, {'type': 'NotInKeyword', 'name': 'not in', 'range': [2077, 2079], 'children': []}, {'type': 'Identifier', 'name': 'WEBHOOK_MANAGERS_BY_NAME', 'range': [2079, 2080], 'children': []}]}, {'type': 'IfBody', 'name': 'body', 'range': [2081, 2103], 'children': [{'type': 'IfStatement', 'name': 'if', 'range': [2082, 2103], 'children': [{'type': 'Condition', 'name': 'webhooks', 'range': [2083, 2084], 'children': []}, {'type': 'IfBody', 'name': 'body', 'range': [2085, 2103], 'children': [{'type': 'ExpressionStatement', 'name': 'logger.error', 'range': [2086, 2100], 'children': [{'type': 'MemberExpression', 'name': 'logger.error', 'range': [2087, 2088], 'children': []}, {'type': 'Arguments', 'name': 'arguments', 'range': [2089, 2100], 'children': [{'type': 'StringLiteral', 'name': 'f-string', 'range': [2091, 2092], 'children': []}, {'type': 'StringLiteral', 'name': 'f-string', 'range': [2094, 2095], 'children': []}, {'type': 'StringLiteral', 'name': 'f-string', 'range': [2097, 2098], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [2102, 2103], 'children': []}]}]}]}]}, {'type': 'IfStatement', 'name': 'if', 'range': [2104, 2127], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [2105, 2118], 'children': [{'type': 'FunctionCall', 'name': 'any', 'range': [2106, 2114], 'children': [{'type': 'GeneratorExpression', 'name': 'generator', 'range': [2107, 2113], 'children': [{'type': 'MemberExpression', 'name': 'w.attached_nodes', 'range': [2108, 2109], 'children': []}, {'type': 'ForStatement', 'name': 'for', 'range': [2110, 2113], 'children': [{'type': 'VariableDeclaration', 'name': 'w', 'range': [2111, 2112], 'children': []}, {'type': 'InKeyword', 'name': 'in', 'range': [2112, 2113], 'children': []}, {'type': 'Identifier', 'name': 'webhooks', 'range': [2113, 2114], 'children': []}]}]}]}, {'type': 'AndKeyword', 'name': 'and', 'range': [2115, 2116], 'children': []}, {'type': 'NotKeyword', 'name': 'not', 'range': [2117, 2118], 'children': []}, {'type': 'Identifier', 'name': 'force', 'range': [2118, 2119], 'children': []}]}, {'type': 'IfBody', 'name': 'body', 'range': [2119, 2127], 'children': [{'type': 'RaiseStatement', 'name': 'raise', 'range': [2120, 2126], 'children': [{'type': 'Identifier', 'name': 'NeedConfirmation', 'range': [2121, 2122], 'children': []}, {'type': 'Arguments', 'name': 'arguments', 'range': [2122, 2126], 'children': [{'type': 'StringLiteral', 'name': 'string', 'range': [2124, 2125], 'children': []}]}]}]}]}, {'type': 'ForStatement', 'name': 'for', 'range': [2128, 2160], 'children': [{'type': 'VariableDeclaration', 'name': 'webhook', 'range': [2129, 2130], 'children': []}, {'type': 'InKeyword', 'name': 'in', 'range': [2130, 2131], 'children': []}, {'type': 'Identifier', 'name': 'webhooks', 'range': [2131, 2132], 'children': []}, {'type': 'ForBody', 'name': 'body', 'range': [2133, 2160], 'children': [{'type': 'Comment', 'name': 'comment', 'range': [2134, 2138], 'children': []}, {'type': 'ForStatement', 'name': 'for', 'range': [2139, 2159], 'children': [{'type': 'VariableDeclaration', 'name': 'node', 'range': [2140, 2141], 'children': []}, {'type': 'InKeyword', 'name': 'in', 'range': [2141, 2142], 'children': []}, {'type': 'MemberExpression', 'name': 'webhook.attached_nodes', 'range': [2142, 2144], 'children': []}, {'type': 'OrKeyword', 'name': 'or', 'range': [2145, 2146], 'children': []}, {'type': 'ArrayLiteral', 'name': '[]', 'range': [2146, 2147], 'children': []}, {'type': 'ForBody', 'name': 'body', 'range': [2148, 2159], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [2150, 2158], 'children': [{'type': 'FunctionCall', 'name': 'set_node_webhook', 'range': [2151, 2158], 'children': [{'type': 'Argument', 'name': 'node.id', 'range': [2153, 2155], 'children': []}, {'type': 'Argument', 'name': 'None', 'range': [2157, 2158], 'children': []}]}]}]}]}]}]}, {'type': 'Comment', 'name': 'comment', 'range': [2161, 2165], 'children': []}, {'type': 'Assignment', 'name': 'webhook_manager', 'range': [2166, 2176], 'children': [{'type': 'MemberExpression', 'name': 'WEBHOOK_MANAGERS_BY_NAME[credentials.provider]', 'range': [2168, 2173], 'children': []}]}, {'type': 'Assignment', 'name': 'success', 'range': [2177, 2192], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [2179, 2191], 'children': [{'type': 'FunctionCall', 'name': 'webhook_manager.prune_webhook_if_dangling', 'range': [2180, 2191], 'children': [{'type': 'Argument', 'name': 'webhook.id', 'range': [2185, 2187], 'children': []}, {'type': 'Argument', 'name': 'credentials', 'range': [2189, 2190], 'children': []}]}]}]}, {'type': 'IfStatement', 'name': 'if', 'range': [2193, 2205], 'children': [{'type': 'Condition', 'name': 'not success', 'range': [2194, 2196], 'children': []}, {'type': 'IfBody', 'name': 'body', 'range': [2197, 2205], 'children': [{'type': 'ExpressionStatement', 'name': 'logger.warning', 'range': [2198, 2204], 'children': [{'type': 'MemberExpression', 'name': 'logger.warning', 'range': [2199, 2200], 'children': []}, {'type': 'Arguments', 'name': 'arguments', 'range': [2201, 2204], 'children': [{'type': 'StringLiteral', 'name': 'f-string', 'range': [2202, 2203], 'children': []}]}]}]}]}]}]}]}
2025-01-08 10:29:12,529 - INFO - Starting Step 3: AST simplification
2025-01-08 10:29:13,562 - INFO - Step 4 result: {'type': 'Program', 'name': 'list_credentials_by_provider', 'range': [939, 1069], 'children': [{'type': 'FunctionDecl', 'name': 'list_credentials_by_provider', 'range': [939, 1069], 'children': [{'type': 'Parameter', 'name': 'provider', 'range': [943, 957], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated', 'range': [945, 957], 'children': [{'type': 'Type', 'name': 'ProviderName', 'range': [948, 948], 'children': []}, {'type': 'Type', 'name': 'Path', 'range': [950, 955], 'children': [{'type': 'Argument', 'name': 'title', 'range': [952, 954], 'children': []}]}]}]}, {'type': 'Parameter', 'name': 'user_id', 'range': [960, 970], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated', 'range': [962, 970], 'children': [{'type': 'Type', 'name': 'str', 'range': [964, 964], 'children': []}, {'type': 'Dependency', 'name': 'Depends', 'range': [966, 969], 'children': [{'type': 'CallExpression', 'name': 'get_user_id', 'range': [968, 968], 'children': []}]}]}]}, {'type': 'ReturnType', 'name': 'list', 'range': [976, 979], 'children': [{'type': 'Type', 'name': 'CredentialsMetaResponse', 'range': [978, 978], 'children': []}]}, {'type': 'FunctionBody', 'name': '', 'range': [982, 1068], 'children': [{'type': 'Assignment', 'name': 'credentials', 'range': [982, 993], 'children': [{'type': 'CallExpression', 'name': 'get_creds_by_provider', 'range': [988, 993], 'children': [{'type': 'Argument', 'name': 'user_id', 'range': [990, 990], 'children': []}, {'type': 'Argument', 'name': 'provider', 'range': [992, 992], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [995, 1068], 'children': [{'type': 'ListComprehension', 'name': '', 'range': [996, 1068], 'children': [{'type': 'CallExpression', 'name': 'CredentialsMetaResponse', 'range': [998, 1061], 'children': [{'type': 'Argument', 'name': 'id', 'range': [1001, 1006], 'children': []}, {'type': 'Argument', 'name': 'provider', 'range': [1008, 1013], 'children': []}, {'type': 'Argument', 'name': 'type', 'range': [1015, 1020], 'children': []}, {'type': 'Argument', 'name': 'title', 'range': [1022, 1027], 'children': []}, {'type': 'Argument', 'name': 'scopes', 'range': [1029, 1043], 'children': []}, {'type': 'Argument', 'name': 'username', 'range': [1045, 1059], 'children': []}]}, {'type': 'ForStatement', 'name': '', 'range': [1063, 1067], 'children': [{'type': 'Variable', 'name': 'cred', 'range': [1064, 1064], 'children': []}, {'type': 'Iterable', 'name': 'credentials', 'range': [1066, 1066], 'children': []}]}]}]}]}]}]}
2025-01-08 10:29:13,591 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:29:19,976 - INFO - Step 2 result: {'type': 'Program', 'name': 'webhook_ingress_generic', 'range': [1645, 1891], 'children': [{'type': 'FunctionDeclaration', 'name': 'webhook_ingress_generic', 'range': [1645, 1891], 'children': [{'type': 'Decorator', 'name': '@router.post', 'range': [1645, 1651], 'children': [{'type': 'Argument', 'name': '"/{provider}/webhooks/{webhook_id}/ingress"', 'range': [1650, 1650], 'children': []}]}, {'type': 'FunctionSignature', 'name': 'webhook_ingress_generic', 'range': [1653, 1697], 'children': [{'type': 'Parameter', 'name': 'request', 'range': [1658, 1660], 'children': []}, {'type': 'Parameter', 'name': 'provider', 'range': [1663, 1677], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated', 'range': [1665, 1677], 'children': [{'type': 'TypeArgument', 'name': 'ProviderName', 'range': [1668, 1668], 'children': []}, {'type': 'TypeArgument', 'name': 'Path', 'range': [1670, 1675], 'children': [{'type': 'Argument', 'name': 'title', 'range': [1672, 1674], 'children': []}]}]}]}, {'type': 'Parameter', 'name': 'webhook_id', 'range': [1680, 1692], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated', 'range': [1682, 1692], 'children': [{'type': 'TypeArgument', 'name': 'str', 'range': [1684, 1684], 'children': []}, {'type': 'TypeArgument', 'name': 'Path', 'range': [1686, 1691], 'children': [{'type': 'Argument', 'name': 'title', 'range': [1688, 1690], 'children': []}]}]}]}]}, {'type': 'FunctionBody', 'name': 'webhook_ingress_generic', 'range': [1698, 1891], 'children': [{'type': 'ExpressionStatement', 'name': 'logger.debug', 'range': [1698, 1705], 'children': [{'type': 'CallExpression', 'name': 'logger.debug', 'range': [1698, 1704], 'children': [{'type': 'Argument', 'name': 'f"Received {provider.value} webhook ingress for ID {webhook_id}"', 'range': [1702, 1703], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'webhook_manager', 'range': [1706, 1714], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [1707, 1713], 'children': [{'type': 'Identifier', 'name': 'WEBHOOK_MANAGERS_BY_NAME', 'range': [1708, 1708], 'children': []}, {'type': 'CallExpression', 'name': '[]', 'range': [1709, 1711], 'children': [{'type': 'Argument', 'name': 'provider', 'range': [1710, 1710], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'webhook', 'range': [1715, 1722], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [1717, 1721], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [1717, 1717], 'children': [{'type': 'CallExpression', 'name': 'get_webhook', 'range': [1718, 1721], 'children': [{'type': 'Argument', 'name': 'webhook_id', 'range': [1720, 1720], 'children': []}]}]}]}]}, {'type': 'ExpressionStatement', 'name': 'logger.debug', 'range': [1723, 1730], 'children': [{'type': 'CallExpression', 'name': 'logger.debug', 'range': [1723, 1729], 'children': [{'type': 'Argument', 'name': 'f"Webhook #{webhook_id}: {webhook}"', 'range': [1727, 1728], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'payload, event_type', 'range': [1731, 1744], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [1734, 1743], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [1735, 1735], 'children': [{'type': 'CallExpression', 'name': 'webhook_manager.validate_payload', 'range': [1736, 1743], 'children': [{'type': 'Argument', 'name': 'webhook', 'range': [1740, 1740], 'children': []}, {'type': 'Argument', 'name': 'request', 'range': [1742, 1742], 'children': []}]}]}]}]}, {'type': 'ExpressionStatement', 'name': 'logger.debug', 'range': [1745, 1756], 'children': [{'type': 'CallExpression', 'name': 'logger.debug', 'range': [1745, 1755], 'children': [{'type': 'Argument', 'name': 'f"Validated {provider.value} {webhook.webhook_type} {event_type} event "', 'range': [1750, 1751], 'children': []}, {'type': 'Argument', 'name': 'f"with payload {payload}"', 'range': [1753, 1754], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'webhook_event', 'range': [1759, 1785], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [1761, 1784], 'children': [{'type': 'NewExpression', 'name': 'WebhookEvent', 'range': [1761, 1784], 'children': [{'type': 'Argument', 'name': 'provider=provider', 'range': [1764, 1766], 'children': []}, {'type': 'Argument', 'name': 'webhook_id=webhook_id', 'range': [1769, 1771], 'children': []}, {'type': 'Argument', 'name': 'event_type=event_type', 'range': [1774, 1776], 'children': []}, {'type': 'Argument', 'name': 'payload=payload', 'range': [1779, 1781], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': 'await publish_webhook_event', 'range': [1786, 1791], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [1786, 1786], 'children': [{'type': 'CallExpression', 'name': 'publish_webhook_event', 'range': [1787, 1790], 'children': [{'type': 'Argument', 'name': 'webhook_event', 'range': [1789, 1789], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': 'logger.debug', 'range': [1792, 1799], 'children': [{'type': 'CallExpression', 'name': 'logger.debug', 'range': [1792, 1798], 'children': [{'type': 'Argument', 'name': 'f"Webhook event published: {webhook_event}"', 'range': [1796, 1797], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if not webhook.attached_nodes', 'range': [1801, 1809], 'children': [{'type': 'Condition', 'name': 'not webhook.attached_nodes', 'range': [1802, 1806], 'children': [{'type': 'UnaryExpression', 'name': 'not', 'range': [1802, 1802], 'children': [{'type': 'MemberExpression', 'name': 'webhook.attached_nodes', 'range': [1803, 1805], 'children': []}]}]}, {'type': 'BlockStatement', 'name': 'return', 'range': [1807, 1809], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [1808, 1808], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'executor', 'range': [1811, 1817], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [1812, 1816], 'children': [{'type': 'CallExpression', 'name': 'get_service_client', 'range': [1813, 1816], 'children': [{'type': 'Argument', 'name': 'ExecutionManager', 'range': [1815, 1815], 'children': []}]}]}]}, {'type': 'ForStatement', 'name': 'for node in webhook.attached_nodes', 'range': [1818, 1891], 'children': [{'type': 'Initialization', 'name': 'node in webhook.attached_nodes', 'range': [1819, 1824], 'children': [{'type': 'VariableDeclaration', 'name': 'node', 'range': [1819, 1819], 'children': []}, {'type': 'MemberExpression', 'name': 'webhook.attached_nodes', 'range': [1821, 1823], 'children': []}]}, {'type': 'BlockStatement', 'name': 'for block', 'range': [1825, 1891], 'children': [{'type': 'ExpressionStatement', 'name': 'logger.debug', 'range': [1826, 1833], 'children': [{'type': 'CallExpression', 'name': 'logger.debug', 'range': [1826, 1832], 'children': [{'type': 'Argument', 'name': 'f"Webhook-attached node: {node}"', 'range': [1830, 1831], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if not node.is_triggered_by_event_type', 'range': [1834, 1853], 'children': [{'type': 'Condition', 'name': 'not node.is_triggered_by_event_type', 'range': [1835, 1842], 'children': [{'type': 'UnaryExpression', 'name': 'not', 'range': [1835, 1835], 'children': [{'type': 'CallExpression', 'name': 'node.is_triggered_by_event_type', 'range': [1836, 1841], 'children': [{'type': 'Argument', 'name': 'event_type', 'range': [1840, 1840], 'children': []}]}]}]}, {'type': 'BlockStatement', 'name': 'continue', 'range': [1843, 1853], 'children': [{'type': 'ContinueStatement', 'name': 'continue', 'range': [1852, 1852], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'logger.debug', 'range': [1854, 1861], 'children': [{'type': 'CallExpression', 'name': 'logger.debug', 'range': [1854, 1860], 'children': [{'type': 'Argument', 'name': 'f"Executing graph #{node.graph_id} node #{node.id}"', 'range': [1858, 1859], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'executor.add_execution', 'range': [1862, 1890], 'children': [{'type': 'CallExpression', 'name': 'executor.add_execution', 'range': [1862, 1889], 'children': [{'type': 'Argument', 'name': 'node.graph_id', 'range': [1867, 1869], 'children': []}, {'type': 'Argument', 'name': 'data={f"webhook_{webhook_id}_payload":payload}', 'range': [1872, 1879], 'children': []}, {'type': 'Argument', 'name': 'user_id=webhook.user_id', 'range': [1882, 1886], 'children': []}]}]}]}]}]}]}]}
2025-01-08 10:29:19,977 - INFO - Starting Step 3: AST simplification
2025-01-08 10:29:20,055 - INFO - Step 4 result: {'type': 'Program', 'name': 'callback', 'range': [433, 810], 'children': [{'type': 'FunctionDecl', 'name': 'callback', 'range': [441, 810], 'children': [{'type': 'Decorator', 'name': '@router.post', 'range': [433, 440], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [443, 510], 'children': [{'type': 'Parameter', 'name': 'provider', 'range': [445, 459], 'children': []}, {'type': 'Parameter', 'name': 'code', 'range': [462, 474], 'children': []}, {'type': 'Parameter', 'name': 'state_token', 'range': [477, 489], 'children': []}, {'type': 'Parameter', 'name': 'user_id', 'range': [492, 502], 'children': []}, {'type': 'Parameter', 'name': 'request', 'range': [505, 508], 'children': []}]}, {'type': 'ReturnType', 'name': 'CredentialsMetaResponse', 'range': [511, 514], 'children': []}, {'type': 'Block', 'name': 'function_body', 'range': [515, 810], 'children': [{'type': 'ExpressionStatement', 'name': 'logger.debug', 'range': [516, 523], 'children': []}, {'type': 'Assignment', 'name': 'handler', 'range': [524, 532], 'children': []}, {'type': 'IfStatement', 'name': 'if_not_creds_manager.store.verify_state_token', 'range': [540, 575], 'children': [{'type': 'Block', 'name': 'if_body', 'range': [555, 575], 'children': [{'type': 'ExpressionStatement', 'name': 'logger.warning', 'range': [556, 563], 'children': []}, {'type': 'ThrowStatement', 'name': 'raise_HTTPException', 'range': [564, 575], 'children': []}]}]}, {'type': 'TryStatement', 'name': 'try', 'range': [577, 723], 'children': [{'type': 'Block', 'name': 'try_body', 'range': [579, 694], 'children': [{'type': 'Assignment', 'name': 'scopes', 'range': [580, 596], 'children': []}, {'type': 'ExpressionStatement', 'name': 'logger.debug', 'range': [597, 604], 'children': []}, {'type': 'Assignment', 'name': 'scopes', 'range': [606, 614], 'children': []}, {'type': 'Assignment', 'name': 'credentials', 'range': [616, 626], 'children': []}, {'type': 'ExpressionStatement', 'name': 'logger.debug', 'range': [627, 634], 'children': []}, {'type': 'IfStatement', 'name': 'if_not_set(scopes).issubset(set(credentials.scopes))', 'range': [649, 694], 'children': [{'type': 'Block', 'name': 'if_body', 'range': [666, 694], 'children': [{'type': 'ExpressionStatement', 'name': 'logger.warning', 'range': [681, 693], 'children': []}]}]}]}, {'type': 'CatchClause', 'name': 'except_Exception_as_e', 'range': [695, 723], 'children': [{'type': 'Block', 'name': 'catch_body', 'range': [700, 723], 'children': [{'type': 'ExpressionStatement', 'name': 'logger.error', 'range': [701, 708], 'children': []}, {'type': 'ThrowStatement', 'name': 'raise_HTTPException', 'range': [709, 723], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': 'creds_manager.create', 'range': [740, 748], 'children': []}, {'type': 'ExpressionStatement', 'name': 'logger.debug', 'range': [750, 762], 'children': []}, {'type': 'ReturnStatement', 'name': 'return_CredentialsMetaResponse', 'range': [763, 810], 'children': []}]}]}]}
2025-01-08 10:29:20,055 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:29:23,603 - INFO - Step 3 result: {'type': 'Program', 'name': '_get_provider_oauth_handler', 'range': [2207, 2360], 'children': [{'type': 'FunctionDeclaration', 'name': '_get_provider_oauth_handler', 'range': [2207, 2360], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [2209, 2218], 'children': [{'type': 'Parameter', 'name': 'req', 'range': [2211, 2213], 'children': []}, {'type': 'Parameter', 'name': 'provider_name', 'range': [2215, 2217], 'children': []}]}, {'type': 'ReturnType', 'name': 'return_type', 'range': [2220, 2222], 'children': []}, {'type': 'Block', 'name': 'body', 'range': [2224, 2360], 'children': [{'type': 'IfStatement', 'name': 'if_provider_not_in_handlers', 'range': [2225, 2248], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [2226, 2229], 'children': []}, {'type': 'Block', 'name': 'then', 'range': [2230, 2248], 'children': [{'type': 'RaiseStatement', 'name': 'raise_http_exception', 'range': [2232, 2247], 'children': [{'type': 'CallExpression', 'name': 'HTTPException', 'range': [2233, 2247], 'children': [{'type': 'ArgumentList', 'name': 'arguments', 'range': [2234, 2247], 'children': [{'type': 'Argument', 'name': 'status_code', 'range': [2236, 2238], 'children': []}, {'type': 'Argument', 'name': 'detail', 'range': [2241, 2244], 'children': []}]}]}]}]}]}, {'type': 'Assignment', 'name': 'client_id_assignment', 'range': [2250, 2261], 'children': [{'type': 'CallExpression', 'name': 'getattr', 'range': [2252, 2260], 'children': [{'type': 'ArgumentList', 'name': 'arguments', 'range': [2253, 2260], 'children': [{'type': 'Argument', 'name': 'settings.secrets', 'range': [2254, 2257], 'children': []}, {'type': 'Argument', 'name': 'f"{provider_name.value}_client_id"', 'range': [2258, 2259], 'children': []}]}]}]}, {'type': 'Assignment', 'name': 'client_secret_assignment', 'range': [2262, 2273], 'children': [{'type': 'CallExpression', 'name': 'getattr', 'range': [2264, 2272], 'children': [{'type': 'ArgumentList', 'name': 'arguments', 'range': [2265, 2272], 'children': [{'type': 'Argument', 'name': 'settings.secrets', 'range': [2266, 2269], 'children': []}, {'type': 'Argument', 'name': 'f"{provider_name.value}_client_secret"', 'range': [2270, 2271], 'children': []}]}]}]}, {'type': 'IfStatement', 'name': 'if_not_client_id_and_secret', 'range': [2274, 2303], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [2275, 2280], 'children': []}, {'type': 'Block', 'name': 'then', 'range': [2281, 2303], 'children': [{'type': 'RaiseStatement', 'name': 'raise_http_exception', 'range': [2283, 2302], 'children': [{'type': 'CallExpression', 'name': 'HTTPException', 'range': [2284, 2302], 'children': [{'type': 'ArgumentList', 'name': 'arguments', 'range': [2285, 2302], 'children': [{'type': 'Argument', 'name': 'status_code', 'range': [2287, 2289], 'children': []}, {'type': 'Argument', 'name': 'detail', 'range': [2292, 2297], 'children': []}]}]}]}]}]}, {'type': 'Assignment', 'name': 'handler_class_assignment', 'range': [2305, 2311], 'children': [{'type': 'SubscriptExpression', 'name': 'HANDLERS_BY_NAME[provider_name]', 'range': [2307, 2310], 'children': []}]}, {'type': 'Assignment', 'name': 'frontend_base_url_assignment', 'range': [2312, 2338], 'children': [{'type': 'ConditionalExpression', 'name': 'conditional_expression', 'range': [2314, 2337], 'children': [{'type': 'Condition', 'name': 'settings.config.frontend_base_url', 'range': [2316, 2321], 'children': []}, {'type': 'Condition', 'name': 'settings.config.platform_base_url', 'range': [2323, 2328], 'children': []}, {'type': 'Condition', 'name': 'str(req.base_url)', 'range': [2330, 2336], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return_handler_class', 'range': [2339, 2360], 'children': [{'type': 'CallExpression', 'name': 'handler_class', 'range': [2340, 2359], 'children': [{'type': 'ArgumentList', 'name': 'arguments', 'range': [2341, 2359], 'children': [{'type': 'Argument', 'name': 'client_id', 'range': [2343, 2345], 'children': []}, {'type': 'Argument', 'name': 'client_secret', 'range': [2348, 2350], 'children': []}, {'type': 'Argument', 'name': 'redirect_uri', 'range': [2353, 2356], 'children': []}]}]}]}]}]}]}
2025-01-08 10:29:23,603 - INFO - Starting Step 4: AST normalization
2025-01-08 10:29:24,755 - INFO - Step 5 result: {'type': 'Program', 'name': 'delete_credentials', 'range': [1422, 1644], 'children': [{'type': 'FunctionDecl', 'name': 'delete_credentials', 'range': [1422, 1644], 'children': [{'type': 'Decorator', 'name': '@router.delete', 'range': [1422, 1428], 'children': []}, {'type': 'FunctionSignature', 'name': 'delete_credentials', 'range': [1430, 1510], 'children': [{'type': 'Parameter', 'name': 'request', 'range': [1435, 1437], 'children': []}, {'type': 'Parameter', 'name': 'provider', 'range': [1440, 1454], 'children': []}, {'type': 'Parameter', 'name': 'cred_id', 'range': [1457, 1469], 'children': []}, {'type': 'Parameter', 'name': 'user_id', 'range': [1472, 1482], 'children': []}, {'type': 'Parameter', 'name': 'force', 'range': [1485, 1501], 'children': []}, {'type': 'ReturnType', 'name': 'CredentialsDeletionResponse | CredentialsDeletionNeedsConfirmationResponse', 'range': [1505, 1509], 'children': []}]}, {'type': 'FunctionBody', 'name': 'delete_credentials', 'range': [1511, 1644], 'children': [{'type': 'VariableDecl', 'name': 'creds', 'range': [1512, 1523], 'children': []}, {'type': 'IfStatement', 'name': 'if not creds', 'range': [1525, 1540], 'children': []}, {'type': 'IfStatement', 'name': 'if creds.provider != provider', 'range': [1542, 1563], 'children': []}, {'type': 'TryStatement', 'name': 'try', 'range': [1566, 1593], 'children': [{'type': 'AwaitExpression', 'name': 'await remove_all_webhooks_for_credentials', 'range': [1569, 1575], 'children': []}, {'type': 'CatchClause', 'name': 'except NeedConfirmation as e', 'range': [1577, 1593], 'children': []}]}, {'type': 'ExpressionStatement', 'name': 'creds_manager.delete', 'range': [1595, 1602], 'children': []}, {'type': 'VariableDecl', 'name': 'tokens_revoked', 'range': [1605, 1607], 'children': []}, {'type': 'IfStatement', 'name': 'if isinstance(creds, OAuth2Credentials)', 'range': [1609, 1635], 'children': []}, {'type': 'ReturnStatement', 'name': 'return CredentialsDeletionResponse', 'range': [1637, 1643], 'children': []}]}]}]}
2025-01-08 10:29:24,755 - INFO - Completed main AST analysis flow
2025-01-08 10:29:24,755 - INFO - Successfully processed chunk
2025-01-08 10:29:25,607 - INFO - Step 4 result: {'type': 'Program', 'name': '', 'range': [811, 930], 'children': [{'type': 'FunctionDecl', 'name': 'list_credentials', 'range': [819, 930], 'children': [{'type': 'Parameter', 'name': 'user_id', 'range': [823, 833], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated[str, Depends(get_user_id)]', 'range': [825, 833], 'children': []}]}, {'type': 'ReturnType', 'name': 'list[CredentialsMetaResponse]', 'range': [837, 842], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [843, 930], 'children': [{'type': 'VariableDecl', 'name': 'credentials', 'range': [845, 854], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [846, 854], 'children': [{'type': 'CallExpression', 'name': 'creds_manager.store.get_all_creds', 'range': [847, 854], 'children': [{'type': 'Identifier', 'name': 'user_id', 'range': [853, 854], 'children': []}]}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [856, 929], 'children': [{'type': 'ArrayExpression', 'name': '', 'range': [857, 929], 'children': [{'type': 'ObjectExpression', 'name': 'CredentialsMetaResponse', 'range': [859, 922], 'children': [{'type': 'Property', 'name': 'id', 'range': [862, 867], 'children': [{'type': 'Identifier', 'name': 'cred.id', 'range': [864, 867], 'children': []}]}, {'type': 'Property', 'name': 'provider', 'range': [869, 874], 'children': [{'type': 'Identifier', 'name': 'cred.provider', 'range': [871, 874], 'children': []}]}, {'type': 'Property', 'name': 'type', 'range': [876, 881], 'children': [{'type': 'Identifier', 'name': 'cred.type', 'range': [878, 881], 'children': []}]}, {'type': 'Property', 'name': 'title', 'range': [883, 888], 'children': [{'type': 'Identifier', 'name': 'cred.title', 'range': [885, 888], 'children': []}]}, {'type': 'Property', 'name': 'scopes', 'range': [890, 904], 'children': [{'type': 'ConditionalExpression', 'name': 'if isinstance(cred, OAuth2Credentials) else None', 'range': [895, 904], 'children': [{'type': 'CallExpression', 'name': 'isinstance', 'range': [896, 901], 'children': [{'type': 'Identifier', 'name': 'cred', 'range': [898, 899], 'children': []}, {'type': 'Identifier', 'name': 'OAuth2Credentials', 'range': [900, 901], 'children': []}]}, {'type': 'Identifier', 'name': 'None', 'range': [903, 904], 'children': []}]}]}, {'type': 'Property', 'name': 'username', 'range': [906, 920], 'children': [{'type': 'ConditionalExpression', 'name': 'if isinstance(cred, OAuth2Credentials) else None', 'range': [911, 920], 'children': [{'type': 'CallExpression', 'name': 'isinstance', 'range': [912, 917], 'children': [{'type': 'Identifier', 'name': 'cred', 'range': [914, 915], 'children': []}, {'type': 'Identifier', 'name': 'OAuth2Credentials', 'range': [916, 917], 'children': []}]}, {'type': 'Identifier', 'name': 'None', 'range': [919, 920], 'children': []}]}]}]}]}]}]}]}]}
2025-01-08 10:29:25,607 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:29:28,045 - INFO - Step 4 result: {'type': 'Program', 'name': 'get_credential', 'range': [1078, 1186], 'children': [{'type': 'FunctionDecl', 'name': 'get_credential', 'range': [1078, 1186], 'children': [{'type': 'FunctionSignature', 'name': 'get_credential', 'range': [1078, 1132], 'children': [{'type': 'Parameter', 'name': 'provider', 'range': [1082, 1096], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated', 'range': [1084, 1096], 'children': [{'type': 'Type', 'name': 'ProviderName', 'range': [1087, 1087], 'children': []}, {'type': 'Type', 'name': 'Path', 'range': [1089, 1094], 'children': []}]}]}, {'type': 'Parameter', 'name': 'cred_id', 'range': [1099, 1111], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated', 'range': [1101, 1111], 'children': [{'type': 'Type', 'name': 'str', 'range': [1103, 1103], 'children': []}, {'type': 'Type', 'name': 'Path', 'range': [1105, 1110], 'children': []}]}]}, {'type': 'Parameter', 'name': 'user_id', 'range': [1114, 1124], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated', 'range': [1116, 1124], 'children': [{'type': 'Type', 'name': 'str', 'range': [1118, 1118], 'children': []}, {'type': 'Type', 'name': 'Depends', 'range': [1120, 1123], 'children': []}]}]}, {'type': 'ReturnType', 'name': 'Credentials', 'range': [1130, 1130], 'children': []}]}, {'type': 'FunctionBody', 'name': 'get_credential', 'range': [1133, 1186], 'children': [{'type': 'VariableDecl', 'name': 'credential', 'range': [1133, 1142], 'children': [{'type': 'Assignment', 'name': '=', 'range': [1134, 1134], 'children': []}, {'type': 'CallExpression', 'name': 'creds_manager.get', 'range': [1135, 1142], 'children': [{'type': 'Argument', 'name': 'user_id', 'range': [1139, 1139], 'children': []}, {'type': 'Argument', 'name': 'cred_id', 'range': [1141, 1141], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if', 'range': [1144, 1159], 'children': [{'type': 'Condition', 'name': 'not credential', 'range': [1145, 1146], 'children': []}, {'type': 'Block', 'name': '', 'range': [1147, 1159], 'children': [{'type': 'RaiseStatement', 'name': 'raise', 'range': [1149, 1159], 'children': [{'type': 'CallExpression', 'name': 'HTTPException', 'range': [1150, 1159], 'children': [{'type': 'Argument', 'name': 'status_code', 'range': [1152, 1154], 'children': []}, {'type': 'Argument', 'name': 'detail', 'range': [1156, 1158], 'children': []}]}]}]}]}, {'type': 'IfStatement', 'name': 'if', 'range': [1161, 1182], 'children': [{'type': 'Condition', 'name': 'credential.provider != provider', 'range': [1162, 1167], 'children': []}, {'type': 'Block', 'name': '', 'range': [1168, 1182], 'children': [{'type': 'RaiseStatement', 'name': 'raise', 'range': [1170, 1182], 'children': [{'type': 'CallExpression', 'name': 'HTTPException', 'range': [1171, 1182], 'children': [{'type': 'Argument', 'name': 'status_code', 'range': [1174, 1176], 'children': []}, {'type': 'Argument', 'name': 'detail', 'range': [1178, 1180], 'children': []}]}]}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [1184, 1185], 'children': []}]}]}]}
2025-01-08 10:29:28,045 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:29:29,503 - INFO - Step 5 result: {'type': 'Program', 'name': 'webhook_ping', 'range': [1892, 2037], 'children': [{'type': 'Decorator', 'name': '@router.post', 'range': [1892, 1898], 'children': [{'type': 'Argument', 'name': '"/webhooks/{webhook_id}/ping"', 'range': [1897, 1897], 'children': []}]}, {'type': 'FunctionDecl', 'name': 'webhook_ping', 'range': [1900, 2037], 'children': [{'type': 'Parameter', 'name': 'webhook_id', 'range': [1905, 1917], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated[str, Path]', 'range': [1907, 1917], 'children': [{'type': 'Argument', 'name': 'title="Our ID for the webhook"', 'range': [1913, 1915], 'children': []}]}]}, {'type': 'Parameter', 'name': 'user_id', 'range': [1920, 1930], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated[str, Depends]', 'range': [1922, 1930], 'children': [{'type': 'Argument', 'name': 'get_user_id', 'range': [1928, 1928], 'children': []}]}]}, {'type': 'Comment', 'name': '# require auth', 'range': [1932, 1934], 'children': []}, {'type': 'Assignment', 'name': 'webhook = await get_webhook(webhook_id)', 'range': [1939, 1945], 'children': []}, {'type': 'Assignment', 'name': 'webhook_manager = WEBHOOK_MANAGERS_BY_NAME[webhook.provider]()', 'range': [1947, 1956], 'children': []}, {'type': 'Assignment', 'name': 'credentials = (creds_manager.get(user_id, webhook.credentials_id) if webhook.credentials_id else None)', 'range': [1959, 1981], 'children': []}, {'type': 'TryStatement', 'name': 'try', 'range': [1984, 2003], 'children': [{'type': 'AwaitExpression', 'name': 'await webhook_manager.trigger_ping(webhook, credentials)', 'range': [1987, 1995], 'children': []}, {'type': 'CatchClause', 'name': 'except NotImplementedError', 'range': [1997, 2003], 'children': [{'type': 'ReturnStatement', 'name': 'return False', 'range': [2001, 2002], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if not await wait_for_webhook_event(webhook_id, event_type="ping", timeout=10)', 'range': [2005, 2020], 'children': [{'type': 'ThrowStatement', 'name': 'raise HTTPException(status_code=504, detail="Webhook ping timed out")', 'range': [2022, 2032], 'children': []}]}, {'type': 'ReturnStatement', 'name': 'return True', 'range': [2035, 2036], 'children': []}]}]}
2025-01-08 10:29:29,503 - INFO - Completed main AST analysis flow
2025-01-08 10:29:29,504 - INFO - Successfully processed chunk
2025-01-08 10:29:34,172 - INFO - Step 5 result: {'type': 'Program', 'name': 'list_credentials_by_provider', 'range': [939, 1069], 'children': [{'type': 'FunctionDecl', 'name': 'list_credentials_by_provider', 'range': [939, 1069], 'children': [{'type': 'Parameter', 'name': 'provider', 'range': [943, 957], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated', 'range': [945, 957], 'children': [{'type': 'Type', 'name': 'ProviderName', 'range': [948, 948], 'children': []}, {'type': 'Type', 'name': 'Path', 'range': [950, 955], 'children': [{'type': 'Argument', 'name': 'title', 'range': [952, 954], 'children': []}]}]}]}, {'type': 'Parameter', 'name': 'user_id', 'range': [960, 970], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated', 'range': [962, 970], 'children': [{'type': 'Type', 'name': 'str', 'range': [964, 964], 'children': []}, {'type': 'Dependency', 'name': 'Depends', 'range': [966, 969], 'children': [{'type': 'CallExpression', 'name': 'get_user_id', 'range': [968, 968], 'children': []}]}]}]}, {'type': 'ReturnType', 'name': 'list', 'range': [976, 979], 'children': [{'type': 'Type', 'name': 'CredentialsMetaResponse', 'range': [978, 978], 'children': []}]}, {'type': 'FunctionBody', 'name': '', 'range': [982, 1068], 'children': [{'type': 'Assignment', 'name': 'credentials', 'range': [982, 993], 'children': [{'type': 'CallExpression', 'name': 'get_creds_by_provider', 'range': [988, 993], 'children': [{'type': 'Argument', 'name': 'user_id', 'range': [990, 990], 'children': []}, {'type': 'Argument', 'name': 'provider', 'range': [992, 992], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [995, 1068], 'children': [{'type': 'ListComprehension', 'name': '', 'range': [996, 1068], 'children': [{'type': 'CallExpression', 'name': 'CredentialsMetaResponse', 'range': [998, 1061], 'children': [{'type': 'Argument', 'name': 'id', 'range': [1001, 1006], 'children': []}, {'type': 'Argument', 'name': 'provider', 'range': [1008, 1013], 'children': []}, {'type': 'Argument', 'name': 'type', 'range': [1015, 1020], 'children': []}, {'type': 'Argument', 'name': 'title', 'range': [1022, 1027], 'children': []}, {'type': 'Argument', 'name': 'scopes', 'range': [1029, 1043], 'children': []}, {'type': 'Argument', 'name': 'username', 'range': [1045, 1059], 'children': []}]}, {'type': 'ForStatement', 'name': '', 'range': [1063, 1067], 'children': [{'type': 'Variable', 'name': 'cred', 'range': [1064, 1064], 'children': []}, {'type': 'Iterable', 'name': 'credentials', 'range': [1066, 1066], 'children': []}]}]}]}]}]}]}
2025-01-08 10:29:34,173 - INFO - Completed main AST analysis flow
2025-01-08 10:29:34,173 - INFO - Successfully processed chunk
2025-01-08 10:29:37,041 - INFO - Step 4 result: {'type': 'Program', 'name': 'create_api_key_credentials', 'range': [1187, 1356], 'children': [{'type': 'Decorator', 'name': '@router.post', 'range': [1187, 1197], 'children': [{'type': 'Argument', 'name': '"/{provider}/credentials"', 'range': [1192, 1192], 'children': []}, {'type': 'Argument', 'name': 'status_code=201', 'range': [1194, 1196], 'children': []}]}, {'type': 'FunctionDecl', 'name': 'create_api_key_credentials', 'range': [1199, 1356], 'children': [{'type': 'Parameter', 'name': 'user_id', 'range': [1203, 1213], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated[str, Depends(get_user_id)]', 'range': [1205, 1213], 'children': []}]}, {'type': 'Parameter', 'name': 'provider', 'range': [1216, 1230], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated[ProviderName, Path(title="The provider to create credentials for")]', 'range': [1218, 1230], 'children': []}]}, {'type': 'Parameter', 'name': 'api_key', 'range': [1233, 1245], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated[str, Body(title="The API key to store")]', 'range': [1235, 1245], 'children': []}]}, {'type': 'Parameter', 'name': 'title', 'range': [1248, 1260], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated[str, Body(title="Optional title for the credentials")]', 'range': [1250, 1260], 'children': []}]}, {'type': 'Parameter', 'name': 'expires_at', 'range': [1263, 1281], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated[int | None, Body(title="Unix timestamp when the key expires")]', 'range': [1265, 1278], 'children': []}]}, {'type': 'ReturnType', 'name': 'APIKeyCredentials', 'range': [1287, 1287], 'children': []}, {'type': 'Block', 'name': 'FunctionBody', 'range': [1290, 1356], 'children': [{'type': 'Assignment', 'name': 'new_credentials = APIKeyCredentials', 'range': [1290, 1318], 'children': [{'type': 'CallExpression', 'name': 'APIKeyCredentials', 'range': [1292, 1318], 'children': [{'type': 'Argument', 'name': 'provider=provider', 'range': [1295, 1297], 'children': []}, {'type': 'Argument', 'name': 'api_key=SecretStr(api_key)', 'range': [1300, 1305], 'children': []}, {'type': 'Argument', 'name': 'title=title', 'range': [1308, 1310], 'children': []}, {'type': 'Argument', 'name': 'expires_at=expires_at', 'range': [1313, 1315], 'children': []}]}]}, {'type': 'TryStatement', 'name': 'try', 'range': [1321, 1353], 'children': [{'type': 'Block', 'name': 'TryBody', 'range': [1324, 1332], 'children': [{'type': 'CallExpression', 'name': 'creds_manager.create', 'range': [1324, 1331], 'children': [{'type': 'Argument', 'name': 'user_id', 'range': [1328, 1328], 'children': []}, {'type': 'Argument', 'name': 'new_credentials', 'range': [1330, 1330], 'children': []}]}]}, {'type': 'CatchClause', 'name': 'except Exception as e', 'range': [1333, 1353], 'children': [{'type': 'Block', 'name': 'ExceptBody', 'range': [1339, 1352], 'children': [{'type': 'ThrowStatement', 'name': 'raise HTTPException', 'range': [1339, 1352], 'children': [{'type': 'CallExpression', 'name': 'HTTPException', 'range': [1340, 1352], 'children': [{'type': 'Argument', 'name': 'status_code=500', 'range': [1343, 1345], 'children': []}, {'type': 'Argument', 'name': 'detail=f"Failed to store credentials: {str(e)}"', 'range': [1347, 1350], 'children': []}]}]}]}]}]}, {'type': 'ReturnStatement', 'name': 'return new_credentials', 'range': [1354, 1355], 'children': []}]}]}]}
2025-01-08 10:29:37,041 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:29:38,893 - INFO - Step 3 result: {'type': 'Program', 'name': '', 'range': [0, 170], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 2], 'children': [{'type': 'ImportSpecifier', 'name': 'logging', 'range': [1, 1], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [3, 11], 'children': [{'type': 'ImportSpecifier', 'name': 'typing', 'range': [4, 4], 'children': []}, {'type': 'ImportSpecifier', 'name': 'TYPE_CHECKING', 'range': [6, 6], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Annotated', 'range': [8, 8], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Literal', 'range': [10, 10], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [13, 29], 'children': [{'type': 'ImportSpecifier', 'name': 'fastapi', 'range': [14, 14], 'children': []}, {'type': 'ImportSpecifier', 'name': 'APIRouter', 'range': [16, 16], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Body', 'range': [18, 18], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Depends', 'range': [20, 20], 'children': []}, {'type': 'ImportSpecifier', 'name': 'HTTPException', 'range': [22, 22], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Path', 'range': [24, 24], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Query', 'range': [26, 26], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Request', 'range': [28, 28], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [30, 38], 'children': [{'type': 'ImportSpecifier', 'name': 'pydantic', 'range': [31, 31], 'children': []}, {'type': 'ImportSpecifier', 'name': 'BaseModel', 'range': [33, 33], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Field', 'range': [35, 35], 'children': []}, {'type': 'ImportSpecifier', 'name': 'SecretStr', 'range': [37, 37], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [40, 48], 'children': [{'type': 'ImportSpecifier', 'name': 'backend.data.graph', 'range': [41, 45], 'children': []}, {'type': 'ImportSpecifier', 'name': 'set_node_webhook', 'range': [47, 47], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [49, 74], 'children': [{'type': 'ImportSpecifier', 'name': 'backend.data.integrations', 'range': [50, 54], 'children': []}, {'type': 'ImportSpecifier', 'name': 'WebhookEvent', 'range': [58, 58], 'children': []}, {'type': 'ImportSpecifier', 'name': 'get_all_webhooks_by_creds', 'range': [61, 61], 'children': []}, {'type': 'ImportSpecifier', 'name': 'get_webhook', 'range': [64, 64], 'children': []}, {'type': 'ImportSpecifier', 'name': 'publish_webhook_event', 'range': [67, 67], 'children': []}, {'type': 'ImportSpecifier', 'name': 'wait_for_webhook_event', 'range': [70, 70], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [75, 97], 'children': [{'type': 'ImportSpecifier', 'name': 'backend.data.model', 'range': [76, 80], 'children': []}, {'type': 'ImportSpecifier', 'name': 'APIKeyCredentials', 'range': [84, 84], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Credentials', 'range': [87, 87], 'children': []}, {'type': 'ImportSpecifier', 'name': 'CredentialsType', 'range': [90, 90], 'children': []}, {'type': 'ImportSpecifier', 'name': 'OAuth2Credentials', 'range': [93, 93], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [98, 106], 'children': [{'type': 'ImportSpecifier', 'name': 'backend.executor.manager', 'range': [99, 103], 'children': []}, {'type': 'ImportSpecifier', 'name': 'ExecutionManager', 'range': [105, 105], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [107, 115], 'children': [{'type': 'ImportSpecifier', 'name': 'backend.integrations.creds_manager', 'range': [108, 112], 'children': []}, {'type': 'ImportSpecifier', 'name': 'IntegrationCredentialsManager', 'range': [114, 114], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [116, 124], 'children': [{'type': 'ImportSpecifier', 'name': 'backend.integrations.oauth', 'range': [117, 121], 'children': []}, {'type': 'ImportSpecifier', 'name': 'HANDLERS_BY_NAME', 'range': [123, 123], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [125, 133], 'children': [{'type': 'ImportSpecifier', 'name': 'backend.integrations.providers', 'range': [126, 130], 'children': []}, {'type': 'ImportSpecifier', 'name': 'ProviderName', 'range': [132, 132], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [134, 142], 'children': [{'type': 'ImportSpecifier', 'name': 'backend.integrations.webhooks', 'range': [135, 139], 'children': []}, {'type': 'ImportSpecifier', 'name': 'WEBHOOK_MANAGERS_BY_NAME', 'range': [141, 141], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [143, 151], 'children': [{'type': 'ImportSpecifier', 'name': 'backend.util.exceptions', 'range': [144, 148], 'children': []}, {'type': 'ImportSpecifier', 'name': 'NeedConfirmation', 'range': [150, 150], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [152, 160], 'children': [{'type': 'ImportSpecifier', 'name': 'backend.util.service', 'range': [153, 157], 'children': []}, {'type': 'ImportSpecifier', 'name': 'get_service_client', 'range': [159, 159], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [161, 169], 'children': [{'type': 'ImportSpecifier', 'name': 'backend.util.settings', 'range': [162, 166], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Settings', 'range': [168, 168], 'children': []}]}]}
2025-01-08 10:29:38,894 - INFO - Starting Step 4: AST normalization
2025-01-08 10:29:41,018 - INFO - Step 4 result: {'type': 'Program', 'name': 'login', 'range': [239, 391], 'children': [{'type': 'FunctionDecl', 'name': 'login', 'range': [247, 391], 'children': [{'type': 'Parameter', 'name': 'provider', 'range': [251, 265], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated', 'range': [253, 265], 'children': [{'type': 'Type', 'name': 'ProviderName', 'range': [256, 256], 'children': []}, {'type': 'Type', 'name': 'Path', 'range': [258, 263], 'children': [{'type': 'Argument', 'name': 'title', 'range': [260, 262], 'children': []}]}]}]}, {'type': 'Parameter', 'name': 'user_id', 'range': [268, 278], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated', 'range': [270, 278], 'children': [{'type': 'Type', 'name': 'str', 'range': [272, 272], 'children': []}, {'type': 'Type', 'name': 'Depends', 'range': [274, 277], 'children': [{'type': 'Argument', 'name': 'get_user_id', 'range': [276, 276], 'children': []}]}]}]}, {'type': 'Parameter', 'name': 'request', 'range': [281, 284], 'children': [{'type': 'Type', 'name': 'Request', 'range': [283, 283], 'children': []}]}, {'type': 'Parameter', 'name': 'scopes', 'range': [286, 302], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated', 'range': [288, 302], 'children': [{'type': 'Type', 'name': 'str', 'range': [291, 291], 'children': []}, {'type': 'Type', 'name': 'Query', 'range': [293, 298], 'children': [{'type': 'Argument', 'name': 'title', 'range': [295, 297], 'children': []}]}]}]}, {'type': 'ReturnType', 'name': 'LoginResponse', 'range': [308, 309], 'children': []}, {'type': 'FunctionBody', 'name': '', 'range': [310, 391], 'children': [{'type': 'VariableDecl', 'name': 'handler', 'range': [311, 318], 'children': [{'type': 'CallExpression', 'name': '_get_provider_oauth_handler', 'range': [313, 318], 'children': [{'type': 'Argument', 'name': 'request', 'range': [315, 315], 'children': []}, {'type': 'Argument', 'name': 'provider', 'range': [317, 317], 'children': []}]}]}, {'type': 'VariableDecl', 'name': 'requested_scopes', 'range': [321, 334], 'children': [{'type': 'CallExpression', 'name': 'split', 'range': [325, 328], 'children': [{'type': 'Argument', 'name': '","', 'range': [327, 327], 'children': []}]}, {'type': 'ConditionalExpression', 'name': '', 'range': [329, 334], 'children': [{'type': 'Test', 'name': 'scopes', 'range': [330, 330], 'children': []}, {'type': 'Consequent', 'name': '', 'range': [332, 333], 'children': []}]}]}, {'type': 'VariableDecl', 'name': 'state_token', 'range': [350, 365], 'children': [{'type': 'CallExpression', 'name': 'store_state_token', 'range': [356, 365], 'children': [{'type': 'Argument', 'name': 'user_id', 'range': [359, 359], 'children': []}, {'type': 'Argument', 'name': 'provider', 'range': [361, 361], 'children': []}, {'type': 'Argument', 'name': 'requested_scopes', 'range': [363, 363], 'children': []}]}]}, {'type': 'VariableDecl', 'name': 'login_url', 'range': [368, 377], 'children': [{'type': 'CallExpression', 'name': 'get_login_url', 'range': [372, 377], 'children': [{'type': 'Argument', 'name': 'requested_scopes', 'range': [374, 374], 'children': []}, {'type': 'Argument', 'name': 'state_token', 'range': [376, 376], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [380, 391], 'children': [{'type': 'CallExpression', 'name': 'LoginResponse', 'range': [382, 390], 'children': [{'type': 'Argument', 'name': 'login_url', 'range': [384, 385], 'children': []}, {'type': 'Argument', 'name': 'state_token', 'range': [387, 389], 'children': []}]}]}]}]}]}
2025-01-08 10:29:41,018 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:29:43,239 - INFO - Step 5 result: {'type': 'Program', 'name': 'callback', 'range': [433, 810], 'children': [{'type': 'FunctionDecl', 'name': 'callback', 'range': [441, 810], 'children': [{'type': 'Decorator', 'name': '@router.post', 'range': [433, 440], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [443, 510], 'children': [{'type': 'Parameter', 'name': 'provider', 'range': [445, 459], 'children': []}, {'type': 'Parameter', 'name': 'code', 'range': [462, 474], 'children': []}, {'type': 'Parameter', 'name': 'state_token', 'range': [477, 489], 'children': []}, {'type': 'Parameter', 'name': 'user_id', 'range': [492, 502], 'children': []}, {'type': 'Parameter', 'name': 'request', 'range': [505, 508], 'children': []}]}, {'type': 'ReturnType', 'name': 'CredentialsMetaResponse', 'range': [511, 514], 'children': []}, {'type': 'Block', 'name': 'function_body', 'range': [515, 810], 'children': [{'type': 'ExpressionStatement', 'name': 'logger.debug', 'range': [516, 523], 'children': []}, {'type': 'Assignment', 'name': 'handler', 'range': [524, 532], 'children': []}, {'type': 'IfStatement', 'name': 'if_not_creds_manager.store.verify_state_token', 'range': [540, 575], 'children': [{'type': 'Block', 'name': 'if_body', 'range': [555, 575], 'children': [{'type': 'ExpressionStatement', 'name': 'logger.warning', 'range': [556, 563], 'children': []}, {'type': 'ThrowStatement', 'name': 'raise_HTTPException', 'range': [564, 575], 'children': []}]}]}, {'type': 'TryStatement', 'name': 'try', 'range': [577, 723], 'children': [{'type': 'Block', 'name': 'try_body', 'range': [579, 694], 'children': [{'type': 'Assignment', 'name': 'scopes', 'range': [580, 596], 'children': []}, {'type': 'ExpressionStatement', 'name': 'logger.debug', 'range': [597, 604], 'children': []}, {'type': 'Assignment', 'name': 'scopes', 'range': [606, 614], 'children': []}, {'type': 'Assignment', 'name': 'credentials', 'range': [616, 626], 'children': []}, {'type': 'ExpressionStatement', 'name': 'logger.debug', 'range': [627, 634], 'children': []}, {'type': 'IfStatement', 'name': 'if_not_set(scopes).issubset(set(credentials.scopes))', 'range': [649, 694], 'children': [{'type': 'Block', 'name': 'if_body', 'range': [666, 694], 'children': [{'type': 'ExpressionStatement', 'name': 'logger.warning', 'range': [681, 693], 'children': []}]}]}]}, {'type': 'CatchClause', 'name': 'except_Exception_as_e', 'range': [695, 723], 'children': [{'type': 'Block', 'name': 'catch_body', 'range': [700, 723], 'children': [{'type': 'ExpressionStatement', 'name': 'logger.error', 'range': [701, 708], 'children': []}, {'type': 'ThrowStatement', 'name': 'raise_HTTPException', 'range': [709, 723], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': 'creds_manager.create', 'range': [740, 748], 'children': []}, {'type': 'ExpressionStatement', 'name': 'logger.debug', 'range': [750, 762], 'children': []}, {'type': 'ReturnStatement', 'name': 'return_CredentialsMetaResponse', 'range': [763, 810], 'children': []}]}]}]}
2025-01-08 10:29:43,239 - INFO - Completed main AST analysis flow
2025-01-08 10:29:43,241 - INFO - Successfully processed chunk
2025-01-08 10:29:48,379 - INFO - Step 5 result: {'type': 'Program', 'name': '', 'range': [811, 930], 'children': [{'type': 'FunctionDecl', 'name': 'list_credentials', 'range': [819, 930], 'children': [{'type': 'Parameter', 'name': 'user_id', 'range': [823, 833], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated[str, Depends(get_user_id)]', 'range': [825, 833], 'children': []}]}, {'type': 'ReturnType', 'name': 'list[CredentialsMetaResponse]', 'range': [837, 842], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [843, 930], 'children': [{'type': 'VariableDecl', 'name': 'credentials', 'range': [845, 854], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [846, 854], 'children': [{'type': 'CallExpression', 'name': 'creds_manager.store.get_all_creds', 'range': [847, 854], 'children': [{'type': 'Identifier', 'name': 'user_id', 'range': [853, 854], 'children': []}]}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [856, 929], 'children': [{'type': 'ArrayExpression', 'name': '', 'range': [857, 929], 'children': [{'type': 'ObjectExpression', 'name': 'CredentialsMetaResponse', 'range': [859, 922], 'children': [{'type': 'Property', 'name': 'id', 'range': [862, 867], 'children': [{'type': 'Identifier', 'name': 'cred.id', 'range': [864, 867], 'children': []}]}, {'type': 'Property', 'name': 'provider', 'range': [869, 874], 'children': [{'type': 'Identifier', 'name': 'cred.provider', 'range': [871, 874], 'children': []}]}, {'type': 'Property', 'name': 'type', 'range': [876, 881], 'children': [{'type': 'Identifier', 'name': 'cred.type', 'range': [878, 881], 'children': []}]}, {'type': 'Property', 'name': 'title', 'range': [883, 888], 'children': [{'type': 'Identifier', 'name': 'cred.title', 'range': [885, 888], 'children': []}]}, {'type': 'Property', 'name': 'scopes', 'range': [890, 904], 'children': [{'type': 'ConditionalExpression', 'name': 'if isinstance(cred, OAuth2Credentials) else None', 'range': [895, 904], 'children': [{'type': 'CallExpression', 'name': 'isinstance', 'range': [896, 901], 'children': [{'type': 'Identifier', 'name': 'cred', 'range': [898, 899], 'children': []}, {'type': 'Identifier', 'name': 'OAuth2Credentials', 'range': [900, 901], 'children': []}]}, {'type': 'Identifier', 'name': 'None', 'range': [903, 904], 'children': []}]}]}, {'type': 'Property', 'name': 'username', 'range': [906, 920], 'children': [{'type': 'ConditionalExpression', 'name': 'if isinstance(cred, OAuth2Credentials) else None', 'range': [911, 920], 'children': [{'type': 'CallExpression', 'name': 'isinstance', 'range': [912, 917], 'children': [{'type': 'Identifier', 'name': 'cred', 'range': [914, 915], 'children': []}, {'type': 'Identifier', 'name': 'OAuth2Credentials', 'range': [916, 917], 'children': []}]}, {'type': 'Identifier', 'name': 'None', 'range': [919, 920], 'children': []}]}]}]}]}]}]}]}]}
2025-01-08 10:29:48,379 - INFO - Completed main AST analysis flow
2025-01-08 10:29:48,381 - INFO - Successfully processed chunk
2025-01-08 10:29:53,854 - INFO - Step 5 result: {'type': 'Program', 'name': 'get_credential', 'range': [1078, 1186], 'children': [{'type': 'FunctionDecl', 'name': 'get_credential', 'range': [1078, 1186], 'children': [{'type': 'FunctionSignature', 'name': 'get_credential', 'range': [1078, 1132], 'children': [{'type': 'Parameter', 'name': 'provider', 'range': [1082, 1096], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated', 'range': [1084, 1096], 'children': [{'type': 'Type', 'name': 'ProviderName', 'range': [1087, 1087], 'children': []}, {'type': 'Type', 'name': 'Path', 'range': [1089, 1094], 'children': []}]}]}, {'type': 'Parameter', 'name': 'cred_id', 'range': [1099, 1111], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated', 'range': [1101, 1111], 'children': [{'type': 'Type', 'name': 'str', 'range': [1103, 1103], 'children': []}, {'type': 'Type', 'name': 'Path', 'range': [1105, 1110], 'children': []}]}]}, {'type': 'Parameter', 'name': 'user_id', 'range': [1114, 1124], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated', 'range': [1116, 1124], 'children': [{'type': 'Type', 'name': 'str', 'range': [1118, 1118], 'children': []}, {'type': 'Type', 'name': 'Depends', 'range': [1120, 1123], 'children': []}]}]}, {'type': 'ReturnType', 'name': 'Credentials', 'range': [1130, 1130], 'children': []}]}, {'type': 'FunctionBody', 'name': 'get_credential', 'range': [1133, 1186], 'children': [{'type': 'VariableDecl', 'name': 'credential', 'range': [1133, 1142], 'children': [{'type': 'Assignment', 'name': '=', 'range': [1134, 1134], 'children': []}, {'type': 'CallExpression', 'name': 'creds_manager.get', 'range': [1135, 1142], 'children': [{'type': 'Argument', 'name': 'user_id', 'range': [1139, 1139], 'children': []}, {'type': 'Argument', 'name': 'cred_id', 'range': [1141, 1141], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if', 'range': [1144, 1159], 'children': [{'type': 'Condition', 'name': 'not credential', 'range': [1145, 1146], 'children': []}, {'type': 'Block', 'name': '', 'range': [1147, 1159], 'children': [{'type': 'RaiseStatement', 'name': 'raise', 'range': [1149, 1159], 'children': [{'type': 'CallExpression', 'name': 'HTTPException', 'range': [1150, 1159], 'children': [{'type': 'Argument', 'name': 'status_code', 'range': [1152, 1154], 'children': []}, {'type': 'Argument', 'name': 'detail', 'range': [1156, 1158], 'children': []}]}]}]}]}, {'type': 'IfStatement', 'name': 'if', 'range': [1161, 1182], 'children': [{'type': 'Condition', 'name': 'credential.provider != provider', 'range': [1162, 1167], 'children': []}, {'type': 'Block', 'name': '', 'range': [1168, 1182], 'children': [{'type': 'RaiseStatement', 'name': 'raise', 'range': [1170, 1182], 'children': [{'type': 'CallExpression', 'name': 'HTTPException', 'range': [1171, 1182], 'children': [{'type': 'Argument', 'name': 'status_code', 'range': [1174, 1176], 'children': []}, {'type': 'Argument', 'name': 'detail', 'range': [1178, 1180], 'children': []}]}]}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [1184, 1185], 'children': []}]}]}]}
2025-01-08 10:29:53,854 - INFO - Completed main AST analysis flow
2025-01-08 10:29:53,855 - INFO - Successfully processed chunk
2025-01-08 10:29:55,904 - INFO - Step 4 result: {'type': 'Program', 'name': '_get_provider_oauth_handler', 'range': [2207, 2360], 'children': [{'type': 'FunctionDecl', 'name': '_get_provider_oauth_handler', 'range': [2207, 2360], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [2209, 2218], 'children': [{'type': 'Parameter', 'name': 'req', 'range': [2211, 2213], 'children': []}, {'type': 'Parameter', 'name': 'provider_name', 'range': [2215, 2217], 'children': []}]}, {'type': 'ReturnType', 'name': 'return_type', 'range': [2220, 2222], 'children': []}, {'type': 'Block', 'name': 'body', 'range': [2224, 2360], 'children': [{'type': 'IfStatement', 'name': 'if_provider_not_in_handlers', 'range': [2225, 2248], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [2226, 2229], 'children': []}, {'type': 'Block', 'name': 'then', 'range': [2230, 2248], 'children': [{'type': 'RaiseStatement', 'name': 'raise_http_exception', 'range': [2232, 2247], 'children': [{'type': 'CallExpression', 'name': 'HTTPException', 'range': [2233, 2247], 'children': [{'type': 'ArgumentList', 'name': 'arguments', 'range': [2234, 2247], 'children': [{'type': 'Argument', 'name': 'status_code', 'range': [2236, 2238], 'children': []}, {'type': 'Argument', 'name': 'detail', 'range': [2241, 2244], 'children': []}]}]}]}]}]}, {'type': 'Assignment', 'name': 'client_id_assignment', 'range': [2250, 2261], 'children': [{'type': 'CallExpression', 'name': 'getattr', 'range': [2252, 2260], 'children': [{'type': 'ArgumentList', 'name': 'arguments', 'range': [2253, 2260], 'children': [{'type': 'Argument', 'name': 'settings.secrets', 'range': [2254, 2257], 'children': []}, {'type': 'Argument', 'name': 'f"{provider_name.value}_client_id"', 'range': [2258, 2259], 'children': []}]}]}]}, {'type': 'Assignment', 'name': 'client_secret_assignment', 'range': [2262, 2273], 'children': [{'type': 'CallExpression', 'name': 'getattr', 'range': [2264, 2272], 'children': [{'type': 'ArgumentList', 'name': 'arguments', 'range': [2265, 2272], 'children': [{'type': 'Argument', 'name': 'settings.secrets', 'range': [2266, 2269], 'children': []}, {'type': 'Argument', 'name': 'f"{provider_name.value}_client_secret"', 'range': [2270, 2271], 'children': []}]}]}]}, {'type': 'IfStatement', 'name': 'if_not_client_id_and_secret', 'range': [2274, 2303], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [2275, 2280], 'children': []}, {'type': 'Block', 'name': 'then', 'range': [2281, 2303], 'children': [{'type': 'RaiseStatement', 'name': 'raise_http_exception', 'range': [2283, 2302], 'children': [{'type': 'CallExpression', 'name': 'HTTPException', 'range': [2284, 2302], 'children': [{'type': 'ArgumentList', 'name': 'arguments', 'range': [2285, 2302], 'children': [{'type': 'Argument', 'name': 'status_code', 'range': [2287, 2289], 'children': []}, {'type': 'Argument', 'name': 'detail', 'range': [2292, 2297], 'children': []}]}]}]}]}]}, {'type': 'Assignment', 'name': 'handler_class_assignment', 'range': [2305, 2311], 'children': [{'type': 'SubscriptExpression', 'name': 'HANDLERS_BY_NAME[provider_name]', 'range': [2307, 2310], 'children': []}]}, {'type': 'Assignment', 'name': 'frontend_base_url_assignment', 'range': [2312, 2338], 'children': [{'type': 'ConditionalExpression', 'name': 'conditional_expression', 'range': [2314, 2337], 'children': [{'type': 'Condition', 'name': 'settings.config.frontend_base_url', 'range': [2316, 2321], 'children': []}, {'type': 'Condition', 'name': 'settings.config.platform_base_url', 'range': [2323, 2328], 'children': []}, {'type': 'Condition', 'name': 'str(req.base_url)', 'range': [2330, 2336], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return_handler_class', 'range': [2339, 2360], 'children': [{'type': 'CallExpression', 'name': 'handler_class', 'range': [2340, 2359], 'children': [{'type': 'ArgumentList', 'name': 'arguments', 'range': [2341, 2359], 'children': [{'type': 'Argument', 'name': 'client_id', 'range': [2343, 2345], 'children': []}, {'type': 'Argument', 'name': 'client_secret', 'range': [2348, 2350], 'children': []}, {'type': 'Argument', 'name': 'redirect_uri', 'range': [2353, 2356], 'children': []}]}]}]}]}]}]}
2025-01-08 10:29:55,905 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:30:03,230 - INFO - Step 5 result: {'type': 'Program', 'name': 'create_api_key_credentials', 'range': [1187, 1356], 'children': [{'type': 'Decorator', 'name': '@router.post', 'range': [1187, 1197], 'children': [{'type': 'Argument', 'name': '"/{provider}/credentials"', 'range': [1192, 1192], 'children': []}, {'type': 'Argument', 'name': 'status_code=201', 'range': [1194, 1196], 'children': []}]}, {'type': 'FunctionDecl', 'name': 'create_api_key_credentials', 'range': [1199, 1356], 'children': [{'type': 'Parameter', 'name': 'user_id', 'range': [1203, 1213], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated[str, Depends(get_user_id)]', 'range': [1205, 1213], 'children': []}]}, {'type': 'Parameter', 'name': 'provider', 'range': [1216, 1230], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated[ProviderName, Path(title="The provider to create credentials for")]', 'range': [1218, 1230], 'children': []}]}, {'type': 'Parameter', 'name': 'api_key', 'range': [1233, 1245], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated[str, Body(title="The API key to store")]', 'range': [1235, 1245], 'children': []}]}, {'type': 'Parameter', 'name': 'title', 'range': [1248, 1260], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated[str, Body(title="Optional title for the credentials")]', 'range': [1250, 1260], 'children': []}]}, {'type': 'Parameter', 'name': 'expires_at', 'range': [1263, 1281], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated[int | None, Body(title="Unix timestamp when the key expires")]', 'range': [1265, 1278], 'children': []}]}, {'type': 'ReturnType', 'name': 'APIKeyCredentials', 'range': [1287, 1287], 'children': []}, {'type': 'Block', 'name': 'FunctionBody', 'range': [1290, 1356], 'children': [{'type': 'Assignment', 'name': 'new_credentials = APIKeyCredentials', 'range': [1290, 1318], 'children': [{'type': 'CallExpression', 'name': 'APIKeyCredentials', 'range': [1292, 1318], 'children': [{'type': 'Argument', 'name': 'provider=provider', 'range': [1295, 1297], 'children': []}, {'type': 'Argument', 'name': 'api_key=SecretStr(api_key)', 'range': [1300, 1305], 'children': []}, {'type': 'Argument', 'name': 'title=title', 'range': [1308, 1310], 'children': []}, {'type': 'Argument', 'name': 'expires_at=expires_at', 'range': [1313, 1315], 'children': []}]}]}, {'type': 'TryStatement', 'name': 'try', 'range': [1321, 1353], 'children': [{'type': 'Block', 'name': 'TryBody', 'range': [1324, 1332], 'children': [{'type': 'CallExpression', 'name': 'creds_manager.create', 'range': [1324, 1331], 'children': [{'type': 'Argument', 'name': 'user_id', 'range': [1328, 1328], 'children': []}, {'type': 'Argument', 'name': 'new_credentials', 'range': [1330, 1330], 'children': []}]}]}, {'type': 'CatchClause', 'name': 'except Exception as e', 'range': [1333, 1353], 'children': [{'type': 'Block', 'name': 'ExceptBody', 'range': [1339, 1352], 'children': [{'type': 'ThrowStatement', 'name': 'raise HTTPException', 'range': [1339, 1352], 'children': [{'type': 'CallExpression', 'name': 'HTTPException', 'range': [1340, 1352], 'children': [{'type': 'Argument', 'name': 'status_code=500', 'range': [1343, 1345], 'children': []}, {'type': 'Argument', 'name': 'detail=f"Failed to store credentials: {str(e)}"', 'range': [1347, 1350], 'children': []}]}]}]}]}]}, {'type': 'ReturnStatement', 'name': 'return new_credentials', 'range': [1354, 1355], 'children': []}]}]}]}
2025-01-08 10:30:03,230 - INFO - Completed main AST analysis flow
2025-01-08 10:30:03,231 - INFO - Successfully processed chunk
2025-01-08 10:30:08,499 - INFO - Step 3 result: {'type': 'Program', 'name': 'remove_all_webhooks_for_credentials', 'range': [2038, 2206], 'children': [{'type': 'FunctionDeclaration', 'name': 'remove_all_webhooks_for_credentials', 'range': [2038, 2206], 'children': [{'type': 'AsyncKeyword', 'name': 'async', 'range': [2038, 2042], 'children': []}, {'type': 'DefKeyword', 'name': 'def', 'range': [2039, 2042], 'children': []}, {'type': 'FunctionName', 'name': 'remove_all_webhooks_for_credentials', 'range': [2040, 2072], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [2041, 2053], 'children': [{'type': 'Parameter', 'name': 'credentials', 'range': [2043, 2045], 'children': []}, {'type': 'TypeAnnotation', 'name': 'Credentials', 'range': [2045, 2046], 'children': []}, {'type': 'Parameter', 'name': 'force', 'range': [2047, 2049], 'children': []}, {'type': 'TypeAnnotation', 'name': 'bool', 'range': [2049, 2050], 'children': []}, {'type': 'DefaultValue', 'name': 'False', 'range': [2051, 2052], 'children': []}]}, {'type': 'ReturnType', 'name': 'None', 'range': [2054, 2056], 'children': []}, {'type': 'FunctionBody', 'name': 'body', 'range': [2057, 2206], 'children': [{'type': 'Docstring', 'name': 'docstring', 'range': [2059, 2061], 'children': []}, {'type': 'Assignment', 'name': 'webhooks', 'range': [2063, 2072], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [2065, 2071], 'children': [{'type': 'FunctionCall', 'name': 'get_all_webhooks_by_creds', 'range': [2066, 2071], 'children': [{'type': 'Argument', 'name': 'credentials.id', 'range': [2068, 2070], 'children': []}]}]}]}, {'type': 'IfStatement', 'name': 'if', 'range': [2073, 2103], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [2074, 2080], 'children': [{'type': 'MemberExpression', 'name': 'credentials.provider', 'range': [2075, 2076], 'children': []}, {'type': 'NotInKeyword', 'name': 'not in', 'range': [2077, 2079], 'children': []}, {'type': 'Identifier', 'name': 'WEBHOOK_MANAGERS_BY_NAME', 'range': [2079, 2080], 'children': []}]}, {'type': 'IfBody', 'name': 'body', 'range': [2081, 2103], 'children': [{'type': 'IfStatement', 'name': 'if', 'range': [2082, 2103], 'children': [{'type': 'Condition', 'name': 'webhooks', 'range': [2083, 2084], 'children': []}, {'type': 'IfBody', 'name': 'body', 'range': [2085, 2103], 'children': [{'type': 'ExpressionStatement', 'name': 'logger.error', 'range': [2086, 2100], 'children': [{'type': 'MemberExpression', 'name': 'logger.error', 'range': [2087, 2088], 'children': []}, {'type': 'Arguments', 'name': 'arguments', 'range': [2089, 2100], 'children': [{'type': 'StringLiteral', 'name': 'f-string', 'range': [2091, 2092], 'children': []}, {'type': 'StringLiteral', 'name': 'f-string', 'range': [2094, 2095], 'children': []}, {'type': 'StringLiteral', 'name': 'f-string', 'range': [2097, 2098], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [2102, 2103], 'children': []}]}]}]}]}, {'type': 'IfStatement', 'name': 'if', 'range': [2104, 2127], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [2105, 2118], 'children': [{'type': 'FunctionCall', 'name': 'any', 'range': [2106, 2114], 'children': [{'type': 'GeneratorExpression', 'name': 'generator', 'range': [2107, 2113], 'children': [{'type': 'MemberExpression', 'name': 'w.attached_nodes', 'range': [2108, 2109], 'children': []}, {'type': 'ForStatement', 'name': 'for', 'range': [2110, 2113], 'children': [{'type': 'VariableDeclaration', 'name': 'w', 'range': [2111, 2112], 'children': []}, {'type': 'InKeyword', 'name': 'in', 'range': [2112, 2113], 'children': []}, {'type': 'Identifier', 'name': 'webhooks', 'range': [2113, 2114], 'children': []}]}]}]}, {'type': 'AndKeyword', 'name': 'and', 'range': [2115, 2116], 'children': []}, {'type': 'NotKeyword', 'name': 'not', 'range': [2117, 2118], 'children': []}, {'type': 'Identifier', 'name': 'force', 'range': [2118, 2119], 'children': []}]}, {'type': 'IfBody', 'name': 'body', 'range': [2119, 2127], 'children': [{'type': 'RaiseStatement', 'name': 'raise', 'range': [2120, 2126], 'children': [{'type': 'Identifier', 'name': 'NeedConfirmation', 'range': [2121, 2122], 'children': []}, {'type': 'Arguments', 'name': 'arguments', 'range': [2122, 2126], 'children': [{'type': 'StringLiteral', 'name': 'string', 'range': [2124, 2125], 'children': []}]}]}]}]}, {'type': 'ForStatement', 'name': 'for', 'range': [2128, 2160], 'children': [{'type': 'VariableDeclaration', 'name': 'webhook', 'range': [2129, 2130], 'children': []}, {'type': 'InKeyword', 'name': 'in', 'range': [2130, 2131], 'children': []}, {'type': 'Identifier', 'name': 'webhooks', 'range': [2131, 2132], 'children': []}, {'type': 'ForBody', 'name': 'body', 'range': [2133, 2160], 'children': [{'type': 'Comment', 'name': 'comment', 'range': [2134, 2138], 'children': []}, {'type': 'ForStatement', 'name': 'for', 'range': [2139, 2159], 'children': [{'type': 'VariableDeclaration', 'name': 'node', 'range': [2140, 2141], 'children': []}, {'type': 'InKeyword', 'name': 'in', 'range': [2141, 2142], 'children': []}, {'type': 'MemberExpression', 'name': 'webhook.attached_nodes', 'range': [2142, 2144], 'children': []}, {'type': 'OrKeyword', 'name': 'or', 'range': [2145, 2146], 'children': []}, {'type': 'ArrayLiteral', 'name': '[]', 'range': [2146, 2147], 'children': []}, {'type': 'ForBody', 'name': 'body', 'range': [2148, 2159], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [2150, 2158], 'children': [{'type': 'FunctionCall', 'name': 'set_node_webhook', 'range': [2151, 2158], 'children': [{'type': 'Argument', 'name': 'node.id', 'range': [2153, 2155], 'children': []}, {'type': 'Argument', 'name': 'None', 'range': [2157, 2158], 'children': []}]}]}]}]}]}]}, {'type': 'Comment', 'name': 'comment', 'range': [2161, 2165], 'children': []}, {'type': 'Assignment', 'name': 'webhook_manager', 'range': [2166, 2176], 'children': [{'type': 'MemberExpression', 'name': 'WEBHOOK_MANAGERS_BY_NAME[credentials.provider]', 'range': [2168, 2173], 'children': []}]}, {'type': 'Assignment', 'name': 'success', 'range': [2177, 2192], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [2179, 2191], 'children': [{'type': 'FunctionCall', 'name': 'webhook_manager.prune_webhook_if_dangling', 'range': [2180, 2191], 'children': [{'type': 'Argument', 'name': 'webhook.id', 'range': [2185, 2187], 'children': []}, {'type': 'Argument', 'name': 'credentials', 'range': [2189, 2190], 'children': []}]}]}]}, {'type': 'IfStatement', 'name': 'if', 'range': [2193, 2205], 'children': [{'type': 'Condition', 'name': 'not success', 'range': [2194, 2196], 'children': []}, {'type': 'IfBody', 'name': 'body', 'range': [2197, 2205], 'children': [{'type': 'ExpressionStatement', 'name': 'logger.warning', 'range': [2198, 2204], 'children': [{'type': 'MemberExpression', 'name': 'logger.warning', 'range': [2199, 2200], 'children': []}, {'type': 'Arguments', 'name': 'arguments', 'range': [2201, 2204], 'children': [{'type': 'StringLiteral', 'name': 'f-string', 'range': [2202, 2203], 'children': []}]}]}]}]}]}]}]}
2025-01-08 10:30:08,499 - INFO - Starting Step 4: AST normalization
2025-01-08 10:30:09,315 - INFO - Step 5 result: {'type': 'Program', 'name': 'login', 'range': [239, 391], 'children': [{'type': 'FunctionDecl', 'name': 'login', 'range': [247, 391], 'children': [{'type': 'Parameter', 'name': 'provider', 'range': [251, 265], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated', 'range': [253, 265], 'children': [{'type': 'Type', 'name': 'ProviderName', 'range': [256, 256], 'children': []}, {'type': 'Type', 'name': 'Path', 'range': [258, 263], 'children': [{'type': 'Argument', 'name': 'title', 'range': [260, 262], 'children': []}]}]}]}, {'type': 'Parameter', 'name': 'user_id', 'range': [268, 278], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated', 'range': [270, 278], 'children': [{'type': 'Type', 'name': 'str', 'range': [272, 272], 'children': []}, {'type': 'Type', 'name': 'Depends', 'range': [274, 277], 'children': [{'type': 'Argument', 'name': 'get_user_id', 'range': [276, 276], 'children': []}]}]}]}, {'type': 'Parameter', 'name': 'request', 'range': [281, 284], 'children': [{'type': 'Type', 'name': 'Request', 'range': [283, 283], 'children': []}]}, {'type': 'Parameter', 'name': 'scopes', 'range': [286, 302], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated', 'range': [288, 302], 'children': [{'type': 'Type', 'name': 'str', 'range': [291, 291], 'children': []}, {'type': 'Type', 'name': 'Query', 'range': [293, 298], 'children': [{'type': 'Argument', 'name': 'title', 'range': [295, 297], 'children': []}]}]}]}, {'type': 'ReturnType', 'name': 'LoginResponse', 'range': [308, 309], 'children': []}, {'type': 'FunctionBody', 'name': '', 'range': [310, 391], 'children': [{'type': 'VariableDecl', 'name': 'handler', 'range': [311, 318], 'children': [{'type': 'CallExpression', 'name': '_get_provider_oauth_handler', 'range': [313, 318], 'children': [{'type': 'Argument', 'name': 'request', 'range': [315, 315], 'children': []}, {'type': 'Argument', 'name': 'provider', 'range': [317, 317], 'children': []}]}]}, {'type': 'VariableDecl', 'name': 'requested_scopes', 'range': [321, 334], 'children': [{'type': 'CallExpression', 'name': 'split', 'range': [325, 328], 'children': [{'type': 'Argument', 'name': '","', 'range': [327, 327], 'children': []}]}, {'type': 'ConditionalExpression', 'name': '', 'range': [329, 334], 'children': [{'type': 'Test', 'name': 'scopes', 'range': [330, 330], 'children': []}, {'type': 'Consequent', 'name': '', 'range': [332, 333], 'children': []}]}]}, {'type': 'VariableDecl', 'name': 'state_token', 'range': [350, 365], 'children': [{'type': 'CallExpression', 'name': 'store_state_token', 'range': [356, 365], 'children': [{'type': 'Argument', 'name': 'user_id', 'range': [359, 359], 'children': []}, {'type': 'Argument', 'name': 'provider', 'range': [361, 361], 'children': []}, {'type': 'Argument', 'name': 'requested_scopes', 'range': [363, 363], 'children': []}]}]}, {'type': 'VariableDecl', 'name': 'login_url', 'range': [368, 377], 'children': [{'type': 'CallExpression', 'name': 'get_login_url', 'range': [372, 377], 'children': [{'type': 'Argument', 'name': 'requested_scopes', 'range': [374, 374], 'children': []}, {'type': 'Argument', 'name': 'state_token', 'range': [376, 376], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [380, 391], 'children': [{'type': 'CallExpression', 'name': 'LoginResponse', 'range': [382, 390], 'children': [{'type': 'Argument', 'name': 'login_url', 'range': [384, 385], 'children': []}, {'type': 'Argument', 'name': 'state_token', 'range': [387, 389], 'children': []}]}]}]}]}]}
2025-01-08 10:30:09,315 - INFO - Completed main AST analysis flow
2025-01-08 10:30:09,316 - INFO - Successfully processed chunk
2025-01-08 10:30:19,511 - INFO - Step 4 result: {'type': 'Program', 'name': '', 'range': [0, 170], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 2], 'children': [{'type': 'ImportSpecifier', 'name': 'logging', 'range': [1, 1], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [3, 11], 'children': [{'type': 'ImportSpecifier', 'name': 'typing', 'range': [4, 4], 'children': []}, {'type': 'ImportSpecifier', 'name': 'TYPE_CHECKING', 'range': [6, 6], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Annotated', 'range': [8, 8], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Literal', 'range': [10, 10], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [13, 29], 'children': [{'type': 'ImportSpecifier', 'name': 'fastapi', 'range': [14, 14], 'children': []}, {'type': 'ImportSpecifier', 'name': 'APIRouter', 'range': [16, 16], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Body', 'range': [18, 18], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Depends', 'range': [20, 20], 'children': []}, {'type': 'ImportSpecifier', 'name': 'HTTPException', 'range': [22, 22], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Path', 'range': [24, 24], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Query', 'range': [26, 26], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Request', 'range': [28, 28], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [30, 38], 'children': [{'type': 'ImportSpecifier', 'name': 'pydantic', 'range': [31, 31], 'children': []}, {'type': 'ImportSpecifier', 'name': 'BaseModel', 'range': [33, 33], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Field', 'range': [35, 35], 'children': []}, {'type': 'ImportSpecifier', 'name': 'SecretStr', 'range': [37, 37], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [40, 48], 'children': [{'type': 'ImportSpecifier', 'name': 'backend.data.graph', 'range': [41, 45], 'children': []}, {'type': 'ImportSpecifier', 'name': 'set_node_webhook', 'range': [47, 47], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [49, 74], 'children': [{'type': 'ImportSpecifier', 'name': 'backend.data.integrations', 'range': [50, 54], 'children': []}, {'type': 'ImportSpecifier', 'name': 'WebhookEvent', 'range': [58, 58], 'children': []}, {'type': 'ImportSpecifier', 'name': 'get_all_webhooks_by_creds', 'range': [61, 61], 'children': []}, {'type': 'ImportSpecifier', 'name': 'get_webhook', 'range': [64, 64], 'children': []}, {'type': 'ImportSpecifier', 'name': 'publish_webhook_event', 'range': [67, 67], 'children': []}, {'type': 'ImportSpecifier', 'name': 'wait_for_webhook_event', 'range': [70, 70], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [75, 97], 'children': [{'type': 'ImportSpecifier', 'name': 'backend.data.model', 'range': [76, 80], 'children': []}, {'type': 'ImportSpecifier', 'name': 'APIKeyCredentials', 'range': [84, 84], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Credentials', 'range': [87, 87], 'children': []}, {'type': 'ImportSpecifier', 'name': 'CredentialsType', 'range': [90, 90], 'children': []}, {'type': 'ImportSpecifier', 'name': 'OAuth2Credentials', 'range': [93, 93], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [98, 106], 'children': [{'type': 'ImportSpecifier', 'name': 'backend.executor.manager', 'range': [99, 103], 'children': []}, {'type': 'ImportSpecifier', 'name': 'ExecutionManager', 'range': [105, 105], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [107, 115], 'children': [{'type': 'ImportSpecifier', 'name': 'backend.integrations.creds_manager', 'range': [108, 112], 'children': []}, {'type': 'ImportSpecifier', 'name': 'IntegrationCredentialsManager', 'range': [114, 114], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [116, 124], 'children': [{'type': 'ImportSpecifier', 'name': 'backend.integrations.oauth', 'range': [117, 121], 'children': []}, {'type': 'ImportSpecifier', 'name': 'HANDLERS_BY_NAME', 'range': [123, 123], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [125, 133], 'children': [{'type': 'ImportSpecifier', 'name': 'backend.integrations.providers', 'range': [126, 130], 'children': []}, {'type': 'ImportSpecifier', 'name': 'ProviderName', 'range': [132, 132], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [134, 142], 'children': [{'type': 'ImportSpecifier', 'name': 'backend.integrations.webhooks', 'range': [135, 139], 'children': []}, {'type': 'ImportSpecifier', 'name': 'WEBHOOK_MANAGERS_BY_NAME', 'range': [141, 141], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [143, 151], 'children': [{'type': 'ImportSpecifier', 'name': 'backend.util.exceptions', 'range': [144, 148], 'children': []}, {'type': 'ImportSpecifier', 'name': 'NeedConfirmation', 'range': [150, 150], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [152, 160], 'children': [{'type': 'ImportSpecifier', 'name': 'backend.util.service', 'range': [153, 157], 'children': []}, {'type': 'ImportSpecifier', 'name': 'get_service_client', 'range': [159, 159], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [161, 169], 'children': [{'type': 'ImportSpecifier', 'name': 'backend.util.settings', 'range': [162, 166], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Settings', 'range': [168, 168], 'children': []}]}]}
2025-01-08 10:30:19,512 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:30:25,311 - INFO - Step 3 result: {'type': 'Program', 'name': 'webhook_ingress_generic', 'range': [1645, 1891], 'children': [{'type': 'FunctionDeclaration', 'name': 'webhook_ingress_generic', 'range': [1645, 1891], 'children': [{'type': 'Decorator', 'name': '@router.post', 'range': [1645, 1651], 'children': [{'type': 'Argument', 'name': '"/{provider}/webhooks/{webhook_id}/ingress"', 'range': [1650, 1650], 'children': []}]}, {'type': 'FunctionSignature', 'name': 'webhook_ingress_generic', 'range': [1653, 1697], 'children': [{'type': 'Parameter', 'name': 'request', 'range': [1658, 1660], 'children': []}, {'type': 'Parameter', 'name': 'provider', 'range': [1663, 1677], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated', 'range': [1665, 1677], 'children': [{'type': 'TypeArgument', 'name': 'ProviderName', 'range': [1668, 1668], 'children': []}, {'type': 'TypeArgument', 'name': 'Path', 'range': [1670, 1675], 'children': [{'type': 'Argument', 'name': 'title', 'range': [1672, 1674], 'children': []}]}]}]}, {'type': 'Parameter', 'name': 'webhook_id', 'range': [1680, 1692], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated', 'range': [1682, 1692], 'children': [{'type': 'TypeArgument', 'name': 'str', 'range': [1684, 1684], 'children': []}, {'type': 'TypeArgument', 'name': 'Path', 'range': [1686, 1691], 'children': [{'type': 'Argument', 'name': 'title', 'range': [1688, 1690], 'children': []}]}]}]}]}, {'type': 'FunctionBody', 'name': 'webhook_ingress_generic', 'range': [1698, 1891], 'children': [{'type': 'ExpressionStatement', 'name': 'logger.debug', 'range': [1698, 1705], 'children': [{'type': 'CallExpression', 'name': 'logger.debug', 'range': [1698, 1704], 'children': [{'type': 'Argument', 'name': 'f"Received {provider.value} webhook ingress for ID {webhook_id}"', 'range': [1702, 1703], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'webhook_manager', 'range': [1706, 1714], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [1707, 1713], 'children': [{'type': 'Identifier', 'name': 'WEBHOOK_MANAGERS_BY_NAME', 'range': [1708, 1708], 'children': []}, {'type': 'CallExpression', 'name': '[]', 'range': [1709, 1711], 'children': [{'type': 'Argument', 'name': 'provider', 'range': [1710, 1710], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'webhook', 'range': [1715, 1722], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [1717, 1721], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [1717, 1717], 'children': [{'type': 'CallExpression', 'name': 'get_webhook', 'range': [1718, 1721], 'children': [{'type': 'Argument', 'name': 'webhook_id', 'range': [1720, 1720], 'children': []}]}]}]}]}, {'type': 'ExpressionStatement', 'name': 'logger.debug', 'range': [1723, 1730], 'children': [{'type': 'CallExpression', 'name': 'logger.debug', 'range': [1723, 1729], 'children': [{'type': 'Argument', 'name': 'f"Webhook #{webhook_id}: {webhook}"', 'range': [1727, 1728], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'payload, event_type', 'range': [1731, 1744], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [1734, 1743], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [1735, 1735], 'children': [{'type': 'CallExpression', 'name': 'webhook_manager.validate_payload', 'range': [1736, 1743], 'children': [{'type': 'Argument', 'name': 'webhook', 'range': [1740, 1740], 'children': []}, {'type': 'Argument', 'name': 'request', 'range': [1742, 1742], 'children': []}]}]}]}]}, {'type': 'ExpressionStatement', 'name': 'logger.debug', 'range': [1745, 1756], 'children': [{'type': 'CallExpression', 'name': 'logger.debug', 'range': [1745, 1755], 'children': [{'type': 'Argument', 'name': 'f"Validated {provider.value} {webhook.webhook_type} {event_type} event "', 'range': [1750, 1751], 'children': []}, {'type': 'Argument', 'name': 'f"with payload {payload}"', 'range': [1753, 1754], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'webhook_event', 'range': [1759, 1785], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [1761, 1784], 'children': [{'type': 'NewExpression', 'name': 'WebhookEvent', 'range': [1761, 1784], 'children': [{'type': 'Argument', 'name': 'provider=provider', 'range': [1764, 1766], 'children': []}, {'type': 'Argument', 'name': 'webhook_id=webhook_id', 'range': [1769, 1771], 'children': []}, {'type': 'Argument', 'name': 'event_type=event_type', 'range': [1774, 1776], 'children': []}, {'type': 'Argument', 'name': 'payload=payload', 'range': [1779, 1781], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': 'await publish_webhook_event', 'range': [1786, 1791], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [1786, 1786], 'children': [{'type': 'CallExpression', 'name': 'publish_webhook_event', 'range': [1787, 1790], 'children': [{'type': 'Argument', 'name': 'webhook_event', 'range': [1789, 1789], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': 'logger.debug', 'range': [1792, 1799], 'children': [{'type': 'CallExpression', 'name': 'logger.debug', 'range': [1792, 1798], 'children': [{'type': 'Argument', 'name': 'f"Webhook event published: {webhook_event}"', 'range': [1796, 1797], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if not webhook.attached_nodes', 'range': [1801, 1809], 'children': [{'type': 'Condition', 'name': 'not webhook.attached_nodes', 'range': [1802, 1806], 'children': [{'type': 'UnaryExpression', 'name': 'not', 'range': [1802, 1802], 'children': [{'type': 'MemberExpression', 'name': 'webhook.attached_nodes', 'range': [1803, 1805], 'children': []}]}]}, {'type': 'BlockStatement', 'name': 'return', 'range': [1807, 1809], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [1808, 1808], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'executor', 'range': [1811, 1817], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [1812, 1816], 'children': [{'type': 'CallExpression', 'name': 'get_service_client', 'range': [1813, 1816], 'children': [{'type': 'Argument', 'name': 'ExecutionManager', 'range': [1815, 1815], 'children': []}]}]}]}, {'type': 'ForStatement', 'name': 'for node in webhook.attached_nodes', 'range': [1818, 1891], 'children': [{'type': 'Initialization', 'name': 'node in webhook.attached_nodes', 'range': [1819, 1824], 'children': [{'type': 'VariableDeclaration', 'name': 'node', 'range': [1819, 1819], 'children': []}, {'type': 'MemberExpression', 'name': 'webhook.attached_nodes', 'range': [1821, 1823], 'children': []}]}, {'type': 'BlockStatement', 'name': 'for block', 'range': [1825, 1891], 'children': [{'type': 'ExpressionStatement', 'name': 'logger.debug', 'range': [1826, 1833], 'children': [{'type': 'CallExpression', 'name': 'logger.debug', 'range': [1826, 1832], 'children': [{'type': 'Argument', 'name': 'f"Webhook-attached node: {node}"', 'range': [1830, 1831], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if not node.is_triggered_by_event_type', 'range': [1834, 1853], 'children': [{'type': 'Condition', 'name': 'not node.is_triggered_by_event_type', 'range': [1835, 1842], 'children': [{'type': 'UnaryExpression', 'name': 'not', 'range': [1835, 1835], 'children': [{'type': 'CallExpression', 'name': 'node.is_triggered_by_event_type', 'range': [1836, 1841], 'children': [{'type': 'Argument', 'name': 'event_type', 'range': [1840, 1840], 'children': []}]}]}]}, {'type': 'BlockStatement', 'name': 'continue', 'range': [1843, 1853], 'children': [{'type': 'ContinueStatement', 'name': 'continue', 'range': [1852, 1852], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'logger.debug', 'range': [1854, 1861], 'children': [{'type': 'CallExpression', 'name': 'logger.debug', 'range': [1854, 1860], 'children': [{'type': 'Argument', 'name': 'f"Executing graph #{node.graph_id} node #{node.id}"', 'range': [1858, 1859], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'executor.add_execution', 'range': [1862, 1890], 'children': [{'type': 'CallExpression', 'name': 'executor.add_execution', 'range': [1862, 1889], 'children': [{'type': 'Argument', 'name': 'node.graph_id', 'range': [1867, 1869], 'children': []}, {'type': 'Argument', 'name': 'data={f"webhook_{webhook_id}_payload":payload}', 'range': [1872, 1879], 'children': []}, {'type': 'Argument', 'name': 'user_id=webhook.user_id', 'range': [1882, 1886], 'children': []}]}]}]}]}]}]}]}
2025-01-08 10:30:25,312 - INFO - Starting Step 4: AST normalization
2025-01-08 10:30:29,029 - INFO - Step 5 result: {'type': 'Program', 'name': '_get_provider_oauth_handler', 'range': [2207, 2360], 'children': [{'type': 'FunctionDecl', 'name': '_get_provider_oauth_handler', 'range': [2207, 2360], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [2209, 2218], 'children': [{'type': 'Parameter', 'name': 'req', 'range': [2211, 2213], 'children': []}, {'type': 'Parameter', 'name': 'provider_name', 'range': [2215, 2217], 'children': []}]}, {'type': 'ReturnType', 'name': 'return_type', 'range': [2220, 2222], 'children': []}, {'type': 'Block', 'name': 'body', 'range': [2224, 2360], 'children': [{'type': 'IfStatement', 'name': 'if_provider_not_in_handlers', 'range': [2225, 2248], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [2226, 2229], 'children': []}, {'type': 'Block', 'name': 'then', 'range': [2230, 2248], 'children': [{'type': 'RaiseStatement', 'name': 'raise_http_exception', 'range': [2232, 2247], 'children': [{'type': 'CallExpression', 'name': 'HTTPException', 'range': [2233, 2247], 'children': [{'type': 'ArgumentList', 'name': 'arguments', 'range': [2234, 2247], 'children': [{'type': 'Argument', 'name': 'status_code', 'range': [2236, 2238], 'children': []}, {'type': 'Argument', 'name': 'detail', 'range': [2241, 2244], 'children': []}]}]}]}]}]}, {'type': 'Assignment', 'name': 'client_id_assignment', 'range': [2250, 2261], 'children': [{'type': 'CallExpression', 'name': 'getattr', 'range': [2252, 2260], 'children': [{'type': 'ArgumentList', 'name': 'arguments', 'range': [2253, 2260], 'children': [{'type': 'Argument', 'name': 'settings.secrets', 'range': [2254, 2257], 'children': []}, {'type': 'Argument', 'name': 'f"{provider_name.value}_client_id"', 'range': [2258, 2259], 'children': []}]}]}]}, {'type': 'Assignment', 'name': 'client_secret_assignment', 'range': [2262, 2273], 'children': [{'type': 'CallExpression', 'name': 'getattr', 'range': [2264, 2272], 'children': [{'type': 'ArgumentList', 'name': 'arguments', 'range': [2265, 2272], 'children': [{'type': 'Argument', 'name': 'settings.secrets', 'range': [2266, 2269], 'children': []}, {'type': 'Argument', 'name': 'f"{provider_name.value}_client_secret"', 'range': [2270, 2271], 'children': []}]}]}]}, {'type': 'IfStatement', 'name': 'if_not_client_id_and_secret', 'range': [2274, 2303], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [2275, 2280], 'children': []}, {'type': 'Block', 'name': 'then', 'range': [2281, 2303], 'children': [{'type': 'RaiseStatement', 'name': 'raise_http_exception', 'range': [2283, 2302], 'children': [{'type': 'CallExpression', 'name': 'HTTPException', 'range': [2284, 2302], 'children': [{'type': 'ArgumentList', 'name': 'arguments', 'range': [2285, 2302], 'children': [{'type': 'Argument', 'name': 'status_code', 'range': [2287, 2289], 'children': []}, {'type': 'Argument', 'name': 'detail', 'range': [2292, 2297], 'children': []}]}]}]}]}]}, {'type': 'Assignment', 'name': 'handler_class_assignment', 'range': [2305, 2311], 'children': [{'type': 'SubscriptExpression', 'name': 'HANDLERS_BY_NAME[provider_name]', 'range': [2307, 2310], 'children': []}]}, {'type': 'Assignment', 'name': 'frontend_base_url_assignment', 'range': [2312, 2338], 'children': [{'type': 'ConditionalExpression', 'name': 'conditional_expression', 'range': [2314, 2337], 'children': [{'type': 'Condition', 'name': 'settings.config.frontend_base_url', 'range': [2316, 2321], 'children': []}, {'type': 'Condition', 'name': 'settings.config.platform_base_url', 'range': [2323, 2328], 'children': []}, {'type': 'Condition', 'name': 'str(req.base_url)', 'range': [2330, 2336], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return_handler_class', 'range': [2339, 2360], 'children': [{'type': 'CallExpression', 'name': 'handler_class', 'range': [2340, 2359], 'children': [{'type': 'ArgumentList', 'name': 'arguments', 'range': [2341, 2359], 'children': [{'type': 'Argument', 'name': 'client_id', 'range': [2343, 2345], 'children': []}, {'type': 'Argument', 'name': 'client_secret', 'range': [2348, 2350], 'children': []}, {'type': 'Argument', 'name': 'redirect_uri', 'range': [2353, 2356], 'children': []}]}]}]}]}]}]}
2025-01-08 10:30:29,029 - INFO - Completed main AST analysis flow
2025-01-08 10:30:29,031 - INFO - Successfully processed chunk
2025-01-08 10:31:00,519 - INFO - Step 5 result: {'type': 'Program', 'name': '', 'range': [0, 170], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 2], 'children': [{'type': 'ImportSpecifier', 'name': 'logging', 'range': [1, 1], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [3, 11], 'children': [{'type': 'ImportSpecifier', 'name': 'typing', 'range': [4, 4], 'children': []}, {'type': 'ImportSpecifier', 'name': 'TYPE_CHECKING', 'range': [6, 6], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Annotated', 'range': [8, 8], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Literal', 'range': [10, 10], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [13, 29], 'children': [{'type': 'ImportSpecifier', 'name': 'fastapi', 'range': [14, 14], 'children': []}, {'type': 'ImportSpecifier', 'name': 'APIRouter', 'range': [16, 16], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Body', 'range': [18, 18], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Depends', 'range': [20, 20], 'children': []}, {'type': 'ImportSpecifier', 'name': 'HTTPException', 'range': [22, 22], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Path', 'range': [24, 24], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Query', 'range': [26, 26], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Request', 'range': [28, 28], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [30, 38], 'children': [{'type': 'ImportSpecifier', 'name': 'pydantic', 'range': [31, 31], 'children': []}, {'type': 'ImportSpecifier', 'name': 'BaseModel', 'range': [33, 33], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Field', 'range': [35, 35], 'children': []}, {'type': 'ImportSpecifier', 'name': 'SecretStr', 'range': [37, 37], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [40, 48], 'children': [{'type': 'ImportSpecifier', 'name': 'backend.data.graph', 'range': [41, 45], 'children': []}, {'type': 'ImportSpecifier', 'name': 'set_node_webhook', 'range': [47, 47], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [49, 74], 'children': [{'type': 'ImportSpecifier', 'name': 'backend.data.integrations', 'range': [50, 54], 'children': []}, {'type': 'ImportSpecifier', 'name': 'WebhookEvent', 'range': [58, 58], 'children': []}, {'type': 'ImportSpecifier', 'name': 'get_all_webhooks_by_creds', 'range': [61, 61], 'children': []}, {'type': 'ImportSpecifier', 'name': 'get_webhook', 'range': [64, 64], 'children': []}, {'type': 'ImportSpecifier', 'name': 'publish_webhook_event', 'range': [67, 67], 'children': []}, {'type': 'ImportSpecifier', 'name': 'wait_for_webhook_event', 'range': [70, 70], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [75, 97], 'children': [{'type': 'ImportSpecifier', 'name': 'backend.data.model', 'range': [76, 80], 'children': []}, {'type': 'ImportSpecifier', 'name': 'APIKeyCredentials', 'range': [84, 84], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Credentials', 'range': [87, 87], 'children': []}, {'type': 'ImportSpecifier', 'name': 'CredentialsType', 'range': [90, 90], 'children': []}, {'type': 'ImportSpecifier', 'name': 'OAuth2Credentials', 'range': [93, 93], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [98, 106], 'children': [{'type': 'ImportSpecifier', 'name': 'backend.executor.manager', 'range': [99, 103], 'children': []}, {'type': 'ImportSpecifier', 'name': 'ExecutionManager', 'range': [105, 105], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [107, 115], 'children': [{'type': 'ImportSpecifier', 'name': 'backend.integrations.creds_manager', 'range': [108, 112], 'children': []}, {'type': 'ImportSpecifier', 'name': 'IntegrationCredentialsManager', 'range': [114, 114], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [116, 124], 'children': [{'type': 'ImportSpecifier', 'name': 'backend.integrations.oauth', 'range': [117, 121], 'children': []}, {'type': 'ImportSpecifier', 'name': 'HANDLERS_BY_NAME', 'range': [123, 123], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [125, 133], 'children': [{'type': 'ImportSpecifier', 'name': 'backend.integrations.providers', 'range': [126, 130], 'children': []}, {'type': 'ImportSpecifier', 'name': 'ProviderName', 'range': [132, 132], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [134, 142], 'children': [{'type': 'ImportSpecifier', 'name': 'backend.integrations.webhooks', 'range': [135, 139], 'children': []}, {'type': 'ImportSpecifier', 'name': 'WEBHOOK_MANAGERS_BY_NAME', 'range': [141, 141], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [143, 151], 'children': [{'type': 'ImportSpecifier', 'name': 'backend.util.exceptions', 'range': [144, 148], 'children': []}, {'type': 'ImportSpecifier', 'name': 'NeedConfirmation', 'range': [150, 150], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [152, 160], 'children': [{'type': 'ImportSpecifier', 'name': 'backend.util.service', 'range': [153, 157], 'children': []}, {'type': 'ImportSpecifier', 'name': 'get_service_client', 'range': [159, 159], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [161, 169], 'children': [{'type': 'ImportSpecifier', 'name': 'backend.util.settings', 'range': [162, 166], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Settings', 'range': [168, 168], 'children': []}]}]}
2025-01-08 10:31:00,519 - INFO - Completed main AST analysis flow
2025-01-08 10:31:00,520 - INFO - Successfully processed chunk
2025-01-08 10:31:05,950 - INFO - Step 4 result: {'type': 'Program', 'name': 'remove_all_webhooks_for_credentials', 'range': [2038, 2206], 'children': [{'type': 'FunctionDecl', 'name': 'remove_all_webhooks_for_credentials', 'range': [2038, 2206], 'children': [{'type': 'AsyncKeyword', 'name': 'async', 'range': [2038, 2042], 'children': []}, {'type': 'DefKeyword', 'name': 'def', 'range': [2039, 2042], 'children': []}, {'type': 'FunctionName', 'name': 'remove_all_webhooks_for_credentials', 'range': [2040, 2072], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [2041, 2053], 'children': [{'type': 'Parameter', 'name': 'credentials', 'range': [2043, 2045], 'children': []}, {'type': 'TypeAnnotation', 'name': 'Credentials', 'range': [2045, 2046], 'children': []}, {'type': 'Parameter', 'name': 'force', 'range': [2047, 2049], 'children': []}, {'type': 'TypeAnnotation', 'name': 'bool', 'range': [2049, 2050], 'children': []}, {'type': 'DefaultValue', 'name': 'False', 'range': [2051, 2052], 'children': []}]}, {'type': 'ReturnType', 'name': 'None', 'range': [2054, 2056], 'children': []}, {'type': 'FunctionBody', 'name': 'body', 'range': [2057, 2206], 'children': [{'type': 'Docstring', 'name': 'docstring', 'range': [2059, 2061], 'children': []}, {'type': 'Assignment', 'name': 'webhooks', 'range': [2063, 2072], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [2065, 2071], 'children': [{'type': 'CallExpression', 'name': 'get_all_webhooks_by_creds', 'range': [2066, 2071], 'children': [{'type': 'Argument', 'name': 'credentials.id', 'range': [2068, 2070], 'children': []}]}]}]}, {'type': 'IfStatement', 'name': 'if', 'range': [2073, 2103], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [2074, 2080], 'children': [{'type': 'MemberExpression', 'name': 'credentials.provider', 'range': [2075, 2076], 'children': []}, {'type': 'BinaryExpression', 'name': 'not in', 'range': [2077, 2079], 'children': []}, {'type': 'Identifier', 'name': 'WEBHOOK_MANAGERS_BY_NAME', 'range': [2079, 2080], 'children': []}]}, {'type': 'IfBody', 'name': 'body', 'range': [2081, 2103], 'children': [{'type': 'IfStatement', 'name': 'if', 'range': [2082, 2103], 'children': [{'type': 'Condition', 'name': 'webhooks', 'range': [2083, 2084], 'children': []}, {'type': 'IfBody', 'name': 'body', 'range': [2085, 2103], 'children': [{'type': 'ExpressionStatement', 'name': 'logger.error', 'range': [2086, 2100], 'children': [{'type': 'MemberExpression', 'name': 'logger.error', 'range': [2087, 2088], 'children': []}, {'type': 'Arguments', 'name': 'arguments', 'range': [2089, 2100], 'children': [{'type': 'Literal', 'name': 'f-string', 'range': [2091, 2092], 'children': []}, {'type': 'Literal', 'name': 'f-string', 'range': [2094, 2095], 'children': []}, {'type': 'Literal', 'name': 'f-string', 'range': [2097, 2098], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [2102, 2103], 'children': []}]}]}]}]}, {'type': 'IfStatement', 'name': 'if', 'range': [2104, 2127], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [2105, 2118], 'children': [{'type': 'CallExpression', 'name': 'any', 'range': [2106, 2114], 'children': [{'type': 'GeneratorExpression', 'name': 'generator', 'range': [2107, 2113], 'children': [{'type': 'MemberExpression', 'name': 'w.attached_nodes', 'range': [2108, 2109], 'children': []}, {'type': 'ForStatement', 'name': 'for', 'range': [2110, 2113], 'children': [{'type': 'VariableDeclaration', 'name': 'w', 'range': [2111, 2112], 'children': []}, {'type': 'InKeyword', 'name': 'in', 'range': [2112, 2113], 'children': []}, {'type': 'Identifier', 'name': 'webhooks', 'range': [2113, 2114], 'children': []}]}]}]}, {'type': 'LogicalExpression', 'name': 'and', 'range': [2115, 2116], 'children': []}, {'type': 'UnaryExpression', 'name': 'not', 'range': [2117, 2118], 'children': []}, {'type': 'Identifier', 'name': 'force', 'range': [2118, 2119], 'children': []}]}, {'type': 'IfBody', 'name': 'body', 'range': [2119, 2127], 'children': [{'type': 'RaiseStatement', 'name': 'raise', 'range': [2120, 2126], 'children': [{'type': 'Identifier', 'name': 'NeedConfirmation', 'range': [2121, 2122], 'children': []}, {'type': 'Arguments', 'name': 'arguments', 'range': [2122, 2126], 'children': [{'type': 'Literal', 'name': 'string', 'range': [2124, 2125], 'children': []}]}]}]}]}, {'type': 'ForStatement', 'name': 'for', 'range': [2128, 2160], 'children': [{'type': 'VariableDeclaration', 'name': 'webhook', 'range': [2129, 2130], 'children': []}, {'type': 'InKeyword', 'name': 'in', 'range': [2130, 2131], 'children': []}, {'type': 'Identifier', 'name': 'webhooks', 'range': [2131, 2132], 'children': []}, {'type': 'ForBody', 'name': 'body', 'range': [2133, 2160], 'children': [{'type': 'Comment', 'name': 'comment', 'range': [2134, 2138], 'children': []}, {'type': 'ForStatement', 'name': 'for', 'range': [2139, 2159], 'children': [{'type': 'VariableDeclaration', 'name': 'node', 'range': [2140, 2141], 'children': []}, {'type': 'InKeyword', 'name': 'in', 'range': [2141, 2142], 'children': []}, {'type': 'MemberExpression', 'name': 'webhook.attached_nodes', 'range': [2142, 2144], 'children': []}, {'type': 'LogicalExpression', 'name': 'or', 'range': [2145, 2146], 'children': []}, {'type': 'ArrayLiteral', 'name': '[]', 'range': [2146, 2147], 'children': []}, {'type': 'ForBody', 'name': 'body', 'range': [2148, 2159], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [2150, 2158], 'children': [{'type': 'CallExpression', 'name': 'set_node_webhook', 'range': [2151, 2158], 'children': [{'type': 'Argument', 'name': 'node.id', 'range': [2153, 2155], 'children': []}, {'type': 'Argument', 'name': 'None', 'range': [2157, 2158], 'children': []}]}]}]}]}]}]}, {'type': 'Comment', 'name': 'comment', 'range': [2161, 2165], 'children': []}, {'type': 'Assignment', 'name': 'webhook_manager', 'range': [2166, 2176], 'children': [{'type': 'MemberExpression', 'name': 'WEBHOOK_MANAGERS_BY_NAME[credentials.provider]', 'range': [2168, 2173], 'children': []}]}, {'type': 'Assignment', 'name': 'success', 'range': [2177, 2192], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [2179, 2191], 'children': [{'type': 'CallExpression', 'name': 'webhook_manager.prune_webhook_if_dangling', 'range': [2180, 2191], 'children': [{'type': 'Argument', 'name': 'webhook.id', 'range': [2185, 2187], 'children': []}, {'type': 'Argument', 'name': 'credentials', 'range': [2189, 2190], 'children': []}]}]}]}, {'type': 'IfStatement', 'name': 'if', 'range': [2193, 2205], 'children': [{'type': 'Condition', 'name': 'not success', 'range': [2194, 2196], 'children': []}, {'type': 'IfBody', 'name': 'body', 'range': [2197, 2205], 'children': [{'type': 'ExpressionStatement', 'name': 'logger.warning', 'range': [2198, 2204], 'children': [{'type': 'MemberExpression', 'name': 'logger.warning', 'range': [2199, 2200], 'children': []}, {'type': 'Arguments', 'name': 'arguments', 'range': [2201, 2204], 'children': [{'type': 'Literal', 'name': 'f-string', 'range': [2202, 2203], 'children': []}]}]}]}]}]}]}]}
2025-01-08 10:31:05,950 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:31:31,697 - INFO - Step 4 result: {'type': 'Program', 'name': 'webhook_ingress_generic', 'range': [1645, 1891], 'children': [{'type': 'FunctionDecl', 'name': 'webhook_ingress_generic', 'range': [1645, 1891], 'children': [{'type': 'Decorator', 'name': '@router.post', 'range': [1645, 1651], 'children': [{'type': 'Argument', 'name': '"/{provider}/webhooks/{webhook_id}/ingress"', 'range': [1650, 1650], 'children': []}]}, {'type': 'FunctionSignature', 'name': 'webhook_ingress_generic', 'range': [1653, 1697], 'children': [{'type': 'Parameter', 'name': 'request', 'range': [1658, 1660], 'children': []}, {'type': 'Parameter', 'name': 'provider', 'range': [1663, 1677], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated', 'range': [1665, 1677], 'children': [{'type': 'TypeArgument', 'name': 'ProviderName', 'range': [1668, 1668], 'children': []}, {'type': 'TypeArgument', 'name': 'Path', 'range': [1670, 1675], 'children': [{'type': 'Argument', 'name': 'title', 'range': [1672, 1674], 'children': []}]}]}]}, {'type': 'Parameter', 'name': 'webhook_id', 'range': [1680, 1692], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated', 'range': [1682, 1692], 'children': [{'type': 'TypeArgument', 'name': 'str', 'range': [1684, 1684], 'children': []}, {'type': 'TypeArgument', 'name': 'Path', 'range': [1686, 1691], 'children': [{'type': 'Argument', 'name': 'title', 'range': [1688, 1690], 'children': []}]}]}]}]}, {'type': 'FunctionBody', 'name': 'webhook_ingress_generic', 'range': [1698, 1891], 'children': [{'type': 'ExpressionStatement', 'name': 'logger.debug', 'range': [1698, 1705], 'children': [{'type': 'CallExpression', 'name': 'logger.debug', 'range': [1698, 1704], 'children': [{'type': 'Argument', 'name': 'f"Received {provider.value} webhook ingress for ID {webhook_id}"', 'range': [1702, 1703], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'webhook_manager', 'range': [1706, 1714], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [1707, 1713], 'children': [{'type': 'Identifier', 'name': 'WEBHOOK_MANAGERS_BY_NAME', 'range': [1708, 1708], 'children': []}, {'type': 'CallExpression', 'name': '[]', 'range': [1709, 1711], 'children': [{'type': 'Argument', 'name': 'provider', 'range': [1710, 1710], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'webhook', 'range': [1715, 1722], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [1717, 1721], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [1717, 1717], 'children': [{'type': 'CallExpression', 'name': 'get_webhook', 'range': [1718, 1721], 'children': [{'type': 'Argument', 'name': 'webhook_id', 'range': [1720, 1720], 'children': []}]}]}]}]}, {'type': 'ExpressionStatement', 'name': 'logger.debug', 'range': [1723, 1730], 'children': [{'type': 'CallExpression', 'name': 'logger.debug', 'range': [1723, 1729], 'children': [{'type': 'Argument', 'name': 'f"Webhook #{webhook_id}: {webhook}"', 'range': [1727, 1728], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'payload, event_type', 'range': [1731, 1744], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [1734, 1743], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [1735, 1735], 'children': [{'type': 'CallExpression', 'name': 'webhook_manager.validate_payload', 'range': [1736, 1743], 'children': [{'type': 'Argument', 'name': 'webhook', 'range': [1740, 1740], 'children': []}, {'type': 'Argument', 'name': 'request', 'range': [1742, 1742], 'children': []}]}]}]}]}, {'type': 'ExpressionStatement', 'name': 'logger.debug', 'range': [1745, 1756], 'children': [{'type': 'CallExpression', 'name': 'logger.debug', 'range': [1745, 1755], 'children': [{'type': 'Argument', 'name': 'f"Validated {provider.value} {webhook.webhook_type} {event_type} event "', 'range': [1750, 1751], 'children': []}, {'type': 'Argument', 'name': 'f"with payload {payload}"', 'range': [1753, 1754], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'webhook_event', 'range': [1759, 1785], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [1761, 1784], 'children': [{'type': 'NewExpression', 'name': 'WebhookEvent', 'range': [1761, 1784], 'children': [{'type': 'Argument', 'name': 'provider=provider', 'range': [1764, 1766], 'children': []}, {'type': 'Argument', 'name': 'webhook_id=webhook_id', 'range': [1769, 1771], 'children': []}, {'type': 'Argument', 'name': 'event_type=event_type', 'range': [1774, 1776], 'children': []}, {'type': 'Argument', 'name': 'payload=payload', 'range': [1779, 1781], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': 'await publish_webhook_event', 'range': [1786, 1791], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [1786, 1786], 'children': [{'type': 'CallExpression', 'name': 'publish_webhook_event', 'range': [1787, 1790], 'children': [{'type': 'Argument', 'name': 'webhook_event', 'range': [1789, 1789], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': 'logger.debug', 'range': [1792, 1799], 'children': [{'type': 'CallExpression', 'name': 'logger.debug', 'range': [1792, 1798], 'children': [{'type': 'Argument', 'name': 'f"Webhook event published: {webhook_event}"', 'range': [1796, 1797], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if not webhook.attached_nodes', 'range': [1801, 1809], 'children': [{'type': 'Condition', 'name': 'not webhook.attached_nodes', 'range': [1802, 1806], 'children': [{'type': 'UnaryExpression', 'name': 'not', 'range': [1802, 1802], 'children': [{'type': 'MemberExpression', 'name': 'webhook.attached_nodes', 'range': [1803, 1805], 'children': []}]}]}, {'type': 'BlockStatement', 'name': 'return', 'range': [1807, 1809], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [1808, 1808], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'executor', 'range': [1811, 1817], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [1812, 1816], 'children': [{'type': 'CallExpression', 'name': 'get_service_client', 'range': [1813, 1816], 'children': [{'type': 'Argument', 'name': 'ExecutionManager', 'range': [1815, 1815], 'children': []}]}]}]}, {'type': 'ForStatement', 'name': 'for node in webhook.attached_nodes', 'range': [1818, 1891], 'children': [{'type': 'Initialization', 'name': 'node in webhook.attached_nodes', 'range': [1819, 1824], 'children': [{'type': 'VariableDeclaration', 'name': 'node', 'range': [1819, 1819], 'children': []}, {'type': 'MemberExpression', 'name': 'webhook.attached_nodes', 'range': [1821, 1823], 'children': []}]}, {'type': 'BlockStatement', 'name': 'for block', 'range': [1825, 1891], 'children': [{'type': 'ExpressionStatement', 'name': 'logger.debug', 'range': [1826, 1833], 'children': [{'type': 'CallExpression', 'name': 'logger.debug', 'range': [1826, 1832], 'children': [{'type': 'Argument', 'name': 'f"Webhook-attached node: {node}"', 'range': [1830, 1831], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if not node.is_triggered_by_event_type', 'range': [1834, 1853], 'children': [{'type': 'Condition', 'name': 'not node.is_triggered_by_event_type', 'range': [1835, 1842], 'children': [{'type': 'UnaryExpression', 'name': 'not', 'range': [1835, 1835], 'children': [{'type': 'CallExpression', 'name': 'node.is_triggered_by_event_type', 'range': [1836, 1841], 'children': [{'type': 'Argument', 'name': 'event_type', 'range': [1840, 1840], 'children': []}]}]}]}, {'type': 'BlockStatement', 'name': 'continue', 'range': [1843, 1853], 'children': [{'type': 'ContinueStatement', 'name': 'continue', 'range': [1852, 1852], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'logger.debug', 'range': [1854, 1861], 'children': [{'type': 'CallExpression', 'name': 'logger.debug', 'range': [1854, 1860], 'children': [{'type': 'Argument', 'name': 'f"Executing graph #{node.graph_id} node #{node.id}"', 'range': [1858, 1859], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'executor.add_execution', 'range': [1862, 1890], 'children': [{'type': 'CallExpression', 'name': 'executor.add_execution', 'range': [1862, 1889], 'children': [{'type': 'Argument', 'name': 'node.graph_id', 'range': [1867, 1869], 'children': []}, {'type': 'Argument', 'name': 'data={f"webhook_{webhook_id}_payload":payload}', 'range': [1872, 1879], 'children': []}, {'type': 'Argument', 'name': 'user_id=webhook.user_id', 'range': [1882, 1886], 'children': []}]}]}]}]}]}]}]}
2025-01-08 10:31:31,697 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:32:02,972 - INFO - Step 5 result: {'type': 'Program', 'name': 'remove_all_webhooks_for_credentials', 'range': [2038, 2206], 'children': [{'type': 'FunctionDecl', 'name': 'remove_all_webhooks_for_credentials', 'range': [2038, 2206], 'children': [{'type': 'AsyncKeyword', 'name': 'async', 'range': [2038, 2042], 'children': []}, {'type': 'DefKeyword', 'name': 'def', 'range': [2039, 2042], 'children': []}, {'type': 'FunctionName', 'name': 'remove_all_webhooks_for_credentials', 'range': [2040, 2072], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [2041, 2053], 'children': [{'type': 'Parameter', 'name': 'credentials', 'range': [2043, 2045], 'children': []}, {'type': 'TypeAnnotation', 'name': 'Credentials', 'range': [2045, 2046], 'children': []}, {'type': 'Parameter', 'name': 'force', 'range': [2047, 2049], 'children': []}, {'type': 'TypeAnnotation', 'name': 'bool', 'range': [2049, 2050], 'children': []}, {'type': 'DefaultValue', 'name': 'False', 'range': [2051, 2052], 'children': []}]}, {'type': 'ReturnType', 'name': 'None', 'range': [2054, 2056], 'children': []}, {'type': 'FunctionBody', 'name': 'body', 'range': [2057, 2206], 'children': [{'type': 'Docstring', 'name': 'docstring', 'range': [2059, 2061], 'children': []}, {'type': 'Assignment', 'name': 'webhooks', 'range': [2063, 2072], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [2065, 2071], 'children': [{'type': 'CallExpression', 'name': 'get_all_webhooks_by_creds', 'range': [2066, 2071], 'children': [{'type': 'Argument', 'name': 'credentials.id', 'range': [2068, 2070], 'children': []}]}]}]}, {'type': 'IfStatement', 'name': 'if', 'range': [2073, 2103], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [2074, 2080], 'children': [{'type': 'MemberExpression', 'name': 'credentials.provider', 'range': [2075, 2076], 'children': []}, {'type': 'BinaryExpression', 'name': 'not in', 'range': [2077, 2079], 'children': []}, {'type': 'Identifier', 'name': 'WEBHOOK_MANAGERS_BY_NAME', 'range': [2079, 2080], 'children': []}]}, {'type': 'IfBody', 'name': 'body', 'range': [2081, 2103], 'children': [{'type': 'IfStatement', 'name': 'if', 'range': [2082, 2103], 'children': [{'type': 'Condition', 'name': 'webhooks', 'range': [2083, 2084], 'children': []}, {'type': 'IfBody', 'name': 'body', 'range': [2085, 2103], 'children': [{'type': 'ExpressionStatement', 'name': 'logger.error', 'range': [2086, 2100], 'children': [{'type': 'MemberExpression', 'name': 'logger.error', 'range': [2087, 2088], 'children': []}, {'type': 'Arguments', 'name': 'arguments', 'range': [2089, 2100], 'children': [{'type': 'Literal', 'name': 'f-string', 'range': [2091, 2092], 'children': []}, {'type': 'Literal', 'name': 'f-string', 'range': [2094, 2095], 'children': []}, {'type': 'Literal', 'name': 'f-string', 'range': [2097, 2098], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [2102, 2103], 'children': []}]}]}]}]}, {'type': 'IfStatement', 'name': 'if', 'range': [2104, 2127], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [2105, 2118], 'children': [{'type': 'CallExpression', 'name': 'any', 'range': [2106, 2114], 'children': [{'type': 'GeneratorExpression', 'name': 'generator', 'range': [2107, 2113], 'children': [{'type': 'MemberExpression', 'name': 'w.attached_nodes', 'range': [2108, 2109], 'children': []}, {'type': 'ForStatement', 'name': 'for', 'range': [2110, 2113], 'children': [{'type': 'VariableDeclaration', 'name': 'w', 'range': [2111, 2112], 'children': []}, {'type': 'InKeyword', 'name': 'in', 'range': [2112, 2113], 'children': []}, {'type': 'Identifier', 'name': 'webhooks', 'range': [2113, 2114], 'children': []}]}]}]}, {'type': 'LogicalExpression', 'name': 'and', 'range': [2115, 2116], 'children': []}, {'type': 'UnaryExpression', 'name': 'not', 'range': [2117, 2118], 'children': []}, {'type': 'Identifier', 'name': 'force', 'range': [2118, 2119], 'children': []}]}, {'type': 'IfBody', 'name': 'body', 'range': [2119, 2127], 'children': [{'type': 'RaiseStatement', 'name': 'raise', 'range': [2120, 2126], 'children': [{'type': 'Identifier', 'name': 'NeedConfirmation', 'range': [2121, 2122], 'children': []}, {'type': 'Arguments', 'name': 'arguments', 'range': [2122, 2126], 'children': [{'type': 'Literal', 'name': 'string', 'range': [2124, 2125], 'children': []}]}]}]}]}, {'type': 'ForStatement', 'name': 'for', 'range': [2128, 2160], 'children': [{'type': 'VariableDeclaration', 'name': 'webhook', 'range': [2129, 2130], 'children': []}, {'type': 'InKeyword', 'name': 'in', 'range': [2130, 2131], 'children': []}, {'type': 'Identifier', 'name': 'webhooks', 'range': [2131, 2132], 'children': []}, {'type': 'ForBody', 'name': 'body', 'range': [2133, 2160], 'children': [{'type': 'Comment', 'name': 'comment', 'range': [2134, 2138], 'children': []}, {'type': 'ForStatement', 'name': 'for', 'range': [2139, 2159], 'children': [{'type': 'VariableDeclaration', 'name': 'node', 'range': [2140, 2141], 'children': []}, {'type': 'InKeyword', 'name': 'in', 'range': [2141, 2142], 'children': []}, {'type': 'MemberExpression', 'name': 'webhook.attached_nodes', 'range': [2142, 2144], 'children': []}, {'type': 'LogicalExpression', 'name': 'or', 'range': [2145, 2146], 'children': []}, {'type': 'ArrayLiteral', 'name': '[]', 'range': [2146, 2147], 'children': []}, {'type': 'ForBody', 'name': 'body', 'range': [2148, 2159], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [2150, 2158], 'children': [{'type': 'CallExpression', 'name': 'set_node_webhook', 'range': [2151, 2158], 'children': [{'type': 'Argument', 'name': 'node.id', 'range': [2153, 2155], 'children': []}, {'type': 'Argument', 'name': 'None', 'range': [2157, 2158], 'children': []}]}]}]}]}]}]}, {'type': 'Comment', 'name': 'comment', 'range': [2161, 2165], 'children': []}, {'type': 'Assignment', 'name': 'webhook_manager', 'range': [2166, 2176], 'children': [{'type': 'MemberExpression', 'name': 'WEBHOOK_MANAGERS_BY_NAME[credentials.provider]', 'range': [2168, 2173], 'children': []}]}, {'type': 'Assignment', 'name': 'success', 'range': [2177, 2192], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [2179, 2191], 'children': [{'type': 'CallExpression', 'name': 'webhook_manager.prune_webhook_if_dangling', 'range': [2180, 2191], 'children': [{'type': 'Argument', 'name': 'webhook.id', 'range': [2185, 2187], 'children': []}, {'type': 'Argument', 'name': 'credentials', 'range': [2189, 2190], 'children': []}]}]}]}, {'type': 'IfStatement', 'name': 'if', 'range': [2193, 2205], 'children': [{'type': 'Condition', 'name': 'not success', 'range': [2194, 2196], 'children': []}, {'type': 'IfBody', 'name': 'body', 'range': [2197, 2205], 'children': [{'type': 'ExpressionStatement', 'name': 'logger.warning', 'range': [2198, 2204], 'children': [{'type': 'MemberExpression', 'name': 'logger.warning', 'range': [2199, 2200], 'children': []}, {'type': 'Arguments', 'name': 'arguments', 'range': [2201, 2204], 'children': [{'type': 'Literal', 'name': 'f-string', 'range': [2202, 2203], 'children': []}]}]}]}]}]}]}]}
2025-01-08 10:32:02,972 - INFO - Completed main AST analysis flow
2025-01-08 10:32:02,974 - INFO - Successfully processed chunk
2025-01-08 10:32:37,066 - INFO - Step 5 result: {'type': 'Program', 'name': 'webhook_ingress_generic', 'range': [1645, 1891], 'children': [{'type': 'FunctionDecl', 'name': 'webhook_ingress_generic', 'range': [1645, 1891], 'children': [{'type': 'Decorator', 'name': '@router.post', 'range': [1645, 1651], 'children': [{'type': 'Argument', 'name': '"/{provider}/webhooks/{webhook_id}/ingress"', 'range': [1650, 1650], 'children': []}]}, {'type': 'FunctionSignature', 'name': 'webhook_ingress_generic', 'range': [1653, 1697], 'children': [{'type': 'Parameter', 'name': 'request', 'range': [1658, 1660], 'children': []}, {'type': 'Parameter', 'name': 'provider', 'range': [1663, 1677], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated', 'range': [1665, 1677], 'children': [{'type': 'TypeArgument', 'name': 'ProviderName', 'range': [1668, 1668], 'children': []}, {'type': 'TypeArgument', 'name': 'Path', 'range': [1670, 1675], 'children': [{'type': 'Argument', 'name': 'title', 'range': [1672, 1674], 'children': []}]}]}]}, {'type': 'Parameter', 'name': 'webhook_id', 'range': [1680, 1692], 'children': [{'type': 'TypeAnnotation', 'name': 'Annotated', 'range': [1682, 1692], 'children': [{'type': 'TypeArgument', 'name': 'str', 'range': [1684, 1684], 'children': []}, {'type': 'TypeArgument', 'name': 'Path', 'range': [1686, 1691], 'children': [{'type': 'Argument', 'name': 'title', 'range': [1688, 1690], 'children': []}]}]}]}]}, {'type': 'FunctionBody', 'name': 'webhook_ingress_generic', 'range': [1698, 1891], 'children': [{'type': 'ExpressionStatement', 'name': 'logger.debug', 'range': [1698, 1705], 'children': [{'type': 'CallExpression', 'name': 'logger.debug', 'range': [1698, 1704], 'children': [{'type': 'Argument', 'name': 'f"Received {provider.value} webhook ingress for ID {webhook_id}"', 'range': [1702, 1703], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'webhook_manager', 'range': [1706, 1714], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [1707, 1713], 'children': [{'type': 'Identifier', 'name': 'WEBHOOK_MANAGERS_BY_NAME', 'range': [1708, 1708], 'children': []}, {'type': 'CallExpression', 'name': '[]', 'range': [1709, 1711], 'children': [{'type': 'Argument', 'name': 'provider', 'range': [1710, 1710], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'webhook', 'range': [1715, 1722], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [1717, 1721], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [1717, 1717], 'children': [{'type': 'CallExpression', 'name': 'get_webhook', 'range': [1718, 1721], 'children': [{'type': 'Argument', 'name': 'webhook_id', 'range': [1720, 1720], 'children': []}]}]}]}]}, {'type': 'ExpressionStatement', 'name': 'logger.debug', 'range': [1723, 1730], 'children': [{'type': 'CallExpression', 'name': 'logger.debug', 'range': [1723, 1729], 'children': [{'type': 'Argument', 'name': 'f"Webhook #{webhook_id}: {webhook}"', 'range': [1727, 1728], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'payload, event_type', 'range': [1731, 1744], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [1734, 1743], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [1735, 1735], 'children': [{'type': 'CallExpression', 'name': 'webhook_manager.validate_payload', 'range': [1736, 1743], 'children': [{'type': 'Argument', 'name': 'webhook', 'range': [1740, 1740], 'children': []}, {'type': 'Argument', 'name': 'request', 'range': [1742, 1742], 'children': []}]}]}]}]}, {'type': 'ExpressionStatement', 'name': 'logger.debug', 'range': [1745, 1756], 'children': [{'type': 'CallExpression', 'name': 'logger.debug', 'range': [1745, 1755], 'children': [{'type': 'Argument', 'name': 'f"Validated {provider.value} {webhook.webhook_type} {event_type} event "', 'range': [1750, 1751], 'children': []}, {'type': 'Argument', 'name': 'f"with payload {payload}"', 'range': [1753, 1754], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'webhook_event', 'range': [1759, 1785], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [1761, 1784], 'children': [{'type': 'NewExpression', 'name': 'WebhookEvent', 'range': [1761, 1784], 'children': [{'type': 'Argument', 'name': 'provider=provider', 'range': [1764, 1766], 'children': []}, {'type': 'Argument', 'name': 'webhook_id=webhook_id', 'range': [1769, 1771], 'children': []}, {'type': 'Argument', 'name': 'event_type=event_type', 'range': [1774, 1776], 'children': []}, {'type': 'Argument', 'name': 'payload=payload', 'range': [1779, 1781], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': 'await publish_webhook_event', 'range': [1786, 1791], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [1786, 1786], 'children': [{'type': 'CallExpression', 'name': 'publish_webhook_event', 'range': [1787, 1790], 'children': [{'type': 'Argument', 'name': 'webhook_event', 'range': [1789, 1789], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': 'logger.debug', 'range': [1792, 1799], 'children': [{'type': 'CallExpression', 'name': 'logger.debug', 'range': [1792, 1798], 'children': [{'type': 'Argument', 'name': 'f"Webhook event published: {webhook_event}"', 'range': [1796, 1797], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if not webhook.attached_nodes', 'range': [1801, 1809], 'children': [{'type': 'Condition', 'name': 'not webhook.attached_nodes', 'range': [1802, 1806], 'children': [{'type': 'UnaryExpression', 'name': 'not', 'range': [1802, 1802], 'children': [{'type': 'MemberExpression', 'name': 'webhook.attached_nodes', 'range': [1803, 1805], 'children': []}]}]}, {'type': 'BlockStatement', 'name': 'return', 'range': [1807, 1809], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [1808, 1808], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'executor', 'range': [1811, 1817], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [1812, 1816], 'children': [{'type': 'CallExpression', 'name': 'get_service_client', 'range': [1813, 1816], 'children': [{'type': 'Argument', 'name': 'ExecutionManager', 'range': [1815, 1815], 'children': []}]}]}]}, {'type': 'ForStatement', 'name': 'for node in webhook.attached_nodes', 'range': [1818, 1891], 'children': [{'type': 'Initialization', 'name': 'node in webhook.attached_nodes', 'range': [1819, 1824], 'children': [{'type': 'VariableDeclaration', 'name': 'node', 'range': [1819, 1819], 'children': []}, {'type': 'MemberExpression', 'name': 'webhook.attached_nodes', 'range': [1821, 1823], 'children': []}]}, {'type': 'BlockStatement', 'name': 'for block', 'range': [1825, 1891], 'children': [{'type': 'ExpressionStatement', 'name': 'logger.debug', 'range': [1826, 1833], 'children': [{'type': 'CallExpression', 'name': 'logger.debug', 'range': [1826, 1832], 'children': [{'type': 'Argument', 'name': 'f"Webhook-attached node: {node}"', 'range': [1830, 1831], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if not node.is_triggered_by_event_type', 'range': [1834, 1853], 'children': [{'type': 'Condition', 'name': 'not node.is_triggered_by_event_type', 'range': [1835, 1842], 'children': [{'type': 'UnaryExpression', 'name': 'not', 'range': [1835, 1835], 'children': [{'type': 'CallExpression', 'name': 'node.is_triggered_by_event_type', 'range': [1836, 1841], 'children': [{'type': 'Argument', 'name': 'event_type', 'range': [1840, 1840], 'children': []}]}]}]}, {'type': 'BlockStatement', 'name': 'continue', 'range': [1843, 1853], 'children': [{'type': 'ContinueStatement', 'name': 'continue', 'range': [1852, 1852], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'logger.debug', 'range': [1854, 1861], 'children': [{'type': 'CallExpression', 'name': 'logger.debug', 'range': [1854, 1860], 'children': [{'type': 'Argument', 'name': 'f"Executing graph #{node.graph_id} node #{node.id}"', 'range': [1858, 1859], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'executor.add_execution', 'range': [1862, 1890], 'children': [{'type': 'CallExpression', 'name': 'executor.add_execution', 'range': [1862, 1889], 'children': [{'type': 'Argument', 'name': 'node.graph_id', 'range': [1867, 1869], 'children': []}, {'type': 'Argument', 'name': 'data={f"webhook_{webhook_id}_payload":payload}', 'range': [1872, 1879], 'children': []}, {'type': 'Argument', 'name': 'user_id=webhook.user_id', 'range': [1882, 1886], 'children': []}]}]}]}]}]}]}]}
2025-01-08 10:32:37,066 - INFO - Completed main AST analysis flow
2025-01-08 10:32:37,068 - INFO - Successfully processed chunk
2025-01-08 10:32:37,147 - INFO - Starting code generation from AST
2025-01-08 10:33:52,411 - INFO - Successfully generated code from AST
2025-01-08 10:33:52,412 - INFO - Starting static code similarity comparison
2025-01-08 10:33:52,478 - INFO - Static similarity result: {'final_score': 99.78, 'length_similarity': 99.92, 'token_similarity': 100.0, 'structure_similarity': 99.15, 'function_similarity': 100, 'complexity_similarity': 100.0, 'variable_similarity': 100}
