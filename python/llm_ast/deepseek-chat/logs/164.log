2025-01-08 10:23:55,071 - INFO - Processing sample 164
2025-01-08 10:23:55,071 - INFO - Starting Step 0: Splitting code into top-level declarations
2025-01-08 10:23:57,576 - INFO - Successfully split code into 2 top-level declarations
2025-01-08 10:23:57,577 - INFO - Processing chunk #0 (size=779 chars, start_index=0)
2025-01-08 10:23:57,577 - INFO - Processing chunk with 779 chars starting at index 0
2025-01-08 10:23:57,578 - INFO - Starting main AST analysis flow
2025-01-08 10:23:57,578 - INFO - Tokenized code into 56 tokens
2025-01-08 10:23:57,578 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:23:57,582 - INFO - Processing chunk #1 (size=72 chars, start_index=56)
2025-01-08 10:23:57,583 - INFO - Processing chunk with 72 chars starting at index 56
2025-01-08 10:23:57,583 - INFO - Starting main AST analysis flow
2025-01-08 10:23:57,583 - INFO - Tokenized code into 20 tokens
2025-01-08 10:23:57,583 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:23:59,468 - INFO - Step 1 result: {'type': 'Program', 'name': 'get_highest_set_bit_position', 'range': [0, 55], 'children': []}
2025-01-08 10:23:59,468 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:24:00,781 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [56, 75], 'children': [{'type': 'IfStatement', 'name': '', 'range': [58, 63], 'children': []}, {'type': 'ImportStatement', 'name': 'doctest', 'range': [65, 66], 'children': []}, {'type': 'ExpressionStatement', 'name': '', 'range': [69, 73], 'children': []}]}
2025-01-08 10:24:00,782 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:24:09,852 - INFO - Step 2 result: {'type': 'Program', 'name': '', 'range': [56, 75], 'children': [{'type': 'IfStatement', 'name': '', 'range': [58, 63], 'children': [{'type': 'Condition', 'name': '', 'range': [59, 62], 'children': [{'type': 'Variable', 'name': '__name__', 'range': [59, 59], 'children': []}, {'type': 'Operator', 'name': '==', 'range': [60, 61], 'children': []}, {'type': 'StringLiteral', 'name': '"__main__"', 'range': [62, 62], 'children': []}]}]}, {'type': 'ImportStatement', 'name': 'doctest', 'range': [65, 66], 'children': [{'type': 'Module', 'name': 'doctest', 'range': [66, 66], 'children': []}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [69, 73], 'children': [{'type': 'CallExpression', 'name': '', 'range': [69, 73], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [69, 71], 'children': [{'type': 'Identifier', 'name': 'doctest', 'range': [69, 69], 'children': []}, {'type': 'Property', 'name': 'testmod', 'range': [71, 71], 'children': []}]}, {'type': 'Arguments', 'name': '', 'range': [72, 73], 'children': []}]}]}]}
2025-01-08 10:24:09,853 - INFO - Starting Step 3: AST simplification
2025-01-08 10:24:12,370 - INFO - Step 2 result: {'type': 'Program', 'name': 'get_highest_set_bit_position', 'range': [0, 55], 'children': [{'type': 'FunctionDeclaration', 'name': 'get_highest_set_bit_position', 'range': [0, 55], 'children': [{'type': 'Parameter', 'name': 'number', 'range': [3, 5], 'children': []}, {'type': 'ReturnType', 'name': 'int', 'range': [9, 9], 'children': []}, {'type': 'Docstring', 'name': '', 'range': [12, 14], 'children': []}, {'type': 'IfStatement', 'name': '', 'range': [16, 31], 'children': [{'type': 'Condition', 'name': '', 'range': [17, 23], 'children': [{'type': 'FunctionCall', 'name': 'isinstance', 'range': [18, 23], 'children': [{'type': 'Argument', 'name': 'number', 'range': [20, 20], 'children': []}, {'type': 'Argument', 'name': 'int', 'range': [22, 22], 'children': []}]}]}, {'type': 'RaiseStatement', 'name': '', 'range': [26, 30], 'children': [{'type': 'ExceptionType', 'name': 'TypeError', 'range': [27, 27], 'children': []}, {'type': 'Message', 'name': "Input value must be an 'int' type", 'range': [29, 29], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'position', 'range': [33, 35], 'children': []}, {'type': 'WhileLoop', 'name': '', 'range': [37, 51], 'children': [{'type': 'Condition', 'name': 'number', 'range': [38, 38], 'children': []}, {'type': 'Increment', 'name': 'position', 'range': [41, 44], 'children': []}, {'type': 'ShiftOperation', 'name': 'number', 'range': [46, 50], 'children': []}]}, {'type': 'ReturnStatement', 'name': '', 'range': [53, 54], 'children': [{'type': 'ReturnValue', 'name': 'position', 'range': [54, 54], 'children': []}]}]}]}
2025-01-08 10:24:12,371 - INFO - Starting Step 3: AST simplification
2025-01-08 10:24:19,168 - INFO - Step 3 result: {'type': 'Program', 'name': '', 'range': [56, 75], 'children': [{'type': 'IfStatement', 'name': '', 'range': [58, 63], 'children': [{'type': 'Condition', 'name': '', 'range': [59, 62], 'children': [{'type': 'Variable', 'name': '__name__', 'range': [59, 59], 'children': []}, {'type': 'Operator', 'name': '==', 'range': [60, 61], 'children': []}, {'type': 'StringLiteral', 'name': '"__main__"', 'range': [62, 62], 'children': []}]}]}, {'type': 'ImportStatement', 'name': 'doctest', 'range': [65, 66], 'children': [{'type': 'Module', 'name': 'doctest', 'range': [66, 66], 'children': []}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [69, 73], 'children': [{'type': 'CallExpression', 'name': '', 'range': [69, 73], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [69, 71], 'children': [{'type': 'Identifier', 'name': 'doctest', 'range': [69, 69], 'children': []}, {'type': 'Property', 'name': 'testmod', 'range': [71, 71], 'children': []}]}]}]}]}
2025-01-08 10:24:19,168 - INFO - Starting Step 4: AST normalization
2025-01-08 10:24:27,316 - INFO - Step 3 result: {'type': 'Program', 'name': 'get_highest_set_bit_position', 'range': [0, 55], 'children': [{'type': 'FunctionDeclaration', 'name': 'get_highest_set_bit_position', 'range': [0, 55], 'children': [{'type': 'Parameter', 'name': 'number', 'range': [3, 5], 'children': []}, {'type': 'ReturnType', 'name': 'int', 'range': [9, 9], 'children': []}, {'type': 'Docstring', 'name': '', 'range': [12, 14], 'children': []}, {'type': 'IfStatement', 'name': '', 'range': [16, 31], 'children': [{'type': 'Condition', 'name': '', 'range': [17, 23], 'children': [{'type': 'FunctionCall', 'name': 'isinstance', 'range': [18, 23], 'children': [{'type': 'Argument', 'name': 'number', 'range': [20, 20], 'children': []}, {'type': 'Argument', 'name': 'int', 'range': [22, 22], 'children': []}]}]}, {'type': 'RaiseStatement', 'name': '', 'range': [26, 30], 'children': [{'type': 'ExceptionType', 'name': 'TypeError', 'range': [27, 27], 'children': []}, {'type': 'Message', 'name': "Input value must be an 'int' type", 'range': [29, 29], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'position', 'range': [33, 35], 'children': []}, {'type': 'WhileLoop', 'name': '', 'range': [37, 51], 'children': [{'type': 'Condition', 'name': 'number', 'range': [38, 38], 'children': []}, {'type': 'Increment', 'name': 'position', 'range': [41, 44], 'children': []}, {'type': 'ShiftOperation', 'name': 'number', 'range': [46, 50], 'children': []}]}, {'type': 'ReturnStatement', 'name': '', 'range': [53, 54], 'children': [{'type': 'ReturnValue', 'name': 'position', 'range': [54, 54], 'children': []}]}]}]}
2025-01-08 10:24:27,316 - INFO - Starting Step 4: AST normalization
2025-01-08 10:24:28,181 - INFO - Step 4 result: {'type': 'Program', 'name': '', 'range': [56, 75], 'children': [{'type': 'IfStatement', 'name': '', 'range': [58, 63], 'children': [{'type': 'BinaryExpression', 'name': '', 'range': [59, 62], 'children': [{'type': 'Identifier', 'name': '__name__', 'range': [59, 59], 'children': []}, {'type': 'Operator', 'name': '==', 'range': [60, 61], 'children': []}, {'type': 'Literal', 'name': '"__main__"', 'range': [62, 62], 'children': []}]}]}, {'type': 'ImportStatement', 'name': 'doctest', 'range': [65, 66], 'children': [{'type': 'Module', 'name': 'doctest', 'range': [66, 66], 'children': []}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [69, 73], 'children': [{'type': 'CallExpression', 'name': '', 'range': [69, 73], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [69, 71], 'children': [{'type': 'Identifier', 'name': 'doctest', 'range': [69, 69], 'children': []}, {'type': 'Identifier', 'name': 'testmod', 'range': [71, 71], 'children': []}]}]}]}]}
2025-01-08 10:24:28,181 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:24:37,390 - INFO - Step 5 result: {'type': 'Program', 'name': '', 'range': [56, 75], 'children': [{'type': 'IfStatement', 'name': '', 'range': [58, 63], 'children': [{'type': 'BinaryExpression', 'name': '', 'range': [59, 62], 'children': [{'type': 'Identifier', 'name': '__name__', 'range': [59, 59], 'children': []}, {'type': 'Operator', 'name': '==', 'range': [60, 61], 'children': []}, {'type': 'Literal', 'name': '"__main__"', 'range': [62, 62], 'children': []}]}]}, {'type': 'ImportStatement', 'name': 'doctest', 'range': [65, 66], 'children': [{'type': 'Module', 'name': 'doctest', 'range': [66, 66], 'children': []}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [69, 73], 'children': [{'type': 'CallExpression', 'name': '', 'range': [69, 73], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [69, 71], 'children': [{'type': 'Identifier', 'name': 'doctest', 'range': [69, 69], 'children': []}, {'type': 'Identifier', 'name': 'testmod', 'range': [71, 71], 'children': []}]}]}]}]}
2025-01-08 10:24:37,390 - INFO - Completed main AST analysis flow
2025-01-08 10:24:37,390 - INFO - Successfully processed chunk
2025-01-08 10:24:39,825 - INFO - Step 4 result: {'type': 'Program', 'name': 'get_highest_set_bit_position', 'range': [0, 55], 'children': [{'type': 'FunctionDecl', 'name': 'get_highest_set_bit_position', 'range': [0, 55], 'children': [{'type': 'Parameter', 'name': 'number', 'range': [3, 5], 'children': []}, {'type': 'ReturnType', 'name': 'int', 'range': [9, 9], 'children': []}, {'type': 'Docstring', 'name': '', 'range': [12, 14], 'children': []}, {'type': 'IfStatement', 'name': '', 'range': [16, 31], 'children': [{'type': 'Condition', 'name': '', 'range': [17, 23], 'children': [{'type': 'CallExpression', 'name': 'isinstance', 'range': [18, 23], 'children': [{'type': 'Argument', 'name': 'number', 'range': [20, 20], 'children': []}, {'type': 'Argument', 'name': 'int', 'range': [22, 22], 'children': []}]}]}, {'type': 'RaiseStatement', 'name': '', 'range': [26, 30], 'children': [{'type': 'ExceptionType', 'name': 'TypeError', 'range': [27, 27], 'children': []}, {'type': 'Message', 'name': "Input value must be an 'int' type", 'range': [29, 29], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'position', 'range': [33, 35], 'children': []}, {'type': 'WhileStatement', 'name': '', 'range': [37, 51], 'children': [{'type': 'Condition', 'name': 'number', 'range': [38, 38], 'children': []}, {'type': 'Increment', 'name': 'position', 'range': [41, 44], 'children': []}, {'type': 'ShiftOperation', 'name': 'number', 'range': [46, 50], 'children': []}]}, {'type': 'ReturnStatement', 'name': '', 'range': [53, 54], 'children': [{'type': 'ReturnValue', 'name': 'position', 'range': [54, 54], 'children': []}]}]}]}
2025-01-08 10:24:39,825 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:24:52,572 - INFO - Step 5 result: {'type': 'Program', 'name': 'get_highest_set_bit_position', 'range': [0, 55], 'children': [{'type': 'FunctionDecl', 'name': 'get_highest_set_bit_position', 'range': [0, 55], 'children': [{'type': 'Parameter', 'name': 'number', 'range': [3, 5], 'children': []}, {'type': 'ReturnType', 'name': 'int', 'range': [9, 9], 'children': []}, {'type': 'Docstring', 'name': '', 'range': [12, 14], 'children': []}, {'type': 'IfStatement', 'name': '', 'range': [16, 31], 'children': [{'type': 'Condition', 'name': '', 'range': [17, 23], 'children': [{'type': 'CallExpression', 'name': 'isinstance', 'range': [18, 23], 'children': [{'type': 'Argument', 'name': 'number', 'range': [20, 20], 'children': []}, {'type': 'Argument', 'name': 'int', 'range': [22, 22], 'children': []}]}]}, {'type': 'RaiseStatement', 'name': '', 'range': [26, 30], 'children': [{'type': 'ExceptionType', 'name': 'TypeError', 'range': [27, 27], 'children': []}, {'type': 'Message', 'name': "Input value must be an 'int' type", 'range': [29, 29], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'position', 'range': [33, 35], 'children': []}, {'type': 'WhileStatement', 'name': '', 'range': [37, 51], 'children': [{'type': 'Condition', 'name': 'number', 'range': [38, 38], 'children': []}, {'type': 'Increment', 'name': 'position', 'range': [41, 44], 'children': []}, {'type': 'ShiftOperation', 'name': 'number', 'range': [46, 50], 'children': []}]}, {'type': 'ReturnStatement', 'name': '', 'range': [53, 54], 'children': [{'type': 'ReturnValue', 'name': 'position', 'range': [54, 54], 'children': []}]}]}]}
2025-01-08 10:24:52,573 - INFO - Completed main AST analysis flow
2025-01-08 10:24:52,573 - INFO - Successfully processed chunk
2025-01-08 10:24:52,580 - INFO - Starting code generation from AST
2025-01-08 10:24:58,728 - INFO - Successfully generated code from AST
2025-01-08 10:24:58,728 - INFO - Starting static code similarity comparison
2025-01-08 10:24:58,730 - INFO - Static similarity result: {'final_score': 64.48, 'length_similarity': 59.87, 'token_similarity': 26.67, 'structure_similarity': 100.0, 'function_similarity': 100, 'complexity_similarity': 25.0, 'variable_similarity': 100}
