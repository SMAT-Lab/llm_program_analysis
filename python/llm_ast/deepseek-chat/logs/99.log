2025-01-08 09:55:47,996 - INFO - Processing sample 99
2025-01-08 09:55:47,996 - INFO - Starting Step 0: Splitting code into top-level declarations
2025-01-08 09:55:52,347 - INFO - Successfully split code into 6 top-level declarations
2025-01-08 09:55:52,349 - INFO - Processing chunk #0 (size=123 chars, start_index=0)
2025-01-08 09:55:52,351 - INFO - Processing chunk with 123 chars starting at index 0
2025-01-08 09:55:52,351 - INFO - Starting main AST analysis flow
2025-01-08 09:55:52,352 - INFO - Processing chunk #1 (size=1456 chars, start_index=26)
2025-01-08 09:55:52,352 - INFO - Tokenized code into 26 tokens
2025-01-08 09:55:52,353 - INFO - Processing chunk with 1456 chars starting at index 26
2025-01-08 09:55:52,353 - INFO - Processing chunk #2 (size=217 chars, start_index=258)
2025-01-08 09:55:52,353 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:55:52,354 - INFO - Processing chunk #3 (size=354 chars, start_index=289)
2025-01-08 09:55:52,355 - INFO - Starting main AST analysis flow
2025-01-08 09:55:52,355 - INFO - Processing chunk with 217 chars starting at index 258
2025-01-08 09:55:52,356 - INFO - Processing chunk #4 (size=486 chars, start_index=333)
2025-01-08 09:55:52,357 - INFO - Processing chunk #5 (size=358 chars, start_index=408)
2025-01-08 09:55:52,358 - INFO - Processing chunk with 354 chars starting at index 289
2025-01-08 09:55:52,359 - INFO - Tokenized code into 232 tokens
2025-01-08 09:55:52,363 - INFO - Starting main AST analysis flow
2025-01-08 09:55:52,363 - INFO - Processing chunk with 486 chars starting at index 333
2025-01-08 09:55:52,363 - INFO - Processing chunk with 358 chars starting at index 408
2025-01-08 09:55:52,364 - INFO - Starting main AST analysis flow
2025-01-08 09:55:52,364 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:55:52,364 - INFO - Tokenized code into 31 tokens
2025-01-08 09:55:52,365 - INFO - Starting main AST analysis flow
2025-01-08 09:55:52,365 - INFO - Starting main AST analysis flow
2025-01-08 09:55:52,365 - INFO - Tokenized code into 44 tokens
2025-01-08 09:55:52,370 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:55:52,370 - INFO - Tokenized code into 75 tokens
2025-01-08 09:55:52,372 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:55:52,372 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:55:52,371 - INFO - Tokenized code into 72 tokens
2025-01-08 09:55:52,392 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:55:54,564 - INFO - Step 1 result: {'type': 'Program', 'name': '__init__', 'range': [333, 407], 'children': []}
2025-01-08 09:55:54,564 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:55:54,702 - INFO - Step 1 result: {'type': 'Program', 'name': 'run', 'range': [408, 479], 'children': []}
2025-01-08 09:55:54,702 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:55:57,240 - INFO - Step 1 result: {'type': 'Program', 'name': 'Output', 'range': [289, 332], 'children': [{'type': 'ClassDeclaration', 'name': 'Output', 'range': [289, 332], 'children': [{'type': 'VariableDeclaration', 'name': 'word_count', 'range': [296, 305], 'children': []}, {'type': 'VariableDeclaration', 'name': 'character_count', 'range': [307, 318], 'children': []}, {'type': 'VariableDeclaration', 'name': 'error', 'range': [320, 331], 'children': []}]}]}
2025-01-08 09:55:57,241 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:55:58,354 - INFO - Step 1 result: {'type': 'Program', 'name': 'Input', 'range': [258, 288], 'children': [{'type': 'ClassDeclaration', 'name': 'Input', 'range': [258, 288], 'children': [{'type': 'BlockSchema', 'name': '', 'range': [261, 287], 'children': [{'type': 'SchemaField', 'name': 'text', 'range': [265, 287], 'children': [{'type': 'description', 'name': '', 'range': [272, 274], 'children': []}, {'type': 'placeholder', 'name': '', 'range': [277, 279], 'children': []}, {'type': 'advanced', 'name': '', 'range': [282, 284], 'children': []}]}]}]}]}
2025-01-08 09:55:58,354 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:55:58,880 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [0, 25], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 14], 'children': [{'type': 'ImportSpecifier', 'name': 'Block', 'range': [6, 7], 'children': []}, {'type': 'ImportSpecifier', 'name': 'BlockCategory', 'range': [8, 9], 'children': []}, {'type': 'ImportSpecifier', 'name': 'BlockOutput', 'range': [10, 11], 'children': []}, {'type': 'ImportSpecifier', 'name': 'BlockSchema', 'range': [12, 13], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [15, 23], 'children': [{'type': 'ImportSpecifier', 'name': 'SchemaField', 'range': [21, 22], 'children': []}]}]}
2025-01-08 09:55:58,880 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:56:00,713 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [26, 257], 'children': [{'type': 'ClassDeclaration', 'name': 'WordCharacterCountBlock', 'range': [26, 32], 'children': []}, {'type': 'ClassDeclaration', 'name': 'Input', 'range': [33, 63], 'children': [{'type': 'FieldDeclaration', 'name': 'text', 'range': [40, 62], 'children': []}]}, {'type': 'ClassDeclaration', 'name': 'Output', 'range': [65, 108], 'children': [{'type': 'FieldDeclaration', 'name': 'word_count', 'range': [72, 81], 'children': []}, {'type': 'FieldDeclaration', 'name': 'character_count', 'range': [83, 94], 'children': []}, {'type': 'FieldDeclaration', 'name': 'error', 'range': [96, 107], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': '__init__', 'range': [110, 184], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'run', 'range': [186, 257], 'children': []}]}
2025-01-08 09:56:00,713 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:56:03,774 - INFO - Step 2 result: {'type': 'Program', 'name': 'Input', 'range': [258, 288], 'children': [{'type': 'ClassDeclaration', 'name': 'Input', 'range': [258, 288], 'children': [{'type': 'BlockSchema', 'name': '', 'range': [261, 287], 'children': [{'type': 'SchemaField', 'name': 'text', 'range': [265, 287], 'children': [{'type': 'description', 'name': '', 'range': [272, 274], 'children': []}, {'type': 'placeholder', 'name': '', 'range': [277, 279], 'children': []}, {'type': 'advanced', 'name': '', 'range': [282, 284], 'children': []}]}]}]}]}
2025-01-08 09:56:03,774 - INFO - Starting Step 3: AST simplification
2025-01-08 09:56:06,097 - INFO - Step 2 result: {'type': 'Program', 'name': '', 'range': [0, 25], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 14], 'children': [{'type': 'ImportSpecifier', 'name': 'Block', 'range': [6, 7], 'children': []}, {'type': 'ImportSpecifier', 'name': 'BlockCategory', 'range': [8, 9], 'children': []}, {'type': 'ImportSpecifier', 'name': 'BlockOutput', 'range': [10, 11], 'children': []}, {'type': 'ImportSpecifier', 'name': 'BlockSchema', 'range': [12, 13], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [15, 23], 'children': [{'type': 'ImportSpecifier', 'name': 'SchemaField', 'range': [21, 22], 'children': []}]}]}
2025-01-08 09:56:06,098 - INFO - Starting Step 3: AST simplification
2025-01-08 09:56:09,351 - INFO - Step 3 result: {'type': 'Program', 'name': 'Input', 'range': [258, 288], 'children': [{'type': 'ClassDeclaration', 'name': 'Input', 'range': [258, 288], 'children': [{'type': 'BlockSchema', 'name': '', 'range': [261, 287], 'children': [{'type': 'SchemaField', 'name': 'text', 'range': [265, 287], 'children': [{'type': 'description', 'name': '', 'range': [272, 274], 'children': []}, {'type': 'placeholder', 'name': '', 'range': [277, 279], 'children': []}, {'type': 'advanced', 'name': '', 'range': [282, 284], 'children': []}]}]}]}]}
2025-01-08 09:56:09,351 - INFO - Starting Step 4: AST normalization
2025-01-08 09:56:12,143 - INFO - Step 2 result: {'type': 'Program', 'name': 'Output', 'range': [289, 332], 'children': [{'type': 'ClassDeclaration', 'name': 'Output', 'range': [289, 332], 'children': [{'type': 'VariableDeclaration', 'name': 'word_count', 'range': [296, 305], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [298, 298], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [299, 299], 'children': [{'type': 'FunctionCall', 'name': 'SchemaField', 'range': [300, 305], 'children': [{'type': 'Argument', 'name': 'description', 'range': [302, 304], 'children': [{'type': 'StringLiteral', 'name': '"Number of words in the input text"', 'range': [304, 304], 'children': []}]}]}]}]}, {'type': 'VariableDeclaration', 'name': 'character_count', 'range': [307, 318], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [309, 309], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [310, 310], 'children': [{'type': 'FunctionCall', 'name': 'SchemaField', 'range': [311, 318], 'children': [{'type': 'Argument', 'name': 'description', 'range': [314, 316], 'children': [{'type': 'StringLiteral', 'name': '"Number of characters in the input text"', 'range': [316, 316], 'children': []}]}]}]}]}, {'type': 'VariableDeclaration', 'name': 'error', 'range': [320, 331], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [322, 322], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [323, 323], 'children': [{'type': 'FunctionCall', 'name': 'SchemaField', 'range': [324, 331], 'children': [{'type': 'Argument', 'name': 'description', 'range': [327, 329], 'children': [{'type': 'StringLiteral', 'name': '"Error message if the counting operation failed"', 'range': [329, 329], 'children': []}]}]}]}]}]}]}
2025-01-08 09:56:12,143 - INFO - Starting Step 3: AST simplification
2025-01-08 09:56:12,533 - INFO - Step 3 result: {'type': 'Program', 'name': '', 'range': [0, 25], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 14], 'children': [{'type': 'ImportSpecifier', 'name': 'Block', 'range': [6, 7], 'children': []}, {'type': 'ImportSpecifier', 'name': 'BlockCategory', 'range': [8, 9], 'children': []}, {'type': 'ImportSpecifier', 'name': 'BlockOutput', 'range': [10, 11], 'children': []}, {'type': 'ImportSpecifier', 'name': 'BlockSchema', 'range': [12, 13], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [15, 23], 'children': [{'type': 'ImportSpecifier', 'name': 'SchemaField', 'range': [21, 22], 'children': []}]}]}
2025-01-08 09:56:12,534 - INFO - Starting Step 4: AST normalization
2025-01-08 09:56:15,009 - INFO - Step 4 result: {'type': 'Program', 'name': 'Input', 'range': [258, 288], 'children': [{'type': 'ClassDecl', 'name': 'Input', 'range': [258, 288], 'children': [{'type': 'BlockSchema', 'name': '', 'range': [261, 287], 'children': [{'type': 'SchemaField', 'name': 'text', 'range': [265, 287], 'children': [{'type': 'Literal', 'name': '', 'range': [272, 274], 'children': []}, {'type': 'Literal', 'name': '', 'range': [277, 279], 'children': []}, {'type': 'Literal', 'name': '', 'range': [282, 284], 'children': []}]}]}]}]}
2025-01-08 09:56:15,010 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:56:16,404 - INFO - Step 2 result: {'type': 'Program', 'name': 'run', 'range': [408, 479], 'children': [{'type': 'FunctionDeclaration', 'name': 'run', 'range': [408, 424], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [410, 420], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [411, 411], 'children': []}, {'type': 'Parameter', 'name': 'input_data', 'range': [413, 415], 'children': []}, {'type': 'Parameter', 'name': 'kwargs', 'range': [417, 419], 'children': []}]}, {'type': 'ReturnType', 'name': 'BlockOutput', 'range': [421, 423], 'children': []}]}, {'type': 'TryStatement', 'name': 'try', 'range': [426, 479], 'children': [{'type': 'Block', 'name': 'tryBlock', 'range': [428, 464], 'children': [{'type': 'AssignmentExpression', 'name': 'text', 'range': [429, 434], 'children': [{'type': 'Identifier', 'name': 'input_data', 'range': [431, 431], 'children': []}, {'type': 'PropertyAccess', 'name': 'text', 'range': [432, 433], 'children': []}]}, {'type': 'AssignmentExpression', 'name': 'word_count', 'range': [435, 445], 'children': [{'type': 'CallExpression', 'name': 'len', 'range': [437, 444], 'children': [{'type': 'CallExpression', 'name': 'split', 'range': [440, 443], 'children': [{'type': 'Identifier', 'name': 'text', 'range': [439, 439], 'children': []}]}]}]}, {'type': 'AssignmentExpression', 'name': 'character_count', 'range': [446, 452], 'children': [{'type': 'CallExpression', 'name': 'len', 'range': [448, 451], 'children': [{'type': 'Identifier', 'name': 'text', 'range': [450, 450], 'children': []}]}]}, {'type': 'YieldExpression', 'name': 'yield', 'range': [454, 458], 'children': [{'type': 'Literal', 'name': '"word_count"', 'range': [455, 455], 'children': []}, {'type': 'Identifier', 'name': 'word_count', 'range': [457, 457], 'children': []}]}, {'type': 'YieldExpression', 'name': 'yield', 'range': [459, 463], 'children': [{'type': 'Literal', 'name': '"character_count"', 'range': [460, 460], 'children': []}, {'type': 'Identifier', 'name': 'character_count', 'range': [462, 462], 'children': []}]}]}, {'type': 'CatchClause', 'name': 'catch', 'range': [465, 479], 'children': [{'type': 'Block', 'name': 'catchBlock', 'range': [470, 478], 'children': [{'type': 'YieldExpression', 'name': 'yield', 'range': [471, 478], 'children': [{'type': 'Literal', 'name': '"error"', 'range': [472, 472], 'children': []}, {'type': 'CallExpression', 'name': 'str', 'range': [474, 477], 'children': [{'type': 'Identifier', 'name': 'e', 'range': [476, 476], 'children': []}]}]}]}]}]}]}
2025-01-08 09:56:16,404 - INFO - Starting Step 3: AST simplification
2025-01-08 09:56:19,992 - INFO - Step 4 result: {'type': 'Program', 'name': '', 'range': [0, 25], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 14], 'children': [{'type': 'ImportSpecifier', 'name': 'Block', 'range': [6, 7], 'children': []}, {'type': 'ImportSpecifier', 'name': 'BlockCategory', 'range': [8, 9], 'children': []}, {'type': 'ImportSpecifier', 'name': 'BlockOutput', 'range': [10, 11], 'children': []}, {'type': 'ImportSpecifier', 'name': 'BlockSchema', 'range': [12, 13], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [15, 23], 'children': [{'type': 'ImportSpecifier', 'name': 'SchemaField', 'range': [21, 22], 'children': []}]}]}
2025-01-08 09:56:19,992 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:56:21,368 - INFO - Step 5 result: {'type': 'Program', 'name': 'Input', 'range': [258, 288], 'children': [{'type': 'ClassDecl', 'name': 'Input', 'range': [258, 288], 'children': [{'type': 'BlockSchema', 'name': '', 'range': [261, 287], 'children': [{'type': 'SchemaField', 'name': 'text', 'range': [265, 287], 'children': [{'type': 'Literal', 'name': '', 'range': [272, 274], 'children': []}, {'type': 'Literal', 'name': '', 'range': [277, 279], 'children': []}, {'type': 'Literal', 'name': '', 'range': [282, 284], 'children': []}]}]}]}]}
2025-01-08 09:56:21,368 - INFO - Completed main AST analysis flow
2025-01-08 09:56:21,368 - INFO - Successfully processed chunk
2025-01-08 09:56:25,037 - INFO - Step 3 result: {'type': 'Program', 'name': 'Output', 'range': [289, 332], 'children': [{'type': 'ClassDeclaration', 'name': 'Output', 'range': [289, 332], 'children': [{'type': 'VariableDeclaration', 'name': 'word_count', 'range': [296, 305], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [298, 298], 'children': []}, {'type': 'FunctionCall', 'name': 'SchemaField', 'range': [300, 305], 'children': [{'type': 'Argument', 'name': 'description', 'range': [302, 304], 'children': [{'type': 'StringLiteral', 'name': '"Number of words in the input text"', 'range': [304, 304], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'character_count', 'range': [307, 318], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [309, 309], 'children': []}, {'type': 'FunctionCall', 'name': 'SchemaField', 'range': [311, 318], 'children': [{'type': 'Argument', 'name': 'description', 'range': [314, 316], 'children': [{'type': 'StringLiteral', 'name': '"Number of characters in the input text"', 'range': [316, 316], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'error', 'range': [320, 331], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [322, 322], 'children': []}, {'type': 'FunctionCall', 'name': 'SchemaField', 'range': [324, 331], 'children': [{'type': 'Argument', 'name': 'description', 'range': [327, 329], 'children': [{'type': 'StringLiteral', 'name': '"Error message if the counting operation failed"', 'range': [329, 329], 'children': []}]}]}]}]}]}
2025-01-08 09:56:25,037 - INFO - Starting Step 4: AST normalization
2025-01-08 09:56:26,574 - INFO - Step 5 result: {'type': 'Program', 'name': 'CombinedImports', 'range': [0, 23], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 14], 'children': [{'type': 'ImportSpecifier', 'name': 'Block', 'range': [6, 7], 'children': []}, {'type': 'ImportSpecifier', 'name': 'BlockCategory', 'range': [8, 9], 'children': []}, {'type': 'ImportSpecifier', 'name': 'BlockOutput', 'range': [10, 11], 'children': []}, {'type': 'ImportSpecifier', 'name': 'BlockSchema', 'range': [12, 13], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [15, 23], 'children': [{'type': 'ImportSpecifier', 'name': 'SchemaField', 'range': [21, 22], 'children': []}]}]}
2025-01-08 09:56:26,574 - INFO - Completed main AST analysis flow
2025-01-08 09:56:26,574 - INFO - Successfully processed chunk
2025-01-08 09:56:30,745 - INFO - Step 2 result: {'type': 'Program', 'name': '__init__', 'range': [333, 407], 'children': [{'type': 'FunctionDeclaration', 'name': '__init__', 'range': [333, 407], 'children': [{'type': 'ParameterList', 'name': '', 'range': [335, 337], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [336, 336], 'children': []}]}, {'type': 'Block', 'name': '', 'range': [338, 407], 'children': [{'type': 'ExpressionStatement', 'name': '', 'range': [340, 344], 'children': [{'type': 'CallExpression', 'name': 'super', 'range': [340, 344], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [341, 342], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [347, 349], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [347, 349], 'children': [{'type': 'Identifier', 'name': 'id', 'range': [347, 347], 'children': []}, {'type': 'Literal', 'name': '"ab2a782d-22cf-4587-8a70-55b59b3f9f90"', 'range': [349, 349], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [352, 354], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [352, 354], 'children': [{'type': 'Identifier', 'name': 'description', 'range': [352, 352], 'children': []}, {'type': 'Literal', 'name': '"Counts the number of words and characters in a given text."', 'range': [354, 354], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [357, 363], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [357, 363], 'children': [{'type': 'Identifier', 'name': 'categories', 'range': [357, 357], 'children': []}, {'type': 'ObjectExpression', 'name': '', 'range': [359, 363], 'children': [{'type': 'Property', 'name': 'BlockCategory.TEXT', 'range': [360, 362], 'children': [{'type': 'Identifier', 'name': 'BlockCategory', 'range': [360, 360], 'children': []}, {'type': 'Identifier', 'name': 'TEXT', 'range': [362, 362], 'children': []}]}]}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [366, 371], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [366, 371], 'children': [{'type': 'Identifier', 'name': 'input_schema', 'range': [366, 366], 'children': []}, {'type': 'MemberExpression', 'name': 'WordCharacterCountBlock.Input', 'range': [368, 370], 'children': [{'type': 'Identifier', 'name': 'WordCharacterCountBlock', 'range': [368, 368], 'children': []}, {'type': 'Identifier', 'name': 'Input', 'range': [370, 370], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [373, 377], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [373, 377], 'children': [{'type': 'Identifier', 'name': 'output_schema', 'range': [373, 373], 'children': []}, {'type': 'MemberExpression', 'name': 'WordCharacterCountBlock.Output', 'range': [375, 377], 'children': [{'type': 'Identifier', 'name': 'WordCharacterCountBlock', 'range': [375, 375], 'children': []}, {'type': 'Identifier', 'name': 'Output', 'range': [377, 377], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [380, 386], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [380, 386], 'children': [{'type': 'Identifier', 'name': 'test_input', 'range': [380, 380], 'children': []}, {'type': 'ObjectExpression', 'name': '', 'range': [382, 386], 'children': [{'type': 'Property', 'name': '"text"', 'range': [383, 385], 'children': [{'type': 'Literal', 'name': '"text"', 'range': [383, 383], 'children': []}, {'type': 'Literal', 'name': '"Hello, how are you?"', 'range': [385, 385], 'children': []}]}]}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [389, 403], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [389, 403], 'children': [{'type': 'Identifier', 'name': 'test_output', 'range': [389, 389], 'children': []}, {'type': 'ArrayExpression', 'name': '', 'range': [391, 403], 'children': [{'type': 'TupleExpression', 'name': '', 'range': [392, 396], 'children': [{'type': 'Literal', 'name': '"word_count"', 'range': [393, 393], 'children': []}, {'type': 'Literal', 'name': '4', 'range': [395, 395], 'children': []}]}, {'type': 'TupleExpression', 'name': '', 'range': [398, 402], 'children': [{'type': 'Literal', 'name': '"character_count"', 'range': [399, 399], 'children': []}, {'type': 'Literal', 'name': '19', 'range': [401, 401], 'children': []}]}]}]}]}]}]}]}
2025-01-08 09:56:30,745 - INFO - Starting Step 3: AST simplification
2025-01-08 09:56:37,923 - INFO - Step 4 result: {'type': 'Program', 'name': 'Output', 'range': [289, 332], 'children': [{'type': 'ClassDecl', 'name': 'Output', 'range': [289, 332], 'children': [{'type': 'VariableDecl', 'name': 'word_count', 'range': [296, 305], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [298, 298], 'children': []}, {'type': 'CallExpression', 'name': 'SchemaField', 'range': [300, 305], 'children': [{'type': 'Argument', 'name': 'description', 'range': [302, 304], 'children': [{'type': 'Literal', 'name': '"Number of words in the input text"', 'range': [304, 304], 'children': []}]}]}]}, {'type': 'VariableDecl', 'name': 'character_count', 'range': [307, 318], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [309, 309], 'children': []}, {'type': 'CallExpression', 'name': 'SchemaField', 'range': [311, 318], 'children': [{'type': 'Argument', 'name': 'description', 'range': [314, 316], 'children': [{'type': 'Literal', 'name': '"Number of characters in the input text"', 'range': [316, 316], 'children': []}]}]}]}, {'type': 'VariableDecl', 'name': 'error', 'range': [320, 331], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [322, 322], 'children': []}, {'type': 'CallExpression', 'name': 'SchemaField', 'range': [324, 331], 'children': [{'type': 'Argument', 'name': 'description', 'range': [327, 329], 'children': [{'type': 'Literal', 'name': '"Error message if the counting operation failed"', 'range': [329, 329], 'children': []}]}]}]}]}]}
2025-01-08 09:56:37,924 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:56:38,909 - INFO - Step 3 result: {'type': 'Program', 'name': 'run', 'range': [408, 479], 'children': [{'type': 'FunctionDeclaration', 'name': 'run', 'range': [408, 424], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [410, 420], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [411, 411], 'children': []}, {'type': 'Parameter', 'name': 'input_data', 'range': [413, 415], 'children': []}, {'type': 'Parameter', 'name': 'kwargs', 'range': [417, 419], 'children': []}]}, {'type': 'ReturnType', 'name': 'BlockOutput', 'range': [421, 423], 'children': []}]}, {'type': 'TryStatement', 'name': 'try', 'range': [426, 479], 'children': [{'type': 'Block', 'name': 'tryBlock', 'range': [428, 464], 'children': [{'type': 'AssignmentExpression', 'name': 'text', 'range': [429, 434], 'children': [{'type': 'Identifier', 'name': 'input_data', 'range': [431, 431], 'children': []}, {'type': 'PropertyAccess', 'name': 'text', 'range': [432, 433], 'children': []}]}, {'type': 'AssignmentExpression', 'name': 'word_count', 'range': [435, 445], 'children': [{'type': 'CallExpression', 'name': 'len', 'range': [437, 444], 'children': [{'type': 'CallExpression', 'name': 'split', 'range': [440, 443], 'children': [{'type': 'Identifier', 'name': 'text', 'range': [439, 439], 'children': []}]}]}]}, {'type': 'AssignmentExpression', 'name': 'character_count', 'range': [446, 452], 'children': [{'type': 'CallExpression', 'name': 'len', 'range': [448, 451], 'children': [{'type': 'Identifier', 'name': 'text', 'range': [450, 450], 'children': []}]}]}, {'type': 'YieldExpression', 'name': 'yield', 'range': [454, 458], 'children': [{'type': 'Literal', 'name': '"word_count"', 'range': [455, 455], 'children': []}, {'type': 'Identifier', 'name': 'word_count', 'range': [457, 457], 'children': []}]}, {'type': 'YieldExpression', 'name': 'yield', 'range': [459, 463], 'children': [{'type': 'Literal', 'name': '"character_count"', 'range': [460, 460], 'children': []}, {'type': 'Identifier', 'name': 'character_count', 'range': [462, 462], 'children': []}]}]}, {'type': 'CatchClause', 'name': 'catch', 'range': [465, 479], 'children': [{'type': 'Block', 'name': 'catchBlock', 'range': [470, 478], 'children': [{'type': 'YieldExpression', 'name': 'yield', 'range': [471, 478], 'children': [{'type': 'Literal', 'name': '"error"', 'range': [472, 472], 'children': []}, {'type': 'CallExpression', 'name': 'str', 'range': [474, 477], 'children': [{'type': 'Identifier', 'name': 'e', 'range': [476, 476], 'children': []}]}]}]}]}]}]}
2025-01-08 09:56:38,910 - INFO - Starting Step 4: AST normalization
2025-01-08 09:56:48,541 - INFO - Step 2 result: {'type': 'Program', 'name': '', 'range': [26, 257], 'children': [{'type': 'ClassDeclaration', 'name': 'WordCharacterCountBlock', 'range': [26, 32], 'children': []}, {'type': 'ClassDeclaration', 'name': 'Input', 'range': [33, 63], 'children': [{'type': 'FieldDeclaration', 'name': 'text', 'range': [40, 62], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [42, 42], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [43, 43], 'children': [{'type': 'SchemaFieldCall', 'name': 'SchemaField', 'range': [44, 62], 'children': [{'type': 'Argument', 'name': 'description', 'range': [47, 49], 'children': []}, {'type': 'Argument', 'name': 'placeholder', 'range': [52, 54], 'children': []}, {'type': 'Argument', 'name': 'advanced', 'range': [57, 59], 'children': []}]}]}]}]}, {'type': 'ClassDeclaration', 'name': 'Output', 'range': [65, 108], 'children': [{'type': 'FieldDeclaration', 'name': 'word_count', 'range': [72, 81], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [74, 74], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [75, 75], 'children': [{'type': 'SchemaFieldCall', 'name': 'SchemaField', 'range': [76, 81], 'children': [{'type': 'Argument', 'name': 'description', 'range': [78, 80], 'children': []}]}]}]}, {'type': 'FieldDeclaration', 'name': 'character_count', 'range': [83, 94], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [85, 85], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [86, 86], 'children': [{'type': 'SchemaFieldCall', 'name': 'SchemaField', 'range': [87, 94], 'children': [{'type': 'Argument', 'name': 'description', 'range': [90, 92], 'children': []}]}]}]}, {'type': 'FieldDeclaration', 'name': 'error', 'range': [96, 107], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [98, 98], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [99, 99], 'children': [{'type': 'SchemaFieldCall', 'name': 'SchemaField', 'range': [100, 107], 'children': [{'type': 'Argument', 'name': 'description', 'range': [103, 105], 'children': []}]}]}]}]}, {'type': 'FunctionDeclaration', 'name': '__init__', 'range': [110, 184], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [113, 113], 'children': []}, {'type': 'SuperCall', 'name': 'super', 'range': [117, 123], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [125, 125], 'children': [{'type': 'StringLiteral', 'name': '"ab2a782d-22cf-4587-8a70-55b59b3f9f90"', 'range': [126, 126], 'children': []}]}, {'type': 'Assignment', 'name': '=', 'range': [130, 130], 'children': [{'type': 'StringLiteral', 'name': '"Counts the number of words and characters in a given text."', 'range': [131, 131], 'children': []}]}, {'type': 'Assignment', 'name': '=', 'range': [135, 135], 'children': [{'type': 'ObjectLiteral', 'name': '{BlockCategory.TEXT}', 'range': [136, 140], 'children': []}]}, {'type': 'Assignment', 'name': '=', 'range': [145, 145], 'children': [{'type': 'MemberExpression', 'name': 'WordCharacterCountBlock.Input', 'range': [146, 147], 'children': []}]}, {'type': 'Assignment', 'name': '=', 'range': [152, 152], 'children': [{'type': 'MemberExpression', 'name': 'WordCharacterCountBlock.Output', 'range': [153, 154], 'children': []}]}, {'type': 'Assignment', 'name': '=', 'range': [159, 159], 'children': [{'type': 'ObjectLiteral', 'name': '{"text": "Hello, how are you?"}', 'range': [160, 163], 'children': []}]}, {'type': 'Assignment', 'name': '=', 'range': [168, 168], 'children': [{'type': 'ArrayLiteral', 'name': '[("word_count", 4), ("character_count", 19)]', 'range': [169, 180], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'run', 'range': [186, 257], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [189, 189], 'children': []}, {'type': 'Parameter', 'name': 'input_data', 'range': [191, 191], 'children': [{'type': 'TypeAnnotation', 'name': 'Input', 'range': [193, 193], 'children': []}]}, {'type': 'Parameter', 'name': 'kwargs', 'range': [197, 197], 'children': []}, {'type': 'ReturnTypeAnnotation', 'name': 'BlockOutput', 'range': [201, 201], 'children': []}, {'type': 'TryStatement', 'name': 'try', 'range': [204, 256], 'children': [{'type': 'Assignment', 'name': '=', 'range': [208, 208], 'children': [{'type': 'MemberExpression', 'name': 'input_data.text', 'range': [209, 211], 'children': []}]}, {'type': 'Assignment', 'name': '=', 'range': [214, 214], 'children': [{'type': 'CallExpression', 'name': 'len', 'range': [215, 222], 'children': [{'type': 'CallExpression', 'name': 'split', 'range': [219, 221], 'children': []}]}]}, {'type': 'Assignment', 'name': '=', 'range': [225, 225], 'children': [{'type': 'CallExpression', 'name': 'len', 'range': [226, 229], 'children': []}]}, {'type': 'YieldExpression', 'name': 'yield', 'range': [232, 236], 'children': [{'type': 'StringLiteral', 'name': '"word_count"', 'range': [233, 233], 'children': []}, {'type': 'Identifier', 'name': 'word_count', 'range': [235, 235], 'children': []}]}, {'type': 'YieldExpression', 'name': 'yield', 'range': [237, 241], 'children': [{'type': 'StringLiteral', 'name': '"character_count"', 'range': [238, 238], 'children': []}, {'type': 'Identifier', 'name': 'character_count', 'range': [240, 240], 'children': []}]}, {'type': 'CatchClause', 'name': 'except', 'range': [243, 256], 'children': [{'type': 'Parameter', 'name': 'e', 'range': [246, 246], 'children': []}, {'type': 'YieldExpression', 'name': 'yield', 'range': [249, 256], 'children': [{'type': 'StringLiteral', 'name': '"error"', 'range': [250, 250], 'children': []}, {'type': 'CallExpression', 'name': 'str', 'range': [252, 255], 'children': [{'type': 'Identifier', 'name': 'e', 'range': [254, 254], 'children': []}]}]}]}]}]}]}
2025-01-08 09:56:48,542 - INFO - Starting Step 3: AST simplification
2025-01-08 09:56:50,800 - INFO - Step 5 result: {'type': 'Program', 'name': 'Output', 'range': [289, 332], 'children': [{'type': 'ClassDecl', 'name': 'Output', 'range': [289, 332], 'children': [{'type': 'VariableDecl', 'name': 'word_count', 'range': [296, 305], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [298, 298], 'children': []}, {'type': 'CallExpression', 'name': 'SchemaField', 'range': [300, 305], 'children': [{'type': 'Argument', 'name': 'description', 'range': [302, 304], 'children': [{'type': 'Literal', 'name': '"Number of words in the input text"', 'range': [304, 304], 'children': []}]}]}]}, {'type': 'VariableDecl', 'name': 'character_count', 'range': [307, 318], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [309, 309], 'children': []}, {'type': 'CallExpression', 'name': 'SchemaField', 'range': [311, 318], 'children': [{'type': 'Argument', 'name': 'description', 'range': [314, 316], 'children': [{'type': 'Literal', 'name': '"Number of characters in the input text"', 'range': [316, 316], 'children': []}]}]}]}, {'type': 'VariableDecl', 'name': 'error', 'range': [320, 331], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [322, 322], 'children': []}, {'type': 'CallExpression', 'name': 'SchemaField', 'range': [324, 331], 'children': [{'type': 'Argument', 'name': 'description', 'range': [327, 329], 'children': [{'type': 'Literal', 'name': '"Error message if the counting operation failed"', 'range': [329, 329], 'children': []}]}]}]}]}]}
2025-01-08 09:56:50,800 - INFO - Completed main AST analysis flow
2025-01-08 09:56:50,801 - INFO - Successfully processed chunk
2025-01-08 09:57:00,845 - INFO - Step 4 result: {'type': 'Program', 'name': 'run', 'range': [408, 479], 'children': [{'type': 'FunctionDecl', 'name': 'run', 'range': [408, 424], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [410, 420], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [411, 411], 'children': []}, {'type': 'Parameter', 'name': 'input_data', 'range': [413, 415], 'children': []}, {'type': 'Parameter', 'name': 'kwargs', 'range': [417, 419], 'children': []}]}, {'type': 'ReturnType', 'name': 'BlockOutput', 'range': [421, 423], 'children': []}]}, {'type': 'TryStatement', 'name': 'try', 'range': [426, 479], 'children': [{'type': 'Block', 'name': 'tryBlock', 'range': [428, 464], 'children': [{'type': 'AssignmentExpression', 'name': 'text', 'range': [429, 434], 'children': [{'type': 'Identifier', 'name': 'input_data', 'range': [431, 431], 'children': []}, {'type': 'PropertyAccess', 'name': 'text', 'range': [432, 433], 'children': []}]}, {'type': 'AssignmentExpression', 'name': 'word_count', 'range': [435, 445], 'children': [{'type': 'CallExpression', 'name': 'len', 'range': [437, 444], 'children': [{'type': 'CallExpression', 'name': 'split', 'range': [440, 443], 'children': [{'type': 'Identifier', 'name': 'text', 'range': [439, 439], 'children': []}]}]}]}, {'type': 'AssignmentExpression', 'name': 'character_count', 'range': [446, 452], 'children': [{'type': 'CallExpression', 'name': 'len', 'range': [448, 451], 'children': [{'type': 'Identifier', 'name': 'text', 'range': [450, 450], 'children': []}]}]}, {'type': 'YieldExpression', 'name': 'yield', 'range': [454, 458], 'children': [{'type': 'Literal', 'name': '"word_count"', 'range': [455, 455], 'children': []}, {'type': 'Identifier', 'name': 'word_count', 'range': [457, 457], 'children': []}]}, {'type': 'YieldExpression', 'name': 'yield', 'range': [459, 463], 'children': [{'type': 'Literal', 'name': '"character_count"', 'range': [460, 460], 'children': []}, {'type': 'Identifier', 'name': 'character_count', 'range': [462, 462], 'children': []}]}]}, {'type': 'CatchClause', 'name': 'catch', 'range': [465, 479], 'children': [{'type': 'Block', 'name': 'catchBlock', 'range': [470, 478], 'children': [{'type': 'YieldExpression', 'name': 'yield', 'range': [471, 478], 'children': [{'type': 'Literal', 'name': '"error"', 'range': [472, 472], 'children': []}, {'type': 'CallExpression', 'name': 'str', 'range': [474, 477], 'children': [{'type': 'Identifier', 'name': 'e', 'range': [476, 476], 'children': []}]}]}]}]}]}]}
2025-01-08 09:57:00,846 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:57:08,330 - INFO - Step 3 result: {'type': 'Program', 'name': '__init__', 'range': [333, 407], 'children': [{'type': 'FunctionDeclaration', 'name': '__init__', 'range': [333, 407], 'children': [{'type': 'ParameterList', 'name': '', 'range': [335, 337], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [336, 336], 'children': []}]}, {'type': 'Block', 'name': '', 'range': [338, 407], 'children': [{'type': 'ExpressionStatement', 'name': '', 'range': [340, 344], 'children': [{'type': 'CallExpression', 'name': 'super', 'range': [340, 344], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [341, 342], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [347, 349], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [347, 349], 'children': [{'type': 'Identifier', 'name': 'id', 'range': [347, 347], 'children': []}, {'type': 'Literal', 'name': '"ab2a782d-22cf-4587-8a70-55b59b3f9f90"', 'range': [349, 349], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [352, 354], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [352, 354], 'children': [{'type': 'Identifier', 'name': 'description', 'range': [352, 352], 'children': []}, {'type': 'Literal', 'name': '"Counts the number of words and characters in a given text."', 'range': [354, 354], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [357, 363], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [357, 363], 'children': [{'type': 'Identifier', 'name': 'categories', 'range': [357, 357], 'children': []}, {'type': 'ObjectExpression', 'name': '', 'range': [359, 363], 'children': [{'type': 'Property', 'name': 'BlockCategory.TEXT', 'range': [360, 362], 'children': [{'type': 'Identifier', 'name': 'BlockCategory', 'range': [360, 360], 'children': []}, {'type': 'Identifier', 'name': 'TEXT', 'range': [362, 362], 'children': []}]}]}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [366, 371], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [366, 371], 'children': [{'type': 'Identifier', 'name': 'input_schema', 'range': [366, 366], 'children': []}, {'type': 'MemberExpression', 'name': 'WordCharacterCountBlock.Input', 'range': [368, 370], 'children': [{'type': 'Identifier', 'name': 'WordCharacterCountBlock', 'range': [368, 368], 'children': []}, {'type': 'Identifier', 'name': 'Input', 'range': [370, 370], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [373, 377], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [373, 377], 'children': [{'type': 'Identifier', 'name': 'output_schema', 'range': [373, 373], 'children': []}, {'type': 'MemberExpression', 'name': 'WordCharacterCountBlock.Output', 'range': [375, 377], 'children': [{'type': 'Identifier', 'name': 'WordCharacterCountBlock', 'range': [375, 375], 'children': []}, {'type': 'Identifier', 'name': 'Output', 'range': [377, 377], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [380, 386], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [380, 386], 'children': [{'type': 'Identifier', 'name': 'test_input', 'range': [380, 380], 'children': []}, {'type': 'ObjectExpression', 'name': '', 'range': [382, 386], 'children': [{'type': 'Property', 'name': '"text"', 'range': [383, 385], 'children': [{'type': 'Literal', 'name': '"text"', 'range': [383, 383], 'children': []}, {'type': 'Literal', 'name': '"Hello, how are you?"', 'range': [385, 385], 'children': []}]}]}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [389, 403], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [389, 403], 'children': [{'type': 'Identifier', 'name': 'test_output', 'range': [389, 389], 'children': []}, {'type': 'ArrayExpression', 'name': '', 'range': [391, 403], 'children': [{'type': 'TupleExpression', 'name': '', 'range': [392, 396], 'children': [{'type': 'Literal', 'name': '"word_count"', 'range': [393, 393], 'children': []}, {'type': 'Literal', 'name': '4', 'range': [395, 395], 'children': []}]}, {'type': 'TupleExpression', 'name': '', 'range': [398, 402], 'children': [{'type': 'Literal', 'name': '"character_count"', 'range': [399, 399], 'children': []}, {'type': 'Literal', 'name': '19', 'range': [401, 401], 'children': []}]}]}]}]}]}]}]}
2025-01-08 09:57:08,330 - INFO - Starting Step 4: AST normalization
2025-01-08 09:57:23,044 - INFO - Step 5 result: {'type': 'Program', 'name': 'run', 'range': [408, 479], 'children': [{'type': 'FunctionDecl', 'name': 'run', 'range': [408, 424], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [410, 420], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [411, 411], 'children': []}, {'type': 'Parameter', 'name': 'input_data', 'range': [413, 415], 'children': []}, {'type': 'Parameter', 'name': 'kwargs', 'range': [417, 419], 'children': []}]}, {'type': 'ReturnType', 'name': 'BlockOutput', 'range': [421, 423], 'children': []}]}, {'type': 'TryStatement', 'name': 'try', 'range': [426, 479], 'children': [{'type': 'Block', 'name': 'tryBlock', 'range': [428, 464], 'children': [{'type': 'AssignmentExpression', 'name': 'text', 'range': [429, 434], 'children': [{'type': 'Identifier', 'name': 'input_data', 'range': [431, 431], 'children': []}, {'type': 'PropertyAccess', 'name': 'text', 'range': [432, 433], 'children': []}]}, {'type': 'AssignmentExpression', 'name': 'word_count', 'range': [435, 445], 'children': [{'type': 'CallExpression', 'name': 'len', 'range': [437, 444], 'children': [{'type': 'CallExpression', 'name': 'split', 'range': [440, 443], 'children': [{'type': 'Identifier', 'name': 'text', 'range': [439, 439], 'children': []}]}]}]}, {'type': 'AssignmentExpression', 'name': 'character_count', 'range': [446, 452], 'children': [{'type': 'CallExpression', 'name': 'len', 'range': [448, 451], 'children': [{'type': 'Identifier', 'name': 'text', 'range': [450, 450], 'children': []}]}]}, {'type': 'YieldExpression', 'name': 'yield', 'range': [454, 458], 'children': [{'type': 'Literal', 'name': '"word_count"', 'range': [455, 455], 'children': []}, {'type': 'Identifier', 'name': 'word_count', 'range': [457, 457], 'children': []}]}, {'type': 'YieldExpression', 'name': 'yield', 'range': [459, 463], 'children': [{'type': 'Literal', 'name': '"character_count"', 'range': [460, 460], 'children': []}, {'type': 'Identifier', 'name': 'character_count', 'range': [462, 462], 'children': []}]}]}, {'type': 'CatchClause', 'name': 'catch', 'range': [465, 479], 'children': [{'type': 'Block', 'name': 'catchBlock', 'range': [470, 478], 'children': [{'type': 'YieldExpression', 'name': 'yield', 'range': [471, 478], 'children': [{'type': 'Literal', 'name': '"error"', 'range': [472, 472], 'children': []}, {'type': 'CallExpression', 'name': 'str', 'range': [474, 477], 'children': [{'type': 'Identifier', 'name': 'e', 'range': [476, 476], 'children': []}]}]}]}]}]}]}
2025-01-08 09:57:23,045 - INFO - Completed main AST analysis flow
2025-01-08 09:57:23,046 - INFO - Successfully processed chunk
2025-01-08 09:57:37,786 - INFO - Step 3 result: {'type': 'Program', 'name': '', 'range': [26, 257], 'children': [{'type': 'ClassDeclaration', 'name': 'WordCharacterCountBlock', 'range': [26, 32], 'children': []}, {'type': 'ClassDeclaration', 'name': 'Input', 'range': [33, 63], 'children': [{'type': 'FieldDeclaration', 'name': 'text', 'range': [40, 62], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [42, 42], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [43, 43], 'children': [{'type': 'SchemaFieldCall', 'name': 'SchemaField', 'range': [44, 62], 'children': [{'type': 'Argument', 'name': 'description', 'range': [47, 49], 'children': []}, {'type': 'Argument', 'name': 'placeholder', 'range': [52, 54], 'children': []}, {'type': 'Argument', 'name': 'advanced', 'range': [57, 59], 'children': []}]}]}]}]}, {'type': 'ClassDeclaration', 'name': 'Output', 'range': [65, 108], 'children': [{'type': 'FieldDeclaration', 'name': 'word_count', 'range': [72, 81], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [74, 74], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [75, 75], 'children': [{'type': 'SchemaFieldCall', 'name': 'SchemaField', 'range': [76, 81], 'children': [{'type': 'Argument', 'name': 'description', 'range': [78, 80], 'children': []}]}]}]}, {'type': 'FieldDeclaration', 'name': 'character_count', 'range': [83, 94], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [85, 85], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [86, 86], 'children': [{'type': 'SchemaFieldCall', 'name': 'SchemaField', 'range': [87, 94], 'children': [{'type': 'Argument', 'name': 'description', 'range': [90, 92], 'children': []}]}]}]}, {'type': 'FieldDeclaration', 'name': 'error', 'range': [96, 107], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [98, 98], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [99, 99], 'children': [{'type': 'SchemaFieldCall', 'name': 'SchemaField', 'range': [100, 107], 'children': [{'type': 'Argument', 'name': 'description', 'range': [103, 105], 'children': []}]}]}]}]}, {'type': 'FunctionDeclaration', 'name': '__init__', 'range': [110, 184], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [113, 113], 'children': []}, {'type': 'SuperCall', 'name': 'super', 'range': [117, 123], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [125, 125], 'children': [{'type': 'StringLiteral', 'name': '"ab2a782d-22cf-4587-8a70-55b59b3f9f90"', 'range': [126, 126], 'children': []}]}, {'type': 'Assignment', 'name': '=', 'range': [130, 130], 'children': [{'type': 'StringLiteral', 'name': '"Counts the number of words and characters in a given text."', 'range': [131, 131], 'children': []}]}, {'type': 'Assignment', 'name': '=', 'range': [135, 135], 'children': [{'type': 'ObjectLiteral', 'name': '{BlockCategory.TEXT}', 'range': [136, 140], 'children': []}]}, {'type': 'Assignment', 'name': '=', 'range': [145, 145], 'children': [{'type': 'MemberExpression', 'name': 'WordCharacterCountBlock.Input', 'range': [146, 147], 'children': []}]}, {'type': 'Assignment', 'name': '=', 'range': [152, 152], 'children': [{'type': 'MemberExpression', 'name': 'WordCharacterCountBlock.Output', 'range': [153, 154], 'children': []}]}, {'type': 'Assignment', 'name': '=', 'range': [159, 159], 'children': [{'type': 'ObjectLiteral', 'name': '{"text": "Hello, how are you?"}', 'range': [160, 163], 'children': []}]}, {'type': 'Assignment', 'name': '=', 'range': [168, 168], 'children': [{'type': 'ArrayLiteral', 'name': '[("word_count", 4), ("character_count", 19)]', 'range': [169, 180], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'run', 'range': [186, 257], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [189, 189], 'children': []}, {'type': 'Parameter', 'name': 'input_data', 'range': [191, 191], 'children': [{'type': 'TypeAnnotation', 'name': 'Input', 'range': [193, 193], 'children': []}]}, {'type': 'Parameter', 'name': 'kwargs', 'range': [197, 197], 'children': []}, {'type': 'ReturnTypeAnnotation', 'name': 'BlockOutput', 'range': [201, 201], 'children': []}, {'type': 'TryStatement', 'name': 'try', 'range': [204, 256], 'children': [{'type': 'Assignment', 'name': '=', 'range': [208, 208], 'children': [{'type': 'MemberExpression', 'name': 'input_data.text', 'range': [209, 211], 'children': []}]}, {'type': 'Assignment', 'name': '=', 'range': [214, 214], 'children': [{'type': 'CallExpression', 'name': 'len', 'range': [215, 222], 'children': [{'type': 'CallExpression', 'name': 'split', 'range': [219, 221], 'children': []}]}]}, {'type': 'Assignment', 'name': '=', 'range': [225, 225], 'children': [{'type': 'CallExpression', 'name': 'len', 'range': [226, 229], 'children': []}]}, {'type': 'YieldExpression', 'name': 'yield', 'range': [232, 236], 'children': [{'type': 'StringLiteral', 'name': '"word_count"', 'range': [233, 233], 'children': []}, {'type': 'Identifier', 'name': 'word_count', 'range': [235, 235], 'children': []}]}, {'type': 'YieldExpression', 'name': 'yield', 'range': [237, 241], 'children': [{'type': 'StringLiteral', 'name': '"character_count"', 'range': [238, 238], 'children': []}, {'type': 'Identifier', 'name': 'character_count', 'range': [240, 240], 'children': []}]}, {'type': 'CatchClause', 'name': 'except', 'range': [243, 256], 'children': [{'type': 'Parameter', 'name': 'e', 'range': [246, 246], 'children': []}, {'type': 'YieldExpression', 'name': 'yield', 'range': [249, 256], 'children': [{'type': 'StringLiteral', 'name': '"error"', 'range': [250, 250], 'children': []}, {'type': 'CallExpression', 'name': 'str', 'range': [252, 255], 'children': [{'type': 'Identifier', 'name': 'e', 'range': [254, 254], 'children': []}]}]}]}]}]}]}
2025-01-08 09:57:37,786 - INFO - Starting Step 4: AST normalization
2025-01-08 09:57:44,997 - INFO - Step 4 result: {'type': 'Program', 'name': '__init__', 'range': [333, 407], 'children': [{'type': 'FunctionDecl', 'name': '__init__', 'range': [333, 407], 'children': [{'type': 'ParameterList', 'name': '', 'range': [335, 337], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [336, 336], 'children': []}]}, {'type': 'Block', 'name': '', 'range': [338, 407], 'children': [{'type': 'ExpressionStatement', 'name': '', 'range': [340, 344], 'children': [{'type': 'CallExpression', 'name': 'super', 'range': [340, 344], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [341, 342], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [347, 349], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [347, 349], 'children': [{'type': 'Identifier', 'name': 'id', 'range': [347, 347], 'children': []}, {'type': 'Literal', 'name': '"ab2a782d-22cf-4587-8a70-55b59b3f9f90"', 'range': [349, 349], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [352, 354], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [352, 354], 'children': [{'type': 'Identifier', 'name': 'description', 'range': [352, 352], 'children': []}, {'type': 'Literal', 'name': '"Counts the number of words and characters in a given text."', 'range': [354, 354], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [357, 363], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [357, 363], 'children': [{'type': 'Identifier', 'name': 'categories', 'range': [357, 357], 'children': []}, {'type': 'ObjectExpression', 'name': '', 'range': [359, 363], 'children': [{'type': 'Property', 'name': 'BlockCategory.TEXT', 'range': [360, 362], 'children': [{'type': 'Identifier', 'name': 'BlockCategory', 'range': [360, 360], 'children': []}, {'type': 'Identifier', 'name': 'TEXT', 'range': [362, 362], 'children': []}]}]}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [366, 371], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [366, 371], 'children': [{'type': 'Identifier', 'name': 'input_schema', 'range': [366, 366], 'children': []}, {'type': 'MemberExpression', 'name': 'WordCharacterCountBlock.Input', 'range': [368, 370], 'children': [{'type': 'Identifier', 'name': 'WordCharacterCountBlock', 'range': [368, 368], 'children': []}, {'type': 'Identifier', 'name': 'Input', 'range': [370, 370], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [373, 377], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [373, 377], 'children': [{'type': 'Identifier', 'name': 'output_schema', 'range': [373, 373], 'children': []}, {'type': 'MemberExpression', 'name': 'WordCharacterCountBlock.Output', 'range': [375, 377], 'children': [{'type': 'Identifier', 'name': 'WordCharacterCountBlock', 'range': [375, 375], 'children': []}, {'type': 'Identifier', 'name': 'Output', 'range': [377, 377], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [380, 386], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [380, 386], 'children': [{'type': 'Identifier', 'name': 'test_input', 'range': [380, 380], 'children': []}, {'type': 'ObjectExpression', 'name': '', 'range': [382, 386], 'children': [{'type': 'Property', 'name': '"text"', 'range': [383, 385], 'children': [{'type': 'Literal', 'name': '"text"', 'range': [383, 383], 'children': []}, {'type': 'Literal', 'name': '"Hello, how are you?"', 'range': [385, 385], 'children': []}]}]}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [389, 403], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [389, 403], 'children': [{'type': 'Identifier', 'name': 'test_output', 'range': [389, 389], 'children': []}, {'type': 'ArrayExpression', 'name': '', 'range': [391, 403], 'children': [{'type': 'TupleExpression', 'name': '', 'range': [392, 396], 'children': [{'type': 'Literal', 'name': '"word_count"', 'range': [393, 393], 'children': []}, {'type': 'Literal', 'name': '4', 'range': [395, 395], 'children': []}]}, {'type': 'TupleExpression', 'name': '', 'range': [398, 402], 'children': [{'type': 'Literal', 'name': '"character_count"', 'range': [399, 399], 'children': []}, {'type': 'Literal', 'name': '19', 'range': [401, 401], 'children': []}]}]}]}]}]}]}]}
2025-01-08 09:57:44,998 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:58:21,461 - INFO - Step 5 result: {'type': 'Program', 'name': '__init__', 'range': [333, 407], 'children': [{'type': 'FunctionDecl', 'name': '__init__', 'range': [333, 407], 'children': [{'type': 'ParameterList', 'name': '', 'range': [335, 337], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [336, 336], 'children': []}]}, {'type': 'Block', 'name': '', 'range': [338, 407], 'children': [{'type': 'ExpressionStatement', 'name': '', 'range': [340, 344], 'children': [{'type': 'CallExpression', 'name': 'super', 'range': [340, 344], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [341, 342], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [347, 349], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [347, 349], 'children': [{'type': 'Identifier', 'name': 'id', 'range': [347, 347], 'children': []}, {'type': 'Literal', 'name': '"ab2a782d-22cf-4587-8a70-55b59b3f9f90"', 'range': [349, 349], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [352, 354], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [352, 354], 'children': [{'type': 'Identifier', 'name': 'description', 'range': [352, 352], 'children': []}, {'type': 'Literal', 'name': '"Counts the number of words and characters in a given text."', 'range': [354, 354], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [357, 363], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [357, 363], 'children': [{'type': 'Identifier', 'name': 'categories', 'range': [357, 357], 'children': []}, {'type': 'ObjectExpression', 'name': '', 'range': [359, 363], 'children': [{'type': 'Property', 'name': 'BlockCategory.TEXT', 'range': [360, 362], 'children': [{'type': 'Identifier', 'name': 'BlockCategory', 'range': [360, 360], 'children': []}, {'type': 'Identifier', 'name': 'TEXT', 'range': [362, 362], 'children': []}]}]}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [366, 371], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [366, 371], 'children': [{'type': 'Identifier', 'name': 'input_schema', 'range': [366, 366], 'children': []}, {'type': 'MemberExpression', 'name': 'WordCharacterCountBlock.Input', 'range': [368, 370], 'children': [{'type': 'Identifier', 'name': 'WordCharacterCountBlock', 'range': [368, 368], 'children': []}, {'type': 'Identifier', 'name': 'Input', 'range': [370, 370], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [373, 377], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [373, 377], 'children': [{'type': 'Identifier', 'name': 'output_schema', 'range': [373, 373], 'children': []}, {'type': 'MemberExpression', 'name': 'WordCharacterCountBlock.Output', 'range': [375, 377], 'children': [{'type': 'Identifier', 'name': 'WordCharacterCountBlock', 'range': [375, 375], 'children': []}, {'type': 'Identifier', 'name': 'Output', 'range': [377, 377], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [380, 386], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [380, 386], 'children': [{'type': 'Identifier', 'name': 'test_input', 'range': [380, 380], 'children': []}, {'type': 'ObjectExpression', 'name': '', 'range': [382, 386], 'children': [{'type': 'Property', 'name': '"text"', 'range': [383, 385], 'children': [{'type': 'Literal', 'name': '"text"', 'range': [383, 383], 'children': []}, {'type': 'Literal', 'name': '"Hello, how are you?"', 'range': [385, 385], 'children': []}]}]}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [389, 403], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [389, 403], 'children': [{'type': 'Identifier', 'name': 'test_output', 'range': [389, 389], 'children': []}, {'type': 'ArrayExpression', 'name': '', 'range': [391, 403], 'children': [{'type': 'TupleExpression', 'name': '', 'range': [392, 396], 'children': [{'type': 'Literal', 'name': '"word_count"', 'range': [393, 393], 'children': []}, {'type': 'Literal', 'name': '4', 'range': [395, 395], 'children': []}]}, {'type': 'TupleExpression', 'name': '', 'range': [398, 402], 'children': [{'type': 'Literal', 'name': '"character_count"', 'range': [399, 399], 'children': []}, {'type': 'Literal', 'name': '19', 'range': [401, 401], 'children': []}]}]}]}]}]}]}]}
2025-01-08 09:58:21,461 - INFO - Completed main AST analysis flow
2025-01-08 09:58:21,462 - INFO - Successfully processed chunk
2025-01-08 09:58:25,784 - INFO - Step 4 result: {'type': 'Program', 'name': '', 'range': [26, 257], 'children': [{'type': 'ClassDecl', 'name': 'WordCharacterCountBlock', 'range': [26, 32], 'children': []}, {'type': 'ClassDecl', 'name': 'Input', 'range': [33, 63], 'children': [{'type': 'FieldDecl', 'name': 'text', 'range': [40, 62], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [42, 42], 'children': []}, {'type': 'AssignmentExpression', 'name': '=', 'range': [43, 43], 'children': [{'type': 'CallExpression', 'name': 'SchemaField', 'range': [44, 62], 'children': [{'type': 'Argument', 'name': 'description', 'range': [47, 49], 'children': []}, {'type': 'Argument', 'name': 'placeholder', 'range': [52, 54], 'children': []}, {'type': 'Argument', 'name': 'advanced', 'range': [57, 59], 'children': []}]}]}]}]}, {'type': 'ClassDecl', 'name': 'Output', 'range': [65, 108], 'children': [{'type': 'FieldDecl', 'name': 'word_count', 'range': [72, 81], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [74, 74], 'children': []}, {'type': 'AssignmentExpression', 'name': '=', 'range': [75, 75], 'children': [{'type': 'CallExpression', 'name': 'SchemaField', 'range': [76, 81], 'children': [{'type': 'Argument', 'name': 'description', 'range': [78, 80], 'children': []}]}]}]}, {'type': 'FieldDecl', 'name': 'character_count', 'range': [83, 94], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [85, 85], 'children': []}, {'type': 'AssignmentExpression', 'name': '=', 'range': [86, 86], 'children': [{'type': 'CallExpression', 'name': 'SchemaField', 'range': [87, 94], 'children': [{'type': 'Argument', 'name': 'description', 'range': [90, 92], 'children': []}]}]}]}, {'type': 'FieldDecl', 'name': 'error', 'range': [96, 107], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [98, 98], 'children': []}, {'type': 'AssignmentExpression', 'name': '=', 'range': [99, 99], 'children': [{'type': 'CallExpression', 'name': 'SchemaField', 'range': [100, 107], 'children': [{'type': 'Argument', 'name': 'description', 'range': [103, 105], 'children': []}]}]}]}]}, {'type': 'FunctionDecl', 'name': '__init__', 'range': [110, 184], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [113, 113], 'children': []}, {'type': 'CallExpression', 'name': 'super', 'range': [117, 123], 'children': []}, {'type': 'AssignmentExpression', 'name': '=', 'range': [125, 125], 'children': [{'type': 'Literal', 'name': '"ab2a782d-22cf-4587-8a70-55b59b3f9f90"', 'range': [126, 126], 'children': []}]}, {'type': 'AssignmentExpression', 'name': '=', 'range': [130, 130], 'children': [{'type': 'Literal', 'name': '"Counts the number of words and characters in a given text."', 'range': [131, 131], 'children': []}]}, {'type': 'AssignmentExpression', 'name': '=', 'range': [135, 135], 'children': [{'type': 'ObjectExpression', 'name': '{BlockCategory.TEXT}', 'range': [136, 140], 'children': []}]}, {'type': 'AssignmentExpression', 'name': '=', 'range': [145, 145], 'children': [{'type': 'MemberExpression', 'name': 'WordCharacterCountBlock.Input', 'range': [146, 147], 'children': []}]}, {'type': 'AssignmentExpression', 'name': '=', 'range': [152, 152], 'children': [{'type': 'MemberExpression', 'name': 'WordCharacterCountBlock.Output', 'range': [153, 154], 'children': []}]}, {'type': 'AssignmentExpression', 'name': '=', 'range': [159, 159], 'children': [{'type': 'ObjectExpression', 'name': '{"text": "Hello, how are you?"}', 'range': [160, 163], 'children': []}]}, {'type': 'AssignmentExpression', 'name': '=', 'range': [168, 168], 'children': [{'type': 'ArrayExpression', 'name': '[("word_count", 4), ("character_count", 19)]', 'range': [169, 180], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'run', 'range': [186, 257], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [189, 189], 'children': []}, {'type': 'Parameter', 'name': 'input_data', 'range': [191, 191], 'children': [{'type': 'TypeAnnotation', 'name': 'Input', 'range': [193, 193], 'children': []}]}, {'type': 'Parameter', 'name': 'kwargs', 'range': [197, 197], 'children': []}, {'type': 'ReturnTypeAnnotation', 'name': 'BlockOutput', 'range': [201, 201], 'children': []}, {'type': 'TryStatement', 'name': 'try', 'range': [204, 256], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [208, 208], 'children': [{'type': 'MemberExpression', 'name': 'input_data.text', 'range': [209, 211], 'children': []}]}, {'type': 'AssignmentExpression', 'name': '=', 'range': [214, 214], 'children': [{'type': 'CallExpression', 'name': 'len', 'range': [215, 222], 'children': [{'type': 'CallExpression', 'name': 'split', 'range': [219, 221], 'children': []}]}]}, {'type': 'AssignmentExpression', 'name': '=', 'range': [225, 225], 'children': [{'type': 'CallExpression', 'name': 'len', 'range': [226, 229], 'children': []}]}, {'type': 'YieldExpression', 'name': 'yield', 'range': [232, 236], 'children': [{'type': 'Literal', 'name': '"word_count"', 'range': [233, 233], 'children': []}, {'type': 'Identifier', 'name': 'word_count', 'range': [235, 235], 'children': []}]}, {'type': 'YieldExpression', 'name': 'yield', 'range': [237, 241], 'children': [{'type': 'Literal', 'name': '"character_count"', 'range': [238, 238], 'children': []}, {'type': 'Identifier', 'name': 'character_count', 'range': [240, 240], 'children': []}]}, {'type': 'CatchClause', 'name': 'except', 'range': [243, 256], 'children': [{'type': 'Parameter', 'name': 'e', 'range': [246, 246], 'children': []}, {'type': 'YieldExpression', 'name': 'yield', 'range': [249, 256], 'children': [{'type': 'Literal', 'name': '"error"', 'range': [250, 250], 'children': []}, {'type': 'CallExpression', 'name': 'str', 'range': [252, 255], 'children': [{'type': 'Identifier', 'name': 'e', 'range': [254, 254], 'children': []}]}]}]}]}]}]}
2025-01-08 09:58:25,784 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:59:16,322 - INFO - Step 5 result: {'type': 'Program', 'name': 'MainProgram', 'range': [26, 257], 'children': [{'type': 'ClassDecl', 'name': 'WordCharacterCountBlock', 'range': [26, 32], 'children': []}, {'type': 'ClassDecl', 'name': 'Input', 'range': [33, 63], 'children': [{'type': 'FieldDecl', 'name': 'text', 'range': [40, 62], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [42, 42], 'children': []}, {'type': 'AssignmentExpression', 'name': '=', 'range': [43, 43], 'children': [{'type': 'CallExpression', 'name': 'SchemaField', 'range': [44, 62], 'children': [{'type': 'Argument', 'name': 'description', 'range': [47, 49], 'children': []}, {'type': 'Argument', 'name': 'placeholder', 'range': [52, 54], 'children': []}, {'type': 'Argument', 'name': 'advanced', 'range': [57, 59], 'children': []}]}]}]}]}, {'type': 'ClassDecl', 'name': 'Output', 'range': [65, 108], 'children': [{'type': 'FieldDecl', 'name': 'word_count', 'range': [72, 81], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [74, 74], 'children': []}, {'type': 'AssignmentExpression', 'name': '=', 'range': [75, 75], 'children': [{'type': 'CallExpression', 'name': 'SchemaField', 'range': [76, 81], 'children': [{'type': 'Argument', 'name': 'description', 'range': [78, 80], 'children': []}]}]}]}, {'type': 'FieldDecl', 'name': 'character_count', 'range': [83, 94], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [85, 85], 'children': []}, {'type': 'AssignmentExpression', 'name': '=', 'range': [86, 86], 'children': [{'type': 'CallExpression', 'name': 'SchemaField', 'range': [87, 94], 'children': [{'type': 'Argument', 'name': 'description', 'range': [90, 92], 'children': []}]}]}]}, {'type': 'FieldDecl', 'name': 'error', 'range': [96, 107], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [98, 98], 'children': []}, {'type': 'AssignmentExpression', 'name': '=', 'range': [99, 99], 'children': [{'type': 'CallExpression', 'name': 'SchemaField', 'range': [100, 107], 'children': [{'type': 'Argument', 'name': 'description', 'range': [103, 105], 'children': []}]}]}]}]}, {'type': 'FunctionDecl', 'name': '__init__', 'range': [110, 184], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [113, 113], 'children': []}, {'type': 'CallExpression', 'name': 'super', 'range': [117, 123], 'children': []}, {'type': 'AssignmentExpression', 'name': '=', 'range': [125, 125], 'children': [{'type': 'Literal', 'name': '"ab2a782d-22cf-4587-8a70-55b59b3f9f90"', 'range': [126, 126], 'children': []}]}, {'type': 'AssignmentExpression', 'name': '=', 'range': [130, 130], 'children': [{'type': 'Literal', 'name': '"Counts the number of words and characters in a given text."', 'range': [131, 131], 'children': []}]}, {'type': 'AssignmentExpression', 'name': '=', 'range': [135, 135], 'children': [{'type': 'ObjectExpression', 'name': '{BlockCategory.TEXT}', 'range': [136, 140], 'children': []}]}, {'type': 'AssignmentExpression', 'name': '=', 'range': [145, 145], 'children': [{'type': 'MemberExpression', 'name': 'WordCharacterCountBlock.Input', 'range': [146, 147], 'children': []}]}, {'type': 'AssignmentExpression', 'name': '=', 'range': [152, 152], 'children': [{'type': 'MemberExpression', 'name': 'WordCharacterCountBlock.Output', 'range': [153, 154], 'children': []}]}, {'type': 'AssignmentExpression', 'name': '=', 'range': [159, 159], 'children': [{'type': 'ObjectExpression', 'name': '{"text": "Hello, how are you?"}', 'range': [160, 163], 'children': []}]}, {'type': 'AssignmentExpression', 'name': '=', 'range': [168, 168], 'children': [{'type': 'ArrayExpression', 'name': '[("word_count", 4), ("character_count", 19)]', 'range': [169, 180], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'run', 'range': [186, 257], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [189, 189], 'children': []}, {'type': 'Parameter', 'name': 'input_data', 'range': [191, 191], 'children': [{'type': 'TypeAnnotation', 'name': 'Input', 'range': [193, 193], 'children': []}]}, {'type': 'Parameter', 'name': 'kwargs', 'range': [197, 197], 'children': []}, {'type': 'ReturnTypeAnnotation', 'name': 'BlockOutput', 'range': [201, 201], 'children': []}, {'type': 'TryStatement', 'name': 'try', 'range': [204, 256], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [208, 208], 'children': [{'type': 'MemberExpression', 'name': 'input_data.text', 'range': [209, 211], 'children': []}]}, {'type': 'AssignmentExpression', 'name': '=', 'range': [214, 214], 'children': [{'type': 'CallExpression', 'name': 'len', 'range': [215, 222], 'children': [{'type': 'CallExpression', 'name': 'split', 'range': [219, 221], 'children': []}]}]}, {'type': 'AssignmentExpression', 'name': '=', 'range': [225, 225], 'children': [{'type': 'CallExpression', 'name': 'len', 'range': [226, 229], 'children': []}]}, {'type': 'YieldExpression', 'name': 'yield', 'range': [232, 236], 'children': [{'type': 'Literal', 'name': '"word_count"', 'range': [233, 233], 'children': []}, {'type': 'Identifier', 'name': 'word_count', 'range': [235, 235], 'children': []}]}, {'type': 'YieldExpression', 'name': 'yield', 'range': [237, 241], 'children': [{'type': 'Literal', 'name': '"character_count"', 'range': [238, 238], 'children': []}, {'type': 'Identifier', 'name': 'character_count', 'range': [240, 240], 'children': []}]}, {'type': 'CatchClause', 'name': 'except', 'range': [243, 256], 'children': [{'type': 'Parameter', 'name': 'e', 'range': [246, 246], 'children': []}, {'type': 'YieldExpression', 'name': 'yield', 'range': [249, 256], 'children': [{'type': 'Literal', 'name': '"error"', 'range': [250, 250], 'children': []}, {'type': 'CallExpression', 'name': 'str', 'range': [252, 255], 'children': [{'type': 'Identifier', 'name': 'e', 'range': [254, 254], 'children': []}]}]}]}]}]}]}
2025-01-08 09:59:16,322 - INFO - Completed main AST analysis flow
2025-01-08 09:59:16,322 - INFO - Successfully processed chunk
2025-01-08 09:59:16,343 - INFO - Starting code generation from AST
2025-01-08 09:59:24,389 - INFO - Successfully generated code from AST
2025-01-08 09:59:24,390 - INFO - Starting static code similarity comparison
2025-01-08 09:59:24,393 - INFO - Static similarity result: {'final_score': 96.78, 'length_similarity': 97.07, 'token_similarity': 100.0, 'structure_similarity': 88.89, 'function_similarity': 100, 'complexity_similarity': 100.0, 'variable_similarity': 100}
