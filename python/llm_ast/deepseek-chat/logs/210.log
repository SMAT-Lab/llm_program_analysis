2025-01-08 10:28:20,048 - INFO - Processing sample 210
2025-01-08 10:28:20,048 - INFO - Starting Step 0: Splitting code into top-level declarations
2025-01-08 10:28:24,610 - INFO - Successfully split code into 2 top-level declarations
2025-01-08 10:28:24,611 - INFO - Processing chunk #0 (size=634 chars, start_index=0)
2025-01-08 10:28:24,613 - INFO - Processing chunk with 634 chars starting at index 0
2025-01-08 10:28:24,613 - INFO - Starting main AST analysis flow
2025-01-08 10:28:24,613 - INFO - Tokenized code into 58 tokens
2025-01-08 10:28:24,613 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:28:24,614 - INFO - Processing chunk #1 (size=70 chars, start_index=58)
2025-01-08 10:28:24,614 - INFO - Processing chunk with 70 chars starting at index 58
2025-01-08 10:28:24,614 - INFO - Starting main AST analysis flow
2025-01-08 10:28:24,614 - INFO - Tokenized code into 18 tokens
2025-01-08 10:28:24,614 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:28:26,321 - INFO - Step 1 result: {'type': 'Program', 'name': 'binary_coded_decimal', 'range': [0, 57], 'children': []}
2025-01-08 10:28:26,321 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:28,457 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [58, 75], 'children': [{'type': 'IfStatement', 'name': '', 'range': [58, 64], 'children': []}, {'type': 'ImportStatement', 'name': 'doctest', 'range': [65, 67], 'children': []}, {'type': 'ExpressionStatement', 'name': '', 'range': [69, 74], 'children': [{'type': 'CallExpression', 'name': 'testmod', 'range': [69, 73], 'children': []}]}]}
2025-01-08 10:28:28,457 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:39,152 - INFO - Step 2 result: {'nodes': [{'type': 'IfStatement', 'name': '', 'range': [58, 64], 'children': [{'type': 'Condition', 'name': '', 'range': [59, 62], 'children': [{'type': 'Identifier', 'name': '__name__', 'range': [59, 59], 'children': []}, {'type': 'Operator', 'name': '==', 'range': [60, 61], 'children': []}, {'type': 'StringLiteral', 'name': '"__main__"', 'range': [62, 62], 'children': []}]}]}, {'type': 'ImportStatement', 'name': 'doctest', 'range': [65, 67], 'children': [{'type': 'Identifier', 'name': 'doctest', 'range': [66, 66], 'children': []}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [69, 74], 'children': [{'type': 'CallExpression', 'name': 'testmod', 'range': [69, 73], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [69, 71], 'children': [{'type': 'Identifier', 'name': 'doctest', 'range': [69, 69], 'children': []}, {'type': 'Operator', 'name': '.', 'range': [70, 70], 'children': []}, {'type': 'Identifier', 'name': 'testmod', 'range': [71, 71], 'children': []}]}, {'type': 'Arguments', 'name': '', 'range': [72, 73], 'children': []}]}]}]}
2025-01-08 10:28:39,152 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:43,247 - INFO - Step 2 result: {'type': 'Program', 'name': 'binary_coded_decimal', 'range': [0, 57], 'children': [{'type': 'FunctionDeclaration', 'name': 'binary_coded_decimal', 'range': [0, 57], 'children': [{'type': 'Parameter', 'name': 'number', 'range': [3, 5], 'children': []}, {'type': 'ReturnType', 'name': 'str', 'range': [7, 9], 'children': []}, {'type': 'Docstring', 'name': '', 'range': [12, 14], 'children': []}, {'type': 'ReturnStatement', 'name': '', 'range': [16, 56], 'children': [{'type': 'BinaryExpression', 'name': '+', 'range': [17, 19], 'children': [{'type': 'StringLiteral', 'name': '"0b"', 'range': [17, 17], 'children': []}, {'type': 'MethodCall', 'name': 'join', 'range': [19, 56], 'children': [{'type': 'StringLiteral', 'name': '""', 'range': [19, 19], 'children': []}, {'type': 'ListComprehension', 'name': '', 'range': [21, 56], 'children': [{'type': 'CallExpression', 'name': 'str', 'range': [24, 33], 'children': [{'type': 'CallExpression', 'name': 'bin', 'range': [26, 32], 'children': [{'type': 'CallExpression', 'name': 'int', 'range': [28, 31], 'children': [{'type': 'Identifier', 'name': 'digit', 'range': [30, 30], 'children': []}]}]}]}, {'type': 'SliceExpression', 'name': '', 'range': [34, 37], 'children': [{'type': 'NumericLiteral', 'name': '2', 'range': [35, 35], 'children': []}]}, {'type': 'MethodCall', 'name': 'zfill', 'range': [38, 42], 'children': [{'type': 'NumericLiteral', 'name': '4', 'range': [41, 41], 'children': []}]}, {'type': 'ForStatement', 'name': '', 'range': [43, 55], 'children': [{'type': 'Identifier', 'name': 'digit', 'range': [44, 44], 'children': []}, {'type': 'CallExpression', 'name': 'str', 'range': [46, 54], 'children': [{'type': 'CallExpression', 'name': 'max', 'range': [48, 53], 'children': [{'type': 'NumericLiteral', 'name': '0', 'range': [50, 50], 'children': []}, {'type': 'Identifier', 'name': 'number', 'range': [52, 52], 'children': []}]}]}]}]}]}]}]}]}]}
2025-01-08 10:28:43,248 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:48,641 - INFO - Step 3 result: {'nodes': [{'type': 'IfStatement', 'name': '', 'range': [58, 64], 'children': [{'type': 'Condition', 'name': '', 'range': [59, 62], 'children': [{'type': 'Identifier', 'name': '__name__', 'range': [59, 59], 'children': []}, {'type': 'Operator', 'name': '==', 'range': [60, 61], 'children': []}, {'type': 'StringLiteral', 'name': '"__main__"', 'range': [62, 62], 'children': []}]}]}, {'type': 'ImportStatement', 'name': 'doctest', 'range': [65, 67], 'children': [{'type': 'Identifier', 'name': 'doctest', 'range': [66, 66], 'children': []}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [69, 74], 'children': [{'type': 'CallExpression', 'name': 'testmod', 'range': [69, 73], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [69, 71], 'children': [{'type': 'Identifier', 'name': 'doctest', 'range': [69, 69], 'children': []}, {'type': 'Identifier', 'name': 'testmod', 'range': [71, 71], 'children': []}]}]}]}]}
2025-01-08 10:28:48,641 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:57,635 - INFO - Step 4 result: {'nodes': [{'type': 'IfStatement', 'name': '', 'range': [58, 64], 'children': [{'type': 'BinaryExpression', 'name': '', 'range': [59, 62], 'children': [{'type': 'Identifier', 'name': '__name__', 'range': [59, 59], 'children': []}, {'type': 'Operator', 'name': '==', 'range': [60, 61], 'children': []}, {'type': 'Literal', 'name': '"__main__"', 'range': [62, 62], 'children': []}]}]}, {'type': 'ImportStatement', 'name': 'doctest', 'range': [65, 67], 'children': [{'type': 'Identifier', 'name': 'doctest', 'range': [66, 66], 'children': []}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [69, 74], 'children': [{'type': 'CallExpression', 'name': 'testmod', 'range': [69, 73], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [69, 71], 'children': [{'type': 'Identifier', 'name': 'doctest', 'range': [69, 69], 'children': []}, {'type': 'Identifier', 'name': 'testmod', 'range': [71, 71], 'children': []}]}]}]}]}
2025-01-08 10:28:57,635 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:28:59,904 - INFO - Step 3 result: {'type': 'Program', 'name': 'binary_coded_decimal', 'range': [0, 57], 'children': [{'type': 'FunctionDeclaration', 'name': 'binary_coded_decimal', 'range': [0, 57], 'children': [{'type': 'Parameter', 'name': 'number', 'range': [3, 5], 'children': []}, {'type': 'ReturnType', 'name': 'str', 'range': [7, 9], 'children': []}, {'type': 'Docstring', 'name': '', 'range': [12, 14], 'children': []}, {'type': 'ReturnStatement', 'name': '', 'range': [16, 56], 'children': [{'type': 'BinaryExpression', 'name': '+', 'range': [17, 19], 'children': [{'type': 'StringLiteral', 'name': '"0b"', 'range': [17, 17], 'children': []}, {'type': 'MethodCall', 'name': 'join', 'range': [19, 56], 'children': [{'type': 'StringLiteral', 'name': '""', 'range': [19, 19], 'children': []}, {'type': 'ListComprehension', 'name': '', 'range': [21, 56], 'children': [{'type': 'CallExpression', 'name': 'str', 'range': [24, 33], 'children': [{'type': 'CallExpression', 'name': 'bin', 'range': [26, 32], 'children': [{'type': 'CallExpression', 'name': 'int', 'range': [28, 31], 'children': [{'type': 'Identifier', 'name': 'digit', 'range': [30, 30], 'children': []}]}]}]}, {'type': 'SliceExpression', 'name': '', 'range': [34, 37], 'children': [{'type': 'NumericLiteral', 'name': '2', 'range': [35, 35], 'children': []}]}, {'type': 'MethodCall', 'name': 'zfill', 'range': [38, 42], 'children': [{'type': 'NumericLiteral', 'name': '4', 'range': [41, 41], 'children': []}]}, {'type': 'ForStatement', 'name': '', 'range': [43, 55], 'children': [{'type': 'Identifier', 'name': 'digit', 'range': [44, 44], 'children': []}, {'type': 'CallExpression', 'name': 'str', 'range': [46, 54], 'children': [{'type': 'CallExpression', 'name': 'max', 'range': [48, 53], 'children': [{'type': 'NumericLiteral', 'name': '0', 'range': [50, 50], 'children': []}, {'type': 'Identifier', 'name': 'number', 'range': [52, 52], 'children': []}]}]}]}]}]}]}]}]}]}
2025-01-08 10:28:59,905 - INFO - Starting Step 4: AST normalization
2025-01-08 10:29:07,767 - INFO - Step 5 result: {'nodes': [{'type': 'Program', 'name': 'MainProgram', 'range': [58, 74], 'children': [{'type': 'IfStatement', 'name': '', 'range': [58, 64], 'children': [{'type': 'BinaryExpression', 'name': '', 'range': [59, 62], 'children': [{'type': 'Identifier', 'name': '__name__', 'range': [59, 59], 'children': []}, {'type': 'Operator', 'name': '==', 'range': [60, 61], 'children': []}, {'type': 'Literal', 'name': '"__main__"', 'range': [62, 62], 'children': []}]}]}, {'type': 'ImportStatement', 'name': 'doctest', 'range': [65, 67], 'children': [{'type': 'Identifier', 'name': 'doctest', 'range': [66, 66], 'children': []}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [69, 74], 'children': [{'type': 'CallExpression', 'name': 'testmod', 'range': [69, 73], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [69, 71], 'children': [{'type': 'Identifier', 'name': 'doctest', 'range': [69, 69], 'children': []}, {'type': 'Identifier', 'name': 'testmod', 'range': [71, 71], 'children': []}]}]}]}]}]}
2025-01-08 10:29:07,767 - INFO - Completed main AST analysis flow
2025-01-08 10:29:07,768 - INFO - Successfully processed chunk
2025-01-08 10:29:17,028 - INFO - Step 4 result: {'type': 'Program', 'name': 'binary_coded_decimal', 'range': [0, 57], 'children': [{'type': 'FunctionDecl', 'name': 'binary_coded_decimal', 'range': [0, 57], 'children': [{'type': 'Parameter', 'name': 'number', 'range': [3, 5], 'children': []}, {'type': 'ReturnType', 'name': 'str', 'range': [7, 9], 'children': []}, {'type': 'Docstring', 'name': '', 'range': [12, 14], 'children': []}, {'type': 'ReturnStatement', 'name': '', 'range': [16, 56], 'children': [{'type': 'BinaryExpression', 'name': '+', 'range': [17, 19], 'children': [{'type': 'Literal', 'name': '"0b"', 'range': [17, 17], 'children': []}, {'type': 'CallExpression', 'name': 'join', 'range': [19, 56], 'children': [{'type': 'Literal', 'name': '""', 'range': [19, 19], 'children': []}, {'type': 'ListComprehension', 'name': '', 'range': [21, 56], 'children': [{'type': 'CallExpression', 'name': 'str', 'range': [24, 33], 'children': [{'type': 'CallExpression', 'name': 'bin', 'range': [26, 32], 'children': [{'type': 'CallExpression', 'name': 'int', 'range': [28, 31], 'children': [{'type': 'Identifier', 'name': 'digit', 'range': [30, 30], 'children': []}]}]}]}, {'type': 'SliceExpression', 'name': '', 'range': [34, 37], 'children': [{'type': 'Literal', 'name': '2', 'range': [35, 35], 'children': []}]}, {'type': 'CallExpression', 'name': 'zfill', 'range': [38, 42], 'children': [{'type': 'Literal', 'name': '4', 'range': [41, 41], 'children': []}]}, {'type': 'ForStatement', 'name': '', 'range': [43, 55], 'children': [{'type': 'Identifier', 'name': 'digit', 'range': [44, 44], 'children': []}, {'type': 'CallExpression', 'name': 'str', 'range': [46, 54], 'children': [{'type': 'CallExpression', 'name': 'max', 'range': [48, 53], 'children': [{'type': 'Literal', 'name': '0', 'range': [50, 50], 'children': []}, {'type': 'Identifier', 'name': 'number', 'range': [52, 52], 'children': []}]}]}]}]}]}]}]}]}]}
2025-01-08 10:29:17,028 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:29:33,245 - INFO - Step 5 result: {'type': 'Program', 'name': 'binary_coded_decimal', 'range': [0, 57], 'children': [{'type': 'FunctionDecl', 'name': 'binary_coded_decimal', 'range': [0, 57], 'children': [{'type': 'Parameter', 'name': 'number', 'range': [3, 5], 'children': []}, {'type': 'ReturnType', 'name': 'str', 'range': [7, 9], 'children': []}, {'type': 'Docstring', 'name': '', 'range': [12, 14], 'children': []}, {'type': 'ReturnStatement', 'name': '', 'range': [16, 56], 'children': [{'type': 'BinaryExpression', 'name': '+', 'range': [17, 19], 'children': [{'type': 'Literal', 'name': '"0b"', 'range': [17, 17], 'children': []}, {'type': 'CallExpression', 'name': 'join', 'range': [19, 56], 'children': [{'type': 'Literal', 'name': '""', 'range': [19, 19], 'children': []}, {'type': 'ListComprehension', 'name': '', 'range': [21, 56], 'children': [{'type': 'CallExpression', 'name': 'str', 'range': [24, 33], 'children': [{'type': 'CallExpression', 'name': 'bin', 'range': [26, 32], 'children': [{'type': 'CallExpression', 'name': 'int', 'range': [28, 31], 'children': [{'type': 'Identifier', 'name': 'digit', 'range': [30, 30], 'children': []}]}]}]}, {'type': 'SliceExpression', 'name': '', 'range': [34, 37], 'children': [{'type': 'Literal', 'name': '2', 'range': [35, 35], 'children': []}]}, {'type': 'CallExpression', 'name': 'zfill', 'range': [38, 42], 'children': [{'type': 'Literal', 'name': '4', 'range': [41, 41], 'children': []}]}, {'type': 'ForStatement', 'name': '', 'range': [43, 55], 'children': [{'type': 'Identifier', 'name': 'digit', 'range': [44, 44], 'children': []}, {'type': 'CallExpression', 'name': 'str', 'range': [46, 54], 'children': [{'type': 'CallExpression', 'name': 'max', 'range': [48, 53], 'children': [{'type': 'Literal', 'name': '0', 'range': [50, 50], 'children': []}, {'type': 'Identifier', 'name': 'number', 'range': [52, 52], 'children': []}]}]}]}]}]}]}]}]}]}
2025-01-08 10:29:33,246 - INFO - Completed main AST analysis flow
2025-01-08 10:29:33,247 - INFO - Successfully processed chunk
2025-01-08 10:29:33,258 - INFO - Starting code generation from AST
2025-01-08 10:29:38,763 - INFO - Successfully generated code from AST
2025-01-08 10:29:38,764 - INFO - Starting static code similarity comparison
2025-01-08 10:29:38,766 - INFO - Static similarity result: {'final_score': 62.77, 'length_similarity': 59.34, 'token_similarity': 28.07, 'structure_similarity': 88.46, 'function_similarity': 100, 'complexity_similarity': 33.33, 'variable_similarity': 100}
