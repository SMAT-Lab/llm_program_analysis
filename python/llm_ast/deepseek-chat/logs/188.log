2025-01-08 10:27:27,733 - INFO - Processing sample 188
2025-01-08 10:27:27,733 - INFO - Starting Step 0: Splitting code into top-level declarations
2025-01-08 10:27:35,823 - INFO - Successfully split code into 8 top-level declarations
2025-01-08 10:27:35,826 - INFO - Processing chunk #0 (size=205 chars, start_index=0)
2025-01-08 10:27:35,841 - INFO - Processing chunk #1 (size=211 chars, start_index=52)
2025-01-08 10:27:35,873 - INFO - Processing chunk #2 (size=1339 chars, start_index=99)
2025-01-08 10:27:35,873 - INFO - Processing chunk with 205 chars starting at index 0
2025-01-08 10:27:35,936 - INFO - Processing chunk #3 (size=1199 chars, start_index=350)
2025-01-08 10:27:35,940 - INFO - Processing chunk with 211 chars starting at index 52
2025-01-08 10:27:35,955 - INFO - Starting main AST analysis flow
2025-01-08 10:27:35,955 - INFO - Tokenized code into 47 tokens
2025-01-08 10:27:35,954 - INFO - Processing chunk with 1199 chars starting at index 350
2025-01-08 10:27:35,955 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:35,941 - INFO - Processing chunk with 1339 chars starting at index 99
2025-01-08 10:27:35,945 - INFO - Starting main AST analysis flow
2025-01-08 10:27:35,955 - INFO - Starting main AST analysis flow
2025-01-08 10:27:35,960 - INFO - Starting main AST analysis flow
2025-01-08 10:27:35,960 - INFO - Tokenized code into 52 tokens
2025-01-08 10:27:35,961 - INFO - Processing chunk #4 (size=1148 chars, start_index=571)
2025-01-08 10:27:35,961 - INFO - Tokenized code into 221 tokens
2025-01-08 10:27:35,962 - INFO - Tokenized code into 251 tokens
2025-01-08 10:27:35,963 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:35,963 - INFO - Processing chunk with 1148 chars starting at index 571
2025-01-08 10:27:35,963 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:35,963 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:35,964 - INFO - Starting main AST analysis flow
2025-01-08 10:27:35,985 - INFO - Processing chunk #5 (size=1600 chars, start_index=785)
2025-01-08 10:27:35,986 - INFO - Tokenized code into 214 tokens
2025-01-08 10:27:35,986 - INFO - Processing chunk with 1600 chars starting at index 785
2025-01-08 10:27:35,994 - INFO - Starting main AST analysis flow
2025-01-08 10:27:35,994 - INFO - Processing chunk #6 (size=1262 chars, start_index=1083)
2025-01-08 10:27:35,991 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:35,995 - INFO - Tokenized code into 298 tokens
2025-01-08 10:27:35,996 - INFO - Processing chunk with 1262 chars starting at index 1083
2025-01-08 10:27:36,023 - INFO - Starting main AST analysis flow
2025-01-08 10:27:36,011 - INFO - Processing chunk #7 (size=911 chars, start_index=1325)
2025-01-08 10:27:36,054 - INFO - Processing chunk with 911 chars starting at index 1325
2025-01-08 10:27:35,996 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:36,054 - INFO - Starting main AST analysis flow
2025-01-08 10:27:36,024 - INFO - Tokenized code into 242 tokens
2025-01-08 10:27:36,121 - INFO - Tokenized code into 181 tokens
2025-01-08 10:27:36,144 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:36,147 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:42,978 - INFO - Step 1 result: {'type': 'Program', 'name': 'test_get_user_profile', 'range': [1332, 1505], 'children': []}
2025-01-08 10:27:42,984 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:27:43,176 - INFO - Step 1 result: {'type': 'Program', 'name': 'test_get_store_creator_details', 'range': [578, 783], 'children': []}
2025-01-08 10:27:43,176 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:27:43,185 - INFO - Step 1 result: {'type': 'Program', 'name': 'test_get_store_agent_details', 'range': [357, 569], 'children': []}
2025-01-08 10:27:43,195 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:27:43,252 - INFO - Step 1 result: {'type': 'Program', 'name': 'test_get_store_agents', 'range': [106, 348], 'children': []}
2025-01-08 10:27:43,289 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:27:43,322 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [52, 98], 'children': [{'type': 'FunctionDeclaration', 'name': 'setup_prisma', 'range': [62, 98], 'children': []}]}
2025-01-08 10:27:43,322 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:27:43,585 - INFO - Step 1 result: {'type': 'Program', 'name': 'test_update_profile', 'range': [1090, 1323], 'children': []}
2025-01-08 10:27:43,585 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:27:43,650 - INFO - Step 1 result: {'type': 'Program', 'name': 'test_create_store_submission', 'range': [792, 1081], 'children': []}
2025-01-08 10:27:43,650 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:27:48,384 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [0, 51], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 4], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [6, 10], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [11, 15], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [16, 18], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [19, 23], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [25, 37], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [38, 50], 'children': []}]}
2025-01-08 10:27:48,385 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:27:59,404 - INFO - Step 2 result: {'type': 'Program', 'name': '', 'range': [52, 98], 'children': [{'type': 'FunctionDeclaration', 'name': 'setup_prisma', 'range': [62, 98], 'children': [{'type': 'Decorator', 'name': '@pytest.fixture', 'range': [52, 60], 'children': [{'type': 'Argument', 'name': 'autouse', 'range': [57, 59], 'children': []}]}, {'type': 'FunctionBody', 'name': '', 'range': [68, 98], 'children': [{'type': 'Comment', 'name': "# Don't register client if already registered", 'range': [69, 77], 'children': []}, {'type': 'TryStatement', 'name': '', 'range': [79, 95], 'children': [{'type': 'Block', 'name': '', 'range': [81, 85], 'children': [{'type': 'ExpressionStatement', 'name': 'Prisma()', 'range': [82, 84], 'children': []}]}, {'type': 'CatchClause', 'name': 'except prisma.errors.ClientAlreadyRegisteredError', 'range': [86, 94], 'children': [{'type': 'Block', 'name': '', 'range': [93, 94], 'children': [{'type': 'ExpressionStatement', 'name': 'pass', 'range': [94, 94], 'children': []}]}]}]}, {'type': 'YieldStatement', 'name': 'yield', 'range': [96, 97], 'children': []}]}]}]}
2025-01-08 10:27:59,408 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:12,413 - INFO - Step 2 result: {'nodes': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 4], 'children': [{'type': 'FromImport', 'name': '', 'range': [0, 4], 'children': [{'type': 'Module', 'name': 'datetime', 'range': [1, 1], 'children': []}, {'type': 'ImportedItem', 'name': 'datetime', 'range': [3, 3], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [6, 10], 'children': [{'type': 'Import', 'name': '', 'range': [6, 10], 'children': [{'type': 'Module', 'name': 'prisma.errors', 'range': [7, 9], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [11, 15], 'children': [{'type': 'Import', 'name': '', 'range': [11, 15], 'children': [{'type': 'Module', 'name': 'prisma.models', 'range': [12, 14], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [16, 18], 'children': [{'type': 'Import', 'name': '', 'range': [16, 18], 'children': [{'type': 'Module', 'name': 'pytest', 'range': [17, 17], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [19, 23], 'children': [{'type': 'FromImport', 'name': '', 'range': [19, 23], 'children': [{'type': 'Module', 'name': 'prisma', 'range': [20, 20], 'children': []}, {'type': 'ImportedItem', 'name': 'Prisma', 'range': [22, 22], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [25, 37], 'children': [{'type': 'Import', 'name': '', 'range': [25, 37], 'children': [{'type': 'Module', 'name': 'backend.server.v2.store.db', 'range': [26, 34], 'children': []}, {'type': 'Alias', 'name': 'db', 'range': [36, 36], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [38, 50], 'children': [{'type': 'FromImport', 'name': '', 'range': [38, 50], 'children': [{'type': 'Module', 'name': 'backend.server.v2.store.model', 'range': [39, 47], 'children': []}, {'type': 'ImportedItem', 'name': 'Profile', 'range': [49, 49], 'children': []}]}]}]}
2025-01-08 10:28:12,433 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:18,067 - INFO - Step 3 result: {'type': 'Program', 'name': '', 'range': [52, 98], 'children': [{'type': 'FunctionDeclaration', 'name': 'setup_prisma', 'range': [62, 98], 'children': [{'type': 'Decorator', 'name': '@pytest.fixture', 'range': [52, 60], 'children': [{'type': 'Argument', 'name': 'autouse', 'range': [57, 59], 'children': []}]}, {'type': 'FunctionBody', 'name': '', 'range': [68, 98], 'children': [{'type': 'Comment', 'name': "# Don't register client if already registered", 'range': [69, 77], 'children': []}, {'type': 'TryStatement', 'name': '', 'range': [79, 95], 'children': [{'type': 'Block', 'name': '', 'range': [81, 85], 'children': [{'type': 'ExpressionStatement', 'name': 'Prisma', 'range': [82, 84], 'children': []}]}, {'type': 'CatchClause', 'name': 'except prisma.errors.ClientAlreadyRegisteredError', 'range': [86, 94], 'children': [{'type': 'Block', 'name': '', 'range': [93, 94], 'children': [{'type': 'ExpressionStatement', 'name': 'pass', 'range': [94, 94], 'children': []}]}]}]}, {'type': 'YieldStatement', 'name': 'yield', 'range': [96, 97], 'children': []}]}]}]}
2025-01-08 10:28:18,092 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:31,771 - INFO - Step 4 result: {'type': 'Program', 'name': '', 'range': [52, 98], 'children': [{'type': 'FunctionDecl', 'name': 'setup_prisma', 'range': [62, 98], 'children': [{'type': 'Decorator', 'name': '@pytest.fixture', 'range': [52, 60], 'children': [{'type': 'Argument', 'name': 'autouse', 'range': [57, 59], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [68, 98], 'children': [{'type': 'Comment', 'name': "# Don't register client if already registered", 'range': [69, 77], 'children': []}, {'type': 'TryStatement', 'name': '', 'range': [79, 95], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [81, 85], 'children': [{'type': 'ExpressionStatement', 'name': '', 'range': [82, 84], 'children': [{'type': 'Identifier', 'name': 'Prisma', 'range': [82, 84], 'children': []}]}]}, {'type': 'CatchClause', 'name': 'except prisma.errors.ClientAlreadyRegisteredError', 'range': [86, 94], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [93, 94], 'children': [{'type': 'ExpressionStatement', 'name': '', 'range': [94, 94], 'children': [{'type': 'Identifier', 'name': 'pass', 'range': [94, 94], 'children': []}]}]}]}]}, {'type': 'YieldStatement', 'name': '', 'range': [96, 97], 'children': []}]}]}]}
2025-01-08 10:28:31,771 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:28:34,032 - INFO - Step 3 result: {'nodes': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 4], 'children': [{'type': 'FromImport', 'name': '', 'range': [0, 4], 'children': [{'type': 'Module', 'name': 'datetime', 'range': [1, 1], 'children': []}, {'type': 'ImportedItem', 'name': 'datetime', 'range': [3, 3], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [6, 10], 'children': [{'type': 'Import', 'name': '', 'range': [6, 10], 'children': [{'type': 'Module', 'name': 'prisma.errors', 'range': [7, 9], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [11, 15], 'children': [{'type': 'Import', 'name': '', 'range': [11, 15], 'children': [{'type': 'Module', 'name': 'prisma.models', 'range': [12, 14], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [16, 18], 'children': [{'type': 'Import', 'name': '', 'range': [16, 18], 'children': [{'type': 'Module', 'name': 'pytest', 'range': [17, 17], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [19, 23], 'children': [{'type': 'FromImport', 'name': '', 'range': [19, 23], 'children': [{'type': 'Module', 'name': 'prisma', 'range': [20, 20], 'children': []}, {'type': 'ImportedItem', 'name': 'Prisma', 'range': [22, 22], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [25, 37], 'children': [{'type': 'Import', 'name': '', 'range': [25, 37], 'children': [{'type': 'Module', 'name': 'backend.server.v2.store.db', 'range': [26, 34], 'children': []}, {'type': 'Alias', 'name': 'db', 'range': [36, 36], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [38, 50], 'children': [{'type': 'FromImport', 'name': '', 'range': [38, 50], 'children': [{'type': 'Module', 'name': 'backend.server.v2.store.model', 'range': [39, 47], 'children': []}, {'type': 'ImportedItem', 'name': 'Profile', 'range': [49, 49], 'children': []}]}]}]}
2025-01-08 10:28:34,032 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:34,562 - INFO - Step 2 result: {'type': 'Program', 'name': 'test_get_store_agents', 'range': [106, 348], 'children': [{'type': 'FunctionDeclaration', 'name': 'test_get_store_agents', 'range': [106, 348], 'children': [{'type': 'Decorator', 'name': '@pytest.mark.asyncio', 'range': [99, 105], 'children': []}, {'type': 'FunctionSignature', 'name': 'test_get_store_agents', 'range': [106, 112], 'children': [{'type': 'Keyword', 'name': 'async', 'range': [106, 111], 'children': []}, {'type': 'Keyword', 'name': 'def', 'range': [107, 110], 'children': []}, {'type': 'Identifier', 'name': 'test_get_store_agents', 'range': [108, 128], 'children': []}, {'type': 'Parameter', 'name': 'mocker', 'range': [110, 116], 'children': []}]}, {'type': 'Block', 'name': 'FunctionBody', 'range': [113, 348], 'children': [{'type': 'Comment', 'name': '# Mock data', 'range': [114, 117], 'children': []}, {'type': 'VariableDeclaration', 'name': 'mock_agents', 'range': [118, 222], 'children': [{'type': 'Assignment', 'name': '=', 'range': [119, 120], 'children': []}, {'type': 'ArrayLiteral', 'name': '[]', 'range': [120, 222], 'children': [{'type': 'ObjectLiteral', 'name': 'StoreAgent', 'range': [122, 220], 'children': [{'type': 'Property', 'name': 'listing_id', 'range': [129, 131], 'children': []}, {'type': 'Property', 'name': 'storeListingVersionId', 'range': [134, 136], 'children': []}, {'type': 'Property', 'name': 'slug', 'range': [139, 141], 'children': []}, {'type': 'Property', 'name': 'agent_name', 'range': [144, 146], 'children': []}, {'type': 'Property', 'name': 'agent_video', 'range': [149, 151], 'children': []}, {'type': 'Property', 'name': 'agent_image', 'range': [154, 158], 'children': []}, {'type': 'Property', 'name': 'featured', 'range': [161, 163], 'children': []}, {'type': 'Property', 'name': 'creator_username', 'range': [166, 168], 'children': []}, {'type': 'Property', 'name': 'creator_avatar', 'range': [171, 173], 'children': []}, {'type': 'Property', 'name': 'sub_heading', 'range': [176, 178], 'children': []}, {'type': 'Property', 'name': 'description', 'range': [181, 183], 'children': []}, {'type': 'Property', 'name': 'categories', 'range': [186, 188], 'children': []}, {'type': 'Property', 'name': 'runs', 'range': [192, 194], 'children': []}, {'type': 'Property', 'name': 'rating', 'range': [197, 201], 'children': []}, {'type': 'Property', 'name': 'versions', 'range': [204, 208], 'children': []}, {'type': 'Property', 'name': 'updated_at', 'range': [211, 217], 'children': []}]}]}]}, {'type': 'Comment', 'name': '# Mock prisma calls', 'range': [225, 229], 'children': []}, {'type': 'VariableDeclaration', 'name': 'mock_store_agent', 'range': [230, 268], 'children': [{'type': 'Assignment', 'name': '=', 'range': [231, 232], 'children': []}, {'type': 'CallExpression', 'name': 'mocker.patch', 'range': [232, 237], 'children': [{'type': 'Argument', 'name': '"prisma.models.StoreAgent.prisma"', 'range': [236, 237], 'children': []}]}, {'type': 'PropertyAccess', 'name': 'mock_store_agent.return_value.find_many', 'range': [239, 252], 'children': [{'type': 'Assignment', 'name': '=', 'range': [244, 245], 'children': []}, {'type': 'CallExpression', 'name': 'mocker.AsyncMock', 'range': [245, 252], 'children': [{'type': 'Argument', 'name': 'return_value=mock_agents', 'range': [249, 251], 'children': []}]}]}, {'type': 'PropertyAccess', 'name': 'mock_store_agent.return_value.count', 'range': [254, 267], 'children': [{'type': 'Assignment', 'name': '=', 'range': [259, 260], 'children': []}, {'type': 'CallExpression', 'name': 'mocker.AsyncMock', 'range': [260, 267], 'children': [{'type': 'Argument', 'name': 'return_value=1', 'range': [264, 266], 'children': []}]}]}]}, {'type': 'Comment', 'name': '# Call function', 'range': [270, 273], 'children': []}, {'type': 'VariableDeclaration', 'name': 'result', 'range': [274, 282], 'children': [{'type': 'Assignment', 'name': '=', 'range': [275, 276], 'children': []}, {'type': 'AwaitExpression', 'name': 'await db.get_store_agents', 'range': [276, 281], 'children': []}]}, {'type': 'Comment', 'name': '# Verify results', 'range': [284, 287], 'children': []}, {'type': 'AssertStatement', 'name': 'assert len(result.agents) == 1', 'range': [288, 298], 'children': []}, {'type': 'AssertStatement', 'name': 'assert result.agents[0].slug == "test-agent"', 'range': [299, 311], 'children': []}, {'type': 'AssertStatement', 'name': 'assert result.pagination.total_items == 1', 'range': [312, 321], 'children': []}, {'type': 'Comment', 'name': '# Verify mocks called correctly', 'range': [323, 328], 'children': []}, {'type': 'ExpressionStatement', 'name': 'mock_store_agent.return_value.find_many.assert_called_once', 'range': [329, 338], 'children': []}, {'type': 'ExpressionStatement', 'name': 'mock_store_agent.return_value.count.assert_called_once', 'range': [339, 348], 'children': []}]}]}]}
2025-01-08 10:28:34,562 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:37,316 - INFO - Step 2 result: {'type': 'Program', 'name': 'test_create_store_submission', 'range': [792, 1081], 'children': [{'type': 'FunctionDeclaration', 'name': 'test_create_store_submission', 'range': [792, 1081], 'children': [{'type': 'Decorator', 'name': '@pytest.mark.asyncio', 'range': [785, 790], 'children': []}, {'type': 'Parameter', 'name': 'mocker', 'range': [796, 796], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [798, 1081], 'children': [{'type': 'VariableDeclaration', 'name': 'mock_agent', 'range': [804, 847], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [805, 847], 'children': [{'type': 'CallExpression', 'name': 'AgentGraph', 'range': [806, 847], 'children': [{'type': 'Argument', 'name': 'id', 'range': [813, 815], 'children': []}, {'type': 'Argument', 'name': 'version', 'range': [818, 820], 'children': []}, {'type': 'Argument', 'name': 'userId', 'range': [823, 825], 'children': []}, {'type': 'Argument', 'name': 'createdAt', 'range': [828, 834], 'children': []}, {'type': 'Argument', 'name': 'isActive', 'range': [837, 839], 'children': []}, {'type': 'Argument', 'name': 'isTemplate', 'range': [842, 844], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'mock_listing', 'range': [850, 907], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [851, 907], 'children': [{'type': 'CallExpression', 'name': 'StoreListing', 'range': [852, 907], 'children': [{'type': 'Argument', 'name': 'id', 'range': [859, 861], 'children': []}, {'type': 'Argument', 'name': 'createdAt', 'range': [864, 870], 'children': []}, {'type': 'Argument', 'name': 'updatedAt', 'range': [873, 879], 'children': []}, {'type': 'Argument', 'name': 'isDeleted', 'range': [882, 884], 'children': []}, {'type': 'Argument', 'name': 'isApproved', 'range': [887, 889], 'children': []}, {'type': 'Argument', 'name': 'agentId', 'range': [892, 894], 'children': []}, {'type': 'Argument', 'name': 'agentVersion', 'range': [897, 899], 'children': []}, {'type': 'Argument', 'name': 'owningUserId', 'range': [902, 904], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': 'mock_agent_graph', 'range': [915, 938], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [916, 938], 'children': [{'type': 'CallExpression', 'name': 'patch', 'range': [917, 922], 'children': []}, {'type': 'MemberExpression', 'name': 'return_value.find_first', 'range': [924, 937], 'children': [{'type': 'CallExpression', 'name': 'AsyncMock', 'range': [930, 937], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': 'mock_store_listing', 'range': [940, 978], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [941, 978], 'children': [{'type': 'CallExpression', 'name': 'patch', 'range': [942, 947], 'children': []}, {'type': 'MemberExpression', 'name': 'return_value.find_first', 'range': [949, 962], 'children': [{'type': 'CallExpression', 'name': 'AsyncMock', 'range': [955, 962], 'children': []}]}, {'type': 'MemberExpression', 'name': 'return_value.create', 'range': [964, 977], 'children': [{'type': 'CallExpression', 'name': 'AsyncMock', 'range': [970, 977], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': 'result', 'range': [984, 1023], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [985, 1023], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [986, 1023], 'children': [{'type': 'CallExpression', 'name': 'create_store_submission', 'range': [987, 1022], 'children': [{'type': 'Argument', 'name': 'user_id', 'range': [992, 994], 'children': []}, {'type': 'Argument', 'name': 'agent_id', 'range': [997, 999], 'children': []}, {'type': 'Argument', 'name': 'agent_version', 'range': [1002, 1004], 'children': []}, {'type': 'Argument', 'name': 'slug', 'range': [1007, 1009], 'children': []}, {'type': 'Argument', 'name': 'name', 'range': [1012, 1014], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1017, 1019], 'children': []}]}]}]}]}, {'type': 'ExpressionStatement', 'name': 'assert', 'range': [1029, 1036], 'children': [{'type': 'BinaryExpression', 'name': '==', 'range': [1030, 1035], 'children': [{'type': 'MemberExpression', 'name': 'result.name', 'range': [1030, 1032], 'children': []}, {'type': 'Literal', 'name': '"Test Agent"', 'range': [1034, 1035], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'assert', 'range': [1037, 1044], 'children': [{'type': 'BinaryExpression', 'name': '==', 'range': [1038, 1043], 'children': [{'type': 'MemberExpression', 'name': 'result.description', 'range': [1038, 1040], 'children': []}, {'type': 'Literal', 'name': '"Test description"', 'range': [1042, 1043], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'mock_agent_graph.return_value.find_first.assert_called_once', 'range': [1052, 1061], 'children': [{'type': 'CallExpression', 'name': 'assert_called_once', 'range': [1058, 1060], 'children': []}]}, {'type': 'ExpressionStatement', 'name': 'mock_store_listing.return_value.find_first.assert_called_once', 'range': [1062, 1071], 'children': [{'type': 'CallExpression', 'name': 'assert_called_once', 'range': [1068, 1070], 'children': []}]}, {'type': 'ExpressionStatement', 'name': 'mock_store_listing.return_value.create.assert_called_once', 'range': [1072, 1081], 'children': [{'type': 'CallExpression', 'name': 'assert_called_once', 'range': [1078, 1080], 'children': []}]}]}]}]}
2025-01-08 10:28:37,323 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:42,560 - INFO - Step 5 result: {'type': 'Program', 'name': '', 'range': [52, 98], 'children': [{'type': 'FunctionDecl', 'name': 'setup_prisma', 'range': [62, 98], 'children': [{'type': 'Decorator', 'name': '@pytest.fixture', 'range': [52, 60], 'children': [{'type': 'Argument', 'name': 'autouse', 'range': [57, 59], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [68, 98], 'children': [{'type': 'Comment', 'name': "# Don't register client if already registered", 'range': [69, 77], 'children': []}, {'type': 'TryStatement', 'name': '', 'range': [79, 95], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [81, 85], 'children': [{'type': 'ExpressionStatement', 'name': '', 'range': [82, 84], 'children': [{'type': 'Identifier', 'name': 'Prisma', 'range': [82, 84], 'children': []}]}]}, {'type': 'CatchClause', 'name': 'except prisma.errors.ClientAlreadyRegisteredError', 'range': [86, 94], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [93, 94], 'children': [{'type': 'ExpressionStatement', 'name': '', 'range': [94, 94], 'children': [{'type': 'Identifier', 'name': 'pass', 'range': [94, 94], 'children': []}]}]}]}]}, {'type': 'YieldStatement', 'name': '', 'range': [96, 97], 'children': []}]}]}]}
2025-01-08 10:28:42,561 - INFO - Completed main AST analysis flow
2025-01-08 10:28:42,561 - INFO - Successfully processed chunk
2025-01-08 10:28:45,585 - INFO - Step 2 result: {'type': 'Program', 'name': 'test_get_user_profile', 'range': [1332, 1505], 'children': [{'type': 'FunctionDeclaration', 'name': 'test_get_user_profile', 'range': [1332, 1505], 'children': [{'type': 'Decorator', 'name': '@pytest.mark.asyncio', 'range': [1325, 1331], 'children': []}, {'type': 'FunctionSignature', 'name': 'test_get_user_profile', 'range': [1332, 1338], 'children': [{'type': 'Keyword', 'name': 'async', 'range': [1332, 1337], 'children': []}, {'type': 'Keyword', 'name': 'def', 'range': [1333, 1336], 'children': []}, {'type': 'Identifier', 'name': 'test_get_user_profile', 'range': [1334, 1353], 'children': []}, {'type': 'Parameter', 'name': 'mocker', 'range': [1335, 1337], 'children': []}]}, {'type': 'Block', 'name': 'FunctionBody', 'range': [1339, 1505], 'children': [{'type': 'Comment', 'name': '# Mock data', 'range': [1340, 1343], 'children': []}, {'type': 'VariableDeclaration', 'name': 'mock_profile', 'range': [1344, 1411], 'children': [{'type': 'Assignment', 'name': '=', 'range': [1345, 1346], 'children': []}, {'type': 'NewExpression', 'name': 'Profile', 'range': [1346, 1410], 'children': [{'type': 'Identifier', 'name': 'prisma', 'range': [1346, 1352], 'children': []}, {'type': 'Identifier', 'name': 'models', 'range': [1347, 1353], 'children': []}, {'type': 'Identifier', 'name': 'Profile', 'range': [1348, 1355], 'children': []}, {'type': 'ObjectLiteral', 'name': 'Profile', 'range': [1351, 1410], 'children': [{'type': 'Property', 'name': 'id', 'range': [1353, 1356], 'children': [{'type': 'Literal', 'name': '"profile-id"', 'range': [1355, 1366], 'children': []}]}, {'type': 'Property', 'name': 'name', 'range': [1358, 1361], 'children': [{'type': 'Literal', 'name': '"No Profile Data"', 'range': [1360, 1375], 'children': []}]}, {'type': 'Property', 'name': 'username', 'range': [1363, 1366], 'children': [{'type': 'Literal', 'name': '"testuser"', 'range': [1365, 1375], 'children': []}]}, {'type': 'Property', 'name': 'description', 'range': [1368, 1371], 'children': [{'type': 'Literal', 'name': '"Test description"', 'range': [1370, 1385], 'children': []}]}, {'type': 'Property', 'name': 'links', 'range': [1373, 1380], 'children': [{'type': 'ArrayLiteral', 'name': 'links', 'range': [1375, 1379], 'children': [{'type': 'Literal', 'name': '"link1"', 'range': [1376, 1382], 'children': []}, {'type': 'Literal', 'name': '"link2"', 'range': [1378, 1384], 'children': []}]}]}, {'type': 'Property', 'name': 'avatarUrl', 'range': [1382, 1385], 'children': [{'type': 'Literal', 'name': '"avatar.jpg"', 'range': [1384, 1395], 'children': []}]}, {'type': 'Property', 'name': 'isFeatured', 'range': [1387, 1390], 'children': [{'type': 'Literal', 'name': 'False', 'range': [1389, 1394], 'children': []}]}, {'type': 'Property', 'name': 'createdAt', 'range': [1392, 1399], 'children': [{'type': 'CallExpression', 'name': 'now', 'range': [1394, 1398], 'children': [{'type': 'Identifier', 'name': 'datetime', 'range': [1394, 1402], 'children': []}]}]}, {'type': 'Property', 'name': 'updatedAt', 'range': [1401, 1408], 'children': [{'type': 'CallExpression', 'name': 'now', 'range': [1403, 1407], 'children': [{'type': 'Identifier', 'name': 'datetime', 'range': [1403, 1411], 'children': []}]}]}]}]}]}, {'type': 'Comment', 'name': '# Mock prisma calls', 'range': [1413, 1417], 'children': []}, {'type': 'VariableDeclaration', 'name': 'mock_profile_db', 'range': [1418, 1443], 'children': [{'type': 'Assignment', 'name': '=', 'range': [1419, 1420], 'children': []}, {'type': 'CallExpression', 'name': 'patch', 'range': [1420, 1426], 'children': [{'type': 'Identifier', 'name': 'mocker', 'range': [1420, 1426], 'children': []}, {'type': 'Literal', 'name': '"prisma.models.Profile.prisma"', 'range': [1424, 1450], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'mock_profile_db.return_value.find_unique = mocker.AsyncMock', 'range': [1427, 1443], 'children': [{'type': 'Assignment', 'name': '=', 'range': [1432, 1433], 'children': []}, {'type': 'CallExpression', 'name': 'AsyncMock', 'range': [1435, 1442], 'children': [{'type': 'Identifier', 'name': 'mocker', 'range': [1435, 1441], 'children': []}, {'type': 'ObjectLiteral', 'name': 'AsyncMock', 'range': [1436, 1442], 'children': [{'type': 'Property', 'name': 'return_value', 'range': [1438, 1441], 'children': [{'type': 'Identifier', 'name': 'mock_profile', 'range': [1440, 1452], 'children': []}]}]}]}]}, {'type': 'Comment', 'name': '# Call function', 'range': [1445, 1448], 'children': []}, {'type': 'VariableDeclaration', 'name': 'result', 'range': [1449, 1458], 'children': [{'type': 'Assignment', 'name': '=', 'range': [1450, 1451], 'children': []}, {'type': 'AwaitExpression', 'name': 'await db.get_user_profile', 'range': [1451, 1458], 'children': [{'type': 'CallExpression', 'name': 'get_user_profile', 'range': [1454, 1457], 'children': [{'type': 'Identifier', 'name': 'db', 'range': [1452, 1454], 'children': []}, {'type': 'Literal', 'name': '"user-id"', 'range': [1456, 1464], 'children': []}]}]}]}, {'type': 'Comment', 'name': '# Verify results', 'range': [1460, 1463], 'children': []}, {'type': 'ExpressionStatement', 'name': 'assert result.name == "No Profile Data"', 'range': [1464, 1471], 'children': [{'type': 'BinaryExpression', 'name': '==', 'range': [1468, 1470], 'children': [{'type': 'MemberExpression', 'name': 'result.name', 'range': [1465, 1468], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [1465, 1471], 'children': []}]}, {'type': 'Literal', 'name': '"No Profile Data"', 'range': [1469, 1485], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'assert result.username == "No Profile Data"', 'range': [1472, 1479], 'children': [{'type': 'BinaryExpression', 'name': '==', 'range': [1476, 1478], 'children': [{'type': 'MemberExpression', 'name': 'result.username', 'range': [1473, 1476], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [1473, 1479], 'children': []}]}, {'type': 'Literal', 'name': '"No Profile Data"', 'range': [1477, 1493], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'assert result.description == "No Profile Data"', 'range': [1480, 1487], 'children': [{'type': 'BinaryExpression', 'name': '==', 'range': [1484, 1486], 'children': [{'type': 'MemberExpression', 'name': 'result.description', 'range': [1481, 1484], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [1481, 1487], 'children': []}]}, {'type': 'Literal', 'name': '"No Profile Data"', 'range': [1485, 1501], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'assert result.links == []', 'range': [1488, 1496], 'children': [{'type': 'BinaryExpression', 'name': '==', 'range': [1492, 1494], 'children': [{'type': 'MemberExpression', 'name': 'result.links', 'range': [1489, 1492], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [1489, 1495], 'children': []}]}, {'type': 'ArrayLiteral', 'name': '[]', 'range': [1493, 1495], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'assert result.avatar_url == ""', 'range': [1497, 1504], 'children': [{'type': 'BinaryExpression', 'name': '==', 'range': [1501, 1503], 'children': [{'type': 'MemberExpression', 'name': 'result.avatar_url', 'range': [1498, 1501], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [1498, 1504], 'children': []}]}, {'type': 'Literal', 'name': '""', 'range': [1502, 1504], 'children': []}]}]}]}]}]}
2025-01-08 10:28:45,585 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:52,452 - INFO - Step 4 result: {'nodes': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 4], 'children': [{'type': 'FromImport', 'name': '', 'range': [0, 4], 'children': [{'type': 'Module', 'name': 'datetime', 'range': [1, 1], 'children': []}, {'type': 'ImportedItem', 'name': 'datetime', 'range': [3, 3], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [6, 10], 'children': [{'type': 'Import', 'name': '', 'range': [6, 10], 'children': [{'type': 'Module', 'name': 'prisma.errors', 'range': [7, 9], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [11, 15], 'children': [{'type': 'Import', 'name': '', 'range': [11, 15], 'children': [{'type': 'Module', 'name': 'prisma.models', 'range': [12, 14], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [16, 18], 'children': [{'type': 'Import', 'name': '', 'range': [16, 18], 'children': [{'type': 'Module', 'name': 'pytest', 'range': [17, 17], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [19, 23], 'children': [{'type': 'FromImport', 'name': '', 'range': [19, 23], 'children': [{'type': 'Module', 'name': 'prisma', 'range': [20, 20], 'children': []}, {'type': 'ImportedItem', 'name': 'Prisma', 'range': [22, 22], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [25, 37], 'children': [{'type': 'Import', 'name': '', 'range': [25, 37], 'children': [{'type': 'Module', 'name': 'backend.server.v2.store.db', 'range': [26, 34], 'children': []}, {'type': 'Alias', 'name': 'db', 'range': [36, 36], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [38, 50], 'children': [{'type': 'FromImport', 'name': '', 'range': [38, 50], 'children': [{'type': 'Module', 'name': 'backend.server.v2.store.model', 'range': [39, 47], 'children': []}, {'type': 'ImportedItem', 'name': 'Profile', 'range': [49, 49], 'children': []}]}]}]}
2025-01-08 10:28:52,452 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:29:00,634 - INFO - Step 2 result: {'type': 'Program', 'name': 'test_update_profile', 'range': [1090, 1323], 'children': [{'type': 'FunctionDeclaration', 'name': 'test_update_profile', 'range': [1090, 1323], 'children': [{'type': 'Decorator', 'name': '@pytest.mark.asyncio', 'range': [1083, 1089], 'children': []}, {'type': 'FunctionSignature', 'name': 'test_update_profile', 'range': [1090, 1096], 'children': [{'type': 'Keyword', 'name': 'async', 'range': [1090, 1095], 'children': []}, {'type': 'Keyword', 'name': 'def', 'range': [1091, 1094], 'children': []}, {'type': 'Identifier', 'name': 'test_update_profile', 'range': [1092, 1109], 'children': []}, {'type': 'Parameter', 'name': 'mocker', 'range': [1094, 1095], 'children': []}]}, {'type': 'Block', 'name': 'FunctionBody', 'range': [1097, 1323], 'children': [{'type': 'Comment', 'name': '# Mock data', 'range': [1098, 1101], 'children': []}, {'type': 'VariableDeclaration', 'name': 'mock_profile', 'range': [1102, 1167], 'children': [{'type': 'Assignment', 'name': '=', 'range': [1103, 1104], 'children': []}, {'type': 'ObjectCreation', 'name': 'Profile', 'range': [1104, 1166], 'children': [{'type': 'Identifier', 'name': 'prisma', 'range': [1104, 1110], 'children': []}, {'type': 'Identifier', 'name': 'models', 'range': [1105, 1111], 'children': []}, {'type': 'Identifier', 'name': 'Profile', 'range': [1106, 1112], 'children': []}, {'type': 'ObjectProperties', 'name': 'ProfileProperties', 'range': [1109, 1165], 'children': [{'type': 'Property', 'name': 'id', 'range': [1111, 1114], 'children': []}, {'type': 'Property', 'name': 'name', 'range': [1116, 1119], 'children': []}, {'type': 'Property', 'name': 'username', 'range': [1121, 1124], 'children': []}, {'type': 'Property', 'name': 'description', 'range': [1126, 1129], 'children': []}, {'type': 'Property', 'name': 'links', 'range': [1131, 1136], 'children': []}, {'type': 'Property', 'name': 'avatarUrl', 'range': [1138, 1141], 'children': []}, {'type': 'Property', 'name': 'isFeatured', 'range': [1143, 1146], 'children': []}, {'type': 'Property', 'name': 'createdAt', 'range': [1148, 1155], 'children': []}, {'type': 'Property', 'name': 'updatedAt', 'range': [1157, 1164], 'children': []}]}]}]}, {'type': 'Comment', 'name': '# Mock prisma calls', 'range': [1169, 1173], 'children': []}, {'type': 'VariableDeclaration', 'name': 'mock_profile_db', 'range': [1174, 1214], 'children': [{'type': 'Assignment', 'name': '=', 'range': [1175, 1176], 'children': []}, {'type': 'FunctionCall', 'name': 'mocker.patch', 'range': [1176, 1182], 'children': [{'type': 'Identifier', 'name': 'mocker', 'range': [1176, 1182], 'children': []}, {'type': 'Identifier', 'name': 'patch', 'range': [1177, 1182], 'children': []}, {'type': 'StringLiteral', 'name': '"prisma.models.Profile.prisma"', 'range': [1180, 1181], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'mock_profile_db.return_value.find_first = mocker.AsyncMock', 'range': [1183, 1199], 'children': [{'type': 'Assignment', 'name': '=', 'range': [1188, 1189], 'children': []}, {'type': 'FunctionCall', 'name': 'mocker.AsyncMock', 'range': [1189, 1198], 'children': [{'type': 'Identifier', 'name': 'mocker', 'range': [1189, 1195], 'children': []}, {'type': 'Identifier', 'name': 'AsyncMock', 'range': [1191, 1198], 'children': []}, {'type': 'ObjectProperties', 'name': 'AsyncMockProperties', 'range': [1193, 1197], 'children': [{'type': 'Property', 'name': 'return_value', 'range': [1194, 1197], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': 'mock_profile_db.return_value.update = mocker.AsyncMock', 'range': [1200, 1214], 'children': [{'type': 'Assignment', 'name': '=', 'range': [1205, 1206], 'children': []}, {'type': 'FunctionCall', 'name': 'mocker.AsyncMock', 'range': [1206, 1213], 'children': [{'type': 'Identifier', 'name': 'mocker', 'range': [1206, 1212], 'children': []}, {'type': 'Identifier', 'name': 'AsyncMock', 'range': [1208, 1213], 'children': []}, {'type': 'ObjectProperties', 'name': 'AsyncMockProperties', 'range': [1210, 1212], 'children': [{'type': 'Property', 'name': 'return_value', 'range': [1211, 1212], 'children': []}]}]}]}, {'type': 'Comment', 'name': '# Test data', 'range': [1216, 1219], 'children': []}, {'type': 'VariableDeclaration', 'name': 'profile', 'range': [1220, 1258], 'children': [{'type': 'Assignment', 'name': '=', 'range': [1221, 1222], 'children': []}, {'type': 'ObjectCreation', 'name': 'Profile', 'range': [1222, 1257], 'children': [{'type': 'Identifier', 'name': 'Profile', 'range': [1222, 1228], 'children': []}, {'type': 'ObjectProperties', 'name': 'ProfileProperties', 'range': [1223, 1256], 'children': [{'type': 'Property', 'name': 'name', 'range': [1225, 1228], 'children': []}, {'type': 'Property', 'name': 'username', 'range': [1230, 1233], 'children': []}, {'type': 'Property', 'name': 'description', 'range': [1235, 1238], 'children': []}, {'type': 'Property', 'name': 'links', 'range': [1240, 1245], 'children': []}, {'type': 'Property', 'name': 'avatar_url', 'range': [1247, 1250], 'children': []}, {'type': 'Property', 'name': 'is_featured', 'range': [1252, 1255], 'children': []}]}]}]}, {'type': 'Comment', 'name': '# Call function', 'range': [1260, 1263], 'children': []}, {'type': 'ExpressionStatement', 'name': 'result = await db.update_or_create_profile', 'range': [1264, 1275], 'children': [{'type': 'Assignment', 'name': '=', 'range': [1265, 1266], 'children': []}, {'type': 'AwaitExpression', 'name': 'await', 'range': [1266, 1271], 'children': [{'type': 'FunctionCall', 'name': 'db.update_or_create_profile', 'range': [1267, 1274], 'children': [{'type': 'Identifier', 'name': 'db', 'range': [1267, 1269], 'children': []}, {'type': 'Identifier', 'name': 'update_or_create_profile', 'range': [1269, 1274], 'children': []}, {'type': 'Arguments', 'name': 'FunctionArguments', 'range': [1270, 1273], 'children': [{'type': 'StringLiteral', 'name': '"user-id"', 'range': [1271, 1272], 'children': []}, {'type': 'Identifier', 'name': 'profile', 'range': [1273, 1274], 'children': []}]}]}]}]}, {'type': 'Comment', 'name': '# Verify results', 'range': [1277, 1280], 'children': []}, {'type': 'ExpressionStatement', 'name': 'assert result.username == "creator"', 'range': [1281, 1288], 'children': [{'type': 'AssertStatement', 'name': 'assert', 'range': [1281, 1287], 'children': [{'type': 'BinaryExpression', 'name': '==', 'range': [1285, 1286], 'children': [{'type': 'MemberExpression', 'name': 'result.username', 'range': [1282, 1285], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [1282, 1283], 'children': []}, {'type': 'Identifier', 'name': 'username', 'range': [1283, 1285], 'children': []}]}, {'type': 'StringLiteral', 'name': '"creator"', 'range': [1286, 1287], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': 'assert result.name == "Test Creator"', 'range': [1289, 1296], 'children': [{'type': 'AssertStatement', 'name': 'assert', 'range': [1289, 1295], 'children': [{'type': 'BinaryExpression', 'name': '==', 'range': [1293, 1294], 'children': [{'type': 'MemberExpression', 'name': 'result.name', 'range': [1290, 1293], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [1290, 1291], 'children': []}, {'type': 'Identifier', 'name': 'name', 'range': [1291, 1293], 'children': []}]}, {'type': 'StringLiteral', 'name': '"Test Creator"', 'range': [1294, 1295], 'children': []}]}]}]}, {'type': 'Comment', 'name': '# Verify mocks called correctly', 'range': [1298, 1303], 'children': []}, {'type': 'ExpressionStatement', 'name': 'mock_profile_db.return_value.find_first.assert_called_once', 'range': [1304, 1313], 'children': [{'type': 'FunctionCall', 'name': 'assert_called_once', 'range': [1310, 1312], 'children': [{'type': 'MemberExpression', 'name': 'mock_profile_db.return_value.find_first', 'range': [1304, 1309], 'children': [{'type': 'Identifier', 'name': 'mock_profile_db', 'range': [1304, 1305], 'children': []}, {'type': 'Identifier', 'name': 'return_value', 'range': [1305, 1307], 'children': []}, {'type': 'Identifier', 'name': 'find_first', 'range': [1307, 1309], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': 'mock_profile_db.return_value.update.assert_called_once', 'range': [1314, 1323], 'children': [{'type': 'FunctionCall', 'name': 'assert_called_once', 'range': [1320, 1322], 'children': [{'type': 'MemberExpression', 'name': 'mock_profile_db.return_value.update', 'range': [1314, 1319], 'children': [{'type': 'Identifier', 'name': 'mock_profile_db', 'range': [1314, 1315], 'children': []}, {'type': 'Identifier', 'name': 'return_value', 'range': [1315, 1317], 'children': []}, {'type': 'Identifier', 'name': 'update', 'range': [1317, 1319], 'children': []}]}]}]}]}]}]}
2025-01-08 10:29:00,635 - INFO - Starting Step 3: AST simplification
2025-01-08 10:29:09,737 - INFO - Step 5 result: {'nodes': [{'type': 'Program', 'name': 'MainOrSomething', 'range': [0, 50], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 4], 'children': [{'type': 'FromImport', 'name': '', 'range': [0, 4], 'children': [{'type': 'Module', 'name': 'datetime', 'range': [1, 1], 'children': []}, {'type': 'ImportedItem', 'name': 'datetime', 'range': [3, 3], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [6, 10], 'children': [{'type': 'Import', 'name': '', 'range': [6, 10], 'children': [{'type': 'Module', 'name': 'prisma.errors', 'range': [7, 9], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [11, 15], 'children': [{'type': 'Import', 'name': '', 'range': [11, 15], 'children': [{'type': 'Module', 'name': 'prisma.models', 'range': [12, 14], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [16, 18], 'children': [{'type': 'Import', 'name': '', 'range': [16, 18], 'children': [{'type': 'Module', 'name': 'pytest', 'range': [17, 17], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [19, 23], 'children': [{'type': 'FromImport', 'name': '', 'range': [19, 23], 'children': [{'type': 'Module', 'name': 'prisma', 'range': [20, 20], 'children': []}, {'type': 'ImportedItem', 'name': 'Prisma', 'range': [22, 22], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [25, 37], 'children': [{'type': 'Import', 'name': '', 'range': [25, 37], 'children': [{'type': 'Module', 'name': 'backend.server.v2.store.db', 'range': [26, 34], 'children': []}, {'type': 'Alias', 'name': 'db', 'range': [36, 36], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [38, 50], 'children': [{'type': 'FromImport', 'name': '', 'range': [38, 50], 'children': [{'type': 'Module', 'name': 'backend.server.v2.store.model', 'range': [39, 47], 'children': []}, {'type': 'ImportedItem', 'name': 'Profile', 'range': [49, 49], 'children': []}]}]}]}]}
2025-01-08 10:29:09,737 - INFO - Completed main AST analysis flow
2025-01-08 10:29:09,738 - INFO - Successfully processed chunk
2025-01-08 10:29:13,787 - INFO - Step 3 result: {'type': 'Program', 'name': 'test_get_store_agents', 'range': [106, 348], 'children': [{'type': 'FunctionDeclaration', 'name': 'test_get_store_agents', 'range': [106, 348], 'children': [{'type': 'Decorator', 'name': '@pytest.mark.asyncio', 'range': [99, 105], 'children': []}, {'type': 'FunctionSignature', 'name': 'test_get_store_agents', 'range': [106, 112], 'children': [{'type': 'Keyword', 'name': 'async', 'range': [106, 111], 'children': []}, {'type': 'Keyword', 'name': 'def', 'range': [107, 110], 'children': []}, {'type': 'Identifier', 'name': 'test_get_store_agents', 'range': [108, 128], 'children': []}, {'type': 'Parameter', 'name': 'mocker', 'range': [110, 116], 'children': []}]}, {'type': 'Block', 'name': 'FunctionBody', 'range': [113, 348], 'children': [{'type': 'Comment', 'name': '# Mock data', 'range': [114, 117], 'children': []}, {'type': 'VariableDeclaration', 'name': 'mock_agents', 'range': [118, 222], 'children': [{'type': 'Assignment', 'name': '=', 'range': [119, 120], 'children': []}, {'type': 'ArrayLiteral', 'name': '[]', 'range': [120, 222], 'children': [{'type': 'ObjectLiteral', 'name': 'StoreAgent', 'range': [122, 220], 'children': [{'type': 'Property', 'name': 'listing_id', 'range': [129, 131], 'children': []}, {'type': 'Property', 'name': 'storeListingVersionId', 'range': [134, 136], 'children': []}, {'type': 'Property', 'name': 'slug', 'range': [139, 141], 'children': []}, {'type': 'Property', 'name': 'agent_name', 'range': [144, 146], 'children': []}, {'type': 'Property', 'name': 'agent_video', 'range': [149, 151], 'children': []}, {'type': 'Property', 'name': 'agent_image', 'range': [154, 158], 'children': []}, {'type': 'Property', 'name': 'featured', 'range': [161, 163], 'children': []}, {'type': 'Property', 'name': 'creator_username', 'range': [166, 168], 'children': []}, {'type': 'Property', 'name': 'creator_avatar', 'range': [171, 173], 'children': []}, {'type': 'Property', 'name': 'sub_heading', 'range': [176, 178], 'children': []}, {'type': 'Property', 'name': 'description', 'range': [181, 183], 'children': []}, {'type': 'Property', 'name': 'categories', 'range': [186, 188], 'children': []}, {'type': 'Property', 'name': 'runs', 'range': [192, 194], 'children': []}, {'type': 'Property', 'name': 'rating', 'range': [197, 201], 'children': []}, {'type': 'Property', 'name': 'versions', 'range': [204, 208], 'children': []}, {'type': 'Property', 'name': 'updated_at', 'range': [211, 217], 'children': []}]}]}]}, {'type': 'Comment', 'name': '# Mock prisma calls', 'range': [225, 229], 'children': []}, {'type': 'VariableDeclaration', 'name': 'mock_store_agent', 'range': [230, 268], 'children': [{'type': 'Assignment', 'name': '=', 'range': [231, 232], 'children': []}, {'type': 'CallExpression', 'name': 'mocker.patch', 'range': [232, 237], 'children': [{'type': 'Argument', 'name': '"prisma.models.StoreAgent.prisma"', 'range': [236, 237], 'children': []}]}, {'type': 'PropertyAccess', 'name': 'mock_store_agent.return_value.find_many', 'range': [239, 252], 'children': [{'type': 'Assignment', 'name': '=', 'range': [244, 245], 'children': []}, {'type': 'CallExpression', 'name': 'mocker.AsyncMock', 'range': [245, 252], 'children': [{'type': 'Argument', 'name': 'return_value=mock_agents', 'range': [249, 251], 'children': []}]}]}, {'type': 'PropertyAccess', 'name': 'mock_store_agent.return_value.count', 'range': [254, 267], 'children': [{'type': 'Assignment', 'name': '=', 'range': [259, 260], 'children': []}, {'type': 'CallExpression', 'name': 'mocker.AsyncMock', 'range': [260, 267], 'children': [{'type': 'Argument', 'name': 'return_value=1', 'range': [264, 266], 'children': []}]}]}]}, {'type': 'Comment', 'name': '# Call function', 'range': [270, 273], 'children': []}, {'type': 'VariableDeclaration', 'name': 'result', 'range': [274, 282], 'children': [{'type': 'Assignment', 'name': '=', 'range': [275, 276], 'children': []}, {'type': 'AwaitExpression', 'name': 'await db.get_store_agents', 'range': [276, 281], 'children': []}]}, {'type': 'Comment', 'name': '# Verify results', 'range': [284, 287], 'children': []}, {'type': 'AssertStatement', 'name': 'assert len(result.agents) == 1', 'range': [288, 298], 'children': []}, {'type': 'AssertStatement', 'name': 'assert result.agents[0].slug == "test-agent"', 'range': [299, 311], 'children': []}, {'type': 'AssertStatement', 'name': 'assert result.pagination.total_items == 1', 'range': [312, 321], 'children': []}, {'type': 'Comment', 'name': '# Verify mocks called correctly', 'range': [323, 328], 'children': []}, {'type': 'ExpressionStatement', 'name': 'mock_store_agent.return_value.find_many.assert_called_once', 'range': [329, 338], 'children': []}, {'type': 'ExpressionStatement', 'name': 'mock_store_agent.return_value.count.assert_called_once', 'range': [339, 348], 'children': []}]}]}]}
2025-01-08 10:29:13,788 - INFO - Starting Step 4: AST normalization
2025-01-08 10:29:19,869 - INFO - Step 3 result: {'type': 'Program', 'name': 'test_create_store_submission', 'range': [792, 1081], 'children': [{'type': 'FunctionDeclaration', 'name': 'test_create_store_submission', 'range': [792, 1081], 'children': [{'type': 'Decorator', 'name': '@pytest.mark.asyncio', 'range': [785, 790], 'children': []}, {'type': 'Parameter', 'name': 'mocker', 'range': [796, 796], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [798, 1081], 'children': [{'type': 'VariableDeclaration', 'name': 'mock_agent', 'range': [804, 847], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [805, 847], 'children': [{'type': 'CallExpression', 'name': 'AgentGraph', 'range': [806, 847], 'children': [{'type': 'Argument', 'name': 'id', 'range': [813, 815], 'children': []}, {'type': 'Argument', 'name': 'version', 'range': [818, 820], 'children': []}, {'type': 'Argument', 'name': 'userId', 'range': [823, 825], 'children': []}, {'type': 'Argument', 'name': 'createdAt', 'range': [828, 834], 'children': []}, {'type': 'Argument', 'name': 'isActive', 'range': [837, 839], 'children': []}, {'type': 'Argument', 'name': 'isTemplate', 'range': [842, 844], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'mock_listing', 'range': [850, 907], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [851, 907], 'children': [{'type': 'CallExpression', 'name': 'StoreListing', 'range': [852, 907], 'children': [{'type': 'Argument', 'name': 'id', 'range': [859, 861], 'children': []}, {'type': 'Argument', 'name': 'createdAt', 'range': [864, 870], 'children': []}, {'type': 'Argument', 'name': 'updatedAt', 'range': [873, 879], 'children': []}, {'type': 'Argument', 'name': 'isDeleted', 'range': [882, 884], 'children': []}, {'type': 'Argument', 'name': 'isApproved', 'range': [887, 889], 'children': []}, {'type': 'Argument', 'name': 'agentId', 'range': [892, 894], 'children': []}, {'type': 'Argument', 'name': 'agentVersion', 'range': [897, 899], 'children': []}, {'type': 'Argument', 'name': 'owningUserId', 'range': [902, 904], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': 'mock_agent_graph', 'range': [915, 938], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [916, 938], 'children': [{'type': 'CallExpression', 'name': 'patch', 'range': [917, 922], 'children': []}, {'type': 'MemberExpression', 'name': 'return_value.find_first', 'range': [924, 937], 'children': [{'type': 'CallExpression', 'name': 'AsyncMock', 'range': [930, 937], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': 'mock_store_listing', 'range': [940, 978], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [941, 978], 'children': [{'type': 'CallExpression', 'name': 'patch', 'range': [942, 947], 'children': []}, {'type': 'MemberExpression', 'name': 'return_value.find_first', 'range': [949, 962], 'children': [{'type': 'CallExpression', 'name': 'AsyncMock', 'range': [955, 962], 'children': []}]}, {'type': 'MemberExpression', 'name': 'return_value.create', 'range': [964, 977], 'children': [{'type': 'CallExpression', 'name': 'AsyncMock', 'range': [970, 977], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': 'result', 'range': [984, 1023], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [985, 1023], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [986, 1023], 'children': [{'type': 'CallExpression', 'name': 'create_store_submission', 'range': [987, 1022], 'children': [{'type': 'Argument', 'name': 'user_id', 'range': [992, 994], 'children': []}, {'type': 'Argument', 'name': 'agent_id', 'range': [997, 999], 'children': []}, {'type': 'Argument', 'name': 'agent_version', 'range': [1002, 1004], 'children': []}, {'type': 'Argument', 'name': 'slug', 'range': [1007, 1009], 'children': []}, {'type': 'Argument', 'name': 'name', 'range': [1012, 1014], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1017, 1019], 'children': []}]}]}]}]}, {'type': 'ExpressionStatement', 'name': 'assert', 'range': [1029, 1036], 'children': [{'type': 'BinaryExpression', 'name': '==', 'range': [1030, 1035], 'children': [{'type': 'MemberExpression', 'name': 'result.name', 'range': [1030, 1032], 'children': []}, {'type': 'Literal', 'name': '"Test Agent"', 'range': [1034, 1035], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'assert', 'range': [1037, 1044], 'children': [{'type': 'BinaryExpression', 'name': '==', 'range': [1038, 1043], 'children': [{'type': 'MemberExpression', 'name': 'result.description', 'range': [1038, 1040], 'children': []}, {'type': 'Literal', 'name': '"Test description"', 'range': [1042, 1043], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'mock_agent_graph.return_value.find_first.assert_called_once', 'range': [1052, 1061], 'children': [{'type': 'CallExpression', 'name': 'assert_called_once', 'range': [1058, 1060], 'children': []}]}, {'type': 'ExpressionStatement', 'name': 'mock_store_listing.return_value.find_first.assert_called_once', 'range': [1062, 1071], 'children': [{'type': 'CallExpression', 'name': 'assert_called_once', 'range': [1068, 1070], 'children': []}]}, {'type': 'ExpressionStatement', 'name': 'mock_store_listing.return_value.create.assert_called_once', 'range': [1072, 1081], 'children': [{'type': 'CallExpression', 'name': 'assert_called_once', 'range': [1078, 1080], 'children': []}]}]}]}]}
2025-01-08 10:29:19,870 - INFO - Starting Step 4: AST normalization
2025-01-08 10:29:46,251 - INFO - Step 3 result: {'type': 'Program', 'name': 'test_get_user_profile', 'range': [1332, 1505], 'children': [{'type': 'FunctionDeclaration', 'name': 'test_get_user_profile', 'range': [1332, 1505], 'children': [{'type': 'Decorator', 'name': '@pytest.mark.asyncio', 'range': [1325, 1331], 'children': []}, {'type': 'FunctionSignature', 'name': 'test_get_user_profile', 'range': [1332, 1338], 'children': [{'type': 'Keyword', 'name': 'async', 'range': [1332, 1337], 'children': []}, {'type': 'Keyword', 'name': 'def', 'range': [1333, 1336], 'children': []}, {'type': 'Identifier', 'name': 'test_get_user_profile', 'range': [1334, 1353], 'children': []}, {'type': 'Parameter', 'name': 'mocker', 'range': [1335, 1337], 'children': []}]}, {'type': 'Block', 'name': 'FunctionBody', 'range': [1339, 1505], 'children': [{'type': 'Comment', 'name': '# Mock data', 'range': [1340, 1343], 'children': []}, {'type': 'VariableDeclaration', 'name': 'mock_profile', 'range': [1344, 1411], 'children': [{'type': 'Assignment', 'name': '=', 'range': [1345, 1346], 'children': []}, {'type': 'NewExpression', 'name': 'Profile', 'range': [1346, 1410], 'children': [{'type': 'Identifier', 'name': 'prisma', 'range': [1346, 1352], 'children': []}, {'type': 'Identifier', 'name': 'models', 'range': [1347, 1353], 'children': []}, {'type': 'Identifier', 'name': 'Profile', 'range': [1348, 1355], 'children': []}, {'type': 'ObjectLiteral', 'name': 'Profile', 'range': [1351, 1410], 'children': [{'type': 'Property', 'name': 'id', 'range': [1353, 1356], 'children': [{'type': 'Literal', 'name': '"profile-id"', 'range': [1355, 1366], 'children': []}]}, {'type': 'Property', 'name': 'name', 'range': [1358, 1361], 'children': [{'type': 'Literal', 'name': '"No Profile Data"', 'range': [1360, 1375], 'children': []}]}, {'type': 'Property', 'name': 'username', 'range': [1363, 1366], 'children': [{'type': 'Literal', 'name': '"testuser"', 'range': [1365, 1375], 'children': []}]}, {'type': 'Property', 'name': 'description', 'range': [1368, 1371], 'children': [{'type': 'Literal', 'name': '"Test description"', 'range': [1370, 1385], 'children': []}]}, {'type': 'Property', 'name': 'links', 'range': [1373, 1380], 'children': [{'type': 'ArrayLiteral', 'name': 'links', 'range': [1375, 1379], 'children': [{'type': 'Literal', 'name': '"link1"', 'range': [1376, 1382], 'children': []}, {'type': 'Literal', 'name': '"link2"', 'range': [1378, 1384], 'children': []}]}]}, {'type': 'Property', 'name': 'avatarUrl', 'range': [1382, 1385], 'children': [{'type': 'Literal', 'name': '"avatar.jpg"', 'range': [1384, 1395], 'children': []}]}, {'type': 'Property', 'name': 'isFeatured', 'range': [1387, 1390], 'children': [{'type': 'Literal', 'name': 'False', 'range': [1389, 1394], 'children': []}]}, {'type': 'Property', 'name': 'createdAt', 'range': [1392, 1399], 'children': [{'type': 'CallExpression', 'name': 'now', 'range': [1394, 1398], 'children': [{'type': 'Identifier', 'name': 'datetime', 'range': [1394, 1402], 'children': []}]}]}, {'type': 'Property', 'name': 'updatedAt', 'range': [1401, 1408], 'children': [{'type': 'CallExpression', 'name': 'now', 'range': [1403, 1407], 'children': [{'type': 'Identifier', 'name': 'datetime', 'range': [1403, 1411], 'children': []}]}]}]}]}]}, {'type': 'Comment', 'name': '# Mock prisma calls', 'range': [1413, 1417], 'children': []}, {'type': 'VariableDeclaration', 'name': 'mock_profile_db', 'range': [1418, 1443], 'children': [{'type': 'Assignment', 'name': '=', 'range': [1419, 1420], 'children': []}, {'type': 'CallExpression', 'name': 'patch', 'range': [1420, 1426], 'children': [{'type': 'Identifier', 'name': 'mocker', 'range': [1420, 1426], 'children': []}, {'type': 'Literal', 'name': '"prisma.models.Profile.prisma"', 'range': [1424, 1450], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'mock_profile_db.return_value.find_unique = mocker.AsyncMock', 'range': [1427, 1443], 'children': [{'type': 'Assignment', 'name': '=', 'range': [1432, 1433], 'children': []}, {'type': 'CallExpression', 'name': 'AsyncMock', 'range': [1435, 1442], 'children': [{'type': 'Identifier', 'name': 'mocker', 'range': [1435, 1441], 'children': []}, {'type': 'ObjectLiteral', 'name': 'AsyncMock', 'range': [1436, 1442], 'children': [{'type': 'Property', 'name': 'return_value', 'range': [1438, 1441], 'children': [{'type': 'Identifier', 'name': 'mock_profile', 'range': [1440, 1452], 'children': []}]}]}]}]}, {'type': 'Comment', 'name': '# Call function', 'range': [1445, 1448], 'children': []}, {'type': 'VariableDeclaration', 'name': 'result', 'range': [1449, 1458], 'children': [{'type': 'Assignment', 'name': '=', 'range': [1450, 1451], 'children': []}, {'type': 'AwaitExpression', 'name': 'await db.get_user_profile', 'range': [1451, 1458], 'children': [{'type': 'CallExpression', 'name': 'get_user_profile', 'range': [1454, 1457], 'children': [{'type': 'Identifier', 'name': 'db', 'range': [1452, 1454], 'children': []}, {'type': 'Literal', 'name': '"user-id"', 'range': [1456, 1464], 'children': []}]}]}]}, {'type': 'Comment', 'name': '# Verify results', 'range': [1460, 1463], 'children': []}, {'type': 'ExpressionStatement', 'name': 'assert result.name == "No Profile Data"', 'range': [1464, 1471], 'children': [{'type': 'BinaryExpression', 'name': '==', 'range': [1468, 1470], 'children': [{'type': 'MemberExpression', 'name': 'result.name', 'range': [1465, 1468], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [1465, 1471], 'children': []}]}, {'type': 'Literal', 'name': '"No Profile Data"', 'range': [1469, 1485], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'assert result.username == "No Profile Data"', 'range': [1472, 1479], 'children': [{'type': 'BinaryExpression', 'name': '==', 'range': [1476, 1478], 'children': [{'type': 'MemberExpression', 'name': 'result.username', 'range': [1473, 1476], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [1473, 1479], 'children': []}]}, {'type': 'Literal', 'name': '"No Profile Data"', 'range': [1477, 1493], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'assert result.description == "No Profile Data"', 'range': [1480, 1487], 'children': [{'type': 'BinaryExpression', 'name': '==', 'range': [1484, 1486], 'children': [{'type': 'MemberExpression', 'name': 'result.description', 'range': [1481, 1484], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [1481, 1487], 'children': []}]}, {'type': 'Literal', 'name': '"No Profile Data"', 'range': [1485, 1501], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'assert result.links == []', 'range': [1488, 1496], 'children': [{'type': 'BinaryExpression', 'name': '==', 'range': [1492, 1494], 'children': [{'type': 'MemberExpression', 'name': 'result.links', 'range': [1489, 1492], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [1489, 1495], 'children': []}]}, {'type': 'ArrayLiteral', 'name': '[]', 'range': [1493, 1495], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'assert result.avatar_url == ""', 'range': [1497, 1504], 'children': [{'type': 'BinaryExpression', 'name': '==', 'range': [1501, 1503], 'children': [{'type': 'MemberExpression', 'name': 'result.avatar_url', 'range': [1498, 1501], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [1498, 1504], 'children': []}]}, {'type': 'Literal', 'name': '""', 'range': [1502, 1504], 'children': []}]}]}]}]}]}
2025-01-08 10:29:46,257 - INFO - Starting Step 4: AST normalization
2025-01-08 10:29:50,151 - INFO - Step 2 result: {'type': 'Program', 'name': 'test_get_store_agent_details', 'range': [357, 569], 'children': [{'type': 'FunctionDeclaration', 'name': 'test_get_store_agent_details', 'range': [357, 569], 'children': [{'type': 'Decorator', 'name': '@pytest.mark.asyncio', 'range': [350, 356], 'children': []}, {'type': 'FunctionSignature', 'name': 'test_get_store_agent_details', 'range': [357, 363], 'children': [{'type': 'Keyword', 'name': 'async', 'range': [357, 362], 'children': []}, {'type': 'Keyword', 'name': 'def', 'range': [358, 361], 'children': []}, {'type': 'Identifier', 'name': 'test_get_store_agent_details', 'range': [359, 362], 'children': []}, {'type': 'Punctuation', 'name': '(', 'range': [360, 361], 'children': []}, {'type': 'Identifier', 'name': 'mocker', 'range': [361, 362], 'children': []}, {'type': 'Punctuation', 'name': ')', 'range': [362, 363], 'children': []}, {'type': 'Punctuation', 'name': ':', 'range': [363, 364], 'children': []}]}, {'type': 'FunctionBody', 'name': '', 'range': [364, 569], 'children': [{'type': 'Comment', 'name': '# Mock data', 'range': [365, 368], 'children': []}, {'type': 'VariableDeclaration', 'name': 'mock_agent', 'range': [369, 470], 'children': [{'type': 'Identifier', 'name': 'mock_agent', 'range': [369, 370], 'children': []}, {'type': 'Operator', 'name': '=', 'range': [370, 371], 'children': []}, {'type': 'NewExpression', 'name': 'StoreAgent', 'range': [371, 470], 'children': [{'type': 'Identifier', 'name': 'prisma', 'range': [371, 372], 'children': []}, {'type': 'Punctuation', 'name': '.', 'range': [372, 373], 'children': []}, {'type': 'Identifier', 'name': 'models', 'range': [373, 374], 'children': []}, {'type': 'Punctuation', 'name': '.', 'range': [374, 375], 'children': []}, {'type': 'Identifier', 'name': 'StoreAgent', 'range': [375, 376], 'children': []}, {'type': 'Punctuation', 'name': '(', 'range': [376, 377], 'children': []}, {'type': 'ObjectExpression', 'name': '', 'range': [377, 470], 'children': [{'type': 'Property', 'name': 'listing_id', 'range': [378, 381], 'children': [{'type': 'Identifier', 'name': 'listing_id', 'range': [378, 379], 'children': []}, {'type': 'Operator', 'name': '=', 'range': [379, 380], 'children': []}, {'type': 'StringLiteral', 'name': '"test-id"', 'range': [380, 381], 'children': []}]}, {'type': 'Property', 'name': 'storeListingVersionId', 'range': [383, 386], 'children': [{'type': 'Identifier', 'name': 'storeListingVersionId', 'range': [383, 384], 'children': []}, {'type': 'Operator', 'name': '=', 'range': [384, 385], 'children': []}, {'type': 'StringLiteral', 'name': '"version123"', 'range': [385, 386], 'children': []}]}, {'type': 'Property', 'name': 'slug', 'range': [388, 391], 'children': [{'type': 'Identifier', 'name': 'slug', 'range': [388, 389], 'children': []}, {'type': 'Operator', 'name': '=', 'range': [389, 390], 'children': []}, {'type': 'StringLiteral', 'name': '"test-agent"', 'range': [390, 391], 'children': []}]}, {'type': 'Property', 'name': 'agent_name', 'range': [393, 396], 'children': [{'type': 'Identifier', 'name': 'agent_name', 'range': [393, 394], 'children': []}, {'type': 'Operator', 'name': '=', 'range': [394, 395], 'children': []}, {'type': 'StringLiteral', 'name': '"Test Agent"', 'range': [395, 396], 'children': []}]}, {'type': 'Property', 'name': 'agent_video', 'range': [398, 401], 'children': [{'type': 'Identifier', 'name': 'agent_video', 'range': [398, 399], 'children': []}, {'type': 'Operator', 'name': '=', 'range': [399, 400], 'children': []}, {'type': 'StringLiteral', 'name': '"video.mp4"', 'range': [400, 401], 'children': []}]}, {'type': 'Property', 'name': 'agent_image', 'range': [403, 408], 'children': [{'type': 'Identifier', 'name': 'agent_image', 'range': [403, 404], 'children': []}, {'type': 'Operator', 'name': '=', 'range': [404, 405], 'children': []}, {'type': 'ArrayExpression', 'name': '', 'range': [405, 408], 'children': [{'type': 'StringLiteral', 'name': '"image.jpg"', 'range': [406, 407], 'children': []}]}]}, {'type': 'Property', 'name': 'featured', 'range': [410, 413], 'children': [{'type': 'Identifier', 'name': 'featured', 'range': [410, 411], 'children': []}, {'type': 'Operator', 'name': '=', 'range': [411, 412], 'children': []}, {'type': 'BooleanLiteral', 'name': 'False', 'range': [412, 413], 'children': []}]}, {'type': 'Property', 'name': 'creator_username', 'range': [415, 418], 'children': [{'type': 'Identifier', 'name': 'creator_username', 'range': [415, 416], 'children': []}, {'type': 'Operator', 'name': '=', 'range': [416, 417], 'children': []}, {'type': 'StringLiteral', 'name': '"creator"', 'range': [417, 418], 'children': []}]}, {'type': 'Property', 'name': 'creator_avatar', 'range': [420, 423], 'children': [{'type': 'Identifier', 'name': 'creator_avatar', 'range': [420, 421], 'children': []}, {'type': 'Operator', 'name': '=', 'range': [421, 422], 'children': []}, {'type': 'StringLiteral', 'name': '"avatar.jpg"', 'range': [422, 423], 'children': []}]}, {'type': 'Property', 'name': 'sub_heading', 'range': [425, 428], 'children': [{'type': 'Identifier', 'name': 'sub_heading', 'range': [425, 426], 'children': []}, {'type': 'Operator', 'name': '=', 'range': [426, 427], 'children': []}, {'type': 'StringLiteral', 'name': '"Test heading"', 'range': [427, 428], 'children': []}]}, {'type': 'Property', 'name': 'description', 'range': [430, 433], 'children': [{'type': 'Identifier', 'name': 'description', 'range': [430, 431], 'children': []}, {'type': 'Operator', 'name': '=', 'range': [431, 432], 'children': []}, {'type': 'StringLiteral', 'name': '"Test description"', 'range': [432, 433], 'children': []}]}, {'type': 'Property', 'name': 'categories', 'range': [435, 440], 'children': [{'type': 'Identifier', 'name': 'categories', 'range': [435, 436], 'children': []}, {'type': 'Operator', 'name': '=', 'range': [436, 437], 'children': []}, {'type': 'ArrayExpression', 'name': '', 'range': [437, 440], 'children': [{'type': 'StringLiteral', 'name': '"test"', 'range': [438, 439], 'children': []}]}]}, {'type': 'Property', 'name': 'runs', 'range': [442, 445], 'children': [{'type': 'Identifier', 'name': 'runs', 'range': [442, 443], 'children': []}, {'type': 'Operator', 'name': '=', 'range': [443, 444], 'children': []}, {'type': 'NumericLiteral', 'name': '10', 'range': [444, 445], 'children': []}]}, {'type': 'Property', 'name': 'rating', 'range': [447, 452], 'children': [{'type': 'Identifier', 'name': 'rating', 'range': [447, 448], 'children': []}, {'type': 'Operator', 'name': '=', 'range': [448, 449], 'children': []}, {'type': 'NumericLiteral', 'name': '4.5', 'range': [449, 452], 'children': []}]}, {'type': 'Property', 'name': 'versions', 'range': [454, 459], 'children': [{'type': 'Identifier', 'name': 'versions', 'range': [454, 455], 'children': []}, {'type': 'Operator', 'name': '=', 'range': [455, 456], 'children': []}, {'type': 'ArrayExpression', 'name': '', 'range': [456, 459], 'children': [{'type': 'StringLiteral', 'name': '"1.0"', 'range': [457, 458], 'children': []}]}]}, {'type': 'Property', 'name': 'updated_at', 'range': [461, 468], 'children': [{'type': 'Identifier', 'name': 'updated_at', 'range': [461, 462], 'children': []}, {'type': 'Operator', 'name': '=', 'range': [462, 463], 'children': []}, {'type': 'CallExpression', 'name': 'datetime.now', 'range': [463, 468], 'children': [{'type': 'Identifier', 'name': 'datetime', 'range': [463, 464], 'children': []}, {'type': 'Punctuation', 'name': '.', 'range': [464, 465], 'children': []}, {'type': 'Identifier', 'name': 'now', 'range': [465, 466], 'children': []}, {'type': 'Punctuation', 'name': '(', 'range': [466, 467], 'children': []}, {'type': 'Punctuation', 'name': ')', 'range': [467, 468], 'children': []}]}]}]}, {'type': 'Punctuation', 'name': ')', 'range': [470, 471], 'children': []}]}]}, {'type': 'Comment', 'name': '# Mock prisma call', 'range': [473, 477], 'children': []}, {'type': 'VariableDeclaration', 'name': 'mock_store_agent', 'range': [478, 500], 'children': [{'type': 'Identifier', 'name': 'mock_store_agent', 'range': [478, 479], 'children': []}, {'type': 'Operator', 'name': '=', 'range': [479, 480], 'children': []}, {'type': 'CallExpression', 'name': 'mocker.patch', 'range': [480, 500], 'children': [{'type': 'Identifier', 'name': 'mocker', 'range': [480, 481], 'children': []}, {'type': 'Punctuation', 'name': '.', 'range': [481, 482], 'children': []}, {'type': 'Identifier', 'name': 'patch', 'range': [482, 483], 'children': []}, {'type': 'Punctuation', 'name': '(', 'range': [483, 484], 'children': []}, {'type': 'StringLiteral', 'name': '"prisma.models.StoreAgent.prisma"', 'range': [484, 485], 'children': []}, {'type': 'Punctuation', 'name': ')', 'range': [485, 486], 'children': []}]}, {'type': 'Punctuation', 'name': '.', 'range': [486, 487], 'children': []}, {'type': 'Identifier', 'name': 'return_value', 'range': [487, 488], 'children': []}, {'type': 'Punctuation', 'name': '.', 'range': [488, 489], 'children': []}, {'type': 'Identifier', 'name': 'find_first', 'range': [489, 490], 'children': []}, {'type': 'Operator', 'name': '=', 'range': [490, 491], 'children': []}, {'type': 'CallExpression', 'name': 'mocker.AsyncMock', 'range': [491, 500], 'children': [{'type': 'Identifier', 'name': 'mocker', 'range': [491, 492], 'children': []}, {'type': 'Punctuation', 'name': '.', 'range': [492, 493], 'children': []}, {'type': 'Identifier', 'name': 'AsyncMock', 'range': [493, 494], 'children': []}, {'type': 'Punctuation', 'name': '(', 'range': [494, 495], 'children': []}, {'type': 'Identifier', 'name': 'return_value', 'range': [495, 496], 'children': []}, {'type': 'Operator', 'name': '=', 'range': [496, 497], 'children': []}, {'type': 'Identifier', 'name': 'mock_agent', 'range': [497, 498], 'children': []}, {'type': 'Punctuation', 'name': ')', 'range': [498, 499], 'children': []}]}]}, {'type': 'Comment', 'name': '# Call function', 'range': [503, 506], 'children': []}, {'type': 'VariableDeclaration', 'name': 'result', 'range': [507, 518], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [507, 508], 'children': []}, {'type': 'Operator', 'name': '=', 'range': [508, 509], 'children': []}, {'type': 'AwaitExpression', 'name': 'await db.get_store_agent_details', 'range': [509, 518], 'children': [{'type': 'Keyword', 'name': 'await', 'range': [509, 510], 'children': []}, {'type': 'Identifier', 'name': 'db', 'range': [510, 511], 'children': []}, {'type': 'Punctuation', 'name': '.', 'range': [511, 512], 'children': []}, {'type': 'Identifier', 'name': 'get_store_agent_details', 'range': [512, 513], 'children': []}, {'type': 'Punctuation', 'name': '(', 'range': [513, 514], 'children': []}, {'type': 'StringLiteral', 'name': '"creator"', 'range': [514, 515], 'children': []}, {'type': 'Punctuation', 'name': ',', 'range': [515, 516], 'children': []}, {'type': 'StringLiteral', 'name': '"test-agent"', 'range': [516, 517], 'children': []}, {'type': 'Punctuation', 'name': ')', 'range': [517, 518], 'children': []}]}]}, {'type': 'Comment', 'name': '# Verify results', 'range': [520, 523], 'children': []}, {'type': 'AssertStatement', 'name': 'assert result.slug == "test-agent"', 'range': [524, 531], 'children': [{'type': 'Keyword', 'name': 'assert', 'range': [524, 525], 'children': []}, {'type': 'Identifier', 'name': 'result', 'range': [525, 526], 'children': []}, {'type': 'Punctuation', 'name': '.', 'range': [526, 527], 'children': []}, {'type': 'Identifier', 'name': 'slug', 'range': [527, 528], 'children': []}, {'type': 'Operator', 'name': '==', 'range': [528, 530], 'children': []}, {'type': 'StringLiteral', 'name': '"test-agent"', 'range': [530, 531], 'children': []}]}, {'type': 'AssertStatement', 'name': 'assert result.agent_name == "Test Agent"', 'range': [532, 539], 'children': [{'type': 'Keyword', 'name': 'assert', 'range': [532, 533], 'children': []}, {'type': 'Identifier', 'name': 'result', 'range': [533, 534], 'children': []}, {'type': 'Punctuation', 'name': '.', 'range': [534, 535], 'children': []}, {'type': 'Identifier', 'name': 'agent_name', 'range': [535, 536], 'children': []}, {'type': 'Operator', 'name': '==', 'range': [536, 538], 'children': []}, {'type': 'StringLiteral', 'name': '"Test Agent"', 'range': [538, 539], 'children': []}]}, {'type': 'Comment', 'name': '# Verify mock called correctly', 'range': [541, 546], 'children': []}, {'type': 'ExpressionStatement', 'name': 'mock_store_agent.return_value.find_first.assert_called_once_with', 'range': [547, 569], 'children': [{'type': 'Identifier', 'name': 'mock_store_agent', 'range': [547, 548], 'children': []}, {'type': 'Punctuation', 'name': '.', 'range': [548, 549], 'children': []}, {'type': 'Identifier', 'name': 'return_value', 'range': [549, 550], 'children': []}, {'type': 'Punctuation', 'name': '.', 'range': [550, 551], 'children': []}, {'type': 'Identifier', 'name': 'find_first', 'range': [551, 552], 'children': []}, {'type': 'Punctuation', 'name': '.', 'range': [552, 553], 'children': []}, {'type': 'Identifier', 'name': 'assert_called_once_with', 'range': [553, 554], 'children': []}, {'type': 'Punctuation', 'name': '(', 'range': [554, 555], 'children': []}, {'type': 'ObjectExpression', 'name': '', 'range': [555, 568], 'children': [{'type': 'Property', 'name': 'where', 'range': [556, 567], 'children': [{'type': 'Identifier', 'name': 'where', 'range': [556, 557], 'children': []}, {'type': 'Operator', 'name': '=', 'range': [557, 558], 'children': []}, {'type': 'ObjectExpression', 'name': '', 'range': [558, 567], 'children': [{'type': 'Property', 'name': 'creator_username', 'range': [559, 562], 'children': [{'type': 'StringLiteral', 'name': '"creator_username"', 'range': [559, 560], 'children': []}, {'type': 'Punctuation', 'name': ':', 'range': [560, 561], 'children': []}, {'type': 'StringLiteral', 'name': '"creator"', 'range': [561, 562], 'children': []}]}, {'type': 'Property', 'name': 'slug', 'range': [563, 566], 'children': [{'type': 'StringLiteral', 'name': '"slug"', 'range': [563, 564], 'children': []}, {'type': 'Punctuation', 'name': ':', 'range': [564, 565], 'children': []}, {'type': 'StringLiteral', 'name': '"test-agent"', 'range': [565, 566], 'children': []}]}]}]}]}, {'type': 'Punctuation', 'name': ')', 'range': [568, 569], 'children': []}]}]}]}]}
2025-01-08 10:29:50,152 - INFO - Starting Step 3: AST simplification
2025-01-08 10:29:50,817 - INFO - Step 4 result: {'type': 'Program', 'name': 'test_get_store_agents', 'range': [106, 348], 'children': [{'type': 'FunctionDecl', 'name': 'test_get_store_agents', 'range': [106, 348], 'children': [{'type': 'Decorator', 'name': '@pytest.mark.asyncio', 'range': [99, 105], 'children': []}, {'type': 'FunctionSignature', 'name': 'test_get_store_agents', 'range': [106, 112], 'children': [{'type': 'Keyword', 'name': 'async', 'range': [106, 111], 'children': []}, {'type': 'Keyword', 'name': 'def', 'range': [107, 110], 'children': []}, {'type': 'Identifier', 'name': 'test_get_store_agents', 'range': [108, 128], 'children': []}, {'type': 'Parameter', 'name': 'mocker', 'range': [110, 116], 'children': []}]}, {'type': 'Block', 'name': 'FunctionBody', 'range': [113, 348], 'children': [{'type': 'Comment', 'name': '# Mock data', 'range': [114, 117], 'children': []}, {'type': 'VariableDecl', 'name': 'mock_agents', 'range': [118, 222], 'children': [{'type': 'Assignment', 'name': '=', 'range': [119, 120], 'children': []}, {'type': 'ArrayLiteral', 'name': '[]', 'range': [120, 222], 'children': [{'type': 'ObjectLiteral', 'name': 'StoreAgent', 'range': [122, 220], 'children': [{'type': 'Property', 'name': 'listing_id', 'range': [129, 131], 'children': []}, {'type': 'Property', 'name': 'storeListingVersionId', 'range': [134, 136], 'children': []}, {'type': 'Property', 'name': 'slug', 'range': [139, 141], 'children': []}, {'type': 'Property', 'name': 'agent_name', 'range': [144, 146], 'children': []}, {'type': 'Property', 'name': 'agent_video', 'range': [149, 151], 'children': []}, {'type': 'Property', 'name': 'agent_image', 'range': [154, 158], 'children': []}, {'type': 'Property', 'name': 'featured', 'range': [161, 163], 'children': []}, {'type': 'Property', 'name': 'creator_username', 'range': [166, 168], 'children': []}, {'type': 'Property', 'name': 'creator_avatar', 'range': [171, 173], 'children': []}, {'type': 'Property', 'name': 'sub_heading', 'range': [176, 178], 'children': []}, {'type': 'Property', 'name': 'description', 'range': [181, 183], 'children': []}, {'type': 'Property', 'name': 'categories', 'range': [186, 188], 'children': []}, {'type': 'Property', 'name': 'runs', 'range': [192, 194], 'children': []}, {'type': 'Property', 'name': 'rating', 'range': [197, 201], 'children': []}, {'type': 'Property', 'name': 'versions', 'range': [204, 208], 'children': []}, {'type': 'Property', 'name': 'updated_at', 'range': [211, 217], 'children': []}]}]}]}, {'type': 'Comment', 'name': '# Mock prisma calls', 'range': [225, 229], 'children': []}, {'type': 'VariableDecl', 'name': 'mock_store_agent', 'range': [230, 268], 'children': [{'type': 'Assignment', 'name': '=', 'range': [231, 232], 'children': []}, {'type': 'CallExpression', 'name': 'mocker.patch', 'range': [232, 237], 'children': [{'type': 'Argument', 'name': '"prisma.models.StoreAgent.prisma"', 'range': [236, 237], 'children': []}]}, {'type': 'PropertyAccess', 'name': 'mock_store_agent.return_value.find_many', 'range': [239, 252], 'children': [{'type': 'Assignment', 'name': '=', 'range': [244, 245], 'children': []}, {'type': 'CallExpression', 'name': 'mocker.AsyncMock', 'range': [245, 252], 'children': [{'type': 'Argument', 'name': 'return_value=mock_agents', 'range': [249, 251], 'children': []}]}]}, {'type': 'PropertyAccess', 'name': 'mock_store_agent.return_value.count', 'range': [254, 267], 'children': [{'type': 'Assignment', 'name': '=', 'range': [259, 260], 'children': []}, {'type': 'CallExpression', 'name': 'mocker.AsyncMock', 'range': [260, 267], 'children': [{'type': 'Argument', 'name': 'return_value=1', 'range': [264, 266], 'children': []}]}]}]}, {'type': 'Comment', 'name': '# Call function', 'range': [270, 273], 'children': []}, {'type': 'VariableDecl', 'name': 'result', 'range': [274, 282], 'children': [{'type': 'Assignment', 'name': '=', 'range': [275, 276], 'children': []}, {'type': 'AwaitExpression', 'name': 'await db.get_store_agents', 'range': [276, 281], 'children': []}]}, {'type': 'Comment', 'name': '# Verify results', 'range': [284, 287], 'children': []}, {'type': 'AssertStatement', 'name': 'assert len(result.agents) == 1', 'range': [288, 298], 'children': []}, {'type': 'AssertStatement', 'name': 'assert result.agents[0].slug == "test-agent"', 'range': [299, 311], 'children': []}, {'type': 'AssertStatement', 'name': 'assert result.pagination.total_items == 1', 'range': [312, 321], 'children': []}, {'type': 'Comment', 'name': '# Verify mocks called correctly', 'range': [323, 328], 'children': []}, {'type': 'ExpressionStatement', 'name': 'mock_store_agent.return_value.find_many.assert_called_once', 'range': [329, 338], 'children': []}, {'type': 'ExpressionStatement', 'name': 'mock_store_agent.return_value.count.assert_called_once', 'range': [339, 348], 'children': []}]}]}]}
2025-01-08 10:29:50,818 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:29:55,399 - INFO - Step 2 result: {'type': 'Program', 'name': 'test_get_store_creator_details', 'range': [578, 783], 'children': [{'type': 'FunctionDeclaration', 'name': 'test_get_store_creator_details', 'range': [578, 783], 'children': [{'type': 'FunctionSignature', 'name': 'test_get_store_creator_details', 'range': [578, 584], 'children': [{'type': 'Keyword', 'name': 'async', 'range': [578, 583], 'children': []}, {'type': 'Keyword', 'name': 'def', 'range': [579, 582], 'children': []}, {'type': 'Identifier', 'name': 'test_get_store_creator_details', 'range': [580, 611], 'children': []}, {'type': 'Punctuation', 'name': '(', 'range': [581, 582], 'children': []}, {'type': 'Identifier', 'name': 'mocker', 'range': [582, 588], 'children': []}, {'type': 'Punctuation', 'name': ')', 'range': [583, 584], 'children': []}, {'type': 'Punctuation', 'name': ':', 'range': [584, 585], 'children': []}]}, {'type': 'Block', 'name': 'Block', 'range': [585, 783], 'children': [{'type': 'Comment', 'name': '# Mock data', 'range': [586, 589], 'children': []}, {'type': 'VariableDeclaration', 'name': 'mock_creator_data', 'range': [590, 655], 'children': [{'type': 'Identifier', 'name': 'mock_creator_data', 'range': [590, 606], 'children': []}, {'type': 'Operator', 'name': '=', 'range': [591, 592], 'children': []}, {'type': 'NewExpression', 'name': 'Creator', 'range': [592, 655], 'children': [{'type': 'Identifier', 'name': 'prisma', 'range': [592, 598], 'children': []}, {'type': 'Punctuation', 'name': '.', 'range': [593, 594], 'children': []}, {'type': 'Identifier', 'name': 'models', 'range': [594, 600], 'children': []}, {'type': 'Punctuation', 'name': '.', 'range': [595, 596], 'children': []}, {'type': 'Identifier', 'name': 'Creator', 'range': [596, 602], 'children': []}, {'type': 'Punctuation', 'name': '(', 'range': [597, 598], 'children': []}, {'type': 'ObjectExpression', 'name': 'ObjectExpression', 'range': [598, 655], 'children': [{'type': 'Property', 'name': 'name', 'range': [599, 601], 'children': [{'type': 'Identifier', 'name': 'name', 'range': [599, 603], 'children': []}, {'type': 'Operator', 'name': '=', 'range': [600, 601], 'children': []}, {'type': 'Literal', 'name': '"Test Creator"', 'range': [601, 613], 'children': []}]}, {'type': 'Punctuation', 'name': ',', 'range': [602, 603], 'children': []}, {'type': 'Property', 'name': 'username', 'range': [604, 606], 'children': [{'type': 'Identifier', 'name': 'username', 'range': [604, 612], 'children': []}, {'type': 'Operator', 'name': '=', 'range': [605, 606], 'children': []}, {'type': 'Literal', 'name': '"creator"', 'range': [606, 614], 'children': []}]}, {'type': 'Punctuation', 'name': ',', 'range': [607, 608], 'children': []}, {'type': 'Property', 'name': 'description', 'range': [609, 611], 'children': [{'type': 'Identifier', 'name': 'description', 'range': [609, 619], 'children': []}, {'type': 'Operator', 'name': '=', 'range': [610, 611], 'children': []}, {'type': 'Literal', 'name': '"Test description"', 'range': [611, 625], 'children': []}]}, {'type': 'Punctuation', 'name': ',', 'range': [612, 613], 'children': []}, {'type': 'Property', 'name': 'links', 'range': [614, 616], 'children': [{'type': 'Identifier', 'name': 'links', 'range': [614, 619], 'children': []}, {'type': 'Operator', 'name': '=', 'range': [615, 616], 'children': []}, {'type': 'ArrayExpression', 'name': 'ArrayExpression', 'range': [616, 618], 'children': [{'type': 'Literal', 'name': '"link1"', 'range': [617, 623], 'children': []}]}]}, {'type': 'Punctuation', 'name': ',', 'range': [619, 620], 'children': []}, {'type': 'Property', 'name': 'avatar_url', 'range': [621, 623], 'children': [{'type': 'Identifier', 'name': 'avatar_url', 'range': [621, 631], 'children': []}, {'type': 'Operator', 'name': '=', 'range': [622, 623], 'children': []}, {'type': 'Literal', 'name': '"avatar.jpg"', 'range': [623, 635], 'children': []}]}, {'type': 'Punctuation', 'name': ',', 'range': [624, 625], 'children': []}, {'type': 'Property', 'name': 'num_agents', 'range': [626, 628], 'children': [{'type': 'Identifier', 'name': 'num_agents', 'range': [626, 636], 'children': []}, {'type': 'Operator', 'name': '=', 'range': [627, 628], 'children': []}, {'type': 'Literal', 'name': '1', 'range': [628, 629], 'children': []}]}, {'type': 'Punctuation', 'name': ',', 'range': [629, 630], 'children': []}, {'type': 'Property', 'name': 'agent_rating', 'range': [631, 633], 'children': [{'type': 'Identifier', 'name': 'agent_rating', 'range': [631, 643], 'children': []}, {'type': 'Operator', 'name': '=', 'range': [632, 633], 'children': []}, {'type': 'Literal', 'name': '4.5', 'range': [633, 636], 'children': []}]}, {'type': 'Punctuation', 'name': ',', 'range': [634, 635], 'children': []}, {'type': 'Property', 'name': 'agent_runs', 'range': [638, 640], 'children': [{'type': 'Identifier', 'name': 'agent_runs', 'range': [638, 648], 'children': []}, {'type': 'Operator', 'name': '=', 'range': [639, 640], 'children': []}, {'type': 'Literal', 'name': '10', 'range': [640, 642], 'children': []}]}, {'type': 'Punctuation', 'name': ',', 'range': [641, 642], 'children': []}, {'type': 'Property', 'name': 'top_categories', 'range': [643, 645], 'children': [{'type': 'Identifier', 'name': 'top_categories', 'range': [643, 657], 'children': []}, {'type': 'Operator', 'name': '=', 'range': [644, 645], 'children': []}, {'type': 'ArrayExpression', 'name': 'ArrayExpression', 'range': [645, 647], 'children': [{'type': 'Literal', 'name': '"test"', 'range': [646, 652], 'children': []}]}]}, {'type': 'Punctuation', 'name': ',', 'range': [648, 649], 'children': []}, {'type': 'Property', 'name': 'is_featured', 'range': [650, 652], 'children': [{'type': 'Identifier', 'name': 'is_featured', 'range': [650, 661], 'children': []}, {'type': 'Operator', 'name': '=', 'range': [651, 652], 'children': []}, {'type': 'Literal', 'name': 'False', 'range': [652, 657], 'children': []}]}, {'type': 'Punctuation', 'name': ',', 'range': [653, 654], 'children': []}, {'type': 'Punctuation', 'name': ')', 'range': [655, 656], 'children': []}]}]}]}, {'type': 'Comment', 'name': '# Mock prisma call', 'range': [658, 662], 'children': []}, {'type': 'VariableDeclaration', 'name': 'mock_creator', 'range': [663, 683], 'children': [{'type': 'Identifier', 'name': 'mock_creator', 'range': [663, 675], 'children': []}, {'type': 'Operator', 'name': '=', 'range': [664, 665], 'children': []}, {'type': 'CallExpression', 'name': 'patch', 'range': [665, 683], 'children': [{'type': 'Identifier', 'name': 'mocker', 'range': [665, 671], 'children': []}, {'type': 'Punctuation', 'name': '.', 'range': [666, 667], 'children': []}, {'type': 'Identifier', 'name': 'patch', 'range': [667, 672], 'children': []}, {'type': 'Punctuation', 'name': '(', 'range': [668, 669], 'children': []}, {'type': 'Literal', 'name': '"prisma.models.Creator.prisma"', 'range': [669, 701], 'children': []}, {'type': 'Punctuation', 'name': ')', 'range': [670, 671], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'ExpressionStatement', 'range': [672, 683], 'children': [{'type': 'AssignmentExpression', 'name': 'AssignmentExpression', 'range': [672, 683], 'children': [{'type': 'MemberExpression', 'name': 'MemberExpression', 'range': [672, 680], 'children': [{'type': 'Identifier', 'name': 'mock_creator', 'range': [672, 684], 'children': []}, {'type': 'Punctuation', 'name': '.', 'range': [673, 674], 'children': []}, {'type': 'Identifier', 'name': 'return_value', 'range': [674, 686], 'children': []}, {'type': 'Punctuation', 'name': '.', 'range': [675, 676], 'children': []}, {'type': 'Identifier', 'name': 'find_unique', 'range': [676, 687], 'children': []}]}, {'type': 'Operator', 'name': '=', 'range': [677, 678], 'children': []}, {'type': 'CallExpression', 'name': 'AsyncMock', 'range': [678, 683], 'children': [{'type': 'Identifier', 'name': 'mocker', 'range': [678, 684], 'children': []}, {'type': 'Punctuation', 'name': '.', 'range': [679, 680], 'children': []}, {'type': 'Identifier', 'name': 'AsyncMock', 'range': [680, 689], 'children': []}, {'type': 'Punctuation', 'name': '(', 'range': [681, 682], 'children': []}, {'type': 'Punctuation', 'name': ')', 'range': [682, 683], 'children': []}]}]}]}, {'type': 'Comment', 'name': '# Configure the mock to return values that will pass validation', 'range': [684, 695], 'children': []}, {'type': 'ExpressionStatement', 'name': 'ExpressionStatement', 'range': [696, 705], 'children': [{'type': 'AssignmentExpression', 'name': 'AssignmentExpression', 'range': [696, 705], 'children': [{'type': 'MemberExpression', 'name': 'MemberExpression', 'range': [696, 703], 'children': [{'type': 'Identifier', 'name': 'mock_creator', 'range': [696, 708], 'children': []}, {'type': 'Punctuation', 'name': '.', 'range': [697, 698], 'children': []}, {'type': 'Identifier', 'name': 'return_value', 'range': [698, 710], 'children': []}, {'type': 'Punctuation', 'name': '.', 'range': [699, 700], 'children': []}, {'type': 'Identifier', 'name': 'find_unique', 'range': [700, 711], 'children': []}, {'type': 'Punctuation', 'name': '.', 'range': [701, 702], 'children': []}, {'type': 'Identifier', 'name': 'return_value', 'range': [702, 714], 'children': []}]}, {'type': 'Operator', 'name': '=', 'range': [703, 704], 'children': []}, {'type': 'Identifier', 'name': 'mock_creator_data', 'range': [704, 720], 'children': []}]}]}, {'type': 'Comment', 'name': '# Call function', 'range': [706, 710], 'children': []}, {'type': 'ExpressionStatement', 'name': 'ExpressionStatement', 'range': [711, 720], 'children': [{'type': 'AssignmentExpression', 'name': 'AssignmentExpression', 'range': [711, 720], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [711, 717], 'children': []}, {'type': 'Operator', 'name': '=', 'range': [712, 713], 'children': []}, {'type': 'AwaitExpression', 'name': 'AwaitExpression', 'range': [713, 720], 'children': [{'type': 'CallExpression', 'name': 'get_store_creator_details', 'range': [714, 720], 'children': [{'type': 'Identifier', 'name': 'db', 'range': [714, 716], 'children': []}, {'type': 'Punctuation', 'name': '.', 'range': [715, 716], 'children': []}, {'type': 'Identifier', 'name': 'get_store_creator_details', 'range': [716, 740], 'children': []}, {'type': 'Punctuation', 'name': '(', 'range': [717, 718], 'children': []}, {'type': 'Literal', 'name': '"creator"', 'range': [718, 726], 'children': []}, {'type': 'Punctuation', 'name': ')', 'range': [719, 720], 'children': []}]}]}]}]}, {'type': 'Comment', 'name': '# Verify results', 'range': [721, 725], 'children': []}, {'type': 'ExpressionStatement', 'name': 'ExpressionStatement', 'range': [726, 733], 'children': [{'type': 'CallExpression', 'name': 'assert', 'range': [726, 733], 'children': [{'type': 'Identifier', 'name': 'assert', 'range': [726, 732], 'children': []}, {'type': 'BinaryExpression', 'name': 'BinaryExpression', 'range': [727, 733], 'children': [{'type': 'MemberExpression', 'name': 'MemberExpression', 'range': [727, 731], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [727, 733], 'children': []}, {'type': 'Punctuation', 'name': '.', 'range': [728, 729], 'children': []}, {'type': 'Identifier', 'name': 'username', 'range': [729, 737], 'children': []}]}, {'type': 'Operator', 'name': '==', 'range': [730, 732], 'children': []}, {'type': 'Literal', 'name': '"creator"', 'range': [732, 740], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': 'ExpressionStatement', 'range': [734, 741], 'children': [{'type': 'CallExpression', 'name': 'assert', 'range': [734, 741], 'children': [{'type': 'Identifier', 'name': 'assert', 'range': [734, 740], 'children': []}, {'type': 'BinaryExpression', 'name': 'BinaryExpression', 'range': [735, 741], 'children': [{'type': 'MemberExpression', 'name': 'MemberExpression', 'range': [735, 739], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [735, 741], 'children': []}, {'type': 'Punctuation', 'name': '.', 'range': [736, 737], 'children': []}, {'type': 'Identifier', 'name': 'name', 'range': [737, 741], 'children': []}]}, {'type': 'Operator', 'name': '==', 'range': [738, 740], 'children': []}, {'type': 'Literal', 'name': '"Test Creator"', 'range': [740, 754], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': 'ExpressionStatement', 'range': [742, 749], 'children': [{'type': 'CallExpression', 'name': 'assert', 'range': [742, 749], 'children': [{'type': 'Identifier', 'name': 'assert', 'range': [742, 748], 'children': []}, {'type': 'BinaryExpression', 'name': 'BinaryExpression', 'range': [743, 749], 'children': [{'type': 'MemberExpression', 'name': 'MemberExpression', 'range': [743, 747], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [743, 749], 'children': []}, {'type': 'Punctuation', 'name': '.', 'range': [744, 745], 'children': []}, {'type': 'Identifier', 'name': 'description', 'range': [745, 755], 'children': []}]}, {'type': 'Operator', 'name': '==', 'range': [746, 748], 'children': []}, {'type': 'Literal', 'name': '"Test description"', 'range': [748, 766], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': 'ExpressionStatement', 'range': [750, 757], 'children': [{'type': 'CallExpression', 'name': 'assert', 'range': [750, 757], 'children': [{'type': 'Identifier', 'name': 'assert', 'range': [750, 756], 'children': []}, {'type': 'BinaryExpression', 'name': 'BinaryExpression', 'range': [751, 757], 'children': [{'type': 'MemberExpression', 'name': 'MemberExpression', 'range': [751, 755], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [751, 757], 'children': []}, {'type': 'Punctuation', 'name': '.', 'range': [752, 753], 'children': []}, {'type': 'Identifier', 'name': 'avatar_url', 'range': [753, 763], 'children': []}]}, {'type': 'Operator', 'name': '==', 'range': [754, 756], 'children': []}, {'type': 'Literal', 'name': '"avatar.jpg"', 'range': [756, 768], 'children': []}]}]}]}, {'type': 'Comment', 'name': '# Verify mock called correctly', 'range': [758, 764], 'children': []}, {'type': 'ExpressionStatement', 'name': 'ExpressionStatement', 'range': [765, 783], 'children': [{'type': 'CallExpression', 'name': 'assert_called_once_with', 'range': [765, 783], 'children': [{'type': 'MemberExpression', 'name': 'MemberExpression', 'range': [765, 772], 'children': [{'type': 'Identifier', 'name': 'mock_creator', 'range': [765, 777], 'children': []}, {'type': 'Punctuation', 'name': '.', 'range': [766, 767], 'children': []}, {'type': 'Identifier', 'name': 'return_value', 'range': [767, 779], 'children': []}, {'type': 'Punctuation', 'name': '.', 'range': [768, 769], 'children': []}, {'type': 'Identifier', 'name': 'find_unique', 'range': [769, 780], 'children': []}, {'type': 'Punctuation', 'name': '.', 'range': [770, 771], 'children': []}, {'type': 'Identifier', 'name': 'assert_called_once_with', 'range': [771, 793], 'children': []}]}, {'type': 'Punctuation', 'name': '(', 'range': [772, 773], 'children': []}, {'type': 'ObjectExpression', 'name': 'ObjectExpression', 'range': [773, 781], 'children': [{'type': 'Property', 'name': 'where', 'range': [774, 776], 'children': [{'type': 'Identifier', 'name': 'where', 'range': [774, 778], 'children': []}, {'type': 'Operator', 'name': '=', 'range': [775, 776], 'children': []}, {'type': 'ObjectExpression', 'name': 'ObjectExpression', 'range': [776, 780], 'children': [{'type': 'Property', 'name': 'username', 'range': [777, 779], 'children': [{'type': 'Literal', 'name': '"username"', 'range': [777, 787], 'children': []}, {'type': 'Punctuation', 'name': ':', 'range': [778, 779], 'children': []}, {'type': 'Literal', 'name': '"creator"', 'range': [779, 787], 'children': []}]}]}]}]}, {'type': 'Punctuation', 'name': ')', 'range': [782, 783], 'children': []}]}]}]}]}]}
2025-01-08 10:29:55,402 - INFO - Starting Step 3: AST simplification
2025-01-08 10:30:02,480 - INFO - Step 4 result: {'type': 'Program', 'name': 'test_create_store_submission', 'range': [792, 1081], 'children': [{'type': 'FunctionDecl', 'name': 'test_create_store_submission', 'range': [792, 1081], 'children': [{'type': 'Decorator', 'name': '@pytest.mark.asyncio', 'range': [785, 790], 'children': []}, {'type': 'Parameter', 'name': 'mocker', 'range': [796, 796], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [798, 1081], 'children': [{'type': 'VariableDecl', 'name': 'mock_agent', 'range': [804, 847], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [805, 847], 'children': [{'type': 'CallExpression', 'name': 'AgentGraph', 'range': [806, 847], 'children': [{'type': 'Argument', 'name': 'id', 'range': [813, 815], 'children': []}, {'type': 'Argument', 'name': 'version', 'range': [818, 820], 'children': []}, {'type': 'Argument', 'name': 'userId', 'range': [823, 825], 'children': []}, {'type': 'Argument', 'name': 'createdAt', 'range': [828, 834], 'children': []}, {'type': 'Argument', 'name': 'isActive', 'range': [837, 839], 'children': []}, {'type': 'Argument', 'name': 'isTemplate', 'range': [842, 844], 'children': []}]}]}]}, {'type': 'VariableDecl', 'name': 'mock_listing', 'range': [850, 907], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [851, 907], 'children': [{'type': 'CallExpression', 'name': 'StoreListing', 'range': [852, 907], 'children': [{'type': 'Argument', 'name': 'id', 'range': [859, 861], 'children': []}, {'type': 'Argument', 'name': 'createdAt', 'range': [864, 870], 'children': []}, {'type': 'Argument', 'name': 'updatedAt', 'range': [873, 879], 'children': []}, {'type': 'Argument', 'name': 'isDeleted', 'range': [882, 884], 'children': []}, {'type': 'Argument', 'name': 'isApproved', 'range': [887, 889], 'children': []}, {'type': 'Argument', 'name': 'agentId', 'range': [892, 894], 'children': []}, {'type': 'Argument', 'name': 'agentVersion', 'range': [897, 899], 'children': []}, {'type': 'Argument', 'name': 'owningUserId', 'range': [902, 904], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': 'mock_agent_graph', 'range': [915, 938], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [916, 938], 'children': [{'type': 'CallExpression', 'name': 'patch', 'range': [917, 922], 'children': []}, {'type': 'MemberExpression', 'name': 'return_value.find_first', 'range': [924, 937], 'children': [{'type': 'CallExpression', 'name': 'AsyncMock', 'range': [930, 937], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': 'mock_store_listing', 'range': [940, 978], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [941, 978], 'children': [{'type': 'CallExpression', 'name': 'patch', 'range': [942, 947], 'children': []}, {'type': 'MemberExpression', 'name': 'return_value.find_first', 'range': [949, 962], 'children': [{'type': 'CallExpression', 'name': 'AsyncMock', 'range': [955, 962], 'children': []}]}, {'type': 'MemberExpression', 'name': 'return_value.create', 'range': [964, 977], 'children': [{'type': 'CallExpression', 'name': 'AsyncMock', 'range': [970, 977], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': 'result', 'range': [984, 1023], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [985, 1023], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [986, 1023], 'children': [{'type': 'CallExpression', 'name': 'create_store_submission', 'range': [987, 1022], 'children': [{'type': 'Argument', 'name': 'user_id', 'range': [992, 994], 'children': []}, {'type': 'Argument', 'name': 'agent_id', 'range': [997, 999], 'children': []}, {'type': 'Argument', 'name': 'agent_version', 'range': [1002, 1004], 'children': []}, {'type': 'Argument', 'name': 'slug', 'range': [1007, 1009], 'children': []}, {'type': 'Argument', 'name': 'name', 'range': [1012, 1014], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1017, 1019], 'children': []}]}]}]}]}, {'type': 'ExpressionStatement', 'name': 'assert', 'range': [1029, 1036], 'children': [{'type': 'BinaryExpression', 'name': '==', 'range': [1030, 1035], 'children': [{'type': 'MemberExpression', 'name': 'result.name', 'range': [1030, 1032], 'children': []}, {'type': 'Literal', 'name': '"Test Agent"', 'range': [1034, 1035], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'assert', 'range': [1037, 1044], 'children': [{'type': 'BinaryExpression', 'name': '==', 'range': [1038, 1043], 'children': [{'type': 'MemberExpression', 'name': 'result.description', 'range': [1038, 1040], 'children': []}, {'type': 'Literal', 'name': '"Test description"', 'range': [1042, 1043], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'mock_agent_graph.return_value.find_first.assert_called_once', 'range': [1052, 1061], 'children': [{'type': 'CallExpression', 'name': 'assert_called_once', 'range': [1058, 1060], 'children': []}]}, {'type': 'ExpressionStatement', 'name': 'mock_store_listing.return_value.find_first.assert_called_once', 'range': [1062, 1071], 'children': [{'type': 'CallExpression', 'name': 'assert_called_once', 'range': [1068, 1070], 'children': []}]}, {'type': 'ExpressionStatement', 'name': 'mock_store_listing.return_value.create.assert_called_once', 'range': [1072, 1081], 'children': [{'type': 'CallExpression', 'name': 'assert_called_once', 'range': [1078, 1080], 'children': []}]}]}]}]}
2025-01-08 10:30:02,480 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:30:06,836 - INFO - Step 3 result: {'type': 'Program', 'name': 'test_update_profile', 'range': [1090, 1323], 'children': [{'type': 'FunctionDeclaration', 'name': 'test_update_profile', 'range': [1090, 1323], 'children': [{'type': 'Decorator', 'name': '@pytest.mark.asyncio', 'range': [1083, 1089], 'children': []}, {'type': 'FunctionSignature', 'name': 'test_update_profile', 'range': [1090, 1096], 'children': [{'type': 'Keyword', 'name': 'async', 'range': [1090, 1095], 'children': []}, {'type': 'Keyword', 'name': 'def', 'range': [1091, 1094], 'children': []}, {'type': 'Identifier', 'name': 'test_update_profile', 'range': [1092, 1109], 'children': []}, {'type': 'Parameter', 'name': 'mocker', 'range': [1094, 1095], 'children': []}]}, {'type': 'Block', 'name': 'FunctionBody', 'range': [1097, 1323], 'children': [{'type': 'Comment', 'name': '# Mock data', 'range': [1098, 1101], 'children': []}, {'type': 'VariableDeclaration', 'name': 'mock_profile', 'range': [1102, 1167], 'children': [{'type': 'Assignment', 'name': '=', 'range': [1103, 1104], 'children': []}, {'type': 'ObjectCreation', 'name': 'Profile', 'range': [1104, 1166], 'children': [{'type': 'Identifier', 'name': 'prisma', 'range': [1104, 1110], 'children': []}, {'type': 'Identifier', 'name': 'models', 'range': [1105, 1111], 'children': []}, {'type': 'Identifier', 'name': 'Profile', 'range': [1106, 1112], 'children': []}, {'type': 'ObjectProperties', 'name': 'ProfileProperties', 'range': [1109, 1165], 'children': [{'type': 'Property', 'name': 'id', 'range': [1111, 1114], 'children': []}, {'type': 'Property', 'name': 'name', 'range': [1116, 1119], 'children': []}, {'type': 'Property', 'name': 'username', 'range': [1121, 1124], 'children': []}, {'type': 'Property', 'name': 'description', 'range': [1126, 1129], 'children': []}, {'type': 'Property', 'name': 'links', 'range': [1131, 1136], 'children': []}, {'type': 'Property', 'name': 'avatarUrl', 'range': [1138, 1141], 'children': []}, {'type': 'Property', 'name': 'isFeatured', 'range': [1143, 1146], 'children': []}, {'type': 'Property', 'name': 'createdAt', 'range': [1148, 1155], 'children': []}, {'type': 'Property', 'name': 'updatedAt', 'range': [1157, 1164], 'children': []}]}]}]}, {'type': 'Comment', 'name': '# Mock prisma calls', 'range': [1169, 1173], 'children': []}, {'type': 'VariableDeclaration', 'name': 'mock_profile_db', 'range': [1174, 1214], 'children': [{'type': 'Assignment', 'name': '=', 'range': [1175, 1176], 'children': []}, {'type': 'FunctionCall', 'name': 'mocker.patch', 'range': [1176, 1182], 'children': [{'type': 'Identifier', 'name': 'mocker', 'range': [1176, 1182], 'children': []}, {'type': 'Identifier', 'name': 'patch', 'range': [1177, 1182], 'children': []}, {'type': 'StringLiteral', 'name': '"prisma.models.Profile.prisma"', 'range': [1180, 1181], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'mock_profile_db.return_value.find_first = mocker.AsyncMock', 'range': [1183, 1199], 'children': [{'type': 'Assignment', 'name': '=', 'range': [1188, 1189], 'children': []}, {'type': 'FunctionCall', 'name': 'mocker.AsyncMock', 'range': [1189, 1198], 'children': [{'type': 'Identifier', 'name': 'mocker', 'range': [1189, 1195], 'children': []}, {'type': 'Identifier', 'name': 'AsyncMock', 'range': [1191, 1198], 'children': []}, {'type': 'ObjectProperties', 'name': 'AsyncMockProperties', 'range': [1193, 1197], 'children': [{'type': 'Property', 'name': 'return_value', 'range': [1194, 1197], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': 'mock_profile_db.return_value.update = mocker.AsyncMock', 'range': [1200, 1214], 'children': [{'type': 'Assignment', 'name': '=', 'range': [1205, 1206], 'children': []}, {'type': 'FunctionCall', 'name': 'mocker.AsyncMock', 'range': [1206, 1213], 'children': [{'type': 'Identifier', 'name': 'mocker', 'range': [1206, 1212], 'children': []}, {'type': 'Identifier', 'name': 'AsyncMock', 'range': [1208, 1213], 'children': []}, {'type': 'ObjectProperties', 'name': 'AsyncMockProperties', 'range': [1210, 1212], 'children': [{'type': 'Property', 'name': 'return_value', 'range': [1211, 1212], 'children': []}]}]}]}, {'type': 'Comment', 'name': '# Test data', 'range': [1216, 1219], 'children': []}, {'type': 'VariableDeclaration', 'name': 'profile', 'range': [1220, 1258], 'children': [{'type': 'Assignment', 'name': '=', 'range': [1221, 1222], 'children': []}, {'type': 'ObjectCreation', 'name': 'Profile', 'range': [1222, 1257], 'children': [{'type': 'Identifier', 'name': 'Profile', 'range': [1222, 1228], 'children': []}, {'type': 'ObjectProperties', 'name': 'ProfileProperties', 'range': [1223, 1256], 'children': [{'type': 'Property', 'name': 'name', 'range': [1225, 1228], 'children': []}, {'type': 'Property', 'name': 'username', 'range': [1230, 1233], 'children': []}, {'type': 'Property', 'name': 'description', 'range': [1235, 1238], 'children': []}, {'type': 'Property', 'name': 'links', 'range': [1240, 1245], 'children': []}, {'type': 'Property', 'name': 'avatar_url', 'range': [1247, 1250], 'children': []}, {'type': 'Property', 'name': 'is_featured', 'range': [1252, 1255], 'children': []}]}]}]}, {'type': 'Comment', 'name': '# Call function', 'range': [1260, 1263], 'children': []}, {'type': 'ExpressionStatement', 'name': 'result = await db.update_or_create_profile', 'range': [1264, 1275], 'children': [{'type': 'Assignment', 'name': '=', 'range': [1265, 1266], 'children': []}, {'type': 'AwaitExpression', 'name': 'await', 'range': [1266, 1271], 'children': [{'type': 'FunctionCall', 'name': 'db.update_or_create_profile', 'range': [1267, 1274], 'children': [{'type': 'Identifier', 'name': 'db', 'range': [1267, 1269], 'children': []}, {'type': 'Identifier', 'name': 'update_or_create_profile', 'range': [1269, 1274], 'children': []}, {'type': 'Arguments', 'name': 'FunctionArguments', 'range': [1270, 1273], 'children': [{'type': 'StringLiteral', 'name': '"user-id"', 'range': [1271, 1272], 'children': []}, {'type': 'Identifier', 'name': 'profile', 'range': [1273, 1274], 'children': []}]}]}]}]}, {'type': 'Comment', 'name': '# Verify results', 'range': [1277, 1280], 'children': []}, {'type': 'ExpressionStatement', 'name': 'assert result.username == "creator"', 'range': [1281, 1288], 'children': [{'type': 'AssertStatement', 'name': 'assert', 'range': [1281, 1287], 'children': [{'type': 'BinaryExpression', 'name': '==', 'range': [1285, 1286], 'children': [{'type': 'MemberExpression', 'name': 'result.username', 'range': [1282, 1285], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [1282, 1283], 'children': []}, {'type': 'Identifier', 'name': 'username', 'range': [1283, 1285], 'children': []}]}, {'type': 'StringLiteral', 'name': '"creator"', 'range': [1286, 1287], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': 'assert result.name == "Test Creator"', 'range': [1289, 1296], 'children': [{'type': 'AssertStatement', 'name': 'assert', 'range': [1289, 1295], 'children': [{'type': 'BinaryExpression', 'name': '==', 'range': [1293, 1294], 'children': [{'type': 'MemberExpression', 'name': 'result.name', 'range': [1290, 1293], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [1290, 1291], 'children': []}, {'type': 'Identifier', 'name': 'name', 'range': [1291, 1293], 'children': []}]}, {'type': 'StringLiteral', 'name': '"Test Creator"', 'range': [1294, 1295], 'children': []}]}]}]}, {'type': 'Comment', 'name': '# Verify mocks called correctly', 'range': [1298, 1303], 'children': []}, {'type': 'ExpressionStatement', 'name': 'mock_profile_db.return_value.find_first.assert_called_once', 'range': [1304, 1313], 'children': [{'type': 'FunctionCall', 'name': 'assert_called_once', 'range': [1310, 1312], 'children': [{'type': 'MemberExpression', 'name': 'mock_profile_db.return_value.find_first', 'range': [1304, 1309], 'children': [{'type': 'Identifier', 'name': 'mock_profile_db', 'range': [1304, 1305], 'children': []}, {'type': 'Identifier', 'name': 'return_value', 'range': [1305, 1307], 'children': []}, {'type': 'Identifier', 'name': 'find_first', 'range': [1307, 1309], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': 'mock_profile_db.return_value.update.assert_called_once', 'range': [1314, 1323], 'children': [{'type': 'FunctionCall', 'name': 'assert_called_once', 'range': [1320, 1322], 'children': [{'type': 'MemberExpression', 'name': 'mock_profile_db.return_value.update', 'range': [1314, 1319], 'children': [{'type': 'Identifier', 'name': 'mock_profile_db', 'range': [1314, 1315], 'children': []}, {'type': 'Identifier', 'name': 'return_value', 'range': [1315, 1317], 'children': []}, {'type': 'Identifier', 'name': 'update', 'range': [1317, 1319], 'children': []}]}]}]}]}]}]}
2025-01-08 10:30:06,837 - INFO - Starting Step 4: AST normalization
2025-01-08 10:30:27,039 - INFO - Step 5 result: {'type': 'Program', 'name': 'test_get_store_agents', 'range': [106, 348], 'children': [{'type': 'FunctionDecl', 'name': 'test_get_store_agents', 'range': [106, 348], 'children': [{'type': 'Decorator', 'name': '@pytest.mark.asyncio', 'range': [99, 105], 'children': []}, {'type': 'FunctionSignature', 'name': 'test_get_store_agents', 'range': [106, 112], 'children': [{'type': 'Keyword', 'name': 'async', 'range': [106, 111], 'children': []}, {'type': 'Keyword', 'name': 'def', 'range': [107, 110], 'children': []}, {'type': 'Identifier', 'name': 'test_get_store_agents', 'range': [108, 128], 'children': []}, {'type': 'Parameter', 'name': 'mocker', 'range': [110, 116], 'children': []}]}, {'type': 'Block', 'name': 'FunctionBody', 'range': [113, 348], 'children': [{'type': 'Comment', 'name': '# Mock data', 'range': [114, 117], 'children': []}, {'type': 'VariableDecl', 'name': 'mock_agents', 'range': [118, 222], 'children': [{'type': 'Assignment', 'name': '=', 'range': [119, 120], 'children': []}, {'type': 'ArrayLiteral', 'name': '[]', 'range': [120, 222], 'children': [{'type': 'ObjectLiteral', 'name': 'StoreAgent', 'range': [122, 220], 'children': [{'type': 'Property', 'name': 'listing_id', 'range': [129, 131], 'children': []}, {'type': 'Property', 'name': 'storeListingVersionId', 'range': [134, 136], 'children': []}, {'type': 'Property', 'name': 'slug', 'range': [139, 141], 'children': []}, {'type': 'Property', 'name': 'agent_name', 'range': [144, 146], 'children': []}, {'type': 'Property', 'name': 'agent_video', 'range': [149, 151], 'children': []}, {'type': 'Property', 'name': 'agent_image', 'range': [154, 158], 'children': []}, {'type': 'Property', 'name': 'featured', 'range': [161, 163], 'children': []}, {'type': 'Property', 'name': 'creator_username', 'range': [166, 168], 'children': []}, {'type': 'Property', 'name': 'creator_avatar', 'range': [171, 173], 'children': []}, {'type': 'Property', 'name': 'sub_heading', 'range': [176, 178], 'children': []}, {'type': 'Property', 'name': 'description', 'range': [181, 183], 'children': []}, {'type': 'Property', 'name': 'categories', 'range': [186, 188], 'children': []}, {'type': 'Property', 'name': 'runs', 'range': [192, 194], 'children': []}, {'type': 'Property', 'name': 'rating', 'range': [197, 201], 'children': []}, {'type': 'Property', 'name': 'versions', 'range': [204, 208], 'children': []}, {'type': 'Property', 'name': 'updated_at', 'range': [211, 217], 'children': []}]}]}]}, {'type': 'Comment', 'name': '# Mock prisma calls', 'range': [225, 229], 'children': []}, {'type': 'VariableDecl', 'name': 'mock_store_agent', 'range': [230, 268], 'children': [{'type': 'Assignment', 'name': '=', 'range': [231, 232], 'children': []}, {'type': 'CallExpression', 'name': 'mocker.patch', 'range': [232, 237], 'children': [{'type': 'Argument', 'name': '"prisma.models.StoreAgent.prisma"', 'range': [236, 237], 'children': []}]}, {'type': 'PropertyAccess', 'name': 'mock_store_agent.return_value.find_many', 'range': [239, 252], 'children': [{'type': 'Assignment', 'name': '=', 'range': [244, 245], 'children': []}, {'type': 'CallExpression', 'name': 'mocker.AsyncMock', 'range': [245, 252], 'children': [{'type': 'Argument', 'name': 'return_value=mock_agents', 'range': [249, 251], 'children': []}]}]}, {'type': 'PropertyAccess', 'name': 'mock_store_agent.return_value.count', 'range': [254, 267], 'children': [{'type': 'Assignment', 'name': '=', 'range': [259, 260], 'children': []}, {'type': 'CallExpression', 'name': 'mocker.AsyncMock', 'range': [260, 267], 'children': [{'type': 'Argument', 'name': 'return_value=1', 'range': [264, 266], 'children': []}]}]}]}, {'type': 'Comment', 'name': '# Call function', 'range': [270, 273], 'children': []}, {'type': 'VariableDecl', 'name': 'result', 'range': [274, 282], 'children': [{'type': 'Assignment', 'name': '=', 'range': [275, 276], 'children': []}, {'type': 'AwaitExpression', 'name': 'await db.get_store_agents', 'range': [276, 281], 'children': []}]}, {'type': 'Comment', 'name': '# Verify results', 'range': [284, 287], 'children': []}, {'type': 'AssertStatement', 'name': 'assert len(result.agents) == 1', 'range': [288, 298], 'children': []}, {'type': 'AssertStatement', 'name': 'assert result.agents[0].slug == "test-agent"', 'range': [299, 311], 'children': []}, {'type': 'AssertStatement', 'name': 'assert result.pagination.total_items == 1', 'range': [312, 321], 'children': []}, {'type': 'Comment', 'name': '# Verify mocks called correctly', 'range': [323, 328], 'children': []}, {'type': 'ExpressionStatement', 'name': 'mock_store_agent.return_value.find_many.assert_called_once', 'range': [329, 338], 'children': []}, {'type': 'ExpressionStatement', 'name': 'mock_store_agent.return_value.count.assert_called_once', 'range': [339, 348], 'children': []}]}]}]}
2025-01-08 10:30:27,040 - INFO - Completed main AST analysis flow
2025-01-08 10:30:27,041 - INFO - Successfully processed chunk
2025-01-08 10:30:44,232 - INFO - Step 5 result: {'type': 'Program', 'name': 'test_create_store_submission', 'range': [792, 1081], 'children': [{'type': 'FunctionDecl', 'name': 'test_create_store_submission', 'range': [792, 1081], 'children': [{'type': 'Decorator', 'name': '@pytest.mark.asyncio', 'range': [785, 790], 'children': []}, {'type': 'Parameter', 'name': 'mocker', 'range': [796, 796], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [798, 1081], 'children': [{'type': 'VariableDecl', 'name': 'mock_agent', 'range': [804, 847], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [805, 847], 'children': [{'type': 'CallExpression', 'name': 'AgentGraph', 'range': [806, 847], 'children': [{'type': 'Argument', 'name': 'id', 'range': [813, 815], 'children': []}, {'type': 'Argument', 'name': 'version', 'range': [818, 820], 'children': []}, {'type': 'Argument', 'name': 'userId', 'range': [823, 825], 'children': []}, {'type': 'Argument', 'name': 'createdAt', 'range': [828, 834], 'children': []}, {'type': 'Argument', 'name': 'isActive', 'range': [837, 839], 'children': []}, {'type': 'Argument', 'name': 'isTemplate', 'range': [842, 844], 'children': []}]}]}]}, {'type': 'VariableDecl', 'name': 'mock_listing', 'range': [850, 907], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [851, 907], 'children': [{'type': 'CallExpression', 'name': 'StoreListing', 'range': [852, 907], 'children': [{'type': 'Argument', 'name': 'id', 'range': [859, 861], 'children': []}, {'type': 'Argument', 'name': 'createdAt', 'range': [864, 870], 'children': []}, {'type': 'Argument', 'name': 'updatedAt', 'range': [873, 879], 'children': []}, {'type': 'Argument', 'name': 'isDeleted', 'range': [882, 884], 'children': []}, {'type': 'Argument', 'name': 'isApproved', 'range': [887, 889], 'children': []}, {'type': 'Argument', 'name': 'agentId', 'range': [892, 894], 'children': []}, {'type': 'Argument', 'name': 'agentVersion', 'range': [897, 899], 'children': []}, {'type': 'Argument', 'name': 'owningUserId', 'range': [902, 904], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': 'mock_agent_graph', 'range': [915, 938], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [916, 938], 'children': [{'type': 'CallExpression', 'name': 'patch', 'range': [917, 922], 'children': []}, {'type': 'MemberExpression', 'name': 'return_value.find_first', 'range': [924, 937], 'children': [{'type': 'CallExpression', 'name': 'AsyncMock', 'range': [930, 937], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': 'mock_store_listing', 'range': [940, 978], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [941, 978], 'children': [{'type': 'CallExpression', 'name': 'patch', 'range': [942, 947], 'children': []}, {'type': 'MemberExpression', 'name': 'return_value.find_first', 'range': [949, 962], 'children': [{'type': 'CallExpression', 'name': 'AsyncMock', 'range': [955, 962], 'children': []}]}, {'type': 'MemberExpression', 'name': 'return_value.create', 'range': [964, 977], 'children': [{'type': 'CallExpression', 'name': 'AsyncMock', 'range': [970, 977], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': 'result', 'range': [984, 1023], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [985, 1023], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [986, 1023], 'children': [{'type': 'CallExpression', 'name': 'create_store_submission', 'range': [987, 1022], 'children': [{'type': 'Argument', 'name': 'user_id', 'range': [992, 994], 'children': []}, {'type': 'Argument', 'name': 'agent_id', 'range': [997, 999], 'children': []}, {'type': 'Argument', 'name': 'agent_version', 'range': [1002, 1004], 'children': []}, {'type': 'Argument', 'name': 'slug', 'range': [1007, 1009], 'children': []}, {'type': 'Argument', 'name': 'name', 'range': [1012, 1014], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1017, 1019], 'children': []}]}]}]}]}, {'type': 'ExpressionStatement', 'name': 'assert', 'range': [1029, 1036], 'children': [{'type': 'BinaryExpression', 'name': '==', 'range': [1030, 1035], 'children': [{'type': 'MemberExpression', 'name': 'result.name', 'range': [1030, 1032], 'children': []}, {'type': 'Literal', 'name': '"Test Agent"', 'range': [1034, 1035], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'assert', 'range': [1037, 1044], 'children': [{'type': 'BinaryExpression', 'name': '==', 'range': [1038, 1043], 'children': [{'type': 'MemberExpression', 'name': 'result.description', 'range': [1038, 1040], 'children': []}, {'type': 'Literal', 'name': '"Test description"', 'range': [1042, 1043], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'mock_agent_graph.return_value.find_first.assert_called_once', 'range': [1052, 1061], 'children': [{'type': 'CallExpression', 'name': 'assert_called_once', 'range': [1058, 1060], 'children': []}]}, {'type': 'ExpressionStatement', 'name': 'mock_store_listing.return_value.find_first.assert_called_once', 'range': [1062, 1071], 'children': [{'type': 'CallExpression', 'name': 'assert_called_once', 'range': [1068, 1070], 'children': []}]}, {'type': 'ExpressionStatement', 'name': 'mock_store_listing.return_value.create.assert_called_once', 'range': [1072, 1081], 'children': [{'type': 'CallExpression', 'name': 'assert_called_once', 'range': [1078, 1080], 'children': []}]}]}]}]}
2025-01-08 10:30:44,233 - INFO - Completed main AST analysis flow
2025-01-08 10:30:44,234 - INFO - Successfully processed chunk
2025-01-08 10:30:44,497 - INFO - Step 4 result: {'type': 'Program', 'name': 'test_get_user_profile', 'range': [1332, 1505], 'children': [{'type': 'FunctionDecl', 'name': 'test_get_user_profile', 'range': [1332, 1505], 'children': [{'type': 'Decorator', 'name': '@pytest.mark.asyncio', 'range': [1325, 1331], 'children': []}, {'type': 'FunctionSignature', 'name': 'test_get_user_profile', 'range': [1332, 1338], 'children': [{'type': 'Keyword', 'name': 'async', 'range': [1332, 1337], 'children': []}, {'type': 'Keyword', 'name': 'def', 'range': [1333, 1336], 'children': []}, {'type': 'Identifier', 'name': 'test_get_user_profile', 'range': [1334, 1353], 'children': []}, {'type': 'Parameter', 'name': 'mocker', 'range': [1335, 1337], 'children': []}]}, {'type': 'Block', 'name': 'FunctionBody', 'range': [1339, 1505], 'children': [{'type': 'Comment', 'name': '# Mock data', 'range': [1340, 1343], 'children': []}, {'type': 'VariableDecl', 'name': 'mock_profile', 'range': [1344, 1411], 'children': [{'type': 'Assignment', 'name': '=', 'range': [1345, 1346], 'children': []}, {'type': 'NewExpression', 'name': 'Profile', 'range': [1346, 1410], 'children': [{'type': 'Identifier', 'name': 'prisma', 'range': [1346, 1352], 'children': []}, {'type': 'Identifier', 'name': 'models', 'range': [1347, 1353], 'children': []}, {'type': 'Identifier', 'name': 'Profile', 'range': [1348, 1355], 'children': []}, {'type': 'ObjectLiteral', 'name': 'Profile', 'range': [1351, 1410], 'children': [{'type': 'Property', 'name': 'id', 'range': [1353, 1356], 'children': [{'type': 'Literal', 'name': '"profile-id"', 'range': [1355, 1366], 'children': []}]}, {'type': 'Property', 'name': 'name', 'range': [1358, 1361], 'children': [{'type': 'Literal', 'name': '"No Profile Data"', 'range': [1360, 1375], 'children': []}]}, {'type': 'Property', 'name': 'username', 'range': [1363, 1366], 'children': [{'type': 'Literal', 'name': '"testuser"', 'range': [1365, 1375], 'children': []}]}, {'type': 'Property', 'name': 'description', 'range': [1368, 1371], 'children': [{'type': 'Literal', 'name': '"Test description"', 'range': [1370, 1385], 'children': []}]}, {'type': 'Property', 'name': 'links', 'range': [1373, 1380], 'children': [{'type': 'ArrayLiteral', 'name': 'links', 'range': [1375, 1379], 'children': [{'type': 'Literal', 'name': '"link1"', 'range': [1376, 1382], 'children': []}, {'type': 'Literal', 'name': '"link2"', 'range': [1378, 1384], 'children': []}]}]}, {'type': 'Property', 'name': 'avatarUrl', 'range': [1382, 1385], 'children': [{'type': 'Literal', 'name': '"avatar.jpg"', 'range': [1384, 1395], 'children': []}]}, {'type': 'Property', 'name': 'isFeatured', 'range': [1387, 1390], 'children': [{'type': 'Literal', 'name': 'False', 'range': [1389, 1394], 'children': []}]}, {'type': 'Property', 'name': 'createdAt', 'range': [1392, 1399], 'children': [{'type': 'CallExpression', 'name': 'now', 'range': [1394, 1398], 'children': [{'type': 'Identifier', 'name': 'datetime', 'range': [1394, 1402], 'children': []}]}]}, {'type': 'Property', 'name': 'updatedAt', 'range': [1401, 1408], 'children': [{'type': 'CallExpression', 'name': 'now', 'range': [1403, 1407], 'children': [{'type': 'Identifier', 'name': 'datetime', 'range': [1403, 1411], 'children': []}]}]}]}]}]}, {'type': 'Comment', 'name': '# Mock prisma calls', 'range': [1413, 1417], 'children': []}, {'type': 'VariableDecl', 'name': 'mock_profile_db', 'range': [1418, 1443], 'children': [{'type': 'Assignment', 'name': '=', 'range': [1419, 1420], 'children': []}, {'type': 'CallExpression', 'name': 'patch', 'range': [1420, 1426], 'children': [{'type': 'Identifier', 'name': 'mocker', 'range': [1420, 1426], 'children': []}, {'type': 'Literal', 'name': '"prisma.models.Profile.prisma"', 'range': [1424, 1450], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'mock_profile_db.return_value.find_unique = mocker.AsyncMock', 'range': [1427, 1443], 'children': [{'type': 'Assignment', 'name': '=', 'range': [1432, 1433], 'children': []}, {'type': 'CallExpression', 'name': 'AsyncMock', 'range': [1435, 1442], 'children': [{'type': 'Identifier', 'name': 'mocker', 'range': [1435, 1441], 'children': []}, {'type': 'ObjectLiteral', 'name': 'AsyncMock', 'range': [1436, 1442], 'children': [{'type': 'Property', 'name': 'return_value', 'range': [1438, 1441], 'children': [{'type': 'Identifier', 'name': 'mock_profile', 'range': [1440, 1452], 'children': []}]}]}]}]}, {'type': 'Comment', 'name': '# Call function', 'range': [1445, 1448], 'children': []}, {'type': 'VariableDecl', 'name': 'result', 'range': [1449, 1458], 'children': [{'type': 'Assignment', 'name': '=', 'range': [1450, 1451], 'children': []}, {'type': 'AwaitExpression', 'name': 'await db.get_user_profile', 'range': [1451, 1458], 'children': [{'type': 'CallExpression', 'name': 'get_user_profile', 'range': [1454, 1457], 'children': [{'type': 'Identifier', 'name': 'db', 'range': [1452, 1454], 'children': []}, {'type': 'Literal', 'name': '"user-id"', 'range': [1456, 1464], 'children': []}]}]}]}, {'type': 'Comment', 'name': '# Verify results', 'range': [1460, 1463], 'children': []}, {'type': 'ExpressionStatement', 'name': 'assert result.name == "No Profile Data"', 'range': [1464, 1471], 'children': [{'type': 'BinaryExpression', 'name': '==', 'range': [1468, 1470], 'children': [{'type': 'MemberExpression', 'name': 'result.name', 'range': [1465, 1468], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [1465, 1471], 'children': []}]}, {'type': 'Literal', 'name': '"No Profile Data"', 'range': [1469, 1485], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'assert result.username == "No Profile Data"', 'range': [1472, 1479], 'children': [{'type': 'BinaryExpression', 'name': '==', 'range': [1476, 1478], 'children': [{'type': 'MemberExpression', 'name': 'result.username', 'range': [1473, 1476], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [1473, 1479], 'children': []}]}, {'type': 'Literal', 'name': '"No Profile Data"', 'range': [1477, 1493], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'assert result.description == "No Profile Data"', 'range': [1480, 1487], 'children': [{'type': 'BinaryExpression', 'name': '==', 'range': [1484, 1486], 'children': [{'type': 'MemberExpression', 'name': 'result.description', 'range': [1481, 1484], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [1481, 1487], 'children': []}]}, {'type': 'Literal', 'name': '"No Profile Data"', 'range': [1485, 1501], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'assert result.links == []', 'range': [1488, 1496], 'children': [{'type': 'BinaryExpression', 'name': '==', 'range': [1492, 1494], 'children': [{'type': 'MemberExpression', 'name': 'result.links', 'range': [1489, 1492], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [1489, 1495], 'children': []}]}, {'type': 'ArrayLiteral', 'name': '[]', 'range': [1493, 1495], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'assert result.avatar_url == ""', 'range': [1497, 1504], 'children': [{'type': 'BinaryExpression', 'name': '==', 'range': [1501, 1503], 'children': [{'type': 'MemberExpression', 'name': 'result.avatar_url', 'range': [1498, 1501], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [1498, 1504], 'children': []}]}, {'type': 'Literal', 'name': '""', 'range': [1502, 1504], 'children': []}]}]}]}]}]}
2025-01-08 10:30:44,497 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:31:09,397 - INFO - Step 3 result: {'type': 'Program', 'name': 'test_get_store_agent_details', 'range': [357, 569], 'children': [{'type': 'FunctionDeclaration', 'name': 'test_get_store_agent_details', 'range': [357, 569], 'children': [{'type': 'Decorator', 'name': '@pytest.mark.asyncio', 'range': [350, 356], 'children': []}, {'type': 'FunctionSignature', 'name': 'test_get_store_agent_details', 'range': [357, 363], 'children': [{'type': 'Keyword', 'name': 'async', 'range': [357, 362], 'children': []}, {'type': 'Keyword', 'name': 'def', 'range': [358, 361], 'children': []}, {'type': 'Identifier', 'name': 'test_get_store_agent_details', 'range': [359, 362], 'children': []}, {'type': 'Identifier', 'name': 'mocker', 'range': [361, 362], 'children': []}]}, {'type': 'FunctionBody', 'name': '', 'range': [364, 569], 'children': [{'type': 'Comment', 'name': '# Mock data', 'range': [365, 368], 'children': []}, {'type': 'VariableDeclaration', 'name': 'mock_agent', 'range': [369, 470], 'children': [{'type': 'Identifier', 'name': 'mock_agent', 'range': [369, 370], 'children': []}, {'type': 'NewExpression', 'name': 'StoreAgent', 'range': [371, 470], 'children': [{'type': 'Identifier', 'name': 'prisma', 'range': [371, 372], 'children': []}, {'type': 'Identifier', 'name': 'models', 'range': [373, 374], 'children': []}, {'type': 'Identifier', 'name': 'StoreAgent', 'range': [375, 376], 'children': []}, {'type': 'ObjectExpression', 'name': '', 'range': [377, 470], 'children': [{'type': 'Property', 'name': 'listing_id', 'range': [378, 381], 'children': [{'type': 'Identifier', 'name': 'listing_id', 'range': [378, 379], 'children': []}, {'type': 'StringLiteral', 'name': '"test-id"', 'range': [380, 381], 'children': []}]}, {'type': 'Property', 'name': 'storeListingVersionId', 'range': [383, 386], 'children': [{'type': 'Identifier', 'name': 'storeListingVersionId', 'range': [383, 384], 'children': []}, {'type': 'StringLiteral', 'name': '"version123"', 'range': [385, 386], 'children': []}]}, {'type': 'Property', 'name': 'slug', 'range': [388, 391], 'children': [{'type': 'Identifier', 'name': 'slug', 'range': [388, 389], 'children': []}, {'type': 'StringLiteral', 'name': '"test-agent"', 'range': [390, 391], 'children': []}]}, {'type': 'Property', 'name': 'agent_name', 'range': [393, 396], 'children': [{'type': 'Identifier', 'name': 'agent_name', 'range': [393, 394], 'children': []}, {'type': 'StringLiteral', 'name': '"Test Agent"', 'range': [395, 396], 'children': []}]}, {'type': 'Property', 'name': 'agent_video', 'range': [398, 401], 'children': [{'type': 'Identifier', 'name': 'agent_video', 'range': [398, 399], 'children': []}, {'type': 'StringLiteral', 'name': '"video.mp4"', 'range': [400, 401], 'children': []}]}, {'type': 'Property', 'name': 'agent_image', 'range': [403, 408], 'children': [{'type': 'Identifier', 'name': 'agent_image', 'range': [403, 404], 'children': []}, {'type': 'ArrayExpression', 'name': '', 'range': [405, 408], 'children': [{'type': 'StringLiteral', 'name': '"image.jpg"', 'range': [406, 407], 'children': []}]}]}, {'type': 'Property', 'name': 'featured', 'range': [410, 413], 'children': [{'type': 'Identifier', 'name': 'featured', 'range': [410, 411], 'children': []}, {'type': 'BooleanLiteral', 'name': 'False', 'range': [412, 413], 'children': []}]}, {'type': 'Property', 'name': 'creator_username', 'range': [415, 418], 'children': [{'type': 'Identifier', 'name': 'creator_username', 'range': [415, 416], 'children': []}, {'type': 'StringLiteral', 'name': '"creator"', 'range': [417, 418], 'children': []}]}, {'type': 'Property', 'name': 'creator_avatar', 'range': [420, 423], 'children': [{'type': 'Identifier', 'name': 'creator_avatar', 'range': [420, 421], 'children': []}, {'type': 'StringLiteral', 'name': '"avatar.jpg"', 'range': [422, 423], 'children': []}]}, {'type': 'Property', 'name': 'sub_heading', 'range': [425, 428], 'children': [{'type': 'Identifier', 'name': 'sub_heading', 'range': [425, 426], 'children': []}, {'type': 'StringLiteral', 'name': '"Test heading"', 'range': [427, 428], 'children': []}]}, {'type': 'Property', 'name': 'description', 'range': [430, 433], 'children': [{'type': 'Identifier', 'name': 'description', 'range': [430, 431], 'children': []}, {'type': 'StringLiteral', 'name': '"Test description"', 'range': [432, 433], 'children': []}]}, {'type': 'Property', 'name': 'categories', 'range': [435, 440], 'children': [{'type': 'Identifier', 'name': 'categories', 'range': [435, 436], 'children': []}, {'type': 'ArrayExpression', 'name': '', 'range': [437, 440], 'children': [{'type': 'StringLiteral', 'name': '"test"', 'range': [438, 439], 'children': []}]}]}, {'type': 'Property', 'name': 'runs', 'range': [442, 445], 'children': [{'type': 'Identifier', 'name': 'runs', 'range': [442, 443], 'children': []}, {'type': 'NumericLiteral', 'name': '10', 'range': [444, 445], 'children': []}]}, {'type': 'Property', 'name': 'rating', 'range': [447, 452], 'children': [{'type': 'Identifier', 'name': 'rating', 'range': [447, 448], 'children': []}, {'type': 'NumericLiteral', 'name': '4.5', 'range': [449, 452], 'children': []}]}, {'type': 'Property', 'name': 'versions', 'range': [454, 459], 'children': [{'type': 'Identifier', 'name': 'versions', 'range': [454, 455], 'children': []}, {'type': 'ArrayExpression', 'name': '', 'range': [456, 459], 'children': [{'type': 'StringLiteral', 'name': '"1.0"', 'range': [457, 458], 'children': []}]}]}, {'type': 'Property', 'name': 'updated_at', 'range': [461, 468], 'children': [{'type': 'Identifier', 'name': 'updated_at', 'range': [461, 462], 'children': []}, {'type': 'CallExpression', 'name': 'datetime.now', 'range': [463, 468], 'children': [{'type': 'Identifier', 'name': 'datetime', 'range': [463, 464], 'children': []}, {'type': 'Identifier', 'name': 'now', 'range': [465, 466], 'children': []}]}]}]}]}]}, {'type': 'Comment', 'name': '# Mock prisma call', 'range': [473, 477], 'children': []}, {'type': 'VariableDeclaration', 'name': 'mock_store_agent', 'range': [478, 500], 'children': [{'type': 'Identifier', 'name': 'mock_store_agent', 'range': [478, 479], 'children': []}, {'type': 'CallExpression', 'name': 'mocker.patch', 'range': [480, 500], 'children': [{'type': 'Identifier', 'name': 'mocker', 'range': [480, 481], 'children': []}, {'type': 'Identifier', 'name': 'patch', 'range': [482, 483], 'children': []}, {'type': 'StringLiteral', 'name': '"prisma.models.StoreAgent.prisma"', 'range': [484, 485], 'children': []}]}, {'type': 'Identifier', 'name': 'return_value', 'range': [487, 488], 'children': []}, {'type': 'Identifier', 'name': 'find_first', 'range': [489, 490], 'children': []}, {'type': 'CallExpression', 'name': 'mocker.AsyncMock', 'range': [491, 500], 'children': [{'type': 'Identifier', 'name': 'mocker', 'range': [491, 492], 'children': []}, {'type': 'Identifier', 'name': 'AsyncMock', 'range': [493, 494], 'children': []}, {'type': 'Identifier', 'name': 'return_value', 'range': [495, 496], 'children': []}, {'type': 'Identifier', 'name': 'mock_agent', 'range': [497, 498], 'children': []}]}]}, {'type': 'Comment', 'name': '# Call function', 'range': [503, 506], 'children': []}, {'type': 'VariableDeclaration', 'name': 'result', 'range': [507, 518], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [507, 508], 'children': []}, {'type': 'AwaitExpression', 'name': 'await db.get_store_agent_details', 'range': [509, 518], 'children': [{'type': 'Keyword', 'name': 'await', 'range': [509, 510], 'children': []}, {'type': 'Identifier', 'name': 'db', 'range': [510, 511], 'children': []}, {'type': 'Identifier', 'name': 'get_store_agent_details', 'range': [512, 513], 'children': []}, {'type': 'StringLiteral', 'name': '"creator"', 'range': [514, 515], 'children': []}, {'type': 'StringLiteral', 'name': '"test-agent"', 'range': [516, 517], 'children': []}]}]}, {'type': 'Comment', 'name': '# Verify results', 'range': [520, 523], 'children': []}, {'type': 'AssertStatement', 'name': 'assert result.slug == "test-agent"', 'range': [524, 531], 'children': [{'type': 'Keyword', 'name': 'assert', 'range': [524, 525], 'children': []}, {'type': 'Identifier', 'name': 'result', 'range': [525, 526], 'children': []}, {'type': 'Identifier', 'name': 'slug', 'range': [527, 528], 'children': []}, {'type': 'StringLiteral', 'name': '"test-agent"', 'range': [530, 531], 'children': []}]}, {'type': 'AssertStatement', 'name': 'assert result.agent_name == "Test Agent"', 'range': [532, 539], 'children': [{'type': 'Keyword', 'name': 'assert', 'range': [532, 533], 'children': []}, {'type': 'Identifier', 'name': 'result', 'range': [533, 534], 'children': []}, {'type': 'Identifier', 'name': 'agent_name', 'range': [535, 536], 'children': []}, {'type': 'StringLiteral', 'name': '"Test Agent"', 'range': [538, 539], 'children': []}]}, {'type': 'Comment', 'name': '# Verify mock called correctly', 'range': [541, 546], 'children': []}, {'type': 'ExpressionStatement', 'name': 'mock_store_agent.return_value.find_first.assert_called_once_with', 'range': [547, 569], 'children': [{'type': 'Identifier', 'name': 'mock_store_agent', 'range': [547, 548], 'children': []}, {'type': 'Identifier', 'name': 'return_value', 'range': [549, 550], 'children': []}, {'type': 'Identifier', 'name': 'find_first', 'range': [551, 552], 'children': []}, {'type': 'Identifier', 'name': 'assert_called_once_with', 'range': [553, 554], 'children': []}, {'type': 'ObjectExpression', 'name': '', 'range': [555, 568], 'children': [{'type': 'Property', 'name': 'where', 'range': [556, 567], 'children': [{'type': 'Identifier', 'name': 'where', 'range': [556, 557], 'children': []}, {'type': 'ObjectExpression', 'name': '', 'range': [558, 567], 'children': [{'type': 'Property', 'name': 'creator_username', 'range': [559, 562], 'children': [{'type': 'StringLiteral', 'name': '"creator_username"', 'range': [559, 560], 'children': []}, {'type': 'StringLiteral', 'name': '"creator"', 'range': [561, 562], 'children': []}]}, {'type': 'Property', 'name': 'slug', 'range': [563, 566], 'children': [{'type': 'StringLiteral', 'name': '"slug"', 'range': [563, 564], 'children': []}, {'type': 'StringLiteral', 'name': '"test-agent"', 'range': [565, 566], 'children': []}]}]}]}]}]}]}]}]}
2025-01-08 10:31:09,398 - INFO - Starting Step 4: AST normalization
2025-01-08 10:31:13,911 - INFO - Step 3 result: {'type': 'Program', 'name': 'test_get_store_creator_details', 'range': [578, 783], 'children': [{'type': 'FunctionDeclaration', 'name': 'test_get_store_creator_details', 'range': [578, 783], 'children': [{'type': 'FunctionSignature', 'name': 'test_get_store_creator_details', 'range': [578, 584], 'children': [{'type': 'Keyword', 'name': 'async', 'range': [578, 583]}, {'type': 'Keyword', 'name': 'def', 'range': [579, 582]}, {'type': 'Identifier', 'name': 'test_get_store_creator_details', 'range': [580, 611]}, {'type': 'Identifier', 'name': 'mocker', 'range': [582, 588]}]}, {'type': 'Block', 'name': 'Block', 'range': [585, 783], 'children': [{'type': 'Comment', 'name': '# Mock data', 'range': [586, 589]}, {'type': 'VariableDeclaration', 'name': 'mock_creator_data', 'range': [590, 655], 'children': [{'type': 'Identifier', 'name': 'mock_creator_data', 'range': [590, 606]}, {'type': 'NewExpression', 'name': 'Creator', 'range': [592, 655], 'children': [{'type': 'Identifier', 'name': 'prisma', 'range': [592, 598]}, {'type': 'Identifier', 'name': 'models', 'range': [594, 600]}, {'type': 'Identifier', 'name': 'Creator', 'range': [596, 602]}, {'type': 'ObjectExpression', 'name': 'ObjectExpression', 'range': [598, 655], 'children': [{'type': 'Property', 'name': 'name', 'range': [599, 601], 'children': [{'type': 'Identifier', 'name': 'name', 'range': [599, 603]}, {'type': 'Literal', 'name': '"Test Creator"', 'range': [601, 613]}]}, {'type': 'Property', 'name': 'username', 'range': [604, 606], 'children': [{'type': 'Identifier', 'name': 'username', 'range': [604, 612]}, {'type': 'Literal', 'name': '"creator"', 'range': [606, 614]}]}, {'type': 'Property', 'name': 'description', 'range': [609, 611], 'children': [{'type': 'Identifier', 'name': 'description', 'range': [609, 619]}, {'type': 'Literal', 'name': '"Test description"', 'range': [611, 625]}]}, {'type': 'Property', 'name': 'links', 'range': [614, 616], 'children': [{'type': 'Identifier', 'name': 'links', 'range': [614, 619]}, {'type': 'ArrayExpression', 'name': 'ArrayExpression', 'range': [616, 618], 'children': [{'type': 'Literal', 'name': '"link1"', 'range': [617, 623]}]}]}, {'type': 'Property', 'name': 'avatar_url', 'range': [621, 623], 'children': [{'type': 'Identifier', 'name': 'avatar_url', 'range': [621, 631]}, {'type': 'Literal', 'name': '"avatar.jpg"', 'range': [623, 635]}]}, {'type': 'Property', 'name': 'num_agents', 'range': [626, 628], 'children': [{'type': 'Identifier', 'name': 'num_agents', 'range': [626, 636]}, {'type': 'Literal', 'name': '1', 'range': [628, 629]}]}, {'type': 'Property', 'name': 'agent_rating', 'range': [631, 633], 'children': [{'type': 'Identifier', 'name': 'agent_rating', 'range': [631, 643]}, {'type': 'Literal', 'name': '4.5', 'range': [633, 636]}]}, {'type': 'Property', 'name': 'agent_runs', 'range': [638, 640], 'children': [{'type': 'Identifier', 'name': 'agent_runs', 'range': [638, 648]}, {'type': 'Literal', 'name': '10', 'range': [640, 642]}]}, {'type': 'Property', 'name': 'top_categories', 'range': [643, 645], 'children': [{'type': 'Identifier', 'name': 'top_categories', 'range': [643, 657]}, {'type': 'ArrayExpression', 'name': 'ArrayExpression', 'range': [645, 647], 'children': [{'type': 'Literal', 'name': '"test"', 'range': [646, 652]}]}]}, {'type': 'Property', 'name': 'is_featured', 'range': [650, 652], 'children': [{'type': 'Identifier', 'name': 'is_featured', 'range': [650, 661]}, {'type': 'Literal', 'name': 'False', 'range': [652, 657]}]}]}]}]}, {'type': 'Comment', 'name': '# Mock prisma call', 'range': [658, 662]}, {'type': 'VariableDeclaration', 'name': 'mock_creator', 'range': [663, 683], 'children': [{'type': 'Identifier', 'name': 'mock_creator', 'range': [663, 675]}, {'type': 'CallExpression', 'name': 'patch', 'range': [665, 683], 'children': [{'type': 'Identifier', 'name': 'mocker', 'range': [665, 671]}, {'type': 'Identifier', 'name': 'patch', 'range': [667, 672]}, {'type': 'Literal', 'name': '"prisma.models.Creator.prisma"', 'range': [669, 701]}]}]}, {'type': 'ExpressionStatement', 'name': 'ExpressionStatement', 'range': [672, 683], 'children': [{'type': 'AssignmentExpression', 'name': 'AssignmentExpression', 'range': [672, 683], 'children': [{'type': 'MemberExpression', 'name': 'MemberExpression', 'range': [672, 680], 'children': [{'type': 'Identifier', 'name': 'mock_creator', 'range': [672, 684]}, {'type': 'Identifier', 'name': 'return_value', 'range': [674, 686]}, {'type': 'Identifier', 'name': 'find_unique', 'range': [676, 687]}]}, {'type': 'CallExpression', 'name': 'AsyncMock', 'range': [678, 683], 'children': [{'type': 'Identifier', 'name': 'mocker', 'range': [678, 684]}, {'type': 'Identifier', 'name': 'AsyncMock', 'range': [680, 689]}]}]}]}, {'type': 'Comment', 'name': '# Configure the mock to return values that will pass validation', 'range': [684, 695]}, {'type': 'ExpressionStatement', 'name': 'ExpressionStatement', 'range': [696, 705], 'children': [{'type': 'AssignmentExpression', 'name': 'AssignmentExpression', 'range': [696, 705], 'children': [{'type': 'MemberExpression', 'name': 'MemberExpression', 'range': [696, 703], 'children': [{'type': 'Identifier', 'name': 'mock_creator', 'range': [696, 708]}, {'type': 'Identifier', 'name': 'return_value', 'range': [698, 710]}, {'type': 'Identifier', 'name': 'find_unique', 'range': [700, 711]}, {'type': 'Identifier', 'name': 'return_value', 'range': [702, 714]}]}, {'type': 'Identifier', 'name': 'mock_creator_data', 'range': [704, 720]}]}]}, {'type': 'Comment', 'name': '# Call function', 'range': [706, 710]}, {'type': 'ExpressionStatement', 'name': 'ExpressionStatement', 'range': [711, 720], 'children': [{'type': 'AssignmentExpression', 'name': 'AssignmentExpression', 'range': [711, 720], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [711, 717]}, {'type': 'AwaitExpression', 'name': 'AwaitExpression', 'range': [713, 720], 'children': [{'type': 'CallExpression', 'name': 'get_store_creator_details', 'range': [714, 720], 'children': [{'type': 'Identifier', 'name': 'db', 'range': [714, 716]}, {'type': 'Identifier', 'name': 'get_store_creator_details', 'range': [716, 740]}, {'type': 'Literal', 'name': '"creator"', 'range': [718, 726]}]}]}]}]}, {'type': 'Comment', 'name': '# Verify results', 'range': [721, 725]}, {'type': 'ExpressionStatement', 'name': 'ExpressionStatement', 'range': [726, 733], 'children': [{'type': 'CallExpression', 'name': 'assert', 'range': [726, 733], 'children': [{'type': 'Identifier', 'name': 'assert', 'range': [726, 732]}, {'type': 'BinaryExpression', 'name': 'BinaryExpression', 'range': [727, 733], 'children': [{'type': 'MemberExpression', 'name': 'MemberExpression', 'range': [727, 731], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [727, 733]}, {'type': 'Identifier', 'name': 'username', 'range': [729, 737]}]}, {'type': 'Literal', 'name': '"creator"', 'range': [732, 740]}]}]}]}, {'type': 'ExpressionStatement', 'name': 'ExpressionStatement', 'range': [734, 741], 'children': [{'type': 'CallExpression', 'name': 'assert', 'range': [734, 741], 'children': [{'type': 'Identifier', 'name': 'assert', 'range': [734, 740]}, {'type': 'BinaryExpression', 'name': 'BinaryExpression', 'range': [735, 741], 'children': [{'type': 'MemberExpression', 'name': 'MemberExpression', 'range': [735, 739], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [735, 741]}, {'type': 'Identifier', 'name': 'name', 'range': [737, 741]}]}, {'type': 'Literal', 'name': '"Test Creator"', 'range': [740, 754]}]}]}]}, {'type': 'ExpressionStatement', 'name': 'ExpressionStatement', 'range': [742, 749], 'children': [{'type': 'CallExpression', 'name': 'assert', 'range': [742, 749], 'children': [{'type': 'Identifier', 'name': 'assert', 'range': [742, 748]}, {'type': 'BinaryExpression', 'name': 'BinaryExpression', 'range': [743, 749], 'children': [{'type': 'MemberExpression', 'name': 'MemberExpression', 'range': [743, 747], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [743, 749]}, {'type': 'Identifier', 'name': 'description', 'range': [745, 755]}]}, {'type': 'Literal', 'name': '"Test description"', 'range': [748, 766]}]}]}]}, {'type': 'ExpressionStatement', 'name': 'ExpressionStatement', 'range': [750, 757], 'children': [{'type': 'CallExpression', 'name': 'assert', 'range': [750, 757], 'children': [{'type': 'Identifier', 'name': 'assert', 'range': [750, 756]}, {'type': 'BinaryExpression', 'name': 'BinaryExpression', 'range': [751, 757], 'children': [{'type': 'MemberExpression', 'name': 'MemberExpression', 'range': [751, 755], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [751, 757]}, {'type': 'Identifier', 'name': 'avatar_url', 'range': [753, 763]}]}, {'type': 'Literal', 'name': '"avatar.jpg"', 'range': [756, 768]}]}]}]}, {'type': 'Comment', 'name': '# Verify mock called correctly', 'range': [758, 764]}, {'type': 'ExpressionStatement', 'name': 'ExpressionStatement', 'range': [765, 783], 'children': [{'type': 'CallExpression', 'name': 'assert_called_once_with', 'range': [765, 783], 'children': [{'type': 'MemberExpression', 'name': 'MemberExpression', 'range': [765, 772], 'children': [{'type': 'Identifier', 'name': 'mock_creator', 'range': [765, 777]}, {'type': 'Identifier', 'name': 'return_value', 'range': [767, 779]}, {'type': 'Identifier', 'name': 'find_unique', 'range': [769, 780]}, {'type': 'Identifier', 'name': 'assert_called_once_with', 'range': [771, 793]}]}, {'type': 'ObjectExpression', 'name': 'ObjectExpression', 'range': [773, 781], 'children': [{'type': 'Property', 'name': 'where', 'range': [774, 776], 'children': [{'type': 'Identifier', 'name': 'where', 'range': [774, 778]}, {'type': 'ObjectExpression', 'name': 'ObjectExpression', 'range': [776, 780], 'children': [{'type': 'Property', 'name': 'username', 'range': [777, 779], 'children': [{'type': 'Literal', 'name': '"username"', 'range': [777, 787]}, {'type': 'Literal', 'name': '"creator"', 'range': [779, 787]}]}]}]}]}]}]}]}]}]}
2025-01-08 10:31:13,911 - INFO - Starting Step 4: AST normalization
2025-01-08 10:31:13,926 - INFO - Step 4 result: {'type': 'Program', 'name': 'test_update_profile', 'range': [1090, 1323], 'children': [{'type': 'FunctionDecl', 'name': 'test_update_profile', 'range': [1090, 1323], 'children': [{'type': 'Decorator', 'name': '@pytest.mark.asyncio', 'range': [1083, 1089], 'children': []}, {'type': 'FunctionSignature', 'name': 'test_update_profile', 'range': [1090, 1096], 'children': [{'type': 'Keyword', 'name': 'async', 'range': [1090, 1095], 'children': []}, {'type': 'Keyword', 'name': 'def', 'range': [1091, 1094], 'children': []}, {'type': 'Identifier', 'name': 'test_update_profile', 'range': [1092, 1109], 'children': []}, {'type': 'Parameter', 'name': 'mocker', 'range': [1094, 1095], 'children': []}]}, {'type': 'Block', 'name': 'FunctionBody', 'range': [1097, 1323], 'children': [{'type': 'Comment', 'name': '# Mock data', 'range': [1098, 1101], 'children': []}, {'type': 'VariableDecl', 'name': 'mock_profile', 'range': [1102, 1167], 'children': [{'type': 'Assignment', 'name': '=', 'range': [1103, 1104], 'children': []}, {'type': 'ObjectCreation', 'name': 'Profile', 'range': [1104, 1166], 'children': [{'type': 'Identifier', 'name': 'prisma', 'range': [1104, 1110], 'children': []}, {'type': 'Identifier', 'name': 'models', 'range': [1105, 1111], 'children': []}, {'type': 'Identifier', 'name': 'Profile', 'range': [1106, 1112], 'children': []}, {'type': 'ObjectProperties', 'name': 'ProfileProperties', 'range': [1109, 1165], 'children': [{'type': 'Property', 'name': 'id', 'range': [1111, 1114], 'children': []}, {'type': 'Property', 'name': 'name', 'range': [1116, 1119], 'children': []}, {'type': 'Property', 'name': 'username', 'range': [1121, 1124], 'children': []}, {'type': 'Property', 'name': 'description', 'range': [1126, 1129], 'children': []}, {'type': 'Property', 'name': 'links', 'range': [1131, 1136], 'children': []}, {'type': 'Property', 'name': 'avatarUrl', 'range': [1138, 1141], 'children': []}, {'type': 'Property', 'name': 'isFeatured', 'range': [1143, 1146], 'children': []}, {'type': 'Property', 'name': 'createdAt', 'range': [1148, 1155], 'children': []}, {'type': 'Property', 'name': 'updatedAt', 'range': [1157, 1164], 'children': []}]}]}]}, {'type': 'Comment', 'name': '# Mock prisma calls', 'range': [1169, 1173], 'children': []}, {'type': 'VariableDecl', 'name': 'mock_profile_db', 'range': [1174, 1214], 'children': [{'type': 'Assignment', 'name': '=', 'range': [1175, 1176], 'children': []}, {'type': 'CallExpression', 'name': 'mocker.patch', 'range': [1176, 1182], 'children': [{'type': 'Identifier', 'name': 'mocker', 'range': [1176, 1182], 'children': []}, {'type': 'Identifier', 'name': 'patch', 'range': [1177, 1182], 'children': []}, {'type': 'Literal', 'name': '"prisma.models.Profile.prisma"', 'range': [1180, 1181], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'mock_profile_db.return_value.find_first = mocker.AsyncMock', 'range': [1183, 1199], 'children': [{'type': 'Assignment', 'name': '=', 'range': [1188, 1189], 'children': []}, {'type': 'CallExpression', 'name': 'mocker.AsyncMock', 'range': [1189, 1198], 'children': [{'type': 'Identifier', 'name': 'mocker', 'range': [1189, 1195], 'children': []}, {'type': 'Identifier', 'name': 'AsyncMock', 'range': [1191, 1198], 'children': []}, {'type': 'ObjectProperties', 'name': 'AsyncMockProperties', 'range': [1193, 1197], 'children': [{'type': 'Property', 'name': 'return_value', 'range': [1194, 1197], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': 'mock_profile_db.return_value.update = mocker.AsyncMock', 'range': [1200, 1214], 'children': [{'type': 'Assignment', 'name': '=', 'range': [1205, 1206], 'children': []}, {'type': 'CallExpression', 'name': 'mocker.AsyncMock', 'range': [1206, 1213], 'children': [{'type': 'Identifier', 'name': 'mocker', 'range': [1206, 1212], 'children': []}, {'type': 'Identifier', 'name': 'AsyncMock', 'range': [1208, 1213], 'children': []}, {'type': 'ObjectProperties', 'name': 'AsyncMockProperties', 'range': [1210, 1212], 'children': [{'type': 'Property', 'name': 'return_value', 'range': [1211, 1212], 'children': []}]}]}]}, {'type': 'Comment', 'name': '# Test data', 'range': [1216, 1219], 'children': []}, {'type': 'VariableDecl', 'name': 'profile', 'range': [1220, 1258], 'children': [{'type': 'Assignment', 'name': '=', 'range': [1221, 1222], 'children': []}, {'type': 'ObjectCreation', 'name': 'Profile', 'range': [1222, 1257], 'children': [{'type': 'Identifier', 'name': 'Profile', 'range': [1222, 1228], 'children': []}, {'type': 'ObjectProperties', 'name': 'ProfileProperties', 'range': [1223, 1256], 'children': [{'type': 'Property', 'name': 'name', 'range': [1225, 1228], 'children': []}, {'type': 'Property', 'name': 'username', 'range': [1230, 1233], 'children': []}, {'type': 'Property', 'name': 'description', 'range': [1235, 1238], 'children': []}, {'type': 'Property', 'name': 'links', 'range': [1240, 1245], 'children': []}, {'type': 'Property', 'name': 'avatar_url', 'range': [1247, 1250], 'children': []}, {'type': 'Property', 'name': 'is_featured', 'range': [1252, 1255], 'children': []}]}]}]}, {'type': 'Comment', 'name': '# Call function', 'range': [1260, 1263], 'children': []}, {'type': 'ExpressionStatement', 'name': 'result = await db.update_or_create_profile', 'range': [1264, 1275], 'children': [{'type': 'Assignment', 'name': '=', 'range': [1265, 1266], 'children': []}, {'type': 'AwaitExpression', 'name': 'await', 'range': [1266, 1271], 'children': [{'type': 'CallExpression', 'name': 'db.update_or_create_profile', 'range': [1267, 1274], 'children': [{'type': 'Identifier', 'name': 'db', 'range': [1267, 1269], 'children': []}, {'type': 'Identifier', 'name': 'update_or_create_profile', 'range': [1269, 1274], 'children': []}, {'type': 'Arguments', 'name': 'FunctionArguments', 'range': [1270, 1273], 'children': [{'type': 'Literal', 'name': '"user-id"', 'range': [1271, 1272], 'children': []}, {'type': 'Identifier', 'name': 'profile', 'range': [1273, 1274], 'children': []}]}]}]}]}, {'type': 'Comment', 'name': '# Verify results', 'range': [1277, 1280], 'children': []}, {'type': 'ExpressionStatement', 'name': 'assert result.username == "creator"', 'range': [1281, 1288], 'children': [{'type': 'AssertStatement', 'name': 'assert', 'range': [1281, 1287], 'children': [{'type': 'BinaryExpression', 'name': '==', 'range': [1285, 1286], 'children': [{'type': 'MemberExpression', 'name': 'result.username', 'range': [1282, 1285], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [1282, 1283], 'children': []}, {'type': 'Identifier', 'name': 'username', 'range': [1283, 1285], 'children': []}]}, {'type': 'Literal', 'name': '"creator"', 'range': [1286, 1287], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': 'assert result.name == "Test Creator"', 'range': [1289, 1296], 'children': [{'type': 'AssertStatement', 'name': 'assert', 'range': [1289, 1295], 'children': [{'type': 'BinaryExpression', 'name': '==', 'range': [1293, 1294], 'children': [{'type': 'MemberExpression', 'name': 'result.name', 'range': [1290, 1293], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [1290, 1291], 'children': []}, {'type': 'Identifier', 'name': 'name', 'range': [1291, 1293], 'children': []}]}, {'type': 'Literal', 'name': '"Test Creator"', 'range': [1294, 1295], 'children': []}]}]}]}, {'type': 'Comment', 'name': '# Verify mocks called correctly', 'range': [1298, 1303], 'children': []}, {'type': 'ExpressionStatement', 'name': 'mock_profile_db.return_value.find_first.assert_called_once', 'range': [1304, 1313], 'children': [{'type': 'CallExpression', 'name': 'assert_called_once', 'range': [1310, 1312], 'children': [{'type': 'MemberExpression', 'name': 'mock_profile_db.return_value.find_first', 'range': [1304, 1309], 'children': [{'type': 'Identifier', 'name': 'mock_profile_db', 'range': [1304, 1305], 'children': []}, {'type': 'Identifier', 'name': 'return_value', 'range': [1305, 1307], 'children': []}, {'type': 'Identifier', 'name': 'find_first', 'range': [1307, 1309], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': 'mock_profile_db.return_value.update.assert_called_once', 'range': [1314, 1323], 'children': [{'type': 'CallExpression', 'name': 'assert_called_once', 'range': [1320, 1322], 'children': [{'type': 'MemberExpression', 'name': 'mock_profile_db.return_value.update', 'range': [1314, 1319], 'children': [{'type': 'Identifier', 'name': 'mock_profile_db', 'range': [1314, 1315], 'children': []}, {'type': 'Identifier', 'name': 'return_value', 'range': [1315, 1317], 'children': []}, {'type': 'Identifier', 'name': 'update', 'range': [1317, 1319], 'children': []}]}]}]}]}]}]}
2025-01-08 10:31:13,926 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:31:42,615 - INFO - Step 5 result: {'type': 'Program', 'name': 'test_get_user_profile', 'range': [1332, 1505], 'children': [{'type': 'FunctionDecl', 'name': 'test_get_user_profile', 'range': [1332, 1505], 'children': [{'type': 'Decorator', 'name': '@pytest.mark.asyncio', 'range': [1325, 1331], 'children': []}, {'type': 'FunctionSignature', 'name': 'test_get_user_profile', 'range': [1332, 1338], 'children': [{'type': 'Keyword', 'name': 'async', 'range': [1332, 1337], 'children': []}, {'type': 'Keyword', 'name': 'def', 'range': [1333, 1336], 'children': []}, {'type': 'Identifier', 'name': 'test_get_user_profile', 'range': [1334, 1353], 'children': []}, {'type': 'Parameter', 'name': 'mocker', 'range': [1335, 1337], 'children': []}]}, {'type': 'Block', 'name': 'FunctionBody', 'range': [1339, 1505], 'children': [{'type': 'Comment', 'name': '# Mock data', 'range': [1340, 1343], 'children': []}, {'type': 'VariableDecl', 'name': 'mock_profile', 'range': [1344, 1411], 'children': [{'type': 'Assignment', 'name': '=', 'range': [1345, 1346], 'children': []}, {'type': 'NewExpression', 'name': 'Profile', 'range': [1346, 1410], 'children': [{'type': 'Identifier', 'name': 'prisma', 'range': [1346, 1352], 'children': []}, {'type': 'Identifier', 'name': 'models', 'range': [1347, 1353], 'children': []}, {'type': 'Identifier', 'name': 'Profile', 'range': [1348, 1355], 'children': []}, {'type': 'ObjectLiteral', 'name': 'Profile', 'range': [1351, 1410], 'children': [{'type': 'Property', 'name': 'id', 'range': [1353, 1356], 'children': [{'type': 'Literal', 'name': '"profile-id"', 'range': [1355, 1366], 'children': []}]}, {'type': 'Property', 'name': 'name', 'range': [1358, 1361], 'children': [{'type': 'Literal', 'name': '"No Profile Data"', 'range': [1360, 1375], 'children': []}]}, {'type': 'Property', 'name': 'username', 'range': [1363, 1366], 'children': [{'type': 'Literal', 'name': '"testuser"', 'range': [1365, 1375], 'children': []}]}, {'type': 'Property', 'name': 'description', 'range': [1368, 1371], 'children': [{'type': 'Literal', 'name': '"Test description"', 'range': [1370, 1385], 'children': []}]}, {'type': 'Property', 'name': 'links', 'range': [1373, 1380], 'children': [{'type': 'ArrayLiteral', 'name': 'links', 'range': [1375, 1379], 'children': [{'type': 'Literal', 'name': '"link1"', 'range': [1376, 1382], 'children': []}, {'type': 'Literal', 'name': '"link2"', 'range': [1378, 1384], 'children': []}]}]}, {'type': 'Property', 'name': 'avatarUrl', 'range': [1382, 1385], 'children': [{'type': 'Literal', 'name': '"avatar.jpg"', 'range': [1384, 1395], 'children': []}]}, {'type': 'Property', 'name': 'isFeatured', 'range': [1387, 1390], 'children': [{'type': 'Literal', 'name': 'False', 'range': [1389, 1394], 'children': []}]}, {'type': 'Property', 'name': 'createdAt', 'range': [1392, 1399], 'children': [{'type': 'CallExpression', 'name': 'now', 'range': [1394, 1398], 'children': [{'type': 'Identifier', 'name': 'datetime', 'range': [1394, 1402], 'children': []}]}]}, {'type': 'Property', 'name': 'updatedAt', 'range': [1401, 1408], 'children': [{'type': 'CallExpression', 'name': 'now', 'range': [1403, 1407], 'children': [{'type': 'Identifier', 'name': 'datetime', 'range': [1403, 1411], 'children': []}]}]}]}]}]}, {'type': 'Comment', 'name': '# Mock prisma calls', 'range': [1413, 1417], 'children': []}, {'type': 'VariableDecl', 'name': 'mock_profile_db', 'range': [1418, 1443], 'children': [{'type': 'Assignment', 'name': '=', 'range': [1419, 1420], 'children': []}, {'type': 'CallExpression', 'name': 'patch', 'range': [1420, 1426], 'children': [{'type': 'Identifier', 'name': 'mocker', 'range': [1420, 1426], 'children': []}, {'type': 'Literal', 'name': '"prisma.models.Profile.prisma"', 'range': [1424, 1450], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'mock_profile_db.return_value.find_unique = mocker.AsyncMock', 'range': [1427, 1443], 'children': [{'type': 'Assignment', 'name': '=', 'range': [1432, 1433], 'children': []}, {'type': 'CallExpression', 'name': 'AsyncMock', 'range': [1435, 1442], 'children': [{'type': 'Identifier', 'name': 'mocker', 'range': [1435, 1441], 'children': []}, {'type': 'ObjectLiteral', 'name': 'AsyncMock', 'range': [1436, 1442], 'children': [{'type': 'Property', 'name': 'return_value', 'range': [1438, 1441], 'children': [{'type': 'Identifier', 'name': 'mock_profile', 'range': [1440, 1452], 'children': []}]}]}]}]}, {'type': 'Comment', 'name': '# Call function', 'range': [1445, 1448], 'children': []}, {'type': 'VariableDecl', 'name': 'result', 'range': [1449, 1458], 'children': [{'type': 'Assignment', 'name': '=', 'range': [1450, 1451], 'children': []}, {'type': 'AwaitExpression', 'name': 'await db.get_user_profile', 'range': [1451, 1458], 'children': [{'type': 'CallExpression', 'name': 'get_user_profile', 'range': [1454, 1457], 'children': [{'type': 'Identifier', 'name': 'db', 'range': [1452, 1454], 'children': []}, {'type': 'Literal', 'name': '"user-id"', 'range': [1456, 1464], 'children': []}]}]}]}, {'type': 'Comment', 'name': '# Verify results', 'range': [1460, 1463], 'children': []}, {'type': 'ExpressionStatement', 'name': 'assert result.name == "No Profile Data"', 'range': [1464, 1471], 'children': [{'type': 'BinaryExpression', 'name': '==', 'range': [1468, 1470], 'children': [{'type': 'MemberExpression', 'name': 'result.name', 'range': [1465, 1468], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [1465, 1471], 'children': []}]}, {'type': 'Literal', 'name': '"No Profile Data"', 'range': [1469, 1485], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'assert result.username == "No Profile Data"', 'range': [1472, 1479], 'children': [{'type': 'BinaryExpression', 'name': '==', 'range': [1476, 1478], 'children': [{'type': 'MemberExpression', 'name': 'result.username', 'range': [1473, 1476], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [1473, 1479], 'children': []}]}, {'type': 'Literal', 'name': '"No Profile Data"', 'range': [1477, 1493], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'assert result.description == "No Profile Data"', 'range': [1480, 1487], 'children': [{'type': 'BinaryExpression', 'name': '==', 'range': [1484, 1486], 'children': [{'type': 'MemberExpression', 'name': 'result.description', 'range': [1481, 1484], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [1481, 1487], 'children': []}]}, {'type': 'Literal', 'name': '"No Profile Data"', 'range': [1485, 1501], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'assert result.links == []', 'range': [1488, 1496], 'children': [{'type': 'BinaryExpression', 'name': '==', 'range': [1492, 1494], 'children': [{'type': 'MemberExpression', 'name': 'result.links', 'range': [1489, 1492], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [1489, 1495], 'children': []}]}, {'type': 'ArrayLiteral', 'name': '[]', 'range': [1493, 1495], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'assert result.avatar_url == ""', 'range': [1497, 1504], 'children': [{'type': 'BinaryExpression', 'name': '==', 'range': [1501, 1503], 'children': [{'type': 'MemberExpression', 'name': 'result.avatar_url', 'range': [1498, 1501], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [1498, 1504], 'children': []}]}, {'type': 'Literal', 'name': '""', 'range': [1502, 1504], 'children': []}]}]}]}]}]}
2025-01-08 10:31:42,616 - INFO - Completed main AST analysis flow
2025-01-08 10:31:42,616 - INFO - Successfully processed chunk
2025-01-08 10:32:20,537 - INFO - Step 5 result: {'type': 'Program', 'name': 'test_update_profile', 'range': [1090, 1323], 'children': [{'type': 'FunctionDecl', 'name': 'test_update_profile', 'range': [1090, 1323], 'children': [{'type': 'Decorator', 'name': '@pytest.mark.asyncio', 'range': [1083, 1089], 'children': []}, {'type': 'FunctionSignature', 'name': 'test_update_profile', 'range': [1090, 1096], 'children': [{'type': 'Keyword', 'name': 'async', 'range': [1090, 1095], 'children': []}, {'type': 'Keyword', 'name': 'def', 'range': [1091, 1094], 'children': []}, {'type': 'Identifier', 'name': 'test_update_profile', 'range': [1092, 1109], 'children': []}, {'type': 'Parameter', 'name': 'mocker', 'range': [1094, 1095], 'children': []}]}, {'type': 'Block', 'name': 'FunctionBody', 'range': [1097, 1323], 'children': [{'type': 'Comment', 'name': '# Mock data', 'range': [1098, 1101], 'children': []}, {'type': 'VariableDecl', 'name': 'mock_profile', 'range': [1102, 1167], 'children': [{'type': 'Assignment', 'name': '=', 'range': [1103, 1104], 'children': []}, {'type': 'ObjectCreation', 'name': 'Profile', 'range': [1104, 1166], 'children': [{'type': 'Identifier', 'name': 'prisma', 'range': [1104, 1110], 'children': []}, {'type': 'Identifier', 'name': 'models', 'range': [1105, 1111], 'children': []}, {'type': 'Identifier', 'name': 'Profile', 'range': [1106, 1112], 'children': []}, {'type': 'ObjectProperties', 'name': 'ProfileProperties', 'range': [1109, 1165], 'children': [{'type': 'Property', 'name': 'id', 'range': [1111, 1114], 'children': []}, {'type': 'Property', 'name': 'name', 'range': [1116, 1119], 'children': []}, {'type': 'Property', 'name': 'username', 'range': [1121, 1124], 'children': []}, {'type': 'Property', 'name': 'description', 'range': [1126, 1129], 'children': []}, {'type': 'Property', 'name': 'links', 'range': [1131, 1136], 'children': []}, {'type': 'Property', 'name': 'avatarUrl', 'range': [1138, 1141], 'children': []}, {'type': 'Property', 'name': 'isFeatured', 'range': [1143, 1146], 'children': []}, {'type': 'Property', 'name': 'createdAt', 'range': [1148, 1155], 'children': []}, {'type': 'Property', 'name': 'updatedAt', 'range': [1157, 1164], 'children': []}]}]}]}, {'type': 'Comment', 'name': '# Mock prisma calls', 'range': [1169, 1173], 'children': []}, {'type': 'VariableDecl', 'name': 'mock_profile_db', 'range': [1174, 1214], 'children': [{'type': 'Assignment', 'name': '=', 'range': [1175, 1176], 'children': []}, {'type': 'CallExpression', 'name': 'mocker.patch', 'range': [1176, 1182], 'children': [{'type': 'Identifier', 'name': 'mocker', 'range': [1176, 1182], 'children': []}, {'type': 'Identifier', 'name': 'patch', 'range': [1177, 1182], 'children': []}, {'type': 'Literal', 'name': '"prisma.models.Profile.prisma"', 'range': [1180, 1181], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'mock_profile_db.return_value.find_first = mocker.AsyncMock', 'range': [1183, 1199], 'children': [{'type': 'Assignment', 'name': '=', 'range': [1188, 1189], 'children': []}, {'type': 'CallExpression', 'name': 'mocker.AsyncMock', 'range': [1189, 1198], 'children': [{'type': 'Identifier', 'name': 'mocker', 'range': [1189, 1195], 'children': []}, {'type': 'Identifier', 'name': 'AsyncMock', 'range': [1191, 1198], 'children': []}, {'type': 'ObjectProperties', 'name': 'AsyncMockProperties', 'range': [1193, 1197], 'children': [{'type': 'Property', 'name': 'return_value', 'range': [1194, 1197], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': 'mock_profile_db.return_value.update = mocker.AsyncMock', 'range': [1200, 1214], 'children': [{'type': 'Assignment', 'name': '=', 'range': [1205, 1206], 'children': []}, {'type': 'CallExpression', 'name': 'mocker.AsyncMock', 'range': [1206, 1213], 'children': [{'type': 'Identifier', 'name': 'mocker', 'range': [1206, 1212], 'children': []}, {'type': 'Identifier', 'name': 'AsyncMock', 'range': [1208, 1213], 'children': []}, {'type': 'ObjectProperties', 'name': 'AsyncMockProperties', 'range': [1210, 1212], 'children': [{'type': 'Property', 'name': 'return_value', 'range': [1211, 1212], 'children': []}]}]}]}, {'type': 'Comment', 'name': '# Test data', 'range': [1216, 1219], 'children': []}, {'type': 'VariableDecl', 'name': 'profile', 'range': [1220, 1258], 'children': [{'type': 'Assignment', 'name': '=', 'range': [1221, 1222], 'children': []}, {'type': 'ObjectCreation', 'name': 'Profile', 'range': [1222, 1257], 'children': [{'type': 'Identifier', 'name': 'Profile', 'range': [1222, 1228], 'children': []}, {'type': 'ObjectProperties', 'name': 'ProfileProperties', 'range': [1223, 1256], 'children': [{'type': 'Property', 'name': 'name', 'range': [1225, 1228], 'children': []}, {'type': 'Property', 'name': 'username', 'range': [1230, 1233], 'children': []}, {'type': 'Property', 'name': 'description', 'range': [1235, 1238], 'children': []}, {'type': 'Property', 'name': 'links', 'range': [1240, 1245], 'children': []}, {'type': 'Property', 'name': 'avatar_url', 'range': [1247, 1250], 'children': []}, {'type': 'Property', 'name': 'is_featured', 'range': [1252, 1255], 'children': []}]}]}]}, {'type': 'Comment', 'name': '# Call function', 'range': [1260, 1263], 'children': []}, {'type': 'ExpressionStatement', 'name': 'result = await db.update_or_create_profile', 'range': [1264, 1275], 'children': [{'type': 'Assignment', 'name': '=', 'range': [1265, 1266], 'children': []}, {'type': 'AwaitExpression', 'name': 'await', 'range': [1266, 1271], 'children': [{'type': 'CallExpression', 'name': 'db.update_or_create_profile', 'range': [1267, 1274], 'children': [{'type': 'Identifier', 'name': 'db', 'range': [1267, 1269], 'children': []}, {'type': 'Identifier', 'name': 'update_or_create_profile', 'range': [1269, 1274], 'children': []}, {'type': 'Arguments', 'name': 'FunctionArguments', 'range': [1270, 1273], 'children': [{'type': 'Literal', 'name': '"user-id"', 'range': [1271, 1272], 'children': []}, {'type': 'Identifier', 'name': 'profile', 'range': [1273, 1274], 'children': []}]}]}]}]}, {'type': 'Comment', 'name': '# Verify results', 'range': [1277, 1280], 'children': []}, {'type': 'ExpressionStatement', 'name': 'assert result.username == "creator"', 'range': [1281, 1288], 'children': [{'type': 'AssertStatement', 'name': 'assert', 'range': [1281, 1287], 'children': [{'type': 'BinaryExpression', 'name': '==', 'range': [1285, 1286], 'children': [{'type': 'MemberExpression', 'name': 'result.username', 'range': [1282, 1285], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [1282, 1283], 'children': []}, {'type': 'Identifier', 'name': 'username', 'range': [1283, 1285], 'children': []}]}, {'type': 'Literal', 'name': '"creator"', 'range': [1286, 1287], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': 'assert result.name == "Test Creator"', 'range': [1289, 1296], 'children': [{'type': 'AssertStatement', 'name': 'assert', 'range': [1289, 1295], 'children': [{'type': 'BinaryExpression', 'name': '==', 'range': [1293, 1294], 'children': [{'type': 'MemberExpression', 'name': 'result.name', 'range': [1290, 1293], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [1290, 1291], 'children': []}, {'type': 'Identifier', 'name': 'name', 'range': [1291, 1293], 'children': []}]}, {'type': 'Literal', 'name': '"Test Creator"', 'range': [1294, 1295], 'children': []}]}]}]}, {'type': 'Comment', 'name': '# Verify mocks called correctly', 'range': [1298, 1303], 'children': []}, {'type': 'ExpressionStatement', 'name': 'mock_profile_db.return_value.find_first.assert_called_once', 'range': [1304, 1313], 'children': [{'type': 'CallExpression', 'name': 'assert_called_once', 'range': [1310, 1312], 'children': [{'type': 'MemberExpression', 'name': 'mock_profile_db.return_value.find_first', 'range': [1304, 1309], 'children': [{'type': 'Identifier', 'name': 'mock_profile_db', 'range': [1304, 1305], 'children': []}, {'type': 'Identifier', 'name': 'return_value', 'range': [1305, 1307], 'children': []}, {'type': 'Identifier', 'name': 'find_first', 'range': [1307, 1309], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': 'mock_profile_db.return_value.update.assert_called_once', 'range': [1314, 1323], 'children': [{'type': 'CallExpression', 'name': 'assert_called_once', 'range': [1320, 1322], 'children': [{'type': 'MemberExpression', 'name': 'mock_profile_db.return_value.update', 'range': [1314, 1319], 'children': [{'type': 'Identifier', 'name': 'mock_profile_db', 'range': [1314, 1315], 'children': []}, {'type': 'Identifier', 'name': 'return_value', 'range': [1315, 1317], 'children': []}, {'type': 'Identifier', 'name': 'update', 'range': [1317, 1319], 'children': []}]}]}]}]}]}]}
2025-01-08 10:32:20,538 - INFO - Completed main AST analysis flow
2025-01-08 10:32:20,539 - INFO - Successfully processed chunk
2025-01-08 10:32:26,909 - INFO - Step 4 result: {'type': 'Program', 'name': 'test_get_store_agent_details', 'range': [357, 569], 'children': [{'type': 'FunctionDecl', 'name': 'test_get_store_agent_details', 'range': [357, 569], 'children': [{'type': 'Decorator', 'name': '@pytest.mark.asyncio', 'range': [350, 356], 'children': []}, {'type': 'FunctionSignature', 'name': 'test_get_store_agent_details', 'range': [357, 363], 'children': [{'type': 'Keyword', 'name': 'async', 'range': [357, 362], 'children': []}, {'type': 'Keyword', 'name': 'def', 'range': [358, 361], 'children': []}, {'type': 'Identifier', 'name': 'test_get_store_agent_details', 'range': [359, 362], 'children': []}, {'type': 'Identifier', 'name': 'mocker', 'range': [361, 362], 'children': []}]}, {'type': 'FunctionBody', 'name': '', 'range': [364, 569], 'children': [{'type': 'Comment', 'name': '# Mock data', 'range': [365, 368], 'children': []}, {'type': 'VariableDecl', 'name': 'mock_agent', 'range': [369, 470], 'children': [{'type': 'Identifier', 'name': 'mock_agent', 'range': [369, 370], 'children': []}, {'type': 'NewExpression', 'name': 'StoreAgent', 'range': [371, 470], 'children': [{'type': 'Identifier', 'name': 'prisma', 'range': [371, 372], 'children': []}, {'type': 'Identifier', 'name': 'models', 'range': [373, 374], 'children': []}, {'type': 'Identifier', 'name': 'StoreAgent', 'range': [375, 376], 'children': []}, {'type': 'ObjectExpression', 'name': '', 'range': [377, 470], 'children': [{'type': 'Property', 'name': 'listing_id', 'range': [378, 381], 'children': [{'type': 'Identifier', 'name': 'listing_id', 'range': [378, 379], 'children': []}, {'type': 'Literal', 'name': '"test-id"', 'range': [380, 381], 'children': []}]}, {'type': 'Property', 'name': 'storeListingVersionId', 'range': [383, 386], 'children': [{'type': 'Identifier', 'name': 'storeListingVersionId', 'range': [383, 384], 'children': []}, {'type': 'Literal', 'name': '"version123"', 'range': [385, 386], 'children': []}]}, {'type': 'Property', 'name': 'slug', 'range': [388, 391], 'children': [{'type': 'Identifier', 'name': 'slug', 'range': [388, 389], 'children': []}, {'type': 'Literal', 'name': '"test-agent"', 'range': [390, 391], 'children': []}]}, {'type': 'Property', 'name': 'agent_name', 'range': [393, 396], 'children': [{'type': 'Identifier', 'name': 'agent_name', 'range': [393, 394], 'children': []}, {'type': 'Literal', 'name': '"Test Agent"', 'range': [395, 396], 'children': []}]}, {'type': 'Property', 'name': 'agent_video', 'range': [398, 401], 'children': [{'type': 'Identifier', 'name': 'agent_video', 'range': [398, 399], 'children': []}, {'type': 'Literal', 'name': '"video.mp4"', 'range': [400, 401], 'children': []}]}, {'type': 'Property', 'name': 'agent_image', 'range': [403, 408], 'children': [{'type': 'Identifier', 'name': 'agent_image', 'range': [403, 404], 'children': []}, {'type': 'ArrayExpression', 'name': '', 'range': [405, 408], 'children': [{'type': 'Literal', 'name': '"image.jpg"', 'range': [406, 407], 'children': []}]}]}, {'type': 'Property', 'name': 'featured', 'range': [410, 413], 'children': [{'type': 'Identifier', 'name': 'featured', 'range': [410, 411], 'children': []}, {'type': 'Literal', 'name': 'False', 'range': [412, 413], 'children': []}]}, {'type': 'Property', 'name': 'creator_username', 'range': [415, 418], 'children': [{'type': 'Identifier', 'name': 'creator_username', 'range': [415, 416], 'children': []}, {'type': 'Literal', 'name': '"creator"', 'range': [417, 418], 'children': []}]}, {'type': 'Property', 'name': 'creator_avatar', 'range': [420, 423], 'children': [{'type': 'Identifier', 'name': 'creator_avatar', 'range': [420, 421], 'children': []}, {'type': 'Literal', 'name': '"avatar.jpg"', 'range': [422, 423], 'children': []}]}, {'type': 'Property', 'name': 'sub_heading', 'range': [425, 428], 'children': [{'type': 'Identifier', 'name': 'sub_heading', 'range': [425, 426], 'children': []}, {'type': 'Literal', 'name': '"Test heading"', 'range': [427, 428], 'children': []}]}, {'type': 'Property', 'name': 'description', 'range': [430, 433], 'children': [{'type': 'Identifier', 'name': 'description', 'range': [430, 431], 'children': []}, {'type': 'Literal', 'name': '"Test description"', 'range': [432, 433], 'children': []}]}, {'type': 'Property', 'name': 'categories', 'range': [435, 440], 'children': [{'type': 'Identifier', 'name': 'categories', 'range': [435, 436], 'children': []}, {'type': 'ArrayExpression', 'name': '', 'range': [437, 440], 'children': [{'type': 'Literal', 'name': '"test"', 'range': [438, 439], 'children': []}]}]}, {'type': 'Property', 'name': 'runs', 'range': [442, 445], 'children': [{'type': 'Identifier', 'name': 'runs', 'range': [442, 443], 'children': []}, {'type': 'Literal', 'name': '10', 'range': [444, 445], 'children': []}]}, {'type': 'Property', 'name': 'rating', 'range': [447, 452], 'children': [{'type': 'Identifier', 'name': 'rating', 'range': [447, 448], 'children': []}, {'type': 'Literal', 'name': '4.5', 'range': [449, 452], 'children': []}]}, {'type': 'Property', 'name': 'versions', 'range': [454, 459], 'children': [{'type': 'Identifier', 'name': 'versions', 'range': [454, 455], 'children': []}, {'type': 'ArrayExpression', 'name': '', 'range': [456, 459], 'children': [{'type': 'Literal', 'name': '"1.0"', 'range': [457, 458], 'children': []}]}]}, {'type': 'Property', 'name': 'updated_at', 'range': [461, 468], 'children': [{'type': 'Identifier', 'name': 'updated_at', 'range': [461, 462], 'children': []}, {'type': 'CallExpression', 'name': 'datetime.now', 'range': [463, 468], 'children': [{'type': 'Identifier', 'name': 'datetime', 'range': [463, 464], 'children': []}, {'type': 'Identifier', 'name': 'now', 'range': [465, 466], 'children': []}]}]}]}]}]}, {'type': 'Comment', 'name': '# Mock prisma call', 'range': [473, 477], 'children': []}, {'type': 'VariableDecl', 'name': 'mock_store_agent', 'range': [478, 500], 'children': [{'type': 'Identifier', 'name': 'mock_store_agent', 'range': [478, 479], 'children': []}, {'type': 'CallExpression', 'name': 'mocker.patch', 'range': [480, 500], 'children': [{'type': 'Identifier', 'name': 'mocker', 'range': [480, 481], 'children': []}, {'type': 'Identifier', 'name': 'patch', 'range': [482, 483], 'children': []}, {'type': 'Literal', 'name': '"prisma.models.StoreAgent.prisma"', 'range': [484, 485], 'children': []}]}, {'type': 'Identifier', 'name': 'return_value', 'range': [487, 488], 'children': []}, {'type': 'Identifier', 'name': 'find_first', 'range': [489, 490], 'children': []}, {'type': 'CallExpression', 'name': 'mocker.AsyncMock', 'range': [491, 500], 'children': [{'type': 'Identifier', 'name': 'mocker', 'range': [491, 492], 'children': []}, {'type': 'Identifier', 'name': 'AsyncMock', 'range': [493, 494], 'children': []}, {'type': 'Identifier', 'name': 'return_value', 'range': [495, 496], 'children': []}, {'type': 'Identifier', 'name': 'mock_agent', 'range': [497, 498], 'children': []}]}]}, {'type': 'Comment', 'name': '# Call function', 'range': [503, 506], 'children': []}, {'type': 'VariableDecl', 'name': 'result', 'range': [507, 518], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [507, 508], 'children': []}, {'type': 'AwaitExpression', 'name': 'await db.get_store_agent_details', 'range': [509, 518], 'children': [{'type': 'Keyword', 'name': 'await', 'range': [509, 510], 'children': []}, {'type': 'Identifier', 'name': 'db', 'range': [510, 511], 'children': []}, {'type': 'Identifier', 'name': 'get_store_agent_details', 'range': [512, 513], 'children': []}, {'type': 'Literal', 'name': '"creator"', 'range': [514, 515], 'children': []}, {'type': 'Literal', 'name': '"test-agent"', 'range': [516, 517], 'children': []}]}]}, {'type': 'Comment', 'name': '# Verify results', 'range': [520, 523], 'children': []}, {'type': 'AssertStatement', 'name': 'assert result.slug == "test-agent"', 'range': [524, 531], 'children': [{'type': 'Keyword', 'name': 'assert', 'range': [524, 525], 'children': []}, {'type': 'Identifier', 'name': 'result', 'range': [525, 526], 'children': []}, {'type': 'Identifier', 'name': 'slug', 'range': [527, 528], 'children': []}, {'type': 'Literal', 'name': '"test-agent"', 'range': [530, 531], 'children': []}]}, {'type': 'AssertStatement', 'name': 'assert result.agent_name == "Test Agent"', 'range': [532, 539], 'children': [{'type': 'Keyword', 'name': 'assert', 'range': [532, 533], 'children': []}, {'type': 'Identifier', 'name': 'result', 'range': [533, 534], 'children': []}, {'type': 'Identifier', 'name': 'agent_name', 'range': [535, 536], 'children': []}, {'type': 'Literal', 'name': '"Test Agent"', 'range': [538, 539], 'children': []}]}, {'type': 'Comment', 'name': '# Verify mock called correctly', 'range': [541, 546], 'children': []}, {'type': 'ExpressionStatement', 'name': 'mock_store_agent.return_value.find_first.assert_called_once_with', 'range': [547, 569], 'children': [{'type': 'Identifier', 'name': 'mock_store_agent', 'range': [547, 548], 'children': []}, {'type': 'Identifier', 'name': 'return_value', 'range': [549, 550], 'children': []}, {'type': 'Identifier', 'name': 'find_first', 'range': [551, 552], 'children': []}, {'type': 'Identifier', 'name': 'assert_called_once_with', 'range': [553, 554], 'children': []}, {'type': 'ObjectExpression', 'name': '', 'range': [555, 568], 'children': [{'type': 'Property', 'name': 'where', 'range': [556, 567], 'children': [{'type': 'Identifier', 'name': 'where', 'range': [556, 557], 'children': []}, {'type': 'ObjectExpression', 'name': '', 'range': [558, 567], 'children': [{'type': 'Property', 'name': 'creator_username', 'range': [559, 562], 'children': [{'type': 'Literal', 'name': '"creator_username"', 'range': [559, 560], 'children': []}, {'type': 'Literal', 'name': '"creator"', 'range': [561, 562], 'children': []}]}, {'type': 'Property', 'name': 'slug', 'range': [563, 566], 'children': [{'type': 'Literal', 'name': '"slug"', 'range': [563, 564], 'children': []}, {'type': 'Literal', 'name': '"test-agent"', 'range': [565, 566], 'children': []}]}]}]}]}]}]}]}]}
2025-01-08 10:32:26,909 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:32:31,269 - INFO - Step 4 result: {'type': 'Program', 'name': 'test_get_store_creator_details', 'range': [578, 783], 'children': [{'type': 'FunctionDecl', 'name': 'test_get_store_creator_details', 'range': [578, 783], 'children': [{'type': 'FunctionSignature', 'name': 'test_get_store_creator_details', 'range': [578, 584], 'children': [{'type': 'Keyword', 'name': 'async', 'range': [578, 583]}, {'type': 'Keyword', 'name': 'def', 'range': [579, 582]}, {'type': 'Identifier', 'name': 'test_get_store_creator_details', 'range': [580, 611]}, {'type': 'Identifier', 'name': 'mocker', 'range': [582, 588]}]}, {'type': 'Block', 'name': 'Block', 'range': [585, 783], 'children': [{'type': 'Comment', 'name': '# Mock data', 'range': [586, 589]}, {'type': 'VariableDecl', 'name': 'mock_creator_data', 'range': [590, 655], 'children': [{'type': 'Identifier', 'name': 'mock_creator_data', 'range': [590, 606]}, {'type': 'NewExpression', 'name': 'Creator', 'range': [592, 655], 'children': [{'type': 'Identifier', 'name': 'prisma', 'range': [592, 598]}, {'type': 'Identifier', 'name': 'models', 'range': [594, 600]}, {'type': 'Identifier', 'name': 'Creator', 'range': [596, 602]}, {'type': 'ObjectExpression', 'name': 'ObjectExpression', 'range': [598, 655], 'children': [{'type': 'Property', 'name': 'name', 'range': [599, 601], 'children': [{'type': 'Identifier', 'name': 'name', 'range': [599, 603]}, {'type': 'Literal', 'name': '"Test Creator"', 'range': [601, 613]}]}, {'type': 'Property', 'name': 'username', 'range': [604, 606], 'children': [{'type': 'Identifier', 'name': 'username', 'range': [604, 612]}, {'type': 'Literal', 'name': '"creator"', 'range': [606, 614]}]}, {'type': 'Property', 'name': 'description', 'range': [609, 611], 'children': [{'type': 'Identifier', 'name': 'description', 'range': [609, 619]}, {'type': 'Literal', 'name': '"Test description"', 'range': [611, 625]}]}, {'type': 'Property', 'name': 'links', 'range': [614, 616], 'children': [{'type': 'Identifier', 'name': 'links', 'range': [614, 619]}, {'type': 'ArrayExpression', 'name': 'ArrayExpression', 'range': [616, 618], 'children': [{'type': 'Literal', 'name': '"link1"', 'range': [617, 623]}]}]}, {'type': 'Property', 'name': 'avatar_url', 'range': [621, 623], 'children': [{'type': 'Identifier', 'name': 'avatar_url', 'range': [621, 631]}, {'type': 'Literal', 'name': '"avatar.jpg"', 'range': [623, 635]}]}, {'type': 'Property', 'name': 'num_agents', 'range': [626, 628], 'children': [{'type': 'Identifier', 'name': 'num_agents', 'range': [626, 636]}, {'type': 'Literal', 'name': '1', 'range': [628, 629]}]}, {'type': 'Property', 'name': 'agent_rating', 'range': [631, 633], 'children': [{'type': 'Identifier', 'name': 'agent_rating', 'range': [631, 643]}, {'type': 'Literal', 'name': '4.5', 'range': [633, 636]}]}, {'type': 'Property', 'name': 'agent_runs', 'range': [638, 640], 'children': [{'type': 'Identifier', 'name': 'agent_runs', 'range': [638, 648]}, {'type': 'Literal', 'name': '10', 'range': [640, 642]}]}, {'type': 'Property', 'name': 'top_categories', 'range': [643, 645], 'children': [{'type': 'Identifier', 'name': 'top_categories', 'range': [643, 657]}, {'type': 'ArrayExpression', 'name': 'ArrayExpression', 'range': [645, 647], 'children': [{'type': 'Literal', 'name': '"test"', 'range': [646, 652]}]}]}, {'type': 'Property', 'name': 'is_featured', 'range': [650, 652], 'children': [{'type': 'Identifier', 'name': 'is_featured', 'range': [650, 661]}, {'type': 'Literal', 'name': 'False', 'range': [652, 657]}]}]}]}]}, {'type': 'Comment', 'name': '# Mock prisma call', 'range': [658, 662]}, {'type': 'VariableDecl', 'name': 'mock_creator', 'range': [663, 683], 'children': [{'type': 'Identifier', 'name': 'mock_creator', 'range': [663, 675]}, {'type': 'CallExpression', 'name': 'patch', 'range': [665, 683], 'children': [{'type': 'Identifier', 'name': 'mocker', 'range': [665, 671]}, {'type': 'Identifier', 'name': 'patch', 'range': [667, 672]}, {'type': 'Literal', 'name': '"prisma.models.Creator.prisma"', 'range': [669, 701]}]}]}, {'type': 'ExpressionStatement', 'name': 'ExpressionStatement', 'range': [672, 683], 'children': [{'type': 'AssignmentExpression', 'name': 'AssignmentExpression', 'range': [672, 683], 'children': [{'type': 'MemberExpression', 'name': 'MemberExpression', 'range': [672, 680], 'children': [{'type': 'Identifier', 'name': 'mock_creator', 'range': [672, 684]}, {'type': 'Identifier', 'name': 'return_value', 'range': [674, 686]}, {'type': 'Identifier', 'name': 'find_unique', 'range': [676, 687]}]}, {'type': 'CallExpression', 'name': 'AsyncMock', 'range': [678, 683], 'children': [{'type': 'Identifier', 'name': 'mocker', 'range': [678, 684]}, {'type': 'Identifier', 'name': 'AsyncMock', 'range': [680, 689]}]}]}]}, {'type': 'Comment', 'name': '# Configure the mock to return values that will pass validation', 'range': [684, 695]}, {'type': 'ExpressionStatement', 'name': 'ExpressionStatement', 'range': [696, 705], 'children': [{'type': 'AssignmentExpression', 'name': 'AssignmentExpression', 'range': [696, 705], 'children': [{'type': 'MemberExpression', 'name': 'MemberExpression', 'range': [696, 703], 'children': [{'type': 'Identifier', 'name': 'mock_creator', 'range': [696, 708]}, {'type': 'Identifier', 'name': 'return_value', 'range': [698, 710]}, {'type': 'Identifier', 'name': 'find_unique', 'range': [700, 711]}, {'type': 'Identifier', 'name': 'return_value', 'range': [702, 714]}]}, {'type': 'Identifier', 'name': 'mock_creator_data', 'range': [704, 720]}]}]}, {'type': 'Comment', 'name': '# Call function', 'range': [706, 710]}, {'type': 'ExpressionStatement', 'name': 'ExpressionStatement', 'range': [711, 720], 'children': [{'type': 'AssignmentExpression', 'name': 'AssignmentExpression', 'range': [711, 720], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [711, 717]}, {'type': 'AwaitExpression', 'name': 'AwaitExpression', 'range': [713, 720], 'children': [{'type': 'CallExpression', 'name': 'get_store_creator_details', 'range': [714, 720], 'children': [{'type': 'Identifier', 'name': 'db', 'range': [714, 716]}, {'type': 'Identifier', 'name': 'get_store_creator_details', 'range': [716, 740]}, {'type': 'Literal', 'name': '"creator"', 'range': [718, 726]}]}]}]}]}, {'type': 'Comment', 'name': '# Verify results', 'range': [721, 725]}, {'type': 'ExpressionStatement', 'name': 'ExpressionStatement', 'range': [726, 733], 'children': [{'type': 'CallExpression', 'name': 'assert', 'range': [726, 733], 'children': [{'type': 'Identifier', 'name': 'assert', 'range': [726, 732]}, {'type': 'BinaryExpression', 'name': 'BinaryExpression', 'range': [727, 733], 'children': [{'type': 'MemberExpression', 'name': 'MemberExpression', 'range': [727, 731], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [727, 733]}, {'type': 'Identifier', 'name': 'username', 'range': [729, 737]}]}, {'type': 'Literal', 'name': '"creator"', 'range': [732, 740]}]}]}]}, {'type': 'ExpressionStatement', 'name': 'ExpressionStatement', 'range': [734, 741], 'children': [{'type': 'CallExpression', 'name': 'assert', 'range': [734, 741], 'children': [{'type': 'Identifier', 'name': 'assert', 'range': [734, 740]}, {'type': 'BinaryExpression', 'name': 'BinaryExpression', 'range': [735, 741], 'children': [{'type': 'MemberExpression', 'name': 'MemberExpression', 'range': [735, 739], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [735, 741]}, {'type': 'Identifier', 'name': 'name', 'range': [737, 741]}]}, {'type': 'Literal', 'name': '"Test Creator"', 'range': [740, 754]}]}]}]}, {'type': 'ExpressionStatement', 'name': 'ExpressionStatement', 'range': [742, 749], 'children': [{'type': 'CallExpression', 'name': 'assert', 'range': [742, 749], 'children': [{'type': 'Identifier', 'name': 'assert', 'range': [742, 748]}, {'type': 'BinaryExpression', 'name': 'BinaryExpression', 'range': [743, 749], 'children': [{'type': 'MemberExpression', 'name': 'MemberExpression', 'range': [743, 747], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [743, 749]}, {'type': 'Identifier', 'name': 'description', 'range': [745, 755]}]}, {'type': 'Literal', 'name': '"Test description"', 'range': [748, 766]}]}]}]}, {'type': 'ExpressionStatement', 'name': 'ExpressionStatement', 'range': [750, 757], 'children': [{'type': 'CallExpression', 'name': 'assert', 'range': [750, 757], 'children': [{'type': 'Identifier', 'name': 'assert', 'range': [750, 756]}, {'type': 'BinaryExpression', 'name': 'BinaryExpression', 'range': [751, 757], 'children': [{'type': 'MemberExpression', 'name': 'MemberExpression', 'range': [751, 755], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [751, 757]}, {'type': 'Identifier', 'name': 'avatar_url', 'range': [753, 763]}]}, {'type': 'Literal', 'name': '"avatar.jpg"', 'range': [756, 768]}]}]}]}, {'type': 'Comment', 'name': '# Verify mock called correctly', 'range': [758, 764]}, {'type': 'ExpressionStatement', 'name': 'ExpressionStatement', 'range': [765, 783], 'children': [{'type': 'CallExpression', 'name': 'assert_called_once_with', 'range': [765, 783], 'children': [{'type': 'MemberExpression', 'name': 'MemberExpression', 'range': [765, 772], 'children': [{'type': 'Identifier', 'name': 'mock_creator', 'range': [765, 777]}, {'type': 'Identifier', 'name': 'return_value', 'range': [767, 779]}, {'type': 'Identifier', 'name': 'find_unique', 'range': [769, 780]}, {'type': 'Identifier', 'name': 'assert_called_once_with', 'range': [771, 793]}]}, {'type': 'ObjectExpression', 'name': 'ObjectExpression', 'range': [773, 781], 'children': [{'type': 'Property', 'name': 'where', 'range': [774, 776], 'children': [{'type': 'Identifier', 'name': 'where', 'range': [774, 778]}, {'type': 'ObjectExpression', 'name': 'ObjectExpression', 'range': [776, 780], 'children': [{'type': 'Property', 'name': 'username', 'range': [777, 779], 'children': [{'type': 'Literal', 'name': '"username"', 'range': [777, 787]}, {'type': 'Literal', 'name': '"creator"', 'range': [779, 787]}]}]}]}]}]}]}]}]}]}
2025-01-08 10:32:31,269 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:33:43,340 - INFO - Step 5 result: {'type': 'Program', 'name': 'test_get_store_agent_details', 'range': [357, 569], 'children': [{'type': 'FunctionDecl', 'name': 'test_get_store_agent_details', 'range': [357, 569], 'children': [{'type': 'Decorator', 'name': '@pytest.mark.asyncio', 'range': [350, 356], 'children': []}, {'type': 'FunctionSignature', 'name': 'test_get_store_agent_details', 'range': [357, 363], 'children': [{'type': 'Keyword', 'name': 'async', 'range': [357, 362], 'children': []}, {'type': 'Keyword', 'name': 'def', 'range': [358, 361], 'children': []}, {'type': 'Identifier', 'name': 'test_get_store_agent_details', 'range': [359, 362], 'children': []}, {'type': 'Identifier', 'name': 'mocker', 'range': [361, 362], 'children': []}]}, {'type': 'FunctionBody', 'name': '', 'range': [364, 569], 'children': [{'type': 'Comment', 'name': '# Mock data', 'range': [365, 368], 'children': []}, {'type': 'VariableDecl', 'name': 'mock_agent', 'range': [369, 470], 'children': [{'type': 'Identifier', 'name': 'mock_agent', 'range': [369, 370], 'children': []}, {'type': 'NewExpression', 'name': 'StoreAgent', 'range': [371, 470], 'children': [{'type': 'Identifier', 'name': 'prisma', 'range': [371, 372], 'children': []}, {'type': 'Identifier', 'name': 'models', 'range': [373, 374], 'children': []}, {'type': 'Identifier', 'name': 'StoreAgent', 'range': [375, 376], 'children': []}, {'type': 'ObjectExpression', 'name': '', 'range': [377, 470], 'children': [{'type': 'Property', 'name': 'listing_id', 'range': [378, 381], 'children': [{'type': 'Identifier', 'name': 'listing_id', 'range': [378, 379], 'children': []}, {'type': 'Literal', 'name': '"test-id"', 'range': [380, 381], 'children': []}]}, {'type': 'Property', 'name': 'storeListingVersionId', 'range': [383, 386], 'children': [{'type': 'Identifier', 'name': 'storeListingVersionId', 'range': [383, 384], 'children': []}, {'type': 'Literal', 'name': '"version123"', 'range': [385, 386], 'children': []}]}, {'type': 'Property', 'name': 'slug', 'range': [388, 391], 'children': [{'type': 'Identifier', 'name': 'slug', 'range': [388, 389], 'children': []}, {'type': 'Literal', 'name': '"test-agent"', 'range': [390, 391], 'children': []}]}, {'type': 'Property', 'name': 'agent_name', 'range': [393, 396], 'children': [{'type': 'Identifier', 'name': 'agent_name', 'range': [393, 394], 'children': []}, {'type': 'Literal', 'name': '"Test Agent"', 'range': [395, 396], 'children': []}]}, {'type': 'Property', 'name': 'agent_video', 'range': [398, 401], 'children': [{'type': 'Identifier', 'name': 'agent_video', 'range': [398, 399], 'children': []}, {'type': 'Literal', 'name': '"video.mp4"', 'range': [400, 401], 'children': []}]}, {'type': 'Property', 'name': 'agent_image', 'range': [403, 408], 'children': [{'type': 'Identifier', 'name': 'agent_image', 'range': [403, 404], 'children': []}, {'type': 'ArrayExpression', 'name': '', 'range': [405, 408], 'children': [{'type': 'Literal', 'name': '"image.jpg"', 'range': [406, 407], 'children': []}]}]}, {'type': 'Property', 'name': 'featured', 'range': [410, 413], 'children': [{'type': 'Identifier', 'name': 'featured', 'range': [410, 411], 'children': []}, {'type': 'Literal', 'name': 'False', 'range': [412, 413], 'children': []}]}, {'type': 'Property', 'name': 'creator_username', 'range': [415, 418], 'children': [{'type': 'Identifier', 'name': 'creator_username', 'range': [415, 416], 'children': []}, {'type': 'Literal', 'name': '"creator"', 'range': [417, 418], 'children': []}]}, {'type': 'Property', 'name': 'creator_avatar', 'range': [420, 423], 'children': [{'type': 'Identifier', 'name': 'creator_avatar', 'range': [420, 421], 'children': []}, {'type': 'Literal', 'name': '"avatar.jpg"', 'range': [422, 423], 'children': []}]}, {'type': 'Property', 'name': 'sub_heading', 'range': [425, 428], 'children': [{'type': 'Identifier', 'name': 'sub_heading', 'range': [425, 426], 'children': []}, {'type': 'Literal', 'name': '"Test heading"', 'range': [427, 428], 'children': []}]}, {'type': 'Property', 'name': 'description', 'range': [430, 433], 'children': [{'type': 'Identifier', 'name': 'description', 'range': [430, 431], 'children': []}, {'type': 'Literal', 'name': '"Test description"', 'range': [432, 433], 'children': []}]}, {'type': 'Property', 'name': 'categories', 'range': [435, 440], 'children': [{'type': 'Identifier', 'name': 'categories', 'range': [435, 436], 'children': []}, {'type': 'ArrayExpression', 'name': '', 'range': [437, 440], 'children': [{'type': 'Literal', 'name': '"test"', 'range': [438, 439], 'children': []}]}]}, {'type': 'Property', 'name': 'runs', 'range': [442, 445], 'children': [{'type': 'Identifier', 'name': 'runs', 'range': [442, 443], 'children': []}, {'type': 'Literal', 'name': '10', 'range': [444, 445], 'children': []}]}, {'type': 'Property', 'name': 'rating', 'range': [447, 452], 'children': [{'type': 'Identifier', 'name': 'rating', 'range': [447, 448], 'children': []}, {'type': 'Literal', 'name': '4.5', 'range': [449, 452], 'children': []}]}, {'type': 'Property', 'name': 'versions', 'range': [454, 459], 'children': [{'type': 'Identifier', 'name': 'versions', 'range': [454, 455], 'children': []}, {'type': 'ArrayExpression', 'name': '', 'range': [456, 459], 'children': [{'type': 'Literal', 'name': '"1.0"', 'range': [457, 458], 'children': []}]}]}, {'type': 'Property', 'name': 'updated_at', 'range': [461, 468], 'children': [{'type': 'Identifier', 'name': 'updated_at', 'range': [461, 462], 'children': []}, {'type': 'CallExpression', 'name': 'datetime.now', 'range': [463, 468], 'children': [{'type': 'Identifier', 'name': 'datetime', 'range': [463, 464], 'children': []}, {'type': 'Identifier', 'name': 'now', 'range': [465, 466], 'children': []}]}]}]}]}]}, {'type': 'Comment', 'name': '# Mock prisma call', 'range': [473, 477], 'children': []}, {'type': 'VariableDecl', 'name': 'mock_store_agent', 'range': [478, 500], 'children': [{'type': 'Identifier', 'name': 'mock_store_agent', 'range': [478, 479], 'children': []}, {'type': 'CallExpression', 'name': 'mocker.patch', 'range': [480, 500], 'children': [{'type': 'Identifier', 'name': 'mocker', 'range': [480, 481], 'children': []}, {'type': 'Identifier', 'name': 'patch', 'range': [482, 483], 'children': []}, {'type': 'Literal', 'name': '"prisma.models.StoreAgent.prisma"', 'range': [484, 485], 'children': []}]}, {'type': 'Identifier', 'name': 'return_value', 'range': [487, 488], 'children': []}, {'type': 'Identifier', 'name': 'find_first', 'range': [489, 490], 'children': []}, {'type': 'CallExpression', 'name': 'mocker.AsyncMock', 'range': [491, 500], 'children': [{'type': 'Identifier', 'name': 'mocker', 'range': [491, 492], 'children': []}, {'type': 'Identifier', 'name': 'AsyncMock', 'range': [493, 494], 'children': []}, {'type': 'Identifier', 'name': 'return_value', 'range': [495, 496], 'children': []}, {'type': 'Identifier', 'name': 'mock_agent', 'range': [497, 498], 'children': []}]}]}, {'type': 'Comment', 'name': '# Call function', 'range': [503, 506], 'children': []}, {'type': 'VariableDecl', 'name': 'result', 'range': [507, 518], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [507, 508], 'children': []}, {'type': 'AwaitExpression', 'name': 'await db.get_store_agent_details', 'range': [509, 518], 'children': [{'type': 'Keyword', 'name': 'await', 'range': [509, 510], 'children': []}, {'type': 'Identifier', 'name': 'db', 'range': [510, 511], 'children': []}, {'type': 'Identifier', 'name': 'get_store_agent_details', 'range': [512, 513], 'children': []}, {'type': 'Literal', 'name': '"creator"', 'range': [514, 515], 'children': []}, {'type': 'Literal', 'name': '"test-agent"', 'range': [516, 517], 'children': []}]}]}, {'type': 'Comment', 'name': '# Verify results', 'range': [520, 523], 'children': []}, {'type': 'AssertStatement', 'name': 'assert result.slug == "test-agent"', 'range': [524, 531], 'children': [{'type': 'Keyword', 'name': 'assert', 'range': [524, 525], 'children': []}, {'type': 'Identifier', 'name': 'result', 'range': [525, 526], 'children': []}, {'type': 'Identifier', 'name': 'slug', 'range': [527, 528], 'children': []}, {'type': 'Literal', 'name': '"test-agent"', 'range': [530, 531], 'children': []}]}, {'type': 'AssertStatement', 'name': 'assert result.agent_name == "Test Agent"', 'range': [532, 539], 'children': [{'type': 'Keyword', 'name': 'assert', 'range': [532, 533], 'children': []}, {'type': 'Identifier', 'name': 'result', 'range': [533, 534], 'children': []}, {'type': 'Identifier', 'name': 'agent_name', 'range': [535, 536], 'children': []}, {'type': 'Literal', 'name': '"Test Agent"', 'range': [538, 539], 'children': []}]}, {'type': 'Comment', 'name': '# Verify mock called correctly', 'range': [541, 546], 'children': []}, {'type': 'ExpressionStatement', 'name': 'mock_store_agent.return_value.find_first.assert_called_once_with', 'range': [547, 569], 'children': [{'type': 'Identifier', 'name': 'mock_store_agent', 'range': [547, 548], 'children': []}, {'type': 'Identifier', 'name': 'return_value', 'range': [549, 550], 'children': []}, {'type': 'Identifier', 'name': 'find_first', 'range': [551, 552], 'children': []}, {'type': 'Identifier', 'name': 'assert_called_once_with', 'range': [553, 554], 'children': []}, {'type': 'ObjectExpression', 'name': '', 'range': [555, 568], 'children': [{'type': 'Property', 'name': 'where', 'range': [556, 567], 'children': [{'type': 'Identifier', 'name': 'where', 'range': [556, 557], 'children': []}, {'type': 'ObjectExpression', 'name': '', 'range': [558, 567], 'children': [{'type': 'Property', 'name': 'creator_username', 'range': [559, 562], 'children': [{'type': 'Literal', 'name': '"creator_username"', 'range': [559, 560], 'children': []}, {'type': 'Literal', 'name': '"creator"', 'range': [561, 562], 'children': []}]}, {'type': 'Property', 'name': 'slug', 'range': [563, 566], 'children': [{'type': 'Literal', 'name': '"slug"', 'range': [563, 564], 'children': []}, {'type': 'Literal', 'name': '"test-agent"', 'range': [565, 566], 'children': []}]}]}]}]}]}]}]}]}
2025-01-08 10:33:43,341 - INFO - Completed main AST analysis flow
2025-01-08 10:33:43,343 - INFO - Successfully processed chunk
2025-01-08 10:33:48,795 - INFO - Step 5 result: {'type': 'Program', 'name': 'test_get_store_creator_details', 'range': [578, 783], 'children': [{'type': 'FunctionDecl', 'name': 'test_get_store_creator_details', 'range': [578, 783], 'children': [{'type': 'FunctionSignature', 'name': 'test_get_store_creator_details', 'range': [578, 584], 'children': [{'type': 'Keyword', 'name': 'async', 'range': [578, 583]}, {'type': 'Keyword', 'name': 'def', 'range': [579, 582]}, {'type': 'Identifier', 'name': 'test_get_store_creator_details', 'range': [580, 611]}, {'type': 'Identifier', 'name': 'mocker', 'range': [582, 588]}]}, {'type': 'Block', 'name': 'Block', 'range': [585, 783], 'children': [{'type': 'Comment', 'name': '# Mock data', 'range': [586, 589]}, {'type': 'VariableDecl', 'name': 'mock_creator_data', 'range': [590, 655], 'children': [{'type': 'Identifier', 'name': 'mock_creator_data', 'range': [590, 606]}, {'type': 'NewExpression', 'name': 'Creator', 'range': [592, 655], 'children': [{'type': 'Identifier', 'name': 'prisma', 'range': [592, 598]}, {'type': 'Identifier', 'name': 'models', 'range': [594, 600]}, {'type': 'Identifier', 'name': 'Creator', 'range': [596, 602]}, {'type': 'ObjectExpression', 'name': 'ObjectExpression', 'range': [598, 655], 'children': [{'type': 'Property', 'name': 'name', 'range': [599, 601], 'children': [{'type': 'Identifier', 'name': 'name', 'range': [599, 603]}, {'type': 'Literal', 'name': '"Test Creator"', 'range': [601, 613]}]}, {'type': 'Property', 'name': 'username', 'range': [604, 606], 'children': [{'type': 'Identifier', 'name': 'username', 'range': [604, 612]}, {'type': 'Literal', 'name': '"creator"', 'range': [606, 614]}]}, {'type': 'Property', 'name': 'description', 'range': [609, 611], 'children': [{'type': 'Identifier', 'name': 'description', 'range': [609, 619]}, {'type': 'Literal', 'name': '"Test description"', 'range': [611, 625]}]}, {'type': 'Property', 'name': 'links', 'range': [614, 616], 'children': [{'type': 'Identifier', 'name': 'links', 'range': [614, 619]}, {'type': 'ArrayExpression', 'name': 'ArrayExpression', 'range': [616, 618], 'children': [{'type': 'Literal', 'name': '"link1"', 'range': [617, 623]}]}]}, {'type': 'Property', 'name': 'avatar_url', 'range': [621, 623], 'children': [{'type': 'Identifier', 'name': 'avatar_url', 'range': [621, 631]}, {'type': 'Literal', 'name': '"avatar.jpg"', 'range': [623, 635]}]}, {'type': 'Property', 'name': 'num_agents', 'range': [626, 628], 'children': [{'type': 'Identifier', 'name': 'num_agents', 'range': [626, 636]}, {'type': 'Literal', 'name': '1', 'range': [628, 629]}]}, {'type': 'Property', 'name': 'agent_rating', 'range': [631, 633], 'children': [{'type': 'Identifier', 'name': 'agent_rating', 'range': [631, 643]}, {'type': 'Literal', 'name': '4.5', 'range': [633, 636]}]}, {'type': 'Property', 'name': 'agent_runs', 'range': [638, 640], 'children': [{'type': 'Identifier', 'name': 'agent_runs', 'range': [638, 648]}, {'type': 'Literal', 'name': '10', 'range': [640, 642]}]}, {'type': 'Property', 'name': 'top_categories', 'range': [643, 645], 'children': [{'type': 'Identifier', 'name': 'top_categories', 'range': [643, 657]}, {'type': 'ArrayExpression', 'name': 'ArrayExpression', 'range': [645, 647], 'children': [{'type': 'Literal', 'name': '"test"', 'range': [646, 652]}]}]}, {'type': 'Property', 'name': 'is_featured', 'range': [650, 652], 'children': [{'type': 'Identifier', 'name': 'is_featured', 'range': [650, 661]}, {'type': 'Literal', 'name': 'False', 'range': [652, 657]}]}]}]}]}, {'type': 'Comment', 'name': '# Mock prisma call', 'range': [658, 662]}, {'type': 'VariableDecl', 'name': 'mock_creator', 'range': [663, 683], 'children': [{'type': 'Identifier', 'name': 'mock_creator', 'range': [663, 675]}, {'type': 'CallExpression', 'name': 'patch', 'range': [665, 683], 'children': [{'type': 'Identifier', 'name': 'mocker', 'range': [665, 671]}, {'type': 'Identifier', 'name': 'patch', 'range': [667, 672]}, {'type': 'Literal', 'name': '"prisma.models.Creator.prisma"', 'range': [669, 701]}]}]}, {'type': 'ExpressionStatement', 'name': 'ExpressionStatement', 'range': [672, 683], 'children': [{'type': 'AssignmentExpression', 'name': 'AssignmentExpression', 'range': [672, 683], 'children': [{'type': 'MemberExpression', 'name': 'MemberExpression', 'range': [672, 680], 'children': [{'type': 'Identifier', 'name': 'mock_creator', 'range': [672, 684]}, {'type': 'Identifier', 'name': 'return_value', 'range': [674, 686]}, {'type': 'Identifier', 'name': 'find_unique', 'range': [676, 687]}]}, {'type': 'CallExpression', 'name': 'AsyncMock', 'range': [678, 683], 'children': [{'type': 'Identifier', 'name': 'mocker', 'range': [678, 684]}, {'type': 'Identifier', 'name': 'AsyncMock', 'range': [680, 689]}]}]}]}, {'type': 'Comment', 'name': '# Configure the mock to return values that will pass validation', 'range': [684, 695]}, {'type': 'ExpressionStatement', 'name': 'ExpressionStatement', 'range': [696, 705], 'children': [{'type': 'AssignmentExpression', 'name': 'AssignmentExpression', 'range': [696, 705], 'children': [{'type': 'MemberExpression', 'name': 'MemberExpression', 'range': [696, 703], 'children': [{'type': 'Identifier', 'name': 'mock_creator', 'range': [696, 708]}, {'type': 'Identifier', 'name': 'return_value', 'range': [698, 710]}, {'type': 'Identifier', 'name': 'find_unique', 'range': [700, 711]}, {'type': 'Identifier', 'name': 'return_value', 'range': [702, 714]}]}, {'type': 'Identifier', 'name': 'mock_creator_data', 'range': [704, 720]}]}]}, {'type': 'Comment', 'name': '# Call function', 'range': [706, 710]}, {'type': 'ExpressionStatement', 'name': 'ExpressionStatement', 'range': [711, 720], 'children': [{'type': 'AssignmentExpression', 'name': 'AssignmentExpression', 'range': [711, 720], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [711, 717]}, {'type': 'AwaitExpression', 'name': 'AwaitExpression', 'range': [713, 720], 'children': [{'type': 'CallExpression', 'name': 'get_store_creator_details', 'range': [714, 720], 'children': [{'type': 'Identifier', 'name': 'db', 'range': [714, 716]}, {'type': 'Identifier', 'name': 'get_store_creator_details', 'range': [716, 740]}, {'type': 'Literal', 'name': '"creator"', 'range': [718, 726]}]}]}]}]}, {'type': 'Comment', 'name': '# Verify results', 'range': [721, 725]}, {'type': 'ExpressionStatement', 'name': 'ExpressionStatement', 'range': [726, 733], 'children': [{'type': 'CallExpression', 'name': 'assert', 'range': [726, 733], 'children': [{'type': 'Identifier', 'name': 'assert', 'range': [726, 732]}, {'type': 'BinaryExpression', 'name': 'BinaryExpression', 'range': [727, 733], 'children': [{'type': 'MemberExpression', 'name': 'MemberExpression', 'range': [727, 731], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [727, 733]}, {'type': 'Identifier', 'name': 'username', 'range': [729, 737]}]}, {'type': 'Literal', 'name': '"creator"', 'range': [732, 740]}]}]}]}, {'type': 'ExpressionStatement', 'name': 'ExpressionStatement', 'range': [734, 741], 'children': [{'type': 'CallExpression', 'name': 'assert', 'range': [734, 741], 'children': [{'type': 'Identifier', 'name': 'assert', 'range': [734, 740]}, {'type': 'BinaryExpression', 'name': 'BinaryExpression', 'range': [735, 741], 'children': [{'type': 'MemberExpression', 'name': 'MemberExpression', 'range': [735, 739], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [735, 741]}, {'type': 'Identifier', 'name': 'name', 'range': [737, 741]}]}, {'type': 'Literal', 'name': '"Test Creator"', 'range': [740, 754]}]}]}]}, {'type': 'ExpressionStatement', 'name': 'ExpressionStatement', 'range': [742, 749], 'children': [{'type': 'CallExpression', 'name': 'assert', 'range': [742, 749], 'children': [{'type': 'Identifier', 'name': 'assert', 'range': [742, 748]}, {'type': 'BinaryExpression', 'name': 'BinaryExpression', 'range': [743, 749], 'children': [{'type': 'MemberExpression', 'name': 'MemberExpression', 'range': [743, 747], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [743, 749]}, {'type': 'Identifier', 'name': 'description', 'range': [745, 755]}]}, {'type': 'Literal', 'name': '"Test description"', 'range': [748, 766]}]}]}]}, {'type': 'ExpressionStatement', 'name': 'ExpressionStatement', 'range': [750, 757], 'children': [{'type': 'CallExpression', 'name': 'assert', 'range': [750, 757], 'children': [{'type': 'Identifier', 'name': 'assert', 'range': [750, 756]}, {'type': 'BinaryExpression', 'name': 'BinaryExpression', 'range': [751, 757], 'children': [{'type': 'MemberExpression', 'name': 'MemberExpression', 'range': [751, 755], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [751, 757]}, {'type': 'Identifier', 'name': 'avatar_url', 'range': [753, 763]}]}, {'type': 'Literal', 'name': '"avatar.jpg"', 'range': [756, 768]}]}]}]}, {'type': 'Comment', 'name': '# Verify mock called correctly', 'range': [758, 764]}, {'type': 'ExpressionStatement', 'name': 'ExpressionStatement', 'range': [765, 783], 'children': [{'type': 'CallExpression', 'name': 'assert_called_once_with', 'range': [765, 783], 'children': [{'type': 'MemberExpression', 'name': 'MemberExpression', 'range': [765, 772], 'children': [{'type': 'Identifier', 'name': 'mock_creator', 'range': [765, 777]}, {'type': 'Identifier', 'name': 'return_value', 'range': [767, 779]}, {'type': 'Identifier', 'name': 'find_unique', 'range': [769, 780]}, {'type': 'Identifier', 'name': 'assert_called_once_with', 'range': [771, 793]}]}, {'type': 'ObjectExpression', 'name': 'ObjectExpression', 'range': [773, 781], 'children': [{'type': 'Property', 'name': 'where', 'range': [774, 776], 'children': [{'type': 'Identifier', 'name': 'where', 'range': [774, 778]}, {'type': 'ObjectExpression', 'name': 'ObjectExpression', 'range': [776, 780], 'children': [{'type': 'Property', 'name': 'username', 'range': [777, 779], 'children': [{'type': 'Literal', 'name': '"username"', 'range': [777, 787]}, {'type': 'Literal', 'name': '"creator"', 'range': [779, 787]}]}]}]}]}]}]}]}]}]}
2025-01-08 10:33:48,796 - INFO - Completed main AST analysis flow
2025-01-08 10:33:48,797 - INFO - Successfully processed chunk
2025-01-08 10:33:48,901 - INFO - Starting code generation from AST
2025-01-08 10:34:30,054 - INFO - Successfully generated code from AST
2025-01-08 10:34:30,054 - INFO - Starting static code similarity comparison
2025-01-08 10:34:30,088 - INFO - Static similarity result: {'final_score': 97.11, 'length_similarity': 97.07, 'token_similarity': 95.96, 'structure_similarity': 95.05, 'function_similarity': 100, 'complexity_similarity': 100.0, 'variable_similarity': 100}
