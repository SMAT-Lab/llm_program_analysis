2025-01-08 10:21:05,689 - INFO - Processing sample 154
2025-01-08 10:21:05,689 - INFO - Starting Step 0: Splitting code into top-level declarations
2025-01-08 10:21:08,671 - INFO - Successfully split code into 3 top-level declarations
2025-01-08 10:21:08,674 - INFO - Processing chunk #0 (size=281 chars, start_index=0)
2025-01-08 10:21:08,674 - INFO - Processing chunk with 281 chars starting at index 0
2025-01-08 10:21:08,674 - INFO - Starting main AST analysis flow
2025-01-08 10:21:08,675 - INFO - Tokenized code into 55 tokens
2025-01-08 10:21:08,675 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:21:08,676 - INFO - Processing chunk #1 (size=180 chars, start_index=55)
2025-01-08 10:21:08,680 - INFO - Processing chunk with 180 chars starting at index 55
2025-01-08 10:21:08,680 - INFO - Starting main AST analysis flow
2025-01-08 10:21:08,680 - INFO - Tokenized code into 47 tokens
2025-01-08 10:21:08,680 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:21:08,682 - INFO - Processing chunk #2 (size=5264 chars, start_index=102)
2025-01-08 10:21:08,682 - INFO - Processing chunk with 5264 chars starting at index 102
2025-01-08 10:21:08,682 - INFO - Starting main AST analysis flow
2025-01-08 10:21:08,683 - INFO - Tokenized code into 692 tokens
2025-01-08 10:21:08,683 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:21:14,986 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [0, 54], 'children': [{'type': 'ImportDeclaration', 'name': 'unittest', 'range': [14, 16], 'children': []}, {'type': 'ImportDeclaration', 'name': 'find_links_in_text', 'range': [18, 24], 'children': []}, {'type': 'ImportDeclaration', 'name': 'check_duplicate_links', 'range': [25, 31], 'children': []}, {'type': 'ImportDeclaration', 'name': 'fake_user_agent', 'range': [32, 38], 'children': []}, {'type': 'ImportDeclaration', 'name': 'get_host_from_link', 'range': [39, 45], 'children': []}, {'type': 'ImportDeclaration', 'name': 'has_cloudflare_protection', 'range': [46, 52], 'children': []}]}
2025-01-08 10:21:14,986 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:21:15,360 - INFO - Step 1 result: {'type': 'Program', 'name': 'FakeResponse', 'range': [55, 101], 'children': [{'type': 'FunctionDeclaration', 'name': '__init__', 'range': [61, 100], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [64, 64]}, {'type': 'Parameter', 'name': 'code', 'range': [66, 68]}, {'type': 'Parameter', 'name': 'headers', 'range': [70, 72]}, {'type': 'Parameter', 'name': 'text', 'range': [74, 76]}, {'type': 'ReturnType', 'name': 'None', 'range': [80, 80]}, {'type': 'Assignment', 'name': 'status_code', 'range': [83, 87]}, {'type': 'Assignment', 'name': 'headers', 'range': [89, 93]}, {'type': 'Assignment', 'name': 'text', 'range': [95, 99]}]}]}
2025-01-08 10:21:15,360 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:21:17,303 - INFO - Step 1 result: {'type': 'Program', 'name': 'TestValidateLinks', 'range': [102, 793], 'children': [{'type': 'FunctionDeclaration', 'name': 'setUp', 'range': [112, 195], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'test_find_link_in_text', 'range': [210, 277], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'test_find_link_in_text_with_invalid_argument', 'range': [278, 308], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'test_if_check_duplicate_links_has_the_correct_return', 'range': [309, 424], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'test_if_fake_user_agent_has_a_str_as_return', 'range': [426, 448], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'test_get_host_from_link', 'range': [449, 565], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'test_has_cloudflare_protection_with_code_403_and_503_in_response', 'range': [566, 658], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'test_has_cloudflare_protection_when_there_is_no_protection', 'range': [659, 793], 'children': []}]}
2025-01-08 10:21:17,303 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:21:24,140 - INFO - Step 2 result: {'nodes': [{'type': 'ImportDeclaration', 'name': 'unittest', 'range': [14, 16], 'children': [{'type': 'ImportSpecifier', 'name': 'unittest', 'range': [14, 16], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'find_links_in_text', 'range': [18, 24], 'children': [{'type': 'ImportSpecifier', 'name': 'find_links_in_text', 'range': [18, 24], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'check_duplicate_links', 'range': [25, 31], 'children': [{'type': 'ImportSpecifier', 'name': 'check_duplicate_links', 'range': [25, 31], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'fake_user_agent', 'range': [32, 38], 'children': [{'type': 'ImportSpecifier', 'name': 'fake_user_agent', 'range': [32, 38], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'get_host_from_link', 'range': [39, 45], 'children': [{'type': 'ImportSpecifier', 'name': 'get_host_from_link', 'range': [39, 45], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'has_cloudflare_protection', 'range': [46, 52], 'children': [{'type': 'ImportSpecifier', 'name': 'has_cloudflare_protection', 'range': [46, 52], 'children': []}]}]}
2025-01-08 10:21:24,140 - INFO - Starting Step 3: AST simplification
2025-01-08 10:21:26,290 - INFO - Step 2 result: {'type': 'Program', 'name': 'FakeResponse', 'range': [55, 101], 'children': [{'type': 'FunctionDeclaration', 'name': '__init__', 'range': [61, 100], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [64, 64], 'children': []}, {'type': 'Parameter', 'name': 'code', 'range': [66, 68], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [68, 68], 'children': []}]}, {'type': 'Parameter', 'name': 'headers', 'range': [70, 72], 'children': [{'type': 'TypeAnnotation', 'name': 'dict', 'range': [72, 72], 'children': []}]}, {'type': 'Parameter', 'name': 'text', 'range': [74, 76], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [76, 76], 'children': []}]}, {'type': 'ReturnType', 'name': 'None', 'range': [80, 80], 'children': []}, {'type': 'Assignment', 'name': 'status_code', 'range': [83, 87], 'children': [{'type': 'Expression', 'name': 'code', 'range': [87, 87], 'children': []}]}, {'type': 'Assignment', 'name': 'headers', 'range': [89, 93], 'children': [{'type': 'Expression', 'name': 'headers', 'range': [93, 93], 'children': []}]}, {'type': 'Assignment', 'name': 'text', 'range': [95, 99], 'children': [{'type': 'Expression', 'name': 'text', 'range': [99, 99], 'children': []}]}]}]}
2025-01-08 10:21:26,290 - INFO - Starting Step 3: AST simplification
2025-01-08 10:21:29,258 - INFO - Step 3 result: {'nodes': [{'type': 'ImportDeclaration', 'name': 'unittest', 'range': [14, 16], 'children': []}, {'type': 'ImportDeclaration', 'name': 'find_links_in_text', 'range': [18, 24], 'children': []}, {'type': 'ImportDeclaration', 'name': 'check_duplicate_links', 'range': [25, 31], 'children': []}, {'type': 'ImportDeclaration', 'name': 'fake_user_agent', 'range': [32, 38], 'children': []}, {'type': 'ImportDeclaration', 'name': 'get_host_from_link', 'range': [39, 45], 'children': []}, {'type': 'ImportDeclaration', 'name': 'has_cloudflare_protection', 'range': [46, 52], 'children': []}]}
2025-01-08 10:21:29,258 - INFO - Starting Step 4: AST normalization
2025-01-08 10:21:34,266 - INFO - Step 4 result: {'nodes': [{'type': 'ImportDeclaration', 'name': 'unittest', 'range': [14, 16], 'children': []}, {'type': 'ImportDeclaration', 'name': 'find_links_in_text', 'range': [18, 24], 'children': []}, {'type': 'ImportDeclaration', 'name': 'check_duplicate_links', 'range': [25, 31], 'children': []}, {'type': 'ImportDeclaration', 'name': 'fake_user_agent', 'range': [32, 38], 'children': []}, {'type': 'ImportDeclaration', 'name': 'get_host_from_link', 'range': [39, 45], 'children': []}, {'type': 'ImportDeclaration', 'name': 'has_cloudflare_protection', 'range': [46, 52], 'children': []}]}
2025-01-08 10:21:34,266 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:21:36,827 - INFO - Step 3 result: {'type': 'Program', 'name': 'FakeResponse', 'range': [55, 101], 'children': [{'type': 'FunctionDeclaration', 'name': '__init__', 'range': [61, 100], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [64, 64], 'children': []}, {'type': 'Parameter', 'name': 'code', 'range': [66, 68], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [68, 68], 'children': []}]}, {'type': 'Parameter', 'name': 'headers', 'range': [70, 72], 'children': [{'type': 'TypeAnnotation', 'name': 'dict', 'range': [72, 72], 'children': []}]}, {'type': 'Parameter', 'name': 'text', 'range': [74, 76], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [76, 76], 'children': []}]}, {'type': 'ReturnType', 'name': 'None', 'range': [80, 80], 'children': []}, {'type': 'Assignment', 'name': 'status_code', 'range': [83, 87], 'children': [{'type': 'Expression', 'name': 'code', 'range': [87, 87], 'children': []}]}, {'type': 'Assignment', 'name': 'headers', 'range': [89, 93], 'children': [{'type': 'Expression', 'name': 'headers', 'range': [93, 93], 'children': []}]}, {'type': 'Assignment', 'name': 'text', 'range': [95, 99], 'children': [{'type': 'Expression', 'name': 'text', 'range': [99, 99], 'children': []}]}]}]}
2025-01-08 10:21:36,827 - INFO - Starting Step 4: AST normalization
2025-01-08 10:21:40,552 - INFO - Step 5 result: {'nodes': [{'type': 'Program', 'name': 'MainProgram', 'range': [14, 52], 'children': [{'type': 'ImportDeclaration', 'name': 'unittest', 'range': [14, 16], 'children': []}, {'type': 'ImportDeclaration', 'name': 'find_links_in_text', 'range': [18, 24], 'children': []}, {'type': 'ImportDeclaration', 'name': 'check_duplicate_links', 'range': [25, 31], 'children': []}, {'type': 'ImportDeclaration', 'name': 'fake_user_agent', 'range': [32, 38], 'children': []}, {'type': 'ImportDeclaration', 'name': 'get_host_from_link', 'range': [39, 45], 'children': []}, {'type': 'ImportDeclaration', 'name': 'has_cloudflare_protection', 'range': [46, 52], 'children': []}]}]}
2025-01-08 10:21:40,552 - INFO - Completed main AST analysis flow
2025-01-08 10:21:40,553 - INFO - Successfully processed chunk
2025-01-08 10:21:47,268 - INFO - Step 4 result: {'type': 'Program', 'name': 'FakeResponse', 'range': [55, 101], 'children': [{'type': 'FunctionDecl', 'name': '__init__', 'range': [61, 100], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [64, 64], 'children': []}, {'type': 'Parameter', 'name': 'code', 'range': [66, 68], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [68, 68], 'children': []}]}, {'type': 'Parameter', 'name': 'headers', 'range': [70, 72], 'children': [{'type': 'TypeAnnotation', 'name': 'dict', 'range': [72, 72], 'children': []}]}, {'type': 'Parameter', 'name': 'text', 'range': [74, 76], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [76, 76], 'children': []}]}, {'type': 'ReturnType', 'name': 'None', 'range': [80, 80], 'children': []}, {'type': 'Assignment', 'name': 'status_code', 'range': [83, 87], 'children': [{'type': 'Identifier', 'name': 'code', 'range': [87, 87], 'children': []}]}, {'type': 'Assignment', 'name': 'headers', 'range': [89, 93], 'children': [{'type': 'Identifier', 'name': 'headers', 'range': [93, 93], 'children': []}]}, {'type': 'Assignment', 'name': 'text', 'range': [95, 99], 'children': [{'type': 'Identifier', 'name': 'text', 'range': [99, 99], 'children': []}]}]}]}
2025-01-08 10:21:47,268 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:21:58,009 - INFO - Step 5 result: {'type': 'Program', 'name': 'FakeResponse', 'range': [55, 101], 'children': [{'type': 'FunctionDecl', 'name': '__init__', 'range': [61, 100], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [64, 64], 'children': []}, {'type': 'Parameter', 'name': 'code', 'range': [66, 68], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [68, 68], 'children': []}]}, {'type': 'Parameter', 'name': 'headers', 'range': [70, 72], 'children': [{'type': 'TypeAnnotation', 'name': 'dict', 'range': [72, 72], 'children': []}]}, {'type': 'Parameter', 'name': 'text', 'range': [74, 76], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [76, 76], 'children': []}]}, {'type': 'ReturnType', 'name': 'None', 'range': [80, 80], 'children': []}, {'type': 'Assignment', 'name': 'status_code', 'range': [83, 87], 'children': [{'type': 'Identifier', 'name': 'code', 'range': [87, 87], 'children': []}]}, {'type': 'Assignment', 'name': 'headers', 'range': [89, 93], 'children': [{'type': 'Identifier', 'name': 'headers', 'range': [93, 93], 'children': []}]}, {'type': 'Assignment', 'name': 'text', 'range': [95, 99], 'children': [{'type': 'Identifier', 'name': 'text', 'range': [99, 99], 'children': []}]}]}]}
2025-01-08 10:21:58,009 - INFO - Completed main AST analysis flow
2025-01-08 10:21:58,009 - INFO - Successfully processed chunk
2025-01-08 10:22:03,010 - INFO - Step 2 result: {'type': 'Program', 'name': 'TestValidateLinks', 'range': [102, 793], 'children': [{'type': 'FunctionDeclaration', 'name': 'setUp', 'range': [112, 195], 'children': [{'type': 'AssignmentExpression', 'name': 'self.duplicate_links', 'range': [119, 137], 'children': []}, {'type': 'AssignmentExpression', 'name': 'self.no_duplicate_links', 'range': [139, 154], 'children': []}, {'type': 'AssignmentExpression', 'name': 'self.code_200', 'range': [156, 162], 'children': []}, {'type': 'AssignmentExpression', 'name': 'self.code_403', 'range': [163, 168], 'children': []}, {'type': 'AssignmentExpression', 'name': 'self.code_503', 'range': [169, 174], 'children': []}, {'type': 'AssignmentExpression', 'name': 'self.cloudflare_headers', 'range': [175, 185], 'children': []}, {'type': 'AssignmentExpression', 'name': 'self.no_cloudflare_headers', 'range': [186, 195], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': 'test_find_link_in_text', 'range': [210, 277], 'children': [{'type': 'AssignmentExpression', 'name': 'text', 'range': [217, 221], 'children': []}, {'type': 'CallExpression', 'name': 'find_links_in_text', 'range': [224, 230], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertIsInstance', 'range': [232, 240], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertEqual', 'range': [241, 252], 'children': []}, {'type': 'ForStatement', 'name': 'for link in links', 'range': [254, 276], 'children': [{'type': 'CallExpression', 'name': 'self.subTest', 'range': [260, 266], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertIsInstance', 'range': [268, 276], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'test_find_link_in_text_with_invalid_argument', 'range': [278, 308], 'children': [{'type': 'WithStatement', 'name': 'with self.assertRaises', 'range': [285, 307], 'children': [{'type': 'CallExpression', 'name': 'find_links_in_text', 'range': [294, 297], 'children': []}, {'type': 'CallExpression', 'name': 'find_links_in_text', 'range': [298, 302], 'children': []}, {'type': 'CallExpression', 'name': 'find_links_in_text', 'range': [303, 307], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'test_if_check_duplicate_links_has_the_correct_return', 'range': [309, 424], 'children': [{'type': 'AssignmentExpression', 'name': 'result_1', 'range': [316, 324], 'children': []}, {'type': 'AssignmentExpression', 'name': 'result_2', 'range': [325, 333], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertIsInstance', 'range': [335, 343], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertIsInstance', 'range': [344, 352], 'children': []}, {'type': 'AssignmentExpression', 'name': 'has_duplicate_links, links', 'range': [354, 359], 'children': []}, {'type': 'AssignmentExpression', 'name': 'no_duplicate_links, no_links', 'range': [360, 365], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertTrue', 'range': [367, 373], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertFalse', 'range': [374, 380], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertIsInstance', 'range': [382, 390], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertIsInstance', 'range': [391, 399], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertEqual', 'range': [401, 412], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertEqual', 'range': [413, 424], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': 'test_if_fake_user_agent_has_a_str_as_return', 'range': [426, 448], 'children': [{'type': 'AssignmentExpression', 'name': 'user_agent', 'range': [433, 438], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertIsInstance', 'range': [439, 447], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': 'test_get_host_from_link', 'range': [449, 565], 'children': [{'type': 'AssignmentExpression', 'name': 'links', 'range': [456, 481], 'children': []}, {'type': 'ForStatement', 'name': 'for link in links', 'range': [483, 550], 'children': [{'type': 'AssignmentExpression', 'name': 'host', 'range': [489, 495], 'children': []}, {'type': 'CallExpression', 'name': 'self.subTest', 'range': [497, 503], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertIsInstance', 'range': [505, 513], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertNotIn', 'range': [515, 523], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertNotIn', 'range': [524, 532], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertNotIn', 'range': [533, 541], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertNotIn', 'range': [542, 550], 'children': []}]}, {'type': 'WithStatement', 'name': 'with self.assertRaises', 'range': [552, 564], 'children': [{'type': 'CallExpression', 'name': 'get_host_from_link', 'range': [561, 564], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'test_has_cloudflare_protection_with_code_403_and_503_in_response', 'range': [566, 658], 'children': [{'type': 'AssignmentExpression', 'name': 'resp_with_cloudflare_protection_code_403', 'range': [573, 598], 'children': []}, {'type': 'AssignmentExpression', 'name': 'resp_with_cloudflare_protection_code_503', 'range': [601, 627], 'children': []}, {'type': 'AssignmentExpression', 'name': 'result1', 'range': [629, 635], 'children': []}, {'type': 'AssignmentExpression', 'name': 'result2', 'range': [636, 642], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertTrue', 'range': [644, 650], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertTrue', 'range': [651, 657], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': 'test_has_cloudflare_protection_when_there_is_no_protection', 'range': [659, 793], 'children': [{'type': 'AssignmentExpression', 'name': 'resp_without_cloudflare_protection1', 'range': [666, 691], 'children': []}, {'type': 'AssignmentExpression', 'name': 'resp_without_cloudflare_protection2', 'range': [694, 720], 'children': []}, {'type': 'AssignmentExpression', 'name': 'resp_without_cloudflare_protection3', 'range': [723, 748], 'children': []}, {'type': 'AssignmentExpression', 'name': 'result1', 'range': [750, 756], 'children': []}, {'type': 'AssignmentExpression', 'name': 'result2', 'range': [757, 763], 'children': []}, {'type': 'AssignmentExpression', 'name': 'result3', 'range': [764, 770], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertFalse', 'range': [772, 778], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertFalse', 'range': [779, 785], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertFalse', 'range': [786, 792], 'children': []}]}]}
2025-01-08 10:22:03,010 - INFO - Starting Step 3: AST simplification
2025-01-08 10:22:47,338 - INFO - Step 3 result: {'type': 'Program', 'name': 'TestValidateLinks', 'range': [102, 793], 'children': [{'type': 'FunctionDeclaration', 'name': 'setUp', 'range': [112, 195], 'children': [{'type': 'AssignmentExpression', 'name': 'self.duplicate_links', 'range': [119, 137], 'children': []}, {'type': 'AssignmentExpression', 'name': 'self.no_duplicate_links', 'range': [139, 154], 'children': []}, {'type': 'AssignmentExpression', 'name': 'self.code_200', 'range': [156, 162], 'children': []}, {'type': 'AssignmentExpression', 'name': 'self.code_403', 'range': [163, 168], 'children': []}, {'type': 'AssignmentExpression', 'name': 'self.code_503', 'range': [169, 174], 'children': []}, {'type': 'AssignmentExpression', 'name': 'self.cloudflare_headers', 'range': [175, 185], 'children': []}, {'type': 'AssignmentExpression', 'name': 'self.no_cloudflare_headers', 'range': [186, 195], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': 'test_find_link_in_text', 'range': [210, 277], 'children': [{'type': 'AssignmentExpression', 'name': 'text', 'range': [217, 221], 'children': []}, {'type': 'CallExpression', 'name': 'find_links_in_text', 'range': [224, 230], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertIsInstance', 'range': [232, 240], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertEqual', 'range': [241, 252], 'children': []}, {'type': 'ForStatement', 'name': 'for link in links', 'range': [254, 276], 'children': [{'type': 'CallExpression', 'name': 'self.subTest', 'range': [260, 266], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertIsInstance', 'range': [268, 276], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'test_find_link_in_text_with_invalid_argument', 'range': [278, 308], 'children': [{'type': 'WithStatement', 'name': 'with self.assertRaises', 'range': [285, 307], 'children': [{'type': 'CallExpression', 'name': 'find_links_in_text', 'range': [294, 297], 'children': []}, {'type': 'CallExpression', 'name': 'find_links_in_text', 'range': [298, 302], 'children': []}, {'type': 'CallExpression', 'name': 'find_links_in_text', 'range': [303, 307], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'test_if_check_duplicate_links_has_the_correct_return', 'range': [309, 424], 'children': [{'type': 'AssignmentExpression', 'name': 'result_1', 'range': [316, 324], 'children': []}, {'type': 'AssignmentExpression', 'name': 'result_2', 'range': [325, 333], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertIsInstance', 'range': [335, 343], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertIsInstance', 'range': [344, 352], 'children': []}, {'type': 'AssignmentExpression', 'name': 'has_duplicate_links, links', 'range': [354, 359], 'children': []}, {'type': 'AssignmentExpression', 'name': 'no_duplicate_links, no_links', 'range': [360, 365], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertTrue', 'range': [367, 373], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertFalse', 'range': [374, 380], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertIsInstance', 'range': [382, 390], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertIsInstance', 'range': [391, 399], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertEqual', 'range': [401, 412], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertEqual', 'range': [413, 424], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': 'test_if_fake_user_agent_has_a_str_as_return', 'range': [426, 448], 'children': [{'type': 'AssignmentExpression', 'name': 'user_agent', 'range': [433, 438], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertIsInstance', 'range': [439, 447], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': 'test_get_host_from_link', 'range': [449, 565], 'children': [{'type': 'AssignmentExpression', 'name': 'links', 'range': [456, 481], 'children': []}, {'type': 'ForStatement', 'name': 'for link in links', 'range': [483, 550], 'children': [{'type': 'AssignmentExpression', 'name': 'host', 'range': [489, 495], 'children': []}, {'type': 'CallExpression', 'name': 'self.subTest', 'range': [497, 503], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertIsInstance', 'range': [505, 513], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertNotIn', 'range': [515, 523], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertNotIn', 'range': [524, 532], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertNotIn', 'range': [533, 541], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertNotIn', 'range': [542, 550], 'children': []}]}, {'type': 'WithStatement', 'name': 'with self.assertRaises', 'range': [552, 564], 'children': [{'type': 'CallExpression', 'name': 'get_host_from_link', 'range': [561, 564], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'test_has_cloudflare_protection_with_code_403_and_503_in_response', 'range': [566, 658], 'children': [{'type': 'AssignmentExpression', 'name': 'resp_with_cloudflare_protection_code_403', 'range': [573, 598], 'children': []}, {'type': 'AssignmentExpression', 'name': 'resp_with_cloudflare_protection_code_503', 'range': [601, 627], 'children': []}, {'type': 'AssignmentExpression', 'name': 'result1', 'range': [629, 635], 'children': []}, {'type': 'AssignmentExpression', 'name': 'result2', 'range': [636, 642], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertTrue', 'range': [644, 650], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertTrue', 'range': [651, 657], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': 'test_has_cloudflare_protection_when_there_is_no_protection', 'range': [659, 793], 'children': [{'type': 'AssignmentExpression', 'name': 'resp_without_cloudflare_protection1', 'range': [666, 691], 'children': []}, {'type': 'AssignmentExpression', 'name': 'resp_without_cloudflare_protection2', 'range': [694, 720], 'children': []}, {'type': 'AssignmentExpression', 'name': 'resp_without_cloudflare_protection3', 'range': [723, 748], 'children': []}, {'type': 'AssignmentExpression', 'name': 'result1', 'range': [750, 756], 'children': []}, {'type': 'AssignmentExpression', 'name': 'result2', 'range': [757, 763], 'children': []}, {'type': 'AssignmentExpression', 'name': 'result3', 'range': [764, 770], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertFalse', 'range': [772, 778], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertFalse', 'range': [779, 785], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertFalse', 'range': [786, 792], 'children': []}]}]}
2025-01-08 10:22:47,338 - INFO - Starting Step 4: AST normalization
2025-01-08 10:23:31,016 - INFO - Step 4 result: {'type': 'Program', 'name': 'TestValidateLinks', 'range': [102, 793], 'children': [{'type': 'FunctionDecl', 'name': 'setUp', 'range': [112, 195], 'children': [{'type': 'AssignmentExpression', 'name': 'self.duplicate_links', 'range': [119, 137], 'children': []}, {'type': 'AssignmentExpression', 'name': 'self.no_duplicate_links', 'range': [139, 154], 'children': []}, {'type': 'AssignmentExpression', 'name': 'self.code_200', 'range': [156, 162], 'children': []}, {'type': 'AssignmentExpression', 'name': 'self.code_403', 'range': [163, 168], 'children': []}, {'type': 'AssignmentExpression', 'name': 'self.code_503', 'range': [169, 174], 'children': []}, {'type': 'AssignmentExpression', 'name': 'self.cloudflare_headers', 'range': [175, 185], 'children': []}, {'type': 'AssignmentExpression', 'name': 'self.no_cloudflare_headers', 'range': [186, 195], 'children': []}]}, {'type': 'FunctionDecl', 'name': 'test_find_link_in_text', 'range': [210, 277], 'children': [{'type': 'AssignmentExpression', 'name': 'text', 'range': [217, 221], 'children': []}, {'type': 'CallExpression', 'name': 'find_links_in_text', 'range': [224, 230], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertIsInstance', 'range': [232, 240], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertEqual', 'range': [241, 252], 'children': []}, {'type': 'ForStatement', 'name': 'for link in links', 'range': [254, 276], 'children': [{'type': 'CallExpression', 'name': 'self.subTest', 'range': [260, 266], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertIsInstance', 'range': [268, 276], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'test_find_link_in_text_with_invalid_argument', 'range': [278, 308], 'children': [{'type': 'WithStatement', 'name': 'with self.assertRaises', 'range': [285, 307], 'children': [{'type': 'CallExpression', 'name': 'find_links_in_text', 'range': [294, 297], 'children': []}, {'type': 'CallExpression', 'name': 'find_links_in_text', 'range': [298, 302], 'children': []}, {'type': 'CallExpression', 'name': 'find_links_in_text', 'range': [303, 307], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'test_if_check_duplicate_links_has_the_correct_return', 'range': [309, 424], 'children': [{'type': 'AssignmentExpression', 'name': 'result_1', 'range': [316, 324], 'children': []}, {'type': 'AssignmentExpression', 'name': 'result_2', 'range': [325, 333], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertIsInstance', 'range': [335, 343], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertIsInstance', 'range': [344, 352], 'children': []}, {'type': 'AssignmentExpression', 'name': 'has_duplicate_links, links', 'range': [354, 359], 'children': []}, {'type': 'AssignmentExpression', 'name': 'no_duplicate_links, no_links', 'range': [360, 365], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertTrue', 'range': [367, 373], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertFalse', 'range': [374, 380], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertIsInstance', 'range': [382, 390], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertIsInstance', 'range': [391, 399], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertEqual', 'range': [401, 412], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertEqual', 'range': [413, 424], 'children': []}]}, {'type': 'FunctionDecl', 'name': 'test_if_fake_user_agent_has_a_str_as_return', 'range': [426, 448], 'children': [{'type': 'AssignmentExpression', 'name': 'user_agent', 'range': [433, 438], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertIsInstance', 'range': [439, 447], 'children': []}]}, {'type': 'FunctionDecl', 'name': 'test_get_host_from_link', 'range': [449, 565], 'children': [{'type': 'AssignmentExpression', 'name': 'links', 'range': [456, 481], 'children': []}, {'type': 'ForStatement', 'name': 'for link in links', 'range': [483, 550], 'children': [{'type': 'AssignmentExpression', 'name': 'host', 'range': [489, 495], 'children': []}, {'type': 'CallExpression', 'name': 'self.subTest', 'range': [497, 503], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertIsInstance', 'range': [505, 513], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertNotIn', 'range': [515, 523], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertNotIn', 'range': [524, 532], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertNotIn', 'range': [533, 541], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertNotIn', 'range': [542, 550], 'children': []}]}, {'type': 'WithStatement', 'name': 'with self.assertRaises', 'range': [552, 564], 'children': [{'type': 'CallExpression', 'name': 'get_host_from_link', 'range': [561, 564], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'test_has_cloudflare_protection_with_code_403_and_503_in_response', 'range': [566, 658], 'children': [{'type': 'AssignmentExpression', 'name': 'resp_with_cloudflare_protection_code_403', 'range': [573, 598], 'children': []}, {'type': 'AssignmentExpression', 'name': 'resp_with_cloudflare_protection_code_503', 'range': [601, 627], 'children': []}, {'type': 'AssignmentExpression', 'name': 'result1', 'range': [629, 635], 'children': []}, {'type': 'AssignmentExpression', 'name': 'result2', 'range': [636, 642], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertTrue', 'range': [644, 650], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertTrue', 'range': [651, 657], 'children': []}]}, {'type': 'FunctionDecl', 'name': 'test_has_cloudflare_protection_when_there_is_no_protection', 'range': [659, 793], 'children': [{'type': 'AssignmentExpression', 'name': 'resp_without_cloudflare_protection1', 'range': [666, 691], 'children': []}, {'type': 'AssignmentExpression', 'name': 'resp_without_cloudflare_protection2', 'range': [694, 720], 'children': []}, {'type': 'AssignmentExpression', 'name': 'resp_without_cloudflare_protection3', 'range': [723, 748], 'children': []}, {'type': 'AssignmentExpression', 'name': 'result1', 'range': [750, 756], 'children': []}, {'type': 'AssignmentExpression', 'name': 'result2', 'range': [757, 763], 'children': []}, {'type': 'AssignmentExpression', 'name': 'result3', 'range': [764, 770], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertFalse', 'range': [772, 778], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertFalse', 'range': [779, 785], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertFalse', 'range': [786, 792], 'children': []}]}]}
2025-01-08 10:23:31,016 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:24:16,729 - INFO - Step 5 result: {'type': 'Program', 'name': 'TestValidateLinks', 'range': [102, 793], 'children': [{'type': 'FunctionDecl', 'name': 'setUp', 'range': [112, 195], 'children': [{'type': 'AssignmentExpression', 'name': 'self.duplicate_links', 'range': [119, 137], 'children': []}, {'type': 'AssignmentExpression', 'name': 'self.no_duplicate_links', 'range': [139, 154], 'children': []}, {'type': 'AssignmentExpression', 'name': 'self.code_200', 'range': [156, 162], 'children': []}, {'type': 'AssignmentExpression', 'name': 'self.code_403', 'range': [163, 168], 'children': []}, {'type': 'AssignmentExpression', 'name': 'self.code_503', 'range': [169, 174], 'children': []}, {'type': 'AssignmentExpression', 'name': 'self.cloudflare_headers', 'range': [175, 185], 'children': []}, {'type': 'AssignmentExpression', 'name': 'self.no_cloudflare_headers', 'range': [186, 195], 'children': []}]}, {'type': 'FunctionDecl', 'name': 'test_find_link_in_text', 'range': [210, 277], 'children': [{'type': 'AssignmentExpression', 'name': 'text', 'range': [217, 221], 'children': []}, {'type': 'CallExpression', 'name': 'find_links_in_text', 'range': [224, 230], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertIsInstance', 'range': [232, 240], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertEqual', 'range': [241, 252], 'children': []}, {'type': 'ForStatement', 'name': 'for link in links', 'range': [254, 276], 'children': [{'type': 'CallExpression', 'name': 'self.subTest', 'range': [260, 266], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertIsInstance', 'range': [268, 276], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'test_find_link_in_text_with_invalid_argument', 'range': [278, 308], 'children': [{'type': 'WithStatement', 'name': 'with self.assertRaises', 'range': [285, 307], 'children': [{'type': 'CallExpression', 'name': 'find_links_in_text', 'range': [294, 297], 'children': []}, {'type': 'CallExpression', 'name': 'find_links_in_text', 'range': [298, 302], 'children': []}, {'type': 'CallExpression', 'name': 'find_links_in_text', 'range': [303, 307], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'test_if_check_duplicate_links_has_the_correct_return', 'range': [309, 424], 'children': [{'type': 'AssignmentExpression', 'name': 'result_1', 'range': [316, 324], 'children': []}, {'type': 'AssignmentExpression', 'name': 'result_2', 'range': [325, 333], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertIsInstance', 'range': [335, 343], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertIsInstance', 'range': [344, 352], 'children': []}, {'type': 'AssignmentExpression', 'name': 'has_duplicate_links, links', 'range': [354, 359], 'children': []}, {'type': 'AssignmentExpression', 'name': 'no_duplicate_links, no_links', 'range': [360, 365], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertTrue', 'range': [367, 373], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertFalse', 'range': [374, 380], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertIsInstance', 'range': [382, 390], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertIsInstance', 'range': [391, 399], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertEqual', 'range': [401, 412], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertEqual', 'range': [413, 424], 'children': []}]}, {'type': 'FunctionDecl', 'name': 'test_if_fake_user_agent_has_a_str_as_return', 'range': [426, 448], 'children': [{'type': 'AssignmentExpression', 'name': 'user_agent', 'range': [433, 438], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertIsInstance', 'range': [439, 447], 'children': []}]}, {'type': 'FunctionDecl', 'name': 'test_get_host_from_link', 'range': [449, 565], 'children': [{'type': 'AssignmentExpression', 'name': 'links', 'range': [456, 481], 'children': []}, {'type': 'ForStatement', 'name': 'for link in links', 'range': [483, 550], 'children': [{'type': 'AssignmentExpression', 'name': 'host', 'range': [489, 495], 'children': []}, {'type': 'CallExpression', 'name': 'self.subTest', 'range': [497, 503], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertIsInstance', 'range': [505, 513], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertNotIn', 'range': [515, 523], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertNotIn', 'range': [524, 532], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertNotIn', 'range': [533, 541], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertNotIn', 'range': [542, 550], 'children': []}]}, {'type': 'WithStatement', 'name': 'with self.assertRaises', 'range': [552, 564], 'children': [{'type': 'CallExpression', 'name': 'get_host_from_link', 'range': [561, 564], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'test_has_cloudflare_protection_with_code_403_and_503_in_response', 'range': [566, 658], 'children': [{'type': 'AssignmentExpression', 'name': 'resp_with_cloudflare_protection_code_403', 'range': [573, 598], 'children': []}, {'type': 'AssignmentExpression', 'name': 'resp_with_cloudflare_protection_code_503', 'range': [601, 627], 'children': []}, {'type': 'AssignmentExpression', 'name': 'result1', 'range': [629, 635], 'children': []}, {'type': 'AssignmentExpression', 'name': 'result2', 'range': [636, 642], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertTrue', 'range': [644, 650], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertTrue', 'range': [651, 657], 'children': []}]}, {'type': 'FunctionDecl', 'name': 'test_has_cloudflare_protection_when_there_is_no_protection', 'range': [659, 793], 'children': [{'type': 'AssignmentExpression', 'name': 'resp_without_cloudflare_protection1', 'range': [666, 691], 'children': []}, {'type': 'AssignmentExpression', 'name': 'resp_without_cloudflare_protection2', 'range': [694, 720], 'children': []}, {'type': 'AssignmentExpression', 'name': 'resp_without_cloudflare_protection3', 'range': [723, 748], 'children': []}, {'type': 'AssignmentExpression', 'name': 'result1', 'range': [750, 756], 'children': []}, {'type': 'AssignmentExpression', 'name': 'result2', 'range': [757, 763], 'children': []}, {'type': 'AssignmentExpression', 'name': 'result3', 'range': [764, 770], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertFalse', 'range': [772, 778], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertFalse', 'range': [779, 785], 'children': []}, {'type': 'CallExpression', 'name': 'self.assertFalse', 'range': [786, 792], 'children': []}]}]}
2025-01-08 10:24:16,730 - INFO - Completed main AST analysis flow
2025-01-08 10:24:16,730 - INFO - Successfully processed chunk
2025-01-08 10:24:16,753 - INFO - Starting code generation from AST
2025-01-08 10:24:39,224 - INFO - Successfully generated code from AST
2025-01-08 10:24:39,224 - INFO - Starting static code similarity comparison
2025-01-08 10:24:39,235 - INFO - Static similarity result: {'final_score': 89.64, 'length_similarity': 94.86, 'token_similarity': 85.57, 'structure_similarity': 78.95, 'function_similarity': 100, 'complexity_similarity': 100.0, 'variable_similarity': 100}
