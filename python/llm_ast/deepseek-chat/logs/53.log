2025-01-08 09:25:18,524 - INFO - Processing sample 53
2025-01-08 09:25:18,525 - INFO - Starting Step 0: Splitting code into top-level declarations
2025-01-08 09:25:40,243 - INFO - Successfully split code into 7 top-level declarations
2025-01-08 09:25:40,248 - INFO - Processing chunk #0 (size=500 chars, start_index=0)
2025-01-08 09:25:40,249 - INFO - Processing chunk with 500 chars starting at index 0
2025-01-08 09:25:40,249 - INFO - Starting main AST analysis flow
2025-01-08 09:25:40,249 - INFO - Tokenized code into 96 tokens
2025-01-08 09:25:40,249 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:25:40,250 - INFO - Processing chunk #1 (size=212 chars, start_index=96)
2025-01-08 09:25:40,250 - INFO - Processing chunk with 212 chars starting at index 96
2025-01-08 09:25:40,250 - INFO - Starting main AST analysis flow
2025-01-08 09:25:40,250 - INFO - Tokenized code into 53 tokens
2025-01-08 09:25:40,250 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:25:40,252 - INFO - Processing chunk #2 (size=845 chars, start_index=149)
2025-01-08 09:25:40,252 - INFO - Processing chunk with 845 chars starting at index 149
2025-01-08 09:25:40,256 - INFO - Processing chunk #3 (size=2677 chars, start_index=307)
2025-01-08 09:25:40,261 - INFO - Processing chunk #4 (size=616 chars, start_index=809)
2025-01-08 09:25:40,261 - INFO - Starting main AST analysis flow
2025-01-08 09:25:40,262 - INFO - Processing chunk #5 (size=2232 chars, start_index=919)
2025-01-08 09:25:40,263 - INFO - Processing chunk with 2677 chars starting at index 307
2025-01-08 09:25:40,264 - INFO - Processing chunk with 616 chars starting at index 809
2025-01-08 09:25:40,264 - INFO - Processing chunk #6 (size=3116 chars, start_index=1309)
2025-01-08 09:25:40,265 - INFO - Tokenized code into 158 tokens
2025-01-08 09:25:40,265 - INFO - Processing chunk with 2232 chars starting at index 919
2025-01-08 09:25:40,266 - INFO - Starting main AST analysis flow
2025-01-08 09:25:40,266 - INFO - Starting main AST analysis flow
2025-01-08 09:25:40,266 - INFO - Processing chunk with 3116 chars starting at index 1309
2025-01-08 09:25:40,266 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:25:40,267 - INFO - Starting main AST analysis flow
2025-01-08 09:25:40,268 - INFO - Tokenized code into 502 tokens
2025-01-08 09:25:40,268 - INFO - Tokenized code into 110 tokens
2025-01-08 09:25:40,269 - INFO - Starting main AST analysis flow
2025-01-08 09:25:40,274 - INFO - Tokenized code into 390 tokens
2025-01-08 09:25:40,274 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:25:40,275 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:25:40,276 - INFO - Tokenized code into 570 tokens
2025-01-08 09:25:40,276 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:25:40,287 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:26:00,929 - INFO - Step 1 result: {'type': 'Program', 'name': 'assert_sample_graph_executions', 'range': [307, 808], 'children': []}
2025-01-08 09:26:00,929 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:26:01,895 - INFO - Step 1 result: {'type': 'Program', 'name': 'execute_graph', 'range': [149, 306], 'children': []}
2025-01-08 09:26:01,895 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:26:02,067 - INFO - Step 1 result: {'type': 'Program', 'name': 'create_graph', 'range': [96, 148], 'children': []}
2025-01-08 09:26:02,067 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:26:02,342 - INFO - Step 1 result: {'type': 'Program', 'name': 'test_input_pin_always_waited', 'range': [931, 1308], 'children': []}
2025-01-08 09:26:02,342 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:26:03,005 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [1309, 1878], 'children': [{'type': 'FunctionDeclaration', 'name': 'test_static_input_link_on_graph', 'range': [1321, 1878], 'children': []}]}
2025-01-08 09:26:03,005 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:26:03,180 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [809, 918], 'children': [{'type': 'FunctionDeclaration', 'name': 'test_agent_execution', 'range': [821, 918], 'children': []}]}
2025-01-08 09:26:03,180 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:26:13,040 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [0, 95], 'children': [{'type': 'ImportDeclaration', 'name': 'logging', 'range': [0, 1], 'children': []}, {'type': 'ImportDeclaration', 'name': 'pytest', 'range': [4, 5], 'children': []}, {'type': 'ImportDeclaration', 'name': 'User', 'range': [7, 12], 'children': []}, {'type': 'ImportDeclaration', 'name': 'FindInDictionaryBlock, StoreValueBlock', 'range': [15, 24], 'children': []}, {'type': 'ImportDeclaration', 'name': 'CalculatorBlock, Operation', 'range': [26, 35], 'children': []}, {'type': 'ImportDeclaration', 'name': 'execution, graph', 'range': [37, 44], 'children': []}, {'type': 'ImportDeclaration', 'name': 'CreateGraph', 'range': [46, 53], 'children': []}, {'type': 'ImportDeclaration', 'name': 'AgentServer', 'range': [55, 62], 'children': []}, {'type': 'ImportDeclaration', 'name': 'create_test_graph, create_test_user', 'range': [64, 73], 'children': []}, {'type': 'ImportDeclaration', 'name': 'SpinTestServer, wait_execution', 'range': [75, 84], 'children': []}, {'type': 'VariableDeclaration', 'name': 'logger', 'range': [87, 95], 'children': []}]}
2025-01-08 09:26:13,040 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:26:21,755 - INFO - Step 2 result: {'type': 'Program', 'name': '', 'range': [809, 918], 'children': [{'type': 'FunctionDeclaration', 'name': 'test_agent_execution', 'range': [821, 918], 'children': [{'type': 'Decorator', 'name': '@pytest.mark.asyncio', 'range': [809, 819], 'children': []}, {'type': 'FunctionSignature', 'name': 'test_agent_execution', 'range': [821, 829], 'children': [{'type': 'Parameter', 'name': 'server', 'range': [825, 827], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [830, 918], 'children': [{'type': 'ExpressionStatement', 'name': 'logger.info', 'range': [831, 836], 'children': []}, {'type': 'VariableDeclaration', 'name': 'test_user', 'range': [838, 843], 'children': []}, {'type': 'VariableDeclaration', 'name': 'test_graph', 'range': [845, 857], 'children': []}, {'type': 'VariableDeclaration', 'name': 'data', 'range': [859, 869], 'children': []}, {'type': 'VariableDeclaration', 'name': 'graph_exec_id', 'range': [871, 894], 'children': []}, {'type': 'ExpressionStatement', 'name': 'await assert_sample_graph_executions', 'range': [896, 910], 'children': []}, {'type': 'ExpressionStatement', 'name': 'logger.info', 'range': [912, 917], 'children': []}]}]}]}
2025-01-08 09:26:21,755 - INFO - Starting Step 3: AST simplification
2025-01-08 09:26:30,803 - INFO - Step 2 result: {'type': 'Program', 'name': 'create_graph', 'range': [96, 148], 'children': [{'type': 'FunctionDeclaration', 'name': 'create_graph', 'range': [96, 148], 'children': [{'type': 'AsyncKeyword', 'name': 'async', 'range': [96, 100], 'children': []}, {'type': 'DefKeyword', 'name': 'def', 'range': [97, 100], 'children': []}, {'type': 'FunctionName', 'name': 'create_graph', 'range': [98, 110], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [99, 113], 'children': [{'type': 'Parameter', 'name': 's', 'range': [100, 102], 'children': [{'type': 'TypeAnnotation', 'name': 'SpinTestServer', 'range': [102, 115], 'children': []}]}, {'type': 'Parameter', 'name': 'g', 'range': [104, 106], 'children': [{'type': 'TypeAnnotation', 'name': 'graph.Graph', 'range': [106, 115], 'children': []}]}, {'type': 'Parameter', 'name': 'u', 'range': [110, 112], 'children': [{'type': 'TypeAnnotation', 'name': 'User', 'range': [112, 115], 'children': []}]}]}, {'type': 'ReturnType', 'name': 'graph.Graph', 'range': [116, 119], 'children': []}, {'type': 'FunctionBody', 'name': 'body', 'range': [120, 148], 'children': [{'type': 'ExpressionStatement', 'name': 'logger.info', 'range': [121, 127], 'children': [{'type': 'CallExpression', 'name': 'info', 'range': [123, 127], 'children': [{'type': 'Argument', 'name': 'f"Creating graph for user {u.id}"', 'range': [125, 126], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [129, 148], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [130, 135], 'children': [{'type': 'CallExpression', 'name': 'test_create_graph', 'range': [133, 147], 'children': [{'type': 'Argument', 'name': 'CreateGraph', 'range': [137, 142], 'children': []}, {'type': 'Argument', 'name': 'u.id', 'range': [144, 146], 'children': []}]}]}]}]}]}]}
2025-01-08 09:26:30,804 - INFO - Starting Step 3: AST simplification
2025-01-08 09:26:33,973 - INFO - Step 2 result: {'type': 'Program', 'name': 'test_input_pin_always_waited', 'range': [931, 1308], 'children': [{'type': 'FunctionDeclaration', 'name': 'test_input_pin_always_waited', 'range': [931, 1308], 'children': [{'type': 'Decorator', 'name': '@pytest.mark.asyncio', 'range': [919, 929], 'children': []}, {'type': 'FunctionSignature', 'name': 'test_input_pin_always_waited', 'range': [931, 938], 'children': [{'type': 'Parameter', 'name': 'server', 'range': [935, 937], 'children': []}]}, {'type': 'FunctionBody', 'name': '', 'range': [939, 1308], 'children': [{'type': 'Docstring', 'name': '', 'range': [941, 944], 'children': []}, {'type': 'ExpressionStatement', 'name': 'logger.info', 'range': [946, 951], 'children': []}, {'type': 'VariableDeclaration', 'name': 'nodes', 'range': [953, 1048], 'children': []}, {'type': 'VariableDeclaration', 'name': 'links', 'range': [1050, 1130], 'children': []}, {'type': 'VariableDeclaration', 'name': 'test_graph', 'range': [1132, 1159], 'children': []}, {'type': 'VariableDeclaration', 'name': 'test_user', 'range': [1161, 1167], 'children': []}, {'type': 'VariableDeclaration', 'name': 'test_graph', 'range': [1168, 1178], 'children': []}, {'type': 'VariableDeclaration', 'name': 'graph_exec_id', 'range': [1180, 1199], 'children': []}, {'type': 'ExpressionStatement', 'name': 'logger.info', 'range': [1202, 1207], 'children': []}, {'type': 'VariableDeclaration', 'name': 'executions', 'range': [1209, 1229], 'children': []}, {'type': 'AssertStatement', 'name': 'assert len(executions) == 3', 'range': [1231, 1239], 'children': []}, {'type': 'Comment', 'name': '# FindInDictionaryBlock should wait for the input pin to be provided,', 'range': [1240, 1252], 'children': []}, {'type': 'Comment', 'name': '# Hence executing extraction of "key" from {"key1": "value1", "key2": "value2"}', 'range': [1253, 1269], 'children': []}, {'type': 'AssertStatement', 'name': 'assert executions[2].status == execution.ExecutionStatus.COMPLETED', 'range': [1270, 1284], 'children': []}, {'type': 'AssertStatement', 'name': 'assert executions[2].output_data == {"output": ["value2"]}', 'range': [1285, 1301], 'children': []}, {'type': 'ExpressionStatement', 'name': 'logger.info', 'range': [1302, 1307], 'children': []}]}]}]}
2025-01-08 09:26:33,973 - INFO - Starting Step 3: AST simplification
2025-01-08 09:26:44,190 - INFO - Step 3 result: {'type': 'Program', 'name': '', 'range': [809, 918], 'children': [{'type': 'FunctionDeclaration', 'name': 'test_agent_execution', 'range': [821, 918], 'children': [{'type': 'Decorator', 'name': '@pytest.mark.asyncio', 'range': [809, 819], 'children': []}, {'type': 'FunctionSignature', 'name': 'test_agent_execution', 'range': [821, 829], 'children': [{'type': 'Parameter', 'name': 'server', 'range': [825, 827], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [830, 918], 'children': [{'type': 'ExpressionStatement', 'name': 'logger.info', 'range': [831, 836], 'children': []}, {'type': 'VariableDeclaration', 'name': 'test_user', 'range': [838, 843], 'children': []}, {'type': 'VariableDeclaration', 'name': 'test_graph', 'range': [845, 857], 'children': []}, {'type': 'VariableDeclaration', 'name': 'data', 'range': [859, 869], 'children': []}, {'type': 'VariableDeclaration', 'name': 'graph_exec_id', 'range': [871, 894], 'children': []}, {'type': 'ExpressionStatement', 'name': 'await assert_sample_graph_executions', 'range': [896, 910], 'children': []}, {'type': 'ExpressionStatement', 'name': 'logger.info', 'range': [912, 917], 'children': []}]}]}]}
2025-01-08 09:26:44,190 - INFO - Starting Step 4: AST normalization
2025-01-08 09:26:55,529 - INFO - Step 2 result: {'nodes': [{'type': 'ImportDeclaration', 'name': 'logging', 'range': [0, 1], 'children': [{'type': 'ImportSpecifier', 'name': 'logging', 'range': [0, 1], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'pytest', 'range': [4, 5], 'children': [{'type': 'ImportSpecifier', 'name': 'pytest', 'range': [4, 5], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'User', 'range': [7, 12], 'children': [{'type': 'ImportSpecifier', 'name': 'User', 'range': [11, 12], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'FindInDictionaryBlock, StoreValueBlock', 'range': [15, 24], 'children': [{'type': 'ImportSpecifier', 'name': 'FindInDictionaryBlock', 'range': [22, 23], 'children': []}, {'type': 'ImportSpecifier', 'name': 'StoreValueBlock', 'range': [24, 25], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'CalculatorBlock, Operation', 'range': [26, 35], 'children': [{'type': 'ImportSpecifier', 'name': 'CalculatorBlock', 'range': [33, 34], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Operation', 'range': [35, 36], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'execution, graph', 'range': [37, 44], 'children': [{'type': 'ImportSpecifier', 'name': 'execution', 'range': [42, 43], 'children': []}, {'type': 'ImportSpecifier', 'name': 'graph', 'range': [44, 45], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'CreateGraph', 'range': [46, 53], 'children': [{'type': 'ImportSpecifier', 'name': 'CreateGraph', 'range': [53, 54], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'AgentServer', 'range': [55, 62], 'children': [{'type': 'ImportSpecifier', 'name': 'AgentServer', 'range': [62, 63], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'create_test_graph, create_test_user', 'range': [64, 73], 'children': [{'type': 'ImportSpecifier', 'name': 'create_test_graph', 'range': [71, 72], 'children': []}, {'type': 'ImportSpecifier', 'name': 'create_test_user', 'range': [73, 74], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'SpinTestServer, wait_execution', 'range': [75, 84], 'children': [{'type': 'ImportSpecifier', 'name': 'SpinTestServer', 'range': [82, 83], 'children': []}, {'type': 'ImportSpecifier', 'name': 'wait_execution', 'range': [84, 85], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'logger', 'range': [87, 95], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [88, 89], 'children': [{'type': 'CallExpression', 'name': 'getLogger', 'range': [91, 94], 'children': [{'type': 'Identifier', 'name': '__name__', 'range': [93, 94], 'children': []}]}]}]}]}
2025-01-08 09:26:55,530 - INFO - Starting Step 3: AST simplification
2025-01-08 09:27:02,915 - INFO - Step 2 result: {'type': 'Program', 'name': 'assert_sample_graph_executions', 'range': [307, 808], 'children': [{'type': 'FunctionDeclaration', 'name': 'assert_sample_graph_executions', 'range': [307, 808], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [310, 334], 'children': [{'type': 'Parameter', 'name': 'agent_server', 'range': [312, 314], 'children': []}, {'type': 'Parameter', 'name': 'test_graph', 'range': [317, 321], 'children': []}, {'type': 'Parameter', 'name': 'test_user', 'range': [324, 326], 'children': []}, {'type': 'Parameter', 'name': 'graph_exec_id', 'range': [329, 331], 'children': []}]}, {'type': 'BlockStatement', 'name': 'body', 'range': [336, 808], 'children': [{'type': 'ExpressionStatement', 'name': 'logger.info', 'range': [337, 343], 'children': []}, {'type': 'VariableDeclaration', 'name': 'executions', 'range': [345, 366], 'children': []}, {'type': 'VariableDeclaration', 'name': 'output_list', 'range': [369, 387], 'children': []}, {'type': 'VariableDeclaration', 'name': 'input_list', 'range': [389, 423], 'children': []}, {'type': 'Comment', 'name': '# Executing StoreValueBlock', 'range': [426, 429], 'children': []}, {'type': 'ExpressionStatement', 'name': 'exec = executions[0]', 'range': [430, 435], 'children': []}, {'type': 'ExpressionStatement', 'name': 'logger.info', 'range': [437, 443], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.status == execution.ExecutionStatus.COMPLETED', 'range': [445, 456], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.graph_exec_id == graph_exec_id', 'range': [457, 464], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.output_data in output_list', 'range': [465, 478], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.input_data in input_list', 'range': [479, 492], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.node_id in [test_graph.nodes[0].id, test_graph.nodes[1].id]', 'range': [493, 517], 'children': []}, {'type': 'Comment', 'name': '# Executing StoreValueBlock', 'range': [519, 522], 'children': []}, {'type': 'ExpressionStatement', 'name': 'exec = executions[1]', 'range': [523, 528], 'children': []}, {'type': 'ExpressionStatement', 'name': 'logger.info', 'range': [530, 536], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.status == execution.ExecutionStatus.COMPLETED', 'range': [538, 549], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.graph_exec_id == graph_exec_id', 'range': [550, 557], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.output_data in output_list', 'range': [558, 571], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.input_data in input_list', 'range': [572, 585], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.node_id in [test_graph.nodes[0].id, test_graph.nodes[1].id]', 'range': [586, 610], 'children': []}, {'type': 'Comment', 'name': '# Executing FillTextTemplateBlock', 'range': [612, 615], 'children': []}, {'type': 'ExpressionStatement', 'name': 'exec = executions[2]', 'range': [616, 621], 'children': []}, {'type': 'ExpressionStatement', 'name': 'logger.info', 'range': [623, 629], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.status == execution.ExecutionStatus.COMPLETED', 'range': [631, 642], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.graph_exec_id == graph_exec_id', 'range': [643, 650], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.output_data == {"output": ["Hello, World!!!"]}', 'range': [651, 664], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.input_data == {"format": "{a}, {b}{c}", "values": {"a": "Hello", "b": "World", "c": "!!!"}, "values_#_a": "Hello", "values_#_b": "World", "values_#_c": "!!!"}', 'range': [665, 711], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.node_id == test_graph.nodes[2].id', 'range': [712, 726], 'children': []}, {'type': 'Comment', 'name': '# Executing PrintToConsoleBlock', 'range': [728, 731], 'children': []}, {'type': 'ExpressionStatement', 'name': 'exec = executions[3]', 'range': [732, 737], 'children': []}, {'type': 'ExpressionStatement', 'name': 'logger.info', 'range': [739, 745], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.status == execution.ExecutionStatus.COMPLETED', 'range': [747, 758], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.graph_exec_id == graph_exec_id', 'range': [759, 766], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.output_data == {"status": ["printed"]}', 'range': [767, 780], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.input_data == {"text": "Hello, World!!!"}', 'range': [781, 792], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.node_id == test_graph.nodes[3].id', 'range': [793, 807], 'children': []}]}]}]}
2025-01-08 09:27:02,915 - INFO - Starting Step 3: AST simplification
2025-01-08 09:27:08,901 - INFO - Step 3 result: {'type': 'Program', 'name': 'create_graph', 'range': [96, 148], 'children': [{'type': 'FunctionDeclaration', 'name': 'create_graph', 'range': [96, 148], 'children': [{'type': 'AsyncKeyword', 'name': 'async', 'range': [96, 100], 'children': []}, {'type': 'DefKeyword', 'name': 'def', 'range': [97, 100], 'children': []}, {'type': 'FunctionName', 'name': 'create_graph', 'range': [98, 110], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [99, 113], 'children': [{'type': 'Parameter', 'name': 's', 'range': [100, 102], 'children': [{'type': 'TypeAnnotation', 'name': 'SpinTestServer', 'range': [102, 115], 'children': []}]}, {'type': 'Parameter', 'name': 'g', 'range': [104, 106], 'children': [{'type': 'TypeAnnotation', 'name': 'graph.Graph', 'range': [106, 115], 'children': []}]}, {'type': 'Parameter', 'name': 'u', 'range': [110, 112], 'children': [{'type': 'TypeAnnotation', 'name': 'User', 'range': [112, 115], 'children': []}]}]}, {'type': 'ReturnType', 'name': 'graph.Graph', 'range': [116, 119], 'children': []}, {'type': 'FunctionBody', 'name': 'body', 'range': [120, 148], 'children': [{'type': 'ExpressionStatement', 'name': 'logger.info', 'range': [121, 127], 'children': [{'type': 'CallExpression', 'name': 'info', 'range': [123, 127], 'children': [{'type': 'Argument', 'name': 'f"Creating graph for user {u.id}"', 'range': [125, 126], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [129, 148], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [130, 135], 'children': [{'type': 'CallExpression', 'name': 'test_create_graph', 'range': [133, 147], 'children': [{'type': 'Argument', 'name': 'CreateGraph', 'range': [137, 142], 'children': []}, {'type': 'Argument', 'name': 'u.id', 'range': [144, 146], 'children': []}]}]}]}]}]}]}
2025-01-08 09:27:08,902 - INFO - Starting Step 4: AST normalization
2025-01-08 09:27:10,312 - INFO - Step 3 result: {'type': 'Program', 'name': 'test_input_pin_always_waited', 'range': [931, 1308], 'children': [{'type': 'FunctionDeclaration', 'name': 'test_input_pin_always_waited', 'range': [931, 1308], 'children': [{'type': 'Decorator', 'name': '@pytest.mark.asyncio', 'range': [919, 929], 'children': []}, {'type': 'FunctionSignature', 'name': 'test_input_pin_always_waited', 'range': [931, 938], 'children': [{'type': 'Parameter', 'name': 'server', 'range': [935, 937], 'children': []}]}, {'type': 'FunctionBody', 'name': '', 'range': [939, 1308], 'children': [{'type': 'Docstring', 'name': '', 'range': [941, 944], 'children': []}, {'type': 'ExpressionStatement', 'name': 'logger.info', 'range': [946, 951], 'children': []}, {'type': 'VariableDeclaration', 'name': 'nodes', 'range': [953, 1048], 'children': []}, {'type': 'VariableDeclaration', 'name': 'links', 'range': [1050, 1130], 'children': []}, {'type': 'VariableDeclaration', 'name': 'test_graph', 'range': [1132, 1159], 'children': []}, {'type': 'VariableDeclaration', 'name': 'test_user', 'range': [1161, 1167], 'children': []}, {'type': 'VariableDeclaration', 'name': 'test_graph', 'range': [1168, 1178], 'children': []}, {'type': 'VariableDeclaration', 'name': 'graph_exec_id', 'range': [1180, 1199], 'children': []}, {'type': 'ExpressionStatement', 'name': 'logger.info', 'range': [1202, 1207], 'children': []}, {'type': 'VariableDeclaration', 'name': 'executions', 'range': [1209, 1229], 'children': []}, {'type': 'AssertStatement', 'name': 'assert len(executions) == 3', 'range': [1231, 1239], 'children': []}, {'type': 'Comment', 'name': '# FindInDictionaryBlock should wait for the input pin to be provided,', 'range': [1240, 1252], 'children': []}, {'type': 'Comment', 'name': '# Hence executing extraction of "key" from {"key1": "value1", "key2": "value2"}', 'range': [1253, 1269], 'children': []}, {'type': 'AssertStatement', 'name': 'assert executions[2].status == execution.ExecutionStatus.COMPLETED', 'range': [1270, 1284], 'children': []}, {'type': 'AssertStatement', 'name': 'assert executions[2].output_data == {"output": ["value2"]}', 'range': [1285, 1301], 'children': []}, {'type': 'ExpressionStatement', 'name': 'logger.info', 'range': [1302, 1307], 'children': []}]}]}]}
2025-01-08 09:27:10,313 - INFO - Starting Step 4: AST normalization
2025-01-08 09:27:13,017 - INFO - Step 4 result: {'type': 'Program', 'name': '', 'range': [809, 918], 'children': [{'type': 'FunctionDecl', 'name': 'test_agent_execution', 'range': [821, 918], 'children': [{'type': 'Decorator', 'name': '@pytest.mark.asyncio', 'range': [809, 819], 'children': []}, {'type': 'FunctionSignature', 'name': 'test_agent_execution', 'range': [821, 829], 'children': [{'type': 'Parameter', 'name': 'server', 'range': [825, 827], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [830, 918], 'children': [{'type': 'ExpressionStatement', 'name': 'CallExpression', 'range': [831, 836], 'children': [{'type': 'Identifier', 'name': 'logger.info', 'range': [831, 836], 'children': []}]}, {'type': 'VariableDecl', 'name': 'test_user', 'range': [838, 843], 'children': []}, {'type': 'VariableDecl', 'name': 'test_graph', 'range': [845, 857], 'children': []}, {'type': 'VariableDecl', 'name': 'data', 'range': [859, 869], 'children': []}, {'type': 'VariableDecl', 'name': 'graph_exec_id', 'range': [871, 894], 'children': []}, {'type': 'ExpressionStatement', 'name': 'CallExpression', 'range': [896, 910], 'children': [{'type': 'Identifier', 'name': 'await assert_sample_graph_executions', 'range': [896, 910], 'children': []}]}, {'type': 'ExpressionStatement', 'name': 'CallExpression', 'range': [912, 917], 'children': [{'type': 'Identifier', 'name': 'logger.info', 'range': [912, 917], 'children': []}]}]}]}]}
2025-01-08 09:27:13,017 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:27:33,399 - INFO - Step 3 result: {'nodes': [{'type': 'ImportDeclaration', 'name': 'logging', 'range': [0, 1], 'children': [{'type': 'ImportSpecifier', 'name': 'logging', 'range': [0, 1], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'pytest', 'range': [4, 5], 'children': [{'type': 'ImportSpecifier', 'name': 'pytest', 'range': [4, 5], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'User', 'range': [7, 12], 'children': [{'type': 'ImportSpecifier', 'name': 'User', 'range': [11, 12], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'FindInDictionaryBlock, StoreValueBlock', 'range': [15, 24], 'children': [{'type': 'ImportSpecifier', 'name': 'FindInDictionaryBlock', 'range': [22, 23], 'children': []}, {'type': 'ImportSpecifier', 'name': 'StoreValueBlock', 'range': [24, 25], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'CalculatorBlock, Operation', 'range': [26, 35], 'children': [{'type': 'ImportSpecifier', 'name': 'CalculatorBlock', 'range': [33, 34], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Operation', 'range': [35, 36], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'execution, graph', 'range': [37, 44], 'children': [{'type': 'ImportSpecifier', 'name': 'execution', 'range': [42, 43], 'children': []}, {'type': 'ImportSpecifier', 'name': 'graph', 'range': [44, 45], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'CreateGraph', 'range': [46, 53], 'children': [{'type': 'ImportSpecifier', 'name': 'CreateGraph', 'range': [53, 54], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'AgentServer', 'range': [55, 62], 'children': [{'type': 'ImportSpecifier', 'name': 'AgentServer', 'range': [62, 63], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'create_test_graph, create_test_user', 'range': [64, 73], 'children': [{'type': 'ImportSpecifier', 'name': 'create_test_graph', 'range': [71, 72], 'children': []}, {'type': 'ImportSpecifier', 'name': 'create_test_user', 'range': [73, 74], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'SpinTestServer, wait_execution', 'range': [75, 84], 'children': [{'type': 'ImportSpecifier', 'name': 'SpinTestServer', 'range': [82, 83], 'children': []}, {'type': 'ImportSpecifier', 'name': 'wait_execution', 'range': [84, 85], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'logger', 'range': [87, 95], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [88, 89], 'children': [{'type': 'CallExpression', 'name': 'getLogger', 'range': [91, 94], 'children': [{'type': 'Identifier', 'name': '__name__', 'range': [93, 94], 'children': []}]}]}]}]}
2025-01-08 09:27:33,400 - INFO - Starting Step 4: AST normalization
2025-01-08 09:27:38,789 - INFO - Step 5 result: {'type': 'Program', 'name': '', 'range': [809, 918], 'children': [{'type': 'FunctionDecl', 'name': 'test_agent_execution', 'range': [821, 918], 'children': [{'type': 'Decorator', 'name': '@pytest.mark.asyncio', 'range': [809, 819], 'children': []}, {'type': 'FunctionSignature', 'name': 'test_agent_execution', 'range': [821, 829], 'children': [{'type': 'Parameter', 'name': 'server', 'range': [825, 827], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [830, 918], 'children': [{'type': 'ExpressionStatement', 'name': 'CallExpression', 'range': [831, 836], 'children': [{'type': 'Identifier', 'name': 'logger.info', 'range': [831, 836], 'children': []}]}, {'type': 'VariableDecl', 'name': 'test_user', 'range': [838, 843], 'children': []}, {'type': 'VariableDecl', 'name': 'test_graph', 'range': [845, 857], 'children': []}, {'type': 'VariableDecl', 'name': 'data', 'range': [859, 869], 'children': []}, {'type': 'VariableDecl', 'name': 'graph_exec_id', 'range': [871, 894], 'children': []}, {'type': 'ExpressionStatement', 'name': 'CallExpression', 'range': [896, 910], 'children': [{'type': 'Identifier', 'name': 'await assert_sample_graph_executions', 'range': [896, 910], 'children': []}]}, {'type': 'ExpressionStatement', 'name': 'CallExpression', 'range': [912, 917], 'children': [{'type': 'Identifier', 'name': 'logger.info', 'range': [912, 917], 'children': []}]}]}]}]}
2025-01-08 09:27:38,790 - INFO - Completed main AST analysis flow
2025-01-08 09:27:38,790 - INFO - Successfully processed chunk
2025-01-08 09:27:43,180 - INFO - Step 4 result: {'type': 'Program', 'name': 'create_graph', 'range': [96, 148], 'children': [{'type': 'FunctionDecl', 'name': 'create_graph', 'range': [96, 148], 'children': [{'type': 'AsyncKeyword', 'name': 'async', 'range': [96, 100], 'children': []}, {'type': 'DefKeyword', 'name': 'def', 'range': [97, 100], 'children': []}, {'type': 'Identifier', 'name': 'create_graph', 'range': [98, 110], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [99, 113], 'children': [{'type': 'Parameter', 'name': 's', 'range': [100, 102], 'children': [{'type': 'TypeAnnotation', 'name': 'SpinTestServer', 'range': [102, 115], 'children': []}]}, {'type': 'Parameter', 'name': 'g', 'range': [104, 106], 'children': [{'type': 'TypeAnnotation', 'name': 'graph.Graph', 'range': [106, 115], 'children': []}]}, {'type': 'Parameter', 'name': 'u', 'range': [110, 112], 'children': [{'type': 'TypeAnnotation', 'name': 'User', 'range': [112, 115], 'children': []}]}]}, {'type': 'ReturnType', 'name': 'graph.Graph', 'range': [116, 119], 'children': []}, {'type': 'BlockStatement', 'name': 'body', 'range': [120, 148], 'children': [{'type': 'ExpressionStatement', 'name': 'logger.info', 'range': [121, 127], 'children': [{'type': 'CallExpression', 'name': 'info', 'range': [123, 127], 'children': [{'type': 'Literal', 'name': 'f"Creating graph for user {u.id}"', 'range': [125, 126], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [129, 148], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [130, 135], 'children': [{'type': 'CallExpression', 'name': 'test_create_graph', 'range': [133, 147], 'children': [{'type': 'Identifier', 'name': 'CreateGraph', 'range': [137, 142], 'children': []}, {'type': 'MemberExpression', 'name': 'u.id', 'range': [144, 146], 'children': [{'type': 'Identifier', 'name': 'u', 'range': [144, 145], 'children': []}, {'type': 'Identifier', 'name': 'id', 'range': [145, 146], 'children': []}]}]}]}]}]}]}]}
2025-01-08 09:27:43,180 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:27:45,745 - INFO - Step 4 result: {'type': 'Program', 'name': 'test_input_pin_always_waited', 'range': [931, 1308], 'children': [{'type': 'FunctionDecl', 'name': 'test_input_pin_always_waited', 'range': [931, 1308], 'children': [{'type': 'Decorator', 'name': '@pytest.mark.asyncio', 'range': [919, 929], 'children': []}, {'type': 'FunctionSignature', 'name': 'test_input_pin_always_waited', 'range': [931, 938], 'children': [{'type': 'Parameter', 'name': 'server', 'range': [935, 937], 'children': []}]}, {'type': 'FunctionBody', 'name': '', 'range': [939, 1308], 'children': [{'type': 'Docstring', 'name': '', 'range': [941, 944], 'children': []}, {'type': 'ExpressionStatement', 'name': 'CallExpression', 'range': [946, 951], 'children': [{'type': 'Identifier', 'name': 'logger.info', 'range': [946, 951], 'children': []}]}, {'type': 'VariableDecl', 'name': 'nodes', 'range': [953, 1048], 'children': []}, {'type': 'VariableDecl', 'name': 'links', 'range': [1050, 1130], 'children': []}, {'type': 'VariableDecl', 'name': 'test_graph', 'range': [1132, 1159], 'children': []}, {'type': 'VariableDecl', 'name': 'test_user', 'range': [1161, 1167], 'children': []}, {'type': 'VariableDecl', 'name': 'test_graph', 'range': [1168, 1178], 'children': []}, {'type': 'VariableDecl', 'name': 'graph_exec_id', 'range': [1180, 1199], 'children': []}, {'type': 'ExpressionStatement', 'name': 'CallExpression', 'range': [1202, 1207], 'children': [{'type': 'Identifier', 'name': 'logger.info', 'range': [1202, 1207], 'children': []}]}, {'type': 'VariableDecl', 'name': 'executions', 'range': [1209, 1229], 'children': []}, {'type': 'AssertStatement', 'name': 'assert len(executions) == 3', 'range': [1231, 1239], 'children': []}, {'type': 'Comment', 'name': '# FindInDictionaryBlock should wait for the input pin to be provided,', 'range': [1240, 1252], 'children': []}, {'type': 'Comment', 'name': '# Hence executing extraction of "key" from {"key1": "value1", "key2": "value2"}', 'range': [1253, 1269], 'children': []}, {'type': 'AssertStatement', 'name': 'assert executions[2].status == execution.ExecutionStatus.COMPLETED', 'range': [1270, 1284], 'children': []}, {'type': 'AssertStatement', 'name': 'assert executions[2].output_data == {"output": ["value2"]}', 'range': [1285, 1301], 'children': []}, {'type': 'ExpressionStatement', 'name': 'CallExpression', 'range': [1302, 1307], 'children': [{'type': 'Identifier', 'name': 'logger.info', 'range': [1302, 1307], 'children': []}]}]}]}]}
2025-01-08 09:27:45,745 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:27:50,007 - INFO - Step 2 result: {'type': 'Program', 'name': 'execute_graph', 'range': [149, 306], 'children': [{'type': 'FunctionDeclaration', 'name': 'execute_graph', 'range': [149, 306], 'children': [{'type': 'AsyncKeyword', 'name': 'async', 'range': [149, 153], 'children': []}, {'type': 'DefKeyword', 'name': 'def', 'range': [150, 153], 'children': []}, {'type': 'FunctionName', 'name': 'execute_graph', 'range': [151, 164], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [152, 183], 'children': [{'type': 'Parameter', 'name': 'agent_server', 'range': [154, 156], 'children': []}, {'type': 'TypeAnnotation', 'name': 'AgentServer', 'range': [156, 168], 'children': []}, {'type': 'Parameter', 'name': 'test_graph', 'range': [159, 161], 'children': []}, {'type': 'TypeAnnotation', 'name': 'graph.Graph', 'range': [161, 173], 'children': []}, {'type': 'Parameter', 'name': 'test_user', 'range': [166, 168], 'children': []}, {'type': 'TypeAnnotation', 'name': 'User', 'range': [168, 173], 'children': []}, {'type': 'Parameter', 'name': 'input_data', 'range': [171, 173], 'children': []}, {'type': 'TypeAnnotation', 'name': 'dict', 'range': [173, 178], 'children': []}, {'type': 'Parameter', 'name': 'num_execs', 'range': [176, 178], 'children': []}, {'type': 'TypeAnnotation', 'name': 'int', 'range': [178, 180], 'children': []}, {'type': 'DefaultValue', 'name': '4', 'range': [180, 183], 'children': []}]}, {'type': 'ReturnType', 'name': 'str', 'range': [184, 187], 'children': []}, {'type': 'FunctionBody', 'name': 'body', 'range': [188, 306], 'children': [{'type': 'ExpressionStatement', 'name': 'logger.info', 'range': [189, 196], 'children': [{'type': 'CallExpression', 'name': 'logger.info', 'range': [189, 196], 'children': [{'type': 'MemberExpression', 'name': 'logger.info', 'range': [189, 192], 'children': [{'type': 'Identifier', 'name': 'logger', 'range': [189, 190], 'children': []}, {'type': 'Property', 'name': 'info', 'range': [190, 192], 'children': []}]}, {'type': 'TemplateLiteral', 'name': 'f"Executing graph {test_graph.id} for user {test_user.id}"', 'range': [193, 195], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'logger.info', 'range': [197, 204], 'children': [{'type': 'CallExpression', 'name': 'logger.info', 'range': [197, 204], 'children': [{'type': 'MemberExpression', 'name': 'logger.info', 'range': [197, 200], 'children': [{'type': 'Identifier', 'name': 'logger', 'range': [197, 198], 'children': []}, {'type': 'Property', 'name': 'info', 'range': [198, 200], 'children': []}]}, {'type': 'TemplateLiteral', 'name': 'f"Input data: {input_data}"', 'range': [201, 203], 'children': []}]}]}, {'type': 'Comment', 'name': '#---Test adding new executions---#', 'range': [206, 218], 'children': []}, {'type': 'VariableDeclaration', 'name': 'response', 'range': [219, 238], 'children': [{'type': 'AssignmentExpression', 'name': 'response = await agent_server.test_execute_graph', 'range': [219, 238], 'children': [{'type': 'Identifier', 'name': 'response', 'range': [219, 220], 'children': []}, {'type': 'AwaitExpression', 'name': 'await agent_server.test_execute_graph', 'range': [221, 238], 'children': [{'type': 'CallExpression', 'name': 'agent_server.test_execute_graph', 'range': [222, 238], 'children': [{'type': 'MemberExpression', 'name': 'agent_server.test_execute_graph', 'range': [222, 225], 'children': [{'type': 'Identifier', 'name': 'agent_server', 'range': [222, 223], 'children': []}, {'type': 'Property', 'name': 'test_execute_graph', 'range': [223, 225], 'children': []}]}, {'type': 'Arguments', 'name': 'arguments', 'range': [225, 237], 'children': [{'type': 'Identifier', 'name': 'test_graph.id', 'range': [227, 230], 'children': []}, {'type': 'Identifier', 'name': 'input_data', 'range': [231, 232], 'children': []}, {'type': 'Identifier', 'name': 'test_user.id', 'range': [233, 236], 'children': []}]}]}]}]}]}, {'type': 'VariableDeclaration', 'name': 'graph_exec_id', 'range': [239, 245], 'children': [{'type': 'AssignmentExpression', 'name': 'graph_exec_id = response["id"]', 'range': [239, 245], 'children': [{'type': 'Identifier', 'name': 'graph_exec_id', 'range': [239, 240], 'children': []}, {'type': 'MemberExpression', 'name': 'response["id"]', 'range': [241, 245], 'children': [{'type': 'Identifier', 'name': 'response', 'range': [241, 242], 'children': []}, {'type': 'Property', 'name': '"id"', 'range': [242, 245], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': 'logger.info', 'range': [246, 253], 'children': [{'type': 'CallExpression', 'name': 'logger.info', 'range': [246, 253], 'children': [{'type': 'MemberExpression', 'name': 'logger.info', 'range': [246, 249], 'children': [{'type': 'Identifier', 'name': 'logger', 'range': [246, 247], 'children': []}, {'type': 'Property', 'name': 'info', 'range': [247, 249], 'children': []}]}, {'type': 'TemplateLiteral', 'name': 'f"Created execution with ID: {graph_exec_id}"', 'range': [250, 252], 'children': []}]}]}, {'type': 'Comment', 'name': '#Execution queue should be empty', 'range': [255, 261], 'children': []}, {'type': 'ExpressionStatement', 'name': 'logger.info', 'range': [262, 268], 'children': [{'type': 'CallExpression', 'name': 'logger.info', 'range': [262, 268], 'children': [{'type': 'MemberExpression', 'name': 'logger.info', 'range': [262, 265], 'children': [{'type': 'Identifier', 'name': 'logger', 'range': [262, 263], 'children': []}, {'type': 'Property', 'name': 'info', 'range': [263, 265], 'children': []}]}, {'type': 'StringLiteral', 'name': '"Waiting for execution to complete..."', 'range': [266, 267], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'result', 'range': [269, 284], 'children': [{'type': 'AssignmentExpression', 'name': 'result = await wait_execution', 'range': [269, 284], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [269, 270], 'children': []}, {'type': 'AwaitExpression', 'name': 'await wait_execution', 'range': [271, 284], 'children': [{'type': 'CallExpression', 'name': 'wait_execution', 'range': [272, 284], 'children': [{'type': 'Identifier', 'name': 'wait_execution', 'range': [272, 273], 'children': []}, {'type': 'Arguments', 'name': 'arguments', 'range': [273, 283], 'children': [{'type': 'Identifier', 'name': 'test_user.id', 'range': [274, 277], 'children': []}, {'type': 'Identifier', 'name': 'test_graph.id', 'range': [278, 281], 'children': []}, {'type': 'Identifier', 'name': 'graph_exec_id', 'range': [282, 283], 'children': []}]}]}]}]}]}, {'type': 'ExpressionStatement', 'name': 'logger.info', 'range': [285, 292], 'children': [{'type': 'CallExpression', 'name': 'logger.info', 'range': [285, 292], 'children': [{'type': 'MemberExpression', 'name': 'logger.info', 'range': [285, 288], 'children': [{'type': 'Identifier', 'name': 'logger', 'range': [285, 286], 'children': []}, {'type': 'Property', 'name': 'info', 'range': [286, 288], 'children': []}]}, {'type': 'TemplateLiteral', 'name': 'f"Execution completed with {len(result)} results"', 'range': [289, 291], 'children': []}]}]}, {'type': 'AssertStatement', 'name': 'assert result and len(result) == num_execs', 'range': [293, 303], 'children': [{'type': 'LogicalExpression', 'name': 'result and len(result) == num_execs', 'range': [294, 303], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [294, 295], 'children': []}, {'type': 'BinaryExpression', 'name': 'len(result) == num_execs', 'range': [296, 303], 'children': [{'type': 'CallExpression', 'name': 'len(result)', 'range': [296, 300], 'children': [{'type': 'Identifier', 'name': 'len', 'range': [296, 297], 'children': []}, {'type': 'Arguments', 'name': 'arguments', 'range': [297, 300], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [298, 299], 'children': []}]}]}, {'type': 'Identifier', 'name': 'num_execs', 'range': [302, 303], 'children': []}]}]}]}, {'type': 'ReturnStatement', 'name': 'return graph_exec_id', 'range': [304, 306], 'children': [{'type': 'Identifier', 'name': 'graph_exec_id', 'range': [305, 306], 'children': []}]}]}]}]}
2025-01-08 09:27:50,007 - INFO - Starting Step 3: AST simplification
2025-01-08 09:28:05,158 - INFO - Step 3 result: {'type': 'Program', 'name': 'assert_sample_graph_executions', 'range': [307, 808], 'children': [{'type': 'FunctionDeclaration', 'name': 'assert_sample_graph_executions', 'range': [307, 808], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [310, 334], 'children': [{'type': 'Parameter', 'name': 'agent_server', 'range': [312, 314], 'children': []}, {'type': 'Parameter', 'name': 'test_graph', 'range': [317, 321], 'children': []}, {'type': 'Parameter', 'name': 'test_user', 'range': [324, 326], 'children': []}, {'type': 'Parameter', 'name': 'graph_exec_id', 'range': [329, 331], 'children': []}]}, {'type': 'BlockStatement', 'name': 'body', 'range': [336, 808], 'children': [{'type': 'ExpressionStatement', 'name': 'logger.info', 'range': [337, 343], 'children': []}, {'type': 'VariableDeclaration', 'name': 'executions', 'range': [345, 366], 'children': []}, {'type': 'VariableDeclaration', 'name': 'output_list', 'range': [369, 387], 'children': []}, {'type': 'VariableDeclaration', 'name': 'input_list', 'range': [389, 423], 'children': []}, {'type': 'Comment', 'name': '# Executing StoreValueBlock', 'range': [426, 429], 'children': []}, {'type': 'ExpressionStatement', 'name': 'exec = executions[0]', 'range': [430, 435], 'children': []}, {'type': 'ExpressionStatement', 'name': 'logger.info', 'range': [437, 443], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.status == execution.ExecutionStatus.COMPLETED', 'range': [445, 456], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.graph_exec_id == graph_exec_id', 'range': [457, 464], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.output_data in output_list', 'range': [465, 478], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.input_data in input_list', 'range': [479, 492], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.node_id in [test_graph.nodes[0].id, test_graph.nodes[1].id]', 'range': [493, 517], 'children': []}, {'type': 'Comment', 'name': '# Executing StoreValueBlock', 'range': [519, 522], 'children': []}, {'type': 'ExpressionStatement', 'name': 'exec = executions[1]', 'range': [523, 528], 'children': []}, {'type': 'ExpressionStatement', 'name': 'logger.info', 'range': [530, 536], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.status == execution.ExecutionStatus.COMPLETED', 'range': [538, 549], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.graph_exec_id == graph_exec_id', 'range': [550, 557], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.output_data in output_list', 'range': [558, 571], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.input_data in input_list', 'range': [572, 585], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.node_id in [test_graph.nodes[0].id, test_graph.nodes[1].id]', 'range': [586, 610], 'children': []}, {'type': 'Comment', 'name': '# Executing FillTextTemplateBlock', 'range': [612, 615], 'children': []}, {'type': 'ExpressionStatement', 'name': 'exec = executions[2]', 'range': [616, 621], 'children': []}, {'type': 'ExpressionStatement', 'name': 'logger.info', 'range': [623, 629], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.status == execution.ExecutionStatus.COMPLETED', 'range': [631, 642], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.graph_exec_id == graph_exec_id', 'range': [643, 650], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.output_data == {"output": ["Hello, World!!!"]}', 'range': [651, 664], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.input_data == {"format": "{a}, {b}{c}", "values": {"a": "Hello", "b": "World", "c": "!!!"}, "values_#_a": "Hello", "values_#_b": "World", "values_#_c": "!!!"}', 'range': [665, 711], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.node_id == test_graph.nodes[2].id', 'range': [712, 726], 'children': []}, {'type': 'Comment', 'name': '# Executing PrintToConsoleBlock', 'range': [728, 731], 'children': []}, {'type': 'ExpressionStatement', 'name': 'exec = executions[3]', 'range': [732, 737], 'children': []}, {'type': 'ExpressionStatement', 'name': 'logger.info', 'range': [739, 745], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.status == execution.ExecutionStatus.COMPLETED', 'range': [747, 758], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.graph_exec_id == graph_exec_id', 'range': [759, 766], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.output_data == {"status": ["printed"]}', 'range': [767, 780], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.input_data == {"text": "Hello, World!!!"}', 'range': [781, 792], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.node_id == test_graph.nodes[3].id', 'range': [793, 807], 'children': []}]}]}]}
2025-01-08 09:28:05,159 - INFO - Starting Step 4: AST normalization
2025-01-08 09:28:13,110 - INFO - Step 4 result: {'nodes': [{'type': 'ImportDeclaration', 'name': 'logging', 'range': [0, 1], 'children': [{'type': 'ImportSpecifier', 'name': 'logging', 'range': [0, 1], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'pytest', 'range': [4, 5], 'children': [{'type': 'ImportSpecifier', 'name': 'pytest', 'range': [4, 5], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'User', 'range': [7, 12], 'children': [{'type': 'ImportSpecifier', 'name': 'User', 'range': [11, 12], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'FindInDictionaryBlock, StoreValueBlock', 'range': [15, 24], 'children': [{'type': 'ImportSpecifier', 'name': 'FindInDictionaryBlock', 'range': [22, 23], 'children': []}, {'type': 'ImportSpecifier', 'name': 'StoreValueBlock', 'range': [24, 25], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'CalculatorBlock, Operation', 'range': [26, 35], 'children': [{'type': 'ImportSpecifier', 'name': 'CalculatorBlock', 'range': [33, 34], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Operation', 'range': [35, 36], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'execution, graph', 'range': [37, 44], 'children': [{'type': 'ImportSpecifier', 'name': 'execution', 'range': [42, 43], 'children': []}, {'type': 'ImportSpecifier', 'name': 'graph', 'range': [44, 45], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'CreateGraph', 'range': [46, 53], 'children': [{'type': 'ImportSpecifier', 'name': 'CreateGraph', 'range': [53, 54], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'AgentServer', 'range': [55, 62], 'children': [{'type': 'ImportSpecifier', 'name': 'AgentServer', 'range': [62, 63], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'create_test_graph, create_test_user', 'range': [64, 73], 'children': [{'type': 'ImportSpecifier', 'name': 'create_test_graph', 'range': [71, 72], 'children': []}, {'type': 'ImportSpecifier', 'name': 'create_test_user', 'range': [73, 74], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'SpinTestServer, wait_execution', 'range': [75, 84], 'children': [{'type': 'ImportSpecifier', 'name': 'SpinTestServer', 'range': [82, 83], 'children': []}, {'type': 'ImportSpecifier', 'name': 'wait_execution', 'range': [84, 85], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'logger', 'range': [87, 95], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [88, 89], 'children': [{'type': 'CallExpression', 'name': 'getLogger', 'range': [91, 94], 'children': [{'type': 'Identifier', 'name': '__name__', 'range': [93, 94], 'children': []}]}]}]}]}
2025-01-08 09:28:13,110 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:28:31,798 - INFO - Step 5 result: {'type': 'Program', 'name': 'create_graph', 'range': [96, 148], 'children': [{'type': 'FunctionDecl', 'name': 'create_graph', 'range': [96, 148], 'children': [{'type': 'AsyncKeyword', 'name': 'async', 'range': [96, 100], 'children': []}, {'type': 'DefKeyword', 'name': 'def', 'range': [97, 100], 'children': []}, {'type': 'Identifier', 'name': 'create_graph', 'range': [98, 110], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [99, 113], 'children': [{'type': 'Parameter', 'name': 's', 'range': [100, 102], 'children': [{'type': 'TypeAnnotation', 'name': 'SpinTestServer', 'range': [102, 115], 'children': []}]}, {'type': 'Parameter', 'name': 'g', 'range': [104, 106], 'children': [{'type': 'TypeAnnotation', 'name': 'graph.Graph', 'range': [106, 115], 'children': []}]}, {'type': 'Parameter', 'name': 'u', 'range': [110, 112], 'children': [{'type': 'TypeAnnotation', 'name': 'User', 'range': [112, 115], 'children': []}]}]}, {'type': 'ReturnType', 'name': 'graph.Graph', 'range': [116, 119], 'children': []}, {'type': 'BlockStatement', 'name': 'body', 'range': [120, 148], 'children': [{'type': 'ExpressionStatement', 'name': 'logger.info', 'range': [121, 127], 'children': [{'type': 'CallExpression', 'name': 'info', 'range': [123, 127], 'children': [{'type': 'Literal', 'name': 'f"Creating graph for user {u.id}"', 'range': [125, 126], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [129, 148], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [130, 135], 'children': [{'type': 'CallExpression', 'name': 'test_create_graph', 'range': [133, 147], 'children': [{'type': 'Identifier', 'name': 'CreateGraph', 'range': [137, 142], 'children': []}, {'type': 'MemberExpression', 'name': 'u.id', 'range': [144, 146], 'children': [{'type': 'Identifier', 'name': 'u', 'range': [144, 145], 'children': []}, {'type': 'Identifier', 'name': 'id', 'range': [145, 146], 'children': []}]}]}]}]}]}]}]}
2025-01-08 09:28:31,799 - INFO - Completed main AST analysis flow
2025-01-08 09:28:31,800 - INFO - Successfully processed chunk
2025-01-08 09:28:36,117 - INFO - Step 5 result: {'type': 'Program', 'name': 'test_input_pin_always_waited', 'range': [931, 1308], 'children': [{'type': 'FunctionDecl', 'name': 'test_input_pin_always_waited', 'range': [931, 1308], 'children': [{'type': 'Decorator', 'name': '@pytest.mark.asyncio', 'range': [919, 929], 'children': []}, {'type': 'FunctionSignature', 'name': 'test_input_pin_always_waited', 'range': [931, 938], 'children': [{'type': 'Parameter', 'name': 'server', 'range': [935, 937], 'children': []}]}, {'type': 'FunctionBody', 'name': '', 'range': [939, 1308], 'children': [{'type': 'Docstring', 'name': '', 'range': [941, 944], 'children': []}, {'type': 'ExpressionStatement', 'name': 'CallExpression', 'range': [946, 951], 'children': [{'type': 'Identifier', 'name': 'logger.info', 'range': [946, 951], 'children': []}]}, {'type': 'VariableDecl', 'name': 'nodes', 'range': [953, 1048], 'children': []}, {'type': 'VariableDecl', 'name': 'links', 'range': [1050, 1130], 'children': []}, {'type': 'VariableDecl', 'name': 'test_graph', 'range': [1132, 1159], 'children': []}, {'type': 'VariableDecl', 'name': 'test_user', 'range': [1161, 1167], 'children': []}, {'type': 'VariableDecl', 'name': 'test_graph', 'range': [1168, 1178], 'children': []}, {'type': 'VariableDecl', 'name': 'graph_exec_id', 'range': [1180, 1199], 'children': []}, {'type': 'ExpressionStatement', 'name': 'CallExpression', 'range': [1202, 1207], 'children': [{'type': 'Identifier', 'name': 'logger.info', 'range': [1202, 1207], 'children': []}]}, {'type': 'VariableDecl', 'name': 'executions', 'range': [1209, 1229], 'children': []}, {'type': 'AssertStatement', 'name': 'assert len(executions) == 3', 'range': [1231, 1239], 'children': []}, {'type': 'Comment', 'name': '# FindInDictionaryBlock should wait for the input pin to be provided,', 'range': [1240, 1252], 'children': []}, {'type': 'Comment', 'name': '# Hence executing extraction of "key" from {"key1": "value1", "key2": "value2"}', 'range': [1253, 1269], 'children': []}, {'type': 'AssertStatement', 'name': 'assert executions[2].status == execution.ExecutionStatus.COMPLETED', 'range': [1270, 1284], 'children': []}, {'type': 'AssertStatement', 'name': 'assert executions[2].output_data == {"output": ["value2"]}', 'range': [1285, 1301], 'children': []}, {'type': 'ExpressionStatement', 'name': 'CallExpression', 'range': [1302, 1307], 'children': [{'type': 'Identifier', 'name': 'logger.info', 'range': [1302, 1307], 'children': []}]}]}]}]}
2025-01-08 09:28:36,118 - INFO - Completed main AST analysis flow
2025-01-08 09:28:36,119 - INFO - Successfully processed chunk
2025-01-08 09:28:50,840 - INFO - Step 5 result: {'nodes': [{'type': 'Program', 'name': 'MainOrSomething', 'range': [0, 95], 'children': [{'type': 'ImportDeclaration', 'name': 'logging', 'range': [0, 1], 'children': [{'type': 'ImportSpecifier', 'name': 'logging', 'range': [0, 1], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'pytest', 'range': [4, 5], 'children': [{'type': 'ImportSpecifier', 'name': 'pytest', 'range': [4, 5], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'User', 'range': [7, 12], 'children': [{'type': 'ImportSpecifier', 'name': 'User', 'range': [11, 12], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'FindInDictionaryBlock, StoreValueBlock', 'range': [15, 24], 'children': [{'type': 'ImportSpecifier', 'name': 'FindInDictionaryBlock', 'range': [22, 23], 'children': []}, {'type': 'ImportSpecifier', 'name': 'StoreValueBlock', 'range': [24, 25], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'CalculatorBlock, Operation', 'range': [26, 35], 'children': [{'type': 'ImportSpecifier', 'name': 'CalculatorBlock', 'range': [33, 34], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Operation', 'range': [35, 36], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'execution, graph', 'range': [37, 44], 'children': [{'type': 'ImportSpecifier', 'name': 'execution', 'range': [42, 43], 'children': []}, {'type': 'ImportSpecifier', 'name': 'graph', 'range': [44, 45], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'CreateGraph', 'range': [46, 53], 'children': [{'type': 'ImportSpecifier', 'name': 'CreateGraph', 'range': [53, 54], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'AgentServer', 'range': [55, 62], 'children': [{'type': 'ImportSpecifier', 'name': 'AgentServer', 'range': [62, 63], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'create_test_graph, create_test_user', 'range': [64, 73], 'children': [{'type': 'ImportSpecifier', 'name': 'create_test_graph', 'range': [71, 72], 'children': []}, {'type': 'ImportSpecifier', 'name': 'create_test_user', 'range': [73, 74], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'SpinTestServer, wait_execution', 'range': [75, 84], 'children': [{'type': 'ImportSpecifier', 'name': 'SpinTestServer', 'range': [82, 83], 'children': []}, {'type': 'ImportSpecifier', 'name': 'wait_execution', 'range': [84, 85], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'logger', 'range': [87, 95], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [88, 89], 'children': [{'type': 'CallExpression', 'name': 'getLogger', 'range': [91, 94], 'children': [{'type': 'Identifier', 'name': '__name__', 'range': [93, 94], 'children': []}]}]}]}]}]}
2025-01-08 09:28:50,840 - INFO - Completed main AST analysis flow
2025-01-08 09:28:50,840 - INFO - Successfully processed chunk
2025-01-08 09:29:04,958 - INFO - Step 4 result: {'type': 'Program', 'name': 'assert_sample_graph_executions', 'range': [307, 808], 'children': [{'type': 'FunctionDecl', 'name': 'assert_sample_graph_executions', 'range': [307, 808], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [310, 334], 'children': [{'type': 'Parameter', 'name': 'agent_server', 'range': [312, 314], 'children': []}, {'type': 'Parameter', 'name': 'test_graph', 'range': [317, 321], 'children': []}, {'type': 'Parameter', 'name': 'test_user', 'range': [324, 326], 'children': []}, {'type': 'Parameter', 'name': 'graph_exec_id', 'range': [329, 331], 'children': []}]}, {'type': 'BlockStatement', 'name': 'body', 'range': [336, 808], 'children': [{'type': 'ExpressionStatement', 'name': 'logger.info', 'range': [337, 343], 'children': []}, {'type': 'VariableDeclaration', 'name': 'executions', 'range': [345, 366], 'children': []}, {'type': 'VariableDeclaration', 'name': 'output_list', 'range': [369, 387], 'children': []}, {'type': 'VariableDeclaration', 'name': 'input_list', 'range': [389, 423], 'children': []}, {'type': 'Comment', 'name': '# Executing StoreValueBlock', 'range': [426, 429], 'children': []}, {'type': 'ExpressionStatement', 'name': 'exec = executions[0]', 'range': [430, 435], 'children': []}, {'type': 'ExpressionStatement', 'name': 'logger.info', 'range': [437, 443], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.status == execution.ExecutionStatus.COMPLETED', 'range': [445, 456], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.graph_exec_id == graph_exec_id', 'range': [457, 464], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.output_data in output_list', 'range': [465, 478], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.input_data in input_list', 'range': [479, 492], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.node_id in [test_graph.nodes[0].id, test_graph.nodes[1].id]', 'range': [493, 517], 'children': []}, {'type': 'Comment', 'name': '# Executing StoreValueBlock', 'range': [519, 522], 'children': []}, {'type': 'ExpressionStatement', 'name': 'exec = executions[1]', 'range': [523, 528], 'children': []}, {'type': 'ExpressionStatement', 'name': 'logger.info', 'range': [530, 536], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.status == execution.ExecutionStatus.COMPLETED', 'range': [538, 549], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.graph_exec_id == graph_exec_id', 'range': [550, 557], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.output_data in output_list', 'range': [558, 571], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.input_data in input_list', 'range': [572, 585], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.node_id in [test_graph.nodes[0].id, test_graph.nodes[1].id]', 'range': [586, 610], 'children': []}, {'type': 'Comment', 'name': '# Executing FillTextTemplateBlock', 'range': [612, 615], 'children': []}, {'type': 'ExpressionStatement', 'name': 'exec = executions[2]', 'range': [616, 621], 'children': []}, {'type': 'ExpressionStatement', 'name': 'logger.info', 'range': [623, 629], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.status == execution.ExecutionStatus.COMPLETED', 'range': [631, 642], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.graph_exec_id == graph_exec_id', 'range': [643, 650], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.output_data == {"output": ["Hello, World!!!"]}', 'range': [651, 664], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.input_data == {"format": "{a}, {b}{c}", "values": {"a": "Hello", "b": "World", "c": "!!!"}, "values_#_a": "Hello", "values_#_b": "World", "values_#_c": "!!!"}', 'range': [665, 711], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.node_id == test_graph.nodes[2].id', 'range': [712, 726], 'children': []}, {'type': 'Comment', 'name': '# Executing PrintToConsoleBlock', 'range': [728, 731], 'children': []}, {'type': 'ExpressionStatement', 'name': 'exec = executions[3]', 'range': [732, 737], 'children': []}, {'type': 'ExpressionStatement', 'name': 'logger.info', 'range': [739, 745], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.status == execution.ExecutionStatus.COMPLETED', 'range': [747, 758], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.graph_exec_id == graph_exec_id', 'range': [759, 766], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.output_data == {"status": ["printed"]}', 'range': [767, 780], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.input_data == {"text": "Hello, World!!!"}', 'range': [781, 792], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.node_id == test_graph.nodes[3].id', 'range': [793, 807], 'children': []}]}]}]}
2025-01-08 09:29:04,958 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:29:49,317 - INFO - Step 3 result: {'type': 'Program', 'name': 'execute_graph', 'range': [149, 306], 'children': [{'type': 'FunctionDeclaration', 'name': 'execute_graph', 'range': [149, 306], 'children': [{'type': 'AsyncKeyword', 'name': 'async', 'range': [149, 153], 'children': []}, {'type': 'DefKeyword', 'name': 'def', 'range': [150, 153], 'children': []}, {'type': 'FunctionName', 'name': 'execute_graph', 'range': [151, 164], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [152, 183], 'children': [{'type': 'Parameter', 'name': 'agent_server', 'range': [154, 156], 'children': []}, {'type': 'TypeAnnotation', 'name': 'AgentServer', 'range': [156, 168], 'children': []}, {'type': 'Parameter', 'name': 'test_graph', 'range': [159, 161], 'children': []}, {'type': 'TypeAnnotation', 'name': 'graph.Graph', 'range': [161, 173], 'children': []}, {'type': 'Parameter', 'name': 'test_user', 'range': [166, 168], 'children': []}, {'type': 'TypeAnnotation', 'name': 'User', 'range': [168, 173], 'children': []}, {'type': 'Parameter', 'name': 'input_data', 'range': [171, 173], 'children': []}, {'type': 'TypeAnnotation', 'name': 'dict', 'range': [173, 178], 'children': []}, {'type': 'Parameter', 'name': 'num_execs', 'range': [176, 178], 'children': []}, {'type': 'TypeAnnotation', 'name': 'int', 'range': [178, 180], 'children': []}, {'type': 'DefaultValue', 'name': '4', 'range': [180, 183], 'children': []}]}, {'type': 'ReturnType', 'name': 'str', 'range': [184, 187], 'children': []}, {'type': 'FunctionBody', 'name': 'body', 'range': [188, 306], 'children': [{'type': 'ExpressionStatement', 'name': 'logger.info', 'range': [189, 196], 'children': [{'type': 'CallExpression', 'name': 'logger.info', 'range': [189, 196], 'children': [{'type': 'MemberExpression', 'name': 'logger.info', 'range': [189, 192], 'children': [{'type': 'Identifier', 'name': 'logger', 'range': [189, 190], 'children': []}, {'type': 'Property', 'name': 'info', 'range': [190, 192], 'children': []}]}, {'type': 'TemplateLiteral', 'name': 'f"Executing graph {test_graph.id} for user {test_user.id}"', 'range': [193, 195], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'logger.info', 'range': [197, 204], 'children': [{'type': 'CallExpression', 'name': 'logger.info', 'range': [197, 204], 'children': [{'type': 'MemberExpression', 'name': 'logger.info', 'range': [197, 200], 'children': [{'type': 'Identifier', 'name': 'logger', 'range': [197, 198], 'children': []}, {'type': 'Property', 'name': 'info', 'range': [198, 200], 'children': []}]}, {'type': 'TemplateLiteral', 'name': 'f"Input data: {input_data}"', 'range': [201, 203], 'children': []}]}]}, {'type': 'Comment', 'name': '#---Test adding new executions---#', 'range': [206, 218], 'children': []}, {'type': 'VariableDeclaration', 'name': 'response', 'range': [219, 238], 'children': [{'type': 'AssignmentExpression', 'name': 'response = await agent_server.test_execute_graph', 'range': [219, 238], 'children': [{'type': 'Identifier', 'name': 'response', 'range': [219, 220], 'children': []}, {'type': 'AwaitExpression', 'name': 'await agent_server.test_execute_graph', 'range': [221, 238], 'children': [{'type': 'CallExpression', 'name': 'agent_server.test_execute_graph', 'range': [222, 238], 'children': [{'type': 'MemberExpression', 'name': 'agent_server.test_execute_graph', 'range': [222, 225], 'children': [{'type': 'Identifier', 'name': 'agent_server', 'range': [222, 223], 'children': []}, {'type': 'Property', 'name': 'test_execute_graph', 'range': [223, 225], 'children': []}]}, {'type': 'Arguments', 'name': 'arguments', 'range': [225, 237], 'children': [{'type': 'Identifier', 'name': 'test_graph.id', 'range': [227, 230], 'children': []}, {'type': 'Identifier', 'name': 'input_data', 'range': [231, 232], 'children': []}, {'type': 'Identifier', 'name': 'test_user.id', 'range': [233, 236], 'children': []}]}]}]}]}]}, {'type': 'VariableDeclaration', 'name': 'graph_exec_id', 'range': [239, 245], 'children': [{'type': 'AssignmentExpression', 'name': 'graph_exec_id = response["id"]', 'range': [239, 245], 'children': [{'type': 'Identifier', 'name': 'graph_exec_id', 'range': [239, 240], 'children': []}, {'type': 'MemberExpression', 'name': 'response["id"]', 'range': [241, 245], 'children': [{'type': 'Identifier', 'name': 'response', 'range': [241, 242], 'children': []}, {'type': 'Property', 'name': '"id"', 'range': [242, 245], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': 'logger.info', 'range': [246, 253], 'children': [{'type': 'CallExpression', 'name': 'logger.info', 'range': [246, 253], 'children': [{'type': 'MemberExpression', 'name': 'logger.info', 'range': [246, 249], 'children': [{'type': 'Identifier', 'name': 'logger', 'range': [246, 247], 'children': []}, {'type': 'Property', 'name': 'info', 'range': [247, 249], 'children': []}]}, {'type': 'TemplateLiteral', 'name': 'f"Created execution with ID: {graph_exec_id}"', 'range': [250, 252], 'children': []}]}]}, {'type': 'Comment', 'name': '#Execution queue should be empty', 'range': [255, 261], 'children': []}, {'type': 'ExpressionStatement', 'name': 'logger.info', 'range': [262, 268], 'children': [{'type': 'CallExpression', 'name': 'logger.info', 'range': [262, 268], 'children': [{'type': 'MemberExpression', 'name': 'logger.info', 'range': [262, 265], 'children': [{'type': 'Identifier', 'name': 'logger', 'range': [262, 263], 'children': []}, {'type': 'Property', 'name': 'info', 'range': [263, 265], 'children': []}]}, {'type': 'StringLiteral', 'name': '"Waiting for execution to complete..."', 'range': [266, 267], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'result', 'range': [269, 284], 'children': [{'type': 'AssignmentExpression', 'name': 'result = await wait_execution', 'range': [269, 284], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [269, 270], 'children': []}, {'type': 'AwaitExpression', 'name': 'await wait_execution', 'range': [271, 284], 'children': [{'type': 'CallExpression', 'name': 'wait_execution', 'range': [272, 284], 'children': [{'type': 'Identifier', 'name': 'wait_execution', 'range': [272, 273], 'children': []}, {'type': 'Arguments', 'name': 'arguments', 'range': [273, 283], 'children': [{'type': 'Identifier', 'name': 'test_user.id', 'range': [274, 277], 'children': []}, {'type': 'Identifier', 'name': 'test_graph.id', 'range': [278, 281], 'children': []}, {'type': 'Identifier', 'name': 'graph_exec_id', 'range': [282, 283], 'children': []}]}]}]}]}]}, {'type': 'ExpressionStatement', 'name': 'logger.info', 'range': [285, 292], 'children': [{'type': 'CallExpression', 'name': 'logger.info', 'range': [285, 292], 'children': [{'type': 'MemberExpression', 'name': 'logger.info', 'range': [285, 288], 'children': [{'type': 'Identifier', 'name': 'logger', 'range': [285, 286], 'children': []}, {'type': 'Property', 'name': 'info', 'range': [286, 288], 'children': []}]}, {'type': 'TemplateLiteral', 'name': 'f"Execution completed with {len(result)} results"', 'range': [289, 291], 'children': []}]}]}, {'type': 'AssertStatement', 'name': 'assert result and len(result) == num_execs', 'range': [293, 303], 'children': [{'type': 'LogicalExpression', 'name': 'result and len(result) == num_execs', 'range': [294, 303], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [294, 295], 'children': []}, {'type': 'BinaryExpression', 'name': 'len(result) == num_execs', 'range': [296, 303], 'children': [{'type': 'CallExpression', 'name': 'len(result)', 'range': [296, 300], 'children': [{'type': 'Identifier', 'name': 'len', 'range': [296, 297], 'children': []}, {'type': 'Arguments', 'name': 'arguments', 'range': [297, 300], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [298, 299], 'children': []}]}]}, {'type': 'Identifier', 'name': 'num_execs', 'range': [302, 303], 'children': []}]}]}]}, {'type': 'ReturnStatement', 'name': 'return graph_exec_id', 'range': [304, 306], 'children': [{'type': 'Identifier', 'name': 'graph_exec_id', 'range': [305, 306], 'children': []}]}]}]}]}
2025-01-08 09:29:49,317 - INFO - Starting Step 4: AST normalization
2025-01-08 09:30:01,811 - ERROR - Failed to parse Step 2 result
2025-01-08 09:30:01,812 - INFO - Starting Step 3: AST simplification
2025-01-08 09:30:07,176 - INFO - Step 5 result: {'type': 'Program', 'name': 'assert_sample_graph_executions', 'range': [307, 808], 'children': [{'type': 'FunctionDecl', 'name': 'assert_sample_graph_executions', 'range': [307, 808], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [310, 334], 'children': [{'type': 'Parameter', 'name': 'agent_server', 'range': [312, 314], 'children': []}, {'type': 'Parameter', 'name': 'test_graph', 'range': [317, 321], 'children': []}, {'type': 'Parameter', 'name': 'test_user', 'range': [324, 326], 'children': []}, {'type': 'Parameter', 'name': 'graph_exec_id', 'range': [329, 331], 'children': []}]}, {'type': 'BlockStatement', 'name': 'body', 'range': [336, 808], 'children': [{'type': 'ExpressionStatement', 'name': 'logger.info', 'range': [337, 343], 'children': []}, {'type': 'VariableDeclaration', 'name': 'executions', 'range': [345, 366], 'children': []}, {'type': 'VariableDeclaration', 'name': 'output_list', 'range': [369, 387], 'children': []}, {'type': 'VariableDeclaration', 'name': 'input_list', 'range': [389, 423], 'children': []}, {'type': 'Comment', 'name': '# Executing StoreValueBlock', 'range': [426, 429], 'children': []}, {'type': 'ExpressionStatement', 'name': 'exec = executions[0]', 'range': [430, 435], 'children': []}, {'type': 'ExpressionStatement', 'name': 'logger.info', 'range': [437, 443], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.status == execution.ExecutionStatus.COMPLETED', 'range': [445, 456], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.graph_exec_id == graph_exec_id', 'range': [457, 464], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.output_data in output_list', 'range': [465, 478], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.input_data in input_list', 'range': [479, 492], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.node_id in [test_graph.nodes[0].id, test_graph.nodes[1].id]', 'range': [493, 517], 'children': []}, {'type': 'Comment', 'name': '# Executing StoreValueBlock', 'range': [519, 522], 'children': []}, {'type': 'ExpressionStatement', 'name': 'exec = executions[1]', 'range': [523, 528], 'children': []}, {'type': 'ExpressionStatement', 'name': 'logger.info', 'range': [530, 536], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.status == execution.ExecutionStatus.COMPLETED', 'range': [538, 549], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.graph_exec_id == graph_exec_id', 'range': [550, 557], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.output_data in output_list', 'range': [558, 571], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.input_data in input_list', 'range': [572, 585], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.node_id in [test_graph.nodes[0].id, test_graph.nodes[1].id]', 'range': [586, 610], 'children': []}, {'type': 'Comment', 'name': '# Executing FillTextTemplateBlock', 'range': [612, 615], 'children': []}, {'type': 'ExpressionStatement', 'name': 'exec = executions[2]', 'range': [616, 621], 'children': []}, {'type': 'ExpressionStatement', 'name': 'logger.info', 'range': [623, 629], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.status == execution.ExecutionStatus.COMPLETED', 'range': [631, 642], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.graph_exec_id == graph_exec_id', 'range': [643, 650], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.output_data == {"output": ["Hello, World!!!"]}', 'range': [651, 664], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.input_data == {"format": "{a}, {b}{c}", "values": {"a": "Hello", "b": "World", "c": "!!!"}, "values_#_a": "Hello", "values_#_b": "World", "values_#_c": "!!!"}', 'range': [665, 711], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.node_id == test_graph.nodes[2].id', 'range': [712, 726], 'children': []}, {'type': 'Comment', 'name': '# Executing PrintToConsoleBlock', 'range': [728, 731], 'children': []}, {'type': 'ExpressionStatement', 'name': 'exec = executions[3]', 'range': [732, 737], 'children': []}, {'type': 'ExpressionStatement', 'name': 'logger.info', 'range': [739, 745], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.status == execution.ExecutionStatus.COMPLETED', 'range': [747, 758], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.graph_exec_id == graph_exec_id', 'range': [759, 766], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.output_data == {"status": ["printed"]}', 'range': [767, 780], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.input_data == {"text": "Hello, World!!!"}', 'range': [781, 792], 'children': []}, {'type': 'AssertStatement', 'name': 'assert exec.node_id == test_graph.nodes[3].id', 'range': [793, 807], 'children': []}]}]}]}
2025-01-08 09:30:07,177 - INFO - Completed main AST analysis flow
2025-01-08 09:30:07,178 - INFO - Successfully processed chunk
2025-01-08 09:31:37,208 - INFO - Step 4 result: {'type': 'Program', 'name': 'execute_graph', 'range': [149, 306], 'children': [{'type': 'FunctionDecl', 'name': 'execute_graph', 'range': [149, 306], 'children': [{'type': 'AsyncKeyword', 'name': 'async', 'range': [149, 153], 'children': []}, {'type': 'DefKeyword', 'name': 'def', 'range': [150, 153], 'children': []}, {'type': 'FunctionName', 'name': 'execute_graph', 'range': [151, 164], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [152, 183], 'children': [{'type': 'Parameter', 'name': 'agent_server', 'range': [154, 156], 'children': []}, {'type': 'TypeAnnotation', 'name': 'AgentServer', 'range': [156, 168], 'children': []}, {'type': 'Parameter', 'name': 'test_graph', 'range': [159, 161], 'children': []}, {'type': 'TypeAnnotation', 'name': 'graph.Graph', 'range': [161, 173], 'children': []}, {'type': 'Parameter', 'name': 'test_user', 'range': [166, 168], 'children': []}, {'type': 'TypeAnnotation', 'name': 'User', 'range': [168, 173], 'children': []}, {'type': 'Parameter', 'name': 'input_data', 'range': [171, 173], 'children': []}, {'type': 'TypeAnnotation', 'name': 'dict', 'range': [173, 178], 'children': []}, {'type': 'Parameter', 'name': 'num_execs', 'range': [176, 178], 'children': []}, {'type': 'TypeAnnotation', 'name': 'int', 'range': [178, 180], 'children': []}, {'type': 'DefaultValue', 'name': '4', 'range': [180, 183], 'children': []}]}, {'type': 'ReturnType', 'name': 'str', 'range': [184, 187], 'children': []}, {'type': 'FunctionBody', 'name': 'body', 'range': [188, 306], 'children': [{'type': 'ExpressionStatement', 'name': 'logger.info', 'range': [189, 196], 'children': [{'type': 'CallExpression', 'name': 'logger.info', 'range': [189, 196], 'children': [{'type': 'MemberExpression', 'name': 'logger.info', 'range': [189, 192], 'children': [{'type': 'Identifier', 'name': 'logger', 'range': [189, 190], 'children': []}, {'type': 'Property', 'name': 'info', 'range': [190, 192], 'children': []}]}, {'type': 'TemplateLiteral', 'name': 'f"Executing graph {test_graph.id} for user {test_user.id}"', 'range': [193, 195], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'logger.info', 'range': [197, 204], 'children': [{'type': 'CallExpression', 'name': 'logger.info', 'range': [197, 204], 'children': [{'type': 'MemberExpression', 'name': 'logger.info', 'range': [197, 200], 'children': [{'type': 'Identifier', 'name': 'logger', 'range': [197, 198], 'children': []}, {'type': 'Property', 'name': 'info', 'range': [198, 200], 'children': []}]}, {'type': 'TemplateLiteral', 'name': 'f"Input data: {input_data}"', 'range': [201, 203], 'children': []}]}]}, {'type': 'Comment', 'name': '#---Test adding new executions---#', 'range': [206, 218], 'children': []}, {'type': 'VariableDeclaration', 'name': 'response', 'range': [219, 238], 'children': [{'type': 'AssignmentExpression', 'name': 'response = await agent_server.test_execute_graph', 'range': [219, 238], 'children': [{'type': 'Identifier', 'name': 'response', 'range': [219, 220], 'children': []}, {'type': 'AwaitExpression', 'name': 'await agent_server.test_execute_graph', 'range': [221, 238], 'children': [{'type': 'CallExpression', 'name': 'agent_server.test_execute_graph', 'range': [222, 238], 'children': [{'type': 'MemberExpression', 'name': 'agent_server.test_execute_graph', 'range': [222, 225], 'children': [{'type': 'Identifier', 'name': 'agent_server', 'range': [222, 223], 'children': []}, {'type': 'Property', 'name': 'test_execute_graph', 'range': [223, 225], 'children': []}]}, {'type': 'Arguments', 'name': 'arguments', 'range': [225, 237], 'children': [{'type': 'Identifier', 'name': 'test_graph.id', 'range': [227, 230], 'children': []}, {'type': 'Identifier', 'name': 'input_data', 'range': [231, 232], 'children': []}, {'type': 'Identifier', 'name': 'test_user.id', 'range': [233, 236], 'children': []}]}]}]}]}]}, {'type': 'VariableDeclaration', 'name': 'graph_exec_id', 'range': [239, 245], 'children': [{'type': 'AssignmentExpression', 'name': 'graph_exec_id = response["id"]', 'range': [239, 245], 'children': [{'type': 'Identifier', 'name': 'graph_exec_id', 'range': [239, 240], 'children': []}, {'type': 'MemberExpression', 'name': 'response["id"]', 'range': [241, 245], 'children': [{'type': 'Identifier', 'name': 'response', 'range': [241, 242], 'children': []}, {'type': 'Property', 'name': '"id"', 'range': [242, 245], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': 'logger.info', 'range': [246, 253], 'children': [{'type': 'CallExpression', 'name': 'logger.info', 'range': [246, 253], 'children': [{'type': 'MemberExpression', 'name': 'logger.info', 'range': [246, 249], 'children': [{'type': 'Identifier', 'name': 'logger', 'range': [246, 247], 'children': []}, {'type': 'Property', 'name': 'info', 'range': [247, 249], 'children': []}]}, {'type': 'TemplateLiteral', 'name': 'f"Created execution with ID: {graph_exec_id}"', 'range': [250, 252], 'children': []}]}]}, {'type': 'Comment', 'name': '#Execution queue should be empty', 'range': [255, 261], 'children': []}, {'type': 'ExpressionStatement', 'name': 'logger.info', 'range': [262, 268], 'children': [{'type': 'CallExpression', 'name': 'logger.info', 'range': [262, 268], 'children': [{'type': 'MemberExpression', 'name': 'logger.info', 'range': [262, 265], 'children': [{'type': 'Identifier', 'name': 'logger', 'range': [262, 263], 'children': []}, {'type': 'Property', 'name': 'info', 'range': [263, 265], 'children': []}]}, {'type': 'StringLiteral', 'name': '"Waiting for execution to complete..."', 'range': [266, 267], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'result', 'range': [269, 284], 'children': [{'type': 'AssignmentExpression', 'name': 'result = await wait_execution', 'range': [269, 284], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [269, 270], 'children': []}, {'type': 'AwaitExpression', 'name': 'await wait_execution', 'range': [271, 284], 'children': [{'type': 'CallExpression', 'name': 'wait_execution', 'range': [272, 284], 'children': [{'type': 'Identifier', 'name': 'wait_execution', 'range': [272, 273], 'children': []}, {'type': 'Arguments', 'name': 'arguments', 'range': [273, 283], 'children': [{'type': 'Identifier', 'name': 'test_user.id', 'range': [274, 277], 'children': []}, {'type': 'Identifier', 'name': 'test_graph.id', 'range': [278, 281], 'children': []}, {'type': 'Identifier', 'name': 'graph_exec_id', 'range': [282, 283], 'children': []}]}]}]}]}]}, {'type': 'ExpressionStatement', 'name': 'logger.info', 'range': [285, 292], 'children': [{'type': 'CallExpression', 'name': 'logger.info', 'range': [285, 292], 'children': [{'type': 'MemberExpression', 'name': 'logger.info', 'range': [285, 288], 'children': [{'type': 'Identifier', 'name': 'logger', 'range': [285, 286], 'children': []}, {'type': 'Property', 'name': 'info', 'range': [286, 288], 'children': []}]}, {'type': 'TemplateLiteral', 'name': 'f"Execution completed with {len(result)} results"', 'range': [289, 291], 'children': []}]}]}, {'type': 'AssertStatement', 'name': 'assert result and len(result) == num_execs', 'range': [293, 303], 'children': [{'type': 'LogicalExpression', 'name': 'result and len(result) == num_execs', 'range': [294, 303], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [294, 295], 'children': []}, {'type': 'BinaryExpression', 'name': 'len(result) == num_execs', 'range': [296, 303], 'children': [{'type': 'CallExpression', 'name': 'len(result)', 'range': [296, 300], 'children': [{'type': 'Identifier', 'name': 'len', 'range': [296, 297], 'children': []}, {'type': 'Arguments', 'name': 'arguments', 'range': [297, 300], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [298, 299], 'children': []}]}]}, {'type': 'Identifier', 'name': 'num_execs', 'range': [302, 303], 'children': []}]}]}]}, {'type': 'ReturnStatement', 'name': 'return graph_exec_id', 'range': [304, 306], 'children': [{'type': 'Identifier', 'name': 'graph_exec_id', 'range': [305, 306], 'children': []}]}]}]}]}
2025-01-08 09:31:37,208 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:33:25,760 - INFO - Step 5 result: {'type': 'Program', 'name': 'execute_graph', 'range': [149, 306], 'children': [{'type': 'FunctionDecl', 'name': 'execute_graph', 'range': [149, 306], 'children': [{'type': 'AsyncKeyword', 'name': 'async', 'range': [149, 153], 'children': []}, {'type': 'DefKeyword', 'name': 'def', 'range': [150, 153], 'children': []}, {'type': 'FunctionName', 'name': 'execute_graph', 'range': [151, 164], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [152, 183], 'children': [{'type': 'Parameter', 'name': 'agent_server', 'range': [154, 156], 'children': []}, {'type': 'TypeAnnotation', 'name': 'AgentServer', 'range': [156, 168], 'children': []}, {'type': 'Parameter', 'name': 'test_graph', 'range': [159, 161], 'children': []}, {'type': 'TypeAnnotation', 'name': 'graph.Graph', 'range': [161, 173], 'children': []}, {'type': 'Parameter', 'name': 'test_user', 'range': [166, 168], 'children': []}, {'type': 'TypeAnnotation', 'name': 'User', 'range': [168, 173], 'children': []}, {'type': 'Parameter', 'name': 'input_data', 'range': [171, 173], 'children': []}, {'type': 'TypeAnnotation', 'name': 'dict', 'range': [173, 178], 'children': []}, {'type': 'Parameter', 'name': 'num_execs', 'range': [176, 178], 'children': []}, {'type': 'TypeAnnotation', 'name': 'int', 'range': [178, 180], 'children': []}, {'type': 'DefaultValue', 'name': '4', 'range': [180, 183], 'children': []}]}, {'type': 'ReturnType', 'name': 'str', 'range': [184, 187], 'children': []}, {'type': 'FunctionBody', 'name': 'body', 'range': [188, 306], 'children': [{'type': 'ExpressionStatement', 'name': 'logger.info', 'range': [189, 196], 'children': [{'type': 'CallExpression', 'name': 'logger.info', 'range': [189, 196], 'children': [{'type': 'MemberExpression', 'name': 'logger.info', 'range': [189, 192], 'children': [{'type': 'Identifier', 'name': 'logger', 'range': [189, 190], 'children': []}, {'type': 'Property', 'name': 'info', 'range': [190, 192], 'children': []}]}, {'type': 'TemplateLiteral', 'name': 'f"Executing graph {test_graph.id} for user {test_user.id}"', 'range': [193, 195], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'logger.info', 'range': [197, 204], 'children': [{'type': 'CallExpression', 'name': 'logger.info', 'range': [197, 204], 'children': [{'type': 'MemberExpression', 'name': 'logger.info', 'range': [197, 200], 'children': [{'type': 'Identifier', 'name': 'logger', 'range': [197, 198], 'children': []}, {'type': 'Property', 'name': 'info', 'range': [198, 200], 'children': []}]}, {'type': 'TemplateLiteral', 'name': 'f"Input data: {input_data}"', 'range': [201, 203], 'children': []}]}]}, {'type': 'Comment', 'name': '#---Test adding new executions---#', 'range': [206, 218], 'children': []}, {'type': 'VariableDeclaration', 'name': 'response', 'range': [219, 238], 'children': [{'type': 'AssignmentExpression', 'name': 'response = await agent_server.test_execute_graph', 'range': [219, 238], 'children': [{'type': 'Identifier', 'name': 'response', 'range': [219, 220], 'children': []}, {'type': 'AwaitExpression', 'name': 'await agent_server.test_execute_graph', 'range': [221, 238], 'children': [{'type': 'CallExpression', 'name': 'agent_server.test_execute_graph', 'range': [222, 238], 'children': [{'type': 'MemberExpression', 'name': 'agent_server.test_execute_graph', 'range': [222, 225], 'children': [{'type': 'Identifier', 'name': 'agent_server', 'range': [222, 223], 'children': []}, {'type': 'Property', 'name': 'test_execute_graph', 'range': [223, 225], 'children': []}]}, {'type': 'Arguments', 'name': 'arguments', 'range': [225, 237], 'children': [{'type': 'Identifier', 'name': 'test_graph.id', 'range': [227, 230], 'children': []}, {'type': 'Identifier', 'name': 'input_data', 'range': [231, 232], 'children': []}, {'type': 'Identifier', 'name': 'test_user.id', 'range': [233, 236], 'children': []}]}]}]}]}]}, {'type': 'VariableDeclaration', 'name': 'graph_exec_id', 'range': [239, 245], 'children': [{'type': 'AssignmentExpression', 'name': 'graph_exec_id = response["id"]', 'range': [239, 245], 'children': [{'type': 'Identifier', 'name': 'graph_exec_id', 'range': [239, 240], 'children': []}, {'type': 'MemberExpression', 'name': 'response["id"]', 'range': [241, 245], 'children': [{'type': 'Identifier', 'name': 'response', 'range': [241, 242], 'children': []}, {'type': 'Property', 'name': '"id"', 'range': [242, 245], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': 'logger.info', 'range': [246, 253], 'children': [{'type': 'CallExpression', 'name': 'logger.info', 'range': [246, 253], 'children': [{'type': 'MemberExpression', 'name': 'logger.info', 'range': [246, 249], 'children': [{'type': 'Identifier', 'name': 'logger', 'range': [246, 247], 'children': []}, {'type': 'Property', 'name': 'info', 'range': [247, 249], 'children': []}]}, {'type': 'TemplateLiteral', 'name': 'f"Created execution with ID: {graph_exec_id}"', 'range': [250, 252], 'children': []}]}]}, {'type': 'Comment', 'name': '#Execution queue should be empty', 'range': [255, 261], 'children': []}, {'type': 'ExpressionStatement', 'name': 'logger.info', 'range': [262, 268], 'children': [{'type': 'CallExpression', 'name': 'logger.info', 'range': [262, 268], 'children': [{'type': 'MemberExpression', 'name': 'logger.info', 'range': [262, 265], 'children': [{'type': 'Identifier', 'name': 'logger', 'range': [262, 263], 'children': []}, {'type': 'Property', 'name': 'info', 'range': [263, 265], 'children': []}]}, {'type': 'StringLiteral', 'name': '"Waiting for execution to complete..."', 'range': [266, 267], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'result', 'range': [269, 284], 'children': [{'type': 'AssignmentExpression', 'name': 'result = await wait_execution', 'range': [269, 284], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [269, 270], 'children': []}, {'type': 'AwaitExpression', 'name': 'await wait_execution', 'range': [271, 284], 'children': [{'type': 'CallExpression', 'name': 'wait_execution', 'range': [272, 284], 'children': [{'type': 'Identifier', 'name': 'wait_execution', 'range': [272, 273], 'children': []}, {'type': 'Arguments', 'name': 'arguments', 'range': [273, 283], 'children': [{'type': 'Identifier', 'name': 'test_user.id', 'range': [274, 277], 'children': []}, {'type': 'Identifier', 'name': 'test_graph.id', 'range': [278, 281], 'children': []}, {'type': 'Identifier', 'name': 'graph_exec_id', 'range': [282, 283], 'children': []}]}]}]}]}]}, {'type': 'ExpressionStatement', 'name': 'logger.info', 'range': [285, 292], 'children': [{'type': 'CallExpression', 'name': 'logger.info', 'range': [285, 292], 'children': [{'type': 'MemberExpression', 'name': 'logger.info', 'range': [285, 288], 'children': [{'type': 'Identifier', 'name': 'logger', 'range': [285, 286], 'children': []}, {'type': 'Property', 'name': 'info', 'range': [286, 288], 'children': []}]}, {'type': 'TemplateLiteral', 'name': 'f"Execution completed with {len(result)} results"', 'range': [289, 291], 'children': []}]}]}, {'type': 'AssertStatement', 'name': 'assert result and len(result) == num_execs', 'range': [293, 303], 'children': [{'type': 'LogicalExpression', 'name': 'result and len(result) == num_execs', 'range': [294, 303], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [294, 295], 'children': []}, {'type': 'BinaryExpression', 'name': 'len(result) == num_execs', 'range': [296, 303], 'children': [{'type': 'CallExpression', 'name': 'len(result)', 'range': [296, 300], 'children': [{'type': 'Identifier', 'name': 'len', 'range': [296, 297], 'children': []}, {'type': 'Arguments', 'name': 'arguments', 'range': [297, 300], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [298, 299], 'children': []}]}]}, {'type': 'Identifier', 'name': 'num_execs', 'range': [302, 303], 'children': []}]}]}]}, {'type': 'ReturnStatement', 'name': 'return graph_exec_id', 'range': [304, 306], 'children': [{'type': 'Identifier', 'name': 'graph_exec_id', 'range': [305, 306], 'children': []}]}]}]}]}
2025-01-08 09:33:25,760 - INFO - Completed main AST analysis flow
2025-01-08 09:33:25,760 - INFO - Successfully processed chunk
2025-01-08 09:34:01,177 - ERROR - Failed to parse Step 3 result
2025-01-08 09:34:01,177 - INFO - Starting Step 4: AST normalization
2025-01-08 09:34:09,869 - INFO - Step 4 result: {'type': 'Program', 'name': 'Main', 'range': [0, 0], 'children': []}
2025-01-08 09:34:09,869 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:34:16,927 - INFO - Step 5 result: {'type': 'Program', 'name': 'Main', 'range': [0, 0], 'children': []}
2025-01-08 09:34:16,927 - INFO - Completed main AST analysis flow
2025-01-08 09:34:16,927 - INFO - Successfully processed chunk
2025-01-08 09:34:16,981 - INFO - Starting code generation from AST
2025-01-08 10:04:18,553 - ERROR - Error in get_code_from_ast: Expecting value: line 30 column 1 (char 29)
2025-01-08 10:04:18,554 - INFO - Starting static code similarity comparison
2025-01-08 10:04:18,560 - INFO - Static similarity result: {'final_score': 21.25, 'length_similarity': 0.0, 'token_similarity': 0.0, 'structure_similarity': 0.0, 'function_similarity': 100, 'complexity_similarity': 12.5, 'variable_similarity': 100}
