2025-01-08 10:27:27,493 - INFO - Processing sample 175
2025-01-08 10:27:27,493 - INFO - Starting Step 0: Splitting code into top-level declarations
2025-01-08 10:27:37,822 - INFO - Successfully split code into 10 top-level declarations
2025-01-08 10:27:41,972 - INFO - Processing chunk #0 (size=749 chars, start_index=0)
2025-01-08 10:27:41,975 - INFO - Processing chunk with 749 chars starting at index 0
2025-01-08 10:27:41,977 - INFO - Starting main AST analysis flow
2025-01-08 10:27:41,977 - INFO - Tokenized code into 133 tokens
2025-01-08 10:27:41,977 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:41,978 - INFO - Processing chunk #1 (size=670 chars, start_index=133)
2025-01-08 10:27:41,978 - INFO - Processing chunk with 670 chars starting at index 133
2025-01-08 10:27:41,978 - INFO - Starting main AST analysis flow
2025-01-08 10:27:41,978 - INFO - Tokenized code into 113 tokens
2025-01-08 10:27:41,978 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:42,359 - INFO - Processing chunk #2 (size=56 chars, start_index=246)
2025-01-08 10:27:42,359 - INFO - Processing chunk with 56 chars starting at index 246
2025-01-08 10:27:42,364 - INFO - Starting main AST analysis flow
2025-01-08 10:27:42,371 - INFO - Tokenized code into 16 tokens
2025-01-08 10:27:42,373 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:51,129 - INFO - Processing chunk #3 (size=82 chars, start_index=262)
2025-01-08 10:27:51,138 - INFO - Processing chunk with 82 chars starting at index 262
2025-01-08 10:27:51,146 - INFO - Starting main AST analysis flow
2025-01-08 10:27:51,146 - INFO - Tokenized code into 25 tokens
2025-01-08 10:27:51,146 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:51,162 - INFO - Processing chunk #4 (size=223 chars, start_index=287)
2025-01-08 10:27:51,171 - INFO - Processing chunk with 223 chars starting at index 287
2025-01-08 10:27:51,174 - INFO - Starting main AST analysis flow
2025-01-08 10:27:51,174 - INFO - Tokenized code into 33 tokens
2025-01-08 10:27:51,174 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:51,175 - INFO - Processing chunk #5 (size=112 chars, start_index=320)
2025-01-08 10:27:51,179 - INFO - Processing chunk #6 (size=347 chars, start_index=339)
2025-01-08 10:27:51,180 - INFO - Processing chunk with 112 chars starting at index 320
2025-01-08 10:27:51,184 - INFO - Processing chunk #7 (size=126 chars, start_index=402)
2025-01-08 10:27:51,184 - INFO - Processing chunk with 347 chars starting at index 339
2025-01-08 10:27:51,186 - INFO - Starting main AST analysis flow
2025-01-08 10:27:51,189 - INFO - Processing chunk #8 (size=349 chars, start_index=430)
2025-01-08 10:27:51,189 - INFO - Processing chunk with 126 chars starting at index 402
2025-01-08 10:27:51,193 - INFO - Processing chunk #9 (size=2646 chars, start_index=510)
2025-01-08 10:27:51,194 - INFO - Starting main AST analysis flow
2025-01-08 10:27:51,195 - INFO - Tokenized code into 19 tokens
2025-01-08 10:27:51,196 - INFO - Processing chunk with 349 chars starting at index 430
2025-01-08 10:27:51,229 - INFO - Starting main AST analysis flow
2025-01-08 10:27:51,207 - INFO - Processing chunk with 2646 chars starting at index 510
2025-01-08 10:27:51,211 - INFO - Tokenized code into 63 tokens
2025-01-08 10:27:51,228 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:51,230 - INFO - Tokenized code into 80 tokens
2025-01-08 10:27:51,201 - INFO - Starting main AST analysis flow
2025-01-08 10:27:51,230 - INFO - Starting main AST analysis flow
2025-01-08 10:27:51,232 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:51,233 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:51,234 - INFO - Tokenized code into 28 tokens
2025-01-08 10:27:51,237 - INFO - Tokenized code into 490 tokens
2025-01-08 10:27:51,254 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:51,251 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:52,004 - INFO - Step 1 result: {'type': 'Program', 'name': '_extract_schema_from_url', 'range': [133, 245], 'children': []}
2025-01-08 10:27:52,004 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:27:58,909 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [246, 261], 'children': [{'type': 'VariableDeclaration', 'name': 'logger', 'range': [246, 254], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [246, 253], 'children': [{'type': 'Identifier', 'name': 'logger', 'range': [246, 246], 'children': []}, {'type': 'CallExpression', 'name': '', 'range': [248, 253], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [248, 250], 'children': [{'type': 'Identifier', 'name': 'logging', 'range': [248, 248], 'children': []}, {'type': 'Identifier', 'name': 'getLogger', 'range': [250, 250], 'children': []}]}, {'type': 'Identifier', 'name': '__name__', 'range': [252, 252], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'config', 'range': [255, 260], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [255, 259], 'children': [{'type': 'Identifier', 'name': 'config', 'range': [255, 255], 'children': []}, {'type': 'NewExpression', 'name': '', 'range': [257, 259], 'children': [{'type': 'Identifier', 'name': 'Config', 'range': [257, 257], 'children': []}]}]}]}]}
2025-01-08 10:27:58,926 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:27:59,419 - INFO - Step 1 result: {'type': 'Program', 'name': 'execute_graph', 'range': [339, 401], 'children': []}
2025-01-08 10:27:59,423 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:00,371 - INFO - Step 1 result: {'type': 'Program', 'name': 'log', 'range': [262, 286], 'children': []}
2025-01-08 10:28:00,371 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:00,373 - INFO - Step 1 result: {'type': 'Program', 'name': 'job_listener', 'range': [287, 319], 'children': []}
2025-01-08 10:28:00,374 - INFO - Step 1 result: {'type': 'Program', 'name': 'get_execution_client', 'range': [323, 338], 'children': []}
2025-01-08 10:28:00,402 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:00,468 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:01,125 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [0, 132], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 1], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [3, 4], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [6, 17], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [20, 27], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [29, 36], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [38, 45], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [47, 54], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [56, 63], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [65, 72], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [74, 77], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [79, 82], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [84, 89], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [92, 99], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [101, 108], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [110, 121], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [123, 130], 'children': []}]}
2025-01-08 10:28:01,126 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:04,211 - INFO - Step 1 result: {'type': 'Program', 'name': 'JobArgs', 'range': [402, 429], 'children': [{'type': 'ClassDeclaration', 'name': 'JobArgs', 'range': [402, 429], 'children': [{'type': 'PropertyDeclaration', 'name': 'graph_id', 'range': [409, 411], 'children': []}, {'type': 'PropertyDeclaration', 'name': 'input_data', 'range': [413, 415], 'children': []}, {'type': 'PropertyDeclaration', 'name': 'user_id', 'range': [417, 419], 'children': []}, {'type': 'PropertyDeclaration', 'name': 'graph_version', 'range': [421, 423], 'children': []}, {'type': 'PropertyDeclaration', 'name': 'cron', 'range': [425, 427], 'children': []}]}]}
2025-01-08 10:28:04,211 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:06,851 - INFO - Step 1 result: {'type': 'Program', 'name': 'ExecutionScheduler', 'range': [510, 999], 'children': [{'type': 'ClassDeclaration', 'name': 'ExecutionScheduler', 'range': [510, 520], 'children': []}, {'type': 'MethodDeclaration', 'name': 'get_port', 'range': [525, 539], 'children': []}, {'type': 'MethodDeclaration', 'name': 'execution_client', 'range': [547, 562], 'children': []}, {'type': 'MethodDeclaration', 'name': 'run_service', 'range': [564, 649], 'children': []}, {'type': 'MethodDeclaration', 'name': 'add_execution_schedule', 'range': [654, 775], 'children': []}, {'type': 'MethodDeclaration', 'name': 'delete_schedule', 'range': [781, 877], 'children': []}, {'type': 'MethodDeclaration', 'name': 'get_execution_schedules', 'range': [883, 998], 'children': []}]}
2025-01-08 10:28:06,852 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:09,929 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [430, 509], 'children': [{'type': 'ClassDeclaration', 'name': 'JobInfo', 'range': [430, 448], 'children': [{'type': 'Property', 'name': 'id', 'range': [437, 439], 'children': []}, {'type': 'Property', 'name': 'name', 'range': [441, 443], 'children': []}, {'type': 'Property', 'name': 'next_run_time', 'range': [445, 447], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': 'from_db', 'range': [450, 508], 'children': [{'type': 'Parameter', 'name': 'job_args', 'range': [456, 458], 'children': []}, {'type': 'Parameter', 'name': 'job_obj', 'range': [460, 462], 'children': []}, {'type': 'ReturnStatement', 'name': '', 'range': [469, 507], 'children': [{'type': 'CallExpression', 'name': 'JobInfo', 'range': [470, 507], 'children': [{'type': 'Argument', 'name': 'id', 'range': [473, 477], 'children': []}, {'type': 'Argument', 'name': 'name', 'range': [480, 484], 'children': []}, {'type': 'Argument', 'name': 'next_run_time', 'range': [487, 493], 'children': []}, {'type': 'Argument', 'name': 'job_args', 'range': [498, 504], 'children': []}]}]}]}]}
2025-01-08 10:28:09,980 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:18,922 - INFO - Step 2 result: {'type': 'Program', 'name': '', 'range': [246, 261], 'children': [{'type': 'VariableDeclaration', 'name': 'logger', 'range': [246, 254], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [246, 253], 'children': [{'type': 'Identifier', 'name': 'logger', 'range': [246, 246], 'children': []}, {'type': 'CallExpression', 'name': '', 'range': [248, 253], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [248, 250], 'children': [{'type': 'Identifier', 'name': 'logging', 'range': [248, 248], 'children': []}, {'type': 'Identifier', 'name': 'getLogger', 'range': [250, 250], 'children': []}]}, {'type': 'Identifier', 'name': '__name__', 'range': [252, 252], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'config', 'range': [255, 260], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [255, 259], 'children': [{'type': 'Identifier', 'name': 'config', 'range': [255, 255], 'children': []}, {'type': 'NewExpression', 'name': '', 'range': [257, 259], 'children': [{'type': 'Identifier', 'name': 'Config', 'range': [257, 257], 'children': []}]}]}]}]}
2025-01-08 10:28:18,922 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:20,004 - INFO - Step 2 result: {'type': 'Program', 'name': 'get_execution_client', 'range': [323, 338], 'children': [{'type': 'FunctionDeclaration', 'name': 'get_execution_client', 'range': [323, 337], 'children': [{'type': 'FunctionSignature', 'name': 'get_execution_client', 'range': [323, 330], 'children': [{'type': 'Keyword', 'name': 'def', 'range': [323, 326], 'children': []}, {'type': 'FunctionName', 'name': 'get_execution_client', 'range': [324, 338], 'children': []}, {'type': 'ParameterList', 'name': '', 'range': [325, 326], 'children': []}, {'type': 'ReturnType', 'name': 'ExecutionManager', 'range': [327, 330], 'children': [{'type': 'Keyword', 'name': '->', 'range': [327, 329], 'children': []}, {'type': 'TypeName', 'name': 'ExecutionManager', 'range': [329, 330], 'children': []}]}]}, {'type': 'FunctionBody', 'name': '', 'range': [331, 337], 'children': [{'type': 'ReturnStatement', 'name': '', 'range': [332, 337], 'children': [{'type': 'Keyword', 'name': 'return', 'range': [332, 338], 'children': []}, {'type': 'FunctionCall', 'name': 'get_service_client', 'range': [333, 336], 'children': [{'type': 'FunctionName', 'name': 'get_service_client', 'range': [333, 336], 'children': []}, {'type': 'ArgumentList', 'name': '', 'range': [334, 336], 'children': [{'type': 'Argument', 'name': 'ExecutionManager', 'range': [335, 336], 'children': []}]}]}]}]}]}]}
2025-01-08 10:28:20,004 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:21,970 - INFO - Step 2 result: {'type': 'Program', 'name': 'JobArgs', 'range': [402, 429], 'children': [{'type': 'ClassDeclaration', 'name': 'JobArgs', 'range': [402, 429], 'children': [{'type': 'PropertyDeclaration', 'name': 'graph_id', 'range': [409, 411], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [411, 411], 'children': []}]}, {'type': 'PropertyDeclaration', 'name': 'input_data', 'range': [413, 415], 'children': [{'type': 'TypeAnnotation', 'name': 'BlockInput', 'range': [415, 415], 'children': []}]}, {'type': 'PropertyDeclaration', 'name': 'user_id', 'range': [417, 419], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [419, 419], 'children': []}]}, {'type': 'PropertyDeclaration', 'name': 'graph_version', 'range': [421, 423], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [423, 423], 'children': []}]}, {'type': 'PropertyDeclaration', 'name': 'cron', 'range': [425, 427], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [427, 427], 'children': []}]}]}]}
2025-01-08 10:28:21,976 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:23,137 - INFO - Step 2 result: {'type': 'Program', 'name': 'log', 'range': [262, 286], 'children': [{'type': 'FunctionDeclaration', 'name': 'log', 'range': [262, 286], 'children': [{'type': 'FunctionSignature', 'name': 'log', 'range': [262, 271], 'children': [{'type': 'Keyword', 'name': 'def', 'range': [262, 262], 'children': []}, {'type': 'Identifier', 'name': 'log', 'range': [263, 263], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [264, 270], 'children': [{'type': 'Identifier', 'name': 'msg', 'range': [265, 265], 'children': []}, {'type': 'Keyword', 'name': '*', 'range': [267, 267], 'children': []}, {'type': 'Keyword', 'name': '*', 'range': [268, 268], 'children': []}, {'type': 'Identifier', 'name': 'kwargs', 'range': [269, 269], 'children': []}]}]}, {'type': 'FunctionBody', 'name': 'body', 'range': [272, 286], 'children': [{'type': 'ExpressionStatement', 'name': 'logger.info', 'range': [273, 284], 'children': [{'type': 'MemberExpression', 'name': 'logger.info', 'range': [273, 275], 'children': [{'type': 'Identifier', 'name': 'logger', 'range': [273, 273], 'children': []}, {'type': 'Identifier', 'name': 'info', 'range': [275, 275], 'children': []}]}, {'type': 'CallExpression', 'name': 'call', 'range': [276, 284], 'children': [{'type': 'StringLiteral', 'name': '"[ExecutionScheduler] "', 'range': [277, 277], 'children': []}, {'type': 'Identifier', 'name': 'msg', 'range': [279, 279], 'children': []}, {'type': 'Keyword', 'name': '*', 'range': [281, 281], 'children': []}, {'type': 'Keyword', 'name': '*', 'range': [282, 282], 'children': []}, {'type': 'Identifier', 'name': 'kwargs', 'range': [283, 283], 'children': []}]}]}]}]}]}
2025-01-08 10:28:23,140 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:23,263 - INFO - Step 2 result: {'type': 'Program', 'name': '_extract_schema_from_url', 'range': [133, 245], 'children': [{'type': 'FunctionDef', 'name': '_extract_schema_from_url', 'range': [133, 245], 'children': [{'type': 'Parameters', 'name': 'database_url', 'range': [135, 137], 'children': []}, {'type': 'ReturnType', 'name': 'tuple[str, str]', 'range': [140, 145], 'children': []}, {'type': 'Docstring', 'name': 'Extracts the schema from the DATABASE_URL and returns the schema and cleaned URL.', 'range': [148, 150], 'children': []}, {'type': 'Assignment', 'name': 'parsed_url', 'range': [152, 157], 'children': [{'type': 'Call', 'name': 'urlparse', 'range': [154, 157], 'children': [{'type': 'Argument', 'name': 'database_url', 'range': [156, 157], 'children': []}]}]}, {'type': 'Assignment', 'name': 'query_params', 'range': [159, 166], 'children': [{'type': 'Call', 'name': 'parse_qs', 'range': [161, 166], 'children': [{'type': 'Argument', 'name': 'parsed_url.query', 'range': [163, 166], 'children': []}]}]}, {'type': 'Assignment', 'name': 'schema_list', 'range': [175, 184], 'children': [{'type': 'Call', 'name': 'query_params.pop', 'range': [177, 184], 'children': [{'type': 'Argument', 'name': '"schema"', 'range': [181, 182], 'children': []}, {'type': 'Argument', 'name': 'None', 'range': [183, 184], 'children': []}]}]}, {'type': 'Assignment', 'name': 'schema', 'range': [186, 195], 'children': [{'type': 'ConditionalExpression', 'name': 'schema_list[0] if schema_list else "public"', 'range': [188, 195], 'children': [{'type': 'Condition', 'name': 'schema_list', 'range': [193, 194], 'children': []}, {'type': 'TrueBranch', 'name': 'schema_list[0]', 'range': [188, 191], 'children': []}, {'type': 'FalseBranch', 'name': '"public"', 'range': [195, 195], 'children': []}]}]}, {'type': 'Assignment', 'name': 'new_query', 'range': [208, 217], 'children': [{'type': 'Call', 'name': 'urlencode', 'range': [210, 217], 'children': [{'type': 'Argument', 'name': 'query_params', 'range': [212, 213], 'children': []}, {'type': 'Argument', 'name': 'doseq=True', 'range': [214, 216], 'children': []}]}]}, {'type': 'Assignment', 'name': 'new_parsed_url', 'range': [219, 228], 'children': [{'type': 'Call', 'name': 'parsed_url._replace', 'range': [221, 228], 'children': [{'type': 'Argument', 'name': 'query=new_query', 'range': [225, 227], 'children': []}]}]}, {'type': 'Assignment', 'name': 'database_url_clean', 'range': [230, 238], 'children': [{'type': 'Call', 'name': 'str', 'range': [232, 238], 'children': [{'type': 'Call', 'name': 'urlunparse', 'range': [234, 238], 'children': [{'type': 'Argument', 'name': 'new_parsed_url', 'range': [236, 237], 'children': []}]}]}]}, {'type': 'Return', 'name': 'return schema, database_url_clean', 'range': [241, 244], 'children': [{'type': 'Tuple', 'name': 'schema, database_url_clean', 'range': [242, 244], 'children': [{'type': 'Element', 'name': 'schema', 'range': [242, 242], 'children': []}, {'type': 'Element', 'name': 'database_url_clean', 'range': [244, 244], 'children': []}]}]}]}]}
2025-01-08 10:28:23,264 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:23,667 - INFO - Step 2 result: {'type': 'Program', 'name': 'job_listener', 'range': [287, 319], 'children': [{'type': 'FunctionDeclaration', 'name': 'job_listener', 'range': [287, 319], 'children': [{'type': 'Parameter', 'name': 'event', 'range': [290, 290], 'children': []}, {'type': 'Block', 'name': '', 'range': [293, 319], 'children': [{'type': 'Docstring', 'name': '', 'range': [294, 296], 'children': [{'type': 'String', 'name': '"Logs job execution outcomes for better monitoring."', 'range': [295, 295], 'children': []}]}, {'type': 'IfStatement', 'name': '', 'range': [298, 318], 'children': [{'type': 'Condition', 'name': '', 'range': [299, 302], 'children': [{'type': 'MemberExpression', 'name': 'event.exception', 'range': [299, 301], 'children': [{'type': 'Identifier', 'name': 'event', 'range': [299, 299], 'children': []}, {'type': 'Identifier', 'name': 'exception', 'range': [301, 301], 'children': []}]}]}, {'type': 'Block', 'name': '', 'range': [303, 309], 'children': [{'type': 'ExpressionStatement', 'name': '', 'range': [304, 308], 'children': [{'type': 'CallExpression', 'name': 'log', 'range': [304, 308], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [305, 307], 'children': [{'type': 'String', 'name': '"Job {event.job_id} failed."', 'range': [307, 307], 'children': []}]}]}]}]}, {'type': 'ElseStatement', 'name': '', 'range': [310, 318], 'children': [{'type': 'Block', 'name': '', 'range': [312, 318], 'children': [{'type': 'ExpressionStatement', 'name': '', 'range': [313, 317], 'children': [{'type': 'CallExpression', 'name': 'log', 'range': [313, 317], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [314, 316], 'children': [{'type': 'String', 'name': '"Job {event.job_id} completed successfully."', 'range': [316, 316], 'children': []}]}]}]}]}]}]}]}]}]}
2025-01-08 10:28:23,667 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:27,263 - INFO - Step 2 result: {'type': 'Program', 'name': 'execute_graph', 'range': [339, 401], 'children': [{'type': 'FunctionDeclaration', 'name': 'execute_graph', 'range': [339, 401], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [341, 345], 'children': [{'type': 'Parameter', 'name': 'kwargs', 'range': [342, 344], 'children': []}]}, {'type': 'BlockStatement', 'name': 'body', 'range': [346, 401], 'children': [{'type': 'VariableDeclaration', 'name': 'args', 'range': [348, 355], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [349, 355], 'children': [{'type': 'CallExpression', 'name': 'JobArgs', 'range': [350, 355], 'children': [{'type': 'ArgumentList', 'name': 'arguments', 'range': [351, 355], 'children': [{'type': 'SpreadElement', 'name': 'kwargs', 'range': [352, 354], 'children': []}]}]}]}]}, {'type': 'TryStatement', 'name': 'try', 'range': [357, 401], 'children': [{'type': 'BlockStatement', 'name': 'block', 'range': [358, 386], 'children': [{'type': 'ExpressionStatement', 'name': 'log', 'range': [360, 365], 'children': [{'type': 'CallExpression', 'name': 'log', 'range': [360, 365], 'children': [{'type': 'ArgumentList', 'name': 'arguments', 'range': [361, 365], 'children': [{'type': 'TemplateLiteral', 'name': 'f', 'range': [362, 364], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': 'get_execution_client', 'range': [366, 386], 'children': [{'type': 'CallExpression', 'name': 'add_execution', 'range': [366, 386], 'children': [{'type': 'MemberExpression', 'name': 'get_execution_client', 'range': [366, 370], 'children': []}, {'type': 'ArgumentList', 'name': 'arguments', 'range': [371, 385], 'children': [{'type': 'MemberExpression', 'name': 'args.graph_id', 'range': [373, 376], 'children': []}, {'type': 'MemberExpression', 'name': 'args.input_data', 'range': [377, 380], 'children': []}, {'type': 'MemberExpression', 'name': 'args.user_id', 'range': [381, 384], 'children': []}]}]}]}]}, {'type': 'CatchClause', 'name': 'catch', 'range': [387, 401], 'children': [{'type': 'BlockStatement', 'name': 'body', 'range': [391, 401], 'children': [{'type': 'ExpressionStatement', 'name': 'logger.exception', 'range': [393, 400], 'children': [{'type': 'CallExpression', 'name': 'exception', 'range': [393, 400], 'children': [{'type': 'MemberExpression', 'name': 'logger', 'range': [393, 395], 'children': []}, {'type': 'ArgumentList', 'name': 'arguments', 'range': [396, 400], 'children': [{'type': 'TemplateLiteral', 'name': 'f', 'range': [397, 399], 'children': []}]}]}]}]}]}]}]}]}]}
2025-01-08 10:28:27,263 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:30,330 - INFO - Step 3 result: {'type': 'Program', 'name': '', 'range': [246, 261], 'children': [{'type': 'VariableDeclaration', 'name': 'logger', 'range': [246, 254], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [246, 253], 'children': [{'type': 'Identifier', 'name': 'logger', 'range': [246, 246], 'children': []}, {'type': 'CallExpression', 'name': '', 'range': [248, 253], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [248, 250], 'children': [{'type': 'Identifier', 'name': 'logging', 'range': [248, 248], 'children': []}, {'type': 'Identifier', 'name': 'getLogger', 'range': [250, 250], 'children': []}]}, {'type': 'Identifier', 'name': '__name__', 'range': [252, 252], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'config', 'range': [255, 260], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [255, 259], 'children': [{'type': 'Identifier', 'name': 'config', 'range': [255, 255], 'children': []}, {'type': 'NewExpression', 'name': '', 'range': [257, 259], 'children': [{'type': 'Identifier', 'name': 'Config', 'range': [257, 257], 'children': []}]}]}]}]}
2025-01-08 10:28:30,330 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:31,451 - INFO - Step 2 result: {'type': 'Program', 'name': '', 'range': [430, 509], 'children': [{'type': 'ClassDeclaration', 'name': 'JobInfo', 'range': [430, 448], 'children': [{'type': 'Property', 'name': 'id', 'range': [437, 439], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [439, 439], 'children': []}]}, {'type': 'Property', 'name': 'name', 'range': [441, 443], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [443, 443], 'children': []}]}, {'type': 'Property', 'name': 'next_run_time', 'range': [445, 447], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [447, 447], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'from_db', 'range': [450, 508], 'children': [{'type': 'Parameter', 'name': 'job_args', 'range': [456, 458], 'children': [{'type': 'TypeAnnotation', 'name': 'JobArgs', 'range': [458, 458], 'children': []}]}, {'type': 'Parameter', 'name': 'job_obj', 'range': [460, 462], 'children': [{'type': 'TypeAnnotation', 'name': 'JobObj', 'range': [462, 462], 'children': []}]}, {'type': 'ReturnType', 'name': 'JobInfo', 'range': [466, 466], 'children': []}, {'type': 'ReturnStatement', 'name': '', 'range': [469, 507], 'children': [{'type': 'CallExpression', 'name': 'JobInfo', 'range': [470, 507], 'children': [{'type': 'Argument', 'name': 'id', 'range': [473, 477], 'children': []}, {'type': 'Argument', 'name': 'name', 'range': [480, 484], 'children': []}, {'type': 'Argument', 'name': 'next_run_time', 'range': [487, 493], 'children': []}, {'type': 'Argument', 'name': 'job_args', 'range': [498, 504], 'children': []}]}]}]}]}
2025-01-08 10:28:31,451 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:31,501 - INFO - Step 3 result: {'type': 'Program', 'name': 'JobArgs', 'range': [402, 429], 'children': [{'type': 'ClassDeclaration', 'name': 'JobArgs', 'range': [402, 429], 'children': [{'type': 'PropertyDeclaration', 'name': 'graph_id', 'range': [409, 411], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [411, 411], 'children': []}]}, {'type': 'PropertyDeclaration', 'name': 'input_data', 'range': [413, 415], 'children': [{'type': 'TypeAnnotation', 'name': 'BlockInput', 'range': [415, 415], 'children': []}]}, {'type': 'PropertyDeclaration', 'name': 'user_id', 'range': [417, 419], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [419, 419], 'children': []}]}, {'type': 'PropertyDeclaration', 'name': 'graph_version', 'range': [421, 423], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [423, 423], 'children': []}]}, {'type': 'PropertyDeclaration', 'name': 'cron', 'range': [425, 427], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [427, 427], 'children': []}]}]}]}
2025-01-08 10:28:31,501 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:32,889 - INFO - Step 3 result: {'type': 'Program', 'name': 'get_execution_client', 'range': [323, 338], 'children': [{'type': 'FunctionDeclaration', 'name': 'get_execution_client', 'range': [323, 337], 'children': [{'type': 'FunctionSignature', 'name': 'get_execution_client', 'range': [323, 330], 'children': [{'type': 'Keyword', 'name': 'def', 'range': [323, 326], 'children': []}, {'type': 'FunctionName', 'name': 'get_execution_client', 'range': [324, 338], 'children': []}, {'type': 'ReturnType', 'name': 'ExecutionManager', 'range': [327, 330], 'children': [{'type': 'Keyword', 'name': '->', 'range': [327, 329], 'children': []}, {'type': 'TypeName', 'name': 'ExecutionManager', 'range': [329, 330], 'children': []}]}]}, {'type': 'FunctionBody', 'name': '', 'range': [331, 337], 'children': [{'type': 'ReturnStatement', 'name': '', 'range': [332, 337], 'children': [{'type': 'Keyword', 'name': 'return', 'range': [332, 338], 'children': []}, {'type': 'FunctionCall', 'name': 'get_service_client', 'range': [333, 336], 'children': [{'type': 'FunctionName', 'name': 'get_service_client', 'range': [333, 336], 'children': []}, {'type': 'Argument', 'name': 'ExecutionManager', 'range': [335, 336], 'children': []}]}]}]}]}]}
2025-01-08 10:28:32,889 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:36,892 - INFO - Step 2 result: {'type': 'Program', 'name': '', 'range': [0, 132], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 1], 'children': [{'type': 'ImportSpecifier', 'name': 'logging', 'range': [1, 1], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [3, 4], 'children': [{'type': 'ImportSpecifier', 'name': 'os', 'range': [4, 4], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [6, 17], 'children': [{'type': 'ImportSpecifier', 'name': 'parse_qs', 'range': [11, 11], 'children': []}, {'type': 'ImportSpecifier', 'name': 'urlencode', 'range': [13, 13], 'children': []}, {'type': 'ImportSpecifier', 'name': 'urlparse', 'range': [15, 15], 'children': []}, {'type': 'ImportSpecifier', 'name': 'urlunparse', 'range': [17, 17], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [20, 27], 'children': [{'type': 'ImportSpecifier', 'name': 'EVENT_JOB_ERROR', 'range': [25, 25], 'children': []}, {'type': 'ImportSpecifier', 'name': 'EVENT_JOB_EXECUTED', 'range': [27, 27], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [29, 36], 'children': [{'type': 'ImportSpecifier', 'name': 'Job', 'range': [34, 34], 'children': []}, {'type': 'ImportSpecifier', 'name': 'JobObj', 'range': [36, 36], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [38, 45], 'children': [{'type': 'ImportSpecifier', 'name': 'SQLAlchemyJobStore', 'range': [45, 45], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [47, 54], 'children': [{'type': 'ImportSpecifier', 'name': 'BlockingScheduler', 'range': [54, 54], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [56, 63], 'children': [{'type': 'ImportSpecifier', 'name': 'CronTrigger', 'range': [63, 63], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [65, 72], 'children': [{'type': 'ImportSpecifier', 'name': 'thread_cached', 'range': [72, 72], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [74, 77], 'children': [{'type': 'ImportSpecifier', 'name': 'load_dotenv', 'range': [77, 77], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [79, 82], 'children': [{'type': 'ImportSpecifier', 'name': 'BaseModel', 'range': [82, 82], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [84, 89], 'children': [{'type': 'ImportSpecifier', 'name': 'MetaData', 'range': [87, 87], 'children': []}, {'type': 'ImportSpecifier', 'name': 'create_engine', 'range': [89, 89], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [92, 99], 'children': [{'type': 'ImportSpecifier', 'name': 'BlockInput', 'range': [99, 99], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [101, 108], 'children': [{'type': 'ImportSpecifier', 'name': 'ExecutionManager', 'range': [108, 108], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [110, 121], 'children': [{'type': 'ImportSpecifier', 'name': 'AppService', 'range': [117, 117], 'children': []}, {'type': 'ImportSpecifier', 'name': 'expose', 'range': [119, 119], 'children': []}, {'type': 'ImportSpecifier', 'name': 'get_service_client', 'range': [121, 121], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [123, 130], 'children': [{'type': 'ImportSpecifier', 'name': 'Config', 'range': [130, 130], 'children': []}]}]}
2025-01-08 10:28:36,892 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:37,235 - INFO - Step 3 result: {'type': 'Program', 'name': 'log', 'range': [262, 286], 'children': [{'type': 'FunctionDeclaration', 'name': 'log', 'range': [262, 286], 'children': [{'type': 'FunctionSignature', 'name': 'log', 'range': [262, 271], 'children': [{'type': 'Keyword', 'name': 'def', 'range': [262, 262], 'children': []}, {'type': 'Identifier', 'name': 'log', 'range': [263, 263], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [264, 270], 'children': [{'type': 'Identifier', 'name': 'msg', 'range': [265, 265], 'children': []}, {'type': 'Keyword', 'name': '**', 'range': [267, 268], 'children': []}, {'type': 'Identifier', 'name': 'kwargs', 'range': [269, 269], 'children': []}]}]}, {'type': 'FunctionBody', 'name': 'body', 'range': [272, 286], 'children': [{'type': 'ExpressionStatement', 'name': 'logger.info', 'range': [273, 284], 'children': [{'type': 'MemberExpression', 'name': 'logger.info', 'range': [273, 275], 'children': [{'type': 'Identifier', 'name': 'logger', 'range': [273, 273], 'children': []}, {'type': 'Identifier', 'name': 'info', 'range': [275, 275], 'children': []}]}, {'type': 'CallExpression', 'name': 'call', 'range': [276, 284], 'children': [{'type': 'StringLiteral', 'name': '"[ExecutionScheduler] "', 'range': [277, 277], 'children': []}, {'type': 'Identifier', 'name': 'msg', 'range': [279, 279], 'children': []}, {'type': 'Keyword', 'name': '**', 'range': [281, 282], 'children': []}, {'type': 'Identifier', 'name': 'kwargs', 'range': [283, 283], 'children': []}]}]}]}]}]}
2025-01-08 10:28:37,235 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:38,788 - INFO - Step 3 result: {'type': 'Program', 'name': 'job_listener', 'range': [287, 319], 'children': [{'type': 'FunctionDeclaration', 'name': 'job_listener', 'range': [287, 319], 'children': [{'type': 'Parameter', 'name': 'event', 'range': [290, 290], 'children': []}, {'type': 'Block', 'name': '', 'range': [293, 319], 'children': [{'type': 'Docstring', 'name': '', 'range': [294, 296], 'children': [{'type': 'String', 'name': '"Logs job execution outcomes for better monitoring."', 'range': [295, 295], 'children': []}]}, {'type': 'IfStatement', 'name': '', 'range': [298, 318], 'children': [{'type': 'Condition', 'name': '', 'range': [299, 302], 'children': [{'type': 'MemberExpression', 'name': 'event.exception', 'range': [299, 301], 'children': [{'type': 'Identifier', 'name': 'event', 'range': [299, 299], 'children': []}, {'type': 'Identifier', 'name': 'exception', 'range': [301, 301], 'children': []}]}]}, {'type': 'Block', 'name': '', 'range': [303, 309], 'children': [{'type': 'ExpressionStatement', 'name': '', 'range': [304, 308], 'children': [{'type': 'CallExpression', 'name': 'log', 'range': [304, 308], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [305, 307], 'children': [{'type': 'String', 'name': '"Job {event.job_id} failed."', 'range': [307, 307], 'children': []}]}]}]}]}, {'type': 'ElseStatement', 'name': '', 'range': [310, 318], 'children': [{'type': 'Block', 'name': '', 'range': [312, 318], 'children': [{'type': 'ExpressionStatement', 'name': '', 'range': [313, 317], 'children': [{'type': 'CallExpression', 'name': 'log', 'range': [313, 317], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [314, 316], 'children': [{'type': 'String', 'name': '"Job {event.job_id} completed successfully."', 'range': [316, 316], 'children': []}]}]}]}]}]}]}]}]}]}
2025-01-08 10:28:38,788 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:41,100 - INFO - Step 4 result: {'type': 'Program', 'name': 'JobArgs', 'range': [402, 429], 'children': [{'type': 'ClassDecl', 'name': 'JobArgs', 'range': [402, 429], 'children': [{'type': 'PropertyDecl', 'name': 'graph_id', 'range': [409, 411], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [411, 411], 'children': []}]}, {'type': 'PropertyDecl', 'name': 'input_data', 'range': [413, 415], 'children': [{'type': 'TypeAnnotation', 'name': 'BlockInput', 'range': [415, 415], 'children': []}]}, {'type': 'PropertyDecl', 'name': 'user_id', 'range': [417, 419], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [419, 419], 'children': []}]}, {'type': 'PropertyDecl', 'name': 'graph_version', 'range': [421, 423], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [423, 423], 'children': []}]}, {'type': 'PropertyDecl', 'name': 'cron', 'range': [425, 427], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [427, 427], 'children': []}]}]}]}
2025-01-08 10:28:41,100 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:28:41,229 - INFO - Step 4 result: {'type': 'Program', 'name': '', 'range': [246, 261], 'children': [{'type': 'VariableDeclaration', 'name': 'logger', 'range': [246, 254], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [246, 253], 'children': [{'type': 'Identifier', 'name': 'logger', 'range': [246, 246], 'children': []}, {'type': 'CallExpression', 'name': '', 'range': [248, 253], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [248, 250], 'children': [{'type': 'Identifier', 'name': 'logging', 'range': [248, 248], 'children': []}, {'type': 'Identifier', 'name': 'getLogger', 'range': [250, 250], 'children': []}]}, {'type': 'Identifier', 'name': '__name__', 'range': [252, 252], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'config', 'range': [255, 260], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [255, 259], 'children': [{'type': 'Identifier', 'name': 'config', 'range': [255, 255], 'children': []}, {'type': 'NewExpression', 'name': '', 'range': [257, 259], 'children': [{'type': 'Identifier', 'name': 'Config', 'range': [257, 257], 'children': []}]}]}]}]}
2025-01-08 10:28:41,229 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:28:43,717 - INFO - Step 4 result: {'type': 'Program', 'name': 'get_execution_client', 'range': [323, 338], 'children': [{'type': 'FunctionDecl', 'name': 'get_execution_client', 'range': [323, 337], 'children': [{'type': 'FunctionSignature', 'name': 'get_execution_client', 'range': [323, 330], 'children': [{'type': 'Keyword', 'name': 'def', 'range': [323, 326], 'children': []}, {'type': 'Identifier', 'name': 'get_execution_client', 'range': [324, 338], 'children': []}, {'type': 'ReturnType', 'name': 'ExecutionManager', 'range': [327, 330], 'children': [{'type': 'Keyword', 'name': '->', 'range': [327, 329], 'children': []}, {'type': 'Identifier', 'name': 'ExecutionManager', 'range': [329, 330], 'children': []}]}]}, {'type': 'FunctionBody', 'name': '', 'range': [331, 337], 'children': [{'type': 'ReturnStatement', 'name': '', 'range': [332, 337], 'children': [{'type': 'Keyword', 'name': 'return', 'range': [332, 338], 'children': []}, {'type': 'CallExpression', 'name': 'get_service_client', 'range': [333, 336], 'children': [{'type': 'Identifier', 'name': 'get_service_client', 'range': [333, 336], 'children': []}, {'type': 'Identifier', 'name': 'ExecutionManager', 'range': [335, 336], 'children': []}]}]}]}]}]}
2025-01-08 10:28:43,718 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:28:45,866 - INFO - Step 3 result: {'type': 'Program', 'name': '', 'range': [430, 509], 'children': [{'type': 'ClassDeclaration', 'name': 'JobInfo', 'range': [430, 448], 'children': [{'type': 'Property', 'name': 'id', 'range': [437, 439], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [439, 439], 'children': []}]}, {'type': 'Property', 'name': 'name', 'range': [441, 443], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [443, 443], 'children': []}]}, {'type': 'Property', 'name': 'next_run_time', 'range': [445, 447], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [447, 447], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'from_db', 'range': [450, 508], 'children': [{'type': 'Parameter', 'name': 'job_args', 'range': [456, 458], 'children': [{'type': 'TypeAnnotation', 'name': 'JobArgs', 'range': [458, 458], 'children': []}]}, {'type': 'Parameter', 'name': 'job_obj', 'range': [460, 462], 'children': [{'type': 'TypeAnnotation', 'name': 'JobObj', 'range': [462, 462], 'children': []}]}, {'type': 'ReturnType', 'name': 'JobInfo', 'range': [466, 466], 'children': []}, {'type': 'ReturnStatement', 'name': '', 'range': [469, 507], 'children': [{'type': 'CallExpression', 'name': 'JobInfo', 'range': [470, 507], 'children': [{'type': 'Argument', 'name': 'id', 'range': [473, 477], 'children': []}, {'type': 'Argument', 'name': 'name', 'range': [480, 484], 'children': []}, {'type': 'Argument', 'name': 'next_run_time', 'range': [487, 493], 'children': []}, {'type': 'Argument', 'name': 'job_args', 'range': [498, 504], 'children': []}]}]}]}]}
2025-01-08 10:28:45,866 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:47,034 - INFO - Step 3 result: {'type': 'Program', 'name': '_extract_schema_from_url', 'range': [133, 245], 'children': [{'type': 'FunctionDef', 'name': '_extract_schema_from_url', 'range': [133, 245], 'children': [{'type': 'Parameters', 'name': 'database_url', 'range': [135, 137], 'children': []}, {'type': 'ReturnType', 'name': 'tuple[str, str]', 'range': [140, 145], 'children': []}, {'type': 'Docstring', 'name': 'Extracts the schema from the DATABASE_URL and returns the schema and cleaned URL.', 'range': [148, 150], 'children': []}, {'type': 'Assignment', 'name': 'parsed_url', 'range': [152, 157], 'children': [{'type': 'Call', 'name': 'urlparse', 'range': [154, 157], 'children': [{'type': 'Argument', 'name': 'database_url', 'range': [156, 157], 'children': []}]}]}, {'type': 'Assignment', 'name': 'query_params', 'range': [159, 166], 'children': [{'type': 'Call', 'name': 'parse_qs', 'range': [161, 166], 'children': [{'type': 'Argument', 'name': 'parsed_url.query', 'range': [163, 166], 'children': []}]}]}, {'type': 'Assignment', 'name': 'schema_list', 'range': [175, 184], 'children': [{'type': 'Call', 'name': 'query_params.pop', 'range': [177, 184], 'children': [{'type': 'Argument', 'name': '"schema"', 'range': [181, 182], 'children': []}, {'type': 'Argument', 'name': 'None', 'range': [183, 184], 'children': []}]}]}, {'type': 'Assignment', 'name': 'schema', 'range': [186, 195], 'children': [{'type': 'ConditionalExpression', 'name': 'schema_list[0] if schema_list else "public"', 'range': [188, 195], 'children': [{'type': 'Condition', 'name': 'schema_list', 'range': [193, 194], 'children': []}, {'type': 'TrueBranch', 'name': 'schema_list[0]', 'range': [188, 191], 'children': []}, {'type': 'FalseBranch', 'name': '"public"', 'range': [195, 195], 'children': []}]}]}, {'type': 'Assignment', 'name': 'new_query', 'range': [208, 217], 'children': [{'type': 'Call', 'name': 'urlencode', 'range': [210, 217], 'children': [{'type': 'Argument', 'name': 'query_params', 'range': [212, 213], 'children': []}, {'type': 'Argument', 'name': 'doseq=True', 'range': [214, 216], 'children': []}]}]}, {'type': 'Assignment', 'name': 'new_parsed_url', 'range': [219, 228], 'children': [{'type': 'Call', 'name': 'parsed_url._replace', 'range': [221, 228], 'children': [{'type': 'Argument', 'name': 'query=new_query', 'range': [225, 227], 'children': []}]}]}, {'type': 'Assignment', 'name': 'database_url_clean', 'range': [230, 238], 'children': [{'type': 'Call', 'name': 'str', 'range': [232, 238], 'children': [{'type': 'Call', 'name': 'urlunparse', 'range': [234, 238], 'children': [{'type': 'Argument', 'name': 'new_parsed_url', 'range': [236, 237], 'children': []}]}]}]}, {'type': 'Return', 'name': 'return schema, database_url_clean', 'range': [241, 244], 'children': [{'type': 'Tuple', 'name': 'schema, database_url_clean', 'range': [242, 244], 'children': [{'type': 'Element', 'name': 'schema', 'range': [242, 242], 'children': []}, {'type': 'Element', 'name': 'database_url_clean', 'range': [244, 244], 'children': []}]}]}]}]}
2025-01-08 10:28:47,034 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:47,487 - INFO - Step 3 result: {'type': 'Program', 'name': 'execute_graph', 'range': [339, 401], 'children': [{'type': 'FunctionDeclaration', 'name': 'execute_graph', 'range': [339, 401], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [341, 345], 'children': [{'type': 'Parameter', 'name': 'kwargs', 'range': [342, 344], 'children': []}]}, {'type': 'BlockStatement', 'name': 'body', 'range': [346, 401], 'children': [{'type': 'VariableDeclaration', 'name': 'args', 'range': [348, 355], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [349, 355], 'children': [{'type': 'CallExpression', 'name': 'JobArgs', 'range': [350, 355], 'children': [{'type': 'ArgumentList', 'name': 'arguments', 'range': [351, 355], 'children': [{'type': 'SpreadElement', 'name': 'kwargs', 'range': [352, 354], 'children': []}]}]}]}]}, {'type': 'TryStatement', 'name': 'try', 'range': [357, 401], 'children': [{'type': 'BlockStatement', 'name': 'block', 'range': [358, 386], 'children': [{'type': 'ExpressionStatement', 'name': 'log', 'range': [360, 365], 'children': [{'type': 'CallExpression', 'name': 'log', 'range': [360, 365], 'children': [{'type': 'ArgumentList', 'name': 'arguments', 'range': [361, 365], 'children': [{'type': 'TemplateLiteral', 'name': 'f', 'range': [362, 364], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': 'get_execution_client', 'range': [366, 386], 'children': [{'type': 'CallExpression', 'name': 'add_execution', 'range': [366, 386], 'children': [{'type': 'MemberExpression', 'name': 'get_execution_client', 'range': [366, 370], 'children': []}, {'type': 'ArgumentList', 'name': 'arguments', 'range': [371, 385], 'children': [{'type': 'MemberExpression', 'name': 'args.graph_id', 'range': [373, 376], 'children': []}, {'type': 'MemberExpression', 'name': 'args.input_data', 'range': [377, 380], 'children': []}, {'type': 'MemberExpression', 'name': 'args.user_id', 'range': [381, 384], 'children': []}]}]}]}]}, {'type': 'CatchClause', 'name': 'catch', 'range': [387, 401], 'children': [{'type': 'BlockStatement', 'name': 'body', 'range': [391, 401], 'children': [{'type': 'ExpressionStatement', 'name': 'logger.exception', 'range': [393, 400], 'children': [{'type': 'CallExpression', 'name': 'exception', 'range': [393, 400], 'children': [{'type': 'MemberExpression', 'name': 'logger', 'range': [393, 395], 'children': []}, {'type': 'ArgumentList', 'name': 'arguments', 'range': [396, 400], 'children': [{'type': 'TemplateLiteral', 'name': 'f', 'range': [397, 399], 'children': []}]}]}]}]}]}]}]}]}]}
2025-01-08 10:28:47,488 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:50,519 - INFO - Step 5 result: {'type': 'Program', 'name': 'JobArgs', 'range': [402, 429], 'children': [{'type': 'ClassDecl', 'name': 'JobArgs', 'range': [402, 429], 'children': [{'type': 'PropertyDecl', 'name': 'graph_id', 'range': [409, 411], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [411, 411], 'children': []}]}, {'type': 'PropertyDecl', 'name': 'input_data', 'range': [413, 415], 'children': [{'type': 'TypeAnnotation', 'name': 'BlockInput', 'range': [415, 415], 'children': []}]}, {'type': 'PropertyDecl', 'name': 'user_id', 'range': [417, 419], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [419, 419], 'children': []}]}, {'type': 'PropertyDecl', 'name': 'graph_version', 'range': [421, 423], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [423, 423], 'children': []}]}, {'type': 'PropertyDecl', 'name': 'cron', 'range': [425, 427], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [427, 427], 'children': []}]}]}]}
2025-01-08 10:28:50,520 - INFO - Completed main AST analysis flow
2025-01-08 10:28:50,520 - INFO - Successfully processed chunk
2025-01-08 10:28:50,775 - INFO - Step 5 result: {'type': 'Program', 'name': '', 'range': [246, 261], 'children': [{'type': 'VariableDeclaration', 'name': 'logger', 'range': [246, 254], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [246, 253], 'children': [{'type': 'Identifier', 'name': 'logger', 'range': [246, 246], 'children': []}, {'type': 'CallExpression', 'name': '', 'range': [248, 253], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [248, 250], 'children': [{'type': 'Identifier', 'name': 'logging', 'range': [248, 248], 'children': []}, {'type': 'Identifier', 'name': 'getLogger', 'range': [250, 250], 'children': []}]}, {'type': 'Identifier', 'name': '__name__', 'range': [252, 252], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'config', 'range': [255, 260], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [255, 259], 'children': [{'type': 'Identifier', 'name': 'config', 'range': [255, 255], 'children': []}, {'type': 'NewExpression', 'name': '', 'range': [257, 259], 'children': [{'type': 'Identifier', 'name': 'Config', 'range': [257, 257], 'children': []}]}]}]}]}
2025-01-08 10:28:50,776 - INFO - Completed main AST analysis flow
2025-01-08 10:28:50,776 - INFO - Successfully processed chunk
2025-01-08 10:28:50,989 - INFO - Step 4 result: {'type': 'Program', 'name': 'log', 'range': [262, 286], 'children': [{'type': 'FunctionDecl', 'name': 'log', 'range': [262, 286], 'children': [{'type': 'FunctionSignature', 'name': 'log', 'range': [262, 271], 'children': [{'type': 'Keyword', 'name': 'def', 'range': [262, 262], 'children': []}, {'type': 'Identifier', 'name': 'log', 'range': [263, 263], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [264, 270], 'children': [{'type': 'Identifier', 'name': 'msg', 'range': [265, 265], 'children': []}, {'type': 'Keyword', 'name': '**', 'range': [267, 268], 'children': []}, {'type': 'Identifier', 'name': 'kwargs', 'range': [269, 269], 'children': []}]}]}, {'type': 'FunctionBody', 'name': 'body', 'range': [272, 286], 'children': [{'type': 'ExpressionStatement', 'name': 'logger.info', 'range': [273, 284], 'children': [{'type': 'MemberExpression', 'name': 'logger.info', 'range': [273, 275], 'children': [{'type': 'Identifier', 'name': 'logger', 'range': [273, 273], 'children': []}, {'type': 'Identifier', 'name': 'info', 'range': [275, 275], 'children': []}]}, {'type': 'CallExpression', 'name': 'call', 'range': [276, 284], 'children': [{'type': 'Literal', 'name': '"[ExecutionScheduler] "', 'range': [277, 277], 'children': []}, {'type': 'Identifier', 'name': 'msg', 'range': [279, 279], 'children': []}, {'type': 'Keyword', 'name': '**', 'range': [281, 282], 'children': []}, {'type': 'Identifier', 'name': 'kwargs', 'range': [283, 283], 'children': []}]}]}]}]}]}
2025-01-08 10:28:50,989 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:28:52,765 - INFO - Step 2 result: {'type': 'Program', 'name': 'ExecutionScheduler', 'range': [510, 999], 'children': [{'type': 'ClassDeclaration', 'name': 'ExecutionScheduler', 'range': [510, 520], 'children': [{'type': 'Inheritance', 'name': 'AppService', 'range': [512, 514], 'children': []}, {'type': 'ClassBody', 'name': '', 'range': [516, 520], 'children': []}]}, {'type': 'MethodDeclaration', 'name': 'get_port', 'range': [525, 539], 'children': [{'type': 'Decorator', 'name': '@classmethod', 'range': [522, 524], 'children': []}, {'type': 'ReturnType', 'name': 'int', 'range': [530, 532], 'children': []}, {'type': 'MethodBody', 'name': '', 'range': [534, 539], 'children': [{'type': 'ReturnStatement', 'name': '', 'range': [535, 539], 'children': [{'type': 'Expression', 'name': 'config.execution_scheduler_port', 'range': [536, 538], 'children': []}]}]}]}, {'type': 'MethodDeclaration', 'name': 'execution_client', 'range': [547, 562], 'children': [{'type': 'Decorator', 'name': '@property', 'range': [541, 543], 'children': []}, {'type': 'Decorator', 'name': '@thread_cached', 'range': [544, 546], 'children': []}, {'type': 'ReturnType', 'name': 'ExecutionManager', 'range': [552, 554], 'children': []}, {'type': 'MethodBody', 'name': '', 'range': [556, 562], 'children': [{'type': 'ReturnStatement', 'name': '', 'range': [557, 562], 'children': [{'type': 'Expression', 'name': 'get_service_client(ExecutionManager)', 'range': [558, 561], 'children': []}]}]}]}, {'type': 'MethodDeclaration', 'name': 'run_service', 'range': [564, 649], 'children': [{'type': 'MethodBody', 'name': '', 'range': [570, 649], 'children': [{'type': 'ExpressionStatement', 'name': 'load_dotenv()', 'range': [571, 573], 'children': []}, {'type': 'Assignment', 'name': 'db_schema, db_url = _extract_schema_from_url(os.getenv("DATABASE_URL"))', 'range': [575, 587], 'children': []}, {'type': 'Assignment', 'name': 'self.scheduler = BlockingScheduler(jobstores={"default": SQLAlchemyJobStore(engine=create_engine(db_url), metadata=MetaData(schema=db_schema))})', 'range': [589, 627], 'children': []}, {'type': 'ExpressionStatement', 'name': 'self.scheduler.add_listener(job_listener, EVENT_JOB_EXECUTED | EVENT_JOB_ERROR)', 'range': [629, 640], 'children': []}, {'type': 'ExpressionStatement', 'name': 'self.scheduler.start()', 'range': [642, 648], 'children': []}]}]}, {'type': 'MethodDeclaration', 'name': 'add_execution_schedule', 'range': [654, 775], 'children': [{'type': 'Decorator', 'name': '@expose', 'range': [651, 653], 'children': []}, {'type': 'ReturnType', 'name': 'JobInfo', 'range': [687, 689], 'children': []}, {'type': 'MethodBody', 'name': '', 'range': [691, 775], 'children': [{'type': 'Assignment', 'name': 'job_args = JobArgs(graph_id=graph_id, input_data=input_data, user_id=user_id, graph_version=graph_version, cron=cron)', 'range': [692, 722], 'children': []}, {'type': 'Assignment', 'name': 'job = self.scheduler.add_job(execute_graph, CronTrigger.from_crontab(cron), kwargs=job_args.model_dump(), replace_existing=True)', 'range': [724, 758], 'children': []}, {'type': 'ExpressionStatement', 'name': 'log(f"Added job {job.id} with cron schedule \'{cron}\' input data: {input_data}")', 'range': [760, 764], 'children': []}, {'type': 'ReturnStatement', 'name': '', 'range': [766, 775], 'children': [{'type': 'Expression', 'name': 'JobInfo.from_db(job_args, job)', 'range': [767, 774], 'children': []}]}]}]}, {'type': 'MethodDeclaration', 'name': 'delete_schedule', 'range': [781, 877], 'children': [{'type': 'Decorator', 'name': '@expose', 'range': [777, 779], 'children': []}, {'type': 'ReturnType', 'name': 'JobInfo', 'range': [793, 795], 'children': []}, {'type': 'MethodBody', 'name': '', 'range': [797, 877], 'children': [{'type': 'Assignment', 'name': 'job = self.scheduler.get_job(schedule_id)', 'range': [798, 807], 'children': []}, {'type': 'IfStatement', 'name': 'if not job:', 'range': [809, 826], 'children': [{'type': 'ExpressionStatement', 'name': 'log(f"Job {schedule_id} not found.")', 'range': [814, 818], 'children': []}, {'type': 'ThrowStatement', 'name': 'raise ValueError(f"Job #{schedule_id} not found.")', 'range': [820, 825], 'children': []}]}, {'type': 'Assignment', 'name': 'job_args = JobArgs(**job.kwargs)', 'range': [828, 837], 'children': []}, {'type': 'IfStatement', 'name': 'if job_args.user_id != user_id:', 'range': [839, 853], 'children': [{'type': 'ThrowStatement', 'name': 'raise ValueError("User ID does not match the job\'s user ID.")', 'range': [848, 852], 'children': []}]}, {'type': 'ExpressionStatement', 'name': 'log(f"Deleting job {schedule_id}")', 'range': [855, 859], 'children': []}, {'type': 'ExpressionStatement', 'name': 'job.remove()', 'range': [861, 865], 'children': []}, {'type': 'ReturnStatement', 'name': '', 'range': [868, 877], 'children': [{'type': 'Expression', 'name': 'JobInfo.from_db(job_args, job)', 'range': [869, 876], 'children': []}]}]}]}, {'type': 'MethodDeclaration', 'name': 'get_execution_schedules', 'range': [883, 998], 'children': [{'type': 'Decorator', 'name': '@expose', 'range': [879, 881], 'children': []}, {'type': 'ReturnType', 'name': 'list[JobInfo]', 'range': [905, 910], 'children': []}, {'type': 'MethodBody', 'name': '', 'range': [912, 998], 'children': [{'type': 'Assignment', 'name': 'schedules = []', 'range': [913, 916], 'children': []}, {'type': 'ForStatement', 'name': 'for job in self.scheduler.get_jobs():', 'range': [918, 928], 'children': [{'type': 'Assignment', 'name': 'job_args = JobArgs(**job.kwargs)', 'range': [930, 939], 'children': []}, {'type': 'IfStatement', 'name': 'if (job.next_run_time is not None and (graph_id is None or job_args.graph_id == graph_id) and (user_id is None or job_args.user_id == user_id)):', 'range': [941, 980], 'children': [{'type': 'ExpressionStatement', 'name': 'schedules.append(JobInfo.from_db(job_args, job))', 'range': [982, 994], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [996, 998], 'children': [{'type': 'Expression', 'name': 'schedules', 'range': [997, 997], 'children': []}]}]}]}]}
2025-01-08 10:28:52,765 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:53,652 - INFO - Step 5 result: {'type': 'Program', 'name': 'get_execution_client', 'range': [323, 338], 'children': [{'type': 'FunctionDecl', 'name': 'get_execution_client', 'range': [323, 337], 'children': [{'type': 'FunctionSignature', 'name': 'get_execution_client', 'range': [323, 330], 'children': [{'type': 'Keyword', 'name': 'def', 'range': [323, 326], 'children': []}, {'type': 'Identifier', 'name': 'get_execution_client', 'range': [324, 338], 'children': []}, {'type': 'ReturnType', 'name': 'ExecutionManager', 'range': [327, 330], 'children': [{'type': 'Keyword', 'name': '->', 'range': [327, 329], 'children': []}, {'type': 'Identifier', 'name': 'ExecutionManager', 'range': [329, 330], 'children': []}]}]}, {'type': 'FunctionBody', 'name': '', 'range': [331, 337], 'children': [{'type': 'ReturnStatement', 'name': '', 'range': [332, 337], 'children': [{'type': 'Keyword', 'name': 'return', 'range': [332, 338], 'children': []}, {'type': 'CallExpression', 'name': 'get_service_client', 'range': [333, 336], 'children': [{'type': 'Identifier', 'name': 'get_service_client', 'range': [333, 336], 'children': []}, {'type': 'Identifier', 'name': 'ExecutionManager', 'range': [335, 336], 'children': []}]}]}]}]}]}
2025-01-08 10:28:53,652 - INFO - Completed main AST analysis flow
2025-01-08 10:28:53,652 - INFO - Successfully processed chunk
2025-01-08 10:28:54,404 - INFO - Step 4 result: {'type': 'Program', 'name': 'job_listener', 'range': [287, 319], 'children': [{'type': 'FunctionDecl', 'name': 'job_listener', 'range': [287, 319], 'children': [{'type': 'Parameter', 'name': 'event', 'range': [290, 290], 'children': []}, {'type': 'Block', 'name': '', 'range': [293, 319], 'children': [{'type': 'Docstring', 'name': '', 'range': [294, 296], 'children': [{'type': 'Literal', 'name': '"Logs job execution outcomes for better monitoring."', 'range': [295, 295], 'children': []}]}, {'type': 'IfStatement', 'name': '', 'range': [298, 318], 'children': [{'type': 'Condition', 'name': '', 'range': [299, 302], 'children': [{'type': 'MemberExpression', 'name': 'event.exception', 'range': [299, 301], 'children': [{'type': 'Identifier', 'name': 'event', 'range': [299, 299], 'children': []}, {'type': 'Identifier', 'name': 'exception', 'range': [301, 301], 'children': []}]}]}, {'type': 'Block', 'name': '', 'range': [303, 309], 'children': [{'type': 'ExpressionStatement', 'name': '', 'range': [304, 308], 'children': [{'type': 'CallExpression', 'name': 'log', 'range': [304, 308], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [305, 307], 'children': [{'type': 'Literal', 'name': '"Job {event.job_id} failed."', 'range': [307, 307], 'children': []}]}]}]}]}, {'type': 'ElseStatement', 'name': '', 'range': [310, 318], 'children': [{'type': 'Block', 'name': '', 'range': [312, 318], 'children': [{'type': 'ExpressionStatement', 'name': '', 'range': [313, 317], 'children': [{'type': 'CallExpression', 'name': 'log', 'range': [313, 317], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [314, 316], 'children': [{'type': 'Literal', 'name': '"Job {event.job_id} completed successfully."', 'range': [316, 316], 'children': []}]}]}]}]}]}]}]}]}]}
2025-01-08 10:28:54,404 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:29:00,599 - INFO - Step 4 result: {'type': 'Program', 'name': '', 'range': [430, 509], 'children': [{'type': 'ClassDecl', 'name': 'JobInfo', 'range': [430, 448], 'children': [{'type': 'Property', 'name': 'id', 'range': [437, 439], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [439, 439], 'children': []}]}, {'type': 'Property', 'name': 'name', 'range': [441, 443], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [443, 443], 'children': []}]}, {'type': 'Property', 'name': 'next_run_time', 'range': [445, 447], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [447, 447], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'from_db', 'range': [450, 508], 'children': [{'type': 'Parameter', 'name': 'job_args', 'range': [456, 458], 'children': [{'type': 'TypeAnnotation', 'name': 'JobArgs', 'range': [458, 458], 'children': []}]}, {'type': 'Parameter', 'name': 'job_obj', 'range': [460, 462], 'children': [{'type': 'TypeAnnotation', 'name': 'JobObj', 'range': [462, 462], 'children': []}]}, {'type': 'ReturnType', 'name': 'JobInfo', 'range': [466, 466], 'children': []}, {'type': 'ReturnStatement', 'name': '', 'range': [469, 507], 'children': [{'type': 'CallExpression', 'name': 'JobInfo', 'range': [470, 507], 'children': [{'type': 'Argument', 'name': 'id', 'range': [473, 477], 'children': []}, {'type': 'Argument', 'name': 'name', 'range': [480, 484], 'children': []}, {'type': 'Argument', 'name': 'next_run_time', 'range': [487, 493], 'children': []}, {'type': 'Argument', 'name': 'job_args', 'range': [498, 504], 'children': []}]}]}]}]}
2025-01-08 10:29:00,599 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:29:03,623 - INFO - Step 5 result: {'type': 'Program', 'name': 'log', 'range': [262, 286], 'children': [{'type': 'FunctionDecl', 'name': 'log', 'range': [262, 286], 'children': [{'type': 'FunctionSignature', 'name': 'log', 'range': [262, 271], 'children': [{'type': 'Keyword', 'name': 'def', 'range': [262, 262], 'children': []}, {'type': 'Identifier', 'name': 'log', 'range': [263, 263], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [264, 270], 'children': [{'type': 'Identifier', 'name': 'msg', 'range': [265, 265], 'children': []}, {'type': 'Keyword', 'name': '**', 'range': [267, 268], 'children': []}, {'type': 'Identifier', 'name': 'kwargs', 'range': [269, 269], 'children': []}]}]}, {'type': 'FunctionBody', 'name': 'body', 'range': [272, 286], 'children': [{'type': 'ExpressionStatement', 'name': 'logger.info', 'range': [273, 284], 'children': [{'type': 'MemberExpression', 'name': 'logger.info', 'range': [273, 275], 'children': [{'type': 'Identifier', 'name': 'logger', 'range': [273, 273], 'children': []}, {'type': 'Identifier', 'name': 'info', 'range': [275, 275], 'children': []}]}, {'type': 'CallExpression', 'name': 'call', 'range': [276, 284], 'children': [{'type': 'Literal', 'name': '"[ExecutionScheduler] "', 'range': [277, 277], 'children': []}, {'type': 'Identifier', 'name': 'msg', 'range': [279, 279], 'children': []}, {'type': 'Keyword', 'name': '**', 'range': [281, 282], 'children': []}, {'type': 'Identifier', 'name': 'kwargs', 'range': [283, 283], 'children': []}]}]}]}]}]}
2025-01-08 10:29:03,623 - INFO - Completed main AST analysis flow
2025-01-08 10:29:03,623 - INFO - Successfully processed chunk
2025-01-08 10:29:04,783 - INFO - Step 3 result: {'type': 'Program', 'name': '', 'range': [0, 132], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 1], 'children': [{'type': 'ImportSpecifier', 'name': 'logging', 'range': [1, 1], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [3, 4], 'children': [{'type': 'ImportSpecifier', 'name': 'os', 'range': [4, 4], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [6, 17], 'children': [{'type': 'ImportSpecifier', 'name': 'parse_qs', 'range': [11, 11], 'children': []}, {'type': 'ImportSpecifier', 'name': 'urlencode', 'range': [13, 13], 'children': []}, {'type': 'ImportSpecifier', 'name': 'urlparse', 'range': [15, 15], 'children': []}, {'type': 'ImportSpecifier', 'name': 'urlunparse', 'range': [17, 17], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [20, 27], 'children': [{'type': 'ImportSpecifier', 'name': 'EVENT_JOB_ERROR', 'range': [25, 25], 'children': []}, {'type': 'ImportSpecifier', 'name': 'EVENT_JOB_EXECUTED', 'range': [27, 27], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [29, 36], 'children': [{'type': 'ImportSpecifier', 'name': 'Job', 'range': [34, 34], 'children': []}, {'type': 'ImportSpecifier', 'name': 'JobObj', 'range': [36, 36], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [38, 45], 'children': [{'type': 'ImportSpecifier', 'name': 'SQLAlchemyJobStore', 'range': [45, 45], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [47, 54], 'children': [{'type': 'ImportSpecifier', 'name': 'BlockingScheduler', 'range': [54, 54], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [56, 63], 'children': [{'type': 'ImportSpecifier', 'name': 'CronTrigger', 'range': [63, 63], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [65, 72], 'children': [{'type': 'ImportSpecifier', 'name': 'thread_cached', 'range': [72, 72], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [74, 77], 'children': [{'type': 'ImportSpecifier', 'name': 'load_dotenv', 'range': [77, 77], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [79, 82], 'children': [{'type': 'ImportSpecifier', 'name': 'BaseModel', 'range': [82, 82], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [84, 89], 'children': [{'type': 'ImportSpecifier', 'name': 'MetaData', 'range': [87, 87], 'children': []}, {'type': 'ImportSpecifier', 'name': 'create_engine', 'range': [89, 89], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [92, 99], 'children': [{'type': 'ImportSpecifier', 'name': 'BlockInput', 'range': [99, 99], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [101, 108], 'children': [{'type': 'ImportSpecifier', 'name': 'ExecutionManager', 'range': [108, 108], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [110, 121], 'children': [{'type': 'ImportSpecifier', 'name': 'AppService', 'range': [117, 117], 'children': []}, {'type': 'ImportSpecifier', 'name': 'expose', 'range': [119, 119], 'children': []}, {'type': 'ImportSpecifier', 'name': 'get_service_client', 'range': [121, 121], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [123, 130], 'children': [{'type': 'ImportSpecifier', 'name': 'Config', 'range': [130, 130], 'children': []}]}]}
2025-01-08 10:29:04,783 - INFO - Starting Step 4: AST normalization
2025-01-08 10:29:07,577 - INFO - Step 4 result: {'type': 'Program', 'name': 'execute_graph', 'range': [339, 401], 'children': [{'type': 'FunctionDecl', 'name': 'execute_graph', 'range': [339, 401], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [341, 345], 'children': [{'type': 'Parameter', 'name': 'kwargs', 'range': [342, 344], 'children': []}]}, {'type': 'BlockStatement', 'name': 'body', 'range': [346, 401], 'children': [{'type': 'VariableDeclaration', 'name': 'args', 'range': [348, 355], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [349, 355], 'children': [{'type': 'CallExpression', 'name': 'JobArgs', 'range': [350, 355], 'children': [{'type': 'ArgumentList', 'name': 'arguments', 'range': [351, 355], 'children': [{'type': 'SpreadElement', 'name': 'kwargs', 'range': [352, 354], 'children': []}]}]}]}]}, {'type': 'TryStatement', 'name': 'try', 'range': [357, 401], 'children': [{'type': 'BlockStatement', 'name': 'block', 'range': [358, 386], 'children': [{'type': 'ExpressionStatement', 'name': 'log', 'range': [360, 365], 'children': [{'type': 'CallExpression', 'name': 'log', 'range': [360, 365], 'children': [{'type': 'ArgumentList', 'name': 'arguments', 'range': [361, 365], 'children': [{'type': 'TemplateLiteral', 'name': 'f', 'range': [362, 364], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': 'get_execution_client', 'range': [366, 386], 'children': [{'type': 'CallExpression', 'name': 'add_execution', 'range': [366, 386], 'children': [{'type': 'MemberExpression', 'name': 'get_execution_client', 'range': [366, 370], 'children': []}, {'type': 'ArgumentList', 'name': 'arguments', 'range': [371, 385], 'children': [{'type': 'MemberExpression', 'name': 'args.graph_id', 'range': [373, 376], 'children': []}, {'type': 'MemberExpression', 'name': 'args.input_data', 'range': [377, 380], 'children': []}, {'type': 'MemberExpression', 'name': 'args.user_id', 'range': [381, 384], 'children': []}]}]}]}]}, {'type': 'CatchClause', 'name': 'catch', 'range': [387, 401], 'children': [{'type': 'BlockStatement', 'name': 'body', 'range': [391, 401], 'children': [{'type': 'ExpressionStatement', 'name': 'logger.exception', 'range': [393, 400], 'children': [{'type': 'CallExpression', 'name': 'exception', 'range': [393, 400], 'children': [{'type': 'MemberExpression', 'name': 'logger', 'range': [393, 395], 'children': []}, {'type': 'ArgumentList', 'name': 'arguments', 'range': [396, 400], 'children': [{'type': 'TemplateLiteral', 'name': 'f', 'range': [397, 399], 'children': []}]}]}]}]}]}]}]}]}]}
2025-01-08 10:29:07,577 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:29:09,771 - INFO - Step 5 result: {'type': 'Program', 'name': 'job_listener', 'range': [287, 319], 'children': [{'type': 'FunctionDecl', 'name': 'job_listener', 'range': [287, 319], 'children': [{'type': 'Parameter', 'name': 'event', 'range': [290, 290], 'children': []}, {'type': 'Block', 'name': '', 'range': [293, 319], 'children': [{'type': 'Docstring', 'name': '', 'range': [294, 296], 'children': [{'type': 'Literal', 'name': '"Logs job execution outcomes for better monitoring."', 'range': [295, 295], 'children': []}]}, {'type': 'IfStatement', 'name': '', 'range': [298, 318], 'children': [{'type': 'Condition', 'name': '', 'range': [299, 302], 'children': [{'type': 'MemberExpression', 'name': 'event.exception', 'range': [299, 301], 'children': [{'type': 'Identifier', 'name': 'event', 'range': [299, 299], 'children': []}, {'type': 'Identifier', 'name': 'exception', 'range': [301, 301], 'children': []}]}]}, {'type': 'Block', 'name': '', 'range': [303, 309], 'children': [{'type': 'ExpressionStatement', 'name': '', 'range': [304, 308], 'children': [{'type': 'CallExpression', 'name': 'log', 'range': [304, 308], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [305, 307], 'children': [{'type': 'Literal', 'name': '"Job {event.job_id} failed."', 'range': [307, 307], 'children': []}]}]}]}]}, {'type': 'ElseStatement', 'name': '', 'range': [310, 318], 'children': [{'type': 'Block', 'name': '', 'range': [312, 318], 'children': [{'type': 'ExpressionStatement', 'name': '', 'range': [313, 317], 'children': [{'type': 'CallExpression', 'name': 'log', 'range': [313, 317], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [314, 316], 'children': [{'type': 'Literal', 'name': '"Job {event.job_id} completed successfully."', 'range': [316, 316], 'children': []}]}]}]}]}]}]}]}]}]}
2025-01-08 10:29:09,771 - INFO - Completed main AST analysis flow
2025-01-08 10:29:09,772 - INFO - Successfully processed chunk
2025-01-08 10:29:11,977 - INFO - Step 4 result: {'type': 'Program', 'name': '_extract_schema_from_url', 'range': [133, 245], 'children': [{'type': 'FunctionDecl', 'name': '_extract_schema_from_url', 'range': [133, 245], 'children': [{'type': 'Parameters', 'name': 'database_url', 'range': [135, 137], 'children': []}, {'type': 'ReturnType', 'name': 'tuple[str, str]', 'range': [140, 145], 'children': []}, {'type': 'Docstring', 'name': 'Extracts the schema from the DATABASE_URL and returns the schema and cleaned URL.', 'range': [148, 150], 'children': []}, {'type': 'Assignment', 'name': 'parsed_url', 'range': [152, 157], 'children': [{'type': 'CallExpression', 'name': 'urlparse', 'range': [154, 157], 'children': [{'type': 'Argument', 'name': 'database_url', 'range': [156, 157], 'children': []}]}]}, {'type': 'Assignment', 'name': 'query_params', 'range': [159, 166], 'children': [{'type': 'CallExpression', 'name': 'parse_qs', 'range': [161, 166], 'children': [{'type': 'Argument', 'name': 'parsed_url.query', 'range': [163, 166], 'children': []}]}]}, {'type': 'Assignment', 'name': 'schema_list', 'range': [175, 184], 'children': [{'type': 'CallExpression', 'name': 'query_params.pop', 'range': [177, 184], 'children': [{'type': 'Argument', 'name': '"schema"', 'range': [181, 182], 'children': []}, {'type': 'Argument', 'name': 'None', 'range': [183, 184], 'children': []}]}]}, {'type': 'Assignment', 'name': 'schema', 'range': [186, 195], 'children': [{'type': 'ConditionalExpression', 'name': 'schema_list[0] if schema_list else "public"', 'range': [188, 195], 'children': [{'type': 'Condition', 'name': 'schema_list', 'range': [193, 194], 'children': []}, {'type': 'TrueBranch', 'name': 'schema_list[0]', 'range': [188, 191], 'children': []}, {'type': 'FalseBranch', 'name': '"public"', 'range': [195, 195], 'children': []}]}]}, {'type': 'Assignment', 'name': 'new_query', 'range': [208, 217], 'children': [{'type': 'CallExpression', 'name': 'urlencode', 'range': [210, 217], 'children': [{'type': 'Argument', 'name': 'query_params', 'range': [212, 213], 'children': []}, {'type': 'Argument', 'name': 'doseq=True', 'range': [214, 216], 'children': []}]}]}, {'type': 'Assignment', 'name': 'new_parsed_url', 'range': [219, 228], 'children': [{'type': 'CallExpression', 'name': 'parsed_url._replace', 'range': [221, 228], 'children': [{'type': 'Argument', 'name': 'query=new_query', 'range': [225, 227], 'children': []}]}]}, {'type': 'Assignment', 'name': 'database_url_clean', 'range': [230, 238], 'children': [{'type': 'CallExpression', 'name': 'str', 'range': [232, 238], 'children': [{'type': 'CallExpression', 'name': 'urlunparse', 'range': [234, 238], 'children': [{'type': 'Argument', 'name': 'new_parsed_url', 'range': [236, 237], 'children': []}]}]}]}, {'type': 'Return', 'name': 'return schema, database_url_clean', 'range': [241, 244], 'children': [{'type': 'Tuple', 'name': 'schema, database_url_clean', 'range': [242, 244], 'children': [{'type': 'Element', 'name': 'schema', 'range': [242, 242], 'children': []}, {'type': 'Element', 'name': 'database_url_clean', 'range': [244, 244], 'children': []}]}]}]}]}
2025-01-08 10:29:11,977 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:29:14,565 - INFO - Step 5 result: {'type': 'Program', 'name': '', 'range': [430, 509], 'children': [{'type': 'ClassDecl', 'name': 'JobInfo', 'range': [430, 448], 'children': [{'type': 'Property', 'name': 'id', 'range': [437, 439], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [439, 439], 'children': []}]}, {'type': 'Property', 'name': 'name', 'range': [441, 443], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [443, 443], 'children': []}]}, {'type': 'Property', 'name': 'next_run_time', 'range': [445, 447], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [447, 447], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'from_db', 'range': [450, 508], 'children': [{'type': 'Parameter', 'name': 'job_args', 'range': [456, 458], 'children': [{'type': 'TypeAnnotation', 'name': 'JobArgs', 'range': [458, 458], 'children': []}]}, {'type': 'Parameter', 'name': 'job_obj', 'range': [460, 462], 'children': [{'type': 'TypeAnnotation', 'name': 'JobObj', 'range': [462, 462], 'children': []}]}, {'type': 'ReturnType', 'name': 'JobInfo', 'range': [466, 466], 'children': []}, {'type': 'ReturnStatement', 'name': '', 'range': [469, 507], 'children': [{'type': 'CallExpression', 'name': 'JobInfo', 'range': [470, 507], 'children': [{'type': 'Argument', 'name': 'id', 'range': [473, 477], 'children': []}, {'type': 'Argument', 'name': 'name', 'range': [480, 484], 'children': []}, {'type': 'Argument', 'name': 'next_run_time', 'range': [487, 493], 'children': []}, {'type': 'Argument', 'name': 'job_args', 'range': [498, 504], 'children': []}]}]}]}]}
2025-01-08 10:29:14,566 - INFO - Completed main AST analysis flow
2025-01-08 10:29:14,566 - INFO - Successfully processed chunk
2025-01-08 10:29:28,709 - INFO - Step 5 result: {'type': 'Program', 'name': 'execute_graph', 'range': [339, 401], 'children': [{'type': 'FunctionDecl', 'name': 'execute_graph', 'range': [339, 401], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [341, 345], 'children': [{'type': 'Parameter', 'name': 'kwargs', 'range': [342, 344], 'children': []}]}, {'type': 'BlockStatement', 'name': 'body', 'range': [346, 401], 'children': [{'type': 'VariableDeclaration', 'name': 'args', 'range': [348, 355], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [349, 355], 'children': [{'type': 'CallExpression', 'name': 'JobArgs', 'range': [350, 355], 'children': [{'type': 'ArgumentList', 'name': 'arguments', 'range': [351, 355], 'children': [{'type': 'SpreadElement', 'name': 'kwargs', 'range': [352, 354], 'children': []}]}]}]}]}, {'type': 'TryStatement', 'name': 'try', 'range': [357, 401], 'children': [{'type': 'BlockStatement', 'name': 'block', 'range': [358, 386], 'children': [{'type': 'ExpressionStatement', 'name': 'log', 'range': [360, 365], 'children': [{'type': 'CallExpression', 'name': 'log', 'range': [360, 365], 'children': [{'type': 'ArgumentList', 'name': 'arguments', 'range': [361, 365], 'children': [{'type': 'TemplateLiteral', 'name': 'f', 'range': [362, 364], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': 'get_execution_client', 'range': [366, 386], 'children': [{'type': 'CallExpression', 'name': 'add_execution', 'range': [366, 386], 'children': [{'type': 'MemberExpression', 'name': 'get_execution_client', 'range': [366, 370], 'children': []}, {'type': 'ArgumentList', 'name': 'arguments', 'range': [371, 385], 'children': [{'type': 'MemberExpression', 'name': 'args.graph_id', 'range': [373, 376], 'children': []}, {'type': 'MemberExpression', 'name': 'args.input_data', 'range': [377, 380], 'children': []}, {'type': 'MemberExpression', 'name': 'args.user_id', 'range': [381, 384], 'children': []}]}]}]}]}, {'type': 'CatchClause', 'name': 'catch', 'range': [387, 401], 'children': [{'type': 'BlockStatement', 'name': 'body', 'range': [391, 401], 'children': [{'type': 'ExpressionStatement', 'name': 'logger.exception', 'range': [393, 400], 'children': [{'type': 'CallExpression', 'name': 'exception', 'range': [393, 400], 'children': [{'type': 'MemberExpression', 'name': 'logger', 'range': [393, 395], 'children': []}, {'type': 'ArgumentList', 'name': 'arguments', 'range': [396, 400], 'children': [{'type': 'TemplateLiteral', 'name': 'f', 'range': [397, 399], 'children': []}]}]}]}]}]}]}]}]}]}
2025-01-08 10:29:28,710 - INFO - Completed main AST analysis flow
2025-01-08 10:29:28,723 - INFO - Successfully processed chunk
2025-01-08 10:29:32,314 - INFO - Step 4 result: {'type': 'Program', 'name': '', 'range': [0, 132], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 1], 'children': [{'type': 'ImportSpecifier', 'name': 'logging', 'range': [1, 1], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [3, 4], 'children': [{'type': 'ImportSpecifier', 'name': 'os', 'range': [4, 4], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [6, 17], 'children': [{'type': 'ImportSpecifier', 'name': 'parse_qs', 'range': [11, 11], 'children': []}, {'type': 'ImportSpecifier', 'name': 'urlencode', 'range': [13, 13], 'children': []}, {'type': 'ImportSpecifier', 'name': 'urlparse', 'range': [15, 15], 'children': []}, {'type': 'ImportSpecifier', 'name': 'urlunparse', 'range': [17, 17], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [20, 27], 'children': [{'type': 'ImportSpecifier', 'name': 'EVENT_JOB_ERROR', 'range': [25, 25], 'children': []}, {'type': 'ImportSpecifier', 'name': 'EVENT_JOB_EXECUTED', 'range': [27, 27], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [29, 36], 'children': [{'type': 'ImportSpecifier', 'name': 'Job', 'range': [34, 34], 'children': []}, {'type': 'ImportSpecifier', 'name': 'JobObj', 'range': [36, 36], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [38, 45], 'children': [{'type': 'ImportSpecifier', 'name': 'SQLAlchemyJobStore', 'range': [45, 45], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [47, 54], 'children': [{'type': 'ImportSpecifier', 'name': 'BlockingScheduler', 'range': [54, 54], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [56, 63], 'children': [{'type': 'ImportSpecifier', 'name': 'CronTrigger', 'range': [63, 63], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [65, 72], 'children': [{'type': 'ImportSpecifier', 'name': 'thread_cached', 'range': [72, 72], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [74, 77], 'children': [{'type': 'ImportSpecifier', 'name': 'load_dotenv', 'range': [77, 77], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [79, 82], 'children': [{'type': 'ImportSpecifier', 'name': 'BaseModel', 'range': [82, 82], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [84, 89], 'children': [{'type': 'ImportSpecifier', 'name': 'MetaData', 'range': [87, 87], 'children': []}, {'type': 'ImportSpecifier', 'name': 'create_engine', 'range': [89, 89], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [92, 99], 'children': [{'type': 'ImportSpecifier', 'name': 'BlockInput', 'range': [99, 99], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [101, 108], 'children': [{'type': 'ImportSpecifier', 'name': 'ExecutionManager', 'range': [108, 108], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [110, 121], 'children': [{'type': 'ImportSpecifier', 'name': 'AppService', 'range': [117, 117], 'children': []}, {'type': 'ImportSpecifier', 'name': 'expose', 'range': [119, 119], 'children': []}, {'type': 'ImportSpecifier', 'name': 'get_service_client', 'range': [121, 121], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [123, 130], 'children': [{'type': 'ImportSpecifier', 'name': 'Config', 'range': [130, 130], 'children': []}]}]}
2025-01-08 10:29:32,315 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:29:33,028 - INFO - Step 3 result: {'type': 'Program', 'name': 'ExecutionScheduler', 'range': [510, 999], 'children': [{'type': 'ClassDeclaration', 'name': 'ExecutionScheduler', 'range': [510, 520], 'children': [{'type': 'Inheritance', 'name': 'AppService', 'range': [512, 514], 'children': []}]}, {'type': 'MethodDeclaration', 'name': 'get_port', 'range': [525, 539], 'children': [{'type': 'Decorator', 'name': '@classmethod', 'range': [522, 524], 'children': []}, {'type': 'ReturnType', 'name': 'int', 'range': [530, 532], 'children': []}, {'type': 'ReturnStatement', 'name': '', 'range': [535, 539], 'children': [{'type': 'Expression', 'name': 'config.execution_scheduler_port', 'range': [536, 538], 'children': []}]}]}, {'type': 'MethodDeclaration', 'name': 'execution_client', 'range': [547, 562], 'children': [{'type': 'Decorator', 'name': '@property', 'range': [541, 543], 'children': []}, {'type': 'Decorator', 'name': '@thread_cached', 'range': [544, 546], 'children': []}, {'type': 'ReturnType', 'name': 'ExecutionManager', 'range': [552, 554], 'children': []}, {'type': 'ReturnStatement', 'name': '', 'range': [557, 562], 'children': [{'type': 'Expression', 'name': 'get_service_client(ExecutionManager)', 'range': [558, 561], 'children': []}]}]}, {'type': 'MethodDeclaration', 'name': 'run_service', 'range': [564, 649], 'children': [{'type': 'ExpressionStatement', 'name': 'load_dotenv()', 'range': [571, 573], 'children': []}, {'type': 'Assignment', 'name': 'db_schema, db_url = _extract_schema_from_url(os.getenv("DATABASE_URL"))', 'range': [575, 587], 'children': []}, {'type': 'Assignment', 'name': 'self.scheduler = BlockingScheduler(jobstores={"default": SQLAlchemyJobStore(engine=create_engine(db_url), metadata=MetaData(schema=db_schema))})', 'range': [589, 627], 'children': []}, {'type': 'ExpressionStatement', 'name': 'self.scheduler.add_listener(job_listener, EVENT_JOB_EXECUTED | EVENT_JOB_ERROR)', 'range': [629, 640], 'children': []}, {'type': 'ExpressionStatement', 'name': 'self.scheduler.start()', 'range': [642, 648], 'children': []}]}, {'type': 'MethodDeclaration', 'name': 'add_execution_schedule', 'range': [654, 775], 'children': [{'type': 'Decorator', 'name': '@expose', 'range': [651, 653], 'children': []}, {'type': 'ReturnType', 'name': 'JobInfo', 'range': [687, 689], 'children': []}, {'type': 'Assignment', 'name': 'job_args = JobArgs(graph_id=graph_id, input_data=input_data, user_id=user_id, graph_version=graph_version, cron=cron)', 'range': [692, 722], 'children': []}, {'type': 'Assignment', 'name': 'job = self.scheduler.add_job(execute_graph, CronTrigger.from_crontab(cron), kwargs=job_args.model_dump(), replace_existing=True)', 'range': [724, 758], 'children': []}, {'type': 'ExpressionStatement', 'name': 'log(f"Added job {job.id} with cron schedule \'{cron}\' input data: {input_data}")', 'range': [760, 764], 'children': []}, {'type': 'ReturnStatement', 'name': '', 'range': [766, 775], 'children': [{'type': 'Expression', 'name': 'JobInfo.from_db(job_args, job)', 'range': [767, 774], 'children': []}]}]}, {'type': 'MethodDeclaration', 'name': 'delete_schedule', 'range': [781, 877], 'children': [{'type': 'Decorator', 'name': '@expose', 'range': [777, 779], 'children': []}, {'type': 'ReturnType', 'name': 'JobInfo', 'range': [793, 795], 'children': []}, {'type': 'Assignment', 'name': 'job = self.scheduler.get_job(schedule_id)', 'range': [798, 807], 'children': []}, {'type': 'IfStatement', 'name': 'if not job:', 'range': [809, 826], 'children': [{'type': 'ExpressionStatement', 'name': 'log(f"Job {schedule_id} not found.")', 'range': [814, 818], 'children': []}, {'type': 'ThrowStatement', 'name': 'raise ValueError(f"Job #{schedule_id} not found.")', 'range': [820, 825], 'children': []}]}, {'type': 'Assignment', 'name': 'job_args = JobArgs(**job.kwargs)', 'range': [828, 837], 'children': []}, {'type': 'IfStatement', 'name': 'if job_args.user_id != user_id:', 'range': [839, 853], 'children': [{'type': 'ThrowStatement', 'name': 'raise ValueError("User ID does not match the job\'s user ID.")', 'range': [848, 852], 'children': []}]}, {'type': 'ExpressionStatement', 'name': 'log(f"Deleting job {schedule_id}")', 'range': [855, 859], 'children': []}, {'type': 'ExpressionStatement', 'name': 'job.remove()', 'range': [861, 865], 'children': []}, {'type': 'ReturnStatement', 'name': '', 'range': [868, 877], 'children': [{'type': 'Expression', 'name': 'JobInfo.from_db(job_args, job)', 'range': [869, 876], 'children': []}]}]}, {'type': 'MethodDeclaration', 'name': 'get_execution_schedules', 'range': [883, 998], 'children': [{'type': 'Decorator', 'name': '@expose', 'range': [879, 881], 'children': []}, {'type': 'ReturnType', 'name': 'list[JobInfo]', 'range': [905, 910], 'children': []}, {'type': 'Assignment', 'name': 'schedules = []', 'range': [913, 916], 'children': []}, {'type': 'ForStatement', 'name': 'for job in self.scheduler.get_jobs():', 'range': [918, 928], 'children': [{'type': 'Assignment', 'name': 'job_args = JobArgs(**job.kwargs)', 'range': [930, 939], 'children': []}, {'type': 'IfStatement', 'name': 'if (job.next_run_time is not None and (graph_id is None or job_args.graph_id == graph_id) and (user_id is None or job_args.user_id == user_id)):', 'range': [941, 980], 'children': [{'type': 'ExpressionStatement', 'name': 'schedules.append(JobInfo.from_db(job_args, job))', 'range': [982, 994], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [996, 998], 'children': [{'type': 'Expression', 'name': 'schedules', 'range': [997, 997], 'children': []}]}]}]}
2025-01-08 10:29:33,029 - INFO - Starting Step 4: AST normalization
2025-01-08 10:29:36,546 - INFO - Step 5 result: {'type': 'Program', 'name': '_extract_schema_from_url', 'range': [133, 245], 'children': [{'type': 'FunctionDecl', 'name': '_extract_schema_from_url', 'range': [133, 245], 'children': [{'type': 'Parameters', 'name': 'database_url', 'range': [135, 137], 'children': []}, {'type': 'ReturnType', 'name': 'tuple[str, str]', 'range': [140, 145], 'children': []}, {'type': 'Docstring', 'name': 'Extracts the schema from the DATABASE_URL and returns the schema and cleaned URL.', 'range': [148, 150], 'children': []}, {'type': 'Assignment', 'name': 'parsed_url', 'range': [152, 157], 'children': [{'type': 'CallExpression', 'name': 'urlparse', 'range': [154, 157], 'children': [{'type': 'Argument', 'name': 'database_url', 'range': [156, 157], 'children': []}]}]}, {'type': 'Assignment', 'name': 'query_params', 'range': [159, 166], 'children': [{'type': 'CallExpression', 'name': 'parse_qs', 'range': [161, 166], 'children': [{'type': 'Argument', 'name': 'parsed_url.query', 'range': [163, 166], 'children': []}]}]}, {'type': 'Assignment', 'name': 'schema_list', 'range': [175, 184], 'children': [{'type': 'CallExpression', 'name': 'query_params.pop', 'range': [177, 184], 'children': [{'type': 'Argument', 'name': '"schema"', 'range': [181, 182], 'children': []}, {'type': 'Argument', 'name': 'None', 'range': [183, 184], 'children': []}]}]}, {'type': 'Assignment', 'name': 'schema', 'range': [186, 195], 'children': [{'type': 'ConditionalExpression', 'name': 'schema_list[0] if schema_list else "public"', 'range': [188, 195], 'children': [{'type': 'Condition', 'name': 'schema_list', 'range': [193, 194], 'children': []}, {'type': 'TrueBranch', 'name': 'schema_list[0]', 'range': [188, 191], 'children': []}, {'type': 'FalseBranch', 'name': '"public"', 'range': [195, 195], 'children': []}]}]}, {'type': 'Assignment', 'name': 'new_query', 'range': [208, 217], 'children': [{'type': 'CallExpression', 'name': 'urlencode', 'range': [210, 217], 'children': [{'type': 'Argument', 'name': 'query_params', 'range': [212, 213], 'children': []}, {'type': 'Argument', 'name': 'doseq=True', 'range': [214, 216], 'children': []}]}]}, {'type': 'Assignment', 'name': 'new_parsed_url', 'range': [219, 228], 'children': [{'type': 'CallExpression', 'name': 'parsed_url._replace', 'range': [221, 228], 'children': [{'type': 'Argument', 'name': 'query=new_query', 'range': [225, 227], 'children': []}]}]}, {'type': 'Assignment', 'name': 'database_url_clean', 'range': [230, 238], 'children': [{'type': 'CallExpression', 'name': 'str', 'range': [232, 238], 'children': [{'type': 'CallExpression', 'name': 'urlunparse', 'range': [234, 238], 'children': [{'type': 'Argument', 'name': 'new_parsed_url', 'range': [236, 237], 'children': []}]}]}]}, {'type': 'Return', 'name': 'return schema, database_url_clean', 'range': [241, 244], 'children': [{'type': 'Tuple', 'name': 'schema, database_url_clean', 'range': [242, 244], 'children': [{'type': 'Element', 'name': 'schema', 'range': [242, 242], 'children': []}, {'type': 'Element', 'name': 'database_url_clean', 'range': [244, 244], 'children': []}]}]}]}]}
2025-01-08 10:29:36,546 - INFO - Completed main AST analysis flow
2025-01-08 10:29:36,547 - INFO - Successfully processed chunk
2025-01-08 10:29:59,033 - INFO - Step 5 result: {'type': 'Program', 'name': '', 'range': [0, 132], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 1], 'children': [{'type': 'ImportSpecifier', 'name': 'logging', 'range': [1, 1], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [3, 4], 'children': [{'type': 'ImportSpecifier', 'name': 'os', 'range': [4, 4], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [6, 17], 'children': [{'type': 'ImportSpecifier', 'name': 'parse_qs', 'range': [11, 11], 'children': []}, {'type': 'ImportSpecifier', 'name': 'urlencode', 'range': [13, 13], 'children': []}, {'type': 'ImportSpecifier', 'name': 'urlparse', 'range': [15, 15], 'children': []}, {'type': 'ImportSpecifier', 'name': 'urlunparse', 'range': [17, 17], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [20, 27], 'children': [{'type': 'ImportSpecifier', 'name': 'EVENT_JOB_ERROR', 'range': [25, 25], 'children': []}, {'type': 'ImportSpecifier', 'name': 'EVENT_JOB_EXECUTED', 'range': [27, 27], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [29, 36], 'children': [{'type': 'ImportSpecifier', 'name': 'Job', 'range': [34, 34], 'children': []}, {'type': 'ImportSpecifier', 'name': 'JobObj', 'range': [36, 36], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [38, 45], 'children': [{'type': 'ImportSpecifier', 'name': 'SQLAlchemyJobStore', 'range': [45, 45], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [47, 54], 'children': [{'type': 'ImportSpecifier', 'name': 'BlockingScheduler', 'range': [54, 54], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [56, 63], 'children': [{'type': 'ImportSpecifier', 'name': 'CronTrigger', 'range': [63, 63], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [65, 72], 'children': [{'type': 'ImportSpecifier', 'name': 'thread_cached', 'range': [72, 72], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [74, 77], 'children': [{'type': 'ImportSpecifier', 'name': 'load_dotenv', 'range': [77, 77], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [79, 82], 'children': [{'type': 'ImportSpecifier', 'name': 'BaseModel', 'range': [82, 82], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [84, 89], 'children': [{'type': 'ImportSpecifier', 'name': 'MetaData', 'range': [87, 87], 'children': []}, {'type': 'ImportSpecifier', 'name': 'create_engine', 'range': [89, 89], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [92, 99], 'children': [{'type': 'ImportSpecifier', 'name': 'BlockInput', 'range': [99, 99], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [101, 108], 'children': [{'type': 'ImportSpecifier', 'name': 'ExecutionManager', 'range': [108, 108], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [110, 121], 'children': [{'type': 'ImportSpecifier', 'name': 'AppService', 'range': [117, 117], 'children': []}, {'type': 'ImportSpecifier', 'name': 'expose', 'range': [119, 119], 'children': []}, {'type': 'ImportSpecifier', 'name': 'get_service_client', 'range': [121, 121], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [123, 130], 'children': [{'type': 'ImportSpecifier', 'name': 'Config', 'range': [130, 130], 'children': []}]}]}
2025-01-08 10:29:59,033 - INFO - Completed main AST analysis flow
2025-01-08 10:29:59,033 - INFO - Successfully processed chunk
2025-01-08 10:30:12,135 - INFO - Step 4 result: {'type': 'Program', 'name': 'ExecutionScheduler', 'range': [510, 999], 'children': [{'type': 'ClassDecl', 'name': 'ExecutionScheduler', 'range': [510, 520], 'children': [{'type': 'Inheritance', 'name': 'AppService', 'range': [512, 514], 'children': []}]}, {'type': 'FunctionDecl', 'name': 'get_port', 'range': [525, 539], 'children': [{'type': 'Decorator', 'name': '@classmethod', 'range': [522, 524], 'children': []}, {'type': 'ReturnType', 'name': 'int', 'range': [530, 532], 'children': []}, {'type': 'ReturnStatement', 'name': '', 'range': [535, 539], 'children': [{'type': 'Identifier', 'name': 'config.execution_scheduler_port', 'range': [536, 538], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'execution_client', 'range': [547, 562], 'children': [{'type': 'Decorator', 'name': '@property', 'range': [541, 543], 'children': []}, {'type': 'Decorator', 'name': '@thread_cached', 'range': [544, 546], 'children': []}, {'type': 'ReturnType', 'name': 'ExecutionManager', 'range': [552, 554], 'children': []}, {'type': 'ReturnStatement', 'name': '', 'range': [557, 562], 'children': [{'type': 'CallExpression', 'name': 'get_service_client(ExecutionManager)', 'range': [558, 561], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'run_service', 'range': [564, 649], 'children': [{'type': 'ExpressionStatement', 'name': 'load_dotenv()', 'range': [571, 573], 'children': []}, {'type': 'Assignment', 'name': 'db_schema, db_url = _extract_schema_from_url(os.getenv("DATABASE_URL"))', 'range': [575, 587], 'children': []}, {'type': 'Assignment', 'name': 'self.scheduler = BlockingScheduler(jobstores={"default": SQLAlchemyJobStore(engine=create_engine(db_url), metadata=MetaData(schema=db_schema))})', 'range': [589, 627], 'children': []}, {'type': 'ExpressionStatement', 'name': 'self.scheduler.add_listener(job_listener, EVENT_JOB_EXECUTED | EVENT_JOB_ERROR)', 'range': [629, 640], 'children': []}, {'type': 'ExpressionStatement', 'name': 'self.scheduler.start()', 'range': [642, 648], 'children': []}]}, {'type': 'FunctionDecl', 'name': 'add_execution_schedule', 'range': [654, 775], 'children': [{'type': 'Decorator', 'name': '@expose', 'range': [651, 653], 'children': []}, {'type': 'ReturnType', 'name': 'JobInfo', 'range': [687, 689], 'children': []}, {'type': 'Assignment', 'name': 'job_args = JobArgs(graph_id=graph_id, input_data=input_data, user_id=user_id, graph_version=graph_version, cron=cron)', 'range': [692, 722], 'children': []}, {'type': 'Assignment', 'name': 'job = self.scheduler.add_job(execute_graph, CronTrigger.from_crontab(cron), kwargs=job_args.model_dump(), replace_existing=True)', 'range': [724, 758], 'children': []}, {'type': 'ExpressionStatement', 'name': 'log(f"Added job {job.id} with cron schedule \'{cron}\' input data: {input_data}")', 'range': [760, 764], 'children': []}, {'type': 'ReturnStatement', 'name': '', 'range': [766, 775], 'children': [{'type': 'CallExpression', 'name': 'JobInfo.from_db(job_args, job)', 'range': [767, 774], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'delete_schedule', 'range': [781, 877], 'children': [{'type': 'Decorator', 'name': '@expose', 'range': [777, 779], 'children': []}, {'type': 'ReturnType', 'name': 'JobInfo', 'range': [793, 795], 'children': []}, {'type': 'Assignment', 'name': 'job = self.scheduler.get_job(schedule_id)', 'range': [798, 807], 'children': []}, {'type': 'IfStatement', 'name': 'if not job:', 'range': [809, 826], 'children': [{'type': 'ExpressionStatement', 'name': 'log(f"Job {schedule_id} not found.")', 'range': [814, 818], 'children': []}, {'type': 'ThrowStatement', 'name': 'raise ValueError(f"Job #{schedule_id} not found.")', 'range': [820, 825], 'children': []}]}, {'type': 'Assignment', 'name': 'job_args = JobArgs(**job.kwargs)', 'range': [828, 837], 'children': []}, {'type': 'IfStatement', 'name': 'if job_args.user_id != user_id:', 'range': [839, 853], 'children': [{'type': 'ThrowStatement', 'name': 'raise ValueError("User ID does not match the job\'s user ID.")', 'range': [848, 852], 'children': []}]}, {'type': 'ExpressionStatement', 'name': 'log(f"Deleting job {schedule_id}")', 'range': [855, 859], 'children': []}, {'type': 'ExpressionStatement', 'name': 'job.remove()', 'range': [861, 865], 'children': []}, {'type': 'ReturnStatement', 'name': '', 'range': [868, 877], 'children': [{'type': 'CallExpression', 'name': 'JobInfo.from_db(job_args, job)', 'range': [869, 876], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'get_execution_schedules', 'range': [883, 998], 'children': [{'type': 'Decorator', 'name': '@expose', 'range': [879, 881], 'children': []}, {'type': 'ReturnType', 'name': 'list[JobInfo]', 'range': [905, 910], 'children': []}, {'type': 'Assignment', 'name': 'schedules = []', 'range': [913, 916], 'children': []}, {'type': 'ForStatement', 'name': 'for job in self.scheduler.get_jobs():', 'range': [918, 928], 'children': [{'type': 'Assignment', 'name': 'job_args = JobArgs(**job.kwargs)', 'range': [930, 939], 'children': []}, {'type': 'IfStatement', 'name': 'if (job.next_run_time is not None and (graph_id is None or job_args.graph_id == graph_id) and (user_id is None or job_args.user_id == user_id)):', 'range': [941, 980], 'children': [{'type': 'ExpressionStatement', 'name': 'schedules.append(JobInfo.from_db(job_args, job))', 'range': [982, 994], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [996, 998], 'children': [{'type': 'Identifier', 'name': 'schedules', 'range': [997, 997], 'children': []}]}]}]}
2025-01-08 10:30:12,136 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:30:51,667 - INFO - Step 5 result: {'type': 'Program', 'name': 'ExecutionScheduler', 'range': [510, 999], 'children': [{'type': 'ClassDecl', 'name': 'ExecutionScheduler', 'range': [510, 520], 'children': [{'type': 'Inheritance', 'name': 'AppService', 'range': [512, 514], 'children': []}]}, {'type': 'FunctionDecl', 'name': 'get_port', 'range': [525, 539], 'children': [{'type': 'Decorator', 'name': '@classmethod', 'range': [522, 524], 'children': []}, {'type': 'ReturnType', 'name': 'int', 'range': [530, 532], 'children': []}, {'type': 'ReturnStatement', 'name': '', 'range': [535, 539], 'children': [{'type': 'Identifier', 'name': 'config.execution_scheduler_port', 'range': [536, 538], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'execution_client', 'range': [547, 562], 'children': [{'type': 'Decorator', 'name': '@property', 'range': [541, 543], 'children': []}, {'type': 'Decorator', 'name': '@thread_cached', 'range': [544, 546], 'children': []}, {'type': 'ReturnType', 'name': 'ExecutionManager', 'range': [552, 554], 'children': []}, {'type': 'ReturnStatement', 'name': '', 'range': [557, 562], 'children': [{'type': 'CallExpression', 'name': 'get_service_client(ExecutionManager)', 'range': [558, 561], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'run_service', 'range': [564, 649], 'children': [{'type': 'ExpressionStatement', 'name': 'load_dotenv()', 'range': [571, 573], 'children': []}, {'type': 'Assignment', 'name': 'db_schema, db_url = _extract_schema_from_url(os.getenv("DATABASE_URL"))', 'range': [575, 587], 'children': []}, {'type': 'Assignment', 'name': 'self.scheduler = BlockingScheduler(jobstores={"default": SQLAlchemyJobStore(engine=create_engine(db_url), metadata=MetaData(schema=db_schema))})', 'range': [589, 627], 'children': []}, {'type': 'ExpressionStatement', 'name': 'self.scheduler.add_listener(job_listener, EVENT_JOB_EXECUTED | EVENT_JOB_ERROR)', 'range': [629, 640], 'children': []}, {'type': 'ExpressionStatement', 'name': 'self.scheduler.start()', 'range': [642, 648], 'children': []}]}, {'type': 'FunctionDecl', 'name': 'add_execution_schedule', 'range': [654, 775], 'children': [{'type': 'Decorator', 'name': '@expose', 'range': [651, 653], 'children': []}, {'type': 'ReturnType', 'name': 'JobInfo', 'range': [687, 689], 'children': []}, {'type': 'Assignment', 'name': 'job_args = JobArgs(graph_id=graph_id, input_data=input_data, user_id=user_id, graph_version=graph_version, cron=cron)', 'range': [692, 722], 'children': []}, {'type': 'Assignment', 'name': 'job = self.scheduler.add_job(execute_graph, CronTrigger.from_crontab(cron), kwargs=job_args.model_dump(), replace_existing=True)', 'range': [724, 758], 'children': []}, {'type': 'ExpressionStatement', 'name': 'log(f"Added job {job.id} with cron schedule \'{cron}\' input data: {input_data}")', 'range': [760, 764], 'children': []}, {'type': 'ReturnStatement', 'name': '', 'range': [766, 775], 'children': [{'type': 'CallExpression', 'name': 'JobInfo.from_db(job_args, job)', 'range': [767, 774], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'delete_schedule', 'range': [781, 877], 'children': [{'type': 'Decorator', 'name': '@expose', 'range': [777, 779], 'children': []}, {'type': 'ReturnType', 'name': 'JobInfo', 'range': [793, 795], 'children': []}, {'type': 'Assignment', 'name': 'job = self.scheduler.get_job(schedule_id)', 'range': [798, 807], 'children': []}, {'type': 'IfStatement', 'name': 'if not job:', 'range': [809, 826], 'children': [{'type': 'ExpressionStatement', 'name': 'log(f"Job {schedule_id} not found.")', 'range': [814, 818], 'children': []}, {'type': 'ThrowStatement', 'name': 'raise ValueError(f"Job #{schedule_id} not found.")', 'range': [820, 825], 'children': []}]}, {'type': 'Assignment', 'name': 'job_args = JobArgs(**job.kwargs)', 'range': [828, 837], 'children': []}, {'type': 'IfStatement', 'name': 'if job_args.user_id != user_id:', 'range': [839, 853], 'children': [{'type': 'ThrowStatement', 'name': 'raise ValueError("User ID does not match the job\'s user ID.")', 'range': [848, 852], 'children': []}]}, {'type': 'ExpressionStatement', 'name': 'log(f"Deleting job {schedule_id}")', 'range': [855, 859], 'children': []}, {'type': 'ExpressionStatement', 'name': 'job.remove()', 'range': [861, 865], 'children': []}, {'type': 'ReturnStatement', 'name': '', 'range': [868, 877], 'children': [{'type': 'CallExpression', 'name': 'JobInfo.from_db(job_args, job)', 'range': [869, 876], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'get_execution_schedules', 'range': [883, 998], 'children': [{'type': 'Decorator', 'name': '@expose', 'range': [879, 881], 'children': []}, {'type': 'ReturnType', 'name': 'list[JobInfo]', 'range': [905, 910], 'children': []}, {'type': 'Assignment', 'name': 'schedules = []', 'range': [913, 916], 'children': []}, {'type': 'ForStatement', 'name': 'for job in self.scheduler.get_jobs():', 'range': [918, 928], 'children': [{'type': 'Assignment', 'name': 'job_args = JobArgs(**job.kwargs)', 'range': [930, 939], 'children': []}, {'type': 'IfStatement', 'name': 'if (job.next_run_time is not None and (graph_id is None or job_args.graph_id == graph_id) and (user_id is None or job_args.user_id == user_id)):', 'range': [941, 980], 'children': [{'type': 'ExpressionStatement', 'name': 'schedules.append(JobInfo.from_db(job_args, job))', 'range': [982, 994], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [996, 998], 'children': [{'type': 'Identifier', 'name': 'schedules', 'range': [997, 997], 'children': []}]}]}]}
2025-01-08 10:30:51,667 - INFO - Completed main AST analysis flow
2025-01-08 10:30:51,669 - INFO - Successfully processed chunk
2025-01-08 10:30:51,720 - INFO - Starting code generation from AST
2025-01-08 10:31:17,537 - INFO - Successfully generated code from AST
2025-01-08 10:31:17,538 - INFO - Starting static code similarity comparison
2025-01-08 10:31:17,558 - INFO - Static similarity result: {'final_score': 96.61, 'length_similarity': 97.84, 'token_similarity': 93.3, 'structure_similarity': 95.77, 'function_similarity': 100, 'complexity_similarity': 100.0, 'variable_similarity': 100}
