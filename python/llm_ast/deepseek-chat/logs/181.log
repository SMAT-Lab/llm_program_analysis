2025-01-08 10:27:27,487 - INFO - Processing sample 181
2025-01-08 10:27:27,488 - INFO - Starting Step 0: Splitting code into top-level declarations
2025-01-08 10:27:33,215 - INFO - Successfully split code into 2 top-level declarations
2025-01-08 10:27:33,217 - INFO - Processing chunk #0 (size=601 chars, start_index=0)
2025-01-08 10:27:33,217 - INFO - Processing chunk with 601 chars starting at index 0
2025-01-08 10:27:33,217 - INFO - Starting main AST analysis flow
2025-01-08 10:27:33,218 - INFO - Tokenized code into 125 tokens
2025-01-08 10:27:33,218 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:33,218 - INFO - Processing chunk #1 (size=5703 chars, start_index=125)
2025-01-08 10:27:33,219 - INFO - Processing chunk with 5703 chars starting at index 125
2025-01-08 10:27:33,219 - INFO - Starting main AST analysis flow
2025-01-08 10:27:33,220 - INFO - Tokenized code into 471 tokens
2025-01-08 10:27:33,220 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:40,106 - INFO - Step 1 result: {'type': 'Program', 'name': 'BaseWebhooksManager', 'range': [125, 595], 'children': [{'type': 'ClassDeclaration', 'name': 'BaseWebhooksManager', 'range': [125, 168], 'children': []}, {'type': 'VariableDeclaration', 'name': 'PROVIDER_NAME', 'range': [150, 155], 'children': []}, {'type': 'VariableDeclaration', 'name': 'WebhookType', 'range': [171, 173], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'get_suitable_auto_webhook', 'range': [176, 280], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'get_manual_webhook', 'range': [282, 364], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'prune_webhook_if_dangling', 'range': [366, 595], 'children': []}]}
2025-01-08 10:27:40,182 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:27:46,632 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [0, 124], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 2], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [3, 5], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [6, 12], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [13, 23], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [24, 28], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [30, 34], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [35, 39], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [41, 47], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [48, 56], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [57, 65], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [66, 76], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [77, 85], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [86, 94], 'children': []}, {'type': 'VariableDeclaration', 'name': 'logger', 'range': [96, 104], 'children': []}, {'type': 'VariableDeclaration', 'name': 'app_config', 'range': [105, 110], 'children': []}, {'type': 'TypeAliasDeclaration', 'name': 'WT', 'range': [112, 122], 'children': []}]}
2025-01-08 10:27:46,632 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:28,895 - INFO - Step 2 result: {'nodes': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 2], 'children': [{'type': 'ImportClause', 'name': 'logging', 'range': [1, 1], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [3, 5], 'children': [{'type': 'ImportClause', 'name': 'secrets', 'range': [4, 4], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [6, 12], 'children': [{'type': 'FromClause', 'name': 'abc', 'range': [7, 7], 'children': []}, {'type': 'ImportClause', 'name': 'ABC', 'range': [9, 9], 'children': []}, {'type': 'ImportClause', 'name': 'abstractmethod', 'range': [11, 11], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [13, 23], 'children': [{'type': 'FromClause', 'name': 'typing', 'range': [14, 14], 'children': []}, {'type': 'ImportClause', 'name': 'ClassVar', 'range': [16, 16], 'children': []}, {'type': 'ImportClause', 'name': 'Generic', 'range': [18, 18], 'children': []}, {'type': 'ImportClause', 'name': 'Optional', 'range': [20, 20], 'children': []}, {'type': 'ImportClause', 'name': 'TypeVar', 'range': [22, 22], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [24, 28], 'children': [{'type': 'FromClause', 'name': 'uuid', 'range': [25, 25], 'children': []}, {'type': 'ImportClause', 'name': 'uuid4', 'range': [27, 27], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [30, 34], 'children': [{'type': 'FromClause', 'name': 'fastapi', 'range': [31, 31], 'children': []}, {'type': 'ImportClause', 'name': 'Request', 'range': [33, 33], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [35, 39], 'children': [{'type': 'FromClause', 'name': 'strenum', 'range': [36, 36], 'children': []}, {'type': 'ImportClause', 'name': 'StrEnum', 'range': [38, 38], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [41, 47], 'children': [{'type': 'FromClause', 'name': 'backend.data', 'range': [42, 44], 'children': []}, {'type': 'ImportClause', 'name': 'integrations', 'range': [46, 46], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [48, 56], 'children': [{'type': 'FromClause', 'name': 'backend.data.model', 'range': [49, 53], 'children': []}, {'type': 'ImportClause', 'name': 'Credentials', 'range': [55, 55], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [57, 65], 'children': [{'type': 'FromClause', 'name': 'backend.integrations.providers', 'range': [58, 62], 'children': []}, {'type': 'ImportClause', 'name': 'ProviderName', 'range': [64, 64], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [66, 76], 'children': [{'type': 'FromClause', 'name': 'backend.integrations.webhooks.utils', 'range': [67, 73], 'children': []}, {'type': 'ImportClause', 'name': 'webhook_ingress_url', 'range': [75, 75], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [77, 85], 'children': [{'type': 'FromClause', 'name': 'backend.util.exceptions', 'range': [78, 82], 'children': []}, {'type': 'ImportClause', 'name': 'MissingConfigError', 'range': [84, 84], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [86, 94], 'children': [{'type': 'FromClause', 'name': 'backend.util.settings', 'range': [87, 91], 'children': []}, {'type': 'ImportClause', 'name': 'Config', 'range': [93, 93], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'logger', 'range': [96, 104], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [97, 103], 'children': [{'type': 'CallExpression', 'name': 'logging.getLogger', 'range': [98, 103], 'children': [{'type': 'Identifier', 'name': '__name__', 'range': [102, 102], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'app_config', 'range': [105, 110], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [106, 109], 'children': [{'type': 'NewExpression', 'name': 'Config', 'range': [107, 109], 'children': []}]}]}, {'type': 'TypeAliasDeclaration', 'name': 'WT', 'range': [112, 122], 'children': [{'type': 'TypeParameter', 'name': 'WT', 'range': [114, 121], 'children': [{'type': 'TypeReference', 'name': 'StrEnum', 'range': [120, 120], 'children': []}]}]}]}
2025-01-08 10:28:28,895 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:33,390 - INFO - Step 2 result: {'type': 'Program', 'name': 'BaseWebhooksManager', 'range': [125, 595], 'children': [{'type': 'ClassDeclaration', 'name': 'BaseWebhooksManager', 'range': [125, 168], 'children': [{'type': 'Inheritance', 'name': 'ABC, Generic[WT]', 'range': [127, 134], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'PROVIDER_NAME', 'range': [150, 155], 'children': [{'type': 'TypeAnnotation', 'name': 'ClassVar[ProviderName]', 'range': [151, 155], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'WebhookType', 'range': [171, 173], 'children': [{'type': 'TypeAnnotation', 'name': 'WT', 'range': [172, 173], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': 'get_suitable_auto_webhook', 'range': [176, 280], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [181, 181], 'children': []}, {'type': 'Parameter', 'name': 'user_id', 'range': [184, 186], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [185, 186], 'children': []}]}, {'type': 'Parameter', 'name': 'credentials', 'range': [189, 191], 'children': [{'type': 'TypeAnnotation', 'name': 'Credentials', 'range': [190, 191], 'children': []}]}, {'type': 'Parameter', 'name': 'webhook_type', 'range': [194, 196], 'children': [{'type': 'TypeAnnotation', 'name': 'WT', 'range': [195, 196], 'children': []}]}, {'type': 'Parameter', 'name': 'resource', 'range': [199, 201], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [200, 201], 'children': []}]}, {'type': 'Parameter', 'name': 'events', 'range': [204, 209], 'children': [{'type': 'TypeAnnotation', 'name': 'list[str]', 'range': [205, 209], 'children': []}]}, {'type': 'ReturnType', 'name': 'integrations.Webhook', 'range': [213, 217], 'children': []}, {'type': 'Block', 'name': '', 'range': [219, 280], 'children': [{'type': 'IfStatement', 'name': '', 'range': [220, 233], 'children': [{'type': 'Condition', 'name': 'not app_config.platform_base_url', 'range': [221, 224], 'children': []}, {'type': 'Block', 'name': '', 'range': [226, 233], 'children': [{'type': 'RaiseStatement', 'name': 'MissingConfigError', 'range': [227, 233], 'children': []}]}]}, {'type': 'IfStatement', 'name': '', 'range': [236, 261], 'children': [{'type': 'Condition', 'name': 'webhook', 'range': [237, 237], 'children': []}, {'type': 'Block', 'name': '', 'range': [239, 261], 'children': [{'type': 'ReturnStatement', 'name': 'webhook', 'range': [259, 261], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'await self._create_webhook', 'range': [262, 280], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'get_manual_webhook', 'range': [282, 364], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [287, 287], 'children': []}, {'type': 'Parameter', 'name': 'user_id', 'range': [290, 292], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [291, 292], 'children': []}]}, {'type': 'Parameter', 'name': 'graph_id', 'range': [295, 297], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [296, 297], 'children': []}]}, {'type': 'Parameter', 'name': 'webhook_type', 'range': [300, 302], 'children': [{'type': 'TypeAnnotation', 'name': 'WT', 'range': [301, 302], 'children': []}]}, {'type': 'Parameter', 'name': 'events', 'range': [305, 310], 'children': [{'type': 'TypeAnnotation', 'name': 'list[str]', 'range': [306, 310], 'children': []}]}, {'type': 'Block', 'name': '', 'range': [315, 364], 'children': [{'type': 'IfStatement', 'name': '', 'range': [316, 341], 'children': [{'type': 'Condition', 'name': 'current_webhook', 'range': [317, 317], 'children': []}, {'type': 'Block', 'name': '', 'range': [319, 341], 'children': [{'type': 'ReturnStatement', 'name': 'current_webhook', 'range': [339, 341], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'await self._create_webhook', 'range': [342, 364], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'prune_webhook_if_dangling', 'range': [366, 595], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [371, 371], 'children': []}, {'type': 'Parameter', 'name': 'webhook_id', 'range': [373, 375], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [374, 375], 'children': []}]}, {'type': 'Parameter', 'name': 'credentials', 'range': [377, 382], 'children': [{'type': 'TypeAnnotation', 'name': 'Optional[Credentials]', 'range': [378, 382], 'children': []}]}, {'type': 'ReturnType', 'name': 'bool', 'range': [385, 387], 'children': []}, {'type': 'Block', 'name': '', 'range': [389, 595], 'children': [{'type': 'VariableDeclaration', 'name': 'webhook', 'range': [390, 398], 'children': [{'type': 'Assignment', 'name': 'await integrations.get_webhook(webhook_id)', 'range': [392, 398], 'children': []}]}, {'type': 'IfStatement', 'name': '', 'range': [400, 413], 'children': [{'type': 'Condition', 'name': 'webhook.attached_nodes is None', 'range': [401, 405], 'children': []}, {'type': 'Block', 'name': '', 'range': [407, 413], 'children': [{'type': 'RaiseStatement', 'name': 'ValueError', 'range': [408, 413], 'children': []}]}]}, {'type': 'IfStatement', 'name': '', 'range': [414, 426], 'children': [{'type': 'Condition', 'name': 'webhook.attached_nodes', 'range': [415, 418], 'children': []}, {'type': 'Block', 'name': '', 'range': [420, 426], 'children': [{'type': 'Comment', 'name': "Don't prune webhook if in use", 'range': [421, 425], 'children': []}]}]}, {'type': 'IfStatement', 'name': '', 'range': [427, 441], 'children': [{'type': 'Condition', 'name': 'credentials', 'range': [428, 428], 'children': []}, {'type': 'Block', 'name': '', 'range': [430, 441], 'children': [{'type': 'ExpressionStatement', 'name': 'await self._deregister_webhook(webhook, credentials)', 'range': [431, 441], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'await integrations.delete_webhook(webhook.id)', 'range': [442, 452], 'children': []}, {'type': 'ReturnStatement', 'name': 'True', 'range': [453, 455], 'children': []}]}]}]}
2025-01-08 10:28:33,390 - INFO - Starting Step 3: AST simplification
2025-01-08 10:29:03,662 - INFO - Step 3 result: {'nodes': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 2], 'children': [{'type': 'ImportClause', 'name': 'logging', 'range': [1, 1], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [3, 5], 'children': [{'type': 'ImportClause', 'name': 'secrets', 'range': [4, 4], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [6, 12], 'children': [{'type': 'FromClause', 'name': 'abc', 'range': [7, 7], 'children': []}, {'type': 'ImportClause', 'name': 'ABC', 'range': [9, 9], 'children': []}, {'type': 'ImportClause', 'name': 'abstractmethod', 'range': [11, 11], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [13, 23], 'children': [{'type': 'FromClause', 'name': 'typing', 'range': [14, 14], 'children': []}, {'type': 'ImportClause', 'name': 'ClassVar', 'range': [16, 16], 'children': []}, {'type': 'ImportClause', 'name': 'Generic', 'range': [18, 18], 'children': []}, {'type': 'ImportClause', 'name': 'Optional', 'range': [20, 20], 'children': []}, {'type': 'ImportClause', 'name': 'TypeVar', 'range': [22, 22], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [24, 28], 'children': [{'type': 'FromClause', 'name': 'uuid', 'range': [25, 25], 'children': []}, {'type': 'ImportClause', 'name': 'uuid4', 'range': [27, 27], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [30, 34], 'children': [{'type': 'FromClause', 'name': 'fastapi', 'range': [31, 31], 'children': []}, {'type': 'ImportClause', 'name': 'Request', 'range': [33, 33], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [35, 39], 'children': [{'type': 'FromClause', 'name': 'strenum', 'range': [36, 36], 'children': []}, {'type': 'ImportClause', 'name': 'StrEnum', 'range': [38, 38], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [41, 47], 'children': [{'type': 'FromClause', 'name': 'backend.data', 'range': [42, 44], 'children': []}, {'type': 'ImportClause', 'name': 'integrations', 'range': [46, 46], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [48, 56], 'children': [{'type': 'FromClause', 'name': 'backend.data.model', 'range': [49, 53], 'children': []}, {'type': 'ImportClause', 'name': 'Credentials', 'range': [55, 55], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [57, 65], 'children': [{'type': 'FromClause', 'name': 'backend.integrations.providers', 'range': [58, 62], 'children': []}, {'type': 'ImportClause', 'name': 'ProviderName', 'range': [64, 64], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [66, 76], 'children': [{'type': 'FromClause', 'name': 'backend.integrations.webhooks.utils', 'range': [67, 73], 'children': []}, {'type': 'ImportClause', 'name': 'webhook_ingress_url', 'range': [75, 75], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [77, 85], 'children': [{'type': 'FromClause', 'name': 'backend.util.exceptions', 'range': [78, 82], 'children': []}, {'type': 'ImportClause', 'name': 'MissingConfigError', 'range': [84, 84], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [86, 94], 'children': [{'type': 'FromClause', 'name': 'backend.util.settings', 'range': [87, 91], 'children': []}, {'type': 'ImportClause', 'name': 'Config', 'range': [93, 93], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'logger', 'range': [96, 104], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [97, 103], 'children': [{'type': 'CallExpression', 'name': 'logging.getLogger', 'range': [98, 103], 'children': [{'type': 'Identifier', 'name': '__name__', 'range': [102, 102], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'app_config', 'range': [105, 110], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [106, 109], 'children': [{'type': 'NewExpression', 'name': 'Config', 'range': [107, 109], 'children': []}]}]}, {'type': 'TypeAliasDeclaration', 'name': 'WT', 'range': [112, 122], 'children': [{'type': 'TypeParameter', 'name': 'WT', 'range': [114, 121], 'children': [{'type': 'TypeReference', 'name': 'StrEnum', 'range': [120, 120], 'children': []}]}]}]}
2025-01-08 10:29:03,662 - INFO - Starting Step 4: AST normalization
2025-01-08 10:29:23,221 - INFO - Step 3 result: {'type': 'Program', 'name': 'BaseWebhooksManager', 'range': [125, 595], 'children': [{'type': 'ClassDeclaration', 'name': 'BaseWebhooksManager', 'range': [125, 168], 'children': [{'type': 'Inheritance', 'name': 'ABC, Generic[WT]', 'range': [127, 134], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'PROVIDER_NAME', 'range': [150, 155], 'children': [{'type': 'TypeAnnotation', 'name': 'ClassVar[ProviderName]', 'range': [151, 155], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'WebhookType', 'range': [171, 173], 'children': [{'type': 'TypeAnnotation', 'name': 'WT', 'range': [172, 173], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': 'get_suitable_auto_webhook', 'range': [176, 280], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [181, 181], 'children': []}, {'type': 'Parameter', 'name': 'user_id', 'range': [184, 186], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [185, 186], 'children': []}]}, {'type': 'Parameter', 'name': 'credentials', 'range': [189, 191], 'children': [{'type': 'TypeAnnotation', 'name': 'Credentials', 'range': [190, 191], 'children': []}]}, {'type': 'Parameter', 'name': 'webhook_type', 'range': [194, 196], 'children': [{'type': 'TypeAnnotation', 'name': 'WT', 'range': [195, 196], 'children': []}]}, {'type': 'Parameter', 'name': 'resource', 'range': [199, 201], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [200, 201], 'children': []}]}, {'type': 'Parameter', 'name': 'events', 'range': [204, 209], 'children': [{'type': 'TypeAnnotation', 'name': 'list[str]', 'range': [205, 209], 'children': []}]}, {'type': 'ReturnType', 'name': 'integrations.Webhook', 'range': [213, 217], 'children': []}, {'type': 'Block', 'name': '', 'range': [219, 280], 'children': [{'type': 'IfStatement', 'name': '', 'range': [220, 233], 'children': [{'type': 'Condition', 'name': 'not app_config.platform_base_url', 'range': [221, 224], 'children': []}, {'type': 'Block', 'name': '', 'range': [226, 233], 'children': [{'type': 'RaiseStatement', 'name': 'MissingConfigError', 'range': [227, 233], 'children': []}]}]}, {'type': 'IfStatement', 'name': '', 'range': [236, 261], 'children': [{'type': 'Condition', 'name': 'webhook', 'range': [237, 237], 'children': []}, {'type': 'Block', 'name': '', 'range': [239, 261], 'children': [{'type': 'ReturnStatement', 'name': 'webhook', 'range': [259, 261], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'await self._create_webhook', 'range': [262, 280], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'get_manual_webhook', 'range': [282, 364], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [287, 287], 'children': []}, {'type': 'Parameter', 'name': 'user_id', 'range': [290, 292], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [291, 292], 'children': []}]}, {'type': 'Parameter', 'name': 'graph_id', 'range': [295, 297], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [296, 297], 'children': []}]}, {'type': 'Parameter', 'name': 'webhook_type', 'range': [300, 302], 'children': [{'type': 'TypeAnnotation', 'name': 'WT', 'range': [301, 302], 'children': []}]}, {'type': 'Parameter', 'name': 'events', 'range': [305, 310], 'children': [{'type': 'TypeAnnotation', 'name': 'list[str]', 'range': [306, 310], 'children': []}]}, {'type': 'Block', 'name': '', 'range': [315, 364], 'children': [{'type': 'IfStatement', 'name': '', 'range': [316, 341], 'children': [{'type': 'Condition', 'name': 'current_webhook', 'range': [317, 317], 'children': []}, {'type': 'Block', 'name': '', 'range': [319, 341], 'children': [{'type': 'ReturnStatement', 'name': 'current_webhook', 'range': [339, 341], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'await self._create_webhook', 'range': [342, 364], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'prune_webhook_if_dangling', 'range': [366, 595], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [371, 371], 'children': []}, {'type': 'Parameter', 'name': 'webhook_id', 'range': [373, 375], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [374, 375], 'children': []}]}, {'type': 'Parameter', 'name': 'credentials', 'range': [377, 382], 'children': [{'type': 'TypeAnnotation', 'name': 'Optional[Credentials]', 'range': [378, 382], 'children': []}]}, {'type': 'ReturnType', 'name': 'bool', 'range': [385, 387], 'children': []}, {'type': 'Block', 'name': '', 'range': [389, 595], 'children': [{'type': 'VariableDeclaration', 'name': 'webhook', 'range': [390, 398], 'children': [{'type': 'Assignment', 'name': 'await integrations.get_webhook(webhook_id)', 'range': [392, 398], 'children': []}]}, {'type': 'IfStatement', 'name': '', 'range': [400, 413], 'children': [{'type': 'Condition', 'name': 'webhook.attached_nodes is None', 'range': [401, 405], 'children': []}, {'type': 'Block', 'name': '', 'range': [407, 413], 'children': [{'type': 'RaiseStatement', 'name': 'ValueError', 'range': [408, 413], 'children': []}]}]}, {'type': 'IfStatement', 'name': '', 'range': [414, 426], 'children': [{'type': 'Condition', 'name': 'webhook.attached_nodes', 'range': [415, 418], 'children': []}, {'type': 'Block', 'name': '', 'range': [420, 426], 'children': [{'type': 'Comment', 'name': "Don't prune webhook if in use", 'range': [421, 425], 'children': []}]}]}, {'type': 'IfStatement', 'name': '', 'range': [427, 441], 'children': [{'type': 'Condition', 'name': 'credentials', 'range': [428, 428], 'children': []}, {'type': 'Block', 'name': '', 'range': [430, 441], 'children': [{'type': 'ExpressionStatement', 'name': 'await self._deregister_webhook(webhook, credentials)', 'range': [431, 441], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'await integrations.delete_webhook(webhook.id)', 'range': [442, 452], 'children': []}, {'type': 'ReturnStatement', 'name': 'True', 'range': [453, 455], 'children': []}]}]}]}
2025-01-08 10:29:23,221 - INFO - Starting Step 4: AST normalization
2025-01-08 10:29:38,166 - INFO - Step 4 result: {'nodes': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 2], 'children': [{'type': 'ImportClause', 'name': 'logging', 'range': [1, 1], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [3, 5], 'children': [{'type': 'ImportClause', 'name': 'secrets', 'range': [4, 4], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [6, 12], 'children': [{'type': 'FromClause', 'name': 'abc', 'range': [7, 7], 'children': []}, {'type': 'ImportClause', 'name': 'ABC', 'range': [9, 9], 'children': []}, {'type': 'ImportClause', 'name': 'abstractmethod', 'range': [11, 11], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [13, 23], 'children': [{'type': 'FromClause', 'name': 'typing', 'range': [14, 14], 'children': []}, {'type': 'ImportClause', 'name': 'ClassVar', 'range': [16, 16], 'children': []}, {'type': 'ImportClause', 'name': 'Generic', 'range': [18, 18], 'children': []}, {'type': 'ImportClause', 'name': 'Optional', 'range': [20, 20], 'children': []}, {'type': 'ImportClause', 'name': 'TypeVar', 'range': [22, 22], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [24, 28], 'children': [{'type': 'FromClause', 'name': 'uuid', 'range': [25, 25], 'children': []}, {'type': 'ImportClause', 'name': 'uuid4', 'range': [27, 27], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [30, 34], 'children': [{'type': 'FromClause', 'name': 'fastapi', 'range': [31, 31], 'children': []}, {'type': 'ImportClause', 'name': 'Request', 'range': [33, 33], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [35, 39], 'children': [{'type': 'FromClause', 'name': 'strenum', 'range': [36, 36], 'children': []}, {'type': 'ImportClause', 'name': 'StrEnum', 'range': [38, 38], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [41, 47], 'children': [{'type': 'FromClause', 'name': 'backend.data', 'range': [42, 44], 'children': []}, {'type': 'ImportClause', 'name': 'integrations', 'range': [46, 46], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [48, 56], 'children': [{'type': 'FromClause', 'name': 'backend.data.model', 'range': [49, 53], 'children': []}, {'type': 'ImportClause', 'name': 'Credentials', 'range': [55, 55], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [57, 65], 'children': [{'type': 'FromClause', 'name': 'backend.integrations.providers', 'range': [58, 62], 'children': []}, {'type': 'ImportClause', 'name': 'ProviderName', 'range': [64, 64], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [66, 76], 'children': [{'type': 'FromClause', 'name': 'backend.integrations.webhooks.utils', 'range': [67, 73], 'children': []}, {'type': 'ImportClause', 'name': 'webhook_ingress_url', 'range': [75, 75], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [77, 85], 'children': [{'type': 'FromClause', 'name': 'backend.util.exceptions', 'range': [78, 82], 'children': []}, {'type': 'ImportClause', 'name': 'MissingConfigError', 'range': [84, 84], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [86, 94], 'children': [{'type': 'FromClause', 'name': 'backend.util.settings', 'range': [87, 91], 'children': []}, {'type': 'ImportClause', 'name': 'Config', 'range': [93, 93], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'logger', 'range': [96, 104], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [97, 103], 'children': [{'type': 'CallExpression', 'name': 'logging.getLogger', 'range': [98, 103], 'children': [{'type': 'Identifier', 'name': '__name__', 'range': [102, 102], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'app_config', 'range': [105, 110], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [106, 109], 'children': [{'type': 'NewExpression', 'name': 'Config', 'range': [107, 109], 'children': []}]}]}, {'type': 'TypeAliasDeclaration', 'name': 'WT', 'range': [112, 122], 'children': [{'type': 'TypeParameter', 'name': 'WT', 'range': [114, 121], 'children': [{'type': 'TypeReference', 'name': 'StrEnum', 'range': [120, 120], 'children': []}]}]}]}
2025-01-08 10:29:38,167 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:30:09,286 - INFO - Step 4 result: {'type': 'Program', 'name': 'BaseWebhooksManager', 'range': [125, 595], 'children': [{'type': 'ClassDecl', 'name': 'BaseWebhooksManager', 'range': [125, 168], 'children': [{'type': 'Inheritance', 'name': 'ABC, Generic[WT]', 'range': [127, 134], 'children': []}]}, {'type': 'VariableDecl', 'name': 'PROVIDER_NAME', 'range': [150, 155], 'children': [{'type': 'TypeAnnotation', 'name': 'ClassVar[ProviderName]', 'range': [151, 155], 'children': []}]}, {'type': 'VariableDecl', 'name': 'WebhookType', 'range': [171, 173], 'children': [{'type': 'TypeAnnotation', 'name': 'WT', 'range': [172, 173], 'children': []}]}, {'type': 'FunctionDecl', 'name': 'get_suitable_auto_webhook', 'range': [176, 280], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [181, 181], 'children': []}, {'type': 'Parameter', 'name': 'user_id', 'range': [184, 186], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [185, 186], 'children': []}]}, {'type': 'Parameter', 'name': 'credentials', 'range': [189, 191], 'children': [{'type': 'TypeAnnotation', 'name': 'Credentials', 'range': [190, 191], 'children': []}]}, {'type': 'Parameter', 'name': 'webhook_type', 'range': [194, 196], 'children': [{'type': 'TypeAnnotation', 'name': 'WT', 'range': [195, 196], 'children': []}]}, {'type': 'Parameter', 'name': 'resource', 'range': [199, 201], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [200, 201], 'children': []}]}, {'type': 'Parameter', 'name': 'events', 'range': [204, 209], 'children': [{'type': 'TypeAnnotation', 'name': 'list[str]', 'range': [205, 209], 'children': []}]}, {'type': 'ReturnType', 'name': 'integrations.Webhook', 'range': [213, 217], 'children': []}, {'type': 'Block', 'name': '', 'range': [219, 280], 'children': [{'type': 'IfStatement', 'name': '', 'range': [220, 233], 'children': [{'type': 'Condition', 'name': 'not app_config.platform_base_url', 'range': [221, 224], 'children': []}, {'type': 'Block', 'name': '', 'range': [226, 233], 'children': [{'type': 'RaiseStatement', 'name': 'MissingConfigError', 'range': [227, 233], 'children': []}]}]}, {'type': 'IfStatement', 'name': '', 'range': [236, 261], 'children': [{'type': 'Condition', 'name': 'webhook', 'range': [237, 237], 'children': []}, {'type': 'Block', 'name': '', 'range': [239, 261], 'children': [{'type': 'ReturnStatement', 'name': 'webhook', 'range': [259, 261], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'await self._create_webhook', 'range': [262, 280], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'get_manual_webhook', 'range': [282, 364], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [287, 287], 'children': []}, {'type': 'Parameter', 'name': 'user_id', 'range': [290, 292], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [291, 292], 'children': []}]}, {'type': 'Parameter', 'name': 'graph_id', 'range': [295, 297], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [296, 297], 'children': []}]}, {'type': 'Parameter', 'name': 'webhook_type', 'range': [300, 302], 'children': [{'type': 'TypeAnnotation', 'name': 'WT', 'range': [301, 302], 'children': []}]}, {'type': 'Parameter', 'name': 'events', 'range': [305, 310], 'children': [{'type': 'TypeAnnotation', 'name': 'list[str]', 'range': [306, 310], 'children': []}]}, {'type': 'Block', 'name': '', 'range': [315, 364], 'children': [{'type': 'IfStatement', 'name': '', 'range': [316, 341], 'children': [{'type': 'Condition', 'name': 'current_webhook', 'range': [317, 317], 'children': []}, {'type': 'Block', 'name': '', 'range': [319, 341], 'children': [{'type': 'ReturnStatement', 'name': 'current_webhook', 'range': [339, 341], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'await self._create_webhook', 'range': [342, 364], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'prune_webhook_if_dangling', 'range': [366, 595], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [371, 371], 'children': []}, {'type': 'Parameter', 'name': 'webhook_id', 'range': [373, 375], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [374, 375], 'children': []}]}, {'type': 'Parameter', 'name': 'credentials', 'range': [377, 382], 'children': [{'type': 'TypeAnnotation', 'name': 'Optional[Credentials]', 'range': [378, 382], 'children': []}]}, {'type': 'ReturnType', 'name': 'bool', 'range': [385, 387], 'children': []}, {'type': 'Block', 'name': '', 'range': [389, 595], 'children': [{'type': 'VariableDecl', 'name': 'webhook', 'range': [390, 398], 'children': [{'type': 'Assignment', 'name': 'await integrations.get_webhook(webhook_id)', 'range': [392, 398], 'children': []}]}, {'type': 'IfStatement', 'name': '', 'range': [400, 413], 'children': [{'type': 'Condition', 'name': 'webhook.attached_nodes is None', 'range': [401, 405], 'children': []}, {'type': 'Block', 'name': '', 'range': [407, 413], 'children': [{'type': 'RaiseStatement', 'name': 'ValueError', 'range': [408, 413], 'children': []}]}]}, {'type': 'IfStatement', 'name': '', 'range': [414, 426], 'children': [{'type': 'Condition', 'name': 'webhook.attached_nodes', 'range': [415, 418], 'children': []}, {'type': 'Block', 'name': '', 'range': [420, 426], 'children': [{'type': 'Comment', 'name': "Don't prune webhook if in use", 'range': [421, 425], 'children': []}]}]}, {'type': 'IfStatement', 'name': '', 'range': [427, 441], 'children': [{'type': 'Condition', 'name': 'credentials', 'range': [428, 428], 'children': []}, {'type': 'Block', 'name': '', 'range': [430, 441], 'children': [{'type': 'ExpressionStatement', 'name': 'await self._deregister_webhook(webhook, credentials)', 'range': [431, 441], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'await integrations.delete_webhook(webhook.id)', 'range': [442, 452], 'children': []}, {'type': 'ReturnStatement', 'name': 'True', 'range': [453, 455], 'children': []}]}]}]}
2025-01-08 10:30:09,287 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:30:11,943 - INFO - Step 5 result: {'type': 'Program', 'name': 'MainOrSomething', 'range': [0, 122], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 2], 'children': [{'type': 'ImportClause', 'name': 'logging', 'range': [1, 1], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [3, 5], 'children': [{'type': 'ImportClause', 'name': 'secrets', 'range': [4, 4], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [6, 12], 'children': [{'type': 'FromClause', 'name': 'abc', 'range': [7, 7], 'children': []}, {'type': 'ImportClause', 'name': 'ABC', 'range': [9, 9], 'children': []}, {'type': 'ImportClause', 'name': 'abstractmethod', 'range': [11, 11], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [13, 23], 'children': [{'type': 'FromClause', 'name': 'typing', 'range': [14, 14], 'children': []}, {'type': 'ImportClause', 'name': 'ClassVar', 'range': [16, 16], 'children': []}, {'type': 'ImportClause', 'name': 'Generic', 'range': [18, 18], 'children': []}, {'type': 'ImportClause', 'name': 'Optional', 'range': [20, 20], 'children': []}, {'type': 'ImportClause', 'name': 'TypeVar', 'range': [22, 22], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [24, 28], 'children': [{'type': 'FromClause', 'name': 'uuid', 'range': [25, 25], 'children': []}, {'type': 'ImportClause', 'name': 'uuid4', 'range': [27, 27], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [30, 34], 'children': [{'type': 'FromClause', 'name': 'fastapi', 'range': [31, 31], 'children': []}, {'type': 'ImportClause', 'name': 'Request', 'range': [33, 33], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [35, 39], 'children': [{'type': 'FromClause', 'name': 'strenum', 'range': [36, 36], 'children': []}, {'type': 'ImportClause', 'name': 'StrEnum', 'range': [38, 38], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [41, 47], 'children': [{'type': 'FromClause', 'name': 'backend.data', 'range': [42, 44], 'children': []}, {'type': 'ImportClause', 'name': 'integrations', 'range': [46, 46], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [48, 56], 'children': [{'type': 'FromClause', 'name': 'backend.data.model', 'range': [49, 53], 'children': []}, {'type': 'ImportClause', 'name': 'Credentials', 'range': [55, 55], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [57, 65], 'children': [{'type': 'FromClause', 'name': 'backend.integrations.providers', 'range': [58, 62], 'children': []}, {'type': 'ImportClause', 'name': 'ProviderName', 'range': [64, 64], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [66, 76], 'children': [{'type': 'FromClause', 'name': 'backend.integrations.webhooks.utils', 'range': [67, 73], 'children': []}, {'type': 'ImportClause', 'name': 'webhook_ingress_url', 'range': [75, 75], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [77, 85], 'children': [{'type': 'FromClause', 'name': 'backend.util.exceptions', 'range': [78, 82], 'children': []}, {'type': 'ImportClause', 'name': 'MissingConfigError', 'range': [84, 84], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [86, 94], 'children': [{'type': 'FromClause', 'name': 'backend.util.settings', 'range': [87, 91], 'children': []}, {'type': 'ImportClause', 'name': 'Config', 'range': [93, 93], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'logger', 'range': [96, 104], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [97, 103], 'children': [{'type': 'CallExpression', 'name': 'logging.getLogger', 'range': [98, 103], 'children': [{'type': 'Identifier', 'name': '__name__', 'range': [102, 102], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'app_config', 'range': [105, 110], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [106, 109], 'children': [{'type': 'NewExpression', 'name': 'Config', 'range': [107, 109], 'children': []}]}]}, {'type': 'TypeAliasDeclaration', 'name': 'WT', 'range': [112, 122], 'children': [{'type': 'TypeParameter', 'name': 'WT', 'range': [114, 121], 'children': [{'type': 'TypeReference', 'name': 'StrEnum', 'range': [120, 120], 'children': []}]}]}]}
2025-01-08 10:30:11,943 - INFO - Completed main AST analysis flow
2025-01-08 10:30:11,946 - INFO - Successfully processed chunk
2025-01-08 10:30:56,447 - INFO - Step 5 result: {'type': 'Program', 'name': 'BaseWebhooksManager', 'range': [125, 595], 'children': [{'type': 'ClassDecl', 'name': 'BaseWebhooksManager', 'range': [125, 168], 'children': [{'type': 'Inheritance', 'name': 'ABC, Generic[WT]', 'range': [127, 134], 'children': []}]}, {'type': 'VariableDecl', 'name': 'PROVIDER_NAME', 'range': [150, 155], 'children': [{'type': 'TypeAnnotation', 'name': 'ClassVar[ProviderName]', 'range': [151, 155], 'children': []}]}, {'type': 'VariableDecl', 'name': 'WebhookType', 'range': [171, 173], 'children': [{'type': 'TypeAnnotation', 'name': 'WT', 'range': [172, 173], 'children': []}]}, {'type': 'FunctionDecl', 'name': 'get_suitable_auto_webhook', 'range': [176, 280], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [181, 181], 'children': []}, {'type': 'Parameter', 'name': 'user_id', 'range': [184, 186], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [185, 186], 'children': []}]}, {'type': 'Parameter', 'name': 'credentials', 'range': [189, 191], 'children': [{'type': 'TypeAnnotation', 'name': 'Credentials', 'range': [190, 191], 'children': []}]}, {'type': 'Parameter', 'name': 'webhook_type', 'range': [194, 196], 'children': [{'type': 'TypeAnnotation', 'name': 'WT', 'range': [195, 196], 'children': []}]}, {'type': 'Parameter', 'name': 'resource', 'range': [199, 201], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [200, 201], 'children': []}]}, {'type': 'Parameter', 'name': 'events', 'range': [204, 209], 'children': [{'type': 'TypeAnnotation', 'name': 'list[str]', 'range': [205, 209], 'children': []}]}, {'type': 'ReturnType', 'name': 'integrations.Webhook', 'range': [213, 217], 'children': []}, {'type': 'Block', 'name': '', 'range': [219, 280], 'children': [{'type': 'IfStatement', 'name': '', 'range': [220, 233], 'children': [{'type': 'Condition', 'name': 'not app_config.platform_base_url', 'range': [221, 224], 'children': []}, {'type': 'Block', 'name': '', 'range': [226, 233], 'children': [{'type': 'RaiseStatement', 'name': 'MissingConfigError', 'range': [227, 233], 'children': []}]}]}, {'type': 'IfStatement', 'name': '', 'range': [236, 261], 'children': [{'type': 'Condition', 'name': 'webhook', 'range': [237, 237], 'children': []}, {'type': 'Block', 'name': '', 'range': [239, 261], 'children': [{'type': 'ReturnStatement', 'name': 'webhook', 'range': [259, 261], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'await self._create_webhook', 'range': [262, 280], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'get_manual_webhook', 'range': [282, 364], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [287, 287], 'children': []}, {'type': 'Parameter', 'name': 'user_id', 'range': [290, 292], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [291, 292], 'children': []}]}, {'type': 'Parameter', 'name': 'graph_id', 'range': [295, 297], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [296, 297], 'children': []}]}, {'type': 'Parameter', 'name': 'webhook_type', 'range': [300, 302], 'children': [{'type': 'TypeAnnotation', 'name': 'WT', 'range': [301, 302], 'children': []}]}, {'type': 'Parameter', 'name': 'events', 'range': [305, 310], 'children': [{'type': 'TypeAnnotation', 'name': 'list[str]', 'range': [306, 310], 'children': []}]}, {'type': 'Block', 'name': '', 'range': [315, 364], 'children': [{'type': 'IfStatement', 'name': '', 'range': [316, 341], 'children': [{'type': 'Condition', 'name': 'current_webhook', 'range': [317, 317], 'children': []}, {'type': 'Block', 'name': '', 'range': [319, 341], 'children': [{'type': 'ReturnStatement', 'name': 'current_webhook', 'range': [339, 341], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'await self._create_webhook', 'range': [342, 364], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'prune_webhook_if_dangling', 'range': [366, 595], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [371, 371], 'children': []}, {'type': 'Parameter', 'name': 'webhook_id', 'range': [373, 375], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [374, 375], 'children': []}]}, {'type': 'Parameter', 'name': 'credentials', 'range': [377, 382], 'children': [{'type': 'TypeAnnotation', 'name': 'Optional[Credentials]', 'range': [378, 382], 'children': []}]}, {'type': 'ReturnType', 'name': 'bool', 'range': [385, 387], 'children': []}, {'type': 'Block', 'name': '', 'range': [389, 595], 'children': [{'type': 'VariableDecl', 'name': 'webhook', 'range': [390, 398], 'children': [{'type': 'Assignment', 'name': 'await integrations.get_webhook(webhook_id)', 'range': [392, 398], 'children': []}]}, {'type': 'IfStatement', 'name': '', 'range': [400, 413], 'children': [{'type': 'Condition', 'name': 'webhook.attached_nodes is None', 'range': [401, 405], 'children': []}, {'type': 'Block', 'name': '', 'range': [407, 413], 'children': [{'type': 'RaiseStatement', 'name': 'ValueError', 'range': [408, 413], 'children': []}]}]}, {'type': 'IfStatement', 'name': '', 'range': [414, 426], 'children': [{'type': 'Condition', 'name': 'webhook.attached_nodes', 'range': [415, 418], 'children': []}, {'type': 'Block', 'name': '', 'range': [420, 426], 'children': [{'type': 'Comment', 'name': "Don't prune webhook if in use", 'range': [421, 425], 'children': []}]}]}, {'type': 'IfStatement', 'name': '', 'range': [427, 441], 'children': [{'type': 'Condition', 'name': 'credentials', 'range': [428, 428], 'children': []}, {'type': 'Block', 'name': '', 'range': [430, 441], 'children': [{'type': 'ExpressionStatement', 'name': 'await self._deregister_webhook(webhook, credentials)', 'range': [431, 441], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'await integrations.delete_webhook(webhook.id)', 'range': [442, 452], 'children': []}, {'type': 'ReturnStatement', 'name': 'True', 'range': [453, 455], 'children': []}]}]}]}
2025-01-08 10:30:56,447 - INFO - Completed main AST analysis flow
2025-01-08 10:30:56,449 - INFO - Successfully processed chunk
2025-01-08 10:30:56,476 - INFO - Starting code generation from AST
2025-01-08 10:31:19,250 - INFO - Successfully generated code from AST
2025-01-08 10:31:19,252 - INFO - Starting static code similarity comparison
2025-01-08 10:31:19,277 - INFO - Static similarity result: {'final_score': 83.25, 'length_similarity': 92.92, 'token_similarity': 55.14, 'structure_similarity': 93.45, 'function_similarity': 100, 'complexity_similarity': 94.12, 'variable_similarity': 100}
