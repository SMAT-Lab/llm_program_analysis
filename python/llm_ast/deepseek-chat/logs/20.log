2025-01-08 09:16:35,018 - INFO - Processing sample 20
2025-01-08 09:16:35,018 - INFO - Starting Step 0: Splitting code into top-level declarations
2025-01-08 09:16:43,414 - INFO - Successfully split code into 3 top-level declarations
2025-01-08 09:16:43,415 - INFO - Processing chunk #0 (size=147 chars, start_index=0)
2025-01-08 09:16:43,415 - INFO - Processing chunk with 147 chars starting at index 0
2025-01-08 09:16:43,415 - INFO - Starting main AST analysis flow
2025-01-08 09:16:43,415 - INFO - Tokenized code into 4 tokens
2025-01-08 09:16:43,415 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:16:43,416 - INFO - Processing chunk #1 (size=1374 chars, start_index=4)
2025-01-08 09:16:43,416 - INFO - Processing chunk with 1374 chars starting at index 4
2025-01-08 09:16:43,417 - INFO - Starting main AST analysis flow
2025-01-08 09:16:43,417 - INFO - Tokenized code into 98 tokens
2025-01-08 09:16:43,417 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:16:43,419 - INFO - Processing chunk #2 (size=70 chars, start_index=102)
2025-01-08 09:16:43,419 - INFO - Processing chunk with 70 chars starting at index 102
2025-01-08 09:16:43,419 - INFO - Starting main AST analysis flow
2025-01-08 09:16:43,419 - INFO - Tokenized code into 18 tokens
2025-01-08 09:16:43,419 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:16:49,239 - INFO - Step 1 result: {'type': 'Program', 'name': 'bitwise_addition_recursive', 'range': [4, 101], 'children': []}
2025-01-08 09:16:49,239 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:16:50,498 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [0, 3], 'children': []}
2025-01-08 09:16:50,498 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:16:54,047 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [102, 119], 'children': [{'type': 'IfStatement', 'name': '', 'range': [102, 108], 'children': []}, {'type': 'ImportStatement', 'name': 'doctest', 'range': [109, 111], 'children': []}, {'type': 'ExpressionStatement', 'name': '', 'range': [113, 118], 'children': []}]}
2025-01-08 09:16:54,047 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:16:59,324 - INFO - Step 2 result: {'type': 'Program', 'name': '', 'range': [0, 3], 'children': [{'type': 'Comment', 'name': '', 'range': [1, 1], 'children': []}]}
2025-01-08 09:16:59,325 - INFO - Starting Step 3: AST simplification
2025-01-08 09:17:07,207 - INFO - Step 3 result: {'type': 'Program', 'name': '', 'range': [0, 3], 'children': [{'type': 'Comment', 'name': '', 'range': [1, 1], 'children': []}]}
2025-01-08 09:17:07,207 - INFO - Starting Step 4: AST normalization
2025-01-08 09:17:17,277 - INFO - Step 4 result: {'type': 'Program', 'name': '', 'range': [0, 3], 'children': [{'type': 'Comment', 'name': '', 'range': [1, 1], 'children': []}]}
2025-01-08 09:17:17,277 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:17:17,777 - INFO - Step 2 result: {'type': 'Program', 'name': '', 'range': [102, 119], 'children': [{'type': 'IfStatement', 'name': '', 'range': [102, 108], 'children': [{'type': 'Condition', 'name': '', 'range': [103, 106], 'children': [{'type': 'Variable', 'name': '__name__', 'range': [103, 103], 'children': []}, {'type': 'Operator', 'name': '==', 'range': [104, 105], 'children': []}, {'type': 'StringLiteral', 'name': '"__main__"', 'range': [106, 106], 'children': []}]}]}, {'type': 'ImportStatement', 'name': 'doctest', 'range': [109, 111], 'children': [{'type': 'Module', 'name': 'doctest', 'range': [110, 110], 'children': []}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [113, 118], 'children': [{'type': 'CallExpression', 'name': '', 'range': [113, 117], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [113, 115], 'children': [{'type': 'Module', 'name': 'doctest', 'range': [113, 113], 'children': []}, {'type': 'Property', 'name': 'testmod', 'range': [115, 115], 'children': []}]}, {'type': 'Arguments', 'name': '', 'range': [116, 117], 'children': []}]}]}]}
2025-01-08 09:17:17,777 - INFO - Starting Step 3: AST simplification
2025-01-08 09:17:18,300 - INFO - Step 2 result: {'type': 'Program', 'name': 'bitwise_addition_recursive', 'range': [4, 101], 'children': [{'type': 'FunctionDeclaration', 'name': 'bitwise_addition_recursive', 'range': [4, 101], 'children': [{'type': 'Parameters', 'name': 'parameters', 'range': [6, 14], 'children': [{'type': 'Parameter', 'name': 'number', 'range': [7, 9], 'children': []}, {'type': 'Parameter', 'name': 'other_number', 'range': [11, 13], 'children': []}]}, {'type': 'ReturnType', 'name': 'return_type', 'range': [15, 17], 'children': []}, {'type': 'Docstring', 'name': 'docstring', 'range': [20, 22], 'children': []}, {'type': 'Body', 'name': 'body', 'range': [25, 101], 'children': [{'type': 'IfStatement', 'name': 'if_statement', 'range': [25, 48], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [26, 40], 'children': []}, {'type': 'Body', 'name': 'body', 'range': [43, 47], 'children': [{'type': 'RaiseStatement', 'name': 'raise_statement', 'range': [43, 47], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [50, 65], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [51, 57], 'children': []}, {'type': 'Body', 'name': 'body', 'range': [60, 64], 'children': [{'type': 'RaiseStatement', 'name': 'raise_statement', 'range': [60, 64], 'children': []}]}]}, {'type': 'Assignment', 'name': 'assignment', 'range': [67, 72], 'children': []}, {'type': 'Assignment', 'name': 'assignment', 'range': [73, 78], 'children': []}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [80, 89], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [81, 84], 'children': []}, {'type': 'Body', 'name': 'body', 'range': [87, 88], 'children': [{'type': 'ReturnStatement', 'name': 'return_statement', 'range': [87, 88], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return_statement', 'range': [91, 101], 'children': []}]}]}]}
2025-01-08 09:17:18,300 - INFO - Starting Step 3: AST simplification
2025-01-08 09:17:24,740 - INFO - Step 5 result: {'type': 'Program', 'name': '', 'range': [0, 3], 'children': [{'type': 'Comment', 'name': '', 'range': [1, 1], 'children': []}]}
2025-01-08 09:17:24,741 - INFO - Completed main AST analysis flow
2025-01-08 09:17:24,741 - INFO - Successfully processed chunk
2025-01-08 09:17:37,148 - INFO - Step 3 result: {'type': 'Program', 'name': '', 'range': [102, 119], 'children': [{'type': 'IfStatement', 'name': '', 'range': [102, 108], 'children': [{'type': 'Condition', 'name': '', 'range': [103, 106], 'children': [{'type': 'Variable', 'name': '__name__', 'range': [103, 103], 'children': []}, {'type': 'Operator', 'name': '==', 'range': [104, 105], 'children': []}, {'type': 'StringLiteral', 'name': '"__main__"', 'range': [106, 106], 'children': []}]}]}, {'type': 'ImportStatement', 'name': 'doctest', 'range': [109, 111], 'children': [{'type': 'Module', 'name': 'doctest', 'range': [110, 110], 'children': []}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [113, 118], 'children': [{'type': 'CallExpression', 'name': '', 'range': [113, 117], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [113, 115], 'children': [{'type': 'Module', 'name': 'doctest', 'range': [113, 113], 'children': []}, {'type': 'Property', 'name': 'testmod', 'range': [115, 115], 'children': []}]}]}]}]}
2025-01-08 09:17:37,149 - INFO - Starting Step 4: AST normalization
2025-01-08 09:17:48,541 - INFO - Step 3 result: {'type': 'Program', 'name': 'bitwise_addition_recursive', 'range': [4, 101], 'children': [{'type': 'FunctionDeclaration', 'name': 'bitwise_addition_recursive', 'range': [4, 101], 'children': [{'type': 'Parameters', 'name': 'parameters', 'range': [6, 14], 'children': [{'type': 'Parameter', 'name': 'number', 'range': [7, 9], 'children': []}, {'type': 'Parameter', 'name': 'other_number', 'range': [11, 13], 'children': []}]}, {'type': 'ReturnType', 'name': 'return_type', 'range': [15, 17], 'children': []}, {'type': 'Docstring', 'name': 'docstring', 'range': [20, 22], 'children': []}, {'type': 'Body', 'name': 'body', 'range': [25, 101], 'children': [{'type': 'IfStatement', 'name': 'if_statement', 'range': [25, 48], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [26, 40], 'children': []}, {'type': 'Body', 'name': 'body', 'range': [43, 47], 'children': [{'type': 'RaiseStatement', 'name': 'raise_statement', 'range': [43, 47], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [50, 65], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [51, 57], 'children': []}, {'type': 'Body', 'name': 'body', 'range': [60, 64], 'children': [{'type': 'RaiseStatement', 'name': 'raise_statement', 'range': [60, 64], 'children': []}]}]}, {'type': 'Assignment', 'name': 'assignment', 'range': [67, 72], 'children': []}, {'type': 'Assignment', 'name': 'assignment', 'range': [73, 78], 'children': []}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [80, 89], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [81, 84], 'children': []}, {'type': 'Body', 'name': 'body', 'range': [87, 88], 'children': [{'type': 'ReturnStatement', 'name': 'return_statement', 'range': [87, 88], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return_statement', 'range': [91, 101], 'children': []}]}]}]}
2025-01-08 09:17:48,541 - INFO - Starting Step 4: AST normalization
2025-01-08 09:18:00,455 - INFO - Step 4 result: {'type': 'Program', 'name': '', 'range': [102, 119], 'children': [{'type': 'IfStatement', 'name': '', 'range': [102, 108], 'children': [{'type': 'BinaryExpression', 'name': '', 'range': [103, 106], 'children': [{'type': 'Identifier', 'name': '__name__', 'range': [103, 103], 'children': []}, {'type': 'Operator', 'name': '==', 'range': [104, 105], 'children': []}, {'type': 'Literal', 'name': '"__main__"', 'range': [106, 106], 'children': []}]}]}, {'type': 'ImportStatement', 'name': 'doctest', 'range': [109, 111], 'children': [{'type': 'Identifier', 'name': 'doctest', 'range': [110, 110], 'children': []}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [113, 118], 'children': [{'type': 'CallExpression', 'name': '', 'range': [113, 117], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [113, 115], 'children': [{'type': 'Identifier', 'name': 'doctest', 'range': [113, 113], 'children': []}, {'type': 'Identifier', 'name': 'testmod', 'range': [115, 115], 'children': []}]}]}]}]}
2025-01-08 09:18:00,455 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:18:17,570 - INFO - Step 4 result: {'type': 'Program', 'name': 'bitwise_addition_recursive', 'range': [4, 101], 'children': [{'type': 'FunctionDecl', 'name': 'bitwise_addition_recursive', 'range': [4, 101], 'children': [{'type': 'Parameters', 'name': 'parameters', 'range': [6, 14], 'children': [{'type': 'Parameter', 'name': 'number', 'range': [7, 9], 'children': []}, {'type': 'Parameter', 'name': 'other_number', 'range': [11, 13], 'children': []}]}, {'type': 'ReturnType', 'name': 'return_type', 'range': [15, 17], 'children': []}, {'type': 'Docstring', 'name': 'docstring', 'range': [20, 22], 'children': []}, {'type': 'Body', 'name': 'body', 'range': [25, 101], 'children': [{'type': 'IfStatement', 'name': 'if_statement', 'range': [25, 48], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [26, 40], 'children': []}, {'type': 'Body', 'name': 'body', 'range': [43, 47], 'children': [{'type': 'RaiseStatement', 'name': 'raise_statement', 'range': [43, 47], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [50, 65], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [51, 57], 'children': []}, {'type': 'Body', 'name': 'body', 'range': [60, 64], 'children': [{'type': 'RaiseStatement', 'name': 'raise_statement', 'range': [60, 64], 'children': []}]}]}, {'type': 'Assignment', 'name': 'assignment', 'range': [67, 72], 'children': []}, {'type': 'Assignment', 'name': 'assignment', 'range': [73, 78], 'children': []}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [80, 89], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [81, 84], 'children': []}, {'type': 'Body', 'name': 'body', 'range': [87, 88], 'children': [{'type': 'ReturnStatement', 'name': 'return_statement', 'range': [87, 88], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return_statement', 'range': [91, 101], 'children': []}]}]}]}
2025-01-08 09:18:17,570 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:18:22,655 - INFO - Step 5 result: {'type': 'Program', 'name': '', 'range': [102, 119], 'children': [{'type': 'IfStatement', 'name': '', 'range': [102, 108], 'children': [{'type': 'BinaryExpression', 'name': '', 'range': [103, 106], 'children': [{'type': 'Identifier', 'name': '__name__', 'range': [103, 103], 'children': []}, {'type': 'Operator', 'name': '==', 'range': [104, 105], 'children': []}, {'type': 'Literal', 'name': '"__main__"', 'range': [106, 106], 'children': []}]}]}, {'type': 'ImportStatement', 'name': 'doctest', 'range': [109, 111], 'children': [{'type': 'Identifier', 'name': 'doctest', 'range': [110, 110], 'children': []}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [113, 118], 'children': [{'type': 'CallExpression', 'name': '', 'range': [113, 117], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [113, 115], 'children': [{'type': 'Identifier', 'name': 'doctest', 'range': [113, 113], 'children': []}, {'type': 'Identifier', 'name': 'testmod', 'range': [115, 115], 'children': []}]}]}]}]}
2025-01-08 09:18:22,655 - INFO - Completed main AST analysis flow
2025-01-08 09:18:22,655 - INFO - Successfully processed chunk
2025-01-08 09:18:48,054 - INFO - Step 5 result: {'type': 'Program', 'name': 'bitwise_addition_recursive', 'range': [4, 101], 'children': [{'type': 'FunctionDecl', 'name': 'bitwise_addition_recursive', 'range': [4, 101], 'children': [{'type': 'Parameters', 'name': 'parameters', 'range': [6, 14], 'children': [{'type': 'Parameter', 'name': 'number', 'range': [7, 9], 'children': []}, {'type': 'Parameter', 'name': 'other_number', 'range': [11, 13], 'children': []}]}, {'type': 'ReturnType', 'name': 'return_type', 'range': [15, 17], 'children': []}, {'type': 'Docstring', 'name': 'docstring', 'range': [20, 22], 'children': []}, {'type': 'Body', 'name': 'body', 'range': [25, 101], 'children': [{'type': 'IfStatement', 'name': 'if_statement', 'range': [25, 48], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [26, 40], 'children': []}, {'type': 'Body', 'name': 'body', 'range': [43, 47], 'children': [{'type': 'RaiseStatement', 'name': 'raise_statement', 'range': [43, 47], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [50, 65], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [51, 57], 'children': []}, {'type': 'Body', 'name': 'body', 'range': [60, 64], 'children': [{'type': 'RaiseStatement', 'name': 'raise_statement', 'range': [60, 64], 'children': []}]}]}, {'type': 'Assignment', 'name': 'assignment', 'range': [67, 72], 'children': []}, {'type': 'Assignment', 'name': 'assignment', 'range': [73, 78], 'children': []}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [80, 89], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [81, 84], 'children': []}, {'type': 'Body', 'name': 'body', 'range': [87, 88], 'children': [{'type': 'ReturnStatement', 'name': 'return_statement', 'range': [87, 88], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return_statement', 'range': [91, 101], 'children': []}]}]}]}
2025-01-08 09:18:48,055 - INFO - Completed main AST analysis flow
2025-01-08 09:18:48,055 - INFO - Successfully processed chunk
2025-01-08 09:18:48,063 - INFO - Starting code generation from AST
2025-01-08 09:19:06,728 - INFO - Successfully generated code from AST
2025-01-08 09:19:06,728 - INFO - Starting static code similarity comparison
2025-01-08 09:19:06,731 - INFO - Static similarity result: {'final_score': 76.16, 'length_similarity': 99.87, 'token_similarity': 26.15, 'structure_similarity': 93.33, 'function_similarity': 100, 'complexity_similarity': 100.0, 'variable_similarity': 100}
