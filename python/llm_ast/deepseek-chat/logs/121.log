2025-01-08 10:07:41,909 - INFO - Processing sample 121
2025-01-08 10:07:41,910 - INFO - Starting Step 0: Splitting code into top-level declarations
2025-01-08 10:07:47,685 - INFO - Successfully split code into 9 top-level declarations
2025-01-08 10:07:47,687 - INFO - Processing chunk #0 (size=77 chars, start_index=0)
2025-01-08 10:07:47,687 - INFO - Processing chunk with 77 chars starting at index 0
2025-01-08 10:07:47,687 - INFO - Starting main AST analysis flow
2025-01-08 10:07:47,688 - INFO - Tokenized code into 16 tokens
2025-01-08 10:07:47,688 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:07:47,689 - INFO - Processing chunk #1 (size=109 chars, start_index=16)
2025-01-08 10:07:47,693 - INFO - Processing chunk with 109 chars starting at index 16
2025-01-08 10:07:47,693 - INFO - Starting main AST analysis flow
2025-01-08 10:07:47,693 - INFO - Tokenized code into 39 tokens
2025-01-08 10:07:47,693 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:07:47,700 - INFO - Processing chunk #2 (size=2 chars, start_index=55)
2025-01-08 10:07:47,708 - INFO - Processing chunk with 2 chars starting at index 55
2025-01-08 10:07:47,708 - INFO - Starting main AST analysis flow
2025-01-08 10:07:47,708 - INFO - Tokenized code into 2 tokens
2025-01-08 10:07:47,708 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:07:47,708 - INFO - Processing chunk #3 (size=123 chars, start_index=57)
2025-01-08 10:07:47,709 - INFO - Processing chunk with 123 chars starting at index 57
2025-01-08 10:07:47,709 - INFO - Starting main AST analysis flow
2025-01-08 10:07:47,709 - INFO - Tokenized code into 29 tokens
2025-01-08 10:07:47,709 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:07:47,711 - INFO - Processing chunk #4 (size=2 chars, start_index=86)
2025-01-08 10:07:47,711 - INFO - Processing chunk with 2 chars starting at index 86
2025-01-08 10:07:47,711 - INFO - Starting main AST analysis flow
2025-01-08 10:07:47,711 - INFO - Tokenized code into 2 tokens
2025-01-08 10:07:47,711 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:07:47,713 - INFO - Processing chunk #5 (size=153 chars, start_index=88)
2025-01-08 10:07:47,713 - INFO - Processing chunk with 153 chars starting at index 88
2025-01-08 10:07:47,713 - INFO - Starting main AST analysis flow
2025-01-08 10:07:47,713 - INFO - Tokenized code into 43 tokens
2025-01-08 10:07:47,714 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:07:47,716 - INFO - Processing chunk #6 (size=2 chars, start_index=131)
2025-01-08 10:07:47,716 - INFO - Processing chunk with 2 chars starting at index 131
2025-01-08 10:07:47,716 - INFO - Starting main AST analysis flow
2025-01-08 10:07:47,716 - INFO - Tokenized code into 2 tokens
2025-01-08 10:07:47,716 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:07:47,722 - INFO - Processing chunk #7 (size=98 chars, start_index=133)
2025-01-08 10:07:47,723 - INFO - Processing chunk with 98 chars starting at index 133
2025-01-08 10:07:47,723 - INFO - Starting main AST analysis flow
2025-01-08 10:07:47,723 - INFO - Tokenized code into 22 tokens
2025-01-08 10:07:47,723 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:07:47,732 - INFO - Processing chunk #8 (size=1 chars, start_index=155)
2025-01-08 10:07:47,736 - INFO - Processing chunk with 1 chars starting at index 155
2025-01-08 10:07:47,736 - INFO - Starting main AST analysis flow
2025-01-08 10:07:47,736 - INFO - Tokenized code into 1 tokens
2025-01-08 10:07:47,736 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:07:49,901 - INFO - Step 1 result: {'error': 'Insufficient data to identify top-level declarations. The provided token list does not contain enough information to determine any declarations.'}
2025-01-08 10:07:49,901 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:07:49,944 - INFO - Step 1 result: {'error': 'Insufficient token list provided for analysis. The token list must contain more than just a newline character to identify top-level declarations.'}
2025-01-08 10:07:49,945 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:07:49,958 - INFO - Step 1 result: {'type': 'Program', 'name': 'example_function_with_error', 'range': [60, 85], 'children': []}
2025-01-08 10:07:49,958 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:07:50,028 - INFO - Step 1 result: {'type': 'Program', 'name': 'test_error_decorator', 'range': [133, 154], 'children': []}
2025-01-08 10:07:50,028 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:07:50,041 - INFO - Step 1 result: {'type': 'Program', 'name': 'example_function', 'range': [19, 54], 'children': []}
2025-01-08 10:07:50,041 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:07:50,046 - INFO - Step 1 result: {'error': "Insufficient token data provided for AST analysis. The token list does not contain enough information to identify any top-level declarations in the 'cangjie' code."}
2025-01-08 10:07:50,047 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:07:50,168 - INFO - Step 1 result: {'type': 'Program', 'name': 'test_timer_decorator', 'range': [88, 130], 'children': []}
2025-01-08 10:07:50,168 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:07:50,573 - INFO - Step 1 result: {'error': "Insufficient data to identify top-level declarations. The provided token list does not contain any tokens that can be used to identify functions, classes, global variables, or any other top-level declarations in the 'cangjie' programming language."}
2025-01-08 10:07:50,574 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:07:51,211 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [0, 15], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 1], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [4, 13], 'children': []}]}
2025-01-08 10:07:51,211 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:07:51,612 - INFO - Step 2 result: {'error': 'Insufficient token list provided for analysis. The token list must contain more than just a newline character to identify top-level declarations and their inner content.'}
2025-01-08 10:07:51,613 - INFO - Starting Step 3: AST simplification
2025-01-08 10:07:51,716 - INFO - Step 2 result: {'error': 'Insufficient data to identify top-level declarations. The provided token list does not contain enough information to determine any declarations or to build a detailed AST structure.'}
2025-01-08 10:07:51,717 - INFO - Starting Step 3: AST simplification
2025-01-08 10:07:52,216 - INFO - Step 2 result: {'error': "Insufficient token data provided for AST analysis. The token list does not contain enough information to identify any top-level declarations or to build a detailed AST structure for the 'cangjie' code."}
2025-01-08 10:07:52,216 - INFO - Starting Step 3: AST simplification
2025-01-08 10:07:52,859 - INFO - Step 2 result: {'error': "Insufficient data to identify top-level declarations. The provided token list does not contain any tokens that can be used to identify functions, classes, global variables, or any other top-level declarations in the 'cangjie' programming language."}
2025-01-08 10:07:52,859 - INFO - Starting Step 3: AST simplification
2025-01-08 10:07:53,233 - INFO - Step 3 result: {'error': 'Insufficient token list provided for analysis. The token list must contain more than just a newline character to identify top-level declarations and their inner content.'}
2025-01-08 10:07:53,233 - INFO - Starting Step 4: AST normalization
2025-01-08 10:07:53,796 - INFO - Step 3 result: {'error': 'Insufficient data to identify top-level declarations. The provided token list does not contain enough information to determine any declarations or to build a detailed AST structure.'}
2025-01-08 10:07:53,796 - INFO - Starting Step 4: AST normalization
2025-01-08 10:07:54,412 - INFO - Step 3 result: {'error': "Insufficient token data provided for AST analysis. The token list does not contain enough information to identify any top-level declarations or to build a detailed AST structure for the 'cangjie' code."}
2025-01-08 10:07:54,412 - INFO - Starting Step 4: AST normalization
2025-01-08 10:07:54,851 - INFO - Step 3 result: {'error': "Insufficient data to identify top-level declarations. The provided token list does not contain any tokens that can be used to identify functions, classes, global variables, or any other top-level declarations in the 'cangjie' programming language."}
2025-01-08 10:07:54,851 - INFO - Starting Step 4: AST normalization
2025-01-08 10:07:54,862 - INFO - Step 4 result: {'type': 'Program', 'name': 'Program', 'range': [0, 0], 'children': []}
2025-01-08 10:07:54,862 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:07:55,654 - INFO - Step 4 result: {'type': 'Program', 'name': 'Program', 'range': [0, 0], 'children': []}
2025-01-08 10:07:55,654 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:07:56,251 - INFO - Step 4 result: {'type': 'Program', 'name': 'cangjie', 'range': [0, 0], 'children': []}
2025-01-08 10:07:56,252 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:07:56,418 - INFO - Step 2 result: {'nodes': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 1], 'children': [{'type': 'ImportSpecifier', 'name': 'time', 'range': [1, 1], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [4, 13], 'children': [{'type': 'ImportSpecifier', 'name': 'error_logged', 'range': [11, 11], 'children': []}, {'type': 'ImportSpecifier', 'name': 'time_measured', 'range': [13, 13], 'children': []}, {'type': 'ImportSource', 'name': 'backend.util.decorator', 'range': [5, 9], 'children': []}]}]}
2025-01-08 10:07:56,418 - INFO - Starting Step 3: AST simplification
2025-01-08 10:07:56,489 - INFO - Step 4 result: {'type': 'Program', 'name': 'cangjie', 'range': [0, 0], 'children': []}
2025-01-08 10:07:56,489 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:07:56,547 - INFO - Step 5 result: {'type': 'Program', 'name': 'Program', 'range': [0, 0], 'children': []}
2025-01-08 10:07:56,547 - INFO - Completed main AST analysis flow
2025-01-08 10:07:56,548 - INFO - Successfully processed chunk
2025-01-08 10:07:57,424 - INFO - Step 5 result: {'type': 'Program', 'name': 'Program', 'range': [0, 0], 'children': []}
2025-01-08 10:07:57,424 - INFO - Completed main AST analysis flow
2025-01-08 10:07:57,425 - INFO - Successfully processed chunk
2025-01-08 10:07:57,865 - INFO - Step 5 result: {'type': 'Program', 'name': 'cangjie', 'range': [0, 0], 'children': []}
2025-01-08 10:07:57,865 - INFO - Completed main AST analysis flow
2025-01-08 10:07:57,865 - INFO - Successfully processed chunk
2025-01-08 10:07:58,241 - INFO - Step 5 result: {'type': 'Program', 'name': 'cangjie', 'range': [0, 0], 'children': []}
2025-01-08 10:07:58,242 - INFO - Completed main AST analysis flow
2025-01-08 10:07:58,242 - INFO - Successfully processed chunk
2025-01-08 10:08:00,307 - INFO - Step 2 result: {'type': 'Program', 'name': 'example_function', 'range': [19, 54], 'children': [{'type': 'FunctionDeclaration', 'name': 'example_function', 'range': [19, 54], 'children': [{'type': 'Parameters', 'name': 'parameters', 'range': [21, 33], 'children': [{'type': 'Parameter', 'name': 'a', 'range': [22, 24], 'children': []}, {'type': 'Parameter', 'name': 'b', 'range': [26, 28], 'children': []}, {'type': 'Parameter', 'name': 'c', 'range': [30, 32], 'children': []}]}, {'type': 'ReturnType', 'name': 'int', 'range': [34, 36], 'children': []}, {'type': 'FunctionBody', 'name': 'body', 'range': [38, 54], 'children': [{'type': 'ExpressionStatement', 'name': 'time.sleep(0.5)', 'range': [39, 46], 'children': []}, {'type': 'ReturnStatement', 'name': 'return a + b + c', 'range': [48, 53], 'children': [{'type': 'BinaryExpression', 'name': '+', 'range': [50, 53], 'children': [{'type': 'Identifier', 'name': 'a', 'range': [49, 49], 'children': []}, {'type': 'Identifier', 'name': 'b', 'range': [51, 51], 'children': []}, {'type': 'Identifier', 'name': 'c', 'range': [53, 53], 'children': []}]}]}]}]}]}
2025-01-08 10:08:00,307 - INFO - Starting Step 3: AST simplification
2025-01-08 10:08:01,714 - INFO - Step 3 result: {'nodes': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 1], 'children': [{'type': 'ImportSpecifier', 'name': 'time', 'range': [1, 1], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [4, 13], 'children': [{'type': 'ImportSpecifier', 'name': 'error_logged', 'range': [11, 11], 'children': []}, {'type': 'ImportSpecifier', 'name': 'time_measured', 'range': [13, 13], 'children': []}, {'type': 'ImportSource', 'name': 'backend.util.decorator', 'range': [5, 9], 'children': []}]}]}
2025-01-08 10:08:01,714 - INFO - Starting Step 4: AST normalization
2025-01-08 10:08:02,427 - INFO - Step 2 result: {'type': 'Program', 'name': 'example_function_with_error', 'range': [60, 85], 'children': [{'type': 'FunctionDeclaration', 'name': 'example_function_with_error', 'range': [60, 85], 'children': [{'type': 'FunctionSignature', 'name': 'example_function_with_error', 'range': [60, 77], 'children': [{'type': 'Keyword', 'name': 'def', 'range': [60, 63], 'children': []}, {'type': 'FunctionName', 'name': 'example_function_with_error', 'range': [61, 61], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [62, 74], 'children': [{'type': 'Parameter', 'name': 'a', 'range': [63, 65], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [65, 65], 'children': []}]}, {'type': 'Parameter', 'name': 'b', 'range': [67, 69], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [69, 69], 'children': []}]}, {'type': 'Parameter', 'name': 'c', 'range': [71, 73], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [73, 73], 'children': []}]}]}, {'type': 'ReturnType', 'name': 'int', 'range': [77, 77], 'children': []}]}, {'type': 'FunctionBody', 'name': 'body', 'range': [78, 85], 'children': [{'type': 'RaiseStatement', 'name': 'raise', 'range': [80, 84], 'children': [{'type': 'ExceptionType', 'name': 'ValueError', 'range': [81, 81], 'children': []}, {'type': 'ExceptionMessage', 'name': '"This is a test error"', 'range': [83, 83], 'children': []}]}]}]}]}
2025-01-08 10:08:02,427 - INFO - Starting Step 3: AST simplification
2025-01-08 10:08:06,956 - INFO - Step 4 result: {'nodes': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 1], 'children': [{'type': 'ImportSpecifier', 'name': 'time', 'range': [1, 1], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [4, 13], 'children': [{'type': 'ImportSpecifier', 'name': 'error_logged', 'range': [11, 11], 'children': []}, {'type': 'ImportSpecifier', 'name': 'time_measured', 'range': [13, 13], 'children': []}, {'type': 'Literal', 'name': 'backend.util.decorator', 'range': [5, 9], 'children': []}]}]}
2025-01-08 10:08:06,956 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:08:08,267 - INFO - Step 2 result: {'type': 'Program', 'name': 'test_error_decorator', 'range': [133, 154], 'children': [{'type': 'FunctionDeclaration', 'name': 'test_error_decorator', 'range': [133, 154], 'children': [{'type': 'FunctionSignature', 'name': 'test_error_decorator', 'range': [133, 137], 'children': [{'type': 'Keyword', 'name': 'def', 'range': [133, 133], 'children': []}, {'type': 'Identifier', 'name': 'test_error_decorator', 'range': [134, 134], 'children': []}, {'type': 'Punctuation', 'name': '(', 'range': [135, 135], 'children': []}, {'type': 'Punctuation', 'name': ')', 'range': [136, 136], 'children': []}, {'type': 'Punctuation', 'name': ':', 'range': [137, 137], 'children': []}]}, {'type': 'FunctionBody', 'name': '', 'range': [138, 154], 'children': [{'type': 'Assignment', 'name': 'res', 'range': [139, 148], 'children': [{'type': 'Identifier', 'name': 'res', 'range': [139, 139], 'children': []}, {'type': 'Operator', 'name': '=', 'range': [140, 140], 'children': []}, {'type': 'FunctionCall', 'name': 'example_function_with_error', 'range': [141, 148], 'children': [{'type': 'Identifier', 'name': 'example_function_with_error', 'range': [141, 141], 'children': []}, {'type': 'Punctuation', 'name': '(', 'range': [142, 142], 'children': []}, {'type': 'Literal', 'name': '1', 'range': [143, 143], 'children': []}, {'type': 'Punctuation', 'name': ',', 'range': [144, 144], 'children': []}, {'type': 'Literal', 'name': '2', 'range': [145, 145], 'children': []}, {'type': 'Punctuation', 'name': ',', 'range': [146, 146], 'children': []}, {'type': 'Literal', 'name': '3', 'range': [147, 147], 'children': []}, {'type': 'Punctuation', 'name': ')', 'range': [148, 148], 'children': []}]}]}, {'type': 'AssertStatement', 'name': '', 'range': [150, 153], 'children': [{'type': 'Keyword', 'name': 'assert', 'range': [150, 150], 'children': []}, {'type': 'Identifier', 'name': 'res', 'range': [151, 151], 'children': []}, {'type': 'Operator', 'name': 'is', 'range': [152, 152], 'children': []}, {'type': 'Keyword', 'name': 'None', 'range': [153, 153], 'children': []}]}]}]}]}
2025-01-08 10:08:08,267 - INFO - Starting Step 3: AST simplification
2025-01-08 10:08:11,184 - INFO - Step 3 result: {'type': 'Program', 'name': 'example_function', 'range': [19, 54], 'children': [{'type': 'FunctionDeclaration', 'name': 'example_function', 'range': [19, 54], 'children': [{'type': 'Parameters', 'name': 'parameters', 'range': [21, 33], 'children': [{'type': 'Parameter', 'name': 'a', 'range': [22, 24], 'children': []}, {'type': 'Parameter', 'name': 'b', 'range': [26, 28], 'children': []}, {'type': 'Parameter', 'name': 'c', 'range': [30, 32], 'children': []}]}, {'type': 'ReturnType', 'name': 'int', 'range': [34, 36], 'children': []}, {'type': 'FunctionBody', 'name': 'body', 'range': [38, 54], 'children': [{'type': 'ExpressionStatement', 'name': 'time.sleep', 'range': [39, 46], 'children': [{'type': 'Literal', 'name': '0.5', 'range': [43, 45], 'children': []}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [48, 53], 'children': [{'type': 'BinaryExpression', 'name': '+', 'range': [50, 53], 'children': [{'type': 'Identifier', 'name': 'a', 'range': [49, 49], 'children': []}, {'type': 'Identifier', 'name': 'b', 'range': [51, 51], 'children': []}, {'type': 'Identifier', 'name': 'c', 'range': [53, 53], 'children': []}]}]}]}]}]}
2025-01-08 10:08:11,184 - INFO - Starting Step 4: AST normalization
2025-01-08 10:08:12,990 - INFO - Step 5 result: {'nodes': [{'type': 'Program', 'name': 'MainOrSomething', 'range': [0, 13], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 1], 'children': [{'type': 'ImportSpecifier', 'name': 'time', 'range': [1, 1], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [4, 13], 'children': [{'type': 'ImportSpecifier', 'name': 'error_logged', 'range': [11, 11], 'children': []}, {'type': 'ImportSpecifier', 'name': 'time_measured', 'range': [13, 13], 'children': []}, {'type': 'Literal', 'name': 'backend.util.decorator', 'range': [5, 9], 'children': []}]}]}]}
2025-01-08 10:08:12,991 - INFO - Completed main AST analysis flow
2025-01-08 10:08:12,991 - INFO - Successfully processed chunk
2025-01-08 10:08:14,910 - INFO - Step 3 result: {'type': 'Program', 'name': 'example_function_with_error', 'range': [60, 85], 'children': [{'type': 'FunctionDeclaration', 'name': 'example_function_with_error', 'range': [60, 85], 'children': [{'type': 'FunctionSignature', 'name': 'example_function_with_error', 'range': [60, 77], 'children': [{'type': 'Keyword', 'name': 'def', 'range': [60, 63], 'children': []}, {'type': 'FunctionName', 'name': 'example_function_with_error', 'range': [61, 61], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [62, 74], 'children': [{'type': 'Parameter', 'name': 'a', 'range': [63, 65], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [65, 65], 'children': []}]}, {'type': 'Parameter', 'name': 'b', 'range': [67, 69], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [69, 69], 'children': []}]}, {'type': 'Parameter', 'name': 'c', 'range': [71, 73], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [73, 73], 'children': []}]}]}, {'type': 'ReturnType', 'name': 'int', 'range': [77, 77], 'children': []}]}, {'type': 'FunctionBody', 'name': 'body', 'range': [78, 85], 'children': [{'type': 'RaiseStatement', 'name': 'raise', 'range': [80, 84], 'children': [{'type': 'ExceptionType', 'name': 'ValueError', 'range': [81, 81], 'children': []}, {'type': 'ExceptionMessage', 'name': '"This is a test error"', 'range': [83, 83], 'children': []}]}]}]}]}
2025-01-08 10:08:14,910 - INFO - Starting Step 4: AST normalization
2025-01-08 10:08:20,337 - INFO - Step 3 result: {'type': 'Program', 'name': 'test_error_decorator', 'range': [133, 154], 'children': [{'type': 'FunctionDeclaration', 'name': 'test_error_decorator', 'range': [133, 154], 'children': [{'type': 'FunctionSignature', 'name': 'test_error_decorator', 'range': [133, 137], 'children': [{'type': 'Keyword', 'name': 'def', 'range': [133, 133], 'children': []}, {'type': 'Identifier', 'name': 'test_error_decorator', 'range': [134, 134], 'children': []}]}, {'type': 'FunctionBody', 'name': '', 'range': [138, 154], 'children': [{'type': 'Assignment', 'name': 'res', 'range': [139, 148], 'children': [{'type': 'Identifier', 'name': 'res', 'range': [139, 139], 'children': []}, {'type': 'FunctionCall', 'name': 'example_function_with_error', 'range': [141, 148], 'children': [{'type': 'Identifier', 'name': 'example_function_with_error', 'range': [141, 141], 'children': []}, {'type': 'Literal', 'name': '1', 'range': [143, 143], 'children': []}, {'type': 'Literal', 'name': '2', 'range': [145, 145], 'children': []}, {'type': 'Literal', 'name': '3', 'range': [147, 147], 'children': []}]}]}, {'type': 'AssertStatement', 'name': '', 'range': [150, 153], 'children': [{'type': 'Keyword', 'name': 'assert', 'range': [150, 150], 'children': []}, {'type': 'Identifier', 'name': 'res', 'range': [151, 151], 'children': []}, {'type': 'Keyword', 'name': 'None', 'range': [153, 153], 'children': []}]}]}]}]}
2025-01-08 10:08:20,337 - INFO - Starting Step 4: AST normalization
2025-01-08 10:08:20,428 - INFO - Step 2 result: {'type': 'Program', 'name': 'test_timer_decorator', 'range': [88, 130], 'children': [{'type': 'FunctionDeclaration', 'name': 'test_timer_decorator', 'range': [88, 130], 'children': [{'type': 'FunctionSignature', 'name': 'test_timer_decorator', 'range': [88, 92], 'children': [{'type': 'Keyword', 'name': 'def', 'range': [88, 88], 'children': []}, {'type': 'Identifier', 'name': 'test_timer_decorator', 'range': [89, 89], 'children': []}, {'type': 'Punctuation', 'name': '(', 'range': [90, 90], 'children': []}, {'type': 'Punctuation', 'name': ')', 'range': [91, 91], 'children': []}, {'type': 'Punctuation', 'name': ':', 'range': [92, 92], 'children': []}]}, {'type': 'FunctionBody', 'name': 'test_timer_decorator', 'range': [93, 130], 'children': [{'type': 'AssignmentExpression', 'name': 'info, res = example_function(1, 2, 3)', 'range': [94, 105], 'children': [{'type': 'Identifier', 'name': 'info', 'range': [94, 94], 'children': []}, {'type': 'Punctuation', 'name': ',', 'range': [95, 95], 'children': []}, {'type': 'Identifier', 'name': 'res', 'range': [96, 96], 'children': []}, {'type': 'Operator', 'name': '=', 'range': [97, 97], 'children': []}, {'type': 'FunctionCall', 'name': 'example_function(1, 2, 3)', 'range': [98, 105], 'children': [{'type': 'Identifier', 'name': 'example_function', 'range': [98, 98], 'children': []}, {'type': 'Punctuation', 'name': '(', 'range': [99, 99], 'children': []}, {'type': 'Literal', 'name': '1', 'range': [100, 100], 'children': []}, {'type': 'Punctuation', 'name': ',', 'range': [101, 101], 'children': []}, {'type': 'Literal', 'name': '2', 'range': [102, 102], 'children': []}, {'type': 'Punctuation', 'name': ',', 'range': [103, 103], 'children': []}, {'type': 'Literal', 'name': '3', 'range': [104, 104], 'children': []}, {'type': 'Punctuation', 'name': ')', 'range': [105, 105], 'children': []}]}]}, {'type': 'AssertStatement', 'name': 'assert info.cpu_time >= 0', 'range': [107, 113], 'children': [{'type': 'Keyword', 'name': 'assert', 'range': [107, 107], 'children': []}, {'type': 'MemberExpression', 'name': 'info.cpu_time', 'range': [108, 110], 'children': [{'type': 'Identifier', 'name': 'info', 'range': [108, 108], 'children': []}, {'type': 'Punctuation', 'name': '.', 'range': [109, 109], 'children': []}, {'type': 'Identifier', 'name': 'cpu_time', 'range': [110, 110], 'children': []}]}, {'type': 'Operator', 'name': '>=', 'range': [111, 112], 'children': []}, {'type': 'Literal', 'name': '0', 'range': [113, 113], 'children': []}]}, {'type': 'AssertStatement', 'name': 'assert info.wall_time >= 0.4', 'range': [115, 123], 'children': [{'type': 'Keyword', 'name': 'assert', 'range': [115, 115], 'children': []}, {'type': 'MemberExpression', 'name': 'info.wall_time', 'range': [116, 118], 'children': [{'type': 'Identifier', 'name': 'info', 'range': [116, 116], 'children': []}, {'type': 'Punctuation', 'name': '.', 'range': [117, 117], 'children': []}, {'type': 'Identifier', 'name': 'wall_time', 'range': [118, 118], 'children': []}]}, {'type': 'Operator', 'name': '>=', 'range': [119, 120], 'children': []}, {'type': 'Literal', 'name': '0.4', 'range': [121, 123], 'children': []}]}, {'type': 'AssertStatement', 'name': 'assert res == 6', 'range': [125, 129], 'children': [{'type': 'Keyword', 'name': 'assert', 'range': [125, 125], 'children': []}, {'type': 'Identifier', 'name': 'res', 'range': [126, 126], 'children': []}, {'type': 'Operator', 'name': '==', 'range': [127, 128], 'children': []}, {'type': 'Literal', 'name': '6', 'range': [129, 129], 'children': []}]}]}]}]}
2025-01-08 10:08:20,428 - INFO - Starting Step 3: AST simplification
2025-01-08 10:08:22,792 - INFO - Step 4 result: {'type': 'Program', 'name': 'example_function', 'range': [19, 54], 'children': [{'type': 'FunctionDecl', 'name': 'example_function', 'range': [19, 54], 'children': [{'type': 'Parameters', 'name': 'parameters', 'range': [21, 33], 'children': [{'type': 'Parameter', 'name': 'a', 'range': [22, 24], 'children': []}, {'type': 'Parameter', 'name': 'b', 'range': [26, 28], 'children': []}, {'type': 'Parameter', 'name': 'c', 'range': [30, 32], 'children': []}]}, {'type': 'ReturnType', 'name': 'int', 'range': [34, 36], 'children': []}, {'type': 'FunctionBody', 'name': 'body', 'range': [38, 54], 'children': [{'type': 'ExpressionStatement', 'name': 'time.sleep', 'range': [39, 46], 'children': [{'type': 'CallExpression', 'name': 'time.sleep', 'range': [39, 46], 'children': [{'type': 'Literal', 'name': '0.5', 'range': [43, 45], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [48, 53], 'children': [{'type': 'BinaryExpression', 'name': '+', 'range': [50, 53], 'children': [{'type': 'Identifier', 'name': 'a', 'range': [49, 49], 'children': []}, {'type': 'Identifier', 'name': 'b', 'range': [51, 51], 'children': []}, {'type': 'Identifier', 'name': 'c', 'range': [53, 53], 'children': []}]}]}]}]}]}
2025-01-08 10:08:22,792 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:08:27,667 - INFO - Step 4 result: {'type': 'Program', 'name': 'example_function_with_error', 'range': [60, 85], 'children': [{'type': 'FunctionDecl', 'name': 'example_function_with_error', 'range': [60, 85], 'children': [{'type': 'FunctionSignature', 'name': 'example_function_with_error', 'range': [60, 77], 'children': [{'type': 'Keyword', 'name': 'def', 'range': [60, 63], 'children': []}, {'type': 'Identifier', 'name': 'example_function_with_error', 'range': [61, 61], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [62, 74], 'children': [{'type': 'Parameter', 'name': 'a', 'range': [63, 65], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [65, 65], 'children': []}]}, {'type': 'Parameter', 'name': 'b', 'range': [67, 69], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [69, 69], 'children': []}]}, {'type': 'Parameter', 'name': 'c', 'range': [71, 73], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [73, 73], 'children': []}]}]}, {'type': 'ReturnType', 'name': 'int', 'range': [77, 77], 'children': []}]}, {'type': 'FunctionBody', 'name': 'body', 'range': [78, 85], 'children': [{'type': 'RaiseStatement', 'name': 'raise', 'range': [80, 84], 'children': [{'type': 'Identifier', 'name': 'ValueError', 'range': [81, 81], 'children': []}, {'type': 'Literal', 'name': '"This is a test error"', 'range': [83, 83], 'children': []}]}]}]}]}
2025-01-08 10:08:27,668 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:08:33,239 - INFO - Step 4 result: {'type': 'Program', 'name': 'test_error_decorator', 'range': [133, 154], 'children': [{'type': 'FunctionDecl', 'name': 'test_error_decorator', 'range': [133, 154], 'children': [{'type': 'FunctionSignature', 'name': 'test_error_decorator', 'range': [133, 137], 'children': [{'type': 'Keyword', 'name': 'def', 'range': [133, 133], 'children': []}, {'type': 'Identifier', 'name': 'test_error_decorator', 'range': [134, 134], 'children': []}]}, {'type': 'FunctionBody', 'name': '', 'range': [138, 154], 'children': [{'type': 'AssignmentExpression', 'name': 'res', 'range': [139, 148], 'children': [{'type': 'Identifier', 'name': 'res', 'range': [139, 139], 'children': []}, {'type': 'CallExpression', 'name': 'example_function_with_error', 'range': [141, 148], 'children': [{'type': 'Identifier', 'name': 'example_function_with_error', 'range': [141, 141], 'children': []}, {'type': 'Literal', 'name': '1', 'range': [143, 143], 'children': []}, {'type': 'Literal', 'name': '2', 'range': [145, 145], 'children': []}, {'type': 'Literal', 'name': '3', 'range': [147, 147], 'children': []}]}]}, {'type': 'AssertStatement', 'name': '', 'range': [150, 153], 'children': [{'type': 'Keyword', 'name': 'assert', 'range': [150, 150], 'children': []}, {'type': 'Identifier', 'name': 'res', 'range': [151, 151], 'children': []}, {'type': 'Literal', 'name': 'None', 'range': [153, 153], 'children': []}]}]}]}]}
2025-01-08 10:08:33,239 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:08:34,299 - INFO - Step 5 result: {'type': 'Program', 'name': 'example_function', 'range': [19, 54], 'children': [{'type': 'FunctionDecl', 'name': 'example_function', 'range': [19, 54], 'children': [{'type': 'Parameters', 'name': 'parameters', 'range': [21, 33], 'children': [{'type': 'Parameter', 'name': 'a', 'range': [22, 24], 'children': []}, {'type': 'Parameter', 'name': 'b', 'range': [26, 28], 'children': []}, {'type': 'Parameter', 'name': 'c', 'range': [30, 32], 'children': []}]}, {'type': 'ReturnType', 'name': 'int', 'range': [34, 36], 'children': []}, {'type': 'FunctionBody', 'name': 'body', 'range': [38, 54], 'children': [{'type': 'ExpressionStatement', 'name': 'time.sleep', 'range': [39, 46], 'children': [{'type': 'CallExpression', 'name': 'time.sleep', 'range': [39, 46], 'children': [{'type': 'Literal', 'name': '0.5', 'range': [43, 45], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [48, 53], 'children': [{'type': 'BinaryExpression', 'name': '+', 'range': [50, 53], 'children': [{'type': 'Identifier', 'name': 'a', 'range': [49, 49], 'children': []}, {'type': 'Identifier', 'name': 'b', 'range': [51, 51], 'children': []}, {'type': 'Identifier', 'name': 'c', 'range': [53, 53], 'children': []}]}]}]}]}]}
2025-01-08 10:08:34,299 - INFO - Completed main AST analysis flow
2025-01-08 10:08:34,299 - INFO - Successfully processed chunk
2025-01-08 10:08:40,442 - INFO - Step 5 result: {'type': 'Program', 'name': 'example_function_with_error', 'range': [60, 85], 'children': [{'type': 'FunctionDecl', 'name': 'example_function_with_error', 'range': [60, 85], 'children': [{'type': 'FunctionSignature', 'name': 'example_function_with_error', 'range': [60, 77], 'children': [{'type': 'Keyword', 'name': 'def', 'range': [60, 63], 'children': []}, {'type': 'Identifier', 'name': 'example_function_with_error', 'range': [61, 61], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [62, 74], 'children': [{'type': 'Parameter', 'name': 'a', 'range': [63, 65], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [65, 65], 'children': []}]}, {'type': 'Parameter', 'name': 'b', 'range': [67, 69], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [69, 69], 'children': []}]}, {'type': 'Parameter', 'name': 'c', 'range': [71, 73], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [73, 73], 'children': []}]}]}, {'type': 'ReturnType', 'name': 'int', 'range': [77, 77], 'children': []}]}, {'type': 'FunctionBody', 'name': 'body', 'range': [78, 85], 'children': [{'type': 'RaiseStatement', 'name': 'raise', 'range': [80, 84], 'children': [{'type': 'Identifier', 'name': 'ValueError', 'range': [81, 81], 'children': []}, {'type': 'Literal', 'name': '"This is a test error"', 'range': [83, 83], 'children': []}]}]}]}]}
2025-01-08 10:08:40,442 - INFO - Completed main AST analysis flow
2025-01-08 10:08:40,442 - INFO - Successfully processed chunk
2025-01-08 10:08:42,152 - INFO - Step 3 result: {'type': 'Program', 'name': 'test_timer_decorator', 'range': [88, 130], 'children': [{'type': 'FunctionDeclaration', 'name': 'test_timer_decorator', 'range': [88, 130], 'children': [{'type': 'FunctionSignature', 'name': 'test_timer_decorator', 'range': [88, 92], 'children': [{'type': 'Keyword', 'name': 'def', 'range': [88, 88], 'children': []}, {'type': 'Identifier', 'name': 'test_timer_decorator', 'range': [89, 89], 'children': []}]}, {'type': 'FunctionBody', 'name': 'test_timer_decorator', 'range': [93, 130], 'children': [{'type': 'AssignmentExpression', 'name': 'info, res = example_function(1, 2, 3)', 'range': [94, 105], 'children': [{'type': 'Identifier', 'name': 'info', 'range': [94, 94], 'children': []}, {'type': 'Identifier', 'name': 'res', 'range': [96, 96], 'children': []}, {'type': 'FunctionCall', 'name': 'example_function(1, 2, 3)', 'range': [98, 105], 'children': [{'type': 'Identifier', 'name': 'example_function', 'range': [98, 98], 'children': []}, {'type': 'Literal', 'name': '1', 'range': [100, 100], 'children': []}, {'type': 'Literal', 'name': '2', 'range': [102, 102], 'children': []}, {'type': 'Literal', 'name': '3', 'range': [104, 104], 'children': []}]}]}, {'type': 'AssertStatement', 'name': 'assert info.cpu_time >= 0', 'range': [107, 113], 'children': [{'type': 'Keyword', 'name': 'assert', 'range': [107, 107], 'children': []}, {'type': 'MemberExpression', 'name': 'info.cpu_time', 'range': [108, 110], 'children': [{'type': 'Identifier', 'name': 'info', 'range': [108, 108], 'children': []}, {'type': 'Identifier', 'name': 'cpu_time', 'range': [110, 110], 'children': []}]}, {'type': 'Literal', 'name': '0', 'range': [113, 113], 'children': []}]}, {'type': 'AssertStatement', 'name': 'assert info.wall_time >= 0.4', 'range': [115, 123], 'children': [{'type': 'Keyword', 'name': 'assert', 'range': [115, 115], 'children': []}, {'type': 'MemberExpression', 'name': 'info.wall_time', 'range': [116, 118], 'children': [{'type': 'Identifier', 'name': 'info', 'range': [116, 116], 'children': []}, {'type': 'Identifier', 'name': 'wall_time', 'range': [118, 118], 'children': []}]}, {'type': 'Literal', 'name': '0.4', 'range': [121, 123], 'children': []}]}, {'type': 'AssertStatement', 'name': 'assert res == 6', 'range': [125, 129], 'children': [{'type': 'Keyword', 'name': 'assert', 'range': [125, 125], 'children': []}, {'type': 'Identifier', 'name': 'res', 'range': [126, 126], 'children': []}, {'type': 'Literal', 'name': '6', 'range': [129, 129], 'children': []}]}]}]}]}
2025-01-08 10:08:42,152 - INFO - Starting Step 4: AST normalization
2025-01-08 10:08:45,611 - INFO - Step 5 result: {'type': 'Program', 'name': 'test_error_decorator', 'range': [133, 154], 'children': [{'type': 'FunctionDecl', 'name': 'test_error_decorator', 'range': [133, 154], 'children': [{'type': 'FunctionSignature', 'name': 'test_error_decorator', 'range': [133, 137], 'children': [{'type': 'Keyword', 'name': 'def', 'range': [133, 133], 'children': []}, {'type': 'Identifier', 'name': 'test_error_decorator', 'range': [134, 134], 'children': []}]}, {'type': 'FunctionBody', 'name': '', 'range': [138, 154], 'children': [{'type': 'AssignmentExpression', 'name': 'res', 'range': [139, 148], 'children': [{'type': 'Identifier', 'name': 'res', 'range': [139, 139], 'children': []}, {'type': 'CallExpression', 'name': 'example_function_with_error', 'range': [141, 148], 'children': [{'type': 'Identifier', 'name': 'example_function_with_error', 'range': [141, 141], 'children': []}, {'type': 'Literal', 'name': '1', 'range': [143, 143], 'children': []}, {'type': 'Literal', 'name': '2', 'range': [145, 145], 'children': []}, {'type': 'Literal', 'name': '3', 'range': [147, 147], 'children': []}]}]}, {'type': 'AssertStatement', 'name': '', 'range': [150, 153], 'children': [{'type': 'Keyword', 'name': 'assert', 'range': [150, 150], 'children': []}, {'type': 'Identifier', 'name': 'res', 'range': [151, 151], 'children': []}, {'type': 'Literal', 'name': 'None', 'range': [153, 153], 'children': []}]}]}]}]}
2025-01-08 10:08:45,611 - INFO - Completed main AST analysis flow
2025-01-08 10:08:45,611 - INFO - Successfully processed chunk
2025-01-08 10:09:04,259 - INFO - Step 4 result: {'type': 'Program', 'name': 'test_timer_decorator', 'range': [88, 130], 'children': [{'type': 'FunctionDecl', 'name': 'test_timer_decorator', 'range': [88, 130], 'children': [{'type': 'FunctionSignature', 'name': 'test_timer_decorator', 'range': [88, 92], 'children': [{'type': 'Keyword', 'name': 'def', 'range': [88, 88], 'children': []}, {'type': 'Identifier', 'name': 'test_timer_decorator', 'range': [89, 89], 'children': []}]}, {'type': 'FunctionBody', 'name': 'test_timer_decorator', 'range': [93, 130], 'children': [{'type': 'AssignmentExpression', 'name': 'info, res = example_function(1, 2, 3)', 'range': [94, 105], 'children': [{'type': 'Identifier', 'name': 'info', 'range': [94, 94], 'children': []}, {'type': 'Identifier', 'name': 'res', 'range': [96, 96], 'children': []}, {'type': 'CallExpression', 'name': 'example_function(1, 2, 3)', 'range': [98, 105], 'children': [{'type': 'Identifier', 'name': 'example_function', 'range': [98, 98], 'children': []}, {'type': 'Literal', 'name': '1', 'range': [100, 100], 'children': []}, {'type': 'Literal', 'name': '2', 'range': [102, 102], 'children': []}, {'type': 'Literal', 'name': '3', 'range': [104, 104], 'children': []}]}]}, {'type': 'AssertStatement', 'name': 'assert info.cpu_time >= 0', 'range': [107, 113], 'children': [{'type': 'Keyword', 'name': 'assert', 'range': [107, 107], 'children': []}, {'type': 'MemberExpression', 'name': 'info.cpu_time', 'range': [108, 110], 'children': [{'type': 'Identifier', 'name': 'info', 'range': [108, 108], 'children': []}, {'type': 'Identifier', 'name': 'cpu_time', 'range': [110, 110], 'children': []}]}, {'type': 'Literal', 'name': '0', 'range': [113, 113], 'children': []}]}, {'type': 'AssertStatement', 'name': 'assert info.wall_time >= 0.4', 'range': [115, 123], 'children': [{'type': 'Keyword', 'name': 'assert', 'range': [115, 115], 'children': []}, {'type': 'MemberExpression', 'name': 'info.wall_time', 'range': [116, 118], 'children': [{'type': 'Identifier', 'name': 'info', 'range': [116, 116], 'children': []}, {'type': 'Identifier', 'name': 'wall_time', 'range': [118, 118], 'children': []}]}, {'type': 'Literal', 'name': '0.4', 'range': [121, 123], 'children': []}]}, {'type': 'AssertStatement', 'name': 'assert res == 6', 'range': [125, 129], 'children': [{'type': 'Keyword', 'name': 'assert', 'range': [125, 125], 'children': []}, {'type': 'Identifier', 'name': 'res', 'range': [126, 126], 'children': []}, {'type': 'Literal', 'name': '6', 'range': [129, 129], 'children': []}]}]}]}]}
2025-01-08 10:09:04,260 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:09:26,874 - INFO - Step 5 result: {'type': 'Program', 'name': 'test_timer_decorator', 'range': [88, 130], 'children': [{'type': 'FunctionDecl', 'name': 'test_timer_decorator', 'range': [88, 130], 'children': [{'type': 'FunctionSignature', 'name': 'test_timer_decorator', 'range': [88, 92], 'children': [{'type': 'Keyword', 'name': 'def', 'range': [88, 88], 'children': []}, {'type': 'Identifier', 'name': 'test_timer_decorator', 'range': [89, 89], 'children': []}]}, {'type': 'FunctionBody', 'name': 'test_timer_decorator', 'range': [93, 130], 'children': [{'type': 'AssignmentExpression', 'name': 'info, res = example_function(1, 2, 3)', 'range': [94, 105], 'children': [{'type': 'Identifier', 'name': 'info', 'range': [94, 94], 'children': []}, {'type': 'Identifier', 'name': 'res', 'range': [96, 96], 'children': []}, {'type': 'CallExpression', 'name': 'example_function(1, 2, 3)', 'range': [98, 105], 'children': [{'type': 'Identifier', 'name': 'example_function', 'range': [98, 98], 'children': []}, {'type': 'Literal', 'name': '1', 'range': [100, 100], 'children': []}, {'type': 'Literal', 'name': '2', 'range': [102, 102], 'children': []}, {'type': 'Literal', 'name': '3', 'range': [104, 104], 'children': []}]}]}, {'type': 'AssertStatement', 'name': 'assert info.cpu_time >= 0', 'range': [107, 113], 'children': [{'type': 'Keyword', 'name': 'assert', 'range': [107, 107], 'children': []}, {'type': 'MemberExpression', 'name': 'info.cpu_time', 'range': [108, 110], 'children': [{'type': 'Identifier', 'name': 'info', 'range': [108, 108], 'children': []}, {'type': 'Identifier', 'name': 'cpu_time', 'range': [110, 110], 'children': []}]}, {'type': 'Literal', 'name': '0', 'range': [113, 113], 'children': []}]}, {'type': 'AssertStatement', 'name': 'assert info.wall_time >= 0.4', 'range': [115, 123], 'children': [{'type': 'Keyword', 'name': 'assert', 'range': [115, 115], 'children': []}, {'type': 'MemberExpression', 'name': 'info.wall_time', 'range': [116, 118], 'children': [{'type': 'Identifier', 'name': 'info', 'range': [116, 116], 'children': []}, {'type': 'Identifier', 'name': 'wall_time', 'range': [118, 118], 'children': []}]}, {'type': 'Literal', 'name': '0.4', 'range': [121, 123], 'children': []}]}, {'type': 'AssertStatement', 'name': 'assert res == 6', 'range': [125, 129], 'children': [{'type': 'Keyword', 'name': 'assert', 'range': [125, 125], 'children': []}, {'type': 'Identifier', 'name': 'res', 'range': [126, 126], 'children': []}, {'type': 'Literal', 'name': '6', 'range': [129, 129], 'children': []}]}]}]}]}
2025-01-08 10:09:26,875 - INFO - Completed main AST analysis flow
2025-01-08 10:09:26,875 - INFO - Successfully processed chunk
2025-01-08 10:09:26,888 - INFO - Starting code generation from AST
2025-01-08 10:09:31,427 - INFO - Successfully generated code from AST
2025-01-08 10:09:31,427 - INFO - Starting static code similarity comparison
2025-01-08 10:09:31,429 - INFO - Static similarity result: {'final_score': 100.0, 'length_similarity': 100.0, 'token_similarity': 100.0, 'structure_similarity': 100.0, 'function_similarity': 100, 'complexity_similarity': 100.0, 'variable_similarity': 100}
