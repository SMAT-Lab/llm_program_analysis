2025-01-08 10:27:27,371 - INFO - Processing sample 103
2025-01-08 10:27:27,379 - INFO - Starting Step 0: Splitting code into top-level declarations
2025-01-08 10:27:42,375 - INFO - Successfully split code into 20 top-level declarations
2025-01-08 10:27:43,333 - INFO - Processing chunk #0 (size=132 chars, start_index=0)
2025-01-08 10:27:43,333 - INFO - Processing chunk with 132 chars starting at index 0
2025-01-08 10:27:43,333 - INFO - Starting main AST analysis flow
2025-01-08 10:27:43,333 - INFO - Tokenized code into 24 tokens
2025-01-08 10:27:43,333 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:43,684 - INFO - Processing chunk #1 (size=77 chars, start_index=24)
2025-01-08 10:27:43,684 - INFO - Processing chunk with 77 chars starting at index 24
2025-01-08 10:27:43,684 - INFO - Starting main AST analysis flow
2025-01-08 10:27:43,684 - INFO - Tokenized code into 14 tokens
2025-01-08 10:27:43,684 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:43,937 - INFO - Processing chunk #2 (size=111 chars, start_index=38)
2025-01-08 10:27:44,005 - INFO - Processing chunk with 111 chars starting at index 38
2025-01-08 10:27:44,005 - INFO - Starting main AST analysis flow
2025-01-08 10:27:44,005 - INFO - Tokenized code into 19 tokens
2025-01-08 10:27:44,065 - INFO - Processing chunk #3 (size=136 chars, start_index=57)
2025-01-08 10:27:44,068 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:44,151 - INFO - Processing chunk #4 (size=44 chars, start_index=83)
2025-01-08 10:27:44,365 - INFO - Processing chunk with 44 chars starting at index 83
2025-01-08 10:27:44,304 - INFO - Processing chunk #5 (size=23 chars, start_index=93)
2025-01-08 10:27:44,365 - INFO - Processing chunk with 23 chars starting at index 93
2025-01-08 10:27:44,365 - INFO - Starting main AST analysis flow
2025-01-08 10:27:44,365 - INFO - Tokenized code into 7 tokens
2025-01-08 10:27:44,365 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:44,274 - INFO - Processing chunk with 136 chars starting at index 57
2025-01-08 10:27:44,365 - INFO - Starting main AST analysis flow
2025-01-08 10:27:44,368 - INFO - Processing chunk #6 (size=221 chars, start_index=100)
2025-01-08 10:27:44,376 - INFO - Starting main AST analysis flow
2025-01-08 10:27:44,476 - INFO - Tokenized code into 26 tokens
2025-01-08 10:27:44,401 - INFO - Processing chunk #7 (size=233 chars, start_index=139)
2025-01-08 10:27:44,401 - INFO - Processing chunk with 221 chars starting at index 100
2025-01-08 10:27:44,476 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:44,389 - INFO - Tokenized code into 10 tokens
2025-01-08 10:27:44,519 - INFO - Processing chunk #8 (size=237 chars, start_index=178)
2025-01-08 10:27:44,519 - INFO - Processing chunk with 233 chars starting at index 139
2025-01-08 10:27:44,709 - INFO - Starting main AST analysis flow
2025-01-08 10:27:44,709 - INFO - Tokenized code into 39 tokens
2025-01-08 10:27:44,690 - INFO - Processing chunk with 237 chars starting at index 178
2025-01-08 10:27:44,743 - INFO - Starting main AST analysis flow
2025-01-08 10:27:44,781 - INFO - Tokenized code into 39 tokens
2025-01-08 10:27:44,573 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:44,709 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:44,781 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:44,523 - INFO - Starting main AST analysis flow
2025-01-08 10:27:44,955 - INFO - Tokenized code into 39 tokens
2025-01-08 10:27:44,956 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:50,415 - INFO - Processing chunk #9 (size=225 chars, start_index=217)
2025-01-08 10:27:50,439 - INFO - Processing chunk with 225 chars starting at index 217
2025-01-08 10:27:50,439 - INFO - Starting main AST analysis flow
2025-01-08 10:27:50,440 - INFO - Tokenized code into 39 tokens
2025-01-08 10:27:50,440 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:50,441 - INFO - Processing chunk #10 (size=237 chars, start_index=256)
2025-01-08 10:27:50,446 - INFO - Processing chunk #11 (size=217 chars, start_index=295)
2025-01-08 10:27:50,458 - INFO - Processing chunk with 237 chars starting at index 256
2025-01-08 10:27:50,462 - INFO - Processing chunk with 217 chars starting at index 295
2025-01-08 10:27:50,464 - INFO - Starting main AST analysis flow
2025-01-08 10:27:50,467 - INFO - Starting main AST analysis flow
2025-01-08 10:27:50,469 - INFO - Tokenized code into 39 tokens
2025-01-08 10:27:50,477 - INFO - Tokenized code into 39 tokens
2025-01-08 10:27:50,493 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:50,505 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:53,260 - INFO - Processing chunk #12 (size=215 chars, start_index=334)
2025-01-08 10:27:53,260 - INFO - Processing chunk with 215 chars starting at index 334
2025-01-08 10:27:53,260 - INFO - Starting main AST analysis flow
2025-01-08 10:27:53,261 - INFO - Tokenized code into 39 tokens
2025-01-08 10:27:53,261 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:53,261 - INFO - Processing chunk #13 (size=217 chars, start_index=373)
2025-01-08 10:27:53,401 - INFO - Processing chunk with 217 chars starting at index 373
2025-01-08 10:27:53,401 - INFO - Starting main AST analysis flow
2025-01-08 10:27:53,592 - INFO - Tokenized code into 39 tokens
2025-01-08 10:27:53,665 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:53,607 - INFO - Processing chunk #14 (size=232 chars, start_index=412)
2025-01-08 10:27:53,805 - INFO - Processing chunk with 232 chars starting at index 412
2025-01-08 10:27:53,805 - INFO - Starting main AST analysis flow
2025-01-08 10:27:53,818 - INFO - Tokenized code into 39 tokens
2025-01-08 10:27:53,843 - INFO - Processing chunk #15 (size=245 chars, start_index=451)
2025-01-08 10:27:53,850 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:53,874 - INFO - Processing chunk with 245 chars starting at index 451
2025-01-08 10:27:53,941 - INFO - Processing chunk #16 (size=2 chars, start_index=490)
2025-01-08 10:27:53,999 - INFO - Processing chunk with 2 chars starting at index 490
2025-01-08 10:27:53,999 - INFO - Starting main AST analysis flow
2025-01-08 10:27:53,999 - INFO - Tokenized code into 2 tokens
2025-01-08 10:27:53,999 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:53,961 - INFO - Starting main AST analysis flow
2025-01-08 10:27:54,003 - INFO - Tokenized code into 39 tokens
2025-01-08 10:27:54,003 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:57,419 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [24, 37], 'children': []}
2025-01-08 10:27:57,575 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:27:57,641 - INFO - Step 1 result: {'type': 'Program', 'name': 'replicate_credentials', 'range': [178, 216], 'children': []}
2025-01-08 10:27:57,641 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:27:57,724 - INFO - Step 1 result: {'type': 'Program', 'name': 'ideogram_credentials', 'range': [139, 177], 'children': []}
2025-01-08 10:27:57,775 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:27:58,369 - INFO - Processing chunk #17 (size=271 chars, start_index=492)
2025-01-08 10:27:58,374 - INFO - Processing chunk with 271 chars starting at index 492
2025-01-08 10:27:58,379 - INFO - Starting main AST analysis flow
2025-01-08 10:27:58,379 - INFO - Tokenized code into 36 tokens
2025-01-08 10:27:58,379 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:58,425 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [0, 23], 'children': []}
2025-01-08 10:27:58,465 - INFO - Processing chunk #18 (size=2 chars, start_index=528)
2025-01-08 10:27:58,490 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:27:58,522 - INFO - Processing chunk #19 (size=8163 chars, start_index=530)
2025-01-08 10:27:58,596 - INFO - Processing chunk with 2 chars starting at index 528
2025-01-08 10:27:58,635 - INFO - Processing chunk with 8163 chars starting at index 530
2025-01-08 10:27:58,678 - INFO - Starting main AST analysis flow
2025-01-08 10:27:58,689 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [83, 92], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [83, 90], 'children': [{'type': 'ImportSpecifier', 'name': 'Settings', 'range': [90, 90], 'children': []}]}]}
2025-01-08 10:27:58,702 - INFO - Starting main AST analysis flow
2025-01-08 10:27:58,717 - INFO - Tokenized code into 2 tokens
2025-01-08 10:27:58,722 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:27:58,737 - INFO - Tokenized code into 1289 tokens
2025-01-08 10:27:58,755 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:58,783 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:59,340 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [93, 99], 'children': [{'type': 'VariableDeclaration', 'name': 'settings', 'range': [93, 97], 'children': []}]}
2025-01-08 10:27:59,341 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:00,353 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [490, 491], 'children': []}
2025-01-08 10:28:00,353 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:00,601 - INFO - Step 1 result: {'type': 'Program', 'name': 'open_router_credentials', 'range': [451, 489], 'children': []}
2025-01-08 10:28:00,717 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:00,719 - INFO - Step 1 result: {'type': 'Program', 'name': 'anthropic_credentials', 'range': [256, 294], 'children': []}
2025-01-08 10:28:00,720 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:01,124 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [38, 56], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [38, 46], 'children': [{'type': 'ImportSpecifier', 'name': 'thread_cached', 'range': [44, 45], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [47, 55], 'children': [{'type': 'ImportSpecifier', 'name': 'RedisKeyedMutex', 'range': [53, 54], 'children': []}]}]}
2025-01-08 10:28:01,124 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:01,740 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [57, 82], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [57, 82], 'children': [{'type': 'ImportSpecifier', 'name': 'APIKeyCredentials', 'range': [66, 66], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Credentials', 'range': [69, 69], 'children': []}, {'type': 'ImportSpecifier', 'name': 'OAuth2Credentials', 'range': [72, 72], 'children': []}, {'type': 'ImportSpecifier', 'name': 'OAuthState', 'range': [75, 75], 'children': []}, {'type': 'ImportSpecifier', 'name': 'UserIntegrations', 'range': [78, 78], 'children': []}]}]}
2025-01-08 10:28:01,740 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:06,845 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [412, 450], 'children': [{'type': 'VariableDeclaration', 'name': 'unreal_credentials', 'range': [412, 450], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [413, 449], 'children': [{'type': 'CallExpression', 'name': 'APIKeyCredentials', 'range': [414, 449], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [415, 449], 'children': [{'type': 'Property', 'name': 'id', 'range': [417, 419], 'children': []}, {'type': 'Property', 'name': 'provider', 'range': [422, 424], 'children': []}, {'type': 'Property', 'name': 'api_key', 'range': [427, 436], 'children': [{'type': 'CallExpression', 'name': 'SecretStr', 'range': [429, 436], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [431, 435], 'children': []}]}]}, {'type': 'Property', 'name': 'title', 'range': [439, 441], 'children': []}, {'type': 'Property', 'name': 'expires_at', 'range': [444, 446], 'children': []}]}]}]}]}]}
2025-01-08 10:28:06,846 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:07,122 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [373, 411], 'children': [{'type': 'VariableDeclaration', 'name': 'jina_credentials', 'range': [373, 411], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [374, 410], 'children': [{'type': 'CallExpression', 'name': 'APIKeyCredentials', 'range': [375, 410], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [376, 410], 'children': [{'type': 'Property', 'name': 'id', 'range': [378, 380], 'children': []}, {'type': 'Property', 'name': 'provider', 'range': [383, 385], 'children': []}, {'type': 'Property', 'name': 'api_key', 'range': [388, 397], 'children': [{'type': 'CallExpression', 'name': 'SecretStr', 'range': [390, 397], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [392, 396], 'children': []}]}]}, {'type': 'Property', 'name': 'title', 'range': [400, 402], 'children': []}, {'type': 'Property', 'name': 'expires_at', 'range': [405, 407], 'children': []}]}]}]}]}]}
2025-01-08 10:28:07,330 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:07,332 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [217, 255], 'children': [{'type': 'VariableDeclaration', 'name': 'openai_credentials', 'range': [217, 255], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [218, 254], 'children': [{'type': 'CallExpression', 'name': 'APIKeyCredentials', 'range': [219, 254], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [220, 254], 'children': [{'type': 'Property', 'name': 'id', 'range': [222, 224], 'children': []}, {'type': 'Property', 'name': 'provider', 'range': [227, 229], 'children': []}, {'type': 'Property', 'name': 'api_key', 'range': [232, 241], 'children': [{'type': 'CallExpression', 'name': 'SecretStr', 'range': [234, 241], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [236, 240], 'children': []}]}]}, {'type': 'Property', 'name': 'title', 'range': [244, 246], 'children': []}, {'type': 'Property', 'name': 'expires_at', 'range': [249, 251], 'children': []}]}]}]}]}]}
2025-01-08 10:28:07,609 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [334, 372], 'children': [{'type': 'VariableDeclaration', 'name': 'did_credentials', 'range': [334, 372], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [335, 371], 'children': [{'type': 'CallExpression', 'name': 'APIKeyCredentials', 'range': [336, 371], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [337, 371], 'children': [{'type': 'Property', 'name': 'id', 'range': [339, 341], 'children': []}, {'type': 'Property', 'name': 'provider', 'range': [344, 346], 'children': []}, {'type': 'Property', 'name': 'api_key', 'range': [349, 358], 'children': [{'type': 'CallExpression', 'name': 'SecretStr', 'range': [351, 358], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [353, 357], 'children': []}]}]}, {'type': 'Property', 'name': 'title', 'range': [361, 363], 'children': []}, {'type': 'Property', 'name': 'expires_at', 'range': [366, 368], 'children': []}]}]}]}]}]}
2025-01-08 10:28:07,708 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [100, 138], 'children': [{'type': 'VariableDeclaration', 'name': 'revid_credentials', 'range': [100, 138], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [101, 137], 'children': [{'type': 'CallExpression', 'name': 'APIKeyCredentials', 'range': [102, 137], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [103, 137], 'children': [{'type': 'Property', 'name': 'id', 'range': [105, 107], 'children': []}, {'type': 'Property', 'name': 'provider', 'range': [110, 112], 'children': []}, {'type': 'Property', 'name': 'api_key', 'range': [115, 124], 'children': [{'type': 'CallExpression', 'name': 'SecretStr', 'range': [117, 124], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [119, 123], 'children': []}]}]}, {'type': 'Property', 'name': 'title', 'range': [127, 129], 'children': []}, {'type': 'Property', 'name': 'expires_at', 'range': [132, 134], 'children': []}]}]}]}]}]}
2025-01-08 10:28:07,887 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [295, 333], 'children': [{'type': 'VariableDeclaration', 'name': 'groq_credentials', 'range': [295, 333], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [296, 332], 'children': [{'type': 'CallExpression', 'name': 'APIKeyCredentials', 'range': [297, 332], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [298, 332], 'children': [{'type': 'Property', 'name': 'id', 'range': [300, 302], 'children': []}, {'type': 'Property', 'name': 'provider', 'range': [305, 307], 'children': []}, {'type': 'Property', 'name': 'api_key', 'range': [310, 319], 'children': [{'type': 'CallExpression', 'name': 'SecretStr', 'range': [312, 319], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [314, 318], 'children': []}]}]}, {'type': 'Property', 'name': 'title', 'range': [322, 324], 'children': []}, {'type': 'Property', 'name': 'expires_at', 'range': [327, 329], 'children': []}]}]}]}]}]}
2025-01-08 10:28:08,311 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:08,352 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:08,424 - INFO - Step 1 result: {'error': "Insufficient data to identify top-level declarations. The provided token list does not contain any tokens that can be identified as part of a top-level declaration in the 'cangjie' programming language."}
2025-01-08 10:28:08,569 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:08,807 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:08,858 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:10,089 - INFO - Step 2 result: {'type': 'Program', 'name': '', 'range': [24, 37], 'children': [{'type': 'IfStatement', 'name': '', 'range': [24, 27], 'children': [{'type': 'Identifier', 'name': 'TYPE_CHECKING', 'range': [25, 25], 'children': []}]}, {'type': 'ImportStatement', 'name': '', 'range': [28, 36], 'children': [{'type': 'FromImport', 'name': '', 'range': [28, 34], 'children': [{'type': 'ModulePath', 'name': '', 'range': [29, 33], 'children': [{'type': 'Identifier', 'name': 'backend', 'range': [29, 29], 'children': []}, {'type': 'Identifier', 'name': 'executor', 'range': [31, 31], 'children': []}, {'type': 'Identifier', 'name': 'database', 'range': [33, 33], 'children': []}]}]}, {'type': 'ImportedItem', 'name': 'DatabaseManager', 'range': [35, 35], 'children': []}]}]}
2025-01-08 10:28:10,113 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:10,570 - INFO - Step 2 result: {'type': 'Program', 'name': '', 'range': [490, 491], 'children': []}
2025-01-08 10:28:10,570 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:12,075 - INFO - Step 2 result: {'type': 'Program', 'name': 'replicate_credentials', 'range': [178, 216], 'children': [{'type': 'Assignment', 'name': '=', 'range': [178, 216], 'children': [{'type': 'Identifier', 'name': 'replicate_credentials', 'range': [178, 178], 'children': []}, {'type': 'FunctionCall', 'name': 'APIKeyCredentials', 'range': [180, 215], 'children': [{'type': 'Argument', 'name': 'id', 'range': [183, 185], 'children': [{'type': 'StringLiteral', 'name': '"6b9fc200-4726-4973-86c9-cd526f5ce5db"', 'range': [185, 185], 'children': []}]}, {'type': 'Argument', 'name': 'provider', 'range': [188, 190], 'children': [{'type': 'StringLiteral', 'name': '"replicate"', 'range': [190, 190], 'children': []}]}, {'type': 'Argument', 'name': 'api_key', 'range': [193, 202], 'children': [{'type': 'FunctionCall', 'name': 'SecretStr', 'range': [195, 202], 'children': [{'type': 'MemberExpression', 'name': 'settings.secrets.replicate_api_key', 'range': [197, 201], 'children': []}]}]}, {'type': 'Argument', 'name': 'title', 'range': [205, 207], 'children': [{'type': 'StringLiteral', 'name': '"Use Credits for Replicate"', 'range': [207, 207], 'children': []}]}, {'type': 'Argument', 'name': 'expires_at', 'range': [210, 212], 'children': [{'type': 'Identifier', 'name': 'None', 'range': [212, 212], 'children': []}]}]}]}]}
2025-01-08 10:28:12,075 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:12,237 - INFO - Step 2 result: {'type': 'Program', 'name': '', 'range': [93, 99], 'children': [{'type': 'VariableDeclaration', 'name': 'settings', 'range': [93, 97], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [94, 97], 'children': [{'type': 'Identifier', 'name': 'Settings', 'range': [95, 95], 'children': []}, {'type': 'CallExpression', 'name': '(', 'range': [96, 97], 'children': []}]}]}]}
2025-01-08 10:28:12,269 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:14,053 - INFO - Step 2 result: {'type': 'Program', 'name': '', 'range': [83, 92], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [83, 90], 'children': [{'type': 'ImportSpecifier', 'name': 'Settings', 'range': [90, 90], 'children': []}, {'type': 'FromClause', 'name': '', 'range': [83, 88], 'children': [{'type': 'ModuleSpecifier', 'name': 'backend.util.settings', 'range': [83, 88], 'children': []}]}]}]}
2025-01-08 10:28:14,388 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:15,074 - INFO - Step 2 result: {'type': 'Program', 'name': '', 'range': [57, 82], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [57, 82], 'children': [{'type': 'ImportSpecifier', 'name': 'APIKeyCredentials', 'range': [66, 66], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Credentials', 'range': [69, 69], 'children': []}, {'type': 'ImportSpecifier', 'name': 'OAuth2Credentials', 'range': [72, 72], 'children': []}, {'type': 'ImportSpecifier', 'name': 'OAuthState', 'range': [75, 75], 'children': []}, {'type': 'ImportSpecifier', 'name': 'UserIntegrations', 'range': [78, 78], 'children': []}]}]}
2025-01-08 10:28:15,207 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:15,236 - INFO - Step 2 result: {'type': 'Program', 'name': '', 'range': [0, 23], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 11], 'children': [{'type': 'ImportSpecifier', 'name': 'datetime', 'range': [6, 10], 'children': []}, {'type': 'ImportSpecifier', 'name': 'timedelta', 'range': [12, 20], 'children': []}, {'type': 'ImportSpecifier', 'name': 'timezone', 'range': [22, 29], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [12, 16], 'children': [{'type': 'ImportSpecifier', 'name': 'TYPE_CHECKING', 'range': [14, 27], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [18, 22], 'children': [{'type': 'ImportSpecifier', 'name': 'SecretStr', 'range': [20, 29], 'children': []}]}]}
2025-01-08 10:28:15,288 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:15,260 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [492, 527], 'children': [{'type': 'VariableDeclaration', 'name': 'DEFAULT_CREDENTIALS', 'range': [492, 526], 'children': [{'type': 'ArrayExpression', 'name': '', 'range': [494, 526], 'children': [{'type': 'Identifier', 'name': 'revid_credentials', 'range': [496, 496], 'children': []}, {'type': 'Identifier', 'name': 'ideogram_credentials', 'range': [499, 499], 'children': []}, {'type': 'Identifier', 'name': 'replicate_credentials', 'range': [502, 502], 'children': []}, {'type': 'Identifier', 'name': 'openai_credentials', 'range': [505, 505], 'children': []}, {'type': 'Identifier', 'name': 'anthropic_credentials', 'range': [508, 508], 'children': []}, {'type': 'Identifier', 'name': 'groq_credentials', 'range': [511, 511], 'children': []}, {'type': 'Identifier', 'name': 'did_credentials', 'range': [514, 514], 'children': []}, {'type': 'Identifier', 'name': 'jina_credentials', 'range': [517, 517], 'children': []}, {'type': 'Identifier', 'name': 'unreal_credentials', 'range': [520, 520], 'children': []}, {'type': 'Identifier', 'name': 'open_router_credentials', 'range': [523, 523], 'children': []}]}]}]}
2025-01-08 10:28:15,409 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:15,773 - INFO - Step 2 result: {'nodes': [{'type': 'ImportDeclaration', 'name': '', 'range': [38, 46], 'children': [{'type': 'FromClause', 'name': '', 'range': [38, 43], 'children': [{'type': 'ModuleSpecifier', 'name': 'autogpt_libs.utils.cache', 'range': [38, 43], 'children': []}]}, {'type': 'ImportSpecifier', 'name': 'thread_cached', 'range': [44, 45], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [47, 55], 'children': [{'type': 'FromClause', 'name': '', 'range': [47, 52], 'children': [{'type': 'ModuleSpecifier', 'name': 'autogpt_libs.utils.synchronize', 'range': [47, 52], 'children': []}]}, {'type': 'ImportSpecifier', 'name': 'RedisKeyedMutex', 'range': [53, 54], 'children': []}]}]}
2025-01-08 10:28:15,773 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:18,108 - INFO - Step 2 result: {'type': 'Program', 'name': 'ideogram_credentials', 'range': [139, 177], 'children': [{'type': 'Assignment', 'name': '=', 'range': [140, 176], 'children': [{'type': 'Identifier', 'name': 'ideogram_credentials', 'range': [139, 139], 'children': []}, {'type': 'FunctionCall', 'name': 'APIKeyCredentials', 'range': [141, 176], 'children': [{'type': 'Argument', 'name': 'id', 'range': [144, 146], 'children': [{'type': 'StringLiteral', 'name': '"760f84fc-b270-42de-91f6-08efe1b512d0"', 'range': [146, 146], 'children': []}]}, {'type': 'Argument', 'name': 'provider', 'range': [149, 151], 'children': [{'type': 'StringLiteral', 'name': '"ideogram"', 'range': [151, 151], 'children': []}]}, {'type': 'Argument', 'name': 'api_key', 'range': [154, 163], 'children': [{'type': 'FunctionCall', 'name': 'SecretStr', 'range': [156, 163], 'children': [{'type': 'MemberAccess', 'name': 'settings.secrets.ideogram_api_key', 'range': [158, 162], 'children': []}]}]}, {'type': 'Argument', 'name': 'title', 'range': [166, 168], 'children': [{'type': 'StringLiteral', 'name': '"Use Credits for Ideogram"', 'range': [168, 168], 'children': []}]}, {'type': 'Argument', 'name': 'expires_at', 'range': [171, 173], 'children': [{'type': 'Identifier', 'name': 'None', 'range': [173, 173], 'children': []}]}]}]}]}
2025-01-08 10:28:18,111 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:18,382 - INFO - Step 3 result: {'type': 'Program', 'name': '', 'range': [490, 491], 'children': []}
2025-01-08 10:28:18,382 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:18,625 - INFO - Step 2 result: {'error': "Insufficient data to identify top-level declarations. The provided token list does not contain any tokens that can be identified as part of a top-level declaration in the 'cangjie' programming language."}
2025-01-08 10:28:18,625 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:20,091 - INFO - Step 2 result: {'type': 'Program', 'name': 'anthropic_credentials', 'range': [256, 294], 'children': [{'type': 'Assignment', 'name': '=', 'range': [256, 294], 'children': [{'type': 'Identifier', 'name': 'anthropic_credentials', 'range': [256, 256], 'children': []}, {'type': 'FunctionCall', 'name': 'APIKeyCredentials', 'range': [258, 293], 'children': [{'type': 'Argument', 'name': 'id', 'range': [261, 263], 'children': [{'type': 'StringLiteral', 'name': '"24e5d942-d9e3-4798-8151-90143ee55629"', 'range': [263, 263], 'children': []}]}, {'type': 'Argument', 'name': 'provider', 'range': [266, 268], 'children': [{'type': 'StringLiteral', 'name': '"anthropic"', 'range': [268, 268], 'children': []}]}, {'type': 'Argument', 'name': 'api_key', 'range': [271, 280], 'children': [{'type': 'FunctionCall', 'name': 'SecretStr', 'range': [273, 280], 'children': [{'type': 'MemberExpression', 'name': 'settings.secrets.anthropic_api_key', 'range': [275, 279], 'children': []}]}]}, {'type': 'Argument', 'name': 'title', 'range': [283, 285], 'children': [{'type': 'StringLiteral', 'name': '"Use Credits for Anthropic"', 'range': [285, 285], 'children': []}]}, {'type': 'Argument', 'name': 'expires_at', 'range': [288, 290], 'children': [{'type': 'NullLiteral', 'name': 'None', 'range': [290, 290], 'children': []}]}]}]}]}
2025-01-08 10:28:20,096 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:21,129 - INFO - Step 3 result: {'type': 'Program', 'name': '', 'range': [93, 99], 'children': [{'type': 'VariableDeclaration', 'name': 'settings', 'range': [93, 97], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [94, 97], 'children': [{'type': 'Identifier', 'name': 'Settings', 'range': [95, 95], 'children': []}]}]}]}
2025-01-08 10:28:21,129 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:21,948 - INFO - Step 2 result: {'type': 'Program', 'name': 'open_router_credentials', 'range': [451, 489], 'children': [{'type': 'Assignment', 'name': '=', 'range': [451, 489], 'children': [{'type': 'Identifier', 'name': 'open_router_credentials', 'range': [451, 451], 'children': []}, {'type': 'FunctionCall', 'name': 'APIKeyCredentials', 'range': [453, 488], 'children': [{'type': 'Argument', 'name': 'id', 'range': [456, 458], 'children': [{'type': 'StringLiteral', 'name': '"b5a0e27d-0c98-4df3-a4b9-10193e1f3c40"', 'range': [458, 458], 'children': []}]}, {'type': 'Argument', 'name': 'provider', 'range': [461, 463], 'children': [{'type': 'StringLiteral', 'name': '"open_router"', 'range': [463, 463], 'children': []}]}, {'type': 'Argument', 'name': 'api_key', 'range': [466, 475], 'children': [{'type': 'FunctionCall', 'name': 'SecretStr', 'range': [468, 475], 'children': [{'type': 'MemberAccess', 'name': '.', 'range': [470, 474], 'children': [{'type': 'Identifier', 'name': 'settings', 'range': [470, 470], 'children': []}, {'type': 'Identifier', 'name': 'secrets', 'range': [472, 472], 'children': []}, {'type': 'Identifier', 'name': 'open_router_api_key', 'range': [474, 474], 'children': []}]}]}]}, {'type': 'Argument', 'name': 'title', 'range': [478, 480], 'children': [{'type': 'StringLiteral', 'name': '"Use Credits for Open Router"', 'range': [480, 480], 'children': []}]}, {'type': 'Argument', 'name': 'expires_at', 'range': [483, 485], 'children': [{'type': 'Identifier', 'name': 'None', 'range': [485, 485], 'children': []}]}]}]}]}
2025-01-08 10:28:21,955 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:22,282 - INFO - Step 1 result: {'type': 'Program', 'name': 'IntegrationCredentialsStore', 'range': [530, 1818], 'children': [{'type': 'FunctionDeclaration', 'name': '__init__', 'range': [534, 561], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'db_manager', 'range': [569, 603], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'add_creds', 'range': [605, 677], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'get_all_creds', 'range': [679, 863], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'get_creds_by_id', 'range': [865, 914], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'get_creds_by_provider', 'range': [916, 961], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'get_authorized_providers', 'range': [963, 1003], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'update_creds', 'range': [1005, 1196], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'delete_creds_by_id', 'range': [1198, 1257], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'store_state_token', 'range': [1259, 1405], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'get_any_valid_scopes_from_state_token', 'range': [1407, 1528], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'verify_state_token', 'range': [1530, 1678], 'children': []}, {'type': 'FunctionDeclaration', 'name': '_set_user_integration_creds', 'range': [1680, 1751], 'children': []}, {'type': 'FunctionDeclaration', 'name': '_get_user_integrations', 'range': [1753, 1786], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'locked_user_integrations', 'range': [1788, 1817], 'children': []}]}
2025-01-08 10:28:22,328 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:22,691 - INFO - Step 3 result: {'type': 'Program', 'name': '', 'range': [83, 92], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [83, 90], 'children': [{'type': 'ImportSpecifier', 'name': 'Settings', 'range': [90, 90], 'children': []}, {'type': 'FromClause', 'name': '', 'range': [83, 88], 'children': [{'type': 'ModuleSpecifier', 'name': 'backend.util.settings', 'range': [83, 88], 'children': []}]}]}]}
2025-01-08 10:28:22,691 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:22,989 - INFO - Step 3 result: {'error': "Insufficient data to identify top-level declarations. The provided token list does not contain any tokens that can be identified as part of a top-level declaration in the 'cangjie' programming language."}
2025-01-08 10:28:22,989 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:23,244 - INFO - Step 4 result: {'type': 'Program', 'name': '', 'range': [490, 491], 'children': []}
2025-01-08 10:28:23,244 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:28:23,843 - INFO - Step 3 result: {'type': 'Program', 'name': '', 'range': [57, 82], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [57, 82], 'children': [{'type': 'ImportSpecifier', 'name': 'APIKeyCredentials', 'range': [66, 66], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Credentials', 'range': [69, 69], 'children': []}, {'type': 'ImportSpecifier', 'name': 'OAuth2Credentials', 'range': [72, 72], 'children': []}, {'type': 'ImportSpecifier', 'name': 'OAuthState', 'range': [75, 75], 'children': []}, {'type': 'ImportSpecifier', 'name': 'UserIntegrations', 'range': [78, 78], 'children': []}]}]}
2025-01-08 10:28:23,843 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:24,038 - INFO - Step 3 result: {'type': 'Program', 'name': '', 'range': [24, 37], 'children': [{'type': 'IfStatement', 'name': '', 'range': [24, 27], 'children': [{'type': 'Identifier', 'name': 'TYPE_CHECKING', 'range': [25, 25], 'children': []}]}, {'type': 'ImportStatement', 'name': '', 'range': [28, 36], 'children': [{'type': 'FromImport', 'name': '', 'range': [28, 34], 'children': [{'type': 'ModulePath', 'name': '', 'range': [29, 33], 'children': [{'type': 'Identifier', 'name': 'backend', 'range': [29, 29], 'children': []}, {'type': 'Identifier', 'name': 'executor', 'range': [31, 31], 'children': []}, {'type': 'Identifier', 'name': 'database', 'range': [33, 33], 'children': []}]}]}, {'type': 'ImportedItem', 'name': 'DatabaseManager', 'range': [35, 35], 'children': []}]}]}
2025-01-08 10:28:24,039 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:25,241 - INFO - Step 3 result: {'type': 'Program', 'name': '', 'range': [0, 23], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 11], 'children': [{'type': 'ImportSpecifier', 'name': 'datetime', 'range': [6, 10], 'children': []}, {'type': 'ImportSpecifier', 'name': 'timedelta', 'range': [12, 20], 'children': []}, {'type': 'ImportSpecifier', 'name': 'timezone', 'range': [22, 29], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [12, 16], 'children': [{'type': 'ImportSpecifier', 'name': 'TYPE_CHECKING', 'range': [14, 27], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [18, 22], 'children': [{'type': 'ImportSpecifier', 'name': 'SecretStr', 'range': [20, 29], 'children': []}]}]}
2025-01-08 10:28:25,242 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:25,429 - INFO - Step 5 result: {'type': 'Program', 'name': '', 'range': [490, 491], 'children': []}
2025-01-08 10:28:25,429 - INFO - Completed main AST analysis flow
2025-01-08 10:28:25,429 - INFO - Successfully processed chunk
2025-01-08 10:28:25,853 - INFO - Step 4 result: {'type': 'Program', 'name': '', 'range': [93, 99], 'children': [{'type': 'VariableDeclaration', 'name': 'settings', 'range': [93, 97], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [94, 97], 'children': [{'type': 'Identifier', 'name': 'Settings', 'range': [95, 95], 'children': []}]}]}]}
2025-01-08 10:28:25,853 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:28:26,113 - INFO - Step 4 result: {'type': 'Program', 'name': 'Program', 'range': [0, 0], 'children': []}
2025-01-08 10:28:26,113 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:28:26,737 - INFO - Step 3 result: {'nodes': [{'type': 'ImportDeclaration', 'name': '', 'range': [38, 46], 'children': [{'type': 'FromClause', 'name': '', 'range': [38, 43], 'children': [{'type': 'ModuleSpecifier', 'name': 'autogpt_libs.utils.cache', 'range': [38, 43], 'children': []}]}, {'type': 'ImportSpecifier', 'name': 'thread_cached', 'range': [44, 45], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [47, 55], 'children': [{'type': 'FromClause', 'name': '', 'range': [47, 52], 'children': [{'type': 'ModuleSpecifier', 'name': 'autogpt_libs.utils.synchronize', 'range': [47, 52], 'children': []}]}, {'type': 'ImportSpecifier', 'name': 'RedisKeyedMutex', 'range': [53, 54], 'children': []}]}]}
2025-01-08 10:28:26,737 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:27,201 - INFO - Step 4 result: {'type': 'Program', 'name': '', 'range': [83, 92], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [83, 90], 'children': [{'type': 'ImportSpecifier', 'name': 'Settings', 'range': [90, 90], 'children': []}, {'type': 'FromClause', 'name': '', 'range': [83, 88], 'children': [{'type': 'Literal', 'name': 'backend.util.settings', 'range': [83, 88], 'children': []}]}]}]}
2025-01-08 10:28:27,201 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:28:27,567 - INFO - Step 5 result: {'type': 'Program', 'name': 'Program', 'range': [0, 0], 'children': []}
2025-01-08 10:28:27,567 - INFO - Completed main AST analysis flow
2025-01-08 10:28:27,567 - INFO - Successfully processed chunk
2025-01-08 10:28:28,483 - INFO - Step 2 result: {'type': 'Program', 'name': '', 'range': [334, 372], 'children': [{'type': 'VariableDeclaration', 'name': 'did_credentials', 'range': [334, 372], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [335, 371], 'children': [{'type': 'CallExpression', 'name': 'APIKeyCredentials', 'range': [336, 371], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [337, 371], 'children': [{'type': 'Property', 'name': 'id', 'range': [339, 341], 'children': [{'type': 'Literal', 'name': '"7f7b0654-c36b-4565-8fa7-9a52575dfae2"', 'range': [341, 341], 'children': []}]}, {'type': 'Property', 'name': 'provider', 'range': [344, 346], 'children': [{'type': 'Literal', 'name': '"d_id"', 'range': [346, 346], 'children': []}]}, {'type': 'Property', 'name': 'api_key', 'range': [349, 358], 'children': [{'type': 'CallExpression', 'name': 'SecretStr', 'range': [351, 358], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [353, 357], 'children': [{'type': 'Identifier', 'name': 'settings', 'range': [353, 353], 'children': []}, {'type': 'Identifier', 'name': 'secrets', 'range': [355, 355], 'children': []}, {'type': 'Identifier', 'name': 'did_api_key', 'range': [357, 357], 'children': []}]}]}]}, {'type': 'Property', 'name': 'title', 'range': [361, 363], 'children': [{'type': 'Literal', 'name': '"Use Credits for D-ID"', 'range': [363, 363], 'children': []}]}, {'type': 'Property', 'name': 'expires_at', 'range': [366, 368], 'children': [{'type': 'Identifier', 'name': 'None', 'range': [368, 368], 'children': []}]}]}]}]}]}]}
2025-01-08 10:28:28,493 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:28,586 - INFO - Step 3 result: {'type': 'Program', 'name': 'replicate_credentials', 'range': [178, 216], 'children': [{'type': 'Assignment', 'name': '=', 'range': [178, 216], 'children': [{'type': 'Identifier', 'name': 'replicate_credentials', 'range': [178, 178], 'children': []}, {'type': 'FunctionCall', 'name': 'APIKeyCredentials', 'range': [180, 215], 'children': [{'type': 'Argument', 'name': 'id', 'range': [183, 185], 'children': [{'type': 'StringLiteral', 'name': '"6b9fc200-4726-4973-86c9-cd526f5ce5db"', 'range': [185, 185], 'children': []}]}, {'type': 'Argument', 'name': 'provider', 'range': [188, 190], 'children': [{'type': 'StringLiteral', 'name': '"replicate"', 'range': [190, 190], 'children': []}]}, {'type': 'Argument', 'name': 'api_key', 'range': [193, 202], 'children': [{'type': 'FunctionCall', 'name': 'SecretStr', 'range': [195, 202], 'children': [{'type': 'MemberExpression', 'name': 'settings.secrets.replicate_api_key', 'range': [197, 201], 'children': []}]}]}, {'type': 'Argument', 'name': 'title', 'range': [205, 207], 'children': [{'type': 'StringLiteral', 'name': '"Use Credits for Replicate"', 'range': [207, 207], 'children': []}]}, {'type': 'Argument', 'name': 'expires_at', 'range': [210, 212], 'children': [{'type': 'Identifier', 'name': 'None', 'range': [212, 212], 'children': []}]}]}]}]}
2025-01-08 10:28:28,586 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:28,891 - INFO - Step 2 result: {'type': 'Program', 'name': '', 'range': [412, 450], 'children': [{'type': 'VariableDeclaration', 'name': 'unreal_credentials', 'range': [412, 450], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [413, 449], 'children': [{'type': 'CallExpression', 'name': 'APIKeyCredentials', 'range': [414, 449], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [415, 449], 'children': [{'type': 'Property', 'name': 'id', 'range': [417, 419], 'children': [{'type': 'Literal', 'name': '', 'range': [419, 419], 'children': []}]}, {'type': 'Property', 'name': 'provider', 'range': [422, 424], 'children': [{'type': 'Literal', 'name': '', 'range': [424, 424], 'children': []}]}, {'type': 'Property', 'name': 'api_key', 'range': [427, 436], 'children': [{'type': 'CallExpression', 'name': 'SecretStr', 'range': [429, 436], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [431, 435], 'children': [{'type': 'Identifier', 'name': 'settings', 'range': [431, 431], 'children': []}, {'type': 'Identifier', 'name': 'secrets', 'range': [433, 433], 'children': []}, {'type': 'Identifier', 'name': 'unreal_speech_api_key', 'range': [435, 435], 'children': []}]}]}]}, {'type': 'Property', 'name': 'title', 'range': [439, 441], 'children': [{'type': 'Literal', 'name': '', 'range': [441, 441], 'children': []}]}, {'type': 'Property', 'name': 'expires_at', 'range': [444, 446], 'children': [{'type': 'Identifier', 'name': 'None', 'range': [446, 446], 'children': []}]}]}]}]}]}]}
2025-01-08 10:28:28,891 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:28,992 - INFO - Step 2 result: {'type': 'Program', 'name': '', 'range': [217, 255], 'children': [{'type': 'VariableDeclaration', 'name': 'openai_credentials', 'range': [217, 255], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [218, 254], 'children': [{'type': 'CallExpression', 'name': 'APIKeyCredentials', 'range': [219, 254], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [220, 254], 'children': [{'type': 'Property', 'name': 'id', 'range': [222, 224], 'children': [{'type': 'Literal', 'name': '"53c25cb8-e3ee-465c-a4d1-e75a4c899c2a"', 'range': [224, 224], 'children': []}]}, {'type': 'Property', 'name': 'provider', 'range': [227, 229], 'children': [{'type': 'Literal', 'name': '"openai"', 'range': [229, 229], 'children': []}]}, {'type': 'Property', 'name': 'api_key', 'range': [232, 241], 'children': [{'type': 'CallExpression', 'name': 'SecretStr', 'range': [234, 241], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [236, 240], 'children': [{'type': 'Identifier', 'name': 'settings', 'range': [236, 236], 'children': []}, {'type': 'Identifier', 'name': 'secrets', 'range': [238, 238], 'children': []}, {'type': 'Identifier', 'name': 'openai_api_key', 'range': [240, 240], 'children': []}]}]}]}, {'type': 'Property', 'name': 'title', 'range': [244, 246], 'children': [{'type': 'Literal', 'name': '"Use Credits for OpenAI"', 'range': [246, 246], 'children': []}]}, {'type': 'Property', 'name': 'expires_at', 'range': [249, 251], 'children': [{'type': 'Identifier', 'name': 'None', 'range': [251, 251], 'children': []}]}]}]}]}]}]}
2025-01-08 10:28:28,992 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:29,779 - INFO - Step 4 result: {'type': 'Program', 'name': '', 'range': [57, 82], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [57, 82], 'children': [{'type': 'ImportSpecifier', 'name': 'APIKeyCredentials', 'range': [66, 66], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Credentials', 'range': [69, 69], 'children': []}, {'type': 'ImportSpecifier', 'name': 'OAuth2Credentials', 'range': [72, 72], 'children': []}, {'type': 'ImportSpecifier', 'name': 'OAuthState', 'range': [75, 75], 'children': []}, {'type': 'ImportSpecifier', 'name': 'UserIntegrations', 'range': [78, 78], 'children': []}]}]}
2025-01-08 10:28:29,779 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:28:29,834 - INFO - Step 5 result: {'type': 'Program', 'name': '', 'range': [93, 99], 'children': [{'type': 'VariableDeclaration', 'name': 'settings', 'range': [93, 97], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [94, 97], 'children': [{'type': 'Identifier', 'name': 'Settings', 'range': [95, 95], 'children': []}]}]}]}
2025-01-08 10:28:29,835 - INFO - Completed main AST analysis flow
2025-01-08 10:28:29,835 - INFO - Successfully processed chunk
2025-01-08 10:28:30,018 - INFO - Step 2 result: {'type': 'Program', 'name': '', 'range': [295, 333], 'children': [{'type': 'VariableDeclaration', 'name': 'groq_credentials', 'range': [295, 333], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [296, 332], 'children': [{'type': 'CallExpression', 'name': 'APIKeyCredentials', 'range': [297, 332], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [298, 332], 'children': [{'type': 'Property', 'name': 'id', 'range': [300, 302], 'children': [{'type': 'Literal', 'name': '"4ec22295-8f97-4dd1-b42b-2c6957a02545"', 'range': [302, 302], 'children': []}]}, {'type': 'Property', 'name': 'provider', 'range': [305, 307], 'children': [{'type': 'Literal', 'name': '"groq"', 'range': [307, 307], 'children': []}]}, {'type': 'Property', 'name': 'api_key', 'range': [310, 319], 'children': [{'type': 'CallExpression', 'name': 'SecretStr', 'range': [312, 319], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [314, 318], 'children': [{'type': 'Identifier', 'name': 'settings', 'range': [314, 314], 'children': []}, {'type': 'Identifier', 'name': 'secrets', 'range': [316, 316], 'children': []}, {'type': 'Identifier', 'name': 'groq_api_key', 'range': [318, 318], 'children': []}]}]}]}, {'type': 'Property', 'name': 'title', 'range': [322, 324], 'children': [{'type': 'Literal', 'name': '"Use Credits for Groq"', 'range': [324, 324], 'children': []}]}, {'type': 'Property', 'name': 'expires_at', 'range': [327, 329], 'children': [{'type': 'Identifier', 'name': 'None', 'range': [329, 329], 'children': []}]}]}]}]}]}]}
2025-01-08 10:28:30,018 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:30,421 - INFO - Step 2 result: {'type': 'Program', 'name': '', 'range': [100, 138], 'children': [{'type': 'VariableDeclaration', 'name': 'revid_credentials', 'range': [100, 138], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [101, 137], 'children': [{'type': 'CallExpression', 'name': 'APIKeyCredentials', 'range': [102, 137], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [103, 137], 'children': [{'type': 'Property', 'name': 'id', 'range': [105, 107], 'children': [{'type': 'Literal', 'name': '"fdb7f412-f519-48d1-9b5f-d2f73d0e01fe"', 'range': [107, 107], 'children': []}]}, {'type': 'Property', 'name': 'provider', 'range': [110, 112], 'children': [{'type': 'Literal', 'name': '"revid"', 'range': [112, 112], 'children': []}]}, {'type': 'Property', 'name': 'api_key', 'range': [115, 124], 'children': [{'type': 'CallExpression', 'name': 'SecretStr', 'range': [117, 124], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [119, 123], 'children': [{'type': 'Identifier', 'name': 'settings', 'range': [119, 119], 'children': []}, {'type': 'Identifier', 'name': 'secrets', 'range': [121, 121], 'children': []}, {'type': 'Identifier', 'name': 'revid_api_key', 'range': [123, 123], 'children': []}]}]}]}, {'type': 'Property', 'name': 'title', 'range': [127, 129], 'children': [{'type': 'Literal', 'name': '"Use Credits for Revid"', 'range': [129, 129], 'children': []}]}, {'type': 'Property', 'name': 'expires_at', 'range': [132, 134], 'children': [{'type': 'Identifier', 'name': 'None', 'range': [134, 134], 'children': []}]}]}]}]}]}]}
2025-01-08 10:28:30,421 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:30,756 - INFO - Step 2 result: {'type': 'Program', 'name': '', 'range': [373, 411], 'children': [{'type': 'VariableDeclaration', 'name': 'jina_credentials', 'range': [373, 411], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [374, 410], 'children': [{'type': 'CallExpression', 'name': 'APIKeyCredentials', 'range': [375, 410], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [376, 410], 'children': [{'type': 'Property', 'name': 'id', 'range': [378, 380], 'children': [{'type': 'Literal', 'name': '"7f26de70-ba0d-494e-ba76-238e65e7b45f"', 'range': [380, 380], 'children': []}]}, {'type': 'Property', 'name': 'provider', 'range': [383, 385], 'children': [{'type': 'Literal', 'name': '"jina"', 'range': [385, 385], 'children': []}]}, {'type': 'Property', 'name': 'api_key', 'range': [388, 397], 'children': [{'type': 'CallExpression', 'name': 'SecretStr', 'range': [390, 397], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [392, 396], 'children': [{'type': 'Identifier', 'name': 'settings', 'range': [392, 392], 'children': []}, {'type': 'Identifier', 'name': 'secrets', 'range': [394, 394], 'children': []}, {'type': 'Identifier', 'name': 'jina_api_key', 'range': [396, 396], 'children': []}]}]}]}, {'type': 'Property', 'name': 'title', 'range': [400, 402], 'children': [{'type': 'Literal', 'name': '"Use Credits for Jina"', 'range': [402, 402], 'children': []}]}, {'type': 'Property', 'name': 'expires_at', 'range': [405, 407], 'children': [{'type': 'Identifier', 'name': 'None', 'range': [407, 407], 'children': []}]}]}]}]}]}]}
2025-01-08 10:28:30,757 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:31,802 - INFO - Step 5 result: {'type': 'Program', 'name': '', 'range': [83, 92], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [83, 90], 'children': [{'type': 'ImportSpecifier', 'name': 'Settings', 'range': [90, 90], 'children': []}, {'type': 'FromClause', 'name': '', 'range': [83, 88], 'children': [{'type': 'Literal', 'name': 'backend.util.settings', 'range': [83, 88], 'children': []}]}]}]}
2025-01-08 10:28:31,802 - INFO - Completed main AST analysis flow
2025-01-08 10:28:31,802 - INFO - Successfully processed chunk
2025-01-08 10:28:32,066 - INFO - Step 4 result: {'type': 'Program', 'name': '', 'range': [24, 37], 'children': [{'type': 'IfStatement', 'name': '', 'range': [24, 27], 'children': [{'type': 'Identifier', 'name': 'TYPE_CHECKING', 'range': [25, 25], 'children': []}]}, {'type': 'ImportStatement', 'name': '', 'range': [28, 36], 'children': [{'type': 'FromImport', 'name': '', 'range': [28, 34], 'children': [{'type': 'ModulePath', 'name': '', 'range': [29, 33], 'children': [{'type': 'Identifier', 'name': 'backend', 'range': [29, 29], 'children': []}, {'type': 'Identifier', 'name': 'executor', 'range': [31, 31], 'children': []}, {'type': 'Identifier', 'name': 'database', 'range': [33, 33], 'children': []}]}]}, {'type': 'ImportedItem', 'name': 'DatabaseManager', 'range': [35, 35], 'children': []}]}]}
2025-01-08 10:28:32,066 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:28:32,640 - INFO - Step 3 result: {'type': 'Program', 'name': 'ideogram_credentials', 'range': [139, 177], 'children': [{'type': 'Assignment', 'name': '=', 'range': [140, 176], 'children': [{'type': 'Identifier', 'name': 'ideogram_credentials', 'range': [139, 139], 'children': []}, {'type': 'FunctionCall', 'name': 'APIKeyCredentials', 'range': [141, 176], 'children': [{'type': 'Argument', 'name': 'id', 'range': [144, 146], 'children': [{'type': 'StringLiteral', 'name': '"760f84fc-b270-42de-91f6-08efe1b512d0"', 'range': [146, 146], 'children': []}]}, {'type': 'Argument', 'name': 'provider', 'range': [149, 151], 'children': [{'type': 'StringLiteral', 'name': '"ideogram"', 'range': [151, 151], 'children': []}]}, {'type': 'Argument', 'name': 'api_key', 'range': [154, 163], 'children': [{'type': 'FunctionCall', 'name': 'SecretStr', 'range': [156, 163], 'children': [{'type': 'MemberAccess', 'name': 'settings.secrets.ideogram_api_key', 'range': [158, 162], 'children': []}]}]}, {'type': 'Argument', 'name': 'title', 'range': [166, 168], 'children': [{'type': 'StringLiteral', 'name': '"Use Credits for Ideogram"', 'range': [168, 168], 'children': []}]}, {'type': 'Argument', 'name': 'expires_at', 'range': [171, 173], 'children': [{'type': 'Identifier', 'name': 'None', 'range': [173, 173], 'children': []}]}]}]}]}
2025-01-08 10:28:32,640 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:32,692 - INFO - Step 4 result: {'type': 'Program', 'name': '', 'range': [0, 23], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 11], 'children': [{'type': 'ImportSpecifier', 'name': 'datetime', 'range': [6, 10], 'children': []}, {'type': 'ImportSpecifier', 'name': 'timedelta', 'range': [12, 20], 'children': []}, {'type': 'ImportSpecifier', 'name': 'timezone', 'range': [22, 29], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [12, 16], 'children': [{'type': 'ImportSpecifier', 'name': 'TYPE_CHECKING', 'range': [14, 27], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [18, 22], 'children': [{'type': 'ImportSpecifier', 'name': 'SecretStr', 'range': [20, 29], 'children': []}]}]}
2025-01-08 10:28:32,692 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:28:33,591 - INFO - Step 4 result: {'nodes': [{'type': 'ImportDeclaration', 'name': '', 'range': [38, 46], 'children': [{'type': 'FromClause', 'name': '', 'range': [38, 43], 'children': [{'type': 'ModuleSpecifier', 'name': 'autogpt_libs.utils.cache', 'range': [38, 43], 'children': []}]}, {'type': 'ImportSpecifier', 'name': 'thread_cached', 'range': [44, 45], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [47, 55], 'children': [{'type': 'FromClause', 'name': '', 'range': [47, 52], 'children': [{'type': 'ModuleSpecifier', 'name': 'autogpt_libs.utils.synchronize', 'range': [47, 52], 'children': []}]}, {'type': 'ImportSpecifier', 'name': 'RedisKeyedMutex', 'range': [53, 54], 'children': []}]}]}
2025-01-08 10:28:33,591 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:28:34,070 - INFO - Step 3 result: {'type': 'Program', 'name': 'anthropic_credentials', 'range': [256, 294], 'children': [{'type': 'Assignment', 'name': '=', 'range': [256, 294], 'children': [{'type': 'Identifier', 'name': 'anthropic_credentials', 'range': [256, 256], 'children': []}, {'type': 'FunctionCall', 'name': 'APIKeyCredentials', 'range': [258, 293], 'children': [{'type': 'Argument', 'name': 'id', 'range': [261, 263], 'children': [{'type': 'StringLiteral', 'name': '"24e5d942-d9e3-4798-8151-90143ee55629"', 'range': [263, 263], 'children': []}]}, {'type': 'Argument', 'name': 'provider', 'range': [266, 268], 'children': [{'type': 'StringLiteral', 'name': '"anthropic"', 'range': [268, 268], 'children': []}]}, {'type': 'Argument', 'name': 'api_key', 'range': [271, 280], 'children': [{'type': 'FunctionCall', 'name': 'SecretStr', 'range': [273, 280], 'children': [{'type': 'MemberExpression', 'name': 'settings.secrets.anthropic_api_key', 'range': [275, 279], 'children': []}]}]}, {'type': 'Argument', 'name': 'title', 'range': [283, 285], 'children': [{'type': 'StringLiteral', 'name': '"Use Credits for Anthropic"', 'range': [285, 285], 'children': []}]}, {'type': 'Argument', 'name': 'expires_at', 'range': [288, 290], 'children': [{'type': 'NullLiteral', 'name': 'None', 'range': [290, 290], 'children': []}]}]}]}]}
2025-01-08 10:28:34,072 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:36,050 - INFO - Step 2 result: {'type': 'Program', 'name': '', 'range': [492, 527], 'children': [{'type': 'VariableDeclaration', 'name': 'DEFAULT_CREDENTIALS', 'range': [492, 526], 'children': [{'type': 'ArrayExpression', 'name': '', 'range': [494, 526], 'children': [{'type': 'Identifier', 'name': 'revid_credentials', 'range': [496, 496], 'children': []}, {'type': 'Punctuator', 'name': ',', 'range': [497, 497], 'children': []}, {'type': 'Identifier', 'name': 'ideogram_credentials', 'range': [499, 499], 'children': []}, {'type': 'Punctuator', 'name': ',', 'range': [500, 500], 'children': []}, {'type': 'Identifier', 'name': 'replicate_credentials', 'range': [502, 502], 'children': []}, {'type': 'Punctuator', 'name': ',', 'range': [503, 503], 'children': []}, {'type': 'Identifier', 'name': 'openai_credentials', 'range': [505, 505], 'children': []}, {'type': 'Punctuator', 'name': ',', 'range': [506, 506], 'children': []}, {'type': 'Identifier', 'name': 'anthropic_credentials', 'range': [508, 508], 'children': []}, {'type': 'Punctuator', 'name': ',', 'range': [509, 509], 'children': []}, {'type': 'Identifier', 'name': 'groq_credentials', 'range': [511, 511], 'children': []}, {'type': 'Punctuator', 'name': ',', 'range': [512, 512], 'children': []}, {'type': 'Identifier', 'name': 'did_credentials', 'range': [514, 514], 'children': []}, {'type': 'Punctuator', 'name': ',', 'range': [515, 515], 'children': []}, {'type': 'Identifier', 'name': 'jina_credentials', 'range': [517, 517], 'children': []}, {'type': 'Punctuator', 'name': ',', 'range': [518, 518], 'children': []}, {'type': 'Identifier', 'name': 'unreal_credentials', 'range': [520, 520], 'children': []}, {'type': 'Punctuator', 'name': ',', 'range': [521, 521], 'children': []}, {'type': 'Identifier', 'name': 'open_router_credentials', 'range': [523, 523], 'children': []}, {'type': 'Punctuator', 'name': ',', 'range': [524, 524], 'children': []}]}]}]}
2025-01-08 10:28:36,050 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:36,470 - INFO - Step 5 result: {'type': 'Program', 'name': '', 'range': [57, 82], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [57, 82], 'children': [{'type': 'ImportSpecifier', 'name': 'APIKeyCredentials', 'range': [66, 66], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Credentials', 'range': [69, 69], 'children': []}, {'type': 'ImportSpecifier', 'name': 'OAuth2Credentials', 'range': [72, 72], 'children': []}, {'type': 'ImportSpecifier', 'name': 'OAuthState', 'range': [75, 75], 'children': []}, {'type': 'ImportSpecifier', 'name': 'UserIntegrations', 'range': [78, 78], 'children': []}]}]}
2025-01-08 10:28:36,470 - INFO - Completed main AST analysis flow
2025-01-08 10:28:36,470 - INFO - Successfully processed chunk
2025-01-08 10:28:36,472 - INFO - Step 3 result: {'type': 'Program', 'name': 'open_router_credentials', 'range': [451, 489], 'children': [{'type': 'Assignment', 'name': '=', 'range': [451, 489], 'children': [{'type': 'Identifier', 'name': 'open_router_credentials', 'range': [451, 451], 'children': []}, {'type': 'FunctionCall', 'name': 'APIKeyCredentials', 'range': [453, 488], 'children': [{'type': 'Argument', 'name': 'id', 'range': [456, 458], 'children': [{'type': 'StringLiteral', 'name': '"b5a0e27d-0c98-4df3-a4b9-10193e1f3c40"', 'range': [458, 458], 'children': []}]}, {'type': 'Argument', 'name': 'provider', 'range': [461, 463], 'children': [{'type': 'StringLiteral', 'name': '"open_router"', 'range': [463, 463], 'children': []}]}, {'type': 'Argument', 'name': 'api_key', 'range': [466, 475], 'children': [{'type': 'FunctionCall', 'name': 'SecretStr', 'range': [468, 475], 'children': [{'type': 'MemberAccess', 'name': '.', 'range': [470, 474], 'children': [{'type': 'Identifier', 'name': 'settings', 'range': [470, 470], 'children': []}, {'type': 'Identifier', 'name': 'secrets', 'range': [472, 472], 'children': []}, {'type': 'Identifier', 'name': 'open_router_api_key', 'range': [474, 474], 'children': []}]}]}]}, {'type': 'Argument', 'name': 'title', 'range': [478, 480], 'children': [{'type': 'StringLiteral', 'name': '"Use Credits for Open Router"', 'range': [480, 480], 'children': []}]}, {'type': 'Argument', 'name': 'expires_at', 'range': [483, 485], 'children': [{'type': 'Identifier', 'name': 'None', 'range': [485, 485], 'children': []}]}]}]}]}
2025-01-08 10:28:36,474 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:40,513 - INFO - Step 5 result: {'type': 'Program', 'name': '', 'range': [24, 37], 'children': [{'type': 'IfStatement', 'name': '', 'range': [24, 27], 'children': [{'type': 'Identifier', 'name': 'TYPE_CHECKING', 'range': [25, 25], 'children': []}]}, {'type': 'ImportStatement', 'name': '', 'range': [28, 36], 'children': [{'type': 'FromImport', 'name': '', 'range': [28, 34], 'children': [{'type': 'ModulePath', 'name': '', 'range': [29, 33], 'children': [{'type': 'Identifier', 'name': 'backend', 'range': [29, 29], 'children': []}, {'type': 'Identifier', 'name': 'executor', 'range': [31, 31], 'children': []}, {'type': 'Identifier', 'name': 'database', 'range': [33, 33], 'children': []}]}]}, {'type': 'ImportedItem', 'name': 'DatabaseManager', 'range': [35, 35], 'children': []}]}]}
2025-01-08 10:28:40,513 - INFO - Completed main AST analysis flow
2025-01-08 10:28:40,513 - INFO - Successfully processed chunk
2025-01-08 10:28:40,624 - INFO - Step 4 result: {'type': 'Program', 'name': 'replicate_credentials', 'range': [178, 216], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [178, 216], 'children': [{'type': 'Identifier', 'name': 'replicate_credentials', 'range': [178, 178], 'children': []}, {'type': 'CallExpression', 'name': 'APIKeyCredentials', 'range': [180, 215], 'children': [{'type': 'Argument', 'name': 'id', 'range': [183, 185], 'children': [{'type': 'Literal', 'name': '"6b9fc200-4726-4973-86c9-cd526f5ce5db"', 'range': [185, 185], 'children': []}]}, {'type': 'Argument', 'name': 'provider', 'range': [188, 190], 'children': [{'type': 'Literal', 'name': '"replicate"', 'range': [190, 190], 'children': []}]}, {'type': 'Argument', 'name': 'api_key', 'range': [193, 202], 'children': [{'type': 'CallExpression', 'name': 'SecretStr', 'range': [195, 202], 'children': [{'type': 'MemberExpression', 'name': 'settings.secrets.replicate_api_key', 'range': [197, 201], 'children': []}]}]}, {'type': 'Argument', 'name': 'title', 'range': [205, 207], 'children': [{'type': 'Literal', 'name': '"Use Credits for Replicate"', 'range': [207, 207], 'children': []}]}, {'type': 'Argument', 'name': 'expires_at', 'range': [210, 212], 'children': [{'type': 'Identifier', 'name': 'None', 'range': [212, 212], 'children': []}]}]}]}]}
2025-01-08 10:28:40,624 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:28:40,851 - INFO - Step 5 result: {'type': 'Program', 'name': '', 'range': [0, 23], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 11], 'children': [{'type': 'ImportSpecifier', 'name': 'datetime', 'range': [6, 10], 'children': []}, {'type': 'ImportSpecifier', 'name': 'timedelta', 'range': [12, 20], 'children': []}, {'type': 'ImportSpecifier', 'name': 'timezone', 'range': [22, 29], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [12, 16], 'children': [{'type': 'ImportSpecifier', 'name': 'TYPE_CHECKING', 'range': [14, 27], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [18, 22], 'children': [{'type': 'ImportSpecifier', 'name': 'SecretStr', 'range': [20, 29], 'children': []}]}]}
2025-01-08 10:28:40,851 - INFO - Completed main AST analysis flow
2025-01-08 10:28:40,851 - INFO - Successfully processed chunk
2025-01-08 10:28:41,921 - INFO - Step 3 result: {'type': 'Program', 'name': '', 'range': [412, 450], 'children': [{'type': 'VariableDeclaration', 'name': 'unreal_credentials', 'range': [412, 450], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [413, 449], 'children': [{'type': 'CallExpression', 'name': 'APIKeyCredentials', 'range': [414, 449], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [415, 449], 'children': [{'type': 'Property', 'name': 'id', 'range': [417, 419], 'children': [{'type': 'Literal', 'name': '', 'range': [419, 419], 'children': []}]}, {'type': 'Property', 'name': 'provider', 'range': [422, 424], 'children': [{'type': 'Literal', 'name': '', 'range': [424, 424], 'children': []}]}, {'type': 'Property', 'name': 'api_key', 'range': [427, 436], 'children': [{'type': 'CallExpression', 'name': 'SecretStr', 'range': [429, 436], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [431, 435], 'children': [{'type': 'Identifier', 'name': 'settings', 'range': [431, 431], 'children': []}, {'type': 'Identifier', 'name': 'secrets', 'range': [433, 433], 'children': []}, {'type': 'Identifier', 'name': 'unreal_speech_api_key', 'range': [435, 435], 'children': []}]}]}]}, {'type': 'Property', 'name': 'title', 'range': [439, 441], 'children': [{'type': 'Literal', 'name': '', 'range': [441, 441], 'children': []}]}, {'type': 'Property', 'name': 'expires_at', 'range': [444, 446], 'children': [{'type': 'Identifier', 'name': 'None', 'range': [446, 446], 'children': []}]}]}]}]}]}]}
2025-01-08 10:28:41,921 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:42,016 - INFO - Step 5 result: {'nodes': [{'type': 'Program', 'name': 'MainOrSomething', 'range': [38, 55], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [38, 46], 'children': [{'type': 'FromClause', 'name': '', 'range': [38, 43], 'children': [{'type': 'ModuleSpecifier', 'name': 'autogpt_libs.utils.cache', 'range': [38, 43], 'children': []}]}, {'type': 'ImportSpecifier', 'name': 'thread_cached', 'range': [44, 45], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [47, 55], 'children': [{'type': 'FromClause', 'name': '', 'range': [47, 52], 'children': [{'type': 'ModuleSpecifier', 'name': 'autogpt_libs.utils.synchronize', 'range': [47, 52], 'children': []}]}, {'type': 'ImportSpecifier', 'name': 'RedisKeyedMutex', 'range': [53, 54], 'children': []}]}]}]}
2025-01-08 10:28:42,016 - INFO - Completed main AST analysis flow
2025-01-08 10:28:42,016 - INFO - Successfully processed chunk
2025-01-08 10:28:42,179 - INFO - Step 3 result: {'type': 'Program', 'name': '', 'range': [334, 372], 'children': [{'type': 'VariableDeclaration', 'name': 'did_credentials', 'range': [334, 372], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [335, 371], 'children': [{'type': 'CallExpression', 'name': 'APIKeyCredentials', 'range': [336, 371], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [337, 371], 'children': [{'type': 'Property', 'name': 'id', 'range': [339, 341], 'children': [{'type': 'Literal', 'name': '"7f7b0654-c36b-4565-8fa7-9a52575dfae2"', 'range': [341, 341], 'children': []}]}, {'type': 'Property', 'name': 'provider', 'range': [344, 346], 'children': [{'type': 'Literal', 'name': '"d_id"', 'range': [346, 346], 'children': []}]}, {'type': 'Property', 'name': 'api_key', 'range': [349, 358], 'children': [{'type': 'CallExpression', 'name': 'SecretStr', 'range': [351, 358], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [353, 357], 'children': [{'type': 'Identifier', 'name': 'settings', 'range': [353, 353], 'children': []}, {'type': 'Identifier', 'name': 'secrets', 'range': [355, 355], 'children': []}, {'type': 'Identifier', 'name': 'did_api_key', 'range': [357, 357], 'children': []}]}]}]}, {'type': 'Property', 'name': 'title', 'range': [361, 363], 'children': [{'type': 'Literal', 'name': '"Use Credits for D-ID"', 'range': [363, 363], 'children': []}]}, {'type': 'Property', 'name': 'expires_at', 'range': [366, 368], 'children': [{'type': 'Identifier', 'name': 'None', 'range': [368, 368], 'children': []}]}]}]}]}]}]}
2025-01-08 10:28:42,179 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:42,495 - INFO - Step 3 result: {'type': 'Program', 'name': '', 'range': [217, 255], 'children': [{'type': 'VariableDeclaration', 'name': 'openai_credentials', 'range': [217, 255], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [218, 254], 'children': [{'type': 'CallExpression', 'name': 'APIKeyCredentials', 'range': [219, 254], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [220, 254], 'children': [{'type': 'Property', 'name': 'id', 'range': [222, 224], 'children': [{'type': 'Literal', 'name': '"53c25cb8-e3ee-465c-a4d1-e75a4c899c2a"', 'range': [224, 224], 'children': []}]}, {'type': 'Property', 'name': 'provider', 'range': [227, 229], 'children': [{'type': 'Literal', 'name': '"openai"', 'range': [229, 229], 'children': []}]}, {'type': 'Property', 'name': 'api_key', 'range': [232, 241], 'children': [{'type': 'CallExpression', 'name': 'SecretStr', 'range': [234, 241], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [236, 240], 'children': [{'type': 'Identifier', 'name': 'settings', 'range': [236, 236], 'children': []}, {'type': 'Identifier', 'name': 'secrets', 'range': [238, 238], 'children': []}, {'type': 'Identifier', 'name': 'openai_api_key', 'range': [240, 240], 'children': []}]}]}]}, {'type': 'Property', 'name': 'title', 'range': [244, 246], 'children': [{'type': 'Literal', 'name': '"Use Credits for OpenAI"', 'range': [246, 246], 'children': []}]}, {'type': 'Property', 'name': 'expires_at', 'range': [249, 251], 'children': [{'type': 'Identifier', 'name': 'None', 'range': [251, 251], 'children': []}]}]}]}]}]}]}
2025-01-08 10:28:42,496 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:44,276 - INFO - Step 3 result: {'type': 'Program', 'name': '', 'range': [295, 333], 'children': [{'type': 'VariableDeclaration', 'name': 'groq_credentials', 'range': [295, 333], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [296, 332], 'children': [{'type': 'CallExpression', 'name': 'APIKeyCredentials', 'range': [297, 332], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [298, 332], 'children': [{'type': 'Property', 'name': 'id', 'range': [300, 302], 'children': [{'type': 'Literal', 'name': '"4ec22295-8f97-4dd1-b42b-2c6957a02545"', 'range': [302, 302], 'children': []}]}, {'type': 'Property', 'name': 'provider', 'range': [305, 307], 'children': [{'type': 'Literal', 'name': '"groq"', 'range': [307, 307], 'children': []}]}, {'type': 'Property', 'name': 'api_key', 'range': [310, 319], 'children': [{'type': 'CallExpression', 'name': 'SecretStr', 'range': [312, 319], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [314, 318], 'children': [{'type': 'Identifier', 'name': 'settings', 'range': [314, 314], 'children': []}, {'type': 'Identifier', 'name': 'secrets', 'range': [316, 316], 'children': []}, {'type': 'Identifier', 'name': 'groq_api_key', 'range': [318, 318], 'children': []}]}]}]}, {'type': 'Property', 'name': 'title', 'range': [322, 324], 'children': [{'type': 'Literal', 'name': '"Use Credits for Groq"', 'range': [324, 324], 'children': []}]}, {'type': 'Property', 'name': 'expires_at', 'range': [327, 329], 'children': [{'type': 'Identifier', 'name': 'None', 'range': [329, 329], 'children': []}]}]}]}]}]}]}
2025-01-08 10:28:44,276 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:44,711 - INFO - Step 4 result: {'type': 'Program', 'name': 'ideogram_credentials', 'range': [139, 177], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [140, 176], 'children': [{'type': 'Identifier', 'name': 'ideogram_credentials', 'range': [139, 139], 'children': []}, {'type': 'CallExpression', 'name': 'APIKeyCredentials', 'range': [141, 176], 'children': [{'type': 'Argument', 'name': 'id', 'range': [144, 146], 'children': [{'type': 'Literal', 'name': '"760f84fc-b270-42de-91f6-08efe1b512d0"', 'range': [146, 146], 'children': []}]}, {'type': 'Argument', 'name': 'provider', 'range': [149, 151], 'children': [{'type': 'Literal', 'name': '"ideogram"', 'range': [151, 151], 'children': []}]}, {'type': 'Argument', 'name': 'api_key', 'range': [154, 163], 'children': [{'type': 'CallExpression', 'name': 'SecretStr', 'range': [156, 163], 'children': [{'type': 'MemberExpression', 'name': 'settings.secrets.ideogram_api_key', 'range': [158, 162], 'children': []}]}]}, {'type': 'Argument', 'name': 'title', 'range': [166, 168], 'children': [{'type': 'Literal', 'name': '"Use Credits for Ideogram"', 'range': [168, 168], 'children': []}]}, {'type': 'Argument', 'name': 'expires_at', 'range': [171, 173], 'children': [{'type': 'Identifier', 'name': 'None', 'range': [173, 173], 'children': []}]}]}]}]}
2025-01-08 10:28:44,714 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:28:44,850 - INFO - Step 3 result: {'type': 'Program', 'name': '', 'range': [100, 138], 'children': [{'type': 'VariableDeclaration', 'name': 'revid_credentials', 'range': [100, 138], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [101, 137], 'children': [{'type': 'CallExpression', 'name': 'APIKeyCredentials', 'range': [102, 137], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [103, 137], 'children': [{'type': 'Property', 'name': 'id', 'range': [105, 107], 'children': [{'type': 'Literal', 'name': '"fdb7f412-f519-48d1-9b5f-d2f73d0e01fe"', 'range': [107, 107], 'children': []}]}, {'type': 'Property', 'name': 'provider', 'range': [110, 112], 'children': [{'type': 'Literal', 'name': '"revid"', 'range': [112, 112], 'children': []}]}, {'type': 'Property', 'name': 'api_key', 'range': [115, 124], 'children': [{'type': 'CallExpression', 'name': 'SecretStr', 'range': [117, 124], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [119, 123], 'children': [{'type': 'Identifier', 'name': 'settings', 'range': [119, 119], 'children': []}, {'type': 'Identifier', 'name': 'secrets', 'range': [121, 121], 'children': []}, {'type': 'Identifier', 'name': 'revid_api_key', 'range': [123, 123], 'children': []}]}]}]}, {'type': 'Property', 'name': 'title', 'range': [127, 129], 'children': [{'type': 'Literal', 'name': '"Use Credits for Revid"', 'range': [129, 129], 'children': []}]}, {'type': 'Property', 'name': 'expires_at', 'range': [132, 134], 'children': [{'type': 'Identifier', 'name': 'None', 'range': [134, 134], 'children': []}]}]}]}]}]}]}
2025-01-08 10:28:44,851 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:44,993 - INFO - Step 3 result: {'type': 'Program', 'name': '', 'range': [373, 411], 'children': [{'type': 'VariableDeclaration', 'name': 'jina_credentials', 'range': [373, 411], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [374, 410], 'children': [{'type': 'CallExpression', 'name': 'APIKeyCredentials', 'range': [375, 410], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [376, 410], 'children': [{'type': 'Property', 'name': 'id', 'range': [378, 380], 'children': [{'type': 'Literal', 'name': '"7f26de70-ba0d-494e-ba76-238e65e7b45f"', 'range': [380, 380], 'children': []}]}, {'type': 'Property', 'name': 'provider', 'range': [383, 385], 'children': [{'type': 'Literal', 'name': '"jina"', 'range': [385, 385], 'children': []}]}, {'type': 'Property', 'name': 'api_key', 'range': [388, 397], 'children': [{'type': 'CallExpression', 'name': 'SecretStr', 'range': [390, 397], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [392, 396], 'children': [{'type': 'Identifier', 'name': 'settings', 'range': [392, 392], 'children': []}, {'type': 'Identifier', 'name': 'secrets', 'range': [394, 394], 'children': []}, {'type': 'Identifier', 'name': 'jina_api_key', 'range': [396, 396], 'children': []}]}]}]}, {'type': 'Property', 'name': 'title', 'range': [400, 402], 'children': [{'type': 'Literal', 'name': '"Use Credits for Jina"', 'range': [402, 402], 'children': []}]}, {'type': 'Property', 'name': 'expires_at', 'range': [405, 407], 'children': [{'type': 'Identifier', 'name': 'None', 'range': [407, 407], 'children': []}]}]}]}]}]}]}
2025-01-08 10:28:44,993 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:46,036 - INFO - Step 3 result: {'type': 'Program', 'name': '', 'range': [492, 527], 'children': [{'type': 'VariableDeclaration', 'name': 'DEFAULT_CREDENTIALS', 'range': [492, 526], 'children': [{'type': 'ArrayExpression', 'name': '', 'range': [494, 526], 'children': [{'type': 'Identifier', 'name': 'revid_credentials', 'range': [496, 496], 'children': []}, {'type': 'Identifier', 'name': 'ideogram_credentials', 'range': [499, 499], 'children': []}, {'type': 'Identifier', 'name': 'replicate_credentials', 'range': [502, 502], 'children': []}, {'type': 'Identifier', 'name': 'openai_credentials', 'range': [505, 505], 'children': []}, {'type': 'Identifier', 'name': 'anthropic_credentials', 'range': [508, 508], 'children': []}, {'type': 'Identifier', 'name': 'groq_credentials', 'range': [511, 511], 'children': []}, {'type': 'Identifier', 'name': 'did_credentials', 'range': [514, 514], 'children': []}, {'type': 'Identifier', 'name': 'jina_credentials', 'range': [517, 517], 'children': []}, {'type': 'Identifier', 'name': 'unreal_credentials', 'range': [520, 520], 'children': []}, {'type': 'Identifier', 'name': 'open_router_credentials', 'range': [523, 523], 'children': []}]}]}]}
2025-01-08 10:28:46,036 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:47,573 - INFO - Step 4 result: {'type': 'Program', 'name': 'anthropic_credentials', 'range': [256, 294], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [256, 294], 'children': [{'type': 'Identifier', 'name': 'anthropic_credentials', 'range': [256, 256], 'children': []}, {'type': 'CallExpression', 'name': 'APIKeyCredentials', 'range': [258, 293], 'children': [{'type': 'Argument', 'name': 'id', 'range': [261, 263], 'children': [{'type': 'Literal', 'name': '"24e5d942-d9e3-4798-8151-90143ee55629"', 'range': [263, 263], 'children': []}]}, {'type': 'Argument', 'name': 'provider', 'range': [266, 268], 'children': [{'type': 'Literal', 'name': '"anthropic"', 'range': [268, 268], 'children': []}]}, {'type': 'Argument', 'name': 'api_key', 'range': [271, 280], 'children': [{'type': 'CallExpression', 'name': 'SecretStr', 'range': [273, 280], 'children': [{'type': 'MemberExpression', 'name': 'settings.secrets.anthropic_api_key', 'range': [275, 279], 'children': []}]}]}, {'type': 'Argument', 'name': 'title', 'range': [283, 285], 'children': [{'type': 'Literal', 'name': '"Use Credits for Anthropic"', 'range': [285, 285], 'children': []}]}, {'type': 'Argument', 'name': 'expires_at', 'range': [288, 290], 'children': [{'type': 'Literal', 'name': 'None', 'range': [290, 290], 'children': []}]}]}]}]}
2025-01-08 10:28:47,573 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:28:50,878 - INFO - Step 4 result: {'type': 'Program', 'name': 'open_router_credentials', 'range': [451, 489], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [451, 489], 'children': [{'type': 'Identifier', 'name': 'open_router_credentials', 'range': [451, 451], 'children': []}, {'type': 'CallExpression', 'name': 'APIKeyCredentials', 'range': [453, 488], 'children': [{'type': 'Argument', 'name': 'id', 'range': [456, 458], 'children': [{'type': 'Literal', 'name': '"b5a0e27d-0c98-4df3-a4b9-10193e1f3c40"', 'range': [458, 458], 'children': []}]}, {'type': 'Argument', 'name': 'provider', 'range': [461, 463], 'children': [{'type': 'Literal', 'name': '"open_router"', 'range': [463, 463], 'children': []}]}, {'type': 'Argument', 'name': 'api_key', 'range': [466, 475], 'children': [{'type': 'CallExpression', 'name': 'SecretStr', 'range': [468, 475], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [470, 474], 'children': [{'type': 'Identifier', 'name': 'settings', 'range': [470, 470], 'children': []}, {'type': 'Identifier', 'name': 'secrets', 'range': [472, 472], 'children': []}, {'type': 'Identifier', 'name': 'open_router_api_key', 'range': [474, 474], 'children': []}]}]}]}, {'type': 'Argument', 'name': 'title', 'range': [478, 480], 'children': [{'type': 'Literal', 'name': '"Use Credits for Open Router"', 'range': [480, 480], 'children': []}]}, {'type': 'Argument', 'name': 'expires_at', 'range': [483, 485], 'children': [{'type': 'Identifier', 'name': 'None', 'range': [485, 485], 'children': []}]}]}]}]}
2025-01-08 10:28:50,878 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:28:51,588 - INFO - Step 5 result: {'type': 'Program', 'name': 'replicate_credentials', 'range': [178, 216], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [178, 216], 'children': [{'type': 'Identifier', 'name': 'replicate_credentials', 'range': [178, 178], 'children': []}, {'type': 'CallExpression', 'name': 'APIKeyCredentials', 'range': [180, 215], 'children': [{'type': 'Argument', 'name': 'id', 'range': [183, 185], 'children': [{'type': 'Literal', 'name': '"6b9fc200-4726-4973-86c9-cd526f5ce5db"', 'range': [185, 185], 'children': []}]}, {'type': 'Argument', 'name': 'provider', 'range': [188, 190], 'children': [{'type': 'Literal', 'name': '"replicate"', 'range': [190, 190], 'children': []}]}, {'type': 'Argument', 'name': 'api_key', 'range': [193, 202], 'children': [{'type': 'CallExpression', 'name': 'SecretStr', 'range': [195, 202], 'children': [{'type': 'MemberExpression', 'name': 'settings.secrets.replicate_api_key', 'range': [197, 201], 'children': []}]}]}, {'type': 'Argument', 'name': 'title', 'range': [205, 207], 'children': [{'type': 'Literal', 'name': '"Use Credits for Replicate"', 'range': [207, 207], 'children': []}]}, {'type': 'Argument', 'name': 'expires_at', 'range': [210, 212], 'children': [{'type': 'Identifier', 'name': 'None', 'range': [212, 212], 'children': []}]}]}]}]}
2025-01-08 10:28:51,589 - INFO - Completed main AST analysis flow
2025-01-08 10:28:51,589 - INFO - Successfully processed chunk
2025-01-08 10:28:54,888 - INFO - Step 4 result: {'type': 'Program', 'name': '', 'range': [412, 450], 'children': [{'type': 'VariableDeclaration', 'name': 'unreal_credentials', 'range': [412, 450], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [413, 449], 'children': [{'type': 'CallExpression', 'name': 'APIKeyCredentials', 'range': [414, 449], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [415, 449], 'children': [{'type': 'Property', 'name': 'id', 'range': [417, 419], 'children': [{'type': 'Literal', 'name': '', 'range': [419, 419], 'children': []}]}, {'type': 'Property', 'name': 'provider', 'range': [422, 424], 'children': [{'type': 'Literal', 'name': '', 'range': [424, 424], 'children': []}]}, {'type': 'Property', 'name': 'api_key', 'range': [427, 436], 'children': [{'type': 'CallExpression', 'name': 'SecretStr', 'range': [429, 436], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [431, 435], 'children': [{'type': 'Identifier', 'name': 'settings', 'range': [431, 431], 'children': []}, {'type': 'Identifier', 'name': 'secrets', 'range': [433, 433], 'children': []}, {'type': 'Identifier', 'name': 'unreal_speech_api_key', 'range': [435, 435], 'children': []}]}]}]}, {'type': 'Property', 'name': 'title', 'range': [439, 441], 'children': [{'type': 'Literal', 'name': '', 'range': [441, 441], 'children': []}]}, {'type': 'Property', 'name': 'expires_at', 'range': [444, 446], 'children': [{'type': 'Identifier', 'name': 'None', 'range': [446, 446], 'children': []}]}]}]}]}]}]}
2025-01-08 10:28:54,888 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:28:55,821 - INFO - Step 4 result: {'type': 'Program', 'name': '', 'range': [217, 255], 'children': [{'type': 'VariableDeclaration', 'name': 'openai_credentials', 'range': [217, 255], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [218, 254], 'children': [{'type': 'CallExpression', 'name': 'APIKeyCredentials', 'range': [219, 254], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [220, 254], 'children': [{'type': 'Property', 'name': 'id', 'range': [222, 224], 'children': [{'type': 'Literal', 'name': '"53c25cb8-e3ee-465c-a4d1-e75a4c899c2a"', 'range': [224, 224], 'children': []}]}, {'type': 'Property', 'name': 'provider', 'range': [227, 229], 'children': [{'type': 'Literal', 'name': '"openai"', 'range': [229, 229], 'children': []}]}, {'type': 'Property', 'name': 'api_key', 'range': [232, 241], 'children': [{'type': 'CallExpression', 'name': 'SecretStr', 'range': [234, 241], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [236, 240], 'children': [{'type': 'Identifier', 'name': 'settings', 'range': [236, 236], 'children': []}, {'type': 'Identifier', 'name': 'secrets', 'range': [238, 238], 'children': []}, {'type': 'Identifier', 'name': 'openai_api_key', 'range': [240, 240], 'children': []}]}]}]}, {'type': 'Property', 'name': 'title', 'range': [244, 246], 'children': [{'type': 'Literal', 'name': '"Use Credits for OpenAI"', 'range': [246, 246], 'children': []}]}, {'type': 'Property', 'name': 'expires_at', 'range': [249, 251], 'children': [{'type': 'Identifier', 'name': 'None', 'range': [251, 251], 'children': []}]}]}]}]}]}]}
2025-01-08 10:28:55,821 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:28:55,898 - INFO - Step 5 result: {'type': 'Program', 'name': 'ideogram_credentials', 'range': [139, 177], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [140, 176], 'children': [{'type': 'Identifier', 'name': 'ideogram_credentials', 'range': [139, 139], 'children': []}, {'type': 'CallExpression', 'name': 'APIKeyCredentials', 'range': [141, 176], 'children': [{'type': 'Argument', 'name': 'id', 'range': [144, 146], 'children': [{'type': 'Literal', 'name': '"760f84fc-b270-42de-91f6-08efe1b512d0"', 'range': [146, 146], 'children': []}]}, {'type': 'Argument', 'name': 'provider', 'range': [149, 151], 'children': [{'type': 'Literal', 'name': '"ideogram"', 'range': [151, 151], 'children': []}]}, {'type': 'Argument', 'name': 'api_key', 'range': [154, 163], 'children': [{'type': 'CallExpression', 'name': 'SecretStr', 'range': [156, 163], 'children': [{'type': 'MemberExpression', 'name': 'settings.secrets.ideogram_api_key', 'range': [158, 162], 'children': []}]}]}, {'type': 'Argument', 'name': 'title', 'range': [166, 168], 'children': [{'type': 'Literal', 'name': '"Use Credits for Ideogram"', 'range': [168, 168], 'children': []}]}, {'type': 'Argument', 'name': 'expires_at', 'range': [171, 173], 'children': [{'type': 'Identifier', 'name': 'None', 'range': [173, 173], 'children': []}]}]}]}]}
2025-01-08 10:28:55,898 - INFO - Completed main AST analysis flow
2025-01-08 10:28:55,898 - INFO - Successfully processed chunk
2025-01-08 10:28:56,408 - INFO - Step 4 result: {'type': 'Program', 'name': '', 'range': [334, 372], 'children': [{'type': 'VariableDeclaration', 'name': 'did_credentials', 'range': [334, 372], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [335, 371], 'children': [{'type': 'CallExpression', 'name': 'APIKeyCredentials', 'range': [336, 371], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [337, 371], 'children': [{'type': 'Property', 'name': 'id', 'range': [339, 341], 'children': [{'type': 'Literal', 'name': '"7f7b0654-c36b-4565-8fa7-9a52575dfae2"', 'range': [341, 341], 'children': []}]}, {'type': 'Property', 'name': 'provider', 'range': [344, 346], 'children': [{'type': 'Literal', 'name': '"d_id"', 'range': [346, 346], 'children': []}]}, {'type': 'Property', 'name': 'api_key', 'range': [349, 358], 'children': [{'type': 'CallExpression', 'name': 'SecretStr', 'range': [351, 358], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [353, 357], 'children': [{'type': 'Identifier', 'name': 'settings', 'range': [353, 353], 'children': []}, {'type': 'Identifier', 'name': 'secrets', 'range': [355, 355], 'children': []}, {'type': 'Identifier', 'name': 'did_api_key', 'range': [357, 357], 'children': []}]}]}]}, {'type': 'Property', 'name': 'title', 'range': [361, 363], 'children': [{'type': 'Literal', 'name': '"Use Credits for D-ID"', 'range': [363, 363], 'children': []}]}, {'type': 'Property', 'name': 'expires_at', 'range': [366, 368], 'children': [{'type': 'Identifier', 'name': 'None', 'range': [368, 368], 'children': []}]}]}]}]}]}]}
2025-01-08 10:28:56,408 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:28:57,798 - INFO - Step 4 result: {'type': 'Program', 'name': '', 'range': [295, 333], 'children': [{'type': 'VariableDecl', 'name': 'groq_credentials', 'range': [295, 333], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [296, 332], 'children': [{'type': 'CallExpression', 'name': 'APIKeyCredentials', 'range': [297, 332], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [298, 332], 'children': [{'type': 'Property', 'name': 'id', 'range': [300, 302], 'children': [{'type': 'Literal', 'name': '"4ec22295-8f97-4dd1-b42b-2c6957a02545"', 'range': [302, 302], 'children': []}]}, {'type': 'Property', 'name': 'provider', 'range': [305, 307], 'children': [{'type': 'Literal', 'name': '"groq"', 'range': [307, 307], 'children': []}]}, {'type': 'Property', 'name': 'api_key', 'range': [310, 319], 'children': [{'type': 'CallExpression', 'name': 'SecretStr', 'range': [312, 319], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [314, 318], 'children': [{'type': 'Identifier', 'name': 'settings', 'range': [314, 314], 'children': []}, {'type': 'Identifier', 'name': 'secrets', 'range': [316, 316], 'children': []}, {'type': 'Identifier', 'name': 'groq_api_key', 'range': [318, 318], 'children': []}]}]}]}, {'type': 'Property', 'name': 'title', 'range': [322, 324], 'children': [{'type': 'Literal', 'name': '"Use Credits for Groq"', 'range': [324, 324], 'children': []}]}, {'type': 'Property', 'name': 'expires_at', 'range': [327, 329], 'children': [{'type': 'Identifier', 'name': 'None', 'range': [329, 329], 'children': []}]}]}]}]}]}]}
2025-01-08 10:28:57,798 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:28:58,353 - INFO - Step 4 result: {'type': 'Program', 'name': '', 'range': [373, 411], 'children': [{'type': 'VariableDeclaration', 'name': 'jina_credentials', 'range': [373, 411], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [374, 410], 'children': [{'type': 'CallExpression', 'name': 'APIKeyCredentials', 'range': [375, 410], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [376, 410], 'children': [{'type': 'Property', 'name': 'id', 'range': [378, 380], 'children': [{'type': 'Literal', 'name': '"7f26de70-ba0d-494e-ba76-238e65e7b45f"', 'range': [380, 380], 'children': []}]}, {'type': 'Property', 'name': 'provider', 'range': [383, 385], 'children': [{'type': 'Literal', 'name': '"jina"', 'range': [385, 385], 'children': []}]}, {'type': 'Property', 'name': 'api_key', 'range': [388, 397], 'children': [{'type': 'CallExpression', 'name': 'SecretStr', 'range': [390, 397], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [392, 396], 'children': [{'type': 'Identifier', 'name': 'settings', 'range': [392, 392], 'children': []}, {'type': 'Identifier', 'name': 'secrets', 'range': [394, 394], 'children': []}, {'type': 'Identifier', 'name': 'jina_api_key', 'range': [396, 396], 'children': []}]}]}]}, {'type': 'Property', 'name': 'title', 'range': [400, 402], 'children': [{'type': 'Literal', 'name': '"Use Credits for Jina"', 'range': [402, 402], 'children': []}]}, {'type': 'Property', 'name': 'expires_at', 'range': [405, 407], 'children': [{'type': 'Identifier', 'name': 'None', 'range': [407, 407], 'children': []}]}]}]}]}]}]}
2025-01-08 10:28:58,353 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:28:58,365 - INFO - Step 4 result: {'type': 'Program', 'name': '', 'range': [100, 138], 'children': [{'type': 'VariableDeclaration', 'name': 'revid_credentials', 'range': [100, 138], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [101, 137], 'children': [{'type': 'CallExpression', 'name': 'APIKeyCredentials', 'range': [102, 137], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [103, 137], 'children': [{'type': 'Property', 'name': 'id', 'range': [105, 107], 'children': [{'type': 'Literal', 'name': '"fdb7f412-f519-48d1-9b5f-d2f73d0e01fe"', 'range': [107, 107], 'children': []}]}, {'type': 'Property', 'name': 'provider', 'range': [110, 112], 'children': [{'type': 'Literal', 'name': '"revid"', 'range': [112, 112], 'children': []}]}, {'type': 'Property', 'name': 'api_key', 'range': [115, 124], 'children': [{'type': 'CallExpression', 'name': 'SecretStr', 'range': [117, 124], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [119, 123], 'children': [{'type': 'Identifier', 'name': 'settings', 'range': [119, 119], 'children': []}, {'type': 'Identifier', 'name': 'secrets', 'range': [121, 121], 'children': []}, {'type': 'Identifier', 'name': 'revid_api_key', 'range': [123, 123], 'children': []}]}]}]}, {'type': 'Property', 'name': 'title', 'range': [127, 129], 'children': [{'type': 'Literal', 'name': '"Use Credits for Revid"', 'range': [129, 129], 'children': []}]}, {'type': 'Property', 'name': 'expires_at', 'range': [132, 134], 'children': [{'type': 'Identifier', 'name': 'None', 'range': [134, 134], 'children': []}]}]}]}]}]}]}
2025-01-08 10:28:58,365 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:28:58,503 - INFO - Step 5 result: {'type': 'Program', 'name': 'anthropic_credentials', 'range': [256, 294], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [256, 294], 'children': [{'type': 'Identifier', 'name': 'anthropic_credentials', 'range': [256, 256], 'children': []}, {'type': 'CallExpression', 'name': 'APIKeyCredentials', 'range': [258, 293], 'children': [{'type': 'Argument', 'name': 'id', 'range': [261, 263], 'children': [{'type': 'Literal', 'name': '"24e5d942-d9e3-4798-8151-90143ee55629"', 'range': [263, 263], 'children': []}]}, {'type': 'Argument', 'name': 'provider', 'range': [266, 268], 'children': [{'type': 'Literal', 'name': '"anthropic"', 'range': [268, 268], 'children': []}]}, {'type': 'Argument', 'name': 'api_key', 'range': [271, 280], 'children': [{'type': 'CallExpression', 'name': 'SecretStr', 'range': [273, 280], 'children': [{'type': 'MemberExpression', 'name': 'settings.secrets.anthropic_api_key', 'range': [275, 279], 'children': []}]}]}, {'type': 'Argument', 'name': 'title', 'range': [283, 285], 'children': [{'type': 'Literal', 'name': '"Use Credits for Anthropic"', 'range': [285, 285], 'children': []}]}, {'type': 'Argument', 'name': 'expires_at', 'range': [288, 290], 'children': [{'type': 'Literal', 'name': 'None', 'range': [290, 290], 'children': []}]}]}]}]}
2025-01-08 10:28:58,503 - INFO - Completed main AST analysis flow
2025-01-08 10:28:58,503 - INFO - Successfully processed chunk
2025-01-08 10:29:03,886 - INFO - Step 5 result: {'type': 'Program', 'name': 'open_router_credentials', 'range': [451, 489], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [451, 489], 'children': [{'type': 'Identifier', 'name': 'open_router_credentials', 'range': [451, 451], 'children': []}, {'type': 'CallExpression', 'name': 'APIKeyCredentials', 'range': [453, 488], 'children': [{'type': 'Argument', 'name': 'id', 'range': [456, 458], 'children': [{'type': 'Literal', 'name': '"b5a0e27d-0c98-4df3-a4b9-10193e1f3c40"', 'range': [458, 458], 'children': []}]}, {'type': 'Argument', 'name': 'provider', 'range': [461, 463], 'children': [{'type': 'Literal', 'name': '"open_router"', 'range': [463, 463], 'children': []}]}, {'type': 'Argument', 'name': 'api_key', 'range': [466, 475], 'children': [{'type': 'CallExpression', 'name': 'SecretStr', 'range': [468, 475], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [470, 474], 'children': [{'type': 'Identifier', 'name': 'settings', 'range': [470, 470], 'children': []}, {'type': 'Identifier', 'name': 'secrets', 'range': [472, 472], 'children': []}, {'type': 'Identifier', 'name': 'open_router_api_key', 'range': [474, 474], 'children': []}]}]}]}, {'type': 'Argument', 'name': 'title', 'range': [478, 480], 'children': [{'type': 'Literal', 'name': '"Use Credits for Open Router"', 'range': [480, 480], 'children': []}]}, {'type': 'Argument', 'name': 'expires_at', 'range': [483, 485], 'children': [{'type': 'Identifier', 'name': 'None', 'range': [485, 485], 'children': []}]}]}]}]}
2025-01-08 10:29:03,887 - INFO - Completed main AST analysis flow
2025-01-08 10:29:03,887 - INFO - Successfully processed chunk
2025-01-08 10:29:06,049 - INFO - Step 4 result: {'type': 'Program', 'name': '', 'range': [492, 527], 'children': [{'type': 'VariableDeclaration', 'name': 'DEFAULT_CREDENTIALS', 'range': [492, 526], 'children': [{'type': 'ArrayExpression', 'name': '', 'range': [494, 526], 'children': [{'type': 'Identifier', 'name': 'revid_credentials', 'range': [496, 496], 'children': []}, {'type': 'Identifier', 'name': 'ideogram_credentials', 'range': [499, 499], 'children': []}, {'type': 'Identifier', 'name': 'replicate_credentials', 'range': [502, 502], 'children': []}, {'type': 'Identifier', 'name': 'openai_credentials', 'range': [505, 505], 'children': []}, {'type': 'Identifier', 'name': 'anthropic_credentials', 'range': [508, 508], 'children': []}, {'type': 'Identifier', 'name': 'groq_credentials', 'range': [511, 511], 'children': []}, {'type': 'Identifier', 'name': 'did_credentials', 'range': [514, 514], 'children': []}, {'type': 'Identifier', 'name': 'jina_credentials', 'range': [517, 517], 'children': []}, {'type': 'Identifier', 'name': 'unreal_credentials', 'range': [520, 520], 'children': []}, {'type': 'Identifier', 'name': 'open_router_credentials', 'range': [523, 523], 'children': []}]}]}]}
2025-01-08 10:29:06,049 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:29:07,329 - INFO - Step 5 result: {'type': 'Program', 'name': '', 'range': [412, 450], 'children': [{'type': 'VariableDeclaration', 'name': 'unreal_credentials', 'range': [412, 450], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [413, 449], 'children': [{'type': 'CallExpression', 'name': 'APIKeyCredentials', 'range': [414, 449], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [415, 449], 'children': [{'type': 'Property', 'name': 'id', 'range': [417, 419], 'children': [{'type': 'Literal', 'name': '', 'range': [419, 419], 'children': []}]}, {'type': 'Property', 'name': 'provider', 'range': [422, 424], 'children': [{'type': 'Literal', 'name': '', 'range': [424, 424], 'children': []}]}, {'type': 'Property', 'name': 'api_key', 'range': [427, 436], 'children': [{'type': 'CallExpression', 'name': 'SecretStr', 'range': [429, 436], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [431, 435], 'children': [{'type': 'Identifier', 'name': 'settings', 'range': [431, 431], 'children': []}, {'type': 'Identifier', 'name': 'secrets', 'range': [433, 433], 'children': []}, {'type': 'Identifier', 'name': 'unreal_speech_api_key', 'range': [435, 435], 'children': []}]}]}]}, {'type': 'Property', 'name': 'title', 'range': [439, 441], 'children': [{'type': 'Literal', 'name': '', 'range': [441, 441], 'children': []}]}, {'type': 'Property', 'name': 'expires_at', 'range': [444, 446], 'children': [{'type': 'Identifier', 'name': 'None', 'range': [446, 446], 'children': []}]}]}]}]}]}]}
2025-01-08 10:29:07,329 - INFO - Completed main AST analysis flow
2025-01-08 10:29:07,330 - INFO - Successfully processed chunk
2025-01-08 10:29:08,891 - INFO - Step 5 result: {'type': 'Program', 'name': '', 'range': [217, 255], 'children': [{'type': 'VariableDeclaration', 'name': 'openai_credentials', 'range': [217, 255], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [218, 254], 'children': [{'type': 'CallExpression', 'name': 'APIKeyCredentials', 'range': [219, 254], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [220, 254], 'children': [{'type': 'Property', 'name': 'id', 'range': [222, 224], 'children': [{'type': 'Literal', 'name': '"53c25cb8-e3ee-465c-a4d1-e75a4c899c2a"', 'range': [224, 224], 'children': []}]}, {'type': 'Property', 'name': 'provider', 'range': [227, 229], 'children': [{'type': 'Literal', 'name': '"openai"', 'range': [229, 229], 'children': []}]}, {'type': 'Property', 'name': 'api_key', 'range': [232, 241], 'children': [{'type': 'CallExpression', 'name': 'SecretStr', 'range': [234, 241], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [236, 240], 'children': [{'type': 'Identifier', 'name': 'settings', 'range': [236, 236], 'children': []}, {'type': 'Identifier', 'name': 'secrets', 'range': [238, 238], 'children': []}, {'type': 'Identifier', 'name': 'openai_api_key', 'range': [240, 240], 'children': []}]}]}]}, {'type': 'Property', 'name': 'title', 'range': [244, 246], 'children': [{'type': 'Literal', 'name': '"Use Credits for OpenAI"', 'range': [246, 246], 'children': []}]}, {'type': 'Property', 'name': 'expires_at', 'range': [249, 251], 'children': [{'type': 'Identifier', 'name': 'None', 'range': [251, 251], 'children': []}]}]}]}]}]}]}
2025-01-08 10:29:08,892 - INFO - Completed main AST analysis flow
2025-01-08 10:29:08,892 - INFO - Successfully processed chunk
2025-01-08 10:29:09,584 - INFO - Step 5 result: {'type': 'Program', 'name': '', 'range': [334, 372], 'children': [{'type': 'VariableDeclaration', 'name': 'did_credentials', 'range': [334, 372], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [335, 371], 'children': [{'type': 'CallExpression', 'name': 'APIKeyCredentials', 'range': [336, 371], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [337, 371], 'children': [{'type': 'Property', 'name': 'id', 'range': [339, 341], 'children': [{'type': 'Literal', 'name': '"7f7b0654-c36b-4565-8fa7-9a52575dfae2"', 'range': [341, 341], 'children': []}]}, {'type': 'Property', 'name': 'provider', 'range': [344, 346], 'children': [{'type': 'Literal', 'name': '"d_id"', 'range': [346, 346], 'children': []}]}, {'type': 'Property', 'name': 'api_key', 'range': [349, 358], 'children': [{'type': 'CallExpression', 'name': 'SecretStr', 'range': [351, 358], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [353, 357], 'children': [{'type': 'Identifier', 'name': 'settings', 'range': [353, 353], 'children': []}, {'type': 'Identifier', 'name': 'secrets', 'range': [355, 355], 'children': []}, {'type': 'Identifier', 'name': 'did_api_key', 'range': [357, 357], 'children': []}]}]}]}, {'type': 'Property', 'name': 'title', 'range': [361, 363], 'children': [{'type': 'Literal', 'name': '"Use Credits for D-ID"', 'range': [363, 363], 'children': []}]}, {'type': 'Property', 'name': 'expires_at', 'range': [366, 368], 'children': [{'type': 'Identifier', 'name': 'None', 'range': [368, 368], 'children': []}]}]}]}]}]}]}
2025-01-08 10:29:09,585 - INFO - Completed main AST analysis flow
2025-01-08 10:29:09,585 - INFO - Successfully processed chunk
2025-01-08 10:29:10,901 - INFO - Step 5 result: {'type': 'Program', 'name': '', 'range': [295, 333], 'children': [{'type': 'VariableDecl', 'name': 'groq_credentials', 'range': [295, 333], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [296, 332], 'children': [{'type': 'CallExpression', 'name': 'APIKeyCredentials', 'range': [297, 332], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [298, 332], 'children': [{'type': 'Property', 'name': 'id', 'range': [300, 302], 'children': [{'type': 'Literal', 'name': '"4ec22295-8f97-4dd1-b42b-2c6957a02545"', 'range': [302, 302], 'children': []}]}, {'type': 'Property', 'name': 'provider', 'range': [305, 307], 'children': [{'type': 'Literal', 'name': '"groq"', 'range': [307, 307], 'children': []}]}, {'type': 'Property', 'name': 'api_key', 'range': [310, 319], 'children': [{'type': 'CallExpression', 'name': 'SecretStr', 'range': [312, 319], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [314, 318], 'children': [{'type': 'Identifier', 'name': 'settings', 'range': [314, 314], 'children': []}, {'type': 'Identifier', 'name': 'secrets', 'range': [316, 316], 'children': []}, {'type': 'Identifier', 'name': 'groq_api_key', 'range': [318, 318], 'children': []}]}]}]}, {'type': 'Property', 'name': 'title', 'range': [322, 324], 'children': [{'type': 'Literal', 'name': '"Use Credits for Groq"', 'range': [324, 324], 'children': []}]}, {'type': 'Property', 'name': 'expires_at', 'range': [327, 329], 'children': [{'type': 'Identifier', 'name': 'None', 'range': [329, 329], 'children': []}]}]}]}]}]}]}
2025-01-08 10:29:10,901 - INFO - Completed main AST analysis flow
2025-01-08 10:29:10,901 - INFO - Successfully processed chunk
2025-01-08 10:29:12,234 - INFO - Step 5 result: {'type': 'Program', 'name': '', 'range': [373, 411], 'children': [{'type': 'VariableDeclaration', 'name': 'jina_credentials', 'range': [373, 411], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [374, 410], 'children': [{'type': 'CallExpression', 'name': 'APIKeyCredentials', 'range': [375, 410], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [376, 410], 'children': [{'type': 'Property', 'name': 'id', 'range': [378, 380], 'children': [{'type': 'Literal', 'name': '"7f26de70-ba0d-494e-ba76-238e65e7b45f"', 'range': [380, 380], 'children': []}]}, {'type': 'Property', 'name': 'provider', 'range': [383, 385], 'children': [{'type': 'Literal', 'name': '"jina"', 'range': [385, 385], 'children': []}]}, {'type': 'Property', 'name': 'api_key', 'range': [388, 397], 'children': [{'type': 'CallExpression', 'name': 'SecretStr', 'range': [390, 397], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [392, 396], 'children': [{'type': 'Identifier', 'name': 'settings', 'range': [392, 392], 'children': []}, {'type': 'Identifier', 'name': 'secrets', 'range': [394, 394], 'children': []}, {'type': 'Identifier', 'name': 'jina_api_key', 'range': [396, 396], 'children': []}]}]}]}, {'type': 'Property', 'name': 'title', 'range': [400, 402], 'children': [{'type': 'Literal', 'name': '"Use Credits for Jina"', 'range': [402, 402], 'children': []}]}, {'type': 'Property', 'name': 'expires_at', 'range': [405, 407], 'children': [{'type': 'Identifier', 'name': 'None', 'range': [407, 407], 'children': []}]}]}]}]}]}]}
2025-01-08 10:29:12,234 - INFO - Completed main AST analysis flow
2025-01-08 10:29:12,235 - INFO - Successfully processed chunk
2025-01-08 10:29:12,594 - INFO - Step 5 result: {'type': 'Program', 'name': '', 'range': [100, 138], 'children': [{'type': 'VariableDeclaration', 'name': 'revid_credentials', 'range': [100, 138], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [101, 137], 'children': [{'type': 'CallExpression', 'name': 'APIKeyCredentials', 'range': [102, 137], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [103, 137], 'children': [{'type': 'Property', 'name': 'id', 'range': [105, 107], 'children': [{'type': 'Literal', 'name': '"fdb7f412-f519-48d1-9b5f-d2f73d0e01fe"', 'range': [107, 107], 'children': []}]}, {'type': 'Property', 'name': 'provider', 'range': [110, 112], 'children': [{'type': 'Literal', 'name': '"revid"', 'range': [112, 112], 'children': []}]}, {'type': 'Property', 'name': 'api_key', 'range': [115, 124], 'children': [{'type': 'CallExpression', 'name': 'SecretStr', 'range': [117, 124], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [119, 123], 'children': [{'type': 'Identifier', 'name': 'settings', 'range': [119, 119], 'children': []}, {'type': 'Identifier', 'name': 'secrets', 'range': [121, 121], 'children': []}, {'type': 'Identifier', 'name': 'revid_api_key', 'range': [123, 123], 'children': []}]}]}]}, {'type': 'Property', 'name': 'title', 'range': [127, 129], 'children': [{'type': 'Literal', 'name': '"Use Credits for Revid"', 'range': [129, 129], 'children': []}]}, {'type': 'Property', 'name': 'expires_at', 'range': [132, 134], 'children': [{'type': 'Identifier', 'name': 'None', 'range': [134, 134], 'children': []}]}]}]}]}]}]}
2025-01-08 10:29:12,595 - INFO - Completed main AST analysis flow
2025-01-08 10:29:12,595 - INFO - Successfully processed chunk
2025-01-08 10:29:16,312 - INFO - Step 5 result: {'type': 'Program', 'name': '', 'range': [492, 527], 'children': [{'type': 'VariableDeclaration', 'name': 'DEFAULT_CREDENTIALS', 'range': [492, 526], 'children': [{'type': 'ArrayExpression', 'name': '', 'range': [494, 526], 'children': [{'type': 'Identifier', 'name': 'revid_credentials', 'range': [496, 496], 'children': []}, {'type': 'Identifier', 'name': 'ideogram_credentials', 'range': [499, 499], 'children': []}, {'type': 'Identifier', 'name': 'replicate_credentials', 'range': [502, 502], 'children': []}, {'type': 'Identifier', 'name': 'openai_credentials', 'range': [505, 505], 'children': []}, {'type': 'Identifier', 'name': 'anthropic_credentials', 'range': [508, 508], 'children': []}, {'type': 'Identifier', 'name': 'groq_credentials', 'range': [511, 511], 'children': []}, {'type': 'Identifier', 'name': 'did_credentials', 'range': [514, 514], 'children': []}, {'type': 'Identifier', 'name': 'jina_credentials', 'range': [517, 517], 'children': []}, {'type': 'Identifier', 'name': 'unreal_credentials', 'range': [520, 520], 'children': []}, {'type': 'Identifier', 'name': 'open_router_credentials', 'range': [523, 523], 'children': []}]}]}]}
2025-01-08 10:29:16,312 - INFO - Completed main AST analysis flow
2025-01-08 10:29:16,312 - INFO - Successfully processed chunk
2025-01-08 10:29:49,579 - INFO - Step 2 result: {'type': 'Program', 'name': 'IntegrationCredentialsStore', 'range': [530, 1818], 'children': [{'type': 'FunctionDeclaration', 'name': '__init__', 'range': [534, 561], 'children': [{'type': 'ImportStatement', 'name': 'from backend.data.redis import get_redis', 'range': [541, 549], 'children': []}, {'type': 'AssignmentStatement', 'name': 'self.locks = RedisKeyedMutex(get_redis())', 'range': [551, 561], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': 'db_manager', 'range': [569, 603], 'children': [{'type': 'ImportStatement', 'name': 'from backend.executor.database import DatabaseManager', 'range': [579, 587], 'children': []}, {'type': 'ImportStatement', 'name': 'from backend.util.service import get_service_client', 'range': [588, 596], 'children': []}, {'type': 'ReturnStatement', 'name': 'return get_service_client(DatabaseManager)', 'range': [598, 603], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': 'add_creds', 'range': [605, 677], 'children': [{'type': 'WithStatement', 'name': 'with self.locked_user_integrations(user_id):', 'range': [623, 631], 'children': [{'type': 'IfStatement', 'name': 'if self.get_creds_by_id(user_id, credentials.id):', 'range': [632, 644], 'children': [{'type': 'RaiseStatement', 'name': 'raise ValueError(f"Can not re-create existing credentials #{credentials.id} " f"for user #{user_id}")', 'range': [645, 656], 'children': []}]}, {'type': 'AssignmentStatement', 'name': 'self._set_user_integration_creds(user_id, [*self.get_all_creds(user_id), credentials])', 'range': [657, 677], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'get_all_creds', 'range': [679, 863], 'children': [{'type': 'AssignmentStatement', 'name': 'users_credentials = self._get_user_integrations(user_id).credentials', 'range': [696, 706], 'children': []}, {'type': 'AssignmentStatement', 'name': 'all_credentials = users_credentials', 'range': [707, 710], 'children': []}, {'type': 'IfStatement', 'name': 'if settings.secrets.revid_api_key:', 'range': [711, 718], 'children': [{'type': 'ExpressionStatement', 'name': 'all_credentials.append(revid_credentials)', 'range': [719, 725], 'children': []}]}, {'type': 'IfStatement', 'name': 'if settings.secrets.ideogram_api_key:', 'range': [726, 733], 'children': [{'type': 'ExpressionStatement', 'name': 'all_credentials.append(ideogram_credentials)', 'range': [734, 740], 'children': []}]}, {'type': 'IfStatement', 'name': 'if settings.secrets.groq_api_key:', 'range': [741, 748], 'children': [{'type': 'ExpressionStatement', 'name': 'all_credentials.append(groq_credentials)', 'range': [749, 755], 'children': []}]}, {'type': 'IfStatement', 'name': 'if settings.secrets.replicate_api_key:', 'range': [756, 763], 'children': [{'type': 'ExpressionStatement', 'name': 'all_credentials.append(replicate_credentials)', 'range': [764, 770], 'children': []}]}, {'type': 'IfStatement', 'name': 'if settings.secrets.openai_api_key:', 'range': [771, 778], 'children': [{'type': 'ExpressionStatement', 'name': 'all_credentials.append(openai_credentials)', 'range': [779, 785], 'children': []}]}, {'type': 'IfStatement', 'name': 'if settings.secrets.anthropic_api_key:', 'range': [786, 793], 'children': [{'type': 'ExpressionStatement', 'name': 'all_credentials.append(anthropic_credentials)', 'range': [794, 800], 'children': []}]}, {'type': 'IfStatement', 'name': 'if settings.secrets.did_api_key:', 'range': [801, 808], 'children': [{'type': 'ExpressionStatement', 'name': 'all_credentials.append(did_credentials)', 'range': [809, 815], 'children': []}]}, {'type': 'IfStatement', 'name': 'if settings.secrets.jina_api_key:', 'range': [816, 823], 'children': [{'type': 'ExpressionStatement', 'name': 'all_credentials.append(jina_credentials)', 'range': [824, 830], 'children': []}]}, {'type': 'IfStatement', 'name': 'if settings.secrets.unreal_speech_api_key:', 'range': [831, 838], 'children': [{'type': 'ExpressionStatement', 'name': 'all_credentials.append(unreal_credentials)', 'range': [839, 845], 'children': []}]}, {'type': 'IfStatement', 'name': 'if settings.secrets.open_router_api_key:', 'range': [846, 853], 'children': [{'type': 'ExpressionStatement', 'name': 'all_credentials.append(open_router_credentials)', 'range': [854, 860], 'children': []}]}, {'type': 'ReturnStatement', 'name': 'return all_credentials', 'range': [861, 863], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': 'get_creds_by_id', 'range': [865, 914], 'children': [{'type': 'AssignmentStatement', 'name': 'all_credentials = self.get_all_creds(user_id)', 'range': [885, 893], 'children': []}, {'type': 'ReturnStatement', 'name': 'return next((c for c in all_credentials if c.id == credentials_id), None)', 'range': [894, 914], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': 'get_creds_by_provider', 'range': [916, 961], 'children': [{'type': 'AssignmentStatement', 'name': 'credentials = self.get_all_creds(user_id)', 'range': [937, 945], 'children': []}, {'type': 'ReturnStatement', 'name': 'return [c for c in credentials if c.provider == provider]', 'range': [946, 961], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': 'get_authorized_providers', 'range': [963, 1003], 'children': [{'type': 'AssignmentStatement', 'name': 'credentials = self.get_all_creds(user_id)', 'range': [980, 988], 'children': []}, {'type': 'ReturnStatement', 'name': 'return list(set(c.provider for c in credentials))', 'range': [989, 1003], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': 'update_creds', 'range': [1005, 1196], 'children': [{'type': 'WithStatement', 'name': 'with self.locked_user_integrations(user_id):', 'range': [1023, 1031], 'children': [{'type': 'AssignmentStatement', 'name': 'current = self.get_creds_by_id(user_id, updated.id)', 'range': [1032, 1044], 'children': []}, {'type': 'IfStatement', 'name': 'if not current:', 'range': [1045, 1048], 'children': [{'type': 'RaiseStatement', 'name': 'raise ValueError(f"Credentials with ID {updated.id} " f"for user with ID {user_id} not found")', 'range': [1049, 1061], 'children': []}]}, {'type': 'IfStatement', 'name': 'if type(current) is not type(updated):', 'range': [1062, 1074], 'children': [{'type': 'RaiseStatement', 'name': 'raise TypeError(f"Can not update credentials with ID {updated.id} " f"from type {type(current)} " f"to type {type(updated)}")', 'range': [1075, 1089], 'children': []}]}, {'type': 'IfStatement', 'name': 'if (isinstance(updated, OAuth2Credentials) and isinstance(current, OAuth2Credentials) and not set(updated.scopes).issuperset(current.scopes)):', 'range': [1101, 1137], 'children': [{'type': 'RaiseStatement', 'name': 'raise ValueError(f"Can not update credentials with ID {updated.id} " f"and scopes {current.scopes} " f"to more restrictive set of scopes {updated.scopes}")', 'range': [1138, 1152], 'children': []}]}, {'type': 'AssignmentStatement', 'name': 'updated_credentials_list = [updated if c.id == updated.id else c for c in self.get_all_creds(user_id)]', 'range': [1159, 1187], 'children': []}, {'type': 'ExpressionStatement', 'name': 'self._set_user_integration_creds(user_id, updated_credentials_list)', 'range': [1188, 1196], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'delete_creds_by_id', 'range': [1198, 1257], 'children': [{'type': 'WithStatement', 'name': 'with self.locked_user_integrations(user_id):', 'range': [1216, 1224], 'children': [{'type': 'AssignmentStatement', 'name': 'filtered_credentials = [c for c in self.get_all_creds(user_id) if c.id != credentials_id]', 'range': [1225, 1248], 'children': []}, {'type': 'ExpressionStatement', 'name': 'self._set_user_integration_creds(user_id, filtered_credentials)', 'range': [1249, 1257], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'store_state_token', 'range': [1259, 1405], 'children': [{'type': 'AssignmentStatement', 'name': 'token = secrets.token_urlsafe(32)', 'range': [1284, 1292], 'children': []}, {'type': 'AssignmentStatement', 'name': 'expires_at = datetime.now(timezone.utc) + timedelta(minutes=10)', 'range': [1293, 1310], 'children': []}, {'type': 'AssignmentStatement', 'name': 'state = OAuthState(token=token, provider=provider, expires_at=int(expires_at.timestamp()), scopes=scopes)', 'range': [1312, 1345], 'children': []}, {'type': 'WithStatement', 'name': 'with self.locked_user_integrations(user_id):', 'range': [1347, 1355], 'children': [{'type': 'AssignmentStatement', 'name': 'user_integrations = self._get_user_integrations(user_id)', 'range': [1356, 1364], 'children': []}, {'type': 'AssignmentStatement', 'name': 'oauth_states = user_integrations.oauth_states', 'range': [1365, 1370], 'children': []}, {'type': 'ExpressionStatement', 'name': 'oauth_states.append(state)', 'range': [1371, 1377], 'children': []}, {'type': 'AssignmentStatement', 'name': 'user_integrations.oauth_states = oauth_states', 'range': [1378, 1383], 'children': []}, {'type': 'ExpressionStatement', 'name': 'self.db_manager.update_user_integrations(user_id=user_id, data=user_integrations)', 'range': [1385, 1401], 'children': []}]}, {'type': 'ReturnStatement', 'name': 'return token', 'range': [1403, 1405], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': 'get_any_valid_scopes_from_state_token', 'range': [1407, 1528], 'children': [{'type': 'AssignmentStatement', 'name': 'user_integrations = self._get_user_integrations(user_id)', 'range': [1438, 1446], 'children': []}, {'type': 'AssignmentStatement', 'name': 'oauth_states = user_integrations.oauth_states', 'range': [1447, 1452], 'children': []}, {'type': 'AssignmentStatement', 'name': 'now = datetime.now(timezone.utc)', 'range': [1454, 1464], 'children': []}, {'type': 'AssignmentStatement', 'name': 'valid_state = next((state for state in oauth_states if state.token == token and state.provider == provider and state.expires_at > now.timestamp()), None)', 'range': [1465, 1514], 'children': []}, {'type': 'IfStatement', 'name': 'if valid_state:', 'range': [1515, 1517], 'children': [{'type': 'ReturnStatement', 'name': 'return valid_state.scopes', 'range': [1519, 1523], 'children': []}]}, {'type': 'ReturnStatement', 'name': 'return []', 'range': [1525, 1528], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': 'verify_state_token', 'range': [1530, 1678], 'children': [{'type': 'WithStatement', 'name': 'with self.locked_user_integrations(user_id):', 'range': [1552, 1560], 'children': [{'type': 'AssignmentStatement', 'name': 'user_integrations = self._get_user_integrations(user_id)', 'range': [1561, 1569], 'children': []}, {'type': 'AssignmentStatement', 'name': 'oauth_states = user_integrations.oauth_states', 'range': [1570, 1575], 'children': []}, {'type': 'AssignmentStatement', 'name': 'now = datetime.now(timezone.utc)', 'range': [1577, 1587], 'children': []}, {'type': 'AssignmentStatement', 'name': 'valid_state = next((state for state in oauth_states if state.token == token and state.provider == provider and state.expires_at > now.timestamp()), None)', 'range': [1588, 1637], 'children': []}, {'type': 'IfStatement', 'name': 'if valid_state:', 'range': [1638, 1640], 'children': [{'type': 'ExpressionStatement', 'name': 'oauth_states.remove(valid_state)', 'range': [1648, 1654], 'children': []}, {'type': 'AssignmentStatement', 'name': 'user_integrations.oauth_states = oauth_states', 'range': [1655, 1660], 'children': []}, {'type': 'ExpressionStatement', 'name': 'self.db_manager.update_user_integrations(user_id, user_integrations)', 'range': [1661, 1671], 'children': []}, {'type': 'ReturnStatement', 'name': 'return True', 'range': [1672, 1674], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return False', 'range': [1676, 1678], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': '_set_user_integration_creds', 'range': [1680, 1751], 'children': [{'type': 'AssignmentStatement', 'name': 'integrations = self._get_user_integrations(user_id)', 'range': [1703, 1711], 'children': []}, {'type': 'AssignmentStatement', 'name': 'credentials = [c for c in credentials if c not in DEFAULT_CREDENTIALS]', 'range': [1720, 1734], 'children': []}, {'type': 'AssignmentStatement', 'name': 'integrations.credentials = credentials', 'range': [1735, 1740], 'children': []}, {'type': 'ExpressionStatement', 'name': 'self.db_manager.update_user_integrations(user_id, integrations)', 'range': [1741, 1751], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': '_get_user_integrations', 'range': [1753, 1786], 'children': [{'type': 'AssignmentStatement', 'name': 'integrations: UserIntegrations = self.db_manager.get_user_integrations(user_id=user_id)', 'range': [1767, 1782], 'children': []}, {'type': 'ReturnStatement', 'name': 'return integrations', 'range': [1784, 1786], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': 'locked_user_integrations', 'range': [1788, 1817], 'children': [{'type': 'AssignmentStatement', 'name': 'key = (f"user:{user_id}", "integrations")', 'range': [1799, 1807], 'children': []}, {'type': 'ReturnStatement', 'name': 'return self.locks.locked(key)', 'range': [1808, 1817], 'children': []}]}]}
2025-01-08 10:29:49,579 - INFO - Starting Step 3: AST simplification
2025-01-08 10:31:17,867 - INFO - Step 3 result: {'type': 'Program', 'name': 'IntegrationCredentialsStore', 'range': [530, 1818], 'children': [{'type': 'FunctionDeclaration', 'name': '__init__', 'range': [534, 561], 'children': [{'type': 'ImportStatement', 'name': 'from backend.data.redis import get_redis', 'range': [541, 549], 'children': []}, {'type': 'AssignmentStatement', 'name': 'self.locks = RedisKeyedMutex(get_redis())', 'range': [551, 561], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': 'db_manager', 'range': [569, 603], 'children': [{'type': 'ImportStatement', 'name': 'from backend.executor.database import DatabaseManager', 'range': [579, 587], 'children': []}, {'type': 'ImportStatement', 'name': 'from backend.util.service import get_service_client', 'range': [588, 596], 'children': []}, {'type': 'ReturnStatement', 'name': 'return get_service_client(DatabaseManager)', 'range': [598, 603], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': 'add_creds', 'range': [605, 677], 'children': [{'type': 'WithStatement', 'name': 'with self.locked_user_integrations(user_id)', 'range': [623, 631], 'children': [{'type': 'IfStatement', 'name': 'if self.get_creds_by_id(user_id credentials.id)', 'range': [632, 644], 'children': [{'type': 'RaiseStatement', 'name': 'raise ValueError(f"Can not re-create existing credentials #{credentials.id} " f"for user #{user_id}")', 'range': [645, 656], 'children': []}]}, {'type': 'AssignmentStatement', 'name': 'self._set_user_integration_creds(user_id [*self.get_all_creds(user_id) credentials])', 'range': [657, 677], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'get_all_creds', 'range': [679, 863], 'children': [{'type': 'AssignmentStatement', 'name': 'users_credentials = self._get_user_integrations(user_id).credentials', 'range': [696, 706], 'children': []}, {'type': 'AssignmentStatement', 'name': 'all_credentials = users_credentials', 'range': [707, 710], 'children': []}, {'type': 'IfStatement', 'name': 'if settings.secrets.revid_api_key', 'range': [711, 718], 'children': [{'type': 'ExpressionStatement', 'name': 'all_credentials.append(revid_credentials)', 'range': [719, 725], 'children': []}]}, {'type': 'IfStatement', 'name': 'if settings.secrets.ideogram_api_key', 'range': [726, 733], 'children': [{'type': 'ExpressionStatement', 'name': 'all_credentials.append(ideogram_credentials)', 'range': [734, 740], 'children': []}]}, {'type': 'IfStatement', 'name': 'if settings.secrets.groq_api_key', 'range': [741, 748], 'children': [{'type': 'ExpressionStatement', 'name': 'all_credentials.append(groq_credentials)', 'range': [749, 755], 'children': []}]}, {'type': 'IfStatement', 'name': 'if settings.secrets.replicate_api_key', 'range': [756, 763], 'children': [{'type': 'ExpressionStatement', 'name': 'all_credentials.append(replicate_credentials)', 'range': [764, 770], 'children': []}]}, {'type': 'IfStatement', 'name': 'if settings.secrets.openai_api_key', 'range': [771, 778], 'children': [{'type': 'ExpressionStatement', 'name': 'all_credentials.append(openai_credentials)', 'range': [779, 785], 'children': []}]}, {'type': 'IfStatement', 'name': 'if settings.secrets.anthropic_api_key', 'range': [786, 793], 'children': [{'type': 'ExpressionStatement', 'name': 'all_credentials.append(anthropic_credentials)', 'range': [794, 800], 'children': []}]}, {'type': 'IfStatement', 'name': 'if settings.secrets.did_api_key', 'range': [801, 808], 'children': [{'type': 'ExpressionStatement', 'name': 'all_credentials.append(did_credentials)', 'range': [809, 815], 'children': []}]}, {'type': 'IfStatement', 'name': 'if settings.secrets.jina_api_key', 'range': [816, 823], 'children': [{'type': 'ExpressionStatement', 'name': 'all_credentials.append(jina_credentials)', 'range': [824, 830], 'children': []}]}, {'type': 'IfStatement', 'name': 'if settings.secrets.unreal_speech_api_key', 'range': [831, 838], 'children': [{'type': 'ExpressionStatement', 'name': 'all_credentials.append(unreal_credentials)', 'range': [839, 845], 'children': []}]}, {'type': 'IfStatement', 'name': 'if settings.secrets.open_router_api_key', 'range': [846, 853], 'children': [{'type': 'ExpressionStatement', 'name': 'all_credentials.append(open_router_credentials)', 'range': [854, 860], 'children': []}]}, {'type': 'ReturnStatement', 'name': 'return all_credentials', 'range': [861, 863], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': 'get_creds_by_id', 'range': [865, 914], 'children': [{'type': 'AssignmentStatement', 'name': 'all_credentials = self.get_all_creds(user_id)', 'range': [885, 893], 'children': []}, {'type': 'ReturnStatement', 'name': 'return next((c for c in all_credentials if c.id == credentials_id) None)', 'range': [894, 914], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': 'get_creds_by_provider', 'range': [916, 961], 'children': [{'type': 'AssignmentStatement', 'name': 'credentials = self.get_all_creds(user_id)', 'range': [937, 945], 'children': []}, {'type': 'ReturnStatement', 'name': 'return [c for c in credentials if c.provider == provider]', 'range': [946, 961], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': 'get_authorized_providers', 'range': [963, 1003], 'children': [{'type': 'AssignmentStatement', 'name': 'credentials = self.get_all_creds(user_id)', 'range': [980, 988], 'children': []}, {'type': 'ReturnStatement', 'name': 'return list(set(c.provider for c in credentials))', 'range': [989, 1003], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': 'update_creds', 'range': [1005, 1196], 'children': [{'type': 'WithStatement', 'name': 'with self.locked_user_integrations(user_id)', 'range': [1023, 1031], 'children': [{'type': 'AssignmentStatement', 'name': 'current = self.get_creds_by_id(user_id updated.id)', 'range': [1032, 1044], 'children': []}, {'type': 'IfStatement', 'name': 'if not current', 'range': [1045, 1048], 'children': [{'type': 'RaiseStatement', 'name': 'raise ValueError(f"Credentials with ID {updated.id} " f"for user with ID {user_id} not found")', 'range': [1049, 1061], 'children': []}]}, {'type': 'IfStatement', 'name': 'if type(current) is not type(updated)', 'range': [1062, 1074], 'children': [{'type': 'RaiseStatement', 'name': 'raise TypeError(f"Can not update credentials with ID {updated.id} " f"from type {type(current)} " f"to type {type(updated)}")', 'range': [1075, 1089], 'children': []}]}, {'type': 'IfStatement', 'name': 'if (isinstance(updated OAuth2Credentials) and isinstance(current OAuth2Credentials) and not set(updated.scopes).issuperset(current.scopes))', 'range': [1101, 1137], 'children': [{'type': 'RaiseStatement', 'name': 'raise ValueError(f"Can not update credentials with ID {updated.id} " f"and scopes {current.scopes} " f"to more restrictive set of scopes {updated.scopes}")', 'range': [1138, 1152], 'children': []}]}, {'type': 'AssignmentStatement', 'name': 'updated_credentials_list = [updated if c.id == updated.id else c for c in self.get_all_creds(user_id)]', 'range': [1159, 1187], 'children': []}, {'type': 'ExpressionStatement', 'name': 'self._set_user_integration_creds(user_id updated_credentials_list)', 'range': [1188, 1196], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'delete_creds_by_id', 'range': [1198, 1257], 'children': [{'type': 'WithStatement', 'name': 'with self.locked_user_integrations(user_id)', 'range': [1216, 1224], 'children': [{'type': 'AssignmentStatement', 'name': 'filtered_credentials = [c for c in self.get_all_creds(user_id) if c.id != credentials_id]', 'range': [1225, 1248], 'children': []}, {'type': 'ExpressionStatement', 'name': 'self._set_user_integration_creds(user_id filtered_credentials)', 'range': [1249, 1257], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'store_state_token', 'range': [1259, 1405], 'children': [{'type': 'AssignmentStatement', 'name': 'token = secrets.token_urlsafe(32)', 'range': [1284, 1292], 'children': []}, {'type': 'AssignmentStatement', 'name': 'expires_at = datetime.now(timezone.utc) + timedelta(minutes=10)', 'range': [1293, 1310], 'children': []}, {'type': 'AssignmentStatement', 'name': 'state = OAuthState(token=token provider=provider expires_at=int(expires_at.timestamp()) scopes=scopes)', 'range': [1312, 1345], 'children': []}, {'type': 'WithStatement', 'name': 'with self.locked_user_integrations(user_id)', 'range': [1347, 1355], 'children': [{'type': 'AssignmentStatement', 'name': 'user_integrations = self._get_user_integrations(user_id)', 'range': [1356, 1364], 'children': []}, {'type': 'AssignmentStatement', 'name': 'oauth_states = user_integrations.oauth_states', 'range': [1365, 1370], 'children': []}, {'type': 'ExpressionStatement', 'name': 'oauth_states.append(state)', 'range': [1371, 1377], 'children': []}, {'type': 'AssignmentStatement', 'name': 'user_integrations.oauth_states = oauth_states', 'range': [1378, 1383], 'children': []}, {'type': 'ExpressionStatement', 'name': 'self.db_manager.update_user_integrations(user_id=user_id data=user_integrations)', 'range': [1385, 1401], 'children': []}]}, {'type': 'ReturnStatement', 'name': 'return token', 'range': [1403, 1405], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': 'get_any_valid_scopes_from_state_token', 'range': [1407, 1528], 'children': [{'type': 'AssignmentStatement', 'name': 'user_integrations = self._get_user_integrations(user_id)', 'range': [1438, 1446], 'children': []}, {'type': 'AssignmentStatement', 'name': 'oauth_states = user_integrations.oauth_states', 'range': [1447, 1452], 'children': []}, {'type': 'AssignmentStatement', 'name': 'now = datetime.now(timezone.utc)', 'range': [1454, 1464], 'children': []}, {'type': 'AssignmentStatement', 'name': 'valid_state = next((state for state in oauth_states if state.token == token and state.provider == provider and state.expires_at > now.timestamp()) None)', 'range': [1465, 1514], 'children': []}, {'type': 'IfStatement', 'name': 'if valid_state', 'range': [1515, 1517], 'children': [{'type': 'ReturnStatement', 'name': 'return valid_state.scopes', 'range': [1519, 1523], 'children': []}]}, {'type': 'ReturnStatement', 'name': 'return []', 'range': [1525, 1528], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': 'verify_state_token', 'range': [1530, 1678], 'children': [{'type': 'WithStatement', 'name': 'with self.locked_user_integrations(user_id)', 'range': [1552, 1560], 'children': [{'type': 'AssignmentStatement', 'name': 'user_integrations = self._get_user_integrations(user_id)', 'range': [1561, 1569], 'children': []}, {'type': 'AssignmentStatement', 'name': 'oauth_states = user_integrations.oauth_states', 'range': [1570, 1575], 'children': []}, {'type': 'AssignmentStatement', 'name': 'now = datetime.now(timezone.utc)', 'range': [1577, 1587], 'children': []}, {'type': 'AssignmentStatement', 'name': 'valid_state = next((state for state in oauth_states if state.token == token and state.provider == provider and state.expires_at > now.timestamp()) None)', 'range': [1588, 1637], 'children': []}, {'type': 'IfStatement', 'name': 'if valid_state', 'range': [1638, 1640], 'children': [{'type': 'ExpressionStatement', 'name': 'oauth_states.remove(valid_state)', 'range': [1648, 1654], 'children': []}, {'type': 'AssignmentStatement', 'name': 'user_integrations.oauth_states = oauth_states', 'range': [1655, 1660], 'children': []}, {'type': 'ExpressionStatement', 'name': 'self.db_manager.update_user_integrations(user_id user_integrations)', 'range': [1661, 1671], 'children': []}, {'type': 'ReturnStatement', 'name': 'return True', 'range': [1672, 1674], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return False', 'range': [1676, 1678], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': '_set_user_integration_creds', 'range': [1680, 1751], 'children': [{'type': 'AssignmentStatement', 'name': 'integrations = self._get_user_integrations(user_id)', 'range': [1703, 1711], 'children': []}, {'type': 'AssignmentStatement', 'name': 'credentials = [c for c in credentials if c not in DEFAULT_CREDENTIALS]', 'range': [1720, 1734], 'children': []}, {'type': 'AssignmentStatement', 'name': 'integrations.credentials = credentials', 'range': [1735, 1740], 'children': []}, {'type': 'ExpressionStatement', 'name': 'self.db_manager.update_user_integrations(user_id integrations)', 'range': [1741, 1751], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': '_get_user_integrations', 'range': [1753, 1786], 'children': [{'type': 'AssignmentStatement', 'name': 'integrations: UserIntegrations = self.db_manager.get_user_integrations(user_id=user_id)', 'range': [1767, 1782], 'children': []}, {'type': 'ReturnStatement', 'name': 'return integrations', 'range': [1784, 1786], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': 'locked_user_integrations', 'range': [1788, 1817], 'children': [{'type': 'AssignmentStatement', 'name': 'key = (f"user:{user_id}" "integrations")', 'range': [1799, 1807], 'children': []}, {'type': 'ReturnStatement', 'name': 'return self.locks.locked(key)', 'range': [1808, 1817], 'children': []}]}]}
2025-01-08 10:31:17,867 - INFO - Starting Step 4: AST normalization
2025-01-08 10:32:42,220 - INFO - Step 4 result: {'type': 'Program', 'name': 'IntegrationCredentialsStore', 'range': [530, 1818], 'children': [{'type': 'FunctionDecl', 'name': '__init__', 'range': [534, 561], 'children': [{'type': 'ImportStatement', 'name': 'from backend.data.redis import get_redis', 'range': [541, 549], 'children': []}, {'type': 'AssignmentStatement', 'name': 'self.locks = RedisKeyedMutex(get_redis())', 'range': [551, 561], 'children': []}]}, {'type': 'FunctionDecl', 'name': 'db_manager', 'range': [569, 603], 'children': [{'type': 'ImportStatement', 'name': 'from backend.executor.database import DatabaseManager', 'range': [579, 587], 'children': []}, {'type': 'ImportStatement', 'name': 'from backend.util.service import get_service_client', 'range': [588, 596], 'children': []}, {'type': 'ReturnStatement', 'name': 'return get_service_client(DatabaseManager)', 'range': [598, 603], 'children': []}]}, {'type': 'FunctionDecl', 'name': 'add_creds', 'range': [605, 677], 'children': [{'type': 'WithStatement', 'name': 'with self.locked_user_integrations(user_id)', 'range': [623, 631], 'children': [{'type': 'IfStatement', 'name': 'if self.get_creds_by_id(user_id credentials.id)', 'range': [632, 644], 'children': [{'type': 'RaiseStatement', 'name': 'raise ValueError(f"Can not re-create existing credentials #{credentials.id} " f"for user #{user_id}")', 'range': [645, 656], 'children': []}]}, {'type': 'AssignmentStatement', 'name': 'self._set_user_integration_creds(user_id [*self.get_all_creds(user_id) credentials])', 'range': [657, 677], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'get_all_creds', 'range': [679, 863], 'children': [{'type': 'AssignmentStatement', 'name': 'users_credentials = self._get_user_integrations(user_id).credentials', 'range': [696, 706], 'children': []}, {'type': 'AssignmentStatement', 'name': 'all_credentials = users_credentials', 'range': [707, 710], 'children': []}, {'type': 'IfStatement', 'name': 'if settings.secrets.revid_api_key', 'range': [711, 718], 'children': [{'type': 'ExpressionStatement', 'name': 'all_credentials.append(revid_credentials)', 'range': [719, 725], 'children': []}]}, {'type': 'IfStatement', 'name': 'if settings.secrets.ideogram_api_key', 'range': [726, 733], 'children': [{'type': 'ExpressionStatement', 'name': 'all_credentials.append(ideogram_credentials)', 'range': [734, 740], 'children': []}]}, {'type': 'IfStatement', 'name': 'if settings.secrets.groq_api_key', 'range': [741, 748], 'children': [{'type': 'ExpressionStatement', 'name': 'all_credentials.append(groq_credentials)', 'range': [749, 755], 'children': []}]}, {'type': 'IfStatement', 'name': 'if settings.secrets.replicate_api_key', 'range': [756, 763], 'children': [{'type': 'ExpressionStatement', 'name': 'all_credentials.append(replicate_credentials)', 'range': [764, 770], 'children': []}]}, {'type': 'IfStatement', 'name': 'if settings.secrets.openai_api_key', 'range': [771, 778], 'children': [{'type': 'ExpressionStatement', 'name': 'all_credentials.append(openai_credentials)', 'range': [779, 785], 'children': []}]}, {'type': 'IfStatement', 'name': 'if settings.secrets.anthropic_api_key', 'range': [786, 793], 'children': [{'type': 'ExpressionStatement', 'name': 'all_credentials.append(anthropic_credentials)', 'range': [794, 800], 'children': []}]}, {'type': 'IfStatement', 'name': 'if settings.secrets.did_api_key', 'range': [801, 808], 'children': [{'type': 'ExpressionStatement', 'name': 'all_credentials.append(did_credentials)', 'range': [809, 815], 'children': []}]}, {'type': 'IfStatement', 'name': 'if settings.secrets.jina_api_key', 'range': [816, 823], 'children': [{'type': 'ExpressionStatement', 'name': 'all_credentials.append(jina_credentials)', 'range': [824, 830], 'children': []}]}, {'type': 'IfStatement', 'name': 'if settings.secrets.unreal_speech_api_key', 'range': [831, 838], 'children': [{'type': 'ExpressionStatement', 'name': 'all_credentials.append(unreal_credentials)', 'range': [839, 845], 'children': []}]}, {'type': 'IfStatement', 'name': 'if settings.secrets.open_router_api_key', 'range': [846, 853], 'children': [{'type': 'ExpressionStatement', 'name': 'all_credentials.append(open_router_credentials)', 'range': [854, 860], 'children': []}]}, {'type': 'ReturnStatement', 'name': 'return all_credentials', 'range': [861, 863], 'children': []}]}, {'type': 'FunctionDecl', 'name': 'get_creds_by_id', 'range': [865, 914], 'children': [{'type': 'AssignmentStatement', 'name': 'all_credentials = self.get_all_creds(user_id)', 'range': [885, 893], 'children': []}, {'type': 'ReturnStatement', 'name': 'return next((c for c in all_credentials if c.id == credentials_id) None)', 'range': [894, 914], 'children': []}]}, {'type': 'FunctionDecl', 'name': 'get_creds_by_provider', 'range': [916, 961], 'children': [{'type': 'AssignmentStatement', 'name': 'credentials = self.get_all_creds(user_id)', 'range': [937, 945], 'children': []}, {'type': 'ReturnStatement', 'name': 'return [c for c in credentials if c.provider == provider]', 'range': [946, 961], 'children': []}]}, {'type': 'FunctionDecl', 'name': 'get_authorized_providers', 'range': [963, 1003], 'children': [{'type': 'AssignmentStatement', 'name': 'credentials = self.get_all_creds(user_id)', 'range': [980, 988], 'children': []}, {'type': 'ReturnStatement', 'name': 'return list(set(c.provider for c in credentials))', 'range': [989, 1003], 'children': []}]}, {'type': 'FunctionDecl', 'name': 'update_creds', 'range': [1005, 1196], 'children': [{'type': 'WithStatement', 'name': 'with self.locked_user_integrations(user_id)', 'range': [1023, 1031], 'children': [{'type': 'AssignmentStatement', 'name': 'current = self.get_creds_by_id(user_id updated.id)', 'range': [1032, 1044], 'children': []}, {'type': 'IfStatement', 'name': 'if not current', 'range': [1045, 1048], 'children': [{'type': 'RaiseStatement', 'name': 'raise ValueError(f"Credentials with ID {updated.id} " f"for user with ID {user_id} not found")', 'range': [1049, 1061], 'children': []}]}, {'type': 'IfStatement', 'name': 'if type(current) is not type(updated)', 'range': [1062, 1074], 'children': [{'type': 'RaiseStatement', 'name': 'raise TypeError(f"Can not update credentials with ID {updated.id} " f"from type {type(current)} " f"to type {type(updated)}")', 'range': [1075, 1089], 'children': []}]}, {'type': 'IfStatement', 'name': 'if (isinstance(updated OAuth2Credentials) and isinstance(current OAuth2Credentials) and not set(updated.scopes).issuperset(current.scopes))', 'range': [1101, 1137], 'children': [{'type': 'RaiseStatement', 'name': 'raise ValueError(f"Can not update credentials with ID {updated.id} " f"and scopes {current.scopes} " f"to more restrictive set of scopes {updated.scopes}")', 'range': [1138, 1152], 'children': []}]}, {'type': 'AssignmentStatement', 'name': 'updated_credentials_list = [updated if c.id == updated.id else c for c in self.get_all_creds(user_id)]', 'range': [1159, 1187], 'children': []}, {'type': 'ExpressionStatement', 'name': 'self._set_user_integration_creds(user_id updated_credentials_list)', 'range': [1188, 1196], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'delete_creds_by_id', 'range': [1198, 1257], 'children': [{'type': 'WithStatement', 'name': 'with self.locked_user_integrations(user_id)', 'range': [1216, 1224], 'children': [{'type': 'AssignmentStatement', 'name': 'filtered_credentials = [c for c in self.get_all_creds(user_id) if c.id != credentials_id]', 'range': [1225, 1248], 'children': []}, {'type': 'ExpressionStatement', 'name': 'self._set_user_integration_creds(user_id filtered_credentials)', 'range': [1249, 1257], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'store_state_token', 'range': [1259, 1405], 'children': [{'type': 'AssignmentStatement', 'name': 'token = secrets.token_urlsafe(32)', 'range': [1284, 1292], 'children': []}, {'type': 'AssignmentStatement', 'name': 'expires_at = datetime.now(timezone.utc) + timedelta(minutes=10)', 'range': [1293, 1310], 'children': []}, {'type': 'AssignmentStatement', 'name': 'state = OAuthState(token=token provider=provider expires_at=int(expires_at.timestamp()) scopes=scopes)', 'range': [1312, 1345], 'children': []}, {'type': 'WithStatement', 'name': 'with self.locked_user_integrations(user_id)', 'range': [1347, 1355], 'children': [{'type': 'AssignmentStatement', 'name': 'user_integrations = self._get_user_integrations(user_id)', 'range': [1356, 1364], 'children': []}, {'type': 'AssignmentStatement', 'name': 'oauth_states = user_integrations.oauth_states', 'range': [1365, 1370], 'children': []}, {'type': 'ExpressionStatement', 'name': 'oauth_states.append(state)', 'range': [1371, 1377], 'children': []}, {'type': 'AssignmentStatement', 'name': 'user_integrations.oauth_states = oauth_states', 'range': [1378, 1383], 'children': []}, {'type': 'ExpressionStatement', 'name': 'self.db_manager.update_user_integrations(user_id=user_id data=user_integrations)', 'range': [1385, 1401], 'children': []}]}, {'type': 'ReturnStatement', 'name': 'return token', 'range': [1403, 1405], 'children': []}]}, {'type': 'FunctionDecl', 'name': 'get_any_valid_scopes_from_state_token', 'range': [1407, 1528], 'children': [{'type': 'AssignmentStatement', 'name': 'user_integrations = self._get_user_integrations(user_id)', 'range': [1438, 1446], 'children': []}, {'type': 'AssignmentStatement', 'name': 'oauth_states = user_integrations.oauth_states', 'range': [1447, 1452], 'children': []}, {'type': 'AssignmentStatement', 'name': 'now = datetime.now(timezone.utc)', 'range': [1454, 1464], 'children': []}, {'type': 'AssignmentStatement', 'name': 'valid_state = next((state for state in oauth_states if state.token == token and state.provider == provider and state.expires_at > now.timestamp()) None)', 'range': [1465, 1514], 'children': []}, {'type': 'IfStatement', 'name': 'if valid_state', 'range': [1515, 1517], 'children': [{'type': 'ReturnStatement', 'name': 'return valid_state.scopes', 'range': [1519, 1523], 'children': []}]}, {'type': 'ReturnStatement', 'name': 'return []', 'range': [1525, 1528], 'children': []}]}, {'type': 'FunctionDecl', 'name': 'verify_state_token', 'range': [1530, 1678], 'children': [{'type': 'WithStatement', 'name': 'with self.locked_user_integrations(user_id)', 'range': [1552, 1560], 'children': [{'type': 'AssignmentStatement', 'name': 'user_integrations = self._get_user_integrations(user_id)', 'range': [1561, 1569], 'children': []}, {'type': 'AssignmentStatement', 'name': 'oauth_states = user_integrations.oauth_states', 'range': [1570, 1575], 'children': []}, {'type': 'AssignmentStatement', 'name': 'now = datetime.now(timezone.utc)', 'range': [1577, 1587], 'children': []}, {'type': 'AssignmentStatement', 'name': 'valid_state = next((state for state in oauth_states if state.token == token and state.provider == provider and state.expires_at > now.timestamp()) None)', 'range': [1588, 1637], 'children': []}, {'type': 'IfStatement', 'name': 'if valid_state', 'range': [1638, 1640], 'children': [{'type': 'ExpressionStatement', 'name': 'oauth_states.remove(valid_state)', 'range': [1648, 1654], 'children': []}, {'type': 'AssignmentStatement', 'name': 'user_integrations.oauth_states = oauth_states', 'range': [1655, 1660], 'children': []}, {'type': 'ExpressionStatement', 'name': 'self.db_manager.update_user_integrations(user_id user_integrations)', 'range': [1661, 1671], 'children': []}, {'type': 'ReturnStatement', 'name': 'return True', 'range': [1672, 1674], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return False', 'range': [1676, 1678], 'children': []}]}, {'type': 'FunctionDecl', 'name': '_set_user_integration_creds', 'range': [1680, 1751], 'children': [{'type': 'AssignmentStatement', 'name': 'integrations = self._get_user_integrations(user_id)', 'range': [1703, 1711], 'children': []}, {'type': 'AssignmentStatement', 'name': 'credentials = [c for c in credentials if c not in DEFAULT_CREDENTIALS]', 'range': [1720, 1734], 'children': []}, {'type': 'AssignmentStatement', 'name': 'integrations.credentials = credentials', 'range': [1735, 1740], 'children': []}, {'type': 'ExpressionStatement', 'name': 'self.db_manager.update_user_integrations(user_id integrations)', 'range': [1741, 1751], 'children': []}]}, {'type': 'FunctionDecl', 'name': '_get_user_integrations', 'range': [1753, 1786], 'children': [{'type': 'AssignmentStatement', 'name': 'integrations: UserIntegrations = self.db_manager.get_user_integrations(user_id=user_id)', 'range': [1767, 1782], 'children': []}, {'type': 'ReturnStatement', 'name': 'return integrations', 'range': [1784, 1786], 'children': []}]}, {'type': 'FunctionDecl', 'name': 'locked_user_integrations', 'range': [1788, 1817], 'children': [{'type': 'AssignmentStatement', 'name': 'key = (f"user:{user_id}" "integrations")', 'range': [1799, 1807], 'children': []}, {'type': 'ReturnStatement', 'name': 'return self.locks.locked(key)', 'range': [1808, 1817], 'children': []}]}]}
2025-01-08 10:32:42,221 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:34:05,862 - INFO - Step 5 result: {'type': 'Program', 'name': 'IntegrationCredentialsStore', 'range': [530, 1818], 'children': [{'type': 'FunctionDecl', 'name': '__init__', 'range': [534, 561], 'children': [{'type': 'ImportStatement', 'name': 'from backend.data.redis import get_redis', 'range': [541, 549], 'children': []}, {'type': 'AssignmentStatement', 'name': 'self.locks = RedisKeyedMutex(get_redis())', 'range': [551, 561], 'children': []}]}, {'type': 'FunctionDecl', 'name': 'db_manager', 'range': [569, 603], 'children': [{'type': 'ImportStatement', 'name': 'from backend.executor.database import DatabaseManager', 'range': [579, 587], 'children': []}, {'type': 'ImportStatement', 'name': 'from backend.util.service import get_service_client', 'range': [588, 596], 'children': []}, {'type': 'ReturnStatement', 'name': 'return get_service_client(DatabaseManager)', 'range': [598, 603], 'children': []}]}, {'type': 'FunctionDecl', 'name': 'add_creds', 'range': [605, 677], 'children': [{'type': 'WithStatement', 'name': 'with self.locked_user_integrations(user_id)', 'range': [623, 631], 'children': [{'type': 'IfStatement', 'name': 'if self.get_creds_by_id(user_id credentials.id)', 'range': [632, 644], 'children': [{'type': 'RaiseStatement', 'name': 'raise ValueError(f"Can not re-create existing credentials #{credentials.id} " f"for user #{user_id}")', 'range': [645, 656], 'children': []}]}, {'type': 'AssignmentStatement', 'name': 'self._set_user_integration_creds(user_id [*self.get_all_creds(user_id) credentials])', 'range': [657, 677], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'get_all_creds', 'range': [679, 863], 'children': [{'type': 'AssignmentStatement', 'name': 'users_credentials = self._get_user_integrations(user_id).credentials', 'range': [696, 706], 'children': []}, {'type': 'AssignmentStatement', 'name': 'all_credentials = users_credentials', 'range': [707, 710], 'children': []}, {'type': 'IfStatement', 'name': 'if settings.secrets.revid_api_key', 'range': [711, 718], 'children': [{'type': 'ExpressionStatement', 'name': 'all_credentials.append(revid_credentials)', 'range': [719, 725], 'children': []}]}, {'type': 'IfStatement', 'name': 'if settings.secrets.ideogram_api_key', 'range': [726, 733], 'children': [{'type': 'ExpressionStatement', 'name': 'all_credentials.append(ideogram_credentials)', 'range': [734, 740], 'children': []}]}, {'type': 'IfStatement', 'name': 'if settings.secrets.groq_api_key', 'range': [741, 748], 'children': [{'type': 'ExpressionStatement', 'name': 'all_credentials.append(groq_credentials)', 'range': [749, 755], 'children': []}]}, {'type': 'IfStatement', 'name': 'if settings.secrets.replicate_api_key', 'range': [756, 763], 'children': [{'type': 'ExpressionStatement', 'name': 'all_credentials.append(replicate_credentials)', 'range': [764, 770], 'children': []}]}, {'type': 'IfStatement', 'name': 'if settings.secrets.openai_api_key', 'range': [771, 778], 'children': [{'type': 'ExpressionStatement', 'name': 'all_credentials.append(openai_credentials)', 'range': [779, 785], 'children': []}]}, {'type': 'IfStatement', 'name': 'if settings.secrets.anthropic_api_key', 'range': [786, 793], 'children': [{'type': 'ExpressionStatement', 'name': 'all_credentials.append(anthropic_credentials)', 'range': [794, 800], 'children': []}]}, {'type': 'IfStatement', 'name': 'if settings.secrets.did_api_key', 'range': [801, 808], 'children': [{'type': 'ExpressionStatement', 'name': 'all_credentials.append(did_credentials)', 'range': [809, 815], 'children': []}]}, {'type': 'IfStatement', 'name': 'if settings.secrets.jina_api_key', 'range': [816, 823], 'children': [{'type': 'ExpressionStatement', 'name': 'all_credentials.append(jina_credentials)', 'range': [824, 830], 'children': []}]}, {'type': 'IfStatement', 'name': 'if settings.secrets.unreal_speech_api_key', 'range': [831, 838], 'children': [{'type': 'ExpressionStatement', 'name': 'all_credentials.append(unreal_credentials)', 'range': [839, 845], 'children': []}]}, {'type': 'IfStatement', 'name': 'if settings.secrets.open_router_api_key', 'range': [846, 853], 'children': [{'type': 'ExpressionStatement', 'name': 'all_credentials.append(open_router_credentials)', 'range': [854, 860], 'children': []}]}, {'type': 'ReturnStatement', 'name': 'return all_credentials', 'range': [861, 863], 'children': []}]}, {'type': 'FunctionDecl', 'name': 'get_creds_by_id', 'range': [865, 914], 'children': [{'type': 'AssignmentStatement', 'name': 'all_credentials = self.get_all_creds(user_id)', 'range': [885, 893], 'children': []}, {'type': 'ReturnStatement', 'name': 'return next((c for c in all_credentials if c.id == credentials_id) None)', 'range': [894, 914], 'children': []}]}, {'type': 'FunctionDecl', 'name': 'get_creds_by_provider', 'range': [916, 961], 'children': [{'type': 'AssignmentStatement', 'name': 'credentials = self.get_all_creds(user_id)', 'range': [937, 945], 'children': []}, {'type': 'ReturnStatement', 'name': 'return [c for c in credentials if c.provider == provider]', 'range': [946, 961], 'children': []}]}, {'type': 'FunctionDecl', 'name': 'get_authorized_providers', 'range': [963, 1003], 'children': [{'type': 'AssignmentStatement', 'name': 'credentials = self.get_all_creds(user_id)', 'range': [980, 988], 'children': []}, {'type': 'ReturnStatement', 'name': 'return list(set(c.provider for c in credentials))', 'range': [989, 1003], 'children': []}]}, {'type': 'FunctionDecl', 'name': 'update_creds', 'range': [1005, 1196], 'children': [{'type': 'WithStatement', 'name': 'with self.locked_user_integrations(user_id)', 'range': [1023, 1031], 'children': [{'type': 'AssignmentStatement', 'name': 'current = self.get_creds_by_id(user_id updated.id)', 'range': [1032, 1044], 'children': []}, {'type': 'IfStatement', 'name': 'if not current', 'range': [1045, 1048], 'children': [{'type': 'RaiseStatement', 'name': 'raise ValueError(f"Credentials with ID {updated.id} " f"for user with ID {user_id} not found")', 'range': [1049, 1061], 'children': []}]}, {'type': 'IfStatement', 'name': 'if type(current) is not type(updated)', 'range': [1062, 1074], 'children': [{'type': 'RaiseStatement', 'name': 'raise TypeError(f"Can not update credentials with ID {updated.id} " f"from type {type(current)} " f"to type {type(updated)}")', 'range': [1075, 1089], 'children': []}]}, {'type': 'IfStatement', 'name': 'if (isinstance(updated OAuth2Credentials) and isinstance(current OAuth2Credentials) and not set(updated.scopes).issuperset(current.scopes))', 'range': [1101, 1137], 'children': [{'type': 'RaiseStatement', 'name': 'raise ValueError(f"Can not update credentials with ID {updated.id} " f"and scopes {current.scopes} " f"to more restrictive set of scopes {updated.scopes}")', 'range': [1138, 1152], 'children': []}]}, {'type': 'AssignmentStatement', 'name': 'updated_credentials_list = [updated if c.id == updated.id else c for c in self.get_all_creds(user_id)]', 'range': [1159, 1187], 'children': []}, {'type': 'ExpressionStatement', 'name': 'self._set_user_integration_creds(user_id updated_credentials_list)', 'range': [1188, 1196], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'delete_creds_by_id', 'range': [1198, 1257], 'children': [{'type': 'WithStatement', 'name': 'with self.locked_user_integrations(user_id)', 'range': [1216, 1224], 'children': [{'type': 'AssignmentStatement', 'name': 'filtered_credentials = [c for c in self.get_all_creds(user_id) if c.id != credentials_id]', 'range': [1225, 1248], 'children': []}, {'type': 'ExpressionStatement', 'name': 'self._set_user_integration_creds(user_id filtered_credentials)', 'range': [1249, 1257], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'store_state_token', 'range': [1259, 1405], 'children': [{'type': 'AssignmentStatement', 'name': 'token = secrets.token_urlsafe(32)', 'range': [1284, 1292], 'children': []}, {'type': 'AssignmentStatement', 'name': 'expires_at = datetime.now(timezone.utc) + timedelta(minutes=10)', 'range': [1293, 1310], 'children': []}, {'type': 'AssignmentStatement', 'name': 'state = OAuthState(token=token provider=provider expires_at=int(expires_at.timestamp()) scopes=scopes)', 'range': [1312, 1345], 'children': []}, {'type': 'WithStatement', 'name': 'with self.locked_user_integrations(user_id)', 'range': [1347, 1355], 'children': [{'type': 'AssignmentStatement', 'name': 'user_integrations = self._get_user_integrations(user_id)', 'range': [1356, 1364], 'children': []}, {'type': 'AssignmentStatement', 'name': 'oauth_states = user_integrations.oauth_states', 'range': [1365, 1370], 'children': []}, {'type': 'ExpressionStatement', 'name': 'oauth_states.append(state)', 'range': [1371, 1377], 'children': []}, {'type': 'AssignmentStatement', 'name': 'user_integrations.oauth_states = oauth_states', 'range': [1378, 1383], 'children': []}, {'type': 'ExpressionStatement', 'name': 'self.db_manager.update_user_integrations(user_id=user_id data=user_integrations)', 'range': [1385, 1401], 'children': []}]}, {'type': 'ReturnStatement', 'name': 'return token', 'range': [1403, 1405], 'children': []}]}, {'type': 'FunctionDecl', 'name': 'get_any_valid_scopes_from_state_token', 'range': [1407, 1528], 'children': [{'type': 'AssignmentStatement', 'name': 'user_integrations = self._get_user_integrations(user_id)', 'range': [1438, 1446], 'children': []}, {'type': 'AssignmentStatement', 'name': 'oauth_states = user_integrations.oauth_states', 'range': [1447, 1452], 'children': []}, {'type': 'AssignmentStatement', 'name': 'now = datetime.now(timezone.utc)', 'range': [1454, 1464], 'children': []}, {'type': 'AssignmentStatement', 'name': 'valid_state = next((state for state in oauth_states if state.token == token and state.provider == provider and state.expires_at > now.timestamp()) None)', 'range': [1465, 1514], 'children': []}, {'type': 'IfStatement', 'name': 'if valid_state', 'range': [1515, 1517], 'children': [{'type': 'ReturnStatement', 'name': 'return valid_state.scopes', 'range': [1519, 1523], 'children': []}]}, {'type': 'ReturnStatement', 'name': 'return []', 'range': [1525, 1528], 'children': []}]}, {'type': 'FunctionDecl', 'name': 'verify_state_token', 'range': [1530, 1678], 'children': [{'type': 'WithStatement', 'name': 'with self.locked_user_integrations(user_id)', 'range': [1552, 1560], 'children': [{'type': 'AssignmentStatement', 'name': 'user_integrations = self._get_user_integrations(user_id)', 'range': [1561, 1569], 'children': []}, {'type': 'AssignmentStatement', 'name': 'oauth_states = user_integrations.oauth_states', 'range': [1570, 1575], 'children': []}, {'type': 'AssignmentStatement', 'name': 'now = datetime.now(timezone.utc)', 'range': [1577, 1587], 'children': []}, {'type': 'AssignmentStatement', 'name': 'valid_state = next((state for state in oauth_states if state.token == token and state.provider == provider and state.expires_at > now.timestamp()) None)', 'range': [1588, 1637], 'children': []}, {'type': 'IfStatement', 'name': 'if valid_state', 'range': [1638, 1640], 'children': [{'type': 'ExpressionStatement', 'name': 'oauth_states.remove(valid_state)', 'range': [1648, 1654], 'children': []}, {'type': 'AssignmentStatement', 'name': 'user_integrations.oauth_states = oauth_states', 'range': [1655, 1660], 'children': []}, {'type': 'ExpressionStatement', 'name': 'self.db_manager.update_user_integrations(user_id user_integrations)', 'range': [1661, 1671], 'children': []}, {'type': 'ReturnStatement', 'name': 'return True', 'range': [1672, 1674], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return False', 'range': [1676, 1678], 'children': []}]}, {'type': 'FunctionDecl', 'name': '_set_user_integration_creds', 'range': [1680, 1751], 'children': [{'type': 'AssignmentStatement', 'name': 'integrations = self._get_user_integrations(user_id)', 'range': [1703, 1711], 'children': []}, {'type': 'AssignmentStatement', 'name': 'credentials = [c for c in credentials if c not in DEFAULT_CREDENTIALS]', 'range': [1720, 1734], 'children': []}, {'type': 'AssignmentStatement', 'name': 'integrations.credentials = credentials', 'range': [1735, 1740], 'children': []}, {'type': 'ExpressionStatement', 'name': 'self.db_manager.update_user_integrations(user_id integrations)', 'range': [1741, 1751], 'children': []}]}, {'type': 'FunctionDecl', 'name': '_get_user_integrations', 'range': [1753, 1786], 'children': [{'type': 'AssignmentStatement', 'name': 'integrations: UserIntegrations = self.db_manager.get_user_integrations(user_id=user_id)', 'range': [1767, 1782], 'children': []}, {'type': 'ReturnStatement', 'name': 'return integrations', 'range': [1784, 1786], 'children': []}]}, {'type': 'FunctionDecl', 'name': 'locked_user_integrations', 'range': [1788, 1817], 'children': [{'type': 'AssignmentStatement', 'name': 'key = (f"user:{user_id}" "integrations")', 'range': [1799, 1807], 'children': []}, {'type': 'ReturnStatement', 'name': 'return self.locks.locked(key)', 'range': [1808, 1817], 'children': []}]}]}
2025-01-08 10:34:05,862 - INFO - Completed main AST analysis flow
2025-01-08 10:34:05,865 - INFO - Successfully processed chunk
2025-01-08 10:34:05,935 - INFO - Starting code generation from AST
2025-01-08 10:34:55,647 - INFO - Successfully generated code from AST
2025-01-08 10:34:55,648 - INFO - Starting static code similarity comparison
2025-01-08 10:34:55,693 - INFO - Static similarity result: {'final_score': 99.89, 'length_similarity': 99.86, 'token_similarity': 100.0, 'structure_similarity': 99.63, 'function_similarity': 100, 'complexity_similarity': 100.0, 'variable_similarity': 100}
