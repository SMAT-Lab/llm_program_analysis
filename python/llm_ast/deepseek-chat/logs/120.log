2025-01-08 10:07:14,791 - INFO - Processing sample 120
2025-01-08 10:07:14,791 - INFO - Starting Step 0: Splitting code into top-level declarations
2025-01-08 10:19:10,017 - INFO - Successfully split code into 11 top-level declarations
2025-01-08 10:19:10,050 - INFO - Processing chunk #0 (size=385 chars, start_index=0)
2025-01-08 10:19:10,050 - INFO - Processing chunk with 385 chars starting at index 0
2025-01-08 10:19:10,050 - INFO - Starting main AST analysis flow
2025-01-08 10:19:10,053 - INFO - Processing chunk #1 (size=351 chars, start_index=86)
2025-01-08 10:19:10,055 - INFO - Processing chunk with 351 chars starting at index 86
2025-01-08 10:19:10,053 - INFO - Tokenized code into 86 tokens
2025-01-08 10:19:10,056 - INFO - Starting main AST analysis flow
2025-01-08 10:19:10,062 - INFO - Processing chunk #2 (size=194 chars, start_index=180)
2025-01-08 10:19:10,062 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:19:10,063 - INFO - Processing chunk #3 (size=966 chars, start_index=216)
2025-01-08 10:19:10,063 - INFO - Tokenized code into 94 tokens
2025-01-08 10:19:10,065 - INFO - Processing chunk with 194 chars starting at index 180
2025-01-08 10:19:10,077 - INFO - Starting main AST analysis flow
2025-01-08 10:19:10,067 - INFO - Processing chunk with 966 chars starting at index 216
2025-01-08 10:19:10,068 - INFO - Processing chunk #5 (size=151 chars, start_index=1075)
2025-01-08 10:19:10,069 - INFO - Processing chunk #6 (size=42 chars, start_index=1098)
2025-01-08 10:19:10,073 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:19:10,074 - INFO - Processing chunk #7 (size=900 chars, start_index=1108)
2025-01-08 10:19:10,083 - INFO - Processing chunk with 900 chars starting at index 1108
2025-01-08 10:19:10,083 - INFO - Starting main AST analysis flow
2025-01-08 10:19:10,078 - INFO - Processing chunk #8 (size=567 chars, start_index=1171)
2025-01-08 10:19:10,078 - INFO - Starting main AST analysis flow
2025-01-08 10:19:10,079 - INFO - Processing chunk #9 (size=7293 chars, start_index=1210)
2025-01-08 10:19:10,079 - INFO - Processing chunk with 151 chars starting at index 1075
2025-01-08 10:19:10,080 - INFO - Processing chunk #10 (size=1584 chars, start_index=2210)
2025-01-08 10:19:10,081 - INFO - Processing chunk with 42 chars starting at index 1098
2025-01-08 10:19:10,065 - INFO - Processing chunk #4 (size=4541 chars, start_index=311)
2025-01-08 10:19:10,077 - INFO - Tokenized code into 36 tokens
2025-01-08 10:19:10,083 - INFO - Tokenized code into 63 tokens
2025-01-08 10:19:10,102 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:19:10,089 - INFO - Tokenized code into 95 tokens
2025-01-08 10:19:10,094 - INFO - Processing chunk with 7293 chars starting at index 1210
2025-01-08 10:19:10,096 - INFO - Starting main AST analysis flow
2025-01-08 10:19:10,101 - INFO - Processing chunk with 1584 chars starting at index 2210
2025-01-08 10:19:10,101 - INFO - Starting main AST analysis flow
2025-01-08 10:19:10,102 - INFO - Processing chunk with 4541 chars starting at index 311
2025-01-08 10:19:10,102 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:19:10,088 - INFO - Processing chunk with 567 chars starting at index 1171
2025-01-08 10:19:10,107 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:19:10,107 - INFO - Starting main AST analysis flow
2025-01-08 10:19:10,107 - INFO - Tokenized code into 23 tokens
2025-01-08 10:19:10,108 - INFO - Starting main AST analysis flow
2025-01-08 10:19:10,108 - INFO - Tokenized code into 10 tokens
2025-01-08 10:19:10,108 - INFO - Starting main AST analysis flow
2025-01-08 10:19:10,113 - INFO - Starting main AST analysis flow
2025-01-08 10:19:10,116 - INFO - Tokenized code into 1000 tokens
2025-01-08 10:19:10,121 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:19:10,122 - INFO - Tokenized code into 334 tokens
2025-01-08 10:19:10,123 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:19:10,124 - INFO - Tokenized code into 764 tokens
2025-01-08 10:19:10,133 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:19:10,126 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:19:10,132 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:19:10,125 - INFO - Tokenized code into 39 tokens
2025-01-08 10:19:10,160 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:19:12,538 - INFO - Step 1 result: {'type': 'Program', 'name': 'EmptySchema', 'range': [1098, 1107], 'children': []}
2025-01-08 10:19:12,539 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:19:12,801 - INFO - Step 1 result: {'type': 'Program', 'name': 'BlockWebhookConfig', 'range': [1171, 1209], 'children': []}
2025-01-08 10:19:12,801 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:19:12,941 - INFO - Step 1 result: {'type': 'Program', 'name': 'BlockManualWebhookConfig', 'range': [1108, 1170], 'children': []}
2025-01-08 10:19:12,942 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:19:14,152 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [1075, 1097], 'children': [{'type': 'TypeVarDeclaration', 'name': 'BlockSchemaInputType', 'range': [1075, 1085], 'children': []}, {'type': 'TypeVarDeclaration', 'name': 'BlockSchemaOutputType', 'range': [1086, 1097], 'children': []}]}
2025-01-08 10:19:14,152 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:19:15,251 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [2210, 2543], 'children': [{'type': 'FunctionDeclaration', 'name': 'get_blocks', 'range': [2210, 2241], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [2227, 2237], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'initialize_blocks', 'range': [2244, 2507], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'get_block', 'range': [2509, 2543], 'children': []}]}
2025-01-08 10:19:15,252 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:19:15,826 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [86, 179], 'children': [{'type': 'VariableDeclaration', 'name': 'app_config', 'range': [86, 91], 'children': []}, {'type': 'VariableDeclaration', 'name': 'BlockData', 'range': [93, 117], 'children': []}, {'type': 'VariableDeclaration', 'name': 'BlockInput', 'range': [118, 136], 'children': []}, {'type': 'VariableDeclaration', 'name': 'BlockOutput', 'range': [137, 157], 'children': []}, {'type': 'VariableDeclaration', 'name': 'CompletedBlockOutput', 'range': [158, 178], 'children': []}]}
2025-01-08 10:19:15,826 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:19:17,300 - INFO - Step 1 result: {'type': 'Program', 'name': 'BlockType', 'range': [180, 215], 'children': [{'type': 'EnumDeclaration', 'name': 'STANDARD', 'range': [187, 189], 'children': []}, {'type': 'EnumDeclaration', 'name': 'INPUT', 'range': [191, 193], 'children': []}, {'type': 'EnumDeclaration', 'name': 'OUTPUT', 'range': [195, 197], 'children': []}, {'type': 'EnumDeclaration', 'name': 'NOTE', 'range': [199, 201], 'children': []}, {'type': 'EnumDeclaration', 'name': 'WEBHOOK', 'range': [203, 205], 'children': []}, {'type': 'EnumDeclaration', 'name': 'WEBHOOK_MANUAL', 'range': [207, 209], 'children': []}, {'type': 'EnumDeclaration', 'name': 'AGENT', 'range': [211, 213], 'children': []}]}
2025-01-08 10:19:17,300 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:19:17,462 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [0, 85], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 2], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [3, 9], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [10, 14], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [15, 48], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [50, 52], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [53, 55], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [56, 62], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [63, 67], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [69, 75], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [76, 84], 'children': []}]}
2025-01-08 10:19:17,462 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:19:17,629 - INFO - Step 1 result: {'type': 'Program', 'name': 'Block', 'range': [1210, 2209], 'children': [{'type': 'FunctionDeclaration', 'name': '__init__', 'range': [1224, 1538], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'create', 'range': [1704, 1726], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'run', 'range': [1730, 1754], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'run_once', 'range': [1756, 1811], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'merge_stats', 'range': [1813, 1958], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'name', 'range': [1960, 1976], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'to_dict', 'range': [1978, 2084], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'execute', 'range': [2086, 2208], 'children': []}]}
2025-01-08 10:19:17,630 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:19:18,298 - INFO - Step 1 result: {'type': 'Program', 'name': 'BlockSchema', 'range': [311, 1074], 'children': [{'type': 'ClassDeclaration', 'name': 'BlockSchema', 'range': [311, 1074], 'children': [{'type': 'ClassVariableDeclaration', 'name': 'cached_jsonschema', 'range': [318, 328], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'jsonschema', 'range': [334, 624], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'ref_to_dict', 'range': [379, 550], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'validate_data', 'range': [629, 662], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'validate_field', 'range': [667, 769], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'get_fields', 'range': [774, 798], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'get_required_fields', 'range': [803, 842], 'children': []}, {'type': 'FunctionDeclaration', 'name': '__pydantic_init_subclass__', 'range': [847, 1074], 'children': []}]}]}
2025-01-08 10:19:18,299 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:19:18,983 - INFO - Step 2 result: {'type': 'Program', 'name': 'EmptySchema', 'range': [1098, 1107], 'children': [{'type': 'ClassDeclaration', 'name': 'EmptySchema', 'range': [1098, 1107], 'children': [{'type': 'Keyword', 'name': 'class', 'range': [1098, 1098], 'children': []}, {'type': 'Identifier', 'name': 'EmptySchema', 'range': [1099, 1099], 'children': []}, {'type': 'Punctuation', 'name': '(', 'range': [1100, 1100], 'children': []}, {'type': 'Identifier', 'name': 'BlockSchema', 'range': [1101, 1101], 'children': []}, {'type': 'Punctuation', 'name': ')', 'range': [1102, 1102], 'children': []}, {'type': 'Punctuation', 'name': ':', 'range': [1103, 1103], 'children': []}, {'type': 'Keyword', 'name': 'pass', 'range': [1105, 1105], 'children': []}]}]}
2025-01-08 10:19:18,983 - INFO - Starting Step 3: AST simplification
2025-01-08 10:19:20,062 - INFO - Step 2 result: {'type': 'Program', 'name': 'BlockWebhookConfig', 'range': [1171, 1209], 'children': [{'type': 'ClassDeclaration', 'name': 'BlockWebhookConfig', 'range': [1171, 1209], 'children': [{'type': 'Inheritance', 'name': 'BlockManualWebhookConfig', 'range': [1173, 1175], 'children': []}, {'type': 'Docstring', 'name': '', 'range': [1178, 1180], 'children': [{'type': 'StringLiteral', 'name': '', 'range': [1178, 1180], 'children': []}]}, {'type': 'FieldDeclaration', 'name': 'resource_format', 'range': [1183, 1186], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1184, 1186], 'children': []}, {'type': 'Docstring', 'name': '', 'range': [1187, 1195], 'children': [{'type': 'StringLiteral', 'name': '', 'range': [1187, 1195], 'children': []}]}]}, {'type': 'Comment', 'name': '', 'range': [1197, 1209], 'children': []}]}]}
2025-01-08 10:19:20,062 - INFO - Starting Step 3: AST simplification
2025-01-08 10:19:23,912 - INFO - Step 3 result: {'type': 'Program', 'name': 'EmptySchema', 'range': [1098, 1107], 'children': [{'type': 'ClassDeclaration', 'name': 'EmptySchema', 'range': [1098, 1107], 'children': [{'type': 'Keyword', 'name': 'class', 'range': [1098, 1098], 'children': []}, {'type': 'Identifier', 'name': 'EmptySchema', 'range': [1099, 1099], 'children': []}, {'type': 'Identifier', 'name': 'BlockSchema', 'range': [1101, 1101], 'children': []}, {'type': 'Keyword', 'name': 'pass', 'range': [1105, 1105], 'children': []}]}]}
2025-01-08 10:19:23,912 - INFO - Starting Step 4: AST normalization
2025-01-08 10:19:24,703 - INFO - Step 2 result: {'type': 'Program', 'name': '', 'range': [1075, 1097], 'children': [{'type': 'TypeVarDeclaration', 'name': 'BlockSchemaInputType', 'range': [1075, 1085], 'children': [{'type': 'Assignment', 'name': '=', 'range': [1076, 1076], 'children': []}, {'type': 'TypeVar', 'name': 'TypeVar', 'range': [1077, 1084], 'children': [{'type': 'Literal', 'name': '"BlockSchemaInputType"', 'range': [1079, 1079], 'children': []}, {'type': 'Keyword', 'name': 'bound', 'range': [1081, 1081], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [1082, 1082], 'children': []}, {'type': 'Identifier', 'name': 'BlockSchema', 'range': [1083, 1083], 'children': []}]}]}, {'type': 'TypeVarDeclaration', 'name': 'BlockSchemaOutputType', 'range': [1086, 1097], 'children': [{'type': 'Assignment', 'name': '=', 'range': [1087, 1087], 'children': []}, {'type': 'TypeVar', 'name': 'TypeVar', 'range': [1088, 1095], 'children': [{'type': 'Literal', 'name': '"BlockSchemaOutputType"', 'range': [1090, 1090], 'children': []}, {'type': 'Keyword', 'name': 'bound', 'range': [1092, 1092], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [1093, 1093], 'children': []}, {'type': 'Identifier', 'name': 'BlockSchema', 'range': [1094, 1094], 'children': []}]}]}]}
2025-01-08 10:19:24,703 - INFO - Starting Step 3: AST simplification
2025-01-08 10:19:25,118 - INFO - Step 2 result: {'type': 'Program', 'name': 'BlockManualWebhookConfig', 'range': [1108, 1170], 'children': [{'type': 'ClassDeclaration', 'name': 'BlockManualWebhookConfig', 'range': [1108, 1170], 'children': [{'type': 'Inheritance', 'name': 'BaseModel', 'range': [1110, 1112], 'children': []}, {'type': 'Docstring', 'name': '', 'range': [1115, 1117], 'children': []}, {'type': 'FieldDeclaration', 'name': 'provider', 'range': [1120, 1127], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1121, 1122], 'children': []}, {'type': 'Docstring', 'name': '', 'range': [1124, 1126], 'children': []}]}, {'type': 'FieldDeclaration', 'name': 'webhook_type', 'range': [1129, 1136], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1130, 1131], 'children': []}, {'type': 'Docstring', 'name': '', 'range': [1133, 1135], 'children': []}]}, {'type': 'FieldDeclaration', 'name': 'event_filter_input', 'range': [1138, 1147], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1139, 1140], 'children': []}, {'type': 'DefaultValue', 'name': '""', 'range': [1141, 1142], 'children': []}, {'type': 'Docstring', 'name': '', 'range': [1144, 1146], 'children': []}]}, {'type': 'FieldDeclaration', 'name': 'event_format', 'range': [1149, 1168], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1150, 1151], 'children': []}, {'type': 'DefaultValue', 'name': '"{event}"', 'range': [1152, 1153], 'children': []}, {'type': 'Docstring', 'name': '', 'range': [1155, 1167], 'children': []}]}]}]}
2025-01-08 10:19:25,118 - INFO - Starting Step 3: AST simplification
2025-01-08 10:19:27,192 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [216, 310], 'children': [{'type': 'ClassDeclaration', 'name': 'BlockCategory', 'range': [216, 274], 'children': [{'type': 'EnumDeclaration', 'name': '', 'range': [219, 274], 'children': [{'type': 'EnumMember', 'name': 'AI', 'range': [223, 225], 'children': []}, {'type': 'EnumMember', 'name': 'SOCIAL', 'range': [227, 229], 'children': []}, {'type': 'EnumMember', 'name': 'TEXT', 'range': [231, 233], 'children': []}, {'type': 'EnumMember', 'name': 'SEARCH', 'range': [235, 237], 'children': []}, {'type': 'EnumMember', 'name': 'BASIC', 'range': [239, 241], 'children': []}, {'type': 'EnumMember', 'name': 'INPUT', 'range': [243, 245], 'children': []}, {'type': 'EnumMember', 'name': 'OUTPUT', 'range': [247, 249], 'children': []}, {'type': 'EnumMember', 'name': 'LOGIC', 'range': [251, 253], 'children': []}, {'type': 'EnumMember', 'name': 'COMMUNICATION', 'range': [255, 257], 'children': []}, {'type': 'EnumMember', 'name': 'DEVELOPER_TOOLS', 'range': [259, 261], 'children': []}, {'type': 'EnumMember', 'name': 'DATA', 'range': [263, 265], 'children': []}, {'type': 'EnumMember', 'name': 'HARDWARE', 'range': [267, 269], 'children': []}, {'type': 'EnumMember', 'name': 'AGENT', 'range': [271, 273], 'children': []}, {'type': 'EnumMember', 'name': 'CRM', 'range': [275, 277], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'dict', 'range': [280, 310], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [283, 284], 'children': []}, {'type': 'ReturnType', 'name': 'dict[str, str]', 'range': [285, 292], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [293, 310], 'children': [{'type': 'ReturnStatement', 'name': '', 'range': [295, 308], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [296, 308], 'children': [{'type': 'Property', 'name': 'category', 'range': [297, 302], 'children': [{'type': 'Identifier', 'name': 'self.name', 'range': [299, 301], 'children': []}]}, {'type': 'Property', 'name': 'description', 'range': [303, 308], 'children': [{'type': 'Identifier', 'name': 'self.value', 'range': [305, 307], 'children': []}]}]}]}]}]}]}
2025-01-08 10:19:27,192 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:19:27,909 - INFO - Step 3 result: {'type': 'Program', 'name': 'BlockWebhookConfig', 'range': [1171, 1209], 'children': [{'type': 'ClassDeclaration', 'name': 'BlockWebhookConfig', 'range': [1171, 1209], 'children': [{'type': 'Inheritance', 'name': 'BlockManualWebhookConfig', 'range': [1173, 1175], 'children': []}, {'type': 'Docstring', 'name': '', 'range': [1178, 1180], 'children': [{'type': 'StringLiteral', 'name': '', 'range': [1178, 1180], 'children': []}]}, {'type': 'FieldDeclaration', 'name': 'resource_format', 'range': [1183, 1186], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1184, 1186], 'children': []}, {'type': 'Docstring', 'name': '', 'range': [1187, 1195], 'children': [{'type': 'StringLiteral', 'name': '', 'range': [1187, 1195], 'children': []}]}]}, {'type': 'Comment', 'name': '', 'range': [1197, 1209], 'children': []}]}]}
2025-01-08 10:19:27,910 - INFO - Starting Step 4: AST normalization
2025-01-08 10:19:29,071 - INFO - Step 4 result: {'type': 'Program', 'name': 'EmptySchema', 'range': [1098, 1107], 'children': [{'type': 'ClassDecl', 'name': 'EmptySchema', 'range': [1098, 1107], 'children': [{'type': 'Keyword', 'name': 'class', 'range': [1098, 1098], 'children': []}, {'type': 'Identifier', 'name': 'EmptySchema', 'range': [1099, 1099], 'children': []}, {'type': 'Identifier', 'name': 'BlockSchema', 'range': [1101, 1101], 'children': []}, {'type': 'Keyword', 'name': 'pass', 'range': [1105, 1105], 'children': []}]}]}
2025-01-08 10:19:29,072 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:19:29,469 - INFO - Step 2 result: {'type': 'Program', 'name': 'BlockType', 'range': [180, 215], 'children': [{'type': 'EnumDeclaration', 'name': 'STANDARD', 'range': [187, 189], 'children': [{'type': 'Literal', 'name': '"Standard"', 'range': [189, 189], 'children': []}]}, {'type': 'EnumDeclaration', 'name': 'INPUT', 'range': [191, 193], 'children': [{'type': 'Literal', 'name': '"Input"', 'range': [193, 193], 'children': []}]}, {'type': 'EnumDeclaration', 'name': 'OUTPUT', 'range': [195, 197], 'children': [{'type': 'Literal', 'name': '"Output"', 'range': [197, 197], 'children': []}]}, {'type': 'EnumDeclaration', 'name': 'NOTE', 'range': [199, 201], 'children': [{'type': 'Literal', 'name': '"Note"', 'range': [201, 201], 'children': []}]}, {'type': 'EnumDeclaration', 'name': 'WEBHOOK', 'range': [203, 205], 'children': [{'type': 'Literal', 'name': '"Webhook"', 'range': [205, 205], 'children': []}]}, {'type': 'EnumDeclaration', 'name': 'WEBHOOK_MANUAL', 'range': [207, 209], 'children': [{'type': 'Literal', 'name': '"Webhook (manual)"', 'range': [209, 209], 'children': []}]}, {'type': 'EnumDeclaration', 'name': 'AGENT', 'range': [211, 213], 'children': [{'type': 'Literal', 'name': '"Agent"', 'range': [213, 213], 'children': []}]}]}
2025-01-08 10:19:29,469 - INFO - Starting Step 3: AST simplification
2025-01-08 10:19:33,729 - INFO - Step 3 result: {'type': 'Program', 'name': '', 'range': [1075, 1097], 'children': [{'type': 'TypeVarDeclaration', 'name': 'BlockSchemaInputType', 'range': [1075, 1085], 'children': [{'type': 'TypeVar', 'name': 'TypeVar', 'range': [1077, 1084], 'children': [{'type': 'Literal', 'name': '"BlockSchemaInputType"', 'range': [1079, 1079], 'children': []}, {'type': 'Keyword', 'name': 'bound', 'range': [1081, 1081], 'children': []}, {'type': 'Identifier', 'name': 'BlockSchema', 'range': [1083, 1083], 'children': []}]}]}, {'type': 'TypeVarDeclaration', 'name': 'BlockSchemaOutputType', 'range': [1086, 1097], 'children': [{'type': 'TypeVar', 'name': 'TypeVar', 'range': [1088, 1095], 'children': [{'type': 'Literal', 'name': '"BlockSchemaOutputType"', 'range': [1090, 1090], 'children': []}, {'type': 'Keyword', 'name': 'bound', 'range': [1092, 1092], 'children': []}, {'type': 'Identifier', 'name': 'BlockSchema', 'range': [1094, 1094], 'children': []}]}]}]}
2025-01-08 10:19:33,729 - INFO - Starting Step 4: AST normalization
2025-01-08 10:19:33,990 - INFO - Step 5 result: {'type': 'Program', 'name': 'EmptySchema', 'range': [1098, 1107], 'children': [{'type': 'ClassDecl', 'name': 'EmptySchema', 'range': [1098, 1107], 'children': [{'type': 'Keyword', 'name': 'class', 'range': [1098, 1098], 'children': []}, {'type': 'Identifier', 'name': 'EmptySchema', 'range': [1099, 1099], 'children': []}, {'type': 'Identifier', 'name': 'BlockSchema', 'range': [1101, 1101], 'children': []}, {'type': 'Keyword', 'name': 'pass', 'range': [1105, 1105], 'children': []}]}]}
2025-01-08 10:19:33,990 - INFO - Completed main AST analysis flow
2025-01-08 10:19:33,991 - INFO - Successfully processed chunk
2025-01-08 10:19:35,229 - INFO - Step 4 result: {'type': 'Program', 'name': 'BlockWebhookConfig', 'range': [1171, 1209], 'children': [{'type': 'ClassDecl', 'name': 'BlockWebhookConfig', 'range': [1171, 1209], 'children': [{'type': 'Inheritance', 'name': 'BlockManualWebhookConfig', 'range': [1173, 1175], 'children': []}, {'type': 'Docstring', 'name': '', 'range': [1178, 1180], 'children': [{'type': 'Literal', 'name': '', 'range': [1178, 1180], 'children': []}]}, {'type': 'FieldDecl', 'name': 'resource_format', 'range': [1183, 1186], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1184, 1186], 'children': []}, {'type': 'Docstring', 'name': '', 'range': [1187, 1195], 'children': [{'type': 'Literal', 'name': '', 'range': [1187, 1195], 'children': []}]}]}, {'type': 'Comment', 'name': '', 'range': [1197, 1209], 'children': []}]}]}
2025-01-08 10:19:35,230 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:19:36,307 - INFO - Step 2 result: {'nodes': [{'type': 'VariableDeclaration', 'name': 'app_config', 'range': [86, 91], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [87, 90], 'children': [{'type': 'Identifier', 'name': 'Config', 'range': [88, 88], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'BlockData', 'range': [93, 117], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [94, 100], 'children': [{'type': 'TypeAnnotation', 'name': 'tuple', 'range': [95, 100], 'children': [{'type': 'TypeList', 'name': '', 'range': [96, 100], 'children': [{'type': 'Type', 'name': 'str', 'range': [97, 97], 'children': []}, {'type': 'Type', 'name': 'Any', 'range': [99, 99], 'children': []}]}]}]}, {'type': 'Comment', 'name': '#', 'range': [101, 116], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'BlockInput', 'range': [118, 136], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [119, 125], 'children': [{'type': 'TypeAnnotation', 'name': 'dict', 'range': [120, 125], 'children': [{'type': 'TypeList', 'name': '', 'range': [121, 125], 'children': [{'type': 'Type', 'name': 'str', 'range': [122, 122], 'children': []}, {'type': 'Type', 'name': 'Any', 'range': [124, 124], 'children': []}]}]}]}, {'type': 'Comment', 'name': '#', 'range': [126, 135], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'BlockOutput', 'range': [137, 157], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [138, 146], 'children': [{'type': 'TypeAnnotation', 'name': 'Generator', 'range': [139, 146], 'children': [{'type': 'TypeList', 'name': '', 'range': [140, 146], 'children': [{'type': 'Type', 'name': 'BlockData', 'range': [141, 141], 'children': []}, {'type': 'Type', 'name': 'None', 'range': [143, 143], 'children': []}, {'type': 'Type', 'name': 'None', 'range': [145, 145], 'children': []}]}]}]}, {'type': 'Comment', 'name': '#', 'range': [147, 156], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'CompletedBlockOutput', 'range': [158, 178], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [159, 168], 'children': [{'type': 'TypeAnnotation', 'name': 'dict', 'range': [160, 168], 'children': [{'type': 'TypeList', 'name': '', 'range': [161, 168], 'children': [{'type': 'Type', 'name': 'str', 'range': [162, 162], 'children': []}, {'type': 'Type', 'name': 'list', 'range': [164, 167], 'children': [{'type': 'Type', 'name': 'Any', 'range': [166, 166], 'children': []}]}]}]}]}, {'type': 'Comment', 'name': '#', 'range': [169, 177], 'children': []}]}]}
2025-01-08 10:19:36,307 - INFO - Starting Step 3: AST simplification
2025-01-08 10:19:37,945 - INFO - Step 3 result: {'type': 'Program', 'name': 'BlockManualWebhookConfig', 'range': [1108, 1170], 'children': [{'type': 'ClassDeclaration', 'name': 'BlockManualWebhookConfig', 'range': [1108, 1170], 'children': [{'type': 'Inheritance', 'name': 'BaseModel', 'range': [1110, 1112], 'children': []}, {'type': 'Docstring', 'name': '', 'range': [1115, 1117], 'children': []}, {'type': 'FieldDeclaration', 'name': 'provider', 'range': [1120, 1127], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1121, 1122], 'children': []}, {'type': 'Docstring', 'name': '', 'range': [1124, 1126], 'children': []}]}, {'type': 'FieldDeclaration', 'name': 'webhook_type', 'range': [1129, 1136], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1130, 1131], 'children': []}, {'type': 'Docstring', 'name': '', 'range': [1133, 1135], 'children': []}]}, {'type': 'FieldDeclaration', 'name': 'event_filter_input', 'range': [1138, 1147], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1139, 1140], 'children': []}, {'type': 'DefaultValue', 'name': '""', 'range': [1141, 1142], 'children': []}, {'type': 'Docstring', 'name': '', 'range': [1144, 1146], 'children': []}]}, {'type': 'FieldDeclaration', 'name': 'event_format', 'range': [1149, 1168], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1150, 1151], 'children': []}, {'type': 'DefaultValue', 'name': '"{event}"', 'range': [1152, 1153], 'children': []}, {'type': 'Docstring', 'name': '', 'range': [1155, 1167], 'children': []}]}]}]}
2025-01-08 10:19:37,945 - INFO - Starting Step 4: AST normalization
2025-01-08 10:19:40,342 - INFO - Step 3 result: {'type': 'Program', 'name': 'BlockType', 'range': [180, 215], 'children': [{'type': 'EnumDeclaration', 'name': 'STANDARD', 'range': [187, 189], 'children': [{'type': 'Literal', 'name': '"Standard"', 'range': [189, 189], 'children': []}]}, {'type': 'EnumDeclaration', 'name': 'INPUT', 'range': [191, 193], 'children': [{'type': 'Literal', 'name': '"Input"', 'range': [193, 193], 'children': []}]}, {'type': 'EnumDeclaration', 'name': 'OUTPUT', 'range': [195, 197], 'children': [{'type': 'Literal', 'name': '"Output"', 'range': [197, 197], 'children': []}]}, {'type': 'EnumDeclaration', 'name': 'NOTE', 'range': [199, 201], 'children': [{'type': 'Literal', 'name': '"Note"', 'range': [201, 201], 'children': []}]}, {'type': 'EnumDeclaration', 'name': 'WEBHOOK', 'range': [203, 205], 'children': [{'type': 'Literal', 'name': '"Webhook"', 'range': [205, 205], 'children': []}]}, {'type': 'EnumDeclaration', 'name': 'WEBHOOK_MANUAL', 'range': [207, 209], 'children': [{'type': 'Literal', 'name': '"Webhook (manual)"', 'range': [209, 209], 'children': []}]}, {'type': 'EnumDeclaration', 'name': 'AGENT', 'range': [211, 213], 'children': [{'type': 'Literal', 'name': '"Agent"', 'range': [213, 213], 'children': []}]}]}
2025-01-08 10:19:40,342 - INFO - Starting Step 4: AST normalization
2025-01-08 10:19:42,485 - INFO - Step 4 result: {'type': 'Program', 'name': '', 'range': [1075, 1097], 'children': [{'type': 'TypeVarDeclaration', 'name': 'BlockSchemaInputType', 'range': [1075, 1085], 'children': [{'type': 'TypeVar', 'name': 'TypeVar', 'range': [1077, 1084], 'children': [{'type': 'Literal', 'name': '"BlockSchemaInputType"', 'range': [1079, 1079], 'children': []}, {'type': 'Keyword', 'name': 'bound', 'range': [1081, 1081], 'children': []}, {'type': 'Identifier', 'name': 'BlockSchema', 'range': [1083, 1083], 'children': []}]}]}, {'type': 'TypeVarDeclaration', 'name': 'BlockSchemaOutputType', 'range': [1086, 1097], 'children': [{'type': 'TypeVar', 'name': 'TypeVar', 'range': [1088, 1095], 'children': [{'type': 'Literal', 'name': '"BlockSchemaOutputType"', 'range': [1090, 1090], 'children': []}, {'type': 'Keyword', 'name': 'bound', 'range': [1092, 1092], 'children': []}, {'type': 'Identifier', 'name': 'BlockSchema', 'range': [1094, 1094], 'children': []}]}]}]}
2025-01-08 10:19:42,485 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:19:42,717 - INFO - Step 5 result: {'type': 'Program', 'name': 'BlockWebhookConfig', 'range': [1171, 1209], 'children': [{'type': 'ClassDecl', 'name': 'BlockWebhookConfig', 'range': [1171, 1209], 'children': [{'type': 'Inheritance', 'name': 'BlockManualWebhookConfig', 'range': [1173, 1175], 'children': []}, {'type': 'Docstring', 'name': '', 'range': [1178, 1180], 'children': [{'type': 'Literal', 'name': '', 'range': [1178, 1180], 'children': []}]}, {'type': 'FieldDecl', 'name': 'resource_format', 'range': [1183, 1186], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1184, 1186], 'children': []}, {'type': 'Docstring', 'name': '', 'range': [1187, 1195], 'children': [{'type': 'Literal', 'name': '', 'range': [1187, 1195], 'children': []}]}]}, {'type': 'Comment', 'name': '', 'range': [1197, 1209], 'children': []}]}]}
2025-01-08 10:19:42,718 - INFO - Completed main AST analysis flow
2025-01-08 10:19:42,718 - INFO - Successfully processed chunk
2025-01-08 10:19:44,793 - INFO - Step 2 result: {'nodes': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 2], 'children': [{'type': 'ImportSpecifier', 'name': 'inspect', 'range': [0, 2], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [3, 9], 'children': [{'type': 'ImportSpecifier', 'name': 'abc', 'range': [3, 5], 'children': []}, {'type': 'ImportSpecifier', 'name': 'ABC', 'range': [5, 6], 'children': []}, {'type': 'ImportSpecifier', 'name': 'abstractmethod', 'range': [6, 8], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [10, 14], 'children': [{'type': 'ImportSpecifier', 'name': 'enum', 'range': [10, 12], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Enum', 'range': [12, 13], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [15, 48], 'children': [{'type': 'ImportSpecifier', 'name': 'typing', 'range': [15, 17], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Any', 'range': [18, 20], 'children': []}, {'type': 'ImportSpecifier', 'name': 'ClassVar', 'range': [22, 23], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Generator', 'range': [25, 26], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Generic', 'range': [28, 29], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Optional', 'range': [31, 32], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Type', 'range': [34, 35], 'children': []}, {'type': 'ImportSpecifier', 'name': 'TypeVar', 'range': [37, 38], 'children': []}, {'type': 'ImportSpecifier', 'name': 'cast', 'range': [40, 41], 'children': []}, {'type': 'ImportSpecifier', 'name': 'get_origin', 'range': [43, 44], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [50, 52], 'children': [{'type': 'ImportSpecifier', 'name': 'jsonref', 'range': [50, 51], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [53, 55], 'children': [{'type': 'ImportSpecifier', 'name': 'jsonschema', 'range': [53, 54], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [56, 62], 'children': [{'type': 'ImportSpecifier', 'name': 'prisma', 'range': [56, 58], 'children': []}, {'type': 'ImportSpecifier', 'name': 'models', 'range': [58, 60], 'children': []}, {'type': 'ImportSpecifier', 'name': 'AgentBlock', 'range': [60, 61], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [63, 67], 'children': [{'type': 'ImportSpecifier', 'name': 'pydantic', 'range': [63, 65], 'children': []}, {'type': 'ImportSpecifier', 'name': 'BaseModel', 'range': [65, 66], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [69, 75], 'children': [{'type': 'ImportSpecifier', 'name': 'backend', 'range': [69, 71], 'children': []}, {'type': 'ImportSpecifier', 'name': 'util', 'range': [71, 73], 'children': []}, {'type': 'ImportSpecifier', 'name': 'json', 'range': [73, 74], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [76, 84], 'children': [{'type': 'ImportSpecifier', 'name': 'backend', 'range': [76, 78], 'children': []}, {'type': 'ImportSpecifier', 'name': 'util', 'range': [78, 80], 'children': []}, {'type': 'ImportSpecifier', 'name': 'settings', 'range': [80, 82], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Config', 'range': [82, 83], 'children': []}]}]}
2025-01-08 10:19:44,794 - INFO - Starting Step 3: AST simplification
2025-01-08 10:19:50,458 - INFO - Step 4 result: {'type': 'Program', 'name': 'BlockManualWebhookConfig', 'range': [1108, 1170], 'children': [{'type': 'ClassDecl', 'name': 'BlockManualWebhookConfig', 'range': [1108, 1170], 'children': [{'type': 'Inheritance', 'name': 'BaseModel', 'range': [1110, 1112], 'children': []}, {'type': 'Docstring', 'name': '', 'range': [1115, 1117], 'children': []}, {'type': 'FieldDecl', 'name': 'provider', 'range': [1120, 1127], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1121, 1122], 'children': []}, {'type': 'Docstring', 'name': '', 'range': [1124, 1126], 'children': []}]}, {'type': 'FieldDecl', 'name': 'webhook_type', 'range': [1129, 1136], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1130, 1131], 'children': []}, {'type': 'Docstring', 'name': '', 'range': [1133, 1135], 'children': []}]}, {'type': 'FieldDecl', 'name': 'event_filter_input', 'range': [1138, 1147], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1139, 1140], 'children': []}, {'type': 'DefaultValue', 'name': '""', 'range': [1141, 1142], 'children': []}, {'type': 'Docstring', 'name': '', 'range': [1144, 1146], 'children': []}]}, {'type': 'FieldDecl', 'name': 'event_format', 'range': [1149, 1168], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1150, 1151], 'children': []}, {'type': 'DefaultValue', 'name': '"{event}"', 'range': [1152, 1153], 'children': []}, {'type': 'Docstring', 'name': '', 'range': [1155, 1167], 'children': []}]}]}]}
2025-01-08 10:19:50,459 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:19:50,591 - INFO - Step 5 result: {'type': 'Program', 'name': '', 'range': [1075, 1097], 'children': [{'type': 'TypeVarDeclaration', 'name': 'BlockSchemaInputType', 'range': [1075, 1085], 'children': [{'type': 'TypeVar', 'name': 'TypeVar', 'range': [1077, 1084], 'children': [{'type': 'Literal', 'name': '"BlockSchemaInputType"', 'range': [1079, 1079], 'children': []}, {'type': 'Keyword', 'name': 'bound', 'range': [1081, 1081], 'children': []}, {'type': 'Identifier', 'name': 'BlockSchema', 'range': [1083, 1083], 'children': []}]}]}, {'type': 'TypeVarDeclaration', 'name': 'BlockSchemaOutputType', 'range': [1086, 1097], 'children': [{'type': 'TypeVar', 'name': 'TypeVar', 'range': [1088, 1095], 'children': [{'type': 'Literal', 'name': '"BlockSchemaOutputType"', 'range': [1090, 1090], 'children': []}, {'type': 'Keyword', 'name': 'bound', 'range': [1092, 1092], 'children': []}, {'type': 'Identifier', 'name': 'BlockSchema', 'range': [1094, 1094], 'children': []}]}]}]}
2025-01-08 10:19:50,591 - INFO - Completed main AST analysis flow
2025-01-08 10:19:50,592 - INFO - Successfully processed chunk
2025-01-08 10:19:51,518 - INFO - Step 4 result: {'type': 'Program', 'name': 'BlockType', 'range': [180, 215], 'children': [{'type': 'EnumDeclaration', 'name': 'STANDARD', 'range': [187, 189], 'children': [{'type': 'Literal', 'name': '"Standard"', 'range': [189, 189], 'children': []}]}, {'type': 'EnumDeclaration', 'name': 'INPUT', 'range': [191, 193], 'children': [{'type': 'Literal', 'name': '"Input"', 'range': [193, 193], 'children': []}]}, {'type': 'EnumDeclaration', 'name': 'OUTPUT', 'range': [195, 197], 'children': [{'type': 'Literal', 'name': '"Output"', 'range': [197, 197], 'children': []}]}, {'type': 'EnumDeclaration', 'name': 'NOTE', 'range': [199, 201], 'children': [{'type': 'Literal', 'name': '"Note"', 'range': [201, 201], 'children': []}]}, {'type': 'EnumDeclaration', 'name': 'WEBHOOK', 'range': [203, 205], 'children': [{'type': 'Literal', 'name': '"Webhook"', 'range': [205, 205], 'children': []}]}, {'type': 'EnumDeclaration', 'name': 'WEBHOOK_MANUAL', 'range': [207, 209], 'children': [{'type': 'Literal', 'name': '"Webhook (manual)"', 'range': [209, 209], 'children': []}]}, {'type': 'EnumDeclaration', 'name': 'AGENT', 'range': [211, 213], 'children': [{'type': 'Literal', 'name': '"Agent"', 'range': [213, 213], 'children': []}]}]}
2025-01-08 10:19:51,519 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:19:54,566 - INFO - Step 2 result: {'type': 'Program', 'name': 'BlockSchema', 'range': [311, 1074], 'children': [{'type': 'ClassDeclaration', 'name': 'BlockSchema', 'range': [311, 1074], 'children': [{'type': 'ClassVariableDeclaration', 'name': 'cached_jsonschema', 'range': [318, 328], 'children': [{'type': 'TypeAnnotation', 'name': 'ClassVar', 'range': [320, 328], 'children': [{'type': 'GenericType', 'name': 'dict', 'range': [322, 328], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [324, 326], 'children': []}, {'type': 'TypeAnnotation', 'name': 'Any', 'range': [326, 328], 'children': []}]}]}]}, {'type': 'FunctionDeclaration', 'name': 'jsonschema', 'range': [334, 624], 'children': [{'type': 'ReturnType', 'name': 'dict', 'range': [341, 346], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [343, 345], 'children': []}, {'type': 'TypeAnnotation', 'name': 'Any', 'range': [345, 346], 'children': []}]}, {'type': 'IfStatement', 'name': 'if', 'range': [349, 359], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [355, 359], 'children': []}]}, {'type': 'Assignment', 'name': 'model', 'range': [361, 376], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'ref_to_dict', 'range': [379, 550], 'children': [{'type': 'IfStatement', 'name': 'if', 'range': [386, 393], 'children': []}, {'type': 'ReturnStatement', 'name': 'return', 'range': [489, 524], 'children': []}, {'type': 'ElifStatement', 'name': 'elif', 'range': [526, 533], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [535, 546], 'children': []}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [548, 550], 'children': []}]}, {'type': 'Assignment', 'name': 'cls.cached_jsonschema', 'range': [552, 570], 'children': []}, {'type': 'ForStatement', 'name': 'for', 'range': [578, 618], 'children': [{'type': 'IfStatement', 'name': 'if', 'range': [598, 610], 'children': []}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [620, 624], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': 'validate_data', 'range': [629, 662], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [645, 662], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': 'validate_field', 'range': [667, 769], 'children': [{'type': 'IfStatement', 'name': 'if', 'range': [707, 710], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [712, 715], 'children': []}]}, {'type': 'Assignment', 'name': 'property_schema', 'range': [717, 725], 'children': []}, {'type': 'IfStatement', 'name': 'if', 'range': [726, 729], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [731, 734], 'children': []}]}, {'type': 'TryStatement', 'name': 'try', 'range': [736, 769], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [753, 755], 'children': []}, {'type': 'ExceptStatement', 'name': 'except', 'range': [756, 769], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [764, 769], 'children': []}]}]}]}, {'type': 'FunctionDeclaration', 'name': 'get_fields', 'range': [774, 798], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [787, 798], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': 'get_required_fields', 'range': [803, 842], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [816, 842], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': '__pydantic_init_subclass__', 'range': [847, 1074], 'children': [{'type': 'SuperCall', 'name': 'super', 'range': [862, 871], 'children': []}, {'type': 'Assignment', 'name': 'cls.cached_jsonschema', 'range': [887, 893], 'children': []}, {'type': 'ListComprehension', 'name': 'credentials_fields', 'range': [895, 950], 'children': []}, {'type': 'IfStatement', 'name': 'if', 'range': [951, 958], 'children': [{'type': 'RaiseStatement', 'name': 'raise', 'range': [960, 967], 'children': []}]}, {'type': 'ElifStatement', 'name': 'elif', 'range': [969, 990], 'children': [{'type': 'RaiseStatement', 'name': 'raise', 'range': [992, 1001], 'children': []}]}, {'type': 'ElifStatement', 'name': 'elif', 'range': [1003, 1026], 'children': [{'type': 'RaiseStatement', 'name': 'raise', 'range': [1028, 1038], 'children': []}]}, {'type': 'IfStatement', 'name': 'if', 'range': [1040, 1042], 'children': [{'type': 'Assignment', 'name': 'credentials_input_type', 'range': [1054, 1065], 'children': []}, {'type': 'MethodCall', 'name': 'validate_credentials_field_schema', 'range': [1069, 1073], 'children': []}]}]}]}]}
2025-01-08 10:19:54,566 - INFO - Starting Step 3: AST simplification
2025-01-08 10:19:55,488 - INFO - Step 2 result: {'type': 'Program', 'name': '', 'range': [216, 310], 'children': [{'type': 'ClassDeclaration', 'name': 'BlockCategory', 'range': [216, 274], 'children': [{'type': 'EnumDeclaration', 'name': '', 'range': [219, 274], 'children': [{'type': 'EnumMember', 'name': 'AI', 'range': [223, 225], 'children': [{'type': 'StringLiteral', 'name': '"Block that leverages AI to perform a task."', 'range': [225, 225], 'children': []}]}, {'type': 'EnumMember', 'name': 'SOCIAL', 'range': [227, 229], 'children': [{'type': 'StringLiteral', 'name': '"Block that interacts with social media platforms."', 'range': [229, 229], 'children': []}]}, {'type': 'EnumMember', 'name': 'TEXT', 'range': [231, 233], 'children': [{'type': 'StringLiteral', 'name': '"Block that processes text data."', 'range': [233, 233], 'children': []}]}, {'type': 'EnumMember', 'name': 'SEARCH', 'range': [235, 237], 'children': [{'type': 'StringLiteral', 'name': '"Block that searches or extracts information from the internet."', 'range': [237, 237], 'children': []}]}, {'type': 'EnumMember', 'name': 'BASIC', 'range': [239, 241], 'children': [{'type': 'StringLiteral', 'name': '"Block that performs basic operations."', 'range': [241, 241], 'children': []}]}, {'type': 'EnumMember', 'name': 'INPUT', 'range': [243, 245], 'children': [{'type': 'StringLiteral', 'name': '"Block that interacts with input of the graph."', 'range': [245, 245], 'children': []}]}, {'type': 'EnumMember', 'name': 'OUTPUT', 'range': [247, 249], 'children': [{'type': 'StringLiteral', 'name': '"Block that interacts with output of the graph."', 'range': [249, 249], 'children': []}]}, {'type': 'EnumMember', 'name': 'LOGIC', 'range': [251, 253], 'children': [{'type': 'StringLiteral', 'name': '"Programming logic to control the flow of your agent"', 'range': [253, 253], 'children': []}]}, {'type': 'EnumMember', 'name': 'COMMUNICATION', 'range': [255, 257], 'children': [{'type': 'StringLiteral', 'name': '"Block that interacts with communication platforms."', 'range': [257, 257], 'children': []}]}, {'type': 'EnumMember', 'name': 'DEVELOPER_TOOLS', 'range': [259, 261], 'children': [{'type': 'StringLiteral', 'name': '"Developer tools such as GitHub blocks."', 'range': [261, 261], 'children': []}]}, {'type': 'EnumMember', 'name': 'DATA', 'range': [263, 265], 'children': [{'type': 'StringLiteral', 'name': '"Block that interacts with structured data."', 'range': [265, 265], 'children': []}]}, {'type': 'EnumMember', 'name': 'HARDWARE', 'range': [267, 269], 'children': [{'type': 'StringLiteral', 'name': '"Block that interacts with hardware."', 'range': [269, 269], 'children': []}]}, {'type': 'EnumMember', 'name': 'AGENT', 'range': [271, 273], 'children': [{'type': 'StringLiteral', 'name': '"Block that interacts with other agents."', 'range': [273, 273], 'children': []}]}, {'type': 'EnumMember', 'name': 'CRM', 'range': [275, 277], 'children': [{'type': 'StringLiteral', 'name': '"Block that interacts with CRM services."', 'range': [277, 277], 'children': []}]}]}]}, {'type': 'FunctionDeclaration', 'name': 'dict', 'range': [280, 310], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [283, 284], 'children': []}, {'type': 'ReturnType', 'name': 'dict[str, str]', 'range': [285, 292], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [293, 310], 'children': [{'type': 'ReturnStatement', 'name': '', 'range': [295, 308], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [296, 308], 'children': [{'type': 'Property', 'name': 'category', 'range': [297, 302], 'children': [{'type': 'Identifier', 'name': 'self.name', 'range': [299, 301], 'children': []}]}, {'type': 'Property', 'name': 'description', 'range': [303, 308], 'children': [{'type': 'Identifier', 'name': 'self.value', 'range': [305, 307], 'children': []}]}]}]}]}]}]}
2025-01-08 10:19:55,488 - INFO - Starting Step 3: AST simplification
2025-01-08 10:19:55,652 - INFO - Step 3 result: {'nodes': [{'type': 'VariableDeclaration', 'name': 'app_config', 'range': [86, 91], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [87, 90], 'children': [{'type': 'Identifier', 'name': 'Config', 'range': [88, 88], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'BlockData', 'range': [93, 117], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [94, 100], 'children': [{'type': 'TypeAnnotation', 'name': 'tuple', 'range': [95, 100], 'children': [{'type': 'TypeList', 'name': '', 'range': [96, 100], 'children': [{'type': 'Type', 'name': 'str', 'range': [97, 97], 'children': []}, {'type': 'Type', 'name': 'Any', 'range': [99, 99], 'children': []}]}]}]}]}, {'type': 'VariableDeclaration', 'name': 'BlockInput', 'range': [118, 136], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [119, 125], 'children': [{'type': 'TypeAnnotation', 'name': 'dict', 'range': [120, 125], 'children': [{'type': 'TypeList', 'name': '', 'range': [121, 125], 'children': [{'type': 'Type', 'name': 'str', 'range': [122, 122], 'children': []}, {'type': 'Type', 'name': 'Any', 'range': [124, 124], 'children': []}]}]}]}]}, {'type': 'VariableDeclaration', 'name': 'BlockOutput', 'range': [137, 157], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [138, 146], 'children': [{'type': 'TypeAnnotation', 'name': 'Generator', 'range': [139, 146], 'children': [{'type': 'TypeList', 'name': '', 'range': [140, 146], 'children': [{'type': 'Type', 'name': 'BlockData', 'range': [141, 141], 'children': []}, {'type': 'Type', 'name': 'None', 'range': [143, 143], 'children': []}, {'type': 'Type', 'name': 'None', 'range': [145, 145], 'children': []}]}]}]}]}, {'type': 'VariableDeclaration', 'name': 'CompletedBlockOutput', 'range': [158, 178], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [159, 168], 'children': [{'type': 'TypeAnnotation', 'name': 'dict', 'range': [160, 168], 'children': [{'type': 'TypeList', 'name': '', 'range': [161, 168], 'children': [{'type': 'Type', 'name': 'str', 'range': [162, 162], 'children': []}, {'type': 'Type', 'name': 'list', 'range': [164, 167], 'children': [{'type': 'Type', 'name': 'Any', 'range': [166, 166], 'children': []}]}]}]}]}]}]}
2025-01-08 10:19:55,652 - INFO - Starting Step 4: AST normalization
2025-01-08 10:20:01,834 - INFO - Step 5 result: {'type': 'Program', 'name': 'BlockType', 'range': [180, 215], 'children': [{'type': 'EnumDeclaration', 'name': 'STANDARD', 'range': [187, 189], 'children': [{'type': 'Literal', 'name': '"Standard"', 'range': [189, 189], 'children': []}]}, {'type': 'EnumDeclaration', 'name': 'INPUT', 'range': [191, 193], 'children': [{'type': 'Literal', 'name': '"Input"', 'range': [193, 193], 'children': []}]}, {'type': 'EnumDeclaration', 'name': 'OUTPUT', 'range': [195, 197], 'children': [{'type': 'Literal', 'name': '"Output"', 'range': [197, 197], 'children': []}]}, {'type': 'EnumDeclaration', 'name': 'NOTE', 'range': [199, 201], 'children': [{'type': 'Literal', 'name': '"Note"', 'range': [201, 201], 'children': []}]}, {'type': 'EnumDeclaration', 'name': 'WEBHOOK', 'range': [203, 205], 'children': [{'type': 'Literal', 'name': '"Webhook"', 'range': [205, 205], 'children': []}]}, {'type': 'EnumDeclaration', 'name': 'WEBHOOK_MANUAL', 'range': [207, 209], 'children': [{'type': 'Literal', 'name': '"Webhook (manual)"', 'range': [209, 209], 'children': []}]}, {'type': 'EnumDeclaration', 'name': 'AGENT', 'range': [211, 213], 'children': [{'type': 'Literal', 'name': '"Agent"', 'range': [213, 213], 'children': []}]}]}
2025-01-08 10:20:01,834 - INFO - Completed main AST analysis flow
2025-01-08 10:20:01,834 - INFO - Successfully processed chunk
2025-01-08 10:20:03,062 - INFO - Step 5 result: {'type': 'Program', 'name': 'BlockManualWebhookConfig', 'range': [1108, 1170], 'children': [{'type': 'ClassDecl', 'name': 'BlockManualWebhookConfig', 'range': [1108, 1170], 'children': [{'type': 'Inheritance', 'name': 'BaseModel', 'range': [1110, 1112], 'children': []}, {'type': 'Docstring', 'name': '', 'range': [1115, 1117], 'children': []}, {'type': 'FieldDecl', 'name': 'provider', 'range': [1120, 1127], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1121, 1122], 'children': []}, {'type': 'Docstring', 'name': '', 'range': [1124, 1126], 'children': []}]}, {'type': 'FieldDecl', 'name': 'webhook_type', 'range': [1129, 1136], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1130, 1131], 'children': []}, {'type': 'Docstring', 'name': '', 'range': [1133, 1135], 'children': []}]}, {'type': 'FieldDecl', 'name': 'event_filter_input', 'range': [1138, 1147], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1139, 1140], 'children': []}, {'type': 'DefaultValue', 'name': '""', 'range': [1141, 1142], 'children': []}, {'type': 'Docstring', 'name': '', 'range': [1144, 1146], 'children': []}]}, {'type': 'FieldDecl', 'name': 'event_format', 'range': [1149, 1168], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1150, 1151], 'children': []}, {'type': 'DefaultValue', 'name': '"{event}"', 'range': [1152, 1153], 'children': []}, {'type': 'Docstring', 'name': '', 'range': [1155, 1167], 'children': []}]}]}]}
2025-01-08 10:20:03,062 - INFO - Completed main AST analysis flow
2025-01-08 10:20:03,063 - INFO - Successfully processed chunk
2025-01-08 10:20:08,717 - INFO - Step 2 result: {'type': 'Program', 'name': '', 'range': [2210, 2543], 'children': [{'type': 'FunctionDeclaration', 'name': 'get_blocks', 'range': [2210, 2241], 'children': [{'type': 'ReturnStatement', 'name': '', 'range': [2239, 2241], 'children': [{'type': 'Identifier', 'name': 'AVAILABLE_BLOCKS', 'range': [2240, 2241], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [2227, 2237], 'children': [{'type': 'ImportSpecifier', 'name': 'AVAILABLE_BLOCKS', 'range': [2232, 2237], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': 'initialize_blocks', 'range': [2244, 2507], 'children': [{'type': 'ForStatement', 'name': '', 'range': [2254, 2380], 'children': [{'type': 'VariableDeclaration', 'name': 'cls', 'range': [2255, 2257], 'children': []}, {'type': 'CallExpression', 'name': 'get_blocks', 'range': [2257, 2263], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [2264, 2380], 'children': [{'type': 'VariableDeclaration', 'name': 'block', 'range': [2266, 2271], 'children': [{'type': 'NewExpression', 'name': 'cls', 'range': [2268, 2271], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'existing_block', 'range': [2272, 2309], 'children': [{'type': 'AwaitExpression', 'name': '', 'range': [2274, 2309], 'children': [{'type': 'CallExpression', 'name': 'find_first', 'range': [2281, 2308], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [2286, 2306], 'children': [{'type': 'Property', 'name': 'OR', 'range': [2287, 2305], 'children': [{'type': 'ArrayExpression', 'name': '', 'range': [2289, 2305], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [2290, 2296], 'children': [{'type': 'Property', 'name': 'id', 'range': [2291, 2296], 'children': [{'type': 'Identifier', 'name': 'block.id', 'range': [2293, 2296], 'children': []}]}]}, {'type': 'ObjectExpression', 'name': '', 'range': [2298, 2304], 'children': [{'type': 'Property', 'name': 'name', 'range': [2299, 2304], 'children': [{'type': 'Identifier', 'name': 'block.name', 'range': [2301, 2304], 'children': []}]}]}]}]}]}]}]}]}, {'type': 'IfStatement', 'name': '', 'range': [2310, 2378], 'children': [{'type': 'UnaryExpression', 'name': 'not', 'range': [2311, 2312], 'children': [{'type': 'Identifier', 'name': 'existing_block', 'range': [2312, 2313], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [2314, 2378], 'children': [{'type': 'ExpressionStatement', 'name': '', 'range': [2315, 2378], 'children': [{'type': 'AwaitExpression', 'name': '', 'range': [2315, 2378], 'children': [{'type': 'CallExpression', 'name': 'create', 'range': [2322, 2377], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [2327, 2375], 'children': [{'type': 'Property', 'name': 'id', 'range': [2329, 2334], 'children': [{'type': 'Identifier', 'name': 'block.id', 'range': [2331, 2334], 'children': []}]}, {'type': 'Property', 'name': 'name', 'range': [2336, 2341], 'children': [{'type': 'Identifier', 'name': 'block.name', 'range': [2338, 2341], 'children': []}]}, {'type': 'Property', 'name': 'inputSchema', 'range': [2343, 2357], 'children': [{'type': 'CallExpression', 'name': 'dumps', 'range': [2347, 2356], 'children': [{'type': 'CallExpression', 'name': 'jsonschema', 'range': [2353, 2356], 'children': []}]}]}, {'type': 'Property', 'name': 'outputSchema', 'range': [2359, 2373], 'children': [{'type': 'CallExpression', 'name': 'dumps', 'range': [2363, 2372], 'children': [{'type': 'CallExpression', 'name': 'jsonschema', 'range': [2369, 2372], 'children': []}]}]}]}]}]}]}]}]}]}]}, {'type': 'IfStatement', 'name': '', 'range': [2412, 2506], 'children': [{'type': 'LogicalExpression', 'name': 'or', 'range': [2413, 2450], 'children': [{'type': 'BinaryExpression', 'name': '!=', 'range': [2418, 2423], 'children': [{'type': 'Identifier', 'name': 'block.id', 'range': [2416, 2423], 'children': []}, {'type': 'Identifier', 'name': 'existing_block.id', 'range': [2420, 2423], 'children': []}]}, {'type': 'BinaryExpression', 'name': '!=', 'range': [2428, 2433], 'children': [{'type': 'Identifier', 'name': 'block.name', 'range': [2426, 2433], 'children': []}, {'type': 'Identifier', 'name': 'existing_block.name', 'range': [2430, 2433], 'children': []}]}, {'type': 'BinaryExpression', 'name': '!=', 'range': [2438, 2441], 'children': [{'type': 'Identifier', 'name': 'input_schema', 'range': [2435, 2441], 'children': []}, {'type': 'Identifier', 'name': 'existing_block.inputSchema', 'range': [2438, 2441], 'children': []}]}, {'type': 'BinaryExpression', 'name': '!=', 'range': [2446, 2449], 'children': [{'type': 'Identifier', 'name': 'output_schema', 'range': [2443, 2449], 'children': []}, {'type': 'Identifier', 'name': 'existing_block.outputSchema', 'range': [2446, 2449], 'children': []}]}]}, {'type': 'BlockStatement', 'name': '', 'range': [2452, 2506], 'children': [{'type': 'ExpressionStatement', 'name': '', 'range': [2453, 2506], 'children': [{'type': 'AwaitExpression', 'name': '', 'range': [2453, 2506], 'children': [{'type': 'CallExpression', 'name': 'update', 'range': [2460, 2505], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [2465, 2471], 'children': [{'type': 'Property', 'name': 'id', 'range': [2466, 2471], 'children': [{'type': 'Identifier', 'name': 'existing_block.id', 'range': [2468, 2471], 'children': []}]}]}, {'type': 'ObjectExpression', 'name': '', 'range': [2476, 2502], 'children': [{'type': 'Property', 'name': 'id', 'range': [2478, 2483], 'children': [{'type': 'Identifier', 'name': 'block.id', 'range': [2480, 2483], 'children': []}]}, {'type': 'Property', 'name': 'name', 'range': [2485, 2490], 'children': [{'type': 'Identifier', 'name': 'block.name', 'range': [2487, 2490], 'children': []}]}, {'type': 'Property', 'name': 'inputSchema', 'range': [2492, 2495], 'children': [{'type': 'Identifier', 'name': 'input_schema', 'range': [2494, 2495], 'children': []}]}, {'type': 'Property', 'name': 'outputSchema', 'range': [2497, 2500], 'children': [{'type': 'Identifier', 'name': 'output_schema', 'range': [2499, 2500], 'children': []}]}]}]}]}]}]}]}]}, {'type': 'FunctionDeclaration', 'name': 'get_block', 'range': [2509, 2543], 'children': [{'type': 'VariableDeclaration', 'name': 'cls', 'range': [2523, 2533], 'children': [{'type': 'CallExpression', 'name': 'get', 'range': [2529, 2533], 'children': [{'type': 'Identifier', 'name': 'block_id', 'range': [2531, 2533], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [2534, 2542], 'children': [{'type': 'ConditionalExpression', 'name': '', 'range': [2535, 2542], 'children': [{'type': 'Identifier', 'name': 'cls', 'range': [2535, 2539], 'children': []}, {'type': 'NewExpression', 'name': 'cls', 'range': [2536, 2539], 'children': []}, {'type': 'Identifier', 'name': 'None', 'range': [2541, 2542], 'children': []}]}]}]}]}
2025-01-08 10:20:08,717 - INFO - Starting Step 3: AST simplification
2025-01-08 10:20:10,515 - INFO - Step 3 result: {'nodes': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 2], 'children': [{'type': 'ImportSpecifier', 'name': 'inspect', 'range': [0, 2], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [3, 9], 'children': [{'type': 'ImportSpecifier', 'name': 'abc', 'range': [3, 5], 'children': []}, {'type': 'ImportSpecifier', 'name': 'ABC', 'range': [5, 6], 'children': []}, {'type': 'ImportSpecifier', 'name': 'abstractmethod', 'range': [6, 8], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [10, 14], 'children': [{'type': 'ImportSpecifier', 'name': 'enum', 'range': [10, 12], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Enum', 'range': [12, 13], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [15, 48], 'children': [{'type': 'ImportSpecifier', 'name': 'typing', 'range': [15, 17], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Any', 'range': [18, 20], 'children': []}, {'type': 'ImportSpecifier', 'name': 'ClassVar', 'range': [22, 23], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Generator', 'range': [25, 26], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Generic', 'range': [28, 29], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Optional', 'range': [31, 32], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Type', 'range': [34, 35], 'children': []}, {'type': 'ImportSpecifier', 'name': 'TypeVar', 'range': [37, 38], 'children': []}, {'type': 'ImportSpecifier', 'name': 'cast', 'range': [40, 41], 'children': []}, {'type': 'ImportSpecifier', 'name': 'get_origin', 'range': [43, 44], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [50, 52], 'children': [{'type': 'ImportSpecifier', 'name': 'jsonref', 'range': [50, 51], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [53, 55], 'children': [{'type': 'ImportSpecifier', 'name': 'jsonschema', 'range': [53, 54], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [56, 62], 'children': [{'type': 'ImportSpecifier', 'name': 'prisma', 'range': [56, 58], 'children': []}, {'type': 'ImportSpecifier', 'name': 'models', 'range': [58, 60], 'children': []}, {'type': 'ImportSpecifier', 'name': 'AgentBlock', 'range': [60, 61], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [63, 67], 'children': [{'type': 'ImportSpecifier', 'name': 'pydantic', 'range': [63, 65], 'children': []}, {'type': 'ImportSpecifier', 'name': 'BaseModel', 'range': [65, 66], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [69, 75], 'children': [{'type': 'ImportSpecifier', 'name': 'backend', 'range': [69, 71], 'children': []}, {'type': 'ImportSpecifier', 'name': 'util', 'range': [71, 73], 'children': []}, {'type': 'ImportSpecifier', 'name': 'json', 'range': [73, 74], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [76, 84], 'children': [{'type': 'ImportSpecifier', 'name': 'backend', 'range': [76, 78], 'children': []}, {'type': 'ImportSpecifier', 'name': 'util', 'range': [78, 80], 'children': []}, {'type': 'ImportSpecifier', 'name': 'settings', 'range': [80, 82], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Config', 'range': [82, 83], 'children': []}]}]}
2025-01-08 10:20:10,516 - INFO - Starting Step 4: AST normalization
2025-01-08 10:20:14,102 - INFO - Step 4 result: {'nodes': [{'type': 'VariableDeclaration', 'name': 'app_config', 'range': [86, 91], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [87, 90], 'children': [{'type': 'Identifier', 'name': 'Config', 'range': [88, 88], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'BlockData', 'range': [93, 117], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [94, 100], 'children': [{'type': 'TypeAnnotation', 'name': 'tuple', 'range': [95, 100], 'children': [{'type': 'TypeList', 'name': '', 'range': [96, 100], 'children': [{'type': 'Type', 'name': 'str', 'range': [97, 97], 'children': []}, {'type': 'Type', 'name': 'Any', 'range': [99, 99], 'children': []}]}]}]}]}, {'type': 'VariableDeclaration', 'name': 'BlockInput', 'range': [118, 136], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [119, 125], 'children': [{'type': 'TypeAnnotation', 'name': 'dict', 'range': [120, 125], 'children': [{'type': 'TypeList', 'name': '', 'range': [121, 125], 'children': [{'type': 'Type', 'name': 'str', 'range': [122, 122], 'children': []}, {'type': 'Type', 'name': 'Any', 'range': [124, 124], 'children': []}]}]}]}]}, {'type': 'VariableDeclaration', 'name': 'BlockOutput', 'range': [137, 157], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [138, 146], 'children': [{'type': 'TypeAnnotation', 'name': 'Generator', 'range': [139, 146], 'children': [{'type': 'TypeList', 'name': '', 'range': [140, 146], 'children': [{'type': 'Type', 'name': 'BlockData', 'range': [141, 141], 'children': []}, {'type': 'Type', 'name': 'None', 'range': [143, 143], 'children': []}, {'type': 'Type', 'name': 'None', 'range': [145, 145], 'children': []}]}]}]}]}, {'type': 'VariableDeclaration', 'name': 'CompletedBlockOutput', 'range': [158, 178], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [159, 168], 'children': [{'type': 'TypeAnnotation', 'name': 'dict', 'range': [160, 168], 'children': [{'type': 'TypeList', 'name': '', 'range': [161, 168], 'children': [{'type': 'Type', 'name': 'str', 'range': [162, 162], 'children': []}, {'type': 'Type', 'name': 'list', 'range': [164, 167], 'children': [{'type': 'Type', 'name': 'Any', 'range': [166, 166], 'children': []}]}]}]}]}]}]}
2025-01-08 10:20:14,102 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:20:23,896 - INFO - Step 3 result: {'type': 'Program', 'name': '', 'range': [216, 310], 'children': [{'type': 'ClassDeclaration', 'name': 'BlockCategory', 'range': [216, 274], 'children': [{'type': 'EnumDeclaration', 'name': '', 'range': [219, 274], 'children': [{'type': 'EnumMember', 'name': 'AI', 'range': [223, 225], 'children': [{'type': 'StringLiteral', 'name': '"Block that leverages AI to perform a task."', 'range': [225, 225], 'children': []}]}, {'type': 'EnumMember', 'name': 'SOCIAL', 'range': [227, 229], 'children': [{'type': 'StringLiteral', 'name': '"Block that interacts with social media platforms."', 'range': [229, 229], 'children': []}]}, {'type': 'EnumMember', 'name': 'TEXT', 'range': [231, 233], 'children': [{'type': 'StringLiteral', 'name': '"Block that processes text data."', 'range': [233, 233], 'children': []}]}, {'type': 'EnumMember', 'name': 'SEARCH', 'range': [235, 237], 'children': [{'type': 'StringLiteral', 'name': '"Block that searches or extracts information from the internet."', 'range': [237, 237], 'children': []}]}, {'type': 'EnumMember', 'name': 'BASIC', 'range': [239, 241], 'children': [{'type': 'StringLiteral', 'name': '"Block that performs basic operations."', 'range': [241, 241], 'children': []}]}, {'type': 'EnumMember', 'name': 'INPUT', 'range': [243, 245], 'children': [{'type': 'StringLiteral', 'name': '"Block that interacts with input of the graph."', 'range': [245, 245], 'children': []}]}, {'type': 'EnumMember', 'name': 'OUTPUT', 'range': [247, 249], 'children': [{'type': 'StringLiteral', 'name': '"Block that interacts with output of the graph."', 'range': [249, 249], 'children': []}]}, {'type': 'EnumMember', 'name': 'LOGIC', 'range': [251, 253], 'children': [{'type': 'StringLiteral', 'name': '"Programming logic to control the flow of your agent"', 'range': [253, 253], 'children': []}]}, {'type': 'EnumMember', 'name': 'COMMUNICATION', 'range': [255, 257], 'children': [{'type': 'StringLiteral', 'name': '"Block that interacts with communication platforms."', 'range': [257, 257], 'children': []}]}, {'type': 'EnumMember', 'name': 'DEVELOPER_TOOLS', 'range': [259, 261], 'children': [{'type': 'StringLiteral', 'name': '"Developer tools such as GitHub blocks."', 'range': [261, 261], 'children': []}]}, {'type': 'EnumMember', 'name': 'DATA', 'range': [263, 265], 'children': [{'type': 'StringLiteral', 'name': '"Block that interacts with structured data."', 'range': [265, 265], 'children': []}]}, {'type': 'EnumMember', 'name': 'HARDWARE', 'range': [267, 269], 'children': [{'type': 'StringLiteral', 'name': '"Block that interacts with hardware."', 'range': [269, 269], 'children': []}]}, {'type': 'EnumMember', 'name': 'AGENT', 'range': [271, 273], 'children': [{'type': 'StringLiteral', 'name': '"Block that interacts with other agents."', 'range': [273, 273], 'children': []}]}, {'type': 'EnumMember', 'name': 'CRM', 'range': [275, 277], 'children': [{'type': 'StringLiteral', 'name': '"Block that interacts with CRM services."', 'range': [277, 277], 'children': []}]}]}]}, {'type': 'FunctionDeclaration', 'name': 'dict', 'range': [280, 310], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [283, 284], 'children': []}, {'type': 'ReturnType', 'name': 'dict[str, str]', 'range': [285, 292], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [293, 310], 'children': [{'type': 'ReturnStatement', 'name': '', 'range': [295, 308], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [296, 308], 'children': [{'type': 'Property', 'name': 'category', 'range': [297, 302], 'children': [{'type': 'Identifier', 'name': 'self.name', 'range': [299, 301], 'children': []}]}, {'type': 'Property', 'name': 'description', 'range': [303, 308], 'children': [{'type': 'Identifier', 'name': 'self.value', 'range': [305, 307], 'children': []}]}]}]}]}]}]}
2025-01-08 10:20:23,896 - INFO - Starting Step 4: AST normalization
2025-01-08 10:20:29,954 - INFO - Step 3 result: {'type': 'Program', 'name': 'BlockSchema', 'range': [311, 1074], 'children': [{'type': 'ClassDeclaration', 'name': 'BlockSchema', 'range': [311, 1074], 'children': [{'type': 'ClassVariableDeclaration', 'name': 'cached_jsonschema', 'range': [318, 328], 'children': [{'type': 'TypeAnnotation', 'name': 'ClassVar', 'range': [320, 328], 'children': [{'type': 'GenericType', 'name': 'dict', 'range': [322, 328], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [324, 326], 'children': []}, {'type': 'TypeAnnotation', 'name': 'Any', 'range': [326, 328], 'children': []}]}]}]}, {'type': 'FunctionDeclaration', 'name': 'jsonschema', 'range': [334, 624], 'children': [{'type': 'ReturnType', 'name': 'dict', 'range': [341, 346], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [343, 345], 'children': []}, {'type': 'TypeAnnotation', 'name': 'Any', 'range': [345, 346], 'children': []}]}, {'type': 'IfStatement', 'name': 'if', 'range': [349, 359], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [355, 359], 'children': []}]}, {'type': 'Assignment', 'name': 'model', 'range': [361, 376], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'ref_to_dict', 'range': [379, 550], 'children': [{'type': 'IfStatement', 'name': 'if', 'range': [386, 393], 'children': []}, {'type': 'ReturnStatement', 'name': 'return', 'range': [489, 524], 'children': []}, {'type': 'ElifStatement', 'name': 'elif', 'range': [526, 533], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [535, 546], 'children': []}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [548, 550], 'children': []}]}, {'type': 'Assignment', 'name': 'cls.cached_jsonschema', 'range': [552, 570], 'children': []}, {'type': 'ForStatement', 'name': 'for', 'range': [578, 618], 'children': [{'type': 'IfStatement', 'name': 'if', 'range': [598, 610], 'children': []}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [620, 624], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': 'validate_data', 'range': [629, 662], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [645, 662], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': 'validate_field', 'range': [667, 769], 'children': [{'type': 'IfStatement', 'name': 'if', 'range': [707, 710], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [712, 715], 'children': []}]}, {'type': 'Assignment', 'name': 'property_schema', 'range': [717, 725], 'children': []}, {'type': 'IfStatement', 'name': 'if', 'range': [726, 729], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [731, 734], 'children': []}]}, {'type': 'TryStatement', 'name': 'try', 'range': [736, 769], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [753, 755], 'children': []}, {'type': 'ExceptStatement', 'name': 'except', 'range': [756, 769], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [764, 769], 'children': []}]}]}]}, {'type': 'FunctionDeclaration', 'name': 'get_fields', 'range': [774, 798], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [787, 798], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': 'get_required_fields', 'range': [803, 842], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [816, 842], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': '__pydantic_init_subclass__', 'range': [847, 1074], 'children': [{'type': 'SuperCall', 'name': 'super', 'range': [862, 871], 'children': []}, {'type': 'Assignment', 'name': 'cls.cached_jsonschema', 'range': [887, 893], 'children': []}, {'type': 'ListComprehension', 'name': 'credentials_fields', 'range': [895, 950], 'children': []}, {'type': 'IfStatement', 'name': 'if', 'range': [951, 958], 'children': [{'type': 'RaiseStatement', 'name': 'raise', 'range': [960, 967], 'children': []}]}, {'type': 'ElifStatement', 'name': 'elif', 'range': [969, 990], 'children': [{'type': 'RaiseStatement', 'name': 'raise', 'range': [992, 1001], 'children': []}]}, {'type': 'ElifStatement', 'name': 'elif', 'range': [1003, 1026], 'children': [{'type': 'RaiseStatement', 'name': 'raise', 'range': [1028, 1038], 'children': []}]}, {'type': 'IfStatement', 'name': 'if', 'range': [1040, 1042], 'children': [{'type': 'Assignment', 'name': 'credentials_input_type', 'range': [1054, 1065], 'children': []}, {'type': 'MethodCall', 'name': 'validate_credentials_field_schema', 'range': [1069, 1073], 'children': []}]}]}]}]}
2025-01-08 10:20:29,954 - INFO - Starting Step 4: AST normalization
2025-01-08 10:20:32,708 - INFO - Step 5 result: {'nodes': [{'type': 'Program', 'name': 'MainProgram', 'range': [86, 178], 'children': [{'type': 'VariableDeclaration', 'name': 'app_config', 'range': [86, 91], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [87, 90], 'children': [{'type': 'Identifier', 'name': 'Config', 'range': [88, 88], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'BlockData', 'range': [93, 117], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [94, 100], 'children': [{'type': 'TypeAnnotation', 'name': 'tuple', 'range': [95, 100], 'children': [{'type': 'TypeList', 'name': '', 'range': [96, 100], 'children': [{'type': 'Type', 'name': 'str', 'range': [97, 97], 'children': []}, {'type': 'Type', 'name': 'Any', 'range': [99, 99], 'children': []}]}]}]}]}, {'type': 'VariableDeclaration', 'name': 'BlockInput', 'range': [118, 136], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [119, 125], 'children': [{'type': 'TypeAnnotation', 'name': 'dict', 'range': [120, 125], 'children': [{'type': 'TypeList', 'name': '', 'range': [121, 125], 'children': [{'type': 'Type', 'name': 'str', 'range': [122, 122], 'children': []}, {'type': 'Type', 'name': 'Any', 'range': [124, 124], 'children': []}]}]}]}]}, {'type': 'VariableDeclaration', 'name': 'BlockOutput', 'range': [137, 157], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [138, 146], 'children': [{'type': 'TypeAnnotation', 'name': 'Generator', 'range': [139, 146], 'children': [{'type': 'TypeList', 'name': '', 'range': [140, 146], 'children': [{'type': 'Type', 'name': 'BlockData', 'range': [141, 141], 'children': []}, {'type': 'Type', 'name': 'None', 'range': [143, 143], 'children': []}, {'type': 'Type', 'name': 'None', 'range': [145, 145], 'children': []}]}]}]}]}, {'type': 'VariableDeclaration', 'name': 'CompletedBlockOutput', 'range': [158, 178], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [159, 168], 'children': [{'type': 'TypeAnnotation', 'name': 'dict', 'range': [160, 168], 'children': [{'type': 'TypeList', 'name': '', 'range': [161, 168], 'children': [{'type': 'Type', 'name': 'str', 'range': [162, 162], 'children': []}, {'type': 'Type', 'name': 'list', 'range': [164, 167], 'children': [{'type': 'Type', 'name': 'Any', 'range': [166, 166], 'children': []}]}]}]}]}]}]}]}
2025-01-08 10:20:32,708 - INFO - Completed main AST analysis flow
2025-01-08 10:20:32,709 - INFO - Successfully processed chunk
2025-01-08 10:20:36,489 - INFO - Step 4 result: {'nodes': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 2], 'children': [{'type': 'ImportSpecifier', 'name': 'inspect', 'range': [0, 2], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [3, 9], 'children': [{'type': 'ImportSpecifier', 'name': 'abc', 'range': [3, 5], 'children': []}, {'type': 'ImportSpecifier', 'name': 'ABC', 'range': [5, 6], 'children': []}, {'type': 'ImportSpecifier', 'name': 'abstractmethod', 'range': [6, 8], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [10, 14], 'children': [{'type': 'ImportSpecifier', 'name': 'enum', 'range': [10, 12], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Enum', 'range': [12, 13], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [15, 48], 'children': [{'type': 'ImportSpecifier', 'name': 'typing', 'range': [15, 17], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Any', 'range': [18, 20], 'children': []}, {'type': 'ImportSpecifier', 'name': 'ClassVar', 'range': [22, 23], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Generator', 'range': [25, 26], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Generic', 'range': [28, 29], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Optional', 'range': [31, 32], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Type', 'range': [34, 35], 'children': []}, {'type': 'ImportSpecifier', 'name': 'TypeVar', 'range': [37, 38], 'children': []}, {'type': 'ImportSpecifier', 'name': 'cast', 'range': [40, 41], 'children': []}, {'type': 'ImportSpecifier', 'name': 'get_origin', 'range': [43, 44], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [50, 52], 'children': [{'type': 'ImportSpecifier', 'name': 'jsonref', 'range': [50, 51], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [53, 55], 'children': [{'type': 'ImportSpecifier', 'name': 'jsonschema', 'range': [53, 54], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [56, 62], 'children': [{'type': 'ImportSpecifier', 'name': 'prisma', 'range': [56, 58], 'children': []}, {'type': 'ImportSpecifier', 'name': 'models', 'range': [58, 60], 'children': []}, {'type': 'ImportSpecifier', 'name': 'AgentBlock', 'range': [60, 61], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [63, 67], 'children': [{'type': 'ImportSpecifier', 'name': 'pydantic', 'range': [63, 65], 'children': []}, {'type': 'ImportSpecifier', 'name': 'BaseModel', 'range': [65, 66], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [69, 75], 'children': [{'type': 'ImportSpecifier', 'name': 'backend', 'range': [69, 71], 'children': []}, {'type': 'ImportSpecifier', 'name': 'util', 'range': [71, 73], 'children': []}, {'type': 'ImportSpecifier', 'name': 'json', 'range': [73, 74], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [76, 84], 'children': [{'type': 'ImportSpecifier', 'name': 'backend', 'range': [76, 78], 'children': []}, {'type': 'ImportSpecifier', 'name': 'util', 'range': [78, 80], 'children': []}, {'type': 'ImportSpecifier', 'name': 'settings', 'range': [80, 82], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Config', 'range': [82, 83], 'children': []}]}]}
2025-01-08 10:20:36,490 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:20:51,125 - INFO - Step 2 result: {'type': 'Program', 'name': 'Block', 'range': [1210, 2209], 'children': [{'type': 'FunctionDeclaration', 'name': '__init__', 'range': [1224, 1538], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1228, 1232], 'children': []}, {'type': 'Parameter', 'name': 'id', 'range': [1231, 1235], 'children': []}, {'type': 'Parameter', 'name': 'description', 'range': [1238, 1242], 'children': []}, {'type': 'Parameter', 'name': 'contributors', 'range': [1245, 1253], 'children': []}, {'type': 'Parameter', 'name': 'categories', 'range': [1256, 1265], 'children': []}, {'type': 'Parameter', 'name': 'input_schema', 'range': [1268, 1275], 'children': []}, {'type': 'Parameter', 'name': 'output_schema', 'range': [1278, 1285], 'children': []}, {'type': 'Parameter', 'name': 'test_input', 'range': [1288, 1299], 'children': []}, {'type': 'Parameter', 'name': 'test_output', 'range': [1302, 1313], 'children': []}, {'type': 'Parameter', 'name': 'test_mock', 'range': [1316, 1327], 'children': []}, {'type': 'Parameter', 'name': 'test_credentials', 'range': [1330, 1337], 'children': []}, {'type': 'Parameter', 'name': 'disabled', 'range': [1340, 1344], 'children': []}, {'type': 'Parameter', 'name': 'static_output', 'range': [1347, 1351], 'children': []}, {'type': 'Parameter', 'name': 'block_type', 'range': [1354, 1361], 'children': []}, {'type': 'Parameter', 'name': 'webhook_config', 'range': [1363, 1372], 'children': []}, {'type': 'Block', 'name': 'init_block', 'range': [1375, 1538], 'children': [{'type': 'Assignment', 'name': 'self.id', 'range': [1382, 1386], 'children': []}, {'type': 'Assignment', 'name': 'self.input_schema', 'range': [1388, 1392], 'children': []}, {'type': 'Assignment', 'name': 'self.output_schema', 'range': [1394, 1398], 'children': []}, {'type': 'Assignment', 'name': 'self.test_input', 'range': [1400, 1404], 'children': []}, {'type': 'Assignment', 'name': 'self.test_output', 'range': [1406, 1410], 'children': []}, {'type': 'Assignment', 'name': 'self.test_mock', 'range': [1412, 1416], 'children': []}, {'type': 'Assignment', 'name': 'self.test_credentials', 'range': [1418, 1422], 'children': []}, {'type': 'Assignment', 'name': 'self.description', 'range': [1424, 1428], 'children': []}, {'type': 'Assignment', 'name': 'self.categories', 'range': [1430, 1439], 'children': []}, {'type': 'Assignment', 'name': 'self.contributors', 'range': [1440, 1449], 'children': []}, {'type': 'Assignment', 'name': 'self.disabled', 'range': [1450, 1454], 'children': []}, {'type': 'Assignment', 'name': 'self.static_output', 'range': [1456, 1460], 'children': []}, {'type': 'Assignment', 'name': 'self.block_type', 'range': [1462, 1466], 'children': []}, {'type': 'Assignment', 'name': 'self.webhook_config', 'range': [1468, 1472], 'children': []}, {'type': 'Assignment', 'name': 'self.execution_stats', 'range': [1474, 1480], 'children': []}, {'type': 'IfStatement', 'name': 'if_webhook_config', 'range': [1482, 1538], 'children': [{'type': 'Condition', 'name': 'self.webhook_config', 'range': [1483, 1486], 'children': []}, {'type': 'Block', 'name': 'if_block', 'range': [1487, 1538], 'children': [{'type': 'IfStatement', 'name': 'if_isinstance_BlockWebhookConfig', 'range': [1488, 1538], 'children': [{'type': 'Condition', 'name': 'isinstance(self.webhook_config, BlockWebhookConfig)', 'range': [1489, 1496], 'children': []}, {'type': 'Block', 'name': 'if_block', 'range': [1497, 1538], 'children': [{'type': 'IfStatement', 'name': 'if_CREDENTIALS_FIELD_NAME_not_in_self.input_schema.model_fields', 'range': [1512, 1530], 'children': [{'type': 'Condition', 'name': 'CREDENTIALS_FIELD_NAME not in self.input_schema.model_fields', 'range': [1513, 1521], 'children': []}, {'type': 'Block', 'name': 'if_block', 'range': [1522, 1530], 'children': [{'type': 'RaiseStatement', 'name': 'raise_TypeError', 'range': [1523, 1529], 'children': []}]}]}, {'type': 'Assignment', 'name': 'self.block_type', 'range': [1531, 1538], 'children': []}]}, {'type': 'ElseStatement', 'name': 'else', 'range': [1539, 1549], 'children': [{'type': 'Assignment', 'name': 'self.block_type', 'range': [1542, 1549], 'children': []}]}]}]}]}]}]}, {'type': 'FunctionDeclaration', 'name': 'create', 'range': [1704, 1726], 'children': [{'type': 'Parameter', 'name': 'cls', 'range': [1710, 1715], 'children': []}, {'type': 'Block', 'name': 'create_block', 'range': [1721, 1726], 'children': [{'type': 'ReturnStatement', 'name': 'return_cls', 'range': [1722, 1726], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'run', 'range': [1730, 1754], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1734, 1738], 'children': []}, {'type': 'Parameter', 'name': 'input_data', 'range': [1736, 1742], 'children': []}, {'type': 'Parameter', 'name': 'kwargs', 'range': [1741, 1743], 'children': []}, {'type': 'Block', 'name': 'run_block', 'range': [1747, 1754], 'children': [{'type': 'PassStatement', 'name': 'pass', 'range': [1753, 1754], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'run_once', 'range': [1756, 1811], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1759, 1763], 'children': []}, {'type': 'Parameter', 'name': 'input_data', 'range': [1761, 1767], 'children': []}, {'type': 'Parameter', 'name': 'output', 'range': [1765, 1771], 'children': []}, {'type': 'Parameter', 'name': 'kwargs', 'range': [1770, 1772], 'children': []}, {'type': 'Block', 'name': 'run_once_block', 'range': [1776, 1811], 'children': [{'type': 'ForStatement', 'name': 'for_name_data_in_self.run', 'range': [1778, 1804], 'children': [{'type': 'Iteration', 'name': 'name, data in self.run(input_data, **kwargs)', 'range': [1779, 1793], 'children': []}, {'type': 'Block', 'name': 'for_block', 'range': [1794, 1804], 'children': [{'type': 'IfStatement', 'name': 'if_name_eq_output', 'range': [1795, 1800], 'children': [{'type': 'Condition', 'name': 'name == output', 'range': [1796, 1799], 'children': []}, {'type': 'Block', 'name': 'if_block', 'range': [1800, 1804], 'children': [{'type': 'ReturnStatement', 'name': 'return_data', 'range': [1802, 1804], 'children': []}]}]}]}]}, {'type': 'RaiseStatement', 'name': 'raise_ValueError', 'range': [1805, 1811], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'merge_stats', 'range': [1813, 1958], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1816, 1820], 'children': []}, {'type': 'Parameter', 'name': 'stats', 'range': [1818, 1825], 'children': []}, {'type': 'Block', 'name': 'merge_stats_block', 'range': [1829, 1958], 'children': [{'type': 'ForStatement', 'name': 'for_key_value_in_stats.items', 'range': [1831, 1954], 'children': [{'type': 'Iteration', 'name': 'key, value in stats.items()', 'range': [1832, 1845], 'children': []}, {'type': 'Block', 'name': 'for_block', 'range': [1846, 1954], 'children': [{'type': 'IfStatement', 'name': 'if_isinstance_value_dict', 'range': [1847, 1874], 'children': [{'type': 'Condition', 'name': 'isinstance(value, dict)', 'range': [1848, 1855], 'children': []}, {'type': 'Block', 'name': 'if_block', 'range': [1856, 1874], 'children': [{'type': 'Assignment', 'name': 'self.execution_stats.setdefault(key, {}).update(value)', 'range': [1858, 1874], 'children': []}]}]}, {'type': 'ElseIfStatement', 'name': 'elif_isinstance_value_int_float', 'range': [1875, 1908], 'children': [{'type': 'Condition', 'name': 'isinstance(value, (int, float))', 'range': [1876, 1885], 'children': []}, {'type': 'Block', 'name': 'elif_block', 'range': [1886, 1908], 'children': [{'type': 'Assignment', 'name': 'self.execution_stats.setdefault(key, 0)', 'range': [1888, 1897], 'children': []}, {'type': 'Assignment', 'name': 'self.execution_stats[key] += value', 'range': [1899, 1908], 'children': []}]}]}, {'type': 'ElseIfStatement', 'name': 'elif_isinstance_value_list', 'range': [1909, 1941], 'children': [{'type': 'Condition', 'name': 'isinstance(value, list)', 'range': [1910, 1915], 'children': []}, {'type': 'Block', 'name': 'elif_block', 'range': [1916, 1941], 'children': [{'type': 'Assignment', 'name': 'self.execution_stats.setdefault(key, [])', 'range': [1918, 1928], 'children': []}, {'type': 'Assignment', 'name': 'self.execution_stats[key].extend(value)', 'range': [1930, 1941], 'children': []}]}]}, {'type': 'ElseStatement', 'name': 'else', 'range': [1942, 1954], 'children': [{'type': 'Assignment', 'name': 'self.execution_stats[key] = value', 'range': [1945, 1954], 'children': []}]}]}]}, {'type': 'ReturnStatement', 'name': 'return_self.execution_stats', 'range': [1955, 1958], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'name', 'range': [1960, 1976], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1966, 1970], 'children': []}, {'type': 'Block', 'name': 'name_block', 'range': [1971, 1976], 'children': [{'type': 'ReturnStatement', 'name': 'return_self.__class__.__name__', 'range': [1970, 1976], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'to_dict', 'range': [1978, 2084], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1981, 1985], 'children': []}, {'type': 'Block', 'name': 'to_dict_block', 'range': [1986, 2084], 'children': [{'type': 'ReturnStatement', 'name': 'return_dict', 'range': [1985, 2084], 'children': [{'type': 'KeyValuePair', 'name': 'id', 'range': [1988, 1993], 'children': []}, {'type': 'KeyValuePair', 'name': 'name', 'range': [1995, 2000], 'children': []}, {'type': 'KeyValuePair', 'name': 'inputSchema', 'range': [2002, 2011], 'children': []}, {'type': 'KeyValuePair', 'name': 'outputSchema', 'range': [2013, 2022], 'children': []}, {'type': 'KeyValuePair', 'name': 'description', 'range': [2024, 2029], 'children': []}, {'type': 'KeyValuePair', 'name': 'categories', 'range': [2031, 2045], 'children': []}, {'type': 'KeyValuePair', 'name': 'contributors', 'range': [2047, 2063], 'children': []}, {'type': 'KeyValuePair', 'name': 'staticOutput', 'range': [2065, 2072], 'children': []}, {'type': 'KeyValuePair', 'name': 'uiType', 'range': [2074, 2081], 'children': []}]}]}]}, {'type': 'FunctionDeclaration', 'name': 'execute', 'range': [2086, 2208], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [2090, 2094], 'children': []}, {'type': 'Parameter', 'name': 'input_data', 'range': [2092, 2098], 'children': []}, {'type': 'Parameter', 'name': 'kwargs', 'range': [2097, 2099], 'children': []}, {'type': 'Block', 'name': 'execute_block', 'range': [2103, 2208], 'children': [{'type': 'IfStatement', 'name': 'if_error_eq_self.input_schema.validate_data', 'range': [2104, 2126], 'children': [{'type': 'Condition', 'name': 'error := self.input_schema.validate_data(input_data)', 'range': [2105, 2116], 'children': []}, {'type': 'Block', 'name': 'if_block', 'range': [2117, 2126], 'children': [{'type': 'RaiseStatement', 'name': 'raise_ValueError', 'range': [2118, 2126], 'children': []}]}]}, {'type': 'ForStatement', 'name': 'for_output_name_output_data_in_self.run', 'range': [2128, 2207], 'children': [{'type': 'Iteration', 'name': 'output_name, output_data in self.run(self.input_schema(**input_data), **kwargs)', 'range': [2129, 2152], 'children': []}, {'type': 'Block', 'name': 'for_block', 'range': [2153, 2207], 'children': [{'type': 'IfStatement', 'name': 'if_output_name_eq_error', 'range': [2154, 2166], 'children': [{'type': 'Condition', 'name': 'output_name == "error"', 'range': [2155, 2159], 'children': []}, {'type': 'Block', 'name': 'if_block', 'range': [2160, 2166], 'children': [{'type': 'RaiseStatement', 'name': 'raise_RuntimeError', 'range': [2161, 2166], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if_self.block_type_eq_BlockType.STANDARD_and_error_eq_self.output_schema.validate_field', 'range': [2167, 2202], 'children': [{'type': 'Condition', 'name': 'self.block_type == BlockType.STANDARD and (error := self.output_schema.validate_field(output_name, output_data))', 'range': [2168, 2193], 'children': []}, {'type': 'Block', 'name': 'if_block', 'range': [2194, 2202], 'children': [{'type': 'RaiseStatement', 'name': 'raise_ValueError', 'range': [2196, 2202], 'children': []}]}]}, {'type': 'YieldStatement', 'name': 'yield_output_name_output_data', 'range': [2203, 2207], 'children': []}]}]}]}]}]}
2025-01-08 10:20:51,125 - INFO - Starting Step 3: AST simplification
2025-01-08 10:20:51,446 - INFO - Step 4 result: {'type': 'Program', 'name': '', 'range': [216, 310], 'children': [{'type': 'ClassDecl', 'name': 'BlockCategory', 'range': [216, 274], 'children': [{'type': 'EnumDecl', 'name': '', 'range': [219, 274], 'children': [{'type': 'EnumMember', 'name': 'AI', 'range': [223, 225], 'children': [{'type': 'Literal', 'name': '"Block that leverages AI to perform a task."', 'range': [225, 225], 'children': []}]}, {'type': 'EnumMember', 'name': 'SOCIAL', 'range': [227, 229], 'children': [{'type': 'Literal', 'name': '"Block that interacts with social media platforms."', 'range': [229, 229], 'children': []}]}, {'type': 'EnumMember', 'name': 'TEXT', 'range': [231, 233], 'children': [{'type': 'Literal', 'name': '"Block that processes text data."', 'range': [233, 233], 'children': []}]}, {'type': 'EnumMember', 'name': 'SEARCH', 'range': [235, 237], 'children': [{'type': 'Literal', 'name': '"Block that searches or extracts information from the internet."', 'range': [237, 237], 'children': []}]}, {'type': 'EnumMember', 'name': 'BASIC', 'range': [239, 241], 'children': [{'type': 'Literal', 'name': '"Block that performs basic operations."', 'range': [241, 241], 'children': []}]}, {'type': 'EnumMember', 'name': 'INPUT', 'range': [243, 245], 'children': [{'type': 'Literal', 'name': '"Block that interacts with input of the graph."', 'range': [245, 245], 'children': []}]}, {'type': 'EnumMember', 'name': 'OUTPUT', 'range': [247, 249], 'children': [{'type': 'Literal', 'name': '"Block that interacts with output of the graph."', 'range': [249, 249], 'children': []}]}, {'type': 'EnumMember', 'name': 'LOGIC', 'range': [251, 253], 'children': [{'type': 'Literal', 'name': '"Programming logic to control the flow of your agent"', 'range': [253, 253], 'children': []}]}, {'type': 'EnumMember', 'name': 'COMMUNICATION', 'range': [255, 257], 'children': [{'type': 'Literal', 'name': '"Block that interacts with communication platforms."', 'range': [257, 257], 'children': []}]}, {'type': 'EnumMember', 'name': 'DEVELOPER_TOOLS', 'range': [259, 261], 'children': [{'type': 'Literal', 'name': '"Developer tools such as GitHub blocks."', 'range': [261, 261], 'children': []}]}, {'type': 'EnumMember', 'name': 'DATA', 'range': [263, 265], 'children': [{'type': 'Literal', 'name': '"Block that interacts with structured data."', 'range': [265, 265], 'children': []}]}, {'type': 'EnumMember', 'name': 'HARDWARE', 'range': [267, 269], 'children': [{'type': 'Literal', 'name': '"Block that interacts with hardware."', 'range': [269, 269], 'children': []}]}, {'type': 'EnumMember', 'name': 'AGENT', 'range': [271, 273], 'children': [{'type': 'Literal', 'name': '"Block that interacts with other agents."', 'range': [273, 273], 'children': []}]}, {'type': 'EnumMember', 'name': 'CRM', 'range': [275, 277], 'children': [{'type': 'Literal', 'name': '"Block that interacts with CRM services."', 'range': [277, 277], 'children': []}]}]}]}, {'type': 'FunctionDecl', 'name': 'dict', 'range': [280, 310], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [283, 284], 'children': []}, {'type': 'ReturnType', 'name': 'dict[str, str]', 'range': [285, 292], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [293, 310], 'children': [{'type': 'ReturnStatement', 'name': '', 'range': [295, 308], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [296, 308], 'children': [{'type': 'Property', 'name': 'category', 'range': [297, 302], 'children': [{'type': 'Identifier', 'name': 'self.name', 'range': [299, 301], 'children': []}]}, {'type': 'Property', 'name': 'description', 'range': [303, 308], 'children': [{'type': 'Identifier', 'name': 'self.value', 'range': [305, 307], 'children': []}]}]}]}]}]}]}
2025-01-08 10:20:51,446 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:21:02,480 - INFO - Step 5 result: {'nodes': [{'type': 'Program', 'name': 'MainOrSomething', 'range': [0, 84], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 2], 'children': [{'type': 'ImportSpecifier', 'name': 'inspect', 'range': [0, 2], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [3, 9], 'children': [{'type': 'ImportSpecifier', 'name': 'abc', 'range': [3, 5], 'children': []}, {'type': 'ImportSpecifier', 'name': 'ABC', 'range': [5, 6], 'children': []}, {'type': 'ImportSpecifier', 'name': 'abstractmethod', 'range': [6, 8], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [10, 14], 'children': [{'type': 'ImportSpecifier', 'name': 'enum', 'range': [10, 12], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Enum', 'range': [12, 13], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [15, 48], 'children': [{'type': 'ImportSpecifier', 'name': 'typing', 'range': [15, 17], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Any', 'range': [18, 20], 'children': []}, {'type': 'ImportSpecifier', 'name': 'ClassVar', 'range': [22, 23], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Generator', 'range': [25, 26], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Generic', 'range': [28, 29], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Optional', 'range': [31, 32], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Type', 'range': [34, 35], 'children': []}, {'type': 'ImportSpecifier', 'name': 'TypeVar', 'range': [37, 38], 'children': []}, {'type': 'ImportSpecifier', 'name': 'cast', 'range': [40, 41], 'children': []}, {'type': 'ImportSpecifier', 'name': 'get_origin', 'range': [43, 44], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [50, 52], 'children': [{'type': 'ImportSpecifier', 'name': 'jsonref', 'range': [50, 51], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [53, 55], 'children': [{'type': 'ImportSpecifier', 'name': 'jsonschema', 'range': [53, 54], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [56, 62], 'children': [{'type': 'ImportSpecifier', 'name': 'prisma', 'range': [56, 58], 'children': []}, {'type': 'ImportSpecifier', 'name': 'models', 'range': [58, 60], 'children': []}, {'type': 'ImportSpecifier', 'name': 'AgentBlock', 'range': [60, 61], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [63, 67], 'children': [{'type': 'ImportSpecifier', 'name': 'pydantic', 'range': [63, 65], 'children': []}, {'type': 'ImportSpecifier', 'name': 'BaseModel', 'range': [65, 66], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [69, 75], 'children': [{'type': 'ImportSpecifier', 'name': 'backend', 'range': [69, 71], 'children': []}, {'type': 'ImportSpecifier', 'name': 'util', 'range': [71, 73], 'children': []}, {'type': 'ImportSpecifier', 'name': 'json', 'range': [73, 74], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [76, 84], 'children': [{'type': 'ImportSpecifier', 'name': 'backend', 'range': [76, 78], 'children': []}, {'type': 'ImportSpecifier', 'name': 'util', 'range': [78, 80], 'children': []}, {'type': 'ImportSpecifier', 'name': 'settings', 'range': [80, 82], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Config', 'range': [82, 83], 'children': []}]}]}]}
2025-01-08 10:21:02,481 - INFO - Completed main AST analysis flow
2025-01-08 10:21:02,481 - INFO - Successfully processed chunk
2025-01-08 10:21:02,935 - INFO - Step 3 result: {'type': 'Program', 'name': '', 'range': [2210, 2543], 'children': [{'type': 'FunctionDeclaration', 'name': 'get_blocks', 'range': [2210, 2241], 'children': [{'type': 'ReturnStatement', 'name': '', 'range': [2239, 2241], 'children': [{'type': 'Identifier', 'name': 'AVAILABLE_BLOCKS', 'range': [2240, 2241], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [2227, 2237], 'children': [{'type': 'ImportSpecifier', 'name': 'AVAILABLE_BLOCKS', 'range': [2232, 2237], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': 'initialize_blocks', 'range': [2244, 2507], 'children': [{'type': 'ForStatement', 'name': '', 'range': [2254, 2380], 'children': [{'type': 'VariableDeclaration', 'name': 'cls', 'range': [2255, 2257], 'children': []}, {'type': 'CallExpression', 'name': 'get_blocks', 'range': [2257, 2263], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [2264, 2380], 'children': [{'type': 'VariableDeclaration', 'name': 'block', 'range': [2266, 2271], 'children': [{'type': 'NewExpression', 'name': 'cls', 'range': [2268, 2271], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'existing_block', 'range': [2272, 2309], 'children': [{'type': 'AwaitExpression', 'name': '', 'range': [2274, 2309], 'children': [{'type': 'CallExpression', 'name': 'find_first', 'range': [2281, 2308], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [2286, 2306], 'children': [{'type': 'Property', 'name': 'OR', 'range': [2287, 2305], 'children': [{'type': 'ArrayExpression', 'name': '', 'range': [2289, 2305], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [2290, 2296], 'children': [{'type': 'Property', 'name': 'id', 'range': [2291, 2296], 'children': [{'type': 'Identifier', 'name': 'block.id', 'range': [2293, 2296], 'children': []}]}]}, {'type': 'ObjectExpression', 'name': '', 'range': [2298, 2304], 'children': [{'type': 'Property', 'name': 'name', 'range': [2299, 2304], 'children': [{'type': 'Identifier', 'name': 'block.name', 'range': [2301, 2304], 'children': []}]}]}]}]}]}]}]}]}, {'type': 'IfStatement', 'name': '', 'range': [2310, 2378], 'children': [{'type': 'UnaryExpression', 'name': 'not', 'range': [2311, 2312], 'children': [{'type': 'Identifier', 'name': 'existing_block', 'range': [2312, 2313], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [2314, 2378], 'children': [{'type': 'ExpressionStatement', 'name': '', 'range': [2315, 2378], 'children': [{'type': 'AwaitExpression', 'name': '', 'range': [2315, 2378], 'children': [{'type': 'CallExpression', 'name': 'create', 'range': [2322, 2377], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [2327, 2375], 'children': [{'type': 'Property', 'name': 'id', 'range': [2329, 2334], 'children': [{'type': 'Identifier', 'name': 'block.id', 'range': [2331, 2334], 'children': []}]}, {'type': 'Property', 'name': 'name', 'range': [2336, 2341], 'children': [{'type': 'Identifier', 'name': 'block.name', 'range': [2338, 2341], 'children': []}]}, {'type': 'Property', 'name': 'inputSchema', 'range': [2343, 2357], 'children': [{'type': 'CallExpression', 'name': 'dumps', 'range': [2347, 2356], 'children': [{'type': 'CallExpression', 'name': 'jsonschema', 'range': [2353, 2356], 'children': []}]}]}, {'type': 'Property', 'name': 'outputSchema', 'range': [2359, 2373], 'children': [{'type': 'CallExpression', 'name': 'dumps', 'range': [2363, 2372], 'children': [{'type': 'CallExpression', 'name': 'jsonschema', 'range': [2369, 2372], 'children': []}]}]}]}]}]}]}]}]}]}]}, {'type': 'IfStatement', 'name': '', 'range': [2412, 2506], 'children': [{'type': 'LogicalExpression', 'name': 'or', 'range': [2413, 2450], 'children': [{'type': 'BinaryExpression', 'name': '!=', 'range': [2418, 2423], 'children': [{'type': 'Identifier', 'name': 'block.id', 'range': [2416, 2423], 'children': []}, {'type': 'Identifier', 'name': 'existing_block.id', 'range': [2420, 2423], 'children': []}]}, {'type': 'BinaryExpression', 'name': '!=', 'range': [2428, 2433], 'children': [{'type': 'Identifier', 'name': 'block.name', 'range': [2426, 2433], 'children': []}, {'type': 'Identifier', 'name': 'existing_block.name', 'range': [2430, 2433], 'children': []}]}, {'type': 'BinaryExpression', 'name': '!=', 'range': [2438, 2441], 'children': [{'type': 'Identifier', 'name': 'input_schema', 'range': [2435, 2441], 'children': []}, {'type': 'Identifier', 'name': 'existing_block.inputSchema', 'range': [2438, 2441], 'children': []}]}, {'type': 'BinaryExpression', 'name': '!=', 'range': [2446, 2449], 'children': [{'type': 'Identifier', 'name': 'output_schema', 'range': [2443, 2449], 'children': []}, {'type': 'Identifier', 'name': 'existing_block.outputSchema', 'range': [2446, 2449], 'children': []}]}]}, {'type': 'BlockStatement', 'name': '', 'range': [2452, 2506], 'children': [{'type': 'ExpressionStatement', 'name': '', 'range': [2453, 2506], 'children': [{'type': 'AwaitExpression', 'name': '', 'range': [2453, 2506], 'children': [{'type': 'CallExpression', 'name': 'update', 'range': [2460, 2505], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [2465, 2471], 'children': [{'type': 'Property', 'name': 'id', 'range': [2466, 2471], 'children': [{'type': 'Identifier', 'name': 'existing_block.id', 'range': [2468, 2471], 'children': []}]}]}, {'type': 'ObjectExpression', 'name': '', 'range': [2476, 2502], 'children': [{'type': 'Property', 'name': 'id', 'range': [2478, 2483], 'children': [{'type': 'Identifier', 'name': 'block.id', 'range': [2480, 2483], 'children': []}]}, {'type': 'Property', 'name': 'name', 'range': [2485, 2490], 'children': [{'type': 'Identifier', 'name': 'block.name', 'range': [2487, 2490], 'children': []}]}, {'type': 'Property', 'name': 'inputSchema', 'range': [2492, 2495], 'children': [{'type': 'Identifier', 'name': 'input_schema', 'range': [2494, 2495], 'children': []}]}, {'type': 'Property', 'name': 'outputSchema', 'range': [2497, 2500], 'children': [{'type': 'Identifier', 'name': 'output_schema', 'range': [2499, 2500], 'children': []}]}]}]}]}]}]}]}]}, {'type': 'FunctionDeclaration', 'name': 'get_block', 'range': [2509, 2543], 'children': [{'type': 'VariableDeclaration', 'name': 'cls', 'range': [2523, 2533], 'children': [{'type': 'CallExpression', 'name': 'get', 'range': [2529, 2533], 'children': [{'type': 'Identifier', 'name': 'block_id', 'range': [2531, 2533], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [2534, 2542], 'children': [{'type': 'ConditionalExpression', 'name': '', 'range': [2535, 2542], 'children': [{'type': 'Identifier', 'name': 'cls', 'range': [2535, 2539], 'children': []}, {'type': 'NewExpression', 'name': 'cls', 'range': [2536, 2539], 'children': []}, {'type': 'Identifier', 'name': 'None', 'range': [2541, 2542], 'children': []}]}]}]}]}
2025-01-08 10:21:02,936 - INFO - Starting Step 4: AST normalization
2025-01-08 10:21:03,479 - INFO - Step 4 result: {'type': 'Program', 'name': 'BlockSchema', 'range': [311, 1074], 'children': [{'type': 'ClassDecl', 'name': 'BlockSchema', 'range': [311, 1074], 'children': [{'type': 'ClassVariableDecl', 'name': 'cached_jsonschema', 'range': [318, 328], 'children': [{'type': 'TypeAnnotation', 'name': 'ClassVar', 'range': [320, 328], 'children': [{'type': 'GenericType', 'name': 'dict', 'range': [322, 328], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [324, 326], 'children': []}, {'type': 'TypeAnnotation', 'name': 'Any', 'range': [326, 328], 'children': []}]}]}]}, {'type': 'FunctionDecl', 'name': 'jsonschema', 'range': [334, 624], 'children': [{'type': 'ReturnType', 'name': 'dict', 'range': [341, 346], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [343, 345], 'children': []}, {'type': 'TypeAnnotation', 'name': 'Any', 'range': [345, 346], 'children': []}]}, {'type': 'IfStatement', 'name': 'if', 'range': [349, 359], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [355, 359], 'children': []}]}, {'type': 'Assignment', 'name': 'model', 'range': [361, 376], 'children': []}, {'type': 'FunctionDecl', 'name': 'ref_to_dict', 'range': [379, 550], 'children': [{'type': 'IfStatement', 'name': 'if', 'range': [386, 393], 'children': []}, {'type': 'ReturnStatement', 'name': 'return', 'range': [489, 524], 'children': []}, {'type': 'ElifStatement', 'name': 'elif', 'range': [526, 533], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [535, 546], 'children': []}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [548, 550], 'children': []}]}, {'type': 'Assignment', 'name': 'cls.cached_jsonschema', 'range': [552, 570], 'children': []}, {'type': 'ForStatement', 'name': 'for', 'range': [578, 618], 'children': [{'type': 'IfStatement', 'name': 'if', 'range': [598, 610], 'children': []}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [620, 624], 'children': []}]}, {'type': 'FunctionDecl', 'name': 'validate_data', 'range': [629, 662], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [645, 662], 'children': []}]}, {'type': 'FunctionDecl', 'name': 'validate_field', 'range': [667, 769], 'children': [{'type': 'IfStatement', 'name': 'if', 'range': [707, 710], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [712, 715], 'children': []}]}, {'type': 'Assignment', 'name': 'property_schema', 'range': [717, 725], 'children': []}, {'type': 'IfStatement', 'name': 'if', 'range': [726, 729], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [731, 734], 'children': []}]}, {'type': 'TryStatement', 'name': 'try', 'range': [736, 769], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [753, 755], 'children': []}, {'type': 'ExceptStatement', 'name': 'except', 'range': [756, 769], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [764, 769], 'children': []}]}]}]}, {'type': 'FunctionDecl', 'name': 'get_fields', 'range': [774, 798], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [787, 798], 'children': []}]}, {'type': 'FunctionDecl', 'name': 'get_required_fields', 'range': [803, 842], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [816, 842], 'children': []}]}, {'type': 'FunctionDecl', 'name': '__pydantic_init_subclass__', 'range': [847, 1074], 'children': [{'type': 'SuperCall', 'name': 'super', 'range': [862, 871], 'children': []}, {'type': 'Assignment', 'name': 'cls.cached_jsonschema', 'range': [887, 893], 'children': []}, {'type': 'ListComprehension', 'name': 'credentials_fields', 'range': [895, 950], 'children': []}, {'type': 'IfStatement', 'name': 'if', 'range': [951, 958], 'children': [{'type': 'RaiseStatement', 'name': 'raise', 'range': [960, 967], 'children': []}]}, {'type': 'ElifStatement', 'name': 'elif', 'range': [969, 990], 'children': [{'type': 'RaiseStatement', 'name': 'raise', 'range': [992, 1001], 'children': []}]}, {'type': 'ElifStatement', 'name': 'elif', 'range': [1003, 1026], 'children': [{'type': 'RaiseStatement', 'name': 'raise', 'range': [1028, 1038], 'children': []}]}, {'type': 'IfStatement', 'name': 'if', 'range': [1040, 1042], 'children': [{'type': 'Assignment', 'name': 'credentials_input_type', 'range': [1054, 1065], 'children': []}, {'type': 'MethodCall', 'name': 'validate_credentials_field_schema', 'range': [1069, 1073], 'children': []}]}]}]}]}
2025-01-08 10:21:03,480 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:21:19,395 - INFO - Step 5 result: {'type': 'Program', 'name': '', 'range': [216, 310], 'children': [{'type': 'ClassDecl', 'name': 'BlockCategory', 'range': [216, 274], 'children': [{'type': 'EnumDecl', 'name': '', 'range': [219, 274], 'children': [{'type': 'EnumMember', 'name': 'AI', 'range': [223, 225], 'children': [{'type': 'Literal', 'name': '"Block that leverages AI to perform a task."', 'range': [225, 225], 'children': []}]}, {'type': 'EnumMember', 'name': 'SOCIAL', 'range': [227, 229], 'children': [{'type': 'Literal', 'name': '"Block that interacts with social media platforms."', 'range': [229, 229], 'children': []}]}, {'type': 'EnumMember', 'name': 'TEXT', 'range': [231, 233], 'children': [{'type': 'Literal', 'name': '"Block that processes text data."', 'range': [233, 233], 'children': []}]}, {'type': 'EnumMember', 'name': 'SEARCH', 'range': [235, 237], 'children': [{'type': 'Literal', 'name': '"Block that searches or extracts information from the internet."', 'range': [237, 237], 'children': []}]}, {'type': 'EnumMember', 'name': 'BASIC', 'range': [239, 241], 'children': [{'type': 'Literal', 'name': '"Block that performs basic operations."', 'range': [241, 241], 'children': []}]}, {'type': 'EnumMember', 'name': 'INPUT', 'range': [243, 245], 'children': [{'type': 'Literal', 'name': '"Block that interacts with input of the graph."', 'range': [245, 245], 'children': []}]}, {'type': 'EnumMember', 'name': 'OUTPUT', 'range': [247, 249], 'children': [{'type': 'Literal', 'name': '"Block that interacts with output of the graph."', 'range': [249, 249], 'children': []}]}, {'type': 'EnumMember', 'name': 'LOGIC', 'range': [251, 253], 'children': [{'type': 'Literal', 'name': '"Programming logic to control the flow of your agent"', 'range': [253, 253], 'children': []}]}, {'type': 'EnumMember', 'name': 'COMMUNICATION', 'range': [255, 257], 'children': [{'type': 'Literal', 'name': '"Block that interacts with communication platforms."', 'range': [257, 257], 'children': []}]}, {'type': 'EnumMember', 'name': 'DEVELOPER_TOOLS', 'range': [259, 261], 'children': [{'type': 'Literal', 'name': '"Developer tools such as GitHub blocks."', 'range': [261, 261], 'children': []}]}, {'type': 'EnumMember', 'name': 'DATA', 'range': [263, 265], 'children': [{'type': 'Literal', 'name': '"Block that interacts with structured data."', 'range': [265, 265], 'children': []}]}, {'type': 'EnumMember', 'name': 'HARDWARE', 'range': [267, 269], 'children': [{'type': 'Literal', 'name': '"Block that interacts with hardware."', 'range': [269, 269], 'children': []}]}, {'type': 'EnumMember', 'name': 'AGENT', 'range': [271, 273], 'children': [{'type': 'Literal', 'name': '"Block that interacts with other agents."', 'range': [273, 273], 'children': []}]}, {'type': 'EnumMember', 'name': 'CRM', 'range': [275, 277], 'children': [{'type': 'Literal', 'name': '"Block that interacts with CRM services."', 'range': [277, 277], 'children': []}]}]}]}, {'type': 'FunctionDecl', 'name': 'dict', 'range': [280, 310], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [283, 284], 'children': []}, {'type': 'ReturnType', 'name': 'dict[str, str]', 'range': [285, 292], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [293, 310], 'children': [{'type': 'ReturnStatement', 'name': '', 'range': [295, 308], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [296, 308], 'children': [{'type': 'Property', 'name': 'category', 'range': [297, 302], 'children': [{'type': 'Identifier', 'name': 'self.name', 'range': [299, 301], 'children': []}]}, {'type': 'Property', 'name': 'description', 'range': [303, 308], 'children': [{'type': 'Identifier', 'name': 'self.value', 'range': [305, 307], 'children': []}]}]}]}]}]}]}
2025-01-08 10:21:19,395 - INFO - Completed main AST analysis flow
2025-01-08 10:21:19,396 - INFO - Successfully processed chunk
2025-01-08 10:21:38,208 - INFO - Step 5 result: {'type': 'Program', 'name': 'BlockSchema', 'range': [311, 1074], 'children': [{'type': 'ClassDecl', 'name': 'BlockSchema', 'range': [311, 1074], 'children': [{'type': 'ClassVariableDecl', 'name': 'cached_jsonschema', 'range': [318, 328], 'children': [{'type': 'TypeAnnotation', 'name': 'ClassVar', 'range': [320, 328], 'children': [{'type': 'GenericType', 'name': 'dict', 'range': [322, 328], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [324, 326], 'children': []}, {'type': 'TypeAnnotation', 'name': 'Any', 'range': [326, 328], 'children': []}]}]}]}, {'type': 'FunctionDecl', 'name': 'jsonschema', 'range': [334, 624], 'children': [{'type': 'ReturnType', 'name': 'dict', 'range': [341, 346], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [343, 345], 'children': []}, {'type': 'TypeAnnotation', 'name': 'Any', 'range': [345, 346], 'children': []}]}, {'type': 'IfStatement', 'name': 'if', 'range': [349, 359], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [355, 359], 'children': []}]}, {'type': 'Assignment', 'name': 'model', 'range': [361, 376], 'children': []}, {'type': 'FunctionDecl', 'name': 'ref_to_dict', 'range': [379, 550], 'children': [{'type': 'IfStatement', 'name': 'if', 'range': [386, 393], 'children': []}, {'type': 'ReturnStatement', 'name': 'return', 'range': [489, 524], 'children': []}, {'type': 'ElifStatement', 'name': 'elif', 'range': [526, 533], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [535, 546], 'children': []}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [548, 550], 'children': []}]}, {'type': 'Assignment', 'name': 'cls.cached_jsonschema', 'range': [552, 570], 'children': []}, {'type': 'ForStatement', 'name': 'for', 'range': [578, 618], 'children': [{'type': 'IfStatement', 'name': 'if', 'range': [598, 610], 'children': []}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [620, 624], 'children': []}]}, {'type': 'FunctionDecl', 'name': 'validate_data', 'range': [629, 662], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [645, 662], 'children': []}]}, {'type': 'FunctionDecl', 'name': 'validate_field', 'range': [667, 769], 'children': [{'type': 'IfStatement', 'name': 'if', 'range': [707, 710], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [712, 715], 'children': []}]}, {'type': 'Assignment', 'name': 'property_schema', 'range': [717, 725], 'children': []}, {'type': 'IfStatement', 'name': 'if', 'range': [726, 729], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [731, 734], 'children': []}]}, {'type': 'TryStatement', 'name': 'try', 'range': [736, 769], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [753, 755], 'children': []}, {'type': 'ExceptStatement', 'name': 'except', 'range': [756, 769], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [764, 769], 'children': []}]}]}]}, {'type': 'FunctionDecl', 'name': 'get_fields', 'range': [774, 798], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [787, 798], 'children': []}]}, {'type': 'FunctionDecl', 'name': 'get_required_fields', 'range': [803, 842], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [816, 842], 'children': []}]}, {'type': 'FunctionDecl', 'name': '__pydantic_init_subclass__', 'range': [847, 1074], 'children': [{'type': 'SuperCall', 'name': 'super', 'range': [862, 871], 'children': []}, {'type': 'Assignment', 'name': 'cls.cached_jsonschema', 'range': [887, 893], 'children': []}, {'type': 'ListComprehension', 'name': 'credentials_fields', 'range': [895, 950], 'children': []}, {'type': 'IfStatement', 'name': 'if', 'range': [951, 958], 'children': [{'type': 'RaiseStatement', 'name': 'raise', 'range': [960, 967], 'children': []}]}, {'type': 'ElifStatement', 'name': 'elif', 'range': [969, 990], 'children': [{'type': 'RaiseStatement', 'name': 'raise', 'range': [992, 1001], 'children': []}]}, {'type': 'ElifStatement', 'name': 'elif', 'range': [1003, 1026], 'children': [{'type': 'RaiseStatement', 'name': 'raise', 'range': [1028, 1038], 'children': []}]}, {'type': 'IfStatement', 'name': 'if', 'range': [1040, 1042], 'children': [{'type': 'Assignment', 'name': 'credentials_input_type', 'range': [1054, 1065], 'children': []}, {'type': 'MethodCall', 'name': 'validate_credentials_field_schema', 'range': [1069, 1073], 'children': []}]}]}]}]}
2025-01-08 10:21:38,209 - INFO - Completed main AST analysis flow
2025-01-08 10:21:38,209 - INFO - Successfully processed chunk
2025-01-08 10:21:56,033 - INFO - Step 4 result: {'type': 'Program', 'name': '', 'range': [2210, 2543], 'children': [{'type': 'FunctionDecl', 'name': 'get_blocks', 'range': [2210, 2241], 'children': [{'type': 'ReturnStatement', 'name': '', 'range': [2239, 2241], 'children': [{'type': 'Identifier', 'name': 'AVAILABLE_BLOCKS', 'range': [2240, 2241], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [2227, 2237], 'children': [{'type': 'ImportSpecifier', 'name': 'AVAILABLE_BLOCKS', 'range': [2232, 2237], 'children': []}]}, {'type': 'FunctionDecl', 'name': 'initialize_blocks', 'range': [2244, 2507], 'children': [{'type': 'ForStatement', 'name': '', 'range': [2254, 2380], 'children': [{'type': 'VariableDeclaration', 'name': 'cls', 'range': [2255, 2257], 'children': []}, {'type': 'CallExpression', 'name': 'get_blocks', 'range': [2257, 2263], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [2264, 2380], 'children': [{'type': 'VariableDeclaration', 'name': 'block', 'range': [2266, 2271], 'children': [{'type': 'NewExpression', 'name': 'cls', 'range': [2268, 2271], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'existing_block', 'range': [2272, 2309], 'children': [{'type': 'AwaitExpression', 'name': '', 'range': [2274, 2309], 'children': [{'type': 'CallExpression', 'name': 'find_first', 'range': [2281, 2308], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [2286, 2306], 'children': [{'type': 'Property', 'name': 'OR', 'range': [2287, 2305], 'children': [{'type': 'ArrayExpression', 'name': '', 'range': [2289, 2305], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [2290, 2296], 'children': [{'type': 'Property', 'name': 'id', 'range': [2291, 2296], 'children': [{'type': 'Identifier', 'name': 'block.id', 'range': [2293, 2296], 'children': []}]}]}, {'type': 'ObjectExpression', 'name': '', 'range': [2298, 2304], 'children': [{'type': 'Property', 'name': 'name', 'range': [2299, 2304], 'children': [{'type': 'Identifier', 'name': 'block.name', 'range': [2301, 2304], 'children': []}]}]}]}]}]}]}]}]}, {'type': 'IfStatement', 'name': '', 'range': [2310, 2378], 'children': [{'type': 'UnaryExpression', 'name': 'not', 'range': [2311, 2312], 'children': [{'type': 'Identifier', 'name': 'existing_block', 'range': [2312, 2313], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [2314, 2378], 'children': [{'type': 'ExpressionStatement', 'name': '', 'range': [2315, 2378], 'children': [{'type': 'AwaitExpression', 'name': '', 'range': [2315, 2378], 'children': [{'type': 'CallExpression', 'name': 'create', 'range': [2322, 2377], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [2327, 2375], 'children': [{'type': 'Property', 'name': 'id', 'range': [2329, 2334], 'children': [{'type': 'Identifier', 'name': 'block.id', 'range': [2331, 2334], 'children': []}]}, {'type': 'Property', 'name': 'name', 'range': [2336, 2341], 'children': [{'type': 'Identifier', 'name': 'block.name', 'range': [2338, 2341], 'children': []}]}, {'type': 'Property', 'name': 'inputSchema', 'range': [2343, 2357], 'children': [{'type': 'CallExpression', 'name': 'dumps', 'range': [2347, 2356], 'children': [{'type': 'CallExpression', 'name': 'jsonschema', 'range': [2353, 2356], 'children': []}]}]}, {'type': 'Property', 'name': 'outputSchema', 'range': [2359, 2373], 'children': [{'type': 'CallExpression', 'name': 'dumps', 'range': [2363, 2372], 'children': [{'type': 'CallExpression', 'name': 'jsonschema', 'range': [2369, 2372], 'children': []}]}]}]}]}]}]}]}]}]}]}, {'type': 'IfStatement', 'name': '', 'range': [2412, 2506], 'children': [{'type': 'LogicalExpression', 'name': 'or', 'range': [2413, 2450], 'children': [{'type': 'BinaryExpression', 'name': '!=', 'range': [2418, 2423], 'children': [{'type': 'Identifier', 'name': 'block.id', 'range': [2416, 2423], 'children': []}, {'type': 'Identifier', 'name': 'existing_block.id', 'range': [2420, 2423], 'children': []}]}, {'type': 'BinaryExpression', 'name': '!=', 'range': [2428, 2433], 'children': [{'type': 'Identifier', 'name': 'block.name', 'range': [2426, 2433], 'children': []}, {'type': 'Identifier', 'name': 'existing_block.name', 'range': [2430, 2433], 'children': []}]}, {'type': 'BinaryExpression', 'name': '!=', 'range': [2438, 2441], 'children': [{'type': 'Identifier', 'name': 'input_schema', 'range': [2435, 2441], 'children': []}, {'type': 'Identifier', 'name': 'existing_block.inputSchema', 'range': [2438, 2441], 'children': []}]}, {'type': 'BinaryExpression', 'name': '!=', 'range': [2446, 2449], 'children': [{'type': 'Identifier', 'name': 'output_schema', 'range': [2443, 2449], 'children': []}, {'type': 'Identifier', 'name': 'existing_block.outputSchema', 'range': [2446, 2449], 'children': []}]}]}, {'type': 'BlockStatement', 'name': '', 'range': [2452, 2506], 'children': [{'type': 'ExpressionStatement', 'name': '', 'range': [2453, 2506], 'children': [{'type': 'AwaitExpression', 'name': '', 'range': [2453, 2506], 'children': [{'type': 'CallExpression', 'name': 'update', 'range': [2460, 2505], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [2465, 2471], 'children': [{'type': 'Property', 'name': 'id', 'range': [2466, 2471], 'children': [{'type': 'Identifier', 'name': 'existing_block.id', 'range': [2468, 2471], 'children': []}]}]}, {'type': 'ObjectExpression', 'name': '', 'range': [2476, 2502], 'children': [{'type': 'Property', 'name': 'id', 'range': [2478, 2483], 'children': [{'type': 'Identifier', 'name': 'block.id', 'range': [2480, 2483], 'children': []}]}, {'type': 'Property', 'name': 'name', 'range': [2485, 2490], 'children': [{'type': 'Identifier', 'name': 'block.name', 'range': [2487, 2490], 'children': []}]}, {'type': 'Property', 'name': 'inputSchema', 'range': [2492, 2495], 'children': [{'type': 'Identifier', 'name': 'input_schema', 'range': [2494, 2495], 'children': []}]}, {'type': 'Property', 'name': 'outputSchema', 'range': [2497, 2500], 'children': [{'type': 'Identifier', 'name': 'output_schema', 'range': [2499, 2500], 'children': []}]}]}]}]}]}]}]}]}, {'type': 'FunctionDecl', 'name': 'get_block', 'range': [2509, 2543], 'children': [{'type': 'VariableDeclaration', 'name': 'cls', 'range': [2523, 2533], 'children': [{'type': 'CallExpression', 'name': 'get', 'range': [2529, 2533], 'children': [{'type': 'Identifier', 'name': 'block_id', 'range': [2531, 2533], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [2534, 2542], 'children': [{'type': 'ConditionalExpression', 'name': '', 'range': [2535, 2542], 'children': [{'type': 'Identifier', 'name': 'cls', 'range': [2535, 2539], 'children': []}, {'type': 'NewExpression', 'name': 'cls', 'range': [2536, 2539], 'children': []}, {'type': 'Identifier', 'name': 'None', 'range': [2541, 2542], 'children': []}]}]}]}]}
2025-01-08 10:21:56,034 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:22:18,984 - INFO - Step 3 result: {'type': 'Program', 'name': 'Block', 'range': [1210, 2209], 'children': [{'type': 'FunctionDeclaration', 'name': '__init__', 'range': [1224, 1538], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1228, 1232], 'children': []}, {'type': 'Parameter', 'name': 'id', 'range': [1231, 1235], 'children': []}, {'type': 'Parameter', 'name': 'description', 'range': [1238, 1242], 'children': []}, {'type': 'Parameter', 'name': 'contributors', 'range': [1245, 1253], 'children': []}, {'type': 'Parameter', 'name': 'categories', 'range': [1256, 1265], 'children': []}, {'type': 'Parameter', 'name': 'input_schema', 'range': [1268, 1275], 'children': []}, {'type': 'Parameter', 'name': 'output_schema', 'range': [1278, 1285], 'children': []}, {'type': 'Parameter', 'name': 'test_input', 'range': [1288, 1299], 'children': []}, {'type': 'Parameter', 'name': 'test_output', 'range': [1302, 1313], 'children': []}, {'type': 'Parameter', 'name': 'test_mock', 'range': [1316, 1327], 'children': []}, {'type': 'Parameter', 'name': 'test_credentials', 'range': [1330, 1337], 'children': []}, {'type': 'Parameter', 'name': 'disabled', 'range': [1340, 1344], 'children': []}, {'type': 'Parameter', 'name': 'static_output', 'range': [1347, 1351], 'children': []}, {'type': 'Parameter', 'name': 'block_type', 'range': [1354, 1361], 'children': []}, {'type': 'Parameter', 'name': 'webhook_config', 'range': [1363, 1372], 'children': []}, {'type': 'Block', 'name': 'init_block', 'range': [1375, 1538], 'children': [{'type': 'Assignment', 'name': 'self.id', 'range': [1382, 1386], 'children': []}, {'type': 'Assignment', 'name': 'self.input_schema', 'range': [1388, 1392], 'children': []}, {'type': 'Assignment', 'name': 'self.output_schema', 'range': [1394, 1398], 'children': []}, {'type': 'Assignment', 'name': 'self.test_input', 'range': [1400, 1404], 'children': []}, {'type': 'Assignment', 'name': 'self.test_output', 'range': [1406, 1410], 'children': []}, {'type': 'Assignment', 'name': 'self.test_mock', 'range': [1412, 1416], 'children': []}, {'type': 'Assignment', 'name': 'self.test_credentials', 'range': [1418, 1422], 'children': []}, {'type': 'Assignment', 'name': 'self.description', 'range': [1424, 1428], 'children': []}, {'type': 'Assignment', 'name': 'self.categories', 'range': [1430, 1439], 'children': []}, {'type': 'Assignment', 'name': 'self.contributors', 'range': [1440, 1449], 'children': []}, {'type': 'Assignment', 'name': 'self.disabled', 'range': [1450, 1454], 'children': []}, {'type': 'Assignment', 'name': 'self.static_output', 'range': [1456, 1460], 'children': []}, {'type': 'Assignment', 'name': 'self.block_type', 'range': [1462, 1466], 'children': []}, {'type': 'Assignment', 'name': 'self.webhook_config', 'range': [1468, 1472], 'children': []}, {'type': 'Assignment', 'name': 'self.execution_stats', 'range': [1474, 1480], 'children': []}, {'type': 'IfStatement', 'name': 'if_webhook_config', 'range': [1482, 1538], 'children': [{'type': 'Condition', 'name': 'self.webhook_config', 'range': [1483, 1486], 'children': []}, {'type': 'Block', 'name': 'if_block', 'range': [1487, 1538], 'children': [{'type': 'IfStatement', 'name': 'if_isinstance_BlockWebhookConfig', 'range': [1488, 1538], 'children': [{'type': 'Condition', 'name': 'isinstance(self.webhook_config, BlockWebhookConfig)', 'range': [1489, 1496], 'children': []}, {'type': 'Block', 'name': 'if_block', 'range': [1497, 1538], 'children': [{'type': 'IfStatement', 'name': 'if_CREDENTIALS_FIELD_NAME_not_in_self.input_schema.model_fields', 'range': [1512, 1530], 'children': [{'type': 'Condition', 'name': 'CREDENTIALS_FIELD_NAME not in self.input_schema.model_fields', 'range': [1513, 1521], 'children': []}, {'type': 'Block', 'name': 'if_block', 'range': [1522, 1530], 'children': [{'type': 'RaiseStatement', 'name': 'raise_TypeError', 'range': [1523, 1529], 'children': []}]}]}, {'type': 'Assignment', 'name': 'self.block_type', 'range': [1531, 1538], 'children': []}]}, {'type': 'ElseStatement', 'name': 'else', 'range': [1539, 1549], 'children': [{'type': 'Assignment', 'name': 'self.block_type', 'range': [1542, 1549], 'children': []}]}]}]}]}]}]}, {'type': 'FunctionDeclaration', 'name': 'create', 'range': [1704, 1726], 'children': [{'type': 'Parameter', 'name': 'cls', 'range': [1710, 1715], 'children': []}, {'type': 'Block', 'name': 'create_block', 'range': [1721, 1726], 'children': [{'type': 'ReturnStatement', 'name': 'return_cls', 'range': [1722, 1726], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'run', 'range': [1730, 1754], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1734, 1738], 'children': []}, {'type': 'Parameter', 'name': 'input_data', 'range': [1736, 1742], 'children': []}, {'type': 'Parameter', 'name': 'kwargs', 'range': [1741, 1743], 'children': []}, {'type': 'Block', 'name': 'run_block', 'range': [1747, 1754], 'children': [{'type': 'PassStatement', 'name': 'pass', 'range': [1753, 1754], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'run_once', 'range': [1756, 1811], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1759, 1763], 'children': []}, {'type': 'Parameter', 'name': 'input_data', 'range': [1761, 1767], 'children': []}, {'type': 'Parameter', 'name': 'output', 'range': [1765, 1771], 'children': []}, {'type': 'Parameter', 'name': 'kwargs', 'range': [1770, 1772], 'children': []}, {'type': 'Block', 'name': 'run_once_block', 'range': [1776, 1811], 'children': [{'type': 'ForStatement', 'name': 'for_name_data_in_self.run', 'range': [1778, 1804], 'children': [{'type': 'Iteration', 'name': 'name, data in self.run(input_data, **kwargs)', 'range': [1779, 1793], 'children': []}, {'type': 'Block', 'name': 'for_block', 'range': [1794, 1804], 'children': [{'type': 'IfStatement', 'name': 'if_name_eq_output', 'range': [1795, 1800], 'children': [{'type': 'Condition', 'name': 'name == output', 'range': [1796, 1799], 'children': []}, {'type': 'Block', 'name': 'if_block', 'range': [1800, 1804], 'children': [{'type': 'ReturnStatement', 'name': 'return_data', 'range': [1802, 1804], 'children': []}]}]}]}]}, {'type': 'RaiseStatement', 'name': 'raise_ValueError', 'range': [1805, 1811], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'merge_stats', 'range': [1813, 1958], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1816, 1820], 'children': []}, {'type': 'Parameter', 'name': 'stats', 'range': [1818, 1825], 'children': []}, {'type': 'Block', 'name': 'merge_stats_block', 'range': [1829, 1958], 'children': [{'type': 'ForStatement', 'name': 'for_key_value_in_stats.items', 'range': [1831, 1954], 'children': [{'type': 'Iteration', 'name': 'key, value in stats.items()', 'range': [1832, 1845], 'children': []}, {'type': 'Block', 'name': 'for_block', 'range': [1846, 1954], 'children': [{'type': 'IfStatement', 'name': 'if_isinstance_value_dict', 'range': [1847, 1874], 'children': [{'type': 'Condition', 'name': 'isinstance(value, dict)', 'range': [1848, 1855], 'children': []}, {'type': 'Block', 'name': 'if_block', 'range': [1856, 1874], 'children': [{'type': 'Assignment', 'name': 'self.execution_stats.setdefault(key, {}).update(value)', 'range': [1858, 1874], 'children': []}]}]}, {'type': 'ElseIfStatement', 'name': 'elif_isinstance_value_int_float', 'range': [1875, 1908], 'children': [{'type': 'Condition', 'name': 'isinstance(value, (int, float))', 'range': [1876, 1885], 'children': []}, {'type': 'Block', 'name': 'elif_block', 'range': [1886, 1908], 'children': [{'type': 'Assignment', 'name': 'self.execution_stats.setdefault(key, 0)', 'range': [1888, 1897], 'children': []}, {'type': 'Assignment', 'name': 'self.execution_stats[key] += value', 'range': [1899, 1908], 'children': []}]}]}, {'type': 'ElseIfStatement', 'name': 'elif_isinstance_value_list', 'range': [1909, 1941], 'children': [{'type': 'Condition', 'name': 'isinstance(value, list)', 'range': [1910, 1915], 'children': []}, {'type': 'Block', 'name': 'elif_block', 'range': [1916, 1941], 'children': [{'type': 'Assignment', 'name': 'self.execution_stats.setdefault(key, [])', 'range': [1918, 1928], 'children': []}, {'type': 'Assignment', 'name': 'self.execution_stats[key].extend(value)', 'range': [1930, 1941], 'children': []}]}]}, {'type': 'ElseStatement', 'name': 'else', 'range': [1942, 1954], 'children': [{'type': 'Assignment', 'name': 'self.execution_stats[key] = value', 'range': [1945, 1954], 'children': []}]}]}]}, {'type': 'ReturnStatement', 'name': 'return_self.execution_stats', 'range': [1955, 1958], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'name', 'range': [1960, 1976], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1966, 1970], 'children': []}, {'type': 'Block', 'name': 'name_block', 'range': [1971, 1976], 'children': [{'type': 'ReturnStatement', 'name': 'return_self.__class__.__name__', 'range': [1970, 1976], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'to_dict', 'range': [1978, 2084], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1981, 1985], 'children': []}, {'type': 'Block', 'name': 'to_dict_block', 'range': [1986, 2084], 'children': [{'type': 'ReturnStatement', 'name': 'return_dict', 'range': [1985, 2084], 'children': [{'type': 'KeyValuePair', 'name': 'id', 'range': [1988, 1993], 'children': []}, {'type': 'KeyValuePair', 'name': 'name', 'range': [1995, 2000], 'children': []}, {'type': 'KeyValuePair', 'name': 'inputSchema', 'range': [2002, 2011], 'children': []}, {'type': 'KeyValuePair', 'name': 'outputSchema', 'range': [2013, 2022], 'children': []}, {'type': 'KeyValuePair', 'name': 'description', 'range': [2024, 2029], 'children': []}, {'type': 'KeyValuePair', 'name': 'categories', 'range': [2031, 2045], 'children': []}, {'type': 'KeyValuePair', 'name': 'contributors', 'range': [2047, 2063], 'children': []}, {'type': 'KeyValuePair', 'name': 'staticOutput', 'range': [2065, 2072], 'children': []}, {'type': 'KeyValuePair', 'name': 'uiType', 'range': [2074, 2081], 'children': []}]}]}]}, {'type': 'FunctionDeclaration', 'name': 'execute', 'range': [2086, 2208], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [2090, 2094], 'children': []}, {'type': 'Parameter', 'name': 'input_data', 'range': [2092, 2098], 'children': []}, {'type': 'Parameter', 'name': 'kwargs', 'range': [2097, 2099], 'children': []}, {'type': 'Block', 'name': 'execute_block', 'range': [2103, 2208], 'children': [{'type': 'IfStatement', 'name': 'if_error_eq_self.input_schema.validate_data', 'range': [2104, 2126], 'children': [{'type': 'Condition', 'name': 'error := self.input_schema.validate_data(input_data)', 'range': [2105, 2116], 'children': []}, {'type': 'Block', 'name': 'if_block', 'range': [2117, 2126], 'children': [{'type': 'RaiseStatement', 'name': 'raise_ValueError', 'range': [2118, 2126], 'children': []}]}]}, {'type': 'ForStatement', 'name': 'for_output_name_output_data_in_self.run', 'range': [2128, 2207], 'children': [{'type': 'Iteration', 'name': 'output_name, output_data in self.run(self.input_schema(**input_data), **kwargs)', 'range': [2129, 2152], 'children': []}, {'type': 'Block', 'name': 'for_block', 'range': [2153, 2207], 'children': [{'type': 'IfStatement', 'name': 'if_output_name_eq_error', 'range': [2154, 2166], 'children': [{'type': 'Condition', 'name': 'output_name == "error"', 'range': [2155, 2159], 'children': []}, {'type': 'Block', 'name': 'if_block', 'range': [2160, 2166], 'children': [{'type': 'RaiseStatement', 'name': 'raise_RuntimeError', 'range': [2161, 2166], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if_self.block_type_eq_BlockType.STANDARD_and_error_eq_self.output_schema.validate_field', 'range': [2167, 2202], 'children': [{'type': 'Condition', 'name': 'self.block_type == BlockType.STANDARD and (error := self.output_schema.validate_field(output_name, output_data))', 'range': [2168, 2193], 'children': []}, {'type': 'Block', 'name': 'if_block', 'range': [2194, 2202], 'children': [{'type': 'RaiseStatement', 'name': 'raise_ValueError', 'range': [2196, 2202], 'children': []}]}]}, {'type': 'YieldStatement', 'name': 'yield_output_name_output_data', 'range': [2203, 2207], 'children': []}]}]}]}]}]}
2025-01-08 10:22:18,984 - INFO - Starting Step 4: AST normalization
2025-01-08 10:22:47,287 - INFO - Step 5 result: {'type': 'Program', 'name': '', 'range': [2210, 2543], 'children': [{'type': 'FunctionDecl', 'name': 'get_blocks', 'range': [2210, 2241], 'children': [{'type': 'ReturnStatement', 'name': '', 'range': [2239, 2241], 'children': [{'type': 'Identifier', 'name': 'AVAILABLE_BLOCKS', 'range': [2240, 2241], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [2227, 2237], 'children': [{'type': 'ImportSpecifier', 'name': 'AVAILABLE_BLOCKS', 'range': [2232, 2237], 'children': []}]}, {'type': 'FunctionDecl', 'name': 'initialize_blocks', 'range': [2244, 2507], 'children': [{'type': 'ForStatement', 'name': '', 'range': [2254, 2380], 'children': [{'type': 'VariableDeclaration', 'name': 'cls', 'range': [2255, 2257], 'children': []}, {'type': 'CallExpression', 'name': 'get_blocks', 'range': [2257, 2263], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [2264, 2380], 'children': [{'type': 'VariableDeclaration', 'name': 'block', 'range': [2266, 2271], 'children': [{'type': 'NewExpression', 'name': 'cls', 'range': [2268, 2271], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'existing_block', 'range': [2272, 2309], 'children': [{'type': 'AwaitExpression', 'name': '', 'range': [2274, 2309], 'children': [{'type': 'CallExpression', 'name': 'find_first', 'range': [2281, 2308], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [2286, 2306], 'children': [{'type': 'Property', 'name': 'OR', 'range': [2287, 2305], 'children': [{'type': 'ArrayExpression', 'name': '', 'range': [2289, 2305], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [2290, 2296], 'children': [{'type': 'Property', 'name': 'id', 'range': [2291, 2296], 'children': [{'type': 'Identifier', 'name': 'block.id', 'range': [2293, 2296], 'children': []}]}]}, {'type': 'ObjectExpression', 'name': '', 'range': [2298, 2304], 'children': [{'type': 'Property', 'name': 'name', 'range': [2299, 2304], 'children': [{'type': 'Identifier', 'name': 'block.name', 'range': [2301, 2304], 'children': []}]}]}]}]}]}]}]}]}, {'type': 'IfStatement', 'name': '', 'range': [2310, 2378], 'children': [{'type': 'UnaryExpression', 'name': 'not', 'range': [2311, 2312], 'children': [{'type': 'Identifier', 'name': 'existing_block', 'range': [2312, 2313], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [2314, 2378], 'children': [{'type': 'ExpressionStatement', 'name': '', 'range': [2315, 2378], 'children': [{'type': 'AwaitExpression', 'name': '', 'range': [2315, 2378], 'children': [{'type': 'CallExpression', 'name': 'create', 'range': [2322, 2377], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [2327, 2375], 'children': [{'type': 'Property', 'name': 'id', 'range': [2329, 2334], 'children': [{'type': 'Identifier', 'name': 'block.id', 'range': [2331, 2334], 'children': []}]}, {'type': 'Property', 'name': 'name', 'range': [2336, 2341], 'children': [{'type': 'Identifier', 'name': 'block.name', 'range': [2338, 2341], 'children': []}]}, {'type': 'Property', 'name': 'inputSchema', 'range': [2343, 2357], 'children': [{'type': 'CallExpression', 'name': 'dumps', 'range': [2347, 2356], 'children': [{'type': 'CallExpression', 'name': 'jsonschema', 'range': [2353, 2356], 'children': []}]}]}, {'type': 'Property', 'name': 'outputSchema', 'range': [2359, 2373], 'children': [{'type': 'CallExpression', 'name': 'dumps', 'range': [2363, 2372], 'children': [{'type': 'CallExpression', 'name': 'jsonschema', 'range': [2369, 2372], 'children': []}]}]}]}]}]}]}]}]}]}]}, {'type': 'IfStatement', 'name': '', 'range': [2412, 2506], 'children': [{'type': 'LogicalExpression', 'name': 'or', 'range': [2413, 2450], 'children': [{'type': 'BinaryExpression', 'name': '!=', 'range': [2418, 2423], 'children': [{'type': 'Identifier', 'name': 'block.id', 'range': [2416, 2423], 'children': []}, {'type': 'Identifier', 'name': 'existing_block.id', 'range': [2420, 2423], 'children': []}]}, {'type': 'BinaryExpression', 'name': '!=', 'range': [2428, 2433], 'children': [{'type': 'Identifier', 'name': 'block.name', 'range': [2426, 2433], 'children': []}, {'type': 'Identifier', 'name': 'existing_block.name', 'range': [2430, 2433], 'children': []}]}, {'type': 'BinaryExpression', 'name': '!=', 'range': [2438, 2441], 'children': [{'type': 'Identifier', 'name': 'input_schema', 'range': [2435, 2441], 'children': []}, {'type': 'Identifier', 'name': 'existing_block.inputSchema', 'range': [2438, 2441], 'children': []}]}, {'type': 'BinaryExpression', 'name': '!=', 'range': [2446, 2449], 'children': [{'type': 'Identifier', 'name': 'output_schema', 'range': [2443, 2449], 'children': []}, {'type': 'Identifier', 'name': 'existing_block.outputSchema', 'range': [2446, 2449], 'children': []}]}]}, {'type': 'BlockStatement', 'name': '', 'range': [2452, 2506], 'children': [{'type': 'ExpressionStatement', 'name': '', 'range': [2453, 2506], 'children': [{'type': 'AwaitExpression', 'name': '', 'range': [2453, 2506], 'children': [{'type': 'CallExpression', 'name': 'update', 'range': [2460, 2505], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [2465, 2471], 'children': [{'type': 'Property', 'name': 'id', 'range': [2466, 2471], 'children': [{'type': 'Identifier', 'name': 'existing_block.id', 'range': [2468, 2471], 'children': []}]}]}, {'type': 'ObjectExpression', 'name': '', 'range': [2476, 2502], 'children': [{'type': 'Property', 'name': 'id', 'range': [2478, 2483], 'children': [{'type': 'Identifier', 'name': 'block.id', 'range': [2480, 2483], 'children': []}]}, {'type': 'Property', 'name': 'name', 'range': [2485, 2490], 'children': [{'type': 'Identifier', 'name': 'block.name', 'range': [2487, 2490], 'children': []}]}, {'type': 'Property', 'name': 'inputSchema', 'range': [2492, 2495], 'children': [{'type': 'Identifier', 'name': 'input_schema', 'range': [2494, 2495], 'children': []}]}, {'type': 'Property', 'name': 'outputSchema', 'range': [2497, 2500], 'children': [{'type': 'Identifier', 'name': 'output_schema', 'range': [2499, 2500], 'children': []}]}]}]}]}]}]}]}]}, {'type': 'FunctionDecl', 'name': 'get_block', 'range': [2509, 2543], 'children': [{'type': 'VariableDeclaration', 'name': 'cls', 'range': [2523, 2533], 'children': [{'type': 'CallExpression', 'name': 'get', 'range': [2529, 2533], 'children': [{'type': 'Identifier', 'name': 'block_id', 'range': [2531, 2533], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [2534, 2542], 'children': [{'type': 'ConditionalExpression', 'name': '', 'range': [2535, 2542], 'children': [{'type': 'Identifier', 'name': 'cls', 'range': [2535, 2539], 'children': []}, {'type': 'NewExpression', 'name': 'cls', 'range': [2536, 2539], 'children': []}, {'type': 'Identifier', 'name': 'None', 'range': [2541, 2542], 'children': []}]}]}]}]}
2025-01-08 10:22:47,287 - INFO - Completed main AST analysis flow
2025-01-08 10:22:47,288 - INFO - Successfully processed chunk
2025-01-08 10:23:50,313 - INFO - Step 4 result: {'type': 'Program', 'name': 'Block', 'range': [1210, 2209], 'children': [{'type': 'FunctionDecl', 'name': '__init__', 'range': [1224, 1538], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1228, 1232], 'children': []}, {'type': 'Parameter', 'name': 'id', 'range': [1231, 1235], 'children': []}, {'type': 'Parameter', 'name': 'description', 'range': [1238, 1242], 'children': []}, {'type': 'Parameter', 'name': 'contributors', 'range': [1245, 1253], 'children': []}, {'type': 'Parameter', 'name': 'categories', 'range': [1256, 1265], 'children': []}, {'type': 'Parameter', 'name': 'input_schema', 'range': [1268, 1275], 'children': []}, {'type': 'Parameter', 'name': 'output_schema', 'range': [1278, 1285], 'children': []}, {'type': 'Parameter', 'name': 'test_input', 'range': [1288, 1299], 'children': []}, {'type': 'Parameter', 'name': 'test_output', 'range': [1302, 1313], 'children': []}, {'type': 'Parameter', 'name': 'test_mock', 'range': [1316, 1327], 'children': []}, {'type': 'Parameter', 'name': 'test_credentials', 'range': [1330, 1337], 'children': []}, {'type': 'Parameter', 'name': 'disabled', 'range': [1340, 1344], 'children': []}, {'type': 'Parameter', 'name': 'static_output', 'range': [1347, 1351], 'children': []}, {'type': 'Parameter', 'name': 'block_type', 'range': [1354, 1361], 'children': []}, {'type': 'Parameter', 'name': 'webhook_config', 'range': [1363, 1372], 'children': []}, {'type': 'Block', 'name': 'init_block', 'range': [1375, 1538], 'children': [{'type': 'Assignment', 'name': 'self.id', 'range': [1382, 1386], 'children': []}, {'type': 'Assignment', 'name': 'self.input_schema', 'range': [1388, 1392], 'children': []}, {'type': 'Assignment', 'name': 'self.output_schema', 'range': [1394, 1398], 'children': []}, {'type': 'Assignment', 'name': 'self.test_input', 'range': [1400, 1404], 'children': []}, {'type': 'Assignment', 'name': 'self.test_output', 'range': [1406, 1410], 'children': []}, {'type': 'Assignment', 'name': 'self.test_mock', 'range': [1412, 1416], 'children': []}, {'type': 'Assignment', 'name': 'self.test_credentials', 'range': [1418, 1422], 'children': []}, {'type': 'Assignment', 'name': 'self.description', 'range': [1424, 1428], 'children': []}, {'type': 'Assignment', 'name': 'self.categories', 'range': [1430, 1439], 'children': []}, {'type': 'Assignment', 'name': 'self.contributors', 'range': [1440, 1449], 'children': []}, {'type': 'Assignment', 'name': 'self.disabled', 'range': [1450, 1454], 'children': []}, {'type': 'Assignment', 'name': 'self.static_output', 'range': [1456, 1460], 'children': []}, {'type': 'Assignment', 'name': 'self.block_type', 'range': [1462, 1466], 'children': []}, {'type': 'Assignment', 'name': 'self.webhook_config', 'range': [1468, 1472], 'children': []}, {'type': 'Assignment', 'name': 'self.execution_stats', 'range': [1474, 1480], 'children': []}, {'type': 'IfStatement', 'name': 'if_webhook_config', 'range': [1482, 1538], 'children': [{'type': 'Condition', 'name': 'self.webhook_config', 'range': [1483, 1486], 'children': []}, {'type': 'Block', 'name': 'if_block', 'range': [1487, 1538], 'children': [{'type': 'IfStatement', 'name': 'if_isinstance_BlockWebhookConfig', 'range': [1488, 1538], 'children': [{'type': 'Condition', 'name': 'isinstance(self.webhook_config, BlockWebhookConfig)', 'range': [1489, 1496], 'children': []}, {'type': 'Block', 'name': 'if_block', 'range': [1497, 1538], 'children': [{'type': 'IfStatement', 'name': 'if_CREDENTIALS_FIELD_NAME_not_in_self.input_schema.model_fields', 'range': [1512, 1530], 'children': [{'type': 'Condition', 'name': 'CREDENTIALS_FIELD_NAME not in self.input_schema.model_fields', 'range': [1513, 1521], 'children': []}, {'type': 'Block', 'name': 'if_block', 'range': [1522, 1530], 'children': [{'type': 'RaiseStatement', 'name': 'raise_TypeError', 'range': [1523, 1529], 'children': []}]}]}, {'type': 'Assignment', 'name': 'self.block_type', 'range': [1531, 1538], 'children': []}]}, {'type': 'ElseStatement', 'name': 'else', 'range': [1539, 1549], 'children': [{'type': 'Assignment', 'name': 'self.block_type', 'range': [1542, 1549], 'children': []}]}]}]}]}]}]}, {'type': 'FunctionDecl', 'name': 'create', 'range': [1704, 1726], 'children': [{'type': 'Parameter', 'name': 'cls', 'range': [1710, 1715], 'children': []}, {'type': 'Block', 'name': 'create_block', 'range': [1721, 1726], 'children': [{'type': 'ReturnStatement', 'name': 'return_cls', 'range': [1722, 1726], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'run', 'range': [1730, 1754], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1734, 1738], 'children': []}, {'type': 'Parameter', 'name': 'input_data', 'range': [1736, 1742], 'children': []}, {'type': 'Parameter', 'name': 'kwargs', 'range': [1741, 1743], 'children': []}, {'type': 'Block', 'name': 'run_block', 'range': [1747, 1754], 'children': [{'type': 'PassStatement', 'name': 'pass', 'range': [1753, 1754], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'run_once', 'range': [1756, 1811], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1759, 1763], 'children': []}, {'type': 'Parameter', 'name': 'input_data', 'range': [1761, 1767], 'children': []}, {'type': 'Parameter', 'name': 'output', 'range': [1765, 1771], 'children': []}, {'type': 'Parameter', 'name': 'kwargs', 'range': [1770, 1772], 'children': []}, {'type': 'Block', 'name': 'run_once_block', 'range': [1776, 1811], 'children': [{'type': 'ForStatement', 'name': 'for_name_data_in_self.run', 'range': [1778, 1804], 'children': [{'type': 'Iteration', 'name': 'name, data in self.run(input_data, **kwargs)', 'range': [1779, 1793], 'children': []}, {'type': 'Block', 'name': 'for_block', 'range': [1794, 1804], 'children': [{'type': 'IfStatement', 'name': 'if_name_eq_output', 'range': [1795, 1800], 'children': [{'type': 'Condition', 'name': 'name == output', 'range': [1796, 1799], 'children': []}, {'type': 'Block', 'name': 'if_block', 'range': [1800, 1804], 'children': [{'type': 'ReturnStatement', 'name': 'return_data', 'range': [1802, 1804], 'children': []}]}]}]}]}, {'type': 'RaiseStatement', 'name': 'raise_ValueError', 'range': [1805, 1811], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'merge_stats', 'range': [1813, 1958], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1816, 1820], 'children': []}, {'type': 'Parameter', 'name': 'stats', 'range': [1818, 1825], 'children': []}, {'type': 'Block', 'name': 'merge_stats_block', 'range': [1829, 1958], 'children': [{'type': 'ForStatement', 'name': 'for_key_value_in_stats.items', 'range': [1831, 1954], 'children': [{'type': 'Iteration', 'name': 'key, value in stats.items()', 'range': [1832, 1845], 'children': []}, {'type': 'Block', 'name': 'for_block', 'range': [1846, 1954], 'children': [{'type': 'IfStatement', 'name': 'if_isinstance_value_dict', 'range': [1847, 1874], 'children': [{'type': 'Condition', 'name': 'isinstance(value, dict)', 'range': [1848, 1855], 'children': []}, {'type': 'Block', 'name': 'if_block', 'range': [1856, 1874], 'children': [{'type': 'Assignment', 'name': 'self.execution_stats.setdefault(key, {}).update(value)', 'range': [1858, 1874], 'children': []}]}]}, {'type': 'ElseIfStatement', 'name': 'elif_isinstance_value_int_float', 'range': [1875, 1908], 'children': [{'type': 'Condition', 'name': 'isinstance(value, (int, float))', 'range': [1876, 1885], 'children': []}, {'type': 'Block', 'name': 'elif_block', 'range': [1886, 1908], 'children': [{'type': 'Assignment', 'name': 'self.execution_stats.setdefault(key, 0)', 'range': [1888, 1897], 'children': []}, {'type': 'Assignment', 'name': 'self.execution_stats[key] += value', 'range': [1899, 1908], 'children': []}]}]}, {'type': 'ElseIfStatement', 'name': 'elif_isinstance_value_list', 'range': [1909, 1941], 'children': [{'type': 'Condition', 'name': 'isinstance(value, list)', 'range': [1910, 1915], 'children': []}, {'type': 'Block', 'name': 'elif_block', 'range': [1916, 1941], 'children': [{'type': 'Assignment', 'name': 'self.execution_stats.setdefault(key, [])', 'range': [1918, 1928], 'children': []}, {'type': 'Assignment', 'name': 'self.execution_stats[key].extend(value)', 'range': [1930, 1941], 'children': []}]}]}, {'type': 'ElseStatement', 'name': 'else', 'range': [1942, 1954], 'children': [{'type': 'Assignment', 'name': 'self.execution_stats[key] = value', 'range': [1945, 1954], 'children': []}]}]}]}, {'type': 'ReturnStatement', 'name': 'return_self.execution_stats', 'range': [1955, 1958], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'name', 'range': [1960, 1976], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1966, 1970], 'children': []}, {'type': 'Block', 'name': 'name_block', 'range': [1971, 1976], 'children': [{'type': 'ReturnStatement', 'name': 'return_self.__class__.__name__', 'range': [1970, 1976], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'to_dict', 'range': [1978, 2084], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1981, 1985], 'children': []}, {'type': 'Block', 'name': 'to_dict_block', 'range': [1986, 2084], 'children': [{'type': 'ReturnStatement', 'name': 'return_dict', 'range': [1985, 2084], 'children': [{'type': 'KeyValuePair', 'name': 'id', 'range': [1988, 1993], 'children': []}, {'type': 'KeyValuePair', 'name': 'name', 'range': [1995, 2000], 'children': []}, {'type': 'KeyValuePair', 'name': 'inputSchema', 'range': [2002, 2011], 'children': []}, {'type': 'KeyValuePair', 'name': 'outputSchema', 'range': [2013, 2022], 'children': []}, {'type': 'KeyValuePair', 'name': 'description', 'range': [2024, 2029], 'children': []}, {'type': 'KeyValuePair', 'name': 'categories', 'range': [2031, 2045], 'children': []}, {'type': 'KeyValuePair', 'name': 'contributors', 'range': [2047, 2063], 'children': []}, {'type': 'KeyValuePair', 'name': 'staticOutput', 'range': [2065, 2072], 'children': []}, {'type': 'KeyValuePair', 'name': 'uiType', 'range': [2074, 2081], 'children': []}]}]}]}, {'type': 'FunctionDecl', 'name': 'execute', 'range': [2086, 2208], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [2090, 2094], 'children': []}, {'type': 'Parameter', 'name': 'input_data', 'range': [2092, 2098], 'children': []}, {'type': 'Parameter', 'name': 'kwargs', 'range': [2097, 2099], 'children': []}, {'type': 'Block', 'name': 'execute_block', 'range': [2103, 2208], 'children': [{'type': 'IfStatement', 'name': 'if_error_eq_self.input_schema.validate_data', 'range': [2104, 2126], 'children': [{'type': 'Condition', 'name': 'error := self.input_schema.validate_data(input_data)', 'range': [2105, 2116], 'children': []}, {'type': 'Block', 'name': 'if_block', 'range': [2117, 2126], 'children': [{'type': 'RaiseStatement', 'name': 'raise_ValueError', 'range': [2118, 2126], 'children': []}]}]}, {'type': 'ForStatement', 'name': 'for_output_name_output_data_in_self.run', 'range': [2128, 2207], 'children': [{'type': 'Iteration', 'name': 'output_name, output_data in self.run(self.input_schema(**input_data), **kwargs)', 'range': [2129, 2152], 'children': []}, {'type': 'Block', 'name': 'for_block', 'range': [2153, 2207], 'children': [{'type': 'IfStatement', 'name': 'if_output_name_eq_error', 'range': [2154, 2166], 'children': [{'type': 'Condition', 'name': 'output_name == "error"', 'range': [2155, 2159], 'children': []}, {'type': 'Block', 'name': 'if_block', 'range': [2160, 2166], 'children': [{'type': 'RaiseStatement', 'name': 'raise_RuntimeError', 'range': [2161, 2166], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if_self.block_type_eq_BlockType.STANDARD_and_error_eq_self.output_schema.validate_field', 'range': [2167, 2202], 'children': [{'type': 'Condition', 'name': 'self.block_type == BlockType.STANDARD and (error := self.output_schema.validate_field(output_name, output_data))', 'range': [2168, 2193], 'children': []}, {'type': 'Block', 'name': 'if_block', 'range': [2194, 2202], 'children': [{'type': 'RaiseStatement', 'name': 'raise_ValueError', 'range': [2196, 2202], 'children': []}]}]}, {'type': 'YieldStatement', 'name': 'yield_output_name_output_data', 'range': [2203, 2207], 'children': []}]}]}]}]}]}
2025-01-08 10:23:50,313 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:25:19,840 - INFO - Step 5 result: {'type': 'Program', 'name': 'Block', 'range': [1210, 2209], 'children': [{'type': 'FunctionDecl', 'name': '__init__', 'range': [1224, 1538], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1228, 1232], 'children': []}, {'type': 'Parameter', 'name': 'id', 'range': [1231, 1235], 'children': []}, {'type': 'Parameter', 'name': 'description', 'range': [1238, 1242], 'children': []}, {'type': 'Parameter', 'name': 'contributors', 'range': [1245, 1253], 'children': []}, {'type': 'Parameter', 'name': 'categories', 'range': [1256, 1265], 'children': []}, {'type': 'Parameter', 'name': 'input_schema', 'range': [1268, 1275], 'children': []}, {'type': 'Parameter', 'name': 'output_schema', 'range': [1278, 1285], 'children': []}, {'type': 'Parameter', 'name': 'test_input', 'range': [1288, 1299], 'children': []}, {'type': 'Parameter', 'name': 'test_output', 'range': [1302, 1313], 'children': []}, {'type': 'Parameter', 'name': 'test_mock', 'range': [1316, 1327], 'children': []}, {'type': 'Parameter', 'name': 'test_credentials', 'range': [1330, 1337], 'children': []}, {'type': 'Parameter', 'name': 'disabled', 'range': [1340, 1344], 'children': []}, {'type': 'Parameter', 'name': 'static_output', 'range': [1347, 1351], 'children': []}, {'type': 'Parameter', 'name': 'block_type', 'range': [1354, 1361], 'children': []}, {'type': 'Parameter', 'name': 'webhook_config', 'range': [1363, 1372], 'children': []}, {'type': 'Block', 'name': 'init_block', 'range': [1375, 1538], 'children': [{'type': 'Assignment', 'name': 'self.id', 'range': [1382, 1386], 'children': []}, {'type': 'Assignment', 'name': 'self.input_schema', 'range': [1388, 1392], 'children': []}, {'type': 'Assignment', 'name': 'self.output_schema', 'range': [1394, 1398], 'children': []}, {'type': 'Assignment', 'name': 'self.test_input', 'range': [1400, 1404], 'children': []}, {'type': 'Assignment', 'name': 'self.test_output', 'range': [1406, 1410], 'children': []}, {'type': 'Assignment', 'name': 'self.test_mock', 'range': [1412, 1416], 'children': []}, {'type': 'Assignment', 'name': 'self.test_credentials', 'range': [1418, 1422], 'children': []}, {'type': 'Assignment', 'name': 'self.description', 'range': [1424, 1428], 'children': []}, {'type': 'Assignment', 'name': 'self.categories', 'range': [1430, 1439], 'children': []}, {'type': 'Assignment', 'name': 'self.contributors', 'range': [1440, 1449], 'children': []}, {'type': 'Assignment', 'name': 'self.disabled', 'range': [1450, 1454], 'children': []}, {'type': 'Assignment', 'name': 'self.static_output', 'range': [1456, 1460], 'children': []}, {'type': 'Assignment', 'name': 'self.block_type', 'range': [1462, 1466], 'children': []}, {'type': 'Assignment', 'name': 'self.webhook_config', 'range': [1468, 1472], 'children': []}, {'type': 'Assignment', 'name': 'self.execution_stats', 'range': [1474, 1480], 'children': []}, {'type': 'IfStatement', 'name': 'if_webhook_config', 'range': [1482, 1538], 'children': [{'type': 'Condition', 'name': 'self.webhook_config', 'range': [1483, 1486], 'children': []}, {'type': 'Block', 'name': 'if_block', 'range': [1487, 1538], 'children': [{'type': 'IfStatement', 'name': 'if_isinstance_BlockWebhookConfig', 'range': [1488, 1538], 'children': [{'type': 'Condition', 'name': 'isinstance(self.webhook_config, BlockWebhookConfig)', 'range': [1489, 1496], 'children': []}, {'type': 'Block', 'name': 'if_block', 'range': [1497, 1538], 'children': [{'type': 'IfStatement', 'name': 'if_CREDENTIALS_FIELD_NAME_not_in_self.input_schema.model_fields', 'range': [1512, 1530], 'children': [{'type': 'Condition', 'name': 'CREDENTIALS_FIELD_NAME not in self.input_schema.model_fields', 'range': [1513, 1521], 'children': []}, {'type': 'Block', 'name': 'if_block', 'range': [1522, 1530], 'children': [{'type': 'RaiseStatement', 'name': 'raise_TypeError', 'range': [1523, 1529], 'children': []}]}]}, {'type': 'Assignment', 'name': 'self.block_type', 'range': [1531, 1538], 'children': []}]}, {'type': 'ElseStatement', 'name': 'else', 'range': [1539, 1549], 'children': [{'type': 'Assignment', 'name': 'self.block_type', 'range': [1542, 1549], 'children': []}]}]}]}]}]}]}, {'type': 'FunctionDecl', 'name': 'create', 'range': [1704, 1726], 'children': [{'type': 'Parameter', 'name': 'cls', 'range': [1710, 1715], 'children': []}, {'type': 'Block', 'name': 'create_block', 'range': [1721, 1726], 'children': [{'type': 'ReturnStatement', 'name': 'return_cls', 'range': [1722, 1726], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'run', 'range': [1730, 1754], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1734, 1738], 'children': []}, {'type': 'Parameter', 'name': 'input_data', 'range': [1736, 1742], 'children': []}, {'type': 'Parameter', 'name': 'kwargs', 'range': [1741, 1743], 'children': []}, {'type': 'Block', 'name': 'run_block', 'range': [1747, 1754], 'children': [{'type': 'PassStatement', 'name': 'pass', 'range': [1753, 1754], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'run_once', 'range': [1756, 1811], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1759, 1763], 'children': []}, {'type': 'Parameter', 'name': 'input_data', 'range': [1761, 1767], 'children': []}, {'type': 'Parameter', 'name': 'output', 'range': [1765, 1771], 'children': []}, {'type': 'Parameter', 'name': 'kwargs', 'range': [1770, 1772], 'children': []}, {'type': 'Block', 'name': 'run_once_block', 'range': [1776, 1811], 'children': [{'type': 'ForStatement', 'name': 'for_name_data_in_self.run', 'range': [1778, 1804], 'children': [{'type': 'Iteration', 'name': 'name, data in self.run(input_data, **kwargs)', 'range': [1779, 1793], 'children': []}, {'type': 'Block', 'name': 'for_block', 'range': [1794, 1804], 'children': [{'type': 'IfStatement', 'name': 'if_name_eq_output', 'range': [1795, 1800], 'children': [{'type': 'Condition', 'name': 'name == output', 'range': [1796, 1799], 'children': []}, {'type': 'Block', 'name': 'if_block', 'range': [1800, 1804], 'children': [{'type': 'ReturnStatement', 'name': 'return_data', 'range': [1802, 1804], 'children': []}]}]}]}]}, {'type': 'RaiseStatement', 'name': 'raise_ValueError', 'range': [1805, 1811], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'merge_stats', 'range': [1813, 1958], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1816, 1820], 'children': []}, {'type': 'Parameter', 'name': 'stats', 'range': [1818, 1825], 'children': []}, {'type': 'Block', 'name': 'merge_stats_block', 'range': [1829, 1958], 'children': [{'type': 'ForStatement', 'name': 'for_key_value_in_stats.items', 'range': [1831, 1954], 'children': [{'type': 'Iteration', 'name': 'key, value in stats.items()', 'range': [1832, 1845], 'children': []}, {'type': 'Block', 'name': 'for_block', 'range': [1846, 1954], 'children': [{'type': 'IfStatement', 'name': 'if_isinstance_value_dict', 'range': [1847, 1874], 'children': [{'type': 'Condition', 'name': 'isinstance(value, dict)', 'range': [1848, 1855], 'children': []}, {'type': 'Block', 'name': 'if_block', 'range': [1856, 1874], 'children': [{'type': 'Assignment', 'name': 'self.execution_stats.setdefault(key, {}).update(value)', 'range': [1858, 1874], 'children': []}]}]}, {'type': 'ElseIfStatement', 'name': 'elif_isinstance_value_int_float', 'range': [1875, 1908], 'children': [{'type': 'Condition', 'name': 'isinstance(value, (int, float))', 'range': [1876, 1885], 'children': []}, {'type': 'Block', 'name': 'elif_block', 'range': [1886, 1908], 'children': [{'type': 'Assignment', 'name': 'self.execution_stats.setdefault(key, 0)', 'range': [1888, 1897], 'children': []}, {'type': 'Assignment', 'name': 'self.execution_stats[key] += value', 'range': [1899, 1908], 'children': []}]}]}, {'type': 'ElseIfStatement', 'name': 'elif_isinstance_value_list', 'range': [1909, 1941], 'children': [{'type': 'Condition', 'name': 'isinstance(value, list)', 'range': [1910, 1915], 'children': []}, {'type': 'Block', 'name': 'elif_block', 'range': [1916, 1941], 'children': [{'type': 'Assignment', 'name': 'self.execution_stats.setdefault(key, [])', 'range': [1918, 1928], 'children': []}, {'type': 'Assignment', 'name': 'self.execution_stats[key].extend(value)', 'range': [1930, 1941], 'children': []}]}]}, {'type': 'ElseStatement', 'name': 'else', 'range': [1942, 1954], 'children': [{'type': 'Assignment', 'name': 'self.execution_stats[key] = value', 'range': [1945, 1954], 'children': []}]}]}]}, {'type': 'ReturnStatement', 'name': 'return_self.execution_stats', 'range': [1955, 1958], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'name', 'range': [1960, 1976], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1966, 1970], 'children': []}, {'type': 'Block', 'name': 'name_block', 'range': [1971, 1976], 'children': [{'type': 'ReturnStatement', 'name': 'return_self.__class__.__name__', 'range': [1970, 1976], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'to_dict', 'range': [1978, 2084], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1981, 1985], 'children': []}, {'type': 'Block', 'name': 'to_dict_block', 'range': [1986, 2084], 'children': [{'type': 'ReturnStatement', 'name': 'return_dict', 'range': [1985, 2084], 'children': [{'type': 'KeyValuePair', 'name': 'id', 'range': [1988, 1993], 'children': []}, {'type': 'KeyValuePair', 'name': 'name', 'range': [1995, 2000], 'children': []}, {'type': 'KeyValuePair', 'name': 'inputSchema', 'range': [2002, 2011], 'children': []}, {'type': 'KeyValuePair', 'name': 'outputSchema', 'range': [2013, 2022], 'children': []}, {'type': 'KeyValuePair', 'name': 'description', 'range': [2024, 2029], 'children': []}, {'type': 'KeyValuePair', 'name': 'categories', 'range': [2031, 2045], 'children': []}, {'type': 'KeyValuePair', 'name': 'contributors', 'range': [2047, 2063], 'children': []}, {'type': 'KeyValuePair', 'name': 'staticOutput', 'range': [2065, 2072], 'children': []}, {'type': 'KeyValuePair', 'name': 'uiType', 'range': [2074, 2081], 'children': []}]}]}]}, {'type': 'FunctionDecl', 'name': 'execute', 'range': [2086, 2208], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [2090, 2094], 'children': []}, {'type': 'Parameter', 'name': 'input_data', 'range': [2092, 2098], 'children': []}, {'type': 'Parameter', 'name': 'kwargs', 'range': [2097, 2099], 'children': []}, {'type': 'Block', 'name': 'execute_block', 'range': [2103, 2208], 'children': [{'type': 'IfStatement', 'name': 'if_error_eq_self.input_schema.validate_data', 'range': [2104, 2126], 'children': [{'type': 'Condition', 'name': 'error := self.input_schema.validate_data(input_data)', 'range': [2105, 2116], 'children': []}, {'type': 'Block', 'name': 'if_block', 'range': [2117, 2126], 'children': [{'type': 'RaiseStatement', 'name': 'raise_ValueError', 'range': [2118, 2126], 'children': []}]}]}, {'type': 'ForStatement', 'name': 'for_output_name_output_data_in_self.run', 'range': [2128, 2207], 'children': [{'type': 'Iteration', 'name': 'output_name, output_data in self.run(self.input_schema(**input_data), **kwargs)', 'range': [2129, 2152], 'children': []}, {'type': 'Block', 'name': 'for_block', 'range': [2153, 2207], 'children': [{'type': 'IfStatement', 'name': 'if_output_name_eq_error', 'range': [2154, 2166], 'children': [{'type': 'Condition', 'name': 'output_name == "error"', 'range': [2155, 2159], 'children': []}, {'type': 'Block', 'name': 'if_block', 'range': [2160, 2166], 'children': [{'type': 'RaiseStatement', 'name': 'raise_RuntimeError', 'range': [2161, 2166], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if_self.block_type_eq_BlockType.STANDARD_and_error_eq_self.output_schema.validate_field', 'range': [2167, 2202], 'children': [{'type': 'Condition', 'name': 'self.block_type == BlockType.STANDARD and (error := self.output_schema.validate_field(output_name, output_data))', 'range': [2168, 2193], 'children': []}, {'type': 'Block', 'name': 'if_block', 'range': [2194, 2202], 'children': [{'type': 'RaiseStatement', 'name': 'raise_ValueError', 'range': [2196, 2202], 'children': []}]}]}, {'type': 'YieldStatement', 'name': 'yield_output_name_output_data', 'range': [2203, 2207], 'children': []}]}]}]}]}]}
2025-01-08 10:25:19,840 - INFO - Completed main AST analysis flow
2025-01-08 10:25:19,841 - INFO - Successfully processed chunk
2025-01-08 10:25:19,987 - INFO - Starting code generation from AST
2025-01-08 10:26:20,311 - INFO - Successfully generated code from AST
2025-01-08 10:26:20,312 - INFO - Starting static code similarity comparison
2025-01-08 10:26:20,377 - INFO - Static similarity result: {'final_score': 40.7, 'length_similarity': 53.9, 'token_similarity': 10.21, 'structure_similarity': 37.6, 'function_similarity': 100, 'complexity_similarity': 1.56, 'variable_similarity': 100}
