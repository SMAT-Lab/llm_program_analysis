2025-01-08 09:16:34,933 - INFO - Processing sample 9
2025-01-08 09:16:34,939 - INFO - Starting Step 0: Splitting code into top-level declarations
2025-01-08 09:16:42,994 - INFO - Successfully split code into 3 top-level declarations
2025-01-08 09:16:42,995 - INFO - Processing chunk #0 (size=104 chars, start_index=0)
2025-01-08 09:16:42,995 - INFO - Processing chunk with 104 chars starting at index 0
2025-01-08 09:16:42,995 - INFO - Starting main AST analysis flow
2025-01-08 09:16:42,996 - INFO - Tokenized code into 29 tokens
2025-01-08 09:16:42,996 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:16:42,996 - INFO - Processing chunk #1 (size=451 chars, start_index=29)
2025-01-08 09:16:42,997 - INFO - Processing chunk with 451 chars starting at index 29
2025-01-08 09:16:42,997 - INFO - Starting main AST analysis flow
2025-01-08 09:16:42,997 - INFO - Tokenized code into 130 tokens
2025-01-08 09:16:42,997 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:16:43,001 - INFO - Processing chunk #2 (size=1 chars, start_index=159)
2025-01-08 09:16:43,002 - INFO - Processing chunk with 1 chars starting at index 159
2025-01-08 09:16:43,002 - INFO - Starting main AST analysis flow
2025-01-08 09:16:43,002 - INFO - Tokenized code into 1 tokens
2025-01-08 09:16:43,002 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:16:50,734 - INFO - Step 1 result: {'error': "Insufficient data provided. The token list contains only a single newline character, which does not constitute a top-level declaration in any known programming language, including 'cangjie'. Please provide a more comprehensive token list for analysis."}
2025-01-08 09:16:50,734 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:16:54,730 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [0, 28], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 1], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [3, 6], 'children': []}, {'type': 'TypeAliasDeclaration', 'name': 'P', 'range': [13, 18], 'children': []}, {'type': 'TypeAliasDeclaration', 'name': 'R', 'range': [20, 25], 'children': []}]}
2025-01-08 09:16:54,731 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:16:58,968 - INFO - Step 2 result: {'error': "Insufficient data provided. The token list contains only a single newline character, which does not constitute a top-level declaration in any known programming language, including 'cangjie'. Please provide a more comprehensive token list for analysis."}
2025-01-08 09:16:58,968 - INFO - Starting Step 3: AST simplification
2025-01-08 09:17:07,369 - INFO - Step 3 result: {'error': "Insufficient data provided. The token list contains only a single newline character, which does not constitute a top-level declaration in any known programming language, including 'cangjie'. Please provide a more comprehensive token list for analysis."}
2025-01-08 09:17:07,369 - INFO - Starting Step 4: AST normalization
2025-01-08 09:17:07,771 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [29, 158], 'children': [{'type': 'FunctionDeclaration', 'name': 'thread_cached', 'range': [29, 158], 'children': [{'type': 'Parameter', 'name': 'func', 'range': [32, 48], 'children': []}, {'type': 'ReturnType', 'name': 'Callable', 'range': [43, 48], 'children': []}, {'type': 'VariableDeclaration', 'name': 'thread_local', 'range': [51, 57], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'wrapper', 'range': [60, 157], 'children': [{'type': 'Parameter', 'name': 'args', 'range': [64, 68], 'children': []}, {'type': 'Parameter', 'name': 'kwargs', 'range': [72, 76], 'children': []}, {'type': 'ReturnType', 'name': 'R', 'range': [80, 80], 'children': []}, {'type': 'VariableDeclaration', 'name': 'cache', 'range': [83, 92], 'children': []}, {'type': 'IfStatement', 'name': '', 'range': [94, 108], 'children': [{'type': 'VariableDeclaration', 'name': 'cache', 'range': [100, 107], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'key', 'range': [109, 125], 'children': []}, {'type': 'IfStatement', 'name': '', 'range': [127, 148], 'children': [{'type': 'AssignmentExpression', 'name': 'cache', 'range': [134, 147], 'children': []}]}, {'type': 'ReturnStatement', 'name': '', 'range': [149, 153], 'children': []}]}, {'type': 'ReturnStatement', 'name': '', 'range': [156, 157], 'children': []}]}]}
2025-01-08 09:17:07,771 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:17:16,144 - INFO - Step 2 result: {'nodes': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 1], 'children': [{'type': 'ImportSource', 'name': 'threading', 'range': [1, 1], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [3, 6], 'children': [{'type': 'ImportSource', 'name': 'typing', 'range': [4, 4], 'children': []}, {'type': 'ImportedItems', 'name': '', 'range': [5, 6], 'children': [{'type': 'ImportedItem', 'name': 'Callable', 'range': [6, 6], 'children': []}, {'type': 'ImportedItem', 'name': 'ParamSpec', 'range': [8, 8], 'children': []}, {'type': 'ImportedItem', 'name': 'TypeVar', 'range': [10, 10], 'children': []}]}]}, {'type': 'TypeAliasDeclaration', 'name': 'P', 'range': [13, 18], 'children': [{'type': 'TypeAliasTarget', 'name': 'ParamSpec', 'range': [15, 15], 'children': []}, {'type': 'TypeParameter', 'name': 'P', 'range': [17, 17], 'children': []}]}, {'type': 'TypeAliasDeclaration', 'name': 'R', 'range': [20, 25], 'children': [{'type': 'TypeAliasTarget', 'name': 'TypeVar', 'range': [22, 22], 'children': []}, {'type': 'TypeParameter', 'name': 'R', 'range': [24, 24], 'children': []}]}]}
2025-01-08 09:17:16,145 - INFO - Starting Step 3: AST simplification
2025-01-08 09:17:16,653 - INFO - Step 4 result: {'type': 'Error', 'name': 'InsufficientDataError', 'range': [0, 1], 'children': []}
2025-01-08 09:17:16,653 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:17:23,236 - INFO - Step 5 result: {'type': 'Program', 'name': 'MainOrSomething', 'range': [0, 1], 'children': [{'type': 'Error', 'name': 'InsufficientDataError', 'range': [0, 1], 'children': []}]}
2025-01-08 09:17:23,236 - INFO - Completed main AST analysis flow
2025-01-08 09:17:23,236 - INFO - Successfully processed chunk
2025-01-08 09:17:35,973 - INFO - Step 3 result: {'nodes': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 1], 'children': [{'type': 'ImportSource', 'name': 'threading', 'range': [1, 1], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [3, 6], 'children': [{'type': 'ImportSource', 'name': 'typing', 'range': [4, 4], 'children': []}, {'type': 'ImportedItems', 'name': '', 'range': [5, 6], 'children': [{'type': 'ImportedItem', 'name': 'Callable', 'range': [6, 6], 'children': []}, {'type': 'ImportedItem', 'name': 'ParamSpec', 'range': [8, 8], 'children': []}, {'type': 'ImportedItem', 'name': 'TypeVar', 'range': [10, 10], 'children': []}]}]}, {'type': 'TypeAliasDeclaration', 'name': 'P', 'range': [13, 18], 'children': [{'type': 'TypeAliasTarget', 'name': 'ParamSpec', 'range': [15, 15], 'children': []}, {'type': 'TypeParameter', 'name': 'P', 'range': [17, 17], 'children': []}]}, {'type': 'TypeAliasDeclaration', 'name': 'R', 'range': [20, 25], 'children': [{'type': 'TypeAliasTarget', 'name': 'TypeVar', 'range': [22, 22], 'children': []}, {'type': 'TypeParameter', 'name': 'R', 'range': [24, 24], 'children': []}]}]}
2025-01-08 09:17:35,974 - INFO - Starting Step 4: AST normalization
2025-01-08 09:18:04,279 - INFO - Step 4 result: {'nodes': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 1], 'children': [{'type': 'ImportSource', 'name': 'threading', 'range': [1, 1], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [3, 6], 'children': [{'type': 'ImportSource', 'name': 'typing', 'range': [4, 4], 'children': []}, {'type': 'ImportedItems', 'name': '', 'range': [5, 6], 'children': [{'type': 'ImportedItem', 'name': 'Callable', 'range': [6, 6], 'children': []}, {'type': 'ImportedItem', 'name': 'ParamSpec', 'range': [8, 8], 'children': []}, {'type': 'ImportedItem', 'name': 'TypeVar', 'range': [10, 10], 'children': []}]}]}, {'type': 'TypeAliasDeclaration', 'name': 'P', 'range': [13, 18], 'children': [{'type': 'TypeAliasTarget', 'name': 'ParamSpec', 'range': [15, 15], 'children': []}, {'type': 'TypeParameter', 'name': 'P', 'range': [17, 17], 'children': []}]}, {'type': 'TypeAliasDeclaration', 'name': 'R', 'range': [20, 25], 'children': [{'type': 'TypeAliasTarget', 'name': 'TypeVar', 'range': [22, 22], 'children': []}, {'type': 'TypeParameter', 'name': 'R', 'range': [24, 24], 'children': []}]}]}
2025-01-08 09:18:04,279 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:18:11,290 - INFO - Step 2 result: {'type': 'Program', 'name': '', 'range': [29, 158], 'children': [{'type': 'FunctionDeclaration', 'name': 'thread_cached', 'range': [29, 158], 'children': [{'type': 'Parameter', 'name': 'func', 'range': [32, 48], 'children': [{'type': 'TypeAnnotation', 'name': 'Callable', 'range': [34, 48], 'children': []}]}, {'type': 'ReturnType', 'name': 'Callable', 'range': [43, 48], 'children': []}, {'type': 'VariableDeclaration', 'name': 'thread_local', 'range': [51, 57], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [52, 57], 'children': [{'type': 'CallExpression', 'name': 'threading.local', 'range': [53, 57], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'wrapper', 'range': [60, 157], 'children': [{'type': 'Parameter', 'name': 'args', 'range': [64, 68], 'children': [{'type': 'TypeAnnotation', 'name': 'P.args', 'range': [66, 68], 'children': []}]}, {'type': 'Parameter', 'name': 'kwargs', 'range': [72, 76], 'children': [{'type': 'TypeAnnotation', 'name': 'P.kwargs', 'range': [74, 76], 'children': []}]}, {'type': 'ReturnType', 'name': 'R', 'range': [80, 80], 'children': []}, {'type': 'VariableDeclaration', 'name': 'cache', 'range': [83, 92], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [84, 92], 'children': [{'type': 'CallExpression', 'name': 'getattr', 'range': [85, 92], 'children': [{'type': 'Identifier', 'name': 'thread_local', 'range': [87, 87], 'children': []}, {'type': 'StringLiteral', 'name': '"cache"', 'range': [89, 89], 'children': []}, {'type': 'Identifier', 'name': 'None', 'range': [91, 91], 'children': []}]}]}]}, {'type': 'IfStatement', 'name': '', 'range': [94, 108], 'children': [{'type': 'Condition', 'name': 'cache is None', 'range': [95, 97], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [98, 108], 'children': [{'type': 'VariableDeclaration', 'name': 'cache', 'range': [100, 107], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [101, 107], 'children': [{'type': 'ObjectExpression', 'name': '{}', 'range': [106, 107], 'children': []}]}]}]}]}, {'type': 'VariableDeclaration', 'name': 'key', 'range': [109, 125], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [110, 125], 'children': [{'type': 'TupleExpression', 'name': '', 'range': [111, 125], 'children': [{'type': 'Identifier', 'name': 'args', 'range': [112, 112], 'children': []}, {'type': 'CallExpression', 'name': 'tuple', 'range': [114, 124], 'children': [{'type': 'CallExpression', 'name': 'sorted', 'range': [116, 123], 'children': [{'type': 'CallExpression', 'name': 'items', 'range': [120, 122], 'children': [{'type': 'Identifier', 'name': 'kwargs', 'range': [118, 118], 'children': []}]}]}]}]}]}]}, {'type': 'IfStatement', 'name': '', 'range': [127, 148], 'children': [{'type': 'Condition', 'name': 'key not in cache', 'range': [128, 131], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [132, 148], 'children': [{'type': 'AssignmentExpression', 'name': 'cache[key] = func(*args, **kwargs)', 'range': [134, 147], 'children': [{'type': 'MemberExpression', 'name': 'cache[key]', 'range': [134, 137], 'children': [{'type': 'Identifier', 'name': 'cache', 'range': [134, 134], 'children': []}, {'type': 'Identifier', 'name': 'key', 'range': [136, 136], 'children': []}]}, {'type': 'CallExpression', 'name': 'func', 'range': [139, 147], 'children': [{'type': 'SpreadElement', 'name': '*args', 'range': [141, 142], 'children': []}, {'type': 'SpreadElement', 'name': '**kwargs', 'range': [144, 146], 'children': []}]}]}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [149, 153], 'children': [{'type': 'MemberExpression', 'name': 'cache[key]', 'range': [150, 153], 'children': [{'type': 'Identifier', 'name': 'cache', 'range': [150, 150], 'children': []}, {'type': 'Identifier', 'name': 'key', 'range': [152, 152], 'children': []}]}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [156, 157], 'children': [{'type': 'Identifier', 'name': 'wrapper', 'range': [157, 157], 'children': []}]}]}]}
2025-01-08 09:18:11,290 - INFO - Starting Step 3: AST simplification
2025-01-08 09:18:24,936 - INFO - Step 5 result: {'type': 'Program', 'name': 'MainOrSomething', 'range': [0, 25], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 1], 'children': [{'type': 'ImportSource', 'name': 'threading', 'range': [1, 1], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [3, 6], 'children': [{'type': 'ImportSource', 'name': 'typing', 'range': [4, 4], 'children': []}, {'type': 'ImportedItems', 'name': '', 'range': [5, 6], 'children': [{'type': 'ImportedItem', 'name': 'Callable', 'range': [6, 6], 'children': []}, {'type': 'ImportedItem', 'name': 'ParamSpec', 'range': [8, 8], 'children': []}, {'type': 'ImportedItem', 'name': 'TypeVar', 'range': [10, 10], 'children': []}]}]}, {'type': 'TypeAliasDeclaration', 'name': 'P', 'range': [13, 18], 'children': [{'type': 'TypeAliasTarget', 'name': 'ParamSpec', 'range': [15, 15], 'children': []}, {'type': 'TypeParameter', 'name': 'P', 'range': [17, 17], 'children': []}]}, {'type': 'TypeAliasDeclaration', 'name': 'R', 'range': [20, 25], 'children': [{'type': 'TypeAliasTarget', 'name': 'TypeVar', 'range': [22, 22], 'children': []}, {'type': 'TypeParameter', 'name': 'R', 'range': [24, 24], 'children': []}]}]}
2025-01-08 09:18:24,936 - INFO - Completed main AST analysis flow
2025-01-08 09:18:24,937 - INFO - Successfully processed chunk
2025-01-08 09:19:18,776 - INFO - Step 3 result: {'type': 'Program', 'name': '', 'range': [29, 158], 'children': [{'type': 'FunctionDeclaration', 'name': 'thread_cached', 'range': [29, 158], 'children': [{'type': 'Parameter', 'name': 'func', 'range': [32, 48], 'children': [{'type': 'TypeAnnotation', 'name': 'Callable', 'range': [34, 48], 'children': []}]}, {'type': 'ReturnType', 'name': 'Callable', 'range': [43, 48], 'children': []}, {'type': 'VariableDeclaration', 'name': 'thread_local', 'range': [51, 57], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [52, 57], 'children': [{'type': 'CallExpression', 'name': 'threading.local', 'range': [53, 57], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'wrapper', 'range': [60, 157], 'children': [{'type': 'Parameter', 'name': 'args', 'range': [64, 68], 'children': [{'type': 'TypeAnnotation', 'name': 'P.args', 'range': [66, 68], 'children': []}]}, {'type': 'Parameter', 'name': 'kwargs', 'range': [72, 76], 'children': [{'type': 'TypeAnnotation', 'name': 'P.kwargs', 'range': [74, 76], 'children': []}]}, {'type': 'ReturnType', 'name': 'R', 'range': [80, 80], 'children': []}, {'type': 'VariableDeclaration', 'name': 'cache', 'range': [83, 92], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [84, 92], 'children': [{'type': 'CallExpression', 'name': 'getattr', 'range': [85, 92], 'children': [{'type': 'Identifier', 'name': 'thread_local', 'range': [87, 87], 'children': []}, {'type': 'StringLiteral', 'name': '"cache"', 'range': [89, 89], 'children': []}, {'type': 'Identifier', 'name': 'None', 'range': [91, 91], 'children': []}]}]}]}, {'type': 'IfStatement', 'name': '', 'range': [94, 108], 'children': [{'type': 'Condition', 'name': 'cache is None', 'range': [95, 97], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [98, 108], 'children': [{'type': 'VariableDeclaration', 'name': 'cache', 'range': [100, 107], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [101, 107], 'children': [{'type': 'ObjectExpression', 'name': '{}', 'range': [106, 107], 'children': []}]}]}]}]}, {'type': 'VariableDeclaration', 'name': 'key', 'range': [109, 125], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [110, 125], 'children': [{'type': 'TupleExpression', 'name': '', 'range': [111, 125], 'children': [{'type': 'Identifier', 'name': 'args', 'range': [112, 112], 'children': []}, {'type': 'CallExpression', 'name': 'tuple', 'range': [114, 124], 'children': [{'type': 'CallExpression', 'name': 'sorted', 'range': [116, 123], 'children': [{'type': 'CallExpression', 'name': 'items', 'range': [120, 122], 'children': [{'type': 'Identifier', 'name': 'kwargs', 'range': [118, 118], 'children': []}]}]}]}]}]}]}, {'type': 'IfStatement', 'name': '', 'range': [127, 148], 'children': [{'type': 'Condition', 'name': 'key not in cache', 'range': [128, 131], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [132, 148], 'children': [{'type': 'AssignmentExpression', 'name': 'cache[key] = func(*args, **kwargs)', 'range': [134, 147], 'children': [{'type': 'MemberExpression', 'name': 'cache[key]', 'range': [134, 137], 'children': [{'type': 'Identifier', 'name': 'cache', 'range': [134, 134], 'children': []}, {'type': 'Identifier', 'name': 'key', 'range': [136, 136], 'children': []}]}, {'type': 'CallExpression', 'name': 'func', 'range': [139, 147], 'children': [{'type': 'SpreadElement', 'name': '*args', 'range': [141, 142], 'children': []}, {'type': 'SpreadElement', 'name': '**kwargs', 'range': [144, 146], 'children': []}]}]}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [149, 153], 'children': [{'type': 'MemberExpression', 'name': 'cache[key]', 'range': [150, 153], 'children': [{'type': 'Identifier', 'name': 'cache', 'range': [150, 150], 'children': []}, {'type': 'Identifier', 'name': 'key', 'range': [152, 152], 'children': []}]}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [156, 157], 'children': [{'type': 'Identifier', 'name': 'wrapper', 'range': [157, 157], 'children': []}]}]}]}
2025-01-08 09:19:18,776 - INFO - Starting Step 4: AST normalization
2025-01-08 09:20:17,675 - INFO - Step 4 result: {'type': 'Program', 'name': '', 'range': [29, 158], 'children': [{'type': 'FunctionDecl', 'name': 'thread_cached', 'range': [29, 158], 'children': [{'type': 'Parameter', 'name': 'func', 'range': [32, 48], 'children': [{'type': 'TypeAnnotation', 'name': 'Callable', 'range': [34, 48], 'children': []}]}, {'type': 'ReturnType', 'name': 'Callable', 'range': [43, 48], 'children': []}, {'type': 'VariableDecl', 'name': 'thread_local', 'range': [51, 57], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [52, 57], 'children': [{'type': 'CallExpression', 'name': 'threading.local', 'range': [53, 57], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'wrapper', 'range': [60, 157], 'children': [{'type': 'Parameter', 'name': 'args', 'range': [64, 68], 'children': [{'type': 'TypeAnnotation', 'name': 'P.args', 'range': [66, 68], 'children': []}]}, {'type': 'Parameter', 'name': 'kwargs', 'range': [72, 76], 'children': [{'type': 'TypeAnnotation', 'name': 'P.kwargs', 'range': [74, 76], 'children': []}]}, {'type': 'ReturnType', 'name': 'R', 'range': [80, 80], 'children': []}, {'type': 'VariableDecl', 'name': 'cache', 'range': [83, 92], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [84, 92], 'children': [{'type': 'CallExpression', 'name': 'getattr', 'range': [85, 92], 'children': [{'type': 'Identifier', 'name': 'thread_local', 'range': [87, 87], 'children': []}, {'type': 'Literal', 'name': '"cache"', 'range': [89, 89], 'children': []}, {'type': 'Identifier', 'name': 'None', 'range': [91, 91], 'children': []}]}]}]}, {'type': 'IfStatement', 'name': '', 'range': [94, 108], 'children': [{'type': 'Condition', 'name': 'cache is None', 'range': [95, 97], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [98, 108], 'children': [{'type': 'VariableDecl', 'name': 'cache', 'range': [100, 107], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [101, 107], 'children': [{'type': 'ObjectExpression', 'name': '{}', 'range': [106, 107], 'children': []}]}]}]}]}, {'type': 'VariableDecl', 'name': 'key', 'range': [109, 125], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [110, 125], 'children': [{'type': 'TupleExpression', 'name': '', 'range': [111, 125], 'children': [{'type': 'Identifier', 'name': 'args', 'range': [112, 112], 'children': []}, {'type': 'CallExpression', 'name': 'tuple', 'range': [114, 124], 'children': [{'type': 'CallExpression', 'name': 'sorted', 'range': [116, 123], 'children': [{'type': 'CallExpression', 'name': 'items', 'range': [120, 122], 'children': [{'type': 'Identifier', 'name': 'kwargs', 'range': [118, 118], 'children': []}]}]}]}]}]}]}, {'type': 'IfStatement', 'name': '', 'range': [127, 148], 'children': [{'type': 'Condition', 'name': 'key not in cache', 'range': [128, 131], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [132, 148], 'children': [{'type': 'AssignmentExpression', 'name': 'cache[key] = func(*args, **kwargs)', 'range': [134, 147], 'children': [{'type': 'MemberExpression', 'name': 'cache[key]', 'range': [134, 137], 'children': [{'type': 'Identifier', 'name': 'cache', 'range': [134, 134], 'children': []}, {'type': 'Identifier', 'name': 'key', 'range': [136, 136], 'children': []}]}, {'type': 'CallExpression', 'name': 'func', 'range': [139, 147], 'children': [{'type': 'SpreadElement', 'name': '*args', 'range': [141, 142], 'children': []}, {'type': 'SpreadElement', 'name': '**kwargs', 'range': [144, 146], 'children': []}]}]}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [149, 153], 'children': [{'type': 'MemberExpression', 'name': 'cache[key]', 'range': [150, 153], 'children': [{'type': 'Identifier', 'name': 'cache', 'range': [150, 150], 'children': []}, {'type': 'Identifier', 'name': 'key', 'range': [152, 152], 'children': []}]}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [156, 157], 'children': [{'type': 'Identifier', 'name': 'wrapper', 'range': [157, 157], 'children': []}]}]}]}
2025-01-08 09:20:17,676 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:21:17,982 - INFO - Step 5 result: {'type': 'Program', 'name': '', 'range': [29, 158], 'children': [{'type': 'FunctionDecl', 'name': 'thread_cached', 'range': [29, 158], 'children': [{'type': 'Parameter', 'name': 'func', 'range': [32, 48], 'children': [{'type': 'TypeAnnotation', 'name': 'Callable', 'range': [34, 48], 'children': []}]}, {'type': 'ReturnType', 'name': 'Callable', 'range': [43, 48], 'children': []}, {'type': 'VariableDecl', 'name': 'thread_local', 'range': [51, 57], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [52, 57], 'children': [{'type': 'CallExpression', 'name': 'threading.local', 'range': [53, 57], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'wrapper', 'range': [60, 157], 'children': [{'type': 'Parameter', 'name': 'args', 'range': [64, 68], 'children': [{'type': 'TypeAnnotation', 'name': 'P.args', 'range': [66, 68], 'children': []}]}, {'type': 'Parameter', 'name': 'kwargs', 'range': [72, 76], 'children': [{'type': 'TypeAnnotation', 'name': 'P.kwargs', 'range': [74, 76], 'children': []}]}, {'type': 'ReturnType', 'name': 'R', 'range': [80, 80], 'children': []}, {'type': 'VariableDecl', 'name': 'cache', 'range': [83, 92], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [84, 92], 'children': [{'type': 'CallExpression', 'name': 'getattr', 'range': [85, 92], 'children': [{'type': 'Identifier', 'name': 'thread_local', 'range': [87, 87], 'children': []}, {'type': 'Literal', 'name': '"cache"', 'range': [89, 89], 'children': []}, {'type': 'Identifier', 'name': 'None', 'range': [91, 91], 'children': []}]}]}]}, {'type': 'IfStatement', 'name': '', 'range': [94, 108], 'children': [{'type': 'Condition', 'name': 'cache is None', 'range': [95, 97], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [98, 108], 'children': [{'type': 'VariableDecl', 'name': 'cache', 'range': [100, 107], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [101, 107], 'children': [{'type': 'ObjectExpression', 'name': '{}', 'range': [106, 107], 'children': []}]}]}]}]}, {'type': 'VariableDecl', 'name': 'key', 'range': [109, 125], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [110, 125], 'children': [{'type': 'TupleExpression', 'name': '', 'range': [111, 125], 'children': [{'type': 'Identifier', 'name': 'args', 'range': [112, 112], 'children': []}, {'type': 'CallExpression', 'name': 'tuple', 'range': [114, 124], 'children': [{'type': 'CallExpression', 'name': 'sorted', 'range': [116, 123], 'children': [{'type': 'CallExpression', 'name': 'items', 'range': [120, 122], 'children': [{'type': 'Identifier', 'name': 'kwargs', 'range': [118, 118], 'children': []}]}]}]}]}]}]}, {'type': 'IfStatement', 'name': '', 'range': [127, 148], 'children': [{'type': 'Condition', 'name': 'key not in cache', 'range': [128, 131], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [132, 148], 'children': [{'type': 'AssignmentExpression', 'name': 'cache[key] = func(*args, **kwargs)', 'range': [134, 147], 'children': [{'type': 'MemberExpression', 'name': 'cache[key]', 'range': [134, 137], 'children': [{'type': 'Identifier', 'name': 'cache', 'range': [134, 134], 'children': []}, {'type': 'Identifier', 'name': 'key', 'range': [136, 136], 'children': []}]}, {'type': 'CallExpression', 'name': 'func', 'range': [139, 147], 'children': [{'type': 'SpreadElement', 'name': '*args', 'range': [141, 142], 'children': []}, {'type': 'SpreadElement', 'name': '**kwargs', 'range': [144, 146], 'children': []}]}]}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [149, 153], 'children': [{'type': 'MemberExpression', 'name': 'cache[key]', 'range': [150, 153], 'children': [{'type': 'Identifier', 'name': 'cache', 'range': [150, 150], 'children': []}, {'type': 'Identifier', 'name': 'key', 'range': [152, 152], 'children': []}]}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [156, 157], 'children': [{'type': 'Identifier', 'name': 'wrapper', 'range': [157, 157], 'children': []}]}]}]}
2025-01-08 09:21:17,982 - INFO - Completed main AST analysis flow
2025-01-08 09:21:17,983 - INFO - Successfully processed chunk
2025-01-08 09:21:17,994 - INFO - Starting code generation from AST
2025-01-08 09:21:26,774 - INFO - Successfully generated code from AST
2025-01-08 09:21:26,775 - INFO - Starting static code similarity comparison
2025-01-08 09:21:26,778 - INFO - Static similarity result: {'final_score': 100.0, 'length_similarity': 100.0, 'token_similarity': 100.0, 'structure_similarity': 100.0, 'function_similarity': 100, 'complexity_similarity': 100.0, 'variable_similarity': 100}
