2025-01-08 10:27:27,708 - INFO - Processing sample 194
2025-01-08 10:27:27,708 - INFO - Starting Step 0: Splitting code into top-level declarations
2025-01-08 10:27:34,553 - INFO - Successfully split code into 6 top-level declarations
2025-01-08 10:27:34,554 - INFO - Processing chunk #0 (size=217 chars, start_index=0)
2025-01-08 10:27:34,554 - INFO - Processing chunk with 217 chars starting at index 0
2025-01-08 10:27:34,554 - INFO - Starting main AST analysis flow
2025-01-08 10:27:34,554 - INFO - Tokenized code into 4 tokens
2025-01-08 10:27:34,554 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:34,555 - INFO - Processing chunk #1 (size=35 chars, start_index=4)
2025-01-08 10:27:34,559 - INFO - Processing chunk #2 (size=147 chars, start_index=9)
2025-01-08 10:27:34,559 - INFO - Processing chunk with 35 chars starting at index 4
2025-01-08 10:27:34,560 - INFO - Processing chunk #3 (size=1815 chars, start_index=51)
2025-01-08 10:27:34,560 - INFO - Processing chunk with 147 chars starting at index 9
2025-01-08 10:27:34,560 - INFO - Processing chunk #4 (size=130 chars, start_index=187)
2025-01-08 10:27:34,560 - INFO - Starting main AST analysis flow
2025-01-08 10:27:34,561 - INFO - Processing chunk #5 (size=163 chars, start_index=195)
2025-01-08 10:27:34,561 - INFO - Processing chunk with 1815 chars starting at index 51
2025-01-08 10:27:34,561 - INFO - Starting main AST analysis flow
2025-01-08 10:27:34,561 - INFO - Processing chunk with 130 chars starting at index 187
2025-01-08 10:27:34,561 - INFO - Tokenized code into 5 tokens
2025-01-08 10:27:34,561 - INFO - Processing chunk with 163 chars starting at index 195
2025-01-08 10:27:34,562 - INFO - Starting main AST analysis flow
2025-01-08 10:27:34,562 - INFO - Tokenized code into 42 tokens
2025-01-08 10:27:34,562 - INFO - Starting main AST analysis flow
2025-01-08 10:27:34,562 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:34,562 - INFO - Starting main AST analysis flow
2025-01-08 10:27:34,562 - INFO - Tokenized code into 136 tokens
2025-01-08 10:27:34,563 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:34,563 - INFO - Tokenized code into 8 tokens
2025-01-08 10:27:34,563 - INFO - Tokenized code into 48 tokens
2025-01-08 10:27:34,563 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:34,567 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:34,571 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:40,194 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [0, 3], 'children': []}
2025-01-08 10:27:40,194 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:27:40,533 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [187, 194], 'children': []}
2025-01-08 10:27:40,533 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:27:40,832 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [4, 8], 'children': []}
2025-01-08 10:27:40,907 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:27:41,075 - INFO - Step 1 result: {'type': 'Program', 'name': 'generate_all_permutations', 'range': [9, 25], 'children': []}
2025-01-08 10:27:41,075 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:27:41,375 - INFO - Step 1 result: {'type': 'Program', 'name': 'create_state_space_tree', 'range': [51, 186], 'children': []}
2025-01-08 10:27:41,378 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:27:43,743 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [195, 242], 'children': [{'type': 'VariableDeclaration', 'name': 'sequence', 'range': [195, 212], 'children': []}, {'type': 'FunctionCall', 'name': 'generate_all_permutations', 'range': [214, 217], 'children': []}, {'type': 'VariableDeclaration', 'name': 'sequence_2', 'range': [220, 235], 'children': []}, {'type': 'FunctionCall', 'name': 'generate_all_permutations', 'range': [237, 240], 'children': []}]}
2025-01-08 10:27:43,743 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:27:48,157 - INFO - Step 2 result: {'type': 'Program', 'name': '', 'range': [0, 3], 'children': [{'type': 'Comment', 'name': '', 'range': [1, 1], 'children': []}]}
2025-01-08 10:27:48,157 - INFO - Starting Step 3: AST simplification
2025-01-08 10:27:51,999 - INFO - Step 2 result: {'type': 'Program', 'name': '', 'range': [4, 8], 'children': [{'type': 'ImportFrom', 'name': 'annotations', 'range': [4, 8], 'children': [{'type': 'From', 'name': 'from', 'range': [4, 4], 'children': []}, {'type': 'Module', 'name': '__future__', 'range': [5, 5], 'children': []}, {'type': 'Import', 'name': 'import', 'range': [6, 6], 'children': []}, {'type': 'Annotation', 'name': 'annotations', 'range': [7, 7], 'children': []}]}]}
2025-01-08 10:27:51,999 - INFO - Starting Step 3: AST simplification
2025-01-08 10:27:53,781 - INFO - Step 2 result: {'type': 'Program', 'name': '', 'range': [187, 194], 'children': [{'type': 'StringLiteral', 'name': '', 'range': [187, 187], 'children': []}, {'type': 'StringLiteral', 'name': '', 'range': [188, 192], 'children': [{'type': 'PrintStatement', 'name': '', 'range': [188, 192], 'children': [{'type': 'StringLiteral', 'name': '', 'range': [188, 192], 'children': []}]}]}, {'type': 'StringLiteral', 'name': '', 'range': [193, 193], 'children': []}, {'type': 'NewLine', 'name': '', 'range': [194, 194], 'children': []}]}
2025-01-08 10:27:53,781 - INFO - Starting Step 3: AST simplification
2025-01-08 10:27:57,705 - INFO - Step 3 result: {'type': 'Program', 'name': '', 'range': [0, 3], 'children': [{'type': 'Comment', 'name': '', 'range': [1, 1], 'children': []}]}
2025-01-08 10:27:57,781 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:02,412 - INFO - Step 2 result: {'type': 'Program', 'name': 'generate_all_permutations', 'range': [9, 25], 'children': [{'type': 'FunctionDeclaration', 'name': 'generate_all_permutations', 'range': [9, 25], 'children': [{'type': 'Parameter', 'name': 'sequence', 'range': [12, 19], 'children': [{'type': 'TypeAnnotation', 'name': 'list[int | str]', 'range': [14, 19], 'children': []}]}, {'type': 'ReturnType', 'name': 'None', 'range': [23, 23], 'children': []}, {'type': 'FunctionBody', 'name': '', 'range': [25, 25], 'children': [{'type': 'ExpressionStatement', 'name': 'create_state_space_tree', 'range': [26, 48], 'children': [{'type': 'CallExpression', 'name': 'create_state_space_tree', 'range': [26, 48], 'children': [{'type': 'Argument', 'name': 'sequence', 'range': [28, 28], 'children': []}, {'type': 'Argument', 'name': '[]', 'range': [30, 31], 'children': []}, {'type': 'Argument', 'name': '0', 'range': [33, 33], 'children': []}, {'type': 'Argument', 'name': '[0 for i in range(len(sequence))]', 'range': [35, 47], 'children': [{'type': 'ListComprehension', 'name': '', 'range': [35, 47], 'children': [{'type': 'Expression', 'name': '0', 'range': [36, 36], 'children': []}, {'type': 'ForStatement', 'name': 'for i in range(len(sequence))', 'range': [37, 46], 'children': [{'type': 'VariableDeclaration', 'name': 'i', 'range': [38, 38], 'children': []}, {'type': 'CallExpression', 'name': 'range', 'range': [40, 46], 'children': [{'type': 'Argument', 'name': 'len(sequence)', 'range': [42, 45], 'children': [{'type': 'CallExpression', 'name': 'len', 'range': [42, 45], 'children': [{'type': 'Argument', 'name': 'sequence', 'range': [44, 44], 'children': []}]}]}]}]}]}]}]}]}]}]}]}
2025-01-08 10:28:02,430 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:03,084 - INFO - Step 3 result: {'type': 'Program', 'name': '', 'range': [4, 8], 'children': [{'type': 'ImportFrom', 'name': 'annotations', 'range': [4, 8], 'children': [{'type': 'From', 'name': 'from', 'range': [4, 4], 'children': []}, {'type': 'Module', 'name': '__future__', 'range': [5, 5], 'children': []}, {'type': 'Import', 'name': 'import', 'range': [6, 6], 'children': []}, {'type': 'Annotation', 'name': 'annotations', 'range': [7, 7], 'children': []}]}]}
2025-01-08 10:28:03,084 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:03,826 - INFO - Step 3 result: {'type': 'Program', 'name': '', 'range': [187, 194], 'children': [{'type': 'StringLiteral', 'name': '', 'range': [187, 187], 'children': []}, {'type': 'PrintStatement', 'name': '', 'range': [188, 192], 'children': [{'type': 'StringLiteral', 'name': '', 'range': [188, 192], 'children': []}]}, {'type': 'StringLiteral', 'name': '', 'range': [193, 193], 'children': []}, {'type': 'NewLine', 'name': '', 'range': [194, 194], 'children': []}]}
2025-01-08 10:28:03,826 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:08,602 - INFO - Step 2 result: {'type': 'Program', 'name': 'create_state_space_tree', 'range': [51, 186], 'children': [{'type': 'FunctionDeclaration', 'name': 'create_state_space_tree', 'range': [51, 186], 'children': [{'type': 'Parameters', 'name': 'parameters', 'range': [53, 88], 'children': [{'type': 'Parameter', 'name': 'sequence', 'range': [55, 62], 'children': []}, {'type': 'Parameter', 'name': 'current_sequence', 'range': [65, 72], 'children': []}, {'type': 'Parameter', 'name': 'index', 'range': [75, 78], 'children': []}, {'type': 'Parameter', 'name': 'index_used', 'range': [80, 85], 'children': []}]}, {'type': 'ReturnType', 'name': 'None', 'range': [89, 91], 'children': []}, {'type': 'Docstring', 'name': 'docstring', 'range': [94, 102], 'children': []}, {'type': 'FunctionBody', 'name': 'body', 'range': [103, 186], 'children': [{'type': 'IfStatement', 'name': 'if_statement', 'range': [105, 121], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [106, 112], 'children': []}, {'type': 'Body', 'name': 'body', 'range': [114, 121], 'children': [{'type': 'PrintStatement', 'name': 'print_statement', 'range': [115, 118], 'children': []}, {'type': 'ReturnStatement', 'name': 'return_statement', 'range': [120, 121], 'children': []}]}]}, {'type': 'ForLoop', 'name': 'for_loop', 'range': [123, 185], 'children': [{'type': 'Initialization', 'name': 'initialization', 'range': [124, 132], 'children': []}, {'type': 'Condition', 'name': 'condition', 'range': [133, 141], 'children': []}, {'type': 'Body', 'name': 'body', 'range': [142, 185], 'children': [{'type': 'IfStatement', 'name': 'if_statement', 'range': [135, 141], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [136, 140], 'children': []}, {'type': 'Body', 'name': 'body', 'range': [142, 185], 'children': [{'type': 'ExpressionStatement', 'name': 'expression_statement', 'range': [143, 151], 'children': []}, {'type': 'Assignment', 'name': 'assignment', 'range': [153, 158], 'children': []}, {'type': 'FunctionCall', 'name': 'function_call', 'range': [160, 171], 'children': []}, {'type': 'ExpressionStatement', 'name': 'expression_statement', 'range': [173, 177], 'children': []}, {'type': 'Assignment', 'name': 'assignment', 'range': [179, 184], 'children': []}]}]}]}]}]}]}]}
2025-01-08 10:28:08,602 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:08,851 - INFO - Step 2 result: {'nodes': [{'type': 'VariableDeclaration', 'name': 'sequence', 'range': [195, 212], 'children': [{'type': 'TypeAnnotation', 'name': '', 'range': [196, 202], 'children': [{'type': 'ListType', 'name': '', 'range': [197, 202], 'children': [{'type': 'UnionType', 'name': '', 'range': [199, 201], 'children': [{'type': 'PrimitiveType', 'name': 'int', 'range': [199, 199], 'children': []}, {'type': 'PrimitiveType', 'name': 'str', 'range': [201, 201], 'children': []}]}]}]}, {'type': 'Assignment', 'name': '', 'range': [203, 212], 'children': [{'type': 'ListLiteral', 'name': '', 'range': [204, 212], 'children': [{'type': 'NumberLiteral', 'name': '3', 'range': [205, 205], 'children': []}, {'type': 'NumberLiteral', 'name': '1', 'range': [207, 207], 'children': []}, {'type': 'NumberLiteral', 'name': '2', 'range': [209, 209], 'children': []}, {'type': 'NumberLiteral', 'name': '4', 'range': [211, 211], 'children': []}]}]}]}, {'type': 'FunctionCall', 'name': 'generate_all_permutations', 'range': [214, 217], 'children': [{'type': 'Identifier', 'name': 'sequence', 'range': [216, 216], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'sequence_2', 'range': [220, 235], 'children': [{'type': 'TypeAnnotation', 'name': '', 'range': [221, 227], 'children': [{'type': 'ListType', 'name': '', 'range': [222, 227], 'children': [{'type': 'UnionType', 'name': '', 'range': [224, 226], 'children': [{'type': 'PrimitiveType', 'name': 'int', 'range': [224, 224], 'children': []}, {'type': 'PrimitiveType', 'name': 'str', 'range': [226, 226], 'children': []}]}]}]}, {'type': 'Assignment', 'name': '', 'range': [228, 235], 'children': [{'type': 'ListLiteral', 'name': '', 'range': [229, 235], 'children': [{'type': 'StringLiteral', 'name': '"A"', 'range': [230, 230], 'children': []}, {'type': 'StringLiteral', 'name': '"B"', 'range': [232, 232], 'children': []}, {'type': 'StringLiteral', 'name': '"C"', 'range': [234, 234], 'children': []}]}]}]}, {'type': 'FunctionCall', 'name': 'generate_all_permutations', 'range': [237, 240], 'children': [{'type': 'Identifier', 'name': 'sequence_2', 'range': [239, 239], 'children': []}]}]}
2025-01-08 10:28:08,877 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:10,023 - INFO - Step 4 result: {'type': 'Program', 'name': '', 'range': [0, 3], 'children': [{'type': 'Comment', 'name': '', 'range': [1, 1], 'children': []}]}
2025-01-08 10:28:10,047 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:28:13,767 - INFO - Step 4 result: {'type': 'Program', 'name': '', 'range': [4, 8], 'children': [{'type': 'ImportDeclaration', 'name': 'annotations', 'range': [4, 8], 'children': [{'type': 'FromKeyword', 'name': 'from', 'range': [4, 4], 'children': []}, {'type': 'ModuleSpecifier', 'name': '__future__', 'range': [5, 5], 'children': []}, {'type': 'ImportKeyword', 'name': 'import', 'range': [6, 6], 'children': []}, {'type': 'ImportedDefaultBinding', 'name': 'annotations', 'range': [7, 7], 'children': []}]}]}
2025-01-08 10:28:13,767 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:28:14,207 - INFO - Step 4 result: {'type': 'Program', 'name': '', 'range': [187, 194], 'children': [{'type': 'Literal', 'name': '', 'range': [187, 187], 'children': []}, {'type': 'ExpressionStatement', 'name': '', 'range': [188, 192], 'children': [{'type': 'CallExpression', 'name': 'print', 'range': [188, 192], 'children': [{'type': 'Literal', 'name': '', 'range': [188, 192], 'children': []}]}]}, {'type': 'Literal', 'name': '', 'range': [193, 193], 'children': []}, {'type': 'Literal', 'name': '', 'range': [194, 194], 'children': []}]}
2025-01-08 10:28:14,634 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:28:18,828 - INFO - Step 5 result: {'type': 'Program', 'name': '', 'range': [0, 3], 'children': [{'type': 'Comment', 'name': '', 'range': [1, 1], 'children': []}]}
2025-01-08 10:28:18,828 - INFO - Completed main AST analysis flow
2025-01-08 10:28:18,828 - INFO - Successfully processed chunk
2025-01-08 10:28:23,090 - INFO - Step 3 result: {'type': 'Program', 'name': 'generate_all_permutations', 'range': [9, 25], 'children': [{'type': 'FunctionDeclaration', 'name': 'generate_all_permutations', 'range': [9, 25], 'children': [{'type': 'Parameter', 'name': 'sequence', 'range': [12, 19], 'children': [{'type': 'TypeAnnotation', 'name': 'list[int | str]', 'range': [14, 19], 'children': []}]}, {'type': 'ReturnType', 'name': 'None', 'range': [23, 23], 'children': []}, {'type': 'FunctionBody', 'name': '', 'range': [25, 25], 'children': [{'type': 'ExpressionStatement', 'name': 'create_state_space_tree', 'range': [26, 48], 'children': [{'type': 'CallExpression', 'name': 'create_state_space_tree', 'range': [26, 48], 'children': [{'type': 'Argument', 'name': 'sequence', 'range': [28, 28], 'children': []}, {'type': 'Argument', 'name': '[]', 'range': [30, 31], 'children': []}, {'type': 'Argument', 'name': '0', 'range': [33, 33], 'children': []}, {'type': 'Argument', 'name': '[0 for i in range(len(sequence))]', 'range': [35, 47], 'children': [{'type': 'ListComprehension', 'name': '', 'range': [35, 47], 'children': [{'type': 'Expression', 'name': '0', 'range': [36, 36], 'children': []}, {'type': 'ForStatement', 'name': 'for i in range(len(sequence))', 'range': [37, 46], 'children': [{'type': 'VariableDeclaration', 'name': 'i', 'range': [38, 38], 'children': []}, {'type': 'CallExpression', 'name': 'range', 'range': [40, 46], 'children': [{'type': 'Argument', 'name': 'len(sequence)', 'range': [42, 45], 'children': [{'type': 'CallExpression', 'name': 'len', 'range': [42, 45], 'children': [{'type': 'Argument', 'name': 'sequence', 'range': [44, 44], 'children': []}]}]}]}]}]}]}]}]}]}]}]}
2025-01-08 10:28:23,094 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:23,164 - INFO - Step 5 result: {'type': 'Program', 'name': '', 'range': [4, 8], 'children': [{'type': 'ImportDeclaration', 'name': 'annotations', 'range': [4, 8], 'children': [{'type': 'FromKeyword', 'name': 'from', 'range': [4, 4], 'children': []}, {'type': 'ModuleSpecifier', 'name': '__future__', 'range': [5, 5], 'children': []}, {'type': 'ImportKeyword', 'name': 'import', 'range': [6, 6], 'children': []}, {'type': 'ImportedDefaultBinding', 'name': 'annotations', 'range': [7, 7], 'children': []}]}]}
2025-01-08 10:28:23,164 - INFO - Completed main AST analysis flow
2025-01-08 10:28:23,164 - INFO - Successfully processed chunk
2025-01-08 10:28:23,562 - INFO - Step 5 result: {'type': 'Program', 'name': '', 'range': [187, 194], 'children': [{'type': 'Literal', 'name': '', 'range': [187, 187], 'children': []}, {'type': 'ExpressionStatement', 'name': '', 'range': [188, 192], 'children': [{'type': 'CallExpression', 'name': 'print', 'range': [188, 192], 'children': [{'type': 'Literal', 'name': '', 'range': [188, 192], 'children': []}]}]}, {'type': 'Literal', 'name': '', 'range': [193, 193], 'children': []}, {'type': 'Literal', 'name': '', 'range': [194, 194], 'children': []}]}
2025-01-08 10:28:23,562 - INFO - Completed main AST analysis flow
2025-01-08 10:28:23,562 - INFO - Successfully processed chunk
2025-01-08 10:28:33,006 - INFO - Step 3 result: {'nodes': [{'type': 'VariableDeclaration', 'name': 'sequence', 'range': [195, 212], 'children': [{'type': 'TypeAnnotation', 'name': '', 'range': [196, 202], 'children': [{'type': 'ListType', 'name': '', 'range': [197, 202], 'children': [{'type': 'UnionType', 'name': '', 'range': [199, 201], 'children': [{'type': 'PrimitiveType', 'name': 'int', 'range': [199, 199], 'children': []}, {'type': 'PrimitiveType', 'name': 'str', 'range': [201, 201], 'children': []}]}]}]}, {'type': 'Assignment', 'name': '', 'range': [203, 212], 'children': [{'type': 'ListLiteral', 'name': '', 'range': [204, 212], 'children': [{'type': 'NumberLiteral', 'name': '3', 'range': [205, 205], 'children': []}, {'type': 'NumberLiteral', 'name': '1', 'range': [207, 207], 'children': []}, {'type': 'NumberLiteral', 'name': '2', 'range': [209, 209], 'children': []}, {'type': 'NumberLiteral', 'name': '4', 'range': [211, 211], 'children': []}]}]}]}, {'type': 'FunctionCall', 'name': 'generate_all_permutations', 'range': [214, 217], 'children': [{'type': 'Identifier', 'name': 'sequence', 'range': [216, 216], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'sequence_2', 'range': [220, 235], 'children': [{'type': 'TypeAnnotation', 'name': '', 'range': [221, 227], 'children': [{'type': 'ListType', 'name': '', 'range': [222, 227], 'children': [{'type': 'UnionType', 'name': '', 'range': [224, 226], 'children': [{'type': 'PrimitiveType', 'name': 'int', 'range': [224, 224], 'children': []}, {'type': 'PrimitiveType', 'name': 'str', 'range': [226, 226], 'children': []}]}]}]}, {'type': 'Assignment', 'name': '', 'range': [228, 235], 'children': [{'type': 'ListLiteral', 'name': '', 'range': [229, 235], 'children': [{'type': 'StringLiteral', 'name': '"A"', 'range': [230, 230], 'children': []}, {'type': 'StringLiteral', 'name': '"B"', 'range': [232, 232], 'children': []}, {'type': 'StringLiteral', 'name': '"C"', 'range': [234, 234], 'children': []}]}]}]}, {'type': 'FunctionCall', 'name': 'generate_all_permutations', 'range': [237, 240], 'children': [{'type': 'Identifier', 'name': 'sequence_2', 'range': [239, 239], 'children': []}]}]}
2025-01-08 10:28:33,006 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:34,580 - INFO - Step 3 result: {'type': 'Program', 'name': 'create_state_space_tree', 'range': [51, 186], 'children': [{'type': 'FunctionDeclaration', 'name': 'create_state_space_tree', 'range': [51, 186], 'children': [{'type': 'Parameters', 'name': 'parameters', 'range': [53, 88], 'children': [{'type': 'Parameter', 'name': 'sequence', 'range': [55, 62], 'children': []}, {'type': 'Parameter', 'name': 'current_sequence', 'range': [65, 72], 'children': []}, {'type': 'Parameter', 'name': 'index', 'range': [75, 78], 'children': []}, {'type': 'Parameter', 'name': 'index_used', 'range': [80, 85], 'children': []}]}, {'type': 'ReturnType', 'name': 'None', 'range': [89, 91], 'children': []}, {'type': 'Docstring', 'name': 'docstring', 'range': [94, 102], 'children': []}, {'type': 'FunctionBody', 'name': 'body', 'range': [103, 186], 'children': [{'type': 'IfStatement', 'name': 'if_statement', 'range': [105, 121], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [106, 112], 'children': []}, {'type': 'Body', 'name': 'body', 'range': [114, 121], 'children': [{'type': 'PrintStatement', 'name': 'print_statement', 'range': [115, 118], 'children': []}, {'type': 'ReturnStatement', 'name': 'return_statement', 'range': [120, 121], 'children': []}]}]}, {'type': 'ForLoop', 'name': 'for_loop', 'range': [123, 185], 'children': [{'type': 'Initialization', 'name': 'initialization', 'range': [124, 132], 'children': []}, {'type': 'Condition', 'name': 'condition', 'range': [133, 141], 'children': []}, {'type': 'Body', 'name': 'body', 'range': [142, 185], 'children': [{'type': 'IfStatement', 'name': 'if_statement', 'range': [135, 141], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [136, 140], 'children': []}, {'type': 'Body', 'name': 'body', 'range': [142, 185], 'children': [{'type': 'ExpressionStatement', 'name': 'expression_statement', 'range': [143, 151], 'children': []}, {'type': 'Assignment', 'name': 'assignment', 'range': [153, 158], 'children': []}, {'type': 'FunctionCall', 'name': 'function_call', 'range': [160, 171], 'children': []}, {'type': 'ExpressionStatement', 'name': 'expression_statement', 'range': [173, 177], 'children': []}, {'type': 'Assignment', 'name': 'assignment', 'range': [179, 184], 'children': []}]}]}]}]}]}]}]}
2025-01-08 10:28:34,582 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:37,759 - INFO - Step 4 result: {'type': 'Program', 'name': 'generate_all_permutations', 'range': [9, 25], 'children': [{'type': 'FunctionDecl', 'name': 'generate_all_permutations', 'range': [9, 25], 'children': [{'type': 'Parameter', 'name': 'sequence', 'range': [12, 19], 'children': [{'type': 'TypeAnnotation', 'name': 'list[int | str]', 'range': [14, 19], 'children': []}]}, {'type': 'ReturnType', 'name': 'None', 'range': [23, 23], 'children': []}, {'type': 'FunctionBody', 'name': '', 'range': [25, 25], 'children': [{'type': 'ExpressionStatement', 'name': 'create_state_space_tree', 'range': [26, 48], 'children': [{'type': 'CallExpression', 'name': 'create_state_space_tree', 'range': [26, 48], 'children': [{'type': 'Argument', 'name': 'sequence', 'range': [28, 28], 'children': []}, {'type': 'Argument', 'name': '[]', 'range': [30, 31], 'children': []}, {'type': 'Argument', 'name': '0', 'range': [33, 33], 'children': []}, {'type': 'Argument', 'name': '[0 for i in range(len(sequence))]', 'range': [35, 47], 'children': [{'type': 'ListComprehension', 'name': '', 'range': [35, 47], 'children': [{'type': 'Literal', 'name': '0', 'range': [36, 36], 'children': []}, {'type': 'ForStatement', 'name': 'for i in range(len(sequence))', 'range': [37, 46], 'children': [{'type': 'VariableDeclaration', 'name': 'i', 'range': [38, 38], 'children': []}, {'type': 'CallExpression', 'name': 'range', 'range': [40, 46], 'children': [{'type': 'Argument', 'name': 'len(sequence)', 'range': [42, 45], 'children': [{'type': 'CallExpression', 'name': 'len', 'range': [42, 45], 'children': [{'type': 'Argument', 'name': 'sequence', 'range': [44, 44], 'children': []}]}]}]}]}]}]}]}]}]}]}]}
2025-01-08 10:28:37,759 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:28:52,292 - INFO - Step 5 result: {'type': 'Program', 'name': 'generate_all_permutations', 'range': [9, 25], 'children': [{'type': 'FunctionDecl', 'name': 'generate_all_permutations', 'range': [9, 25], 'children': [{'type': 'Parameter', 'name': 'sequence', 'range': [12, 19], 'children': [{'type': 'TypeAnnotation', 'name': 'list[int | str]', 'range': [14, 19], 'children': []}]}, {'type': 'ReturnType', 'name': 'None', 'range': [23, 23], 'children': []}, {'type': 'FunctionBody', 'name': '', 'range': [25, 25], 'children': [{'type': 'ExpressionStatement', 'name': 'create_state_space_tree', 'range': [26, 48], 'children': [{'type': 'CallExpression', 'name': 'create_state_space_tree', 'range': [26, 48], 'children': [{'type': 'Argument', 'name': 'sequence', 'range': [28, 28], 'children': []}, {'type': 'Argument', 'name': '[]', 'range': [30, 31], 'children': []}, {'type': 'Argument', 'name': '0', 'range': [33, 33], 'children': []}, {'type': 'Argument', 'name': '[0 for i in range(len(sequence))]', 'range': [35, 47], 'children': [{'type': 'ListComprehension', 'name': '', 'range': [35, 47], 'children': [{'type': 'Literal', 'name': '0', 'range': [36, 36], 'children': []}, {'type': 'ForStatement', 'name': 'for i in range(len(sequence))', 'range': [37, 46], 'children': [{'type': 'VariableDeclaration', 'name': 'i', 'range': [38, 38], 'children': []}, {'type': 'CallExpression', 'name': 'range', 'range': [40, 46], 'children': [{'type': 'Argument', 'name': 'len(sequence)', 'range': [42, 45], 'children': [{'type': 'CallExpression', 'name': 'len', 'range': [42, 45], 'children': [{'type': 'Argument', 'name': 'sequence', 'range': [44, 44], 'children': []}]}]}]}]}]}]}]}]}]}]}]}
2025-01-08 10:28:52,292 - INFO - Completed main AST analysis flow
2025-01-08 10:28:52,292 - INFO - Successfully processed chunk
2025-01-08 10:28:52,624 - INFO - Step 4 result: {'nodes': [{'type': 'VariableDeclaration', 'name': 'sequence', 'range': [195, 212], 'children': [{'type': 'TypeAnnotation', 'name': '', 'range': [196, 202], 'children': [{'type': 'ListType', 'name': '', 'range': [197, 202], 'children': [{'type': 'UnionType', 'name': '', 'range': [199, 201], 'children': [{'type': 'PrimitiveType', 'name': 'int', 'range': [199, 199], 'children': []}, {'type': 'PrimitiveType', 'name': 'str', 'range': [201, 201], 'children': []}]}]}]}, {'type': 'AssignmentExpression', 'name': '', 'range': [203, 212], 'children': [{'type': 'ArrayExpression', 'name': '', 'range': [204, 212], 'children': [{'type': 'Literal', 'name': '3', 'range': [205, 205], 'children': []}, {'type': 'Literal', 'name': '1', 'range': [207, 207], 'children': []}, {'type': 'Literal', 'name': '2', 'range': [209, 209], 'children': []}, {'type': 'Literal', 'name': '4', 'range': [211, 211], 'children': []}]}]}]}, {'type': 'CallExpression', 'name': 'generate_all_permutations', 'range': [214, 217], 'children': [{'type': 'Identifier', 'name': 'sequence', 'range': [216, 216], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'sequence_2', 'range': [220, 235], 'children': [{'type': 'TypeAnnotation', 'name': '', 'range': [221, 227], 'children': [{'type': 'ListType', 'name': '', 'range': [222, 227], 'children': [{'type': 'UnionType', 'name': '', 'range': [224, 226], 'children': [{'type': 'PrimitiveType', 'name': 'int', 'range': [224, 224], 'children': []}, {'type': 'PrimitiveType', 'name': 'str', 'range': [226, 226], 'children': []}]}]}]}, {'type': 'AssignmentExpression', 'name': '', 'range': [228, 235], 'children': [{'type': 'ArrayExpression', 'name': '', 'range': [229, 235], 'children': [{'type': 'Literal', 'name': '"A"', 'range': [230, 230], 'children': []}, {'type': 'Literal', 'name': '"B"', 'range': [232, 232], 'children': []}, {'type': 'Literal', 'name': '"C"', 'range': [234, 234], 'children': []}]}]}]}, {'type': 'CallExpression', 'name': 'generate_all_permutations', 'range': [237, 240], 'children': [{'type': 'Identifier', 'name': 'sequence_2', 'range': [239, 239], 'children': []}]}]}
2025-01-08 10:28:52,624 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:28:54,321 - INFO - Step 4 result: {'type': 'Program', 'name': 'create_state_space_tree', 'range': [51, 186], 'children': [{'type': 'FunctionDecl', 'name': 'create_state_space_tree', 'range': [51, 186], 'children': [{'type': 'Parameters', 'name': 'parameters', 'range': [53, 88], 'children': [{'type': 'Parameter', 'name': 'sequence', 'range': [55, 62], 'children': []}, {'type': 'Parameter', 'name': 'current_sequence', 'range': [65, 72], 'children': []}, {'type': 'Parameter', 'name': 'index', 'range': [75, 78], 'children': []}, {'type': 'Parameter', 'name': 'index_used', 'range': [80, 85], 'children': []}]}, {'type': 'ReturnType', 'name': 'None', 'range': [89, 91], 'children': []}, {'type': 'Docstring', 'name': 'docstring', 'range': [94, 102], 'children': []}, {'type': 'BlockStatement', 'name': 'body', 'range': [103, 186], 'children': [{'type': 'IfStatement', 'name': 'if_statement', 'range': [105, 121], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [106, 112], 'children': []}, {'type': 'BlockStatement', 'name': 'body', 'range': [114, 121], 'children': [{'type': 'ExpressionStatement', 'name': 'print_statement', 'range': [115, 118], 'children': []}, {'type': 'ReturnStatement', 'name': 'return_statement', 'range': [120, 121], 'children': []}]}]}, {'type': 'ForStatement', 'name': 'for_loop', 'range': [123, 185], 'children': [{'type': 'Initialization', 'name': 'initialization', 'range': [124, 132], 'children': []}, {'type': 'Condition', 'name': 'condition', 'range': [133, 141], 'children': []}, {'type': 'BlockStatement', 'name': 'body', 'range': [142, 185], 'children': [{'type': 'IfStatement', 'name': 'if_statement', 'range': [135, 141], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [136, 140], 'children': []}, {'type': 'BlockStatement', 'name': 'body', 'range': [142, 185], 'children': [{'type': 'ExpressionStatement', 'name': 'expression_statement', 'range': [143, 151], 'children': []}, {'type': 'AssignmentExpression', 'name': 'assignment', 'range': [153, 158], 'children': []}, {'type': 'CallExpression', 'name': 'function_call', 'range': [160, 171], 'children': []}, {'type': 'ExpressionStatement', 'name': 'expression_statement', 'range': [173, 177], 'children': []}, {'type': 'AssignmentExpression', 'name': 'assignment', 'range': [179, 184], 'children': []}]}]}]}]}]}]}]}
2025-01-08 10:28:54,321 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:29:11,160 - INFO - Step 5 result: {'nodes': [{'type': 'Program', 'name': 'MainProgram', 'range': [195, 240], 'children': [{'type': 'VariableDeclaration', 'name': 'sequence', 'range': [195, 212], 'children': [{'type': 'TypeAnnotation', 'name': '', 'range': [196, 202], 'children': [{'type': 'ListType', 'name': '', 'range': [197, 202], 'children': [{'type': 'UnionType', 'name': '', 'range': [199, 201], 'children': [{'type': 'PrimitiveType', 'name': 'int', 'range': [199, 199], 'children': []}, {'type': 'PrimitiveType', 'name': 'str', 'range': [201, 201], 'children': []}]}]}]}, {'type': 'AssignmentExpression', 'name': '', 'range': [203, 212], 'children': [{'type': 'ArrayExpression', 'name': '', 'range': [204, 212], 'children': [{'type': 'Literal', 'name': '3', 'range': [205, 205], 'children': []}, {'type': 'Literal', 'name': '1', 'range': [207, 207], 'children': []}, {'type': 'Literal', 'name': '2', 'range': [209, 209], 'children': []}, {'type': 'Literal', 'name': '4', 'range': [211, 211], 'children': []}]}]}]}, {'type': 'CallExpression', 'name': 'generate_all_permutations', 'range': [214, 217], 'children': [{'type': 'Identifier', 'name': 'sequence', 'range': [216, 216], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'sequence_2', 'range': [220, 235], 'children': [{'type': 'TypeAnnotation', 'name': '', 'range': [221, 227], 'children': [{'type': 'ListType', 'name': '', 'range': [222, 227], 'children': [{'type': 'UnionType', 'name': '', 'range': [224, 226], 'children': [{'type': 'PrimitiveType', 'name': 'int', 'range': [224, 224], 'children': []}, {'type': 'PrimitiveType', 'name': 'str', 'range': [226, 226], 'children': []}]}]}]}, {'type': 'AssignmentExpression', 'name': '', 'range': [228, 235], 'children': [{'type': 'ArrayExpression', 'name': '', 'range': [229, 235], 'children': [{'type': 'Literal', 'name': '"A"', 'range': [230, 230], 'children': []}, {'type': 'Literal', 'name': '"B"', 'range': [232, 232], 'children': []}, {'type': 'Literal', 'name': '"C"', 'range': [234, 234], 'children': []}]}]}]}, {'type': 'CallExpression', 'name': 'generate_all_permutations', 'range': [237, 240], 'children': [{'type': 'Identifier', 'name': 'sequence_2', 'range': [239, 239], 'children': []}]}]}]}
2025-01-08 10:29:11,160 - INFO - Completed main AST analysis flow
2025-01-08 10:29:11,161 - INFO - Successfully processed chunk
2025-01-08 10:29:12,030 - INFO - Step 5 result: {'type': 'Program', 'name': 'create_state_space_tree', 'range': [51, 186], 'children': [{'type': 'FunctionDecl', 'name': 'create_state_space_tree', 'range': [51, 186], 'children': [{'type': 'Parameters', 'name': 'parameters', 'range': [53, 88], 'children': [{'type': 'Parameter', 'name': 'sequence', 'range': [55, 62], 'children': []}, {'type': 'Parameter', 'name': 'current_sequence', 'range': [65, 72], 'children': []}, {'type': 'Parameter', 'name': 'index', 'range': [75, 78], 'children': []}, {'type': 'Parameter', 'name': 'index_used', 'range': [80, 85], 'children': []}]}, {'type': 'ReturnType', 'name': 'None', 'range': [89, 91], 'children': []}, {'type': 'Docstring', 'name': 'docstring', 'range': [94, 102], 'children': []}, {'type': 'BlockStatement', 'name': 'body', 'range': [103, 186], 'children': [{'type': 'IfStatement', 'name': 'if_statement', 'range': [105, 121], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [106, 112], 'children': []}, {'type': 'BlockStatement', 'name': 'body', 'range': [114, 121], 'children': [{'type': 'ExpressionStatement', 'name': 'print_statement', 'range': [115, 118], 'children': []}, {'type': 'ReturnStatement', 'name': 'return_statement', 'range': [120, 121], 'children': []}]}]}, {'type': 'ForStatement', 'name': 'for_loop', 'range': [123, 185], 'children': [{'type': 'Initialization', 'name': 'initialization', 'range': [124, 132], 'children': []}, {'type': 'Condition', 'name': 'condition', 'range': [133, 141], 'children': []}, {'type': 'BlockStatement', 'name': 'body', 'range': [142, 185], 'children': [{'type': 'IfStatement', 'name': 'if_statement', 'range': [135, 141], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [136, 140], 'children': []}, {'type': 'BlockStatement', 'name': 'body', 'range': [142, 185], 'children': [{'type': 'ExpressionStatement', 'name': 'expression_statement', 'range': [143, 151], 'children': []}, {'type': 'AssignmentExpression', 'name': 'assignment', 'range': [153, 158], 'children': []}, {'type': 'CallExpression', 'name': 'function_call', 'range': [160, 171], 'children': []}, {'type': 'ExpressionStatement', 'name': 'expression_statement', 'range': [173, 177], 'children': []}, {'type': 'AssignmentExpression', 'name': 'assignment', 'range': [179, 184], 'children': []}]}]}]}]}]}]}]}
2025-01-08 10:29:12,031 - INFO - Completed main AST analysis flow
2025-01-08 10:29:12,031 - INFO - Successfully processed chunk
2025-01-08 10:29:12,051 - INFO - Starting code generation from AST
2025-01-08 10:29:24,471 - INFO - Successfully generated code from AST
2025-01-08 10:29:24,472 - INFO - Starting static code similarity comparison
2025-01-08 10:29:24,479 - INFO - Static similarity result: {'final_score': 54.16, 'length_similarity': 51.0, 'token_similarity': 13.55, 'structure_similarity': 83.1, 'function_similarity': 100, 'complexity_similarity': 16.67, 'variable_similarity': 100}
