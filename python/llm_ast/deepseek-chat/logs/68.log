2025-01-08 09:42:16,413 - INFO - Processing sample 68
2025-01-08 09:42:16,413 - INFO - Starting Step 0: Splitting code into top-level declarations
2025-01-08 09:42:24,252 - INFO - Successfully split code into 9 top-level declarations
2025-01-08 09:42:24,255 - INFO - Processing chunk #0 (size=471 chars, start_index=0)
2025-01-08 09:42:24,255 - INFO - Processing chunk with 471 chars starting at index 0
2025-01-08 09:42:24,256 - INFO - Starting main AST analysis flow
2025-01-08 09:42:24,256 - INFO - Tokenized code into 106 tokens
2025-01-08 09:42:24,256 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:42:24,257 - INFO - Processing chunk #1 (size=106 chars, start_index=106)
2025-01-08 09:42:24,258 - INFO - Processing chunk with 106 chars starting at index 106
2025-01-08 09:42:24,258 - INFO - Starting main AST analysis flow
2025-01-08 09:42:24,258 - INFO - Tokenized code into 21 tokens
2025-01-08 09:42:24,258 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:42:24,267 - INFO - Processing chunk #2 (size=543 chars, start_index=127)
2025-01-08 09:42:24,268 - INFO - Processing chunk with 543 chars starting at index 127
2025-01-08 09:42:24,268 - INFO - Starting main AST analysis flow
2025-01-08 09:42:24,269 - INFO - Tokenized code into 87 tokens
2025-01-08 09:42:24,269 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:42:24,273 - INFO - Processing chunk #3 (size=217 chars, start_index=214)
2025-01-08 09:42:24,274 - INFO - Processing chunk with 217 chars starting at index 214
2025-01-08 09:42:24,274 - INFO - Starting main AST analysis flow
2025-01-08 09:42:24,274 - INFO - Tokenized code into 44 tokens
2025-01-08 09:42:24,274 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:42:24,275 - INFO - Processing chunk #4 (size=391 chars, start_index=258)
2025-01-08 09:42:24,275 - INFO - Processing chunk with 391 chars starting at index 258
2025-01-08 09:42:24,276 - INFO - Starting main AST analysis flow
2025-01-08 09:42:24,276 - INFO - Tokenized code into 83 tokens
2025-01-08 09:42:24,276 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:42:24,277 - INFO - Processing chunk #5 (size=2581 chars, start_index=341)
2025-01-08 09:42:24,287 - INFO - Processing chunk #6 (size=263 chars, start_index=818)
2025-01-08 09:42:24,287 - INFO - Processing chunk with 2581 chars starting at index 341
2025-01-08 09:42:24,295 - INFO - Processing chunk #7 (size=366 chars, start_index=889)
2025-01-08 09:42:24,295 - INFO - Processing chunk with 263 chars starting at index 818
2025-01-08 09:42:24,296 - INFO - Starting main AST analysis flow
2025-01-08 09:42:24,296 - INFO - Processing chunk with 366 chars starting at index 889
2025-01-08 09:42:24,297 - INFO - Starting main AST analysis flow
2025-01-08 09:42:24,297 - INFO - Processing chunk #8 (size=430 chars, start_index=978)
2025-01-08 09:42:24,298 - INFO - Tokenized code into 477 tokens
2025-01-08 09:42:24,299 - INFO - Starting main AST analysis flow
2025-01-08 09:42:24,299 - INFO - Tokenized code into 71 tokens
2025-01-08 09:42:24,306 - INFO - Processing chunk with 430 chars starting at index 978
2025-01-08 09:42:24,306 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:42:24,306 - INFO - Tokenized code into 89 tokens
2025-01-08 09:42:24,307 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:42:24,307 - INFO - Starting main AST analysis flow
2025-01-08 09:42:24,312 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:42:24,317 - INFO - Tokenized code into 80 tokens
2025-01-08 09:42:24,322 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:42:26,555 - INFO - Step 1 result: {'type': 'Program', 'name': 'get_client', 'range': [106, 126], 'children': []}
2025-01-08 09:42:26,555 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:42:26,804 - INFO - Step 1 result: {'type': 'Program', 'name': 'create_context', 'range': [258, 338], 'children': []}
2025-01-08 09:42:26,805 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:42:26,842 - INFO - Step 1 result: {'type': 'Program', 'name': 'percentage_rollout', 'range': [818, 886], 'children': []}
2025-01-08 09:42:26,842 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:42:26,877 - INFO - Step 1 result: {'type': 'Program', 'name': 'initialize_launchdarkly', 'range': [127, 213], 'children': []}
2025-01-08 09:42:26,877 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:42:26,883 - INFO - Step 1 result: {'type': 'Program', 'name': 'shutdown_launchdarkly', 'range': [214, 257], 'children': []}
2025-01-08 09:42:26,883 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:42:26,913 - INFO - Step 1 result: {'type': 'Program', 'name': 'mock_flag_variation', 'range': [983, 1056], 'children': []}
2025-01-08 09:42:26,913 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:42:26,919 - INFO - Step 1 result: {'type': 'Program', 'name': 'beta_feature', 'range': [889, 977], 'children': []}
2025-01-08 09:42:26,919 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:42:29,443 - INFO - Step 1 result: {'type': 'Program', 'name': 'feature_flag', 'range': [341, 815], 'children': [{'type': 'FunctionDeclaration', 'name': 'decorator', 'range': [403, 815], 'children': [{'type': 'FunctionDeclaration', 'name': 'async_wrapper', 'range': [450, 618], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'sync_wrapper', 'range': [626, 776], 'children': []}]}]}
2025-01-08 09:42:29,443 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:42:35,973 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [0, 105], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 8], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [9, 13], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [14, 32], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [34, 36], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [37, 41], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [42, 48], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [49, 55], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [56, 60], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [62, 67], 'children': []}, {'type': 'VariableDeclaration', 'name': 'logger', 'range': [69, 77], 'children': []}, {'type': 'ExpressionStatement', 'name': '', 'range': [78, 88], 'children': []}, {'type': 'VariableDeclaration', 'name': 'P', 'range': [90, 96], 'children': []}, {'type': 'VariableDeclaration', 'name': 'T', 'range': [97, 103], 'children': []}]}
2025-01-08 09:42:35,973 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:42:37,744 - INFO - Step 2 result: {'type': 'Program', 'name': 'percentage_rollout', 'range': [818, 886], 'children': [{'type': 'FunctionDeclaration', 'name': 'percentage_rollout', 'range': [818, 886], 'children': [{'type': 'Parameter', 'name': 'flag_key', 'range': [822, 824], 'children': []}, {'type': 'Parameter', 'name': 'default', 'range': [827, 831], 'children': []}, {'type': 'ReturnType', 'name': 'Callable', 'range': [837, 872], 'children': [{'type': 'TypeParameter', 'name': 'Callable', 'range': [841, 855], 'children': []}, {'type': 'TypeParameter', 'name': 'Callable', 'range': [857, 870], 'children': []}]}, {'type': 'Docstring', 'name': '"Decorator for percentage-based rollouts."', 'range': [875, 877], 'children': []}, {'type': 'ReturnStatement', 'name': 'return', 'range': [879, 885], 'children': [{'type': 'FunctionCall', 'name': 'feature_flag', 'range': [880, 885], 'children': [{'type': 'Argument', 'name': 'flag_key', 'range': [882, 882], 'children': []}, {'type': 'Argument', 'name': 'default', 'range': [884, 884], 'children': []}]}]}]}]}
2025-01-08 09:42:37,744 - INFO - Starting Step 3: AST simplification
2025-01-08 09:42:39,104 - INFO - Step 2 result: {'type': 'Program', 'name': 'get_client', 'range': [106, 126], 'children': [{'type': 'FunctionDeclaration', 'name': 'get_client', 'range': [106, 125], 'children': [{'type': 'FunctionSignature', 'name': 'get_client', 'range': [106, 113], 'children': [{'type': 'Keyword', 'name': 'def', 'range': [106, 106], 'children': []}, {'type': 'FunctionName', 'name': 'get_client', 'range': [107, 107], 'children': []}, {'type': 'ParameterList', 'name': '()', 'range': [108, 109], 'children': []}, {'type': 'ReturnType', 'name': '-> LDClient', 'range': [110, 112], 'children': []}]}, {'type': 'FunctionBody', 'name': 'get_client', 'range': [114, 125], 'children': [{'type': 'Docstring', 'name': '"""Get the LaunchDarkly client singleton."""', 'range': [115, 117], 'children': []}, {'type': 'ReturnStatement', 'name': 'return ldclient.get()', 'range': [119, 124], 'children': [{'type': 'Keyword', 'name': 'return', 'range': [119, 119], 'children': []}, {'type': 'Expression', 'name': 'ldclient.get()', 'range': [120, 124], 'children': [{'type': 'Variable', 'name': 'ldclient', 'range': [120, 120], 'children': []}, {'type': 'MethodCall', 'name': 'get', 'range': [122, 122], 'children': []}]}]}]}]}]}
2025-01-08 09:42:39,104 - INFO - Starting Step 3: AST simplification
2025-01-08 09:42:40,366 - INFO - Step 2 result: {'type': 'Program', 'name': 'create_context', 'range': [258, 338], 'children': [{'type': 'FunctionDeclaration', 'name': 'create_context', 'range': [258, 338], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [260, 280], 'children': [{'type': 'Parameter', 'name': 'user_id', 'range': [262, 264], 'children': []}, {'type': 'Parameter', 'name': 'additional_attributes', 'range': [266, 278], 'children': []}]}, {'type': 'ReturnType', 'name': 'Context', 'range': [283, 283], 'children': []}, {'type': 'FunctionBody', 'name': 'body', 'range': [285, 338], 'children': [{'type': 'Docstring', 'name': 'docstring', 'range': [286, 288], 'children': []}, {'type': 'Assignment', 'name': 'builder', 'range': [290, 306], 'children': [{'type': 'Expression', 'name': 'Context.builder(str(user_id)).kind("user")', 'range': [292, 305], 'children': []}]}, {'type': 'IfStatement', 'name': 'if additional_attributes', 'range': [307, 331], 'children': [{'type': 'ForStatement', 'name': 'for key, value in additional_attributes.items()', 'range': [311, 330], 'children': [{'type': 'Expression', 'name': 'builder.set(key, value)', 'range': [323, 330], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return builder.build()', 'range': [332, 338], 'children': [{'type': 'Expression', 'name': 'builder.build()', 'range': [333, 337], 'children': []}]}]}]}]}
2025-01-08 09:42:40,367 - INFO - Starting Step 3: AST simplification
2025-01-08 09:42:44,701 - INFO - Step 2 result: {'type': 'Program', 'name': 'beta_feature', 'range': [889, 977], 'children': [{'type': 'FunctionDeclaration', 'name': 'beta_feature', 'range': [889, 977], 'children': [{'type': 'Parameter', 'name': 'flag_key', 'range': [893, 900], 'children': [{'type': 'TypeAnnotation', 'name': 'Optional[str]', 'range': [895, 898], 'children': []}, {'type': 'DefaultValue', 'name': 'None', 'range': [899, 900], 'children': []}]}, {'type': 'Parameter', 'name': 'unauthorized_response', 'range': [903, 912], 'children': [{'type': 'TypeAnnotation', 'name': 'Any', 'range': [905, 905], 'children': []}, {'type': 'DefaultValue', 'name': '{"message": "Not available in beta"}', 'range': [906, 911], 'children': []}]}, {'type': 'ReturnType', 'name': 'Callable[[Callable[P, Union[T, Awaitable[T]]]], Callable[P, Union[T, Awaitable[T]]]]', 'range': [917, 952], 'children': []}, {'type': 'FunctionBody', 'name': '', 'range': [954, 977], 'children': [{'type': 'Docstring', 'name': '"Decorator for beta features."', 'range': [955, 957], 'children': []}, {'type': 'VariableDeclaration', 'name': 'actual_key', 'range': [959, 967], 'children': [{'type': 'Assignment', 'name': '=', 'range': [960, 960], 'children': [{'type': 'StringLiteral', 'name': 'f"beta-{flag_key}"', 'range': [961, 962], 'children': []}, {'type': 'ConditionalExpression', 'name': 'if flag_key else "beta"', 'range': [963, 966], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return feature_flag(actual_key, False)', 'range': [968, 974], 'children': [{'type': 'CallExpression', 'name': 'feature_flag', 'range': [969, 974], 'children': [{'type': 'Argument', 'name': 'actual_key', 'range': [971, 971], 'children': []}, {'type': 'Argument', 'name': 'False', 'range': [973, 973], 'children': []}]}]}]}]}]}
2025-01-08 09:42:44,701 - INFO - Starting Step 3: AST simplification
2025-01-08 09:42:47,655 - INFO - Step 2 result: {'type': 'Program', 'name': 'initialize_launchdarkly', 'range': [127, 213], 'children': [{'type': 'FunctionDeclaration', 'name': 'initialize_launchdarkly', 'range': [127, 213], 'children': [{'type': 'ParameterList', 'name': '', 'range': [129, 130], 'children': []}, {'type': 'ReturnType', 'name': 'None', 'range': [131, 133], 'children': []}, {'type': 'Block', 'name': '', 'range': [134, 213], 'children': [{'type': 'Assignment', 'name': 'sdk_key', 'range': [136, 140], 'children': []}, {'type': 'MethodCall', 'name': 'logger.debug', 'range': [142, 150], 'children': [{'type': 'StringLiteral', 'name': '', 'range': [148, 148], 'children': []}]}, {'type': 'IfStatement', 'name': '', 'range': [153, 166], 'children': [{'type': 'Condition', 'name': '', 'range': [154, 155], 'children': []}, {'type': 'Block', 'name': '', 'range': [156, 166], 'children': [{'type': 'MethodCall', 'name': 'logger.warning', 'range': [158, 163], 'children': [{'type': 'StringLiteral', 'name': '', 'range': [162, 162], 'children': []}]}, {'type': 'ReturnStatement', 'name': '', 'range': [165, 165], 'children': []}]}]}, {'type': 'Assignment', 'name': 'config', 'range': [168, 173], 'children': []}, {'type': 'MethodCall', 'name': 'ldclient.set_config', 'range': [175, 180], 'children': [{'type': 'Identifier', 'name': 'config', 'range': [179, 179], 'children': []}]}, {'type': 'IfStatement', 'name': '', 'range': [183, 211], 'children': [{'type': 'Condition', 'name': '', 'range': [184, 192], 'children': []}, {'type': 'Block', 'name': '', 'range': [193, 211], 'children': [{'type': 'MethodCall', 'name': 'logger.info', 'range': [195, 200], 'children': [{'type': 'StringLiteral', 'name': '', 'range': [199, 199], 'children': []}]}, {'type': 'ElseStatement', 'name': '', 'range': [202, 211], 'children': [{'type': 'Block', 'name': '', 'range': [203, 211], 'children': [{'type': 'MethodCall', 'name': 'logger.error', 'range': [205, 210], 'children': [{'type': 'StringLiteral', 'name': '', 'range': [209, 209], 'children': []}]}]}]}]}]}]}]}]}
2025-01-08 09:42:47,655 - INFO - Starting Step 3: AST simplification
2025-01-08 09:42:49,450 - INFO - Step 3 result: {'type': 'Program', 'name': 'percentage_rollout', 'range': [818, 886], 'children': [{'type': 'FunctionDeclaration', 'name': 'percentage_rollout', 'range': [818, 886], 'children': [{'type': 'Parameter', 'name': 'flag_key', 'range': [822, 824], 'children': []}, {'type': 'Parameter', 'name': 'default', 'range': [827, 831], 'children': []}, {'type': 'ReturnType', 'name': 'Callable', 'range': [837, 872], 'children': [{'type': 'TypeParameter', 'name': 'Callable', 'range': [841, 855], 'children': []}, {'type': 'TypeParameter', 'name': 'Callable', 'range': [857, 870], 'children': []}]}, {'type': 'Docstring', 'name': '"Decorator for percentage-based rollouts."', 'range': [875, 877], 'children': []}, {'type': 'ReturnStatement', 'name': 'return', 'range': [879, 885], 'children': [{'type': 'FunctionCall', 'name': 'feature_flag', 'range': [880, 885], 'children': [{'type': 'Argument', 'name': 'flag_key', 'range': [882, 882], 'children': []}, {'type': 'Argument', 'name': 'default', 'range': [884, 884], 'children': []}]}]}]}]}
2025-01-08 09:42:49,450 - INFO - Starting Step 4: AST normalization
2025-01-08 09:42:49,904 - INFO - Step 3 result: {'type': 'Program', 'name': 'get_client', 'range': [106, 126], 'children': [{'type': 'FunctionDeclaration', 'name': 'get_client', 'range': [106, 125], 'children': [{'type': 'FunctionSignature', 'name': 'get_client', 'range': [106, 113], 'children': [{'type': 'Keyword', 'name': 'def', 'range': [106, 106], 'children': []}, {'type': 'FunctionName', 'name': 'get_client', 'range': [107, 107], 'children': []}, {'type': 'ReturnType', 'name': '-> LDClient', 'range': [110, 112], 'children': []}]}, {'type': 'FunctionBody', 'name': 'get_client', 'range': [114, 125], 'children': [{'type': 'Docstring', 'name': '"""Get the LaunchDarkly client singleton."""', 'range': [115, 117], 'children': []}, {'type': 'ReturnStatement', 'name': 'return ldclient.get()', 'range': [119, 124], 'children': [{'type': 'Keyword', 'name': 'return', 'range': [119, 119], 'children': []}, {'type': 'Expression', 'name': 'ldclient.get()', 'range': [120, 124], 'children': [{'type': 'Variable', 'name': 'ldclient', 'range': [120, 120], 'children': []}, {'type': 'MethodCall', 'name': 'get', 'range': [122, 122], 'children': []}]}]}]}]}]}
2025-01-08 09:42:49,904 - INFO - Starting Step 4: AST normalization
2025-01-08 09:42:53,652 - INFO - Step 3 result: {'type': 'Program', 'name': 'create_context', 'range': [258, 338], 'children': [{'type': 'FunctionDeclaration', 'name': 'create_context', 'range': [258, 338], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [260, 280], 'children': [{'type': 'Parameter', 'name': 'user_id', 'range': [262, 264], 'children': []}, {'type': 'Parameter', 'name': 'additional_attributes', 'range': [266, 278], 'children': []}]}, {'type': 'ReturnType', 'name': 'Context', 'range': [283, 283], 'children': []}, {'type': 'FunctionBody', 'name': 'body', 'range': [285, 338], 'children': [{'type': 'Docstring', 'name': 'docstring', 'range': [286, 288], 'children': []}, {'type': 'Assignment', 'name': 'builder', 'range': [290, 306], 'children': [{'type': 'Expression', 'name': 'Context.builder(str(user_id)).kind("user")', 'range': [292, 305], 'children': []}]}, {'type': 'IfStatement', 'name': 'if additional_attributes', 'range': [307, 331], 'children': [{'type': 'ForStatement', 'name': 'for key, value in additional_attributes.items()', 'range': [311, 330], 'children': [{'type': 'Expression', 'name': 'builder.set(key, value)', 'range': [323, 330], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return builder.build()', 'range': [332, 338], 'children': [{'type': 'Expression', 'name': 'builder.build()', 'range': [333, 337], 'children': []}]}]}]}]}
2025-01-08 09:42:53,652 - INFO - Starting Step 4: AST normalization
2025-01-08 09:42:53,836 - INFO - Step 2 result: {'type': 'Program', 'name': 'shutdown_launchdarkly', 'range': [214, 257], 'children': [{'type': 'FunctionDeclaration', 'name': 'shutdown_launchdarkly', 'range': [214, 257], 'children': [{'type': 'FunctionSignature', 'name': 'shutdown_launchdarkly', 'range': [214, 221], 'children': [{'type': 'Keyword', 'name': 'def', 'range': [214, 214], 'children': []}, {'type': 'FunctionName', 'name': 'shutdown_launchdarkly', 'range': [215, 215], 'children': []}, {'type': 'Parameters', 'name': '()', 'range': [216, 217], 'children': []}, {'type': 'ReturnType', 'name': '-> None', 'range': [218, 220], 'children': []}, {'type': 'Colon', 'name': ':', 'range': [221, 221], 'children': []}]}, {'type': 'FunctionBody', 'name': 'shutdown_launchdarkly_body', 'range': [222, 257], 'children': [{'type': 'Docstring', 'name': 'docstring', 'range': [222, 226], 'children': [{'type': 'String', 'name': '"""Shutdown the LaunchDarkly client."""', 'range': [223, 225], 'children': []}]}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [227, 248], 'children': [{'type': 'IfKeyword', 'name': 'if', 'range': [227, 227], 'children': []}, {'type': 'Condition', 'name': 'condition', 'range': [228, 236], 'children': [{'type': 'Variable', 'name': 'ldclient', 'range': [228, 228], 'children': []}, {'type': 'Dot', 'name': '.', 'range': [229, 229], 'children': []}, {'type': 'MethodCall', 'name': 'get', 'range': [230, 232], 'children': []}, {'type': 'Dot', 'name': '.', 'range': [233, 233], 'children': []}, {'type': 'MethodCall', 'name': 'is_initialized', 'range': [234, 236], 'children': []}]}, {'type': 'Colon', 'name': ':', 'range': [237, 237], 'children': []}, {'type': 'IfBody', 'name': 'if_body', 'range': [238, 248], 'children': [{'type': 'ExpressionStatement', 'name': 'expression_statement', 'range': [239, 247], 'children': [{'type': 'Variable', 'name': 'ldclient', 'range': [239, 239], 'children': []}, {'type': 'Dot', 'name': '.', 'range': [240, 240], 'children': []}, {'type': 'MethodCall', 'name': 'get', 'range': [241, 243], 'children': []}, {'type': 'Dot', 'name': '.', 'range': [244, 244], 'children': []}, {'type': 'MethodCall', 'name': 'close', 'range': [245, 247], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': 'expression_statement', 'range': [249, 255], 'children': [{'type': 'Variable', 'name': 'logger', 'range': [249, 249], 'children': []}, {'type': 'Dot', 'name': '.', 'range': [250, 250], 'children': []}, {'type': 'MethodCall', 'name': 'info', 'range': [251, 254], 'children': [{'type': 'String', 'name': '"LaunchDarkly client closed successfully"', 'range': [253, 253], 'children': []}]}]}]}]}]}
2025-01-08 09:42:53,836 - INFO - Starting Step 3: AST simplification
2025-01-08 09:42:58,941 - INFO - Step 2 result: {'type': 'Program', 'name': 'mock_flag_variation', 'range': [983, 1056], 'children': [{'type': 'FunctionDeclaration', 'name': 'mock_flag_variation', 'range': [983, 1056], 'children': [{'type': 'ParameterList', 'name': '', 'range': [985, 993], 'children': [{'type': 'Parameter', 'name': 'flag_key', 'range': [986, 988], 'children': []}, {'type': 'Parameter', 'name': 'return_value', 'range': [990, 992], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [994, 1056], 'children': [{'type': 'VariableDeclaration', 'name': 'original_variation', 'range': [1000, 1007], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [1001, 1007], 'children': [{'type': 'CallExpression', 'name': 'get_client', 'range': [1002, 1006], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [1008, 1039], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [1013, 1039], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [1008, 1012], 'children': [{'type': 'CallExpression', 'name': 'get_client', 'range': [1008, 1012], 'children': []}]}, {'type': 'LambdaExpression', 'name': 'lambda', 'range': [1014, 1039], 'children': [{'type': 'ParameterList', 'name': '', 'range': [1015, 1020], 'children': [{'type': 'Parameter', 'name': 'key', 'range': [1015, 1016], 'children': []}, {'type': 'Parameter', 'name': 'context', 'range': [1017, 1018], 'children': []}, {'type': 'Parameter', 'name': 'default', 'range': [1019, 1020], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [1021, 1039], 'children': [{'type': 'IfStatement', 'name': '', 'range': [1024, 1037], 'children': [{'type': 'BinaryExpression', 'name': '==', 'range': [1026, 1028], 'children': [{'type': 'Identifier', 'name': 'key', 'range': [1025, 1026], 'children': []}, {'type': 'Identifier', 'name': 'flag_key', 'range': [1027, 1028], 'children': []}]}, {'type': 'ReturnStatement', 'name': '', 'range': [1023, 1024], 'children': [{'type': 'Identifier', 'name': 'return_value', 'range': [1023, 1024], 'children': []}]}, {'type': 'ReturnStatement', 'name': '', 'range': [1030, 1037], 'children': [{'type': 'CallExpression', 'name': 'original_variation', 'range': [1030, 1037], 'children': [{'type': 'Identifier', 'name': 'key', 'range': [1032, 1033], 'children': []}, {'type': 'Identifier', 'name': 'context', 'range': [1034, 1035], 'children': []}, {'type': 'Identifier', 'name': 'default', 'range': [1036, 1037], 'children': []}]}]}]}]}]}]}]}, {'type': 'TryStatement', 'name': '', 'range': [1041, 1056], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [1043, 1045], 'children': [{'type': 'YieldStatement', 'name': '', 'range': [1044, 1045], 'children': []}]}, {'type': 'FinallyStatement', 'name': '', 'range': [1046, 1056], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [1048, 1056], 'children': [{'type': 'ExpressionStatement', 'name': '', 'range': [1049, 1055], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [1054, 1055], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [1049, 1053], 'children': [{'type': 'CallExpression', 'name': 'get_client', 'range': [1049, 1053], 'children': []}]}, {'type': 'Identifier', 'name': 'original_variation', 'range': [1055, 1056], 'children': []}]}]}]}]}]}]}]}]}
2025-01-08 09:42:58,942 - INFO - Starting Step 3: AST simplification
2025-01-08 09:43:00,736 - INFO - Step 2 result: {'type': 'Program', 'name': 'feature_flag', 'range': [341, 815], 'children': [{'type': 'FunctionDeclaration', 'name': 'decorator', 'range': [403, 815], 'children': [{'type': 'FunctionDeclaration', 'name': 'async_wrapper', 'range': [450, 618], 'children': [{'type': 'TryStatement', 'range': [474, 618], 'children': [{'type': 'BlockStatement', 'range': [476, 602], 'children': [{'type': 'VariableDeclaration', 'range': [477, 484], 'children': []}, {'type': 'IfStatement', 'range': [486, 496], 'children': [{'type': 'BlockStatement', 'range': [490, 496], 'children': [{'type': 'ThrowStatement', 'range': [491, 495], 'children': []}]}]}, {'type': 'IfStatement', 'range': [498, 522], 'children': [{'type': 'BlockStatement', 'range': [508, 522], 'children': [{'type': 'ExpressionStatement', 'range': [509, 517], 'children': []}, {'type': 'VariableDeclaration', 'range': [519, 521], 'children': []}]}]}, {'type': 'ElseStatement', 'range': [523, 550], 'children': [{'type': 'BlockStatement', 'range': [525, 550], 'children': [{'type': 'VariableDeclaration', 'range': [526, 534], 'children': []}, {'type': 'VariableDeclaration', 'range': [536, 549], 'children': []}]}]}, {'type': 'IfStatement', 'range': [552, 568], 'children': [{'type': 'BlockStatement', 'range': [556, 568], 'children': [{'type': 'ThrowStatement', 'range': [557, 567], 'children': []}]}]}, {'type': 'VariableDeclaration', 'range': [570, 580], 'children': []}, {'type': 'IfStatement', 'range': [582, 594], 'children': [{'type': 'BlockStatement', 'range': [590, 594], 'children': [{'type': 'ReturnStatement', 'range': [591, 593], 'children': []}]}]}, {'type': 'ReturnStatement', 'range': [595, 601], 'children': []}]}, {'type': 'CatchClause', 'range': [603, 618], 'children': [{'type': 'BlockStatement', 'range': [608, 618], 'children': [{'type': 'ExpressionStatement', 'range': [609, 615], 'children': []}, {'type': 'ThrowStatement', 'range': [617, 617], 'children': []}]}]}]}]}, {'type': 'FunctionDeclaration', 'name': 'sync_wrapper', 'range': [626, 776], 'children': [{'type': 'TryStatement', 'range': [649, 776], 'children': [{'type': 'BlockStatement', 'range': [651, 759], 'children': [{'type': 'VariableDeclaration', 'range': [652, 659], 'children': []}, {'type': 'IfStatement', 'range': [661, 671], 'children': [{'type': 'BlockStatement', 'range': [665, 671], 'children': [{'type': 'ThrowStatement', 'range': [666, 670], 'children': []}]}]}, {'type': 'IfStatement', 'range': [673, 697], 'children': [{'type': 'BlockStatement', 'range': [683, 697], 'children': [{'type': 'ExpressionStatement', 'range': [684, 692], 'children': []}, {'type': 'VariableDeclaration', 'range': [694, 696], 'children': []}]}]}, {'type': 'ElseStatement', 'range': [698, 724], 'children': [{'type': 'BlockStatement', 'range': [700, 724], 'children': [{'type': 'VariableDeclaration', 'range': [701, 709], 'children': []}, {'type': 'VariableDeclaration', 'range': [711, 723], 'children': []}]}]}, {'type': 'IfStatement', 'range': [727, 742], 'children': [{'type': 'BlockStatement', 'range': [731, 742], 'children': [{'type': 'ThrowStatement', 'range': [732, 741], 'children': []}]}]}, {'type': 'ReturnStatement', 'range': [745, 759], 'children': []}]}, {'type': 'CatchClause', 'range': [761, 776], 'children': [{'type': 'BlockStatement', 'range': [766, 776], 'children': [{'type': 'ExpressionStatement', 'range': [767, 773], 'children': []}, {'type': 'ThrowStatement', 'range': [775, 775], 'children': []}]}]}]}]}]}]}
2025-01-08 09:43:00,736 - INFO - Starting Step 3: AST simplification
2025-01-08 09:43:02,414 - INFO - Step 4 result: {'type': 'Program', 'name': 'percentage_rollout', 'range': [818, 886], 'children': [{'type': 'FunctionDecl', 'name': 'percentage_rollout', 'range': [818, 886], 'children': [{'type': 'Parameter', 'name': 'flag_key', 'range': [822, 824], 'children': []}, {'type': 'Parameter', 'name': 'default', 'range': [827, 831], 'children': []}, {'type': 'ReturnType', 'name': 'Callable', 'range': [837, 872], 'children': [{'type': 'TypeParameter', 'name': 'Callable', 'range': [841, 855], 'children': []}, {'type': 'TypeParameter', 'name': 'Callable', 'range': [857, 870], 'children': []}]}, {'type': 'Docstring', 'name': '"Decorator for percentage-based rollouts."', 'range': [875, 877], 'children': []}, {'type': 'ReturnStatement', 'name': 'return', 'range': [879, 885], 'children': [{'type': 'CallExpression', 'name': 'feature_flag', 'range': [880, 885], 'children': [{'type': 'Argument', 'name': 'flag_key', 'range': [882, 882], 'children': []}, {'type': 'Argument', 'name': 'default', 'range': [884, 884], 'children': []}]}]}]}]}
2025-01-08 09:43:02,414 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:43:03,270 - INFO - Step 4 result: {'type': 'Program', 'name': 'get_client', 'range': [106, 126], 'children': [{'type': 'FunctionDecl', 'name': 'get_client', 'range': [106, 125], 'children': [{'type': 'FunctionSignature', 'name': 'get_client', 'range': [106, 113], 'children': [{'type': 'Keyword', 'name': 'def', 'range': [106, 106], 'children': []}, {'type': 'Identifier', 'name': 'get_client', 'range': [107, 107], 'children': []}, {'type': 'ReturnType', 'name': '-> LDClient', 'range': [110, 112], 'children': []}]}, {'type': 'FunctionBody', 'name': 'get_client', 'range': [114, 125], 'children': [{'type': 'Docstring', 'name': '"""Get the LaunchDarkly client singleton."""', 'range': [115, 117], 'children': []}, {'type': 'ReturnStatement', 'name': 'return ldclient.get()', 'range': [119, 124], 'children': [{'type': 'Keyword', 'name': 'return', 'range': [119, 119], 'children': []}, {'type': 'CallExpression', 'name': 'ldclient.get()', 'range': [120, 124], 'children': [{'type': 'Identifier', 'name': 'ldclient', 'range': [120, 120], 'children': []}, {'type': 'Identifier', 'name': 'get', 'range': [122, 122], 'children': []}]}]}]}]}]}
2025-01-08 09:43:03,270 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:43:06,512 - INFO - Step 3 result: {'type': 'Program', 'name': 'beta_feature', 'range': [889, 977], 'children': [{'type': 'FunctionDeclaration', 'name': 'beta_feature', 'range': [889, 977], 'children': [{'type': 'Parameter', 'name': 'flag_key', 'range': [893, 900], 'children': [{'type': 'TypeAnnotation', 'name': 'Optional[str]', 'range': [895, 898], 'children': []}, {'type': 'DefaultValue', 'name': 'None', 'range': [899, 900], 'children': []}]}, {'type': 'Parameter', 'name': 'unauthorized_response', 'range': [903, 912], 'children': [{'type': 'TypeAnnotation', 'name': 'Any', 'range': [905, 905], 'children': []}, {'type': 'DefaultValue', 'name': '{"message": "Not available in beta"}', 'range': [906, 911], 'children': []}]}, {'type': 'ReturnType', 'name': 'Callable[[Callable[P, Union[T, Awaitable[T]]]], Callable[P, Union[T, Awaitable[T]]]]', 'range': [917, 952], 'children': []}, {'type': 'FunctionBody', 'name': '', 'range': [954, 977], 'children': [{'type': 'Docstring', 'name': '"Decorator for beta features."', 'range': [955, 957], 'children': []}, {'type': 'VariableDeclaration', 'name': 'actual_key', 'range': [959, 967], 'children': [{'type': 'Assignment', 'name': '=', 'range': [960, 960], 'children': [{'type': 'StringLiteral', 'name': 'f"beta-{flag_key}"', 'range': [961, 962], 'children': []}, {'type': 'ConditionalExpression', 'name': 'if flag_key else "beta"', 'range': [963, 966], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return feature_flag(actual_key, False)', 'range': [968, 974], 'children': [{'type': 'CallExpression', 'name': 'feature_flag', 'range': [969, 974], 'children': [{'type': 'Argument', 'name': 'actual_key', 'range': [971, 971], 'children': []}, {'type': 'Argument', 'name': 'False', 'range': [973, 973], 'children': []}]}]}]}]}]}
2025-01-08 09:43:06,512 - INFO - Starting Step 4: AST normalization
2025-01-08 09:43:06,856 - INFO - Step 4 result: {'type': 'Program', 'name': 'create_context', 'range': [258, 338], 'children': [{'type': 'FunctionDecl', 'name': 'create_context', 'range': [258, 338], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [260, 280], 'children': [{'type': 'Parameter', 'name': 'user_id', 'range': [262, 264], 'children': []}, {'type': 'Parameter', 'name': 'additional_attributes', 'range': [266, 278], 'children': []}]}, {'type': 'ReturnType', 'name': 'Context', 'range': [283, 283], 'children': []}, {'type': 'FunctionBody', 'name': 'body', 'range': [285, 338], 'children': [{'type': 'Docstring', 'name': 'docstring', 'range': [286, 288], 'children': []}, {'type': 'Assignment', 'name': 'builder', 'range': [290, 306], 'children': [{'type': 'CallExpression', 'name': 'Context.builder(str(user_id)).kind("user")', 'range': [292, 305], 'children': []}]}, {'type': 'IfStatement', 'name': 'if additional_attributes', 'range': [307, 331], 'children': [{'type': 'ForStatement', 'name': 'for key, value in additional_attributes.items()', 'range': [311, 330], 'children': [{'type': 'CallExpression', 'name': 'builder.set(key, value)', 'range': [323, 330], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return builder.build()', 'range': [332, 338], 'children': [{'type': 'CallExpression', 'name': 'builder.build()', 'range': [333, 337], 'children': []}]}]}]}]}
2025-01-08 09:43:06,856 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:43:06,886 - INFO - Step 2 result: {'nodes': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 8], 'children': [{'type': 'ImportClause', 'name': 'asyncio', 'range': [1, 1], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [9, 13], 'children': [{'type': 'ImportClause', 'name': 'contextlib', 'range': [4, 4], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [14, 32], 'children': [{'type': 'ImportClause', 'name': 'wraps', 'range': [12, 12], 'children': []}, {'type': 'ImportClause', 'name': 'Any', 'range': [17, 17], 'children': []}, {'type': 'ImportClause', 'name': 'Awaitable', 'range': [19, 19], 'children': []}, {'type': 'ImportClause', 'name': 'Callable', 'range': [21, 21], 'children': []}, {'type': 'ImportClause', 'name': 'Dict', 'range': [23, 23], 'children': []}, {'type': 'ImportClause', 'name': 'Optional', 'range': [25, 25], 'children': []}, {'type': 'ImportClause', 'name': 'TypeVar', 'range': [27, 27], 'children': []}, {'type': 'ImportClause', 'name': 'Union', 'range': [29, 29], 'children': []}, {'type': 'ImportClause', 'name': 'cast', 'range': [31, 31], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [34, 36], 'children': [{'type': 'ImportClause', 'name': 'ldclient', 'range': [35, 35], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [37, 41], 'children': [{'type': 'ImportClause', 'name': 'HTTPException', 'range': [40, 40], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [42, 48], 'children': [{'type': 'ImportClause', 'name': 'Context', 'range': [45, 45], 'children': []}, {'type': 'ImportClause', 'name': 'LDClient', 'range': [47, 47], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [49, 55], 'children': [{'type': 'ImportClause', 'name': 'Config', 'range': [54, 54], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [56, 60], 'children': [{'type': 'ImportClause', 'name': 'ParamSpec', 'range': [59, 59], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [62, 67], 'children': [{'type': 'ImportClause', 'name': 'SETTINGS', 'range': [66, 66], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'logger', 'range': [69, 77], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [70, 76], 'children': [{'type': 'CallExpression', 'name': 'getLogger', 'range': [73, 76], 'children': [{'type': 'Identifier', 'name': '__name__', 'range': [75, 75], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [78, 88], 'children': [{'type': 'CallExpression', 'name': 'basicConfig', 'range': [80, 87], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [82, 86], 'children': [{'type': 'Identifier', 'name': 'level', 'range': [82, 82], 'children': []}, {'type': 'Identifier', 'name': 'DEBUG', 'range': [86, 86], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'P', 'range': [90, 96], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [91, 95], 'children': [{'type': 'CallExpression', 'name': 'ParamSpec', 'range': [92, 95], 'children': [{'type': 'StringLiteral', 'name': '"P"', 'range': [94, 94], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'T', 'range': [97, 103], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [98, 102], 'children': [{'type': 'CallExpression', 'name': 'TypeVar', 'range': [99, 102], 'children': [{'type': 'StringLiteral', 'name': '"T"', 'range': [101, 101], 'children': []}]}]}]}]}
2025-01-08 09:43:06,887 - INFO - Starting Step 3: AST simplification
2025-01-08 09:43:09,650 - INFO - Step 3 result: {'type': 'Program', 'name': 'initialize_launchdarkly', 'range': [127, 213], 'children': [{'type': 'FunctionDeclaration', 'name': 'initialize_launchdarkly', 'range': [127, 213], 'children': [{'type': 'ParameterList', 'name': '', 'range': [129, 130], 'children': []}, {'type': 'ReturnType', 'name': 'None', 'range': [131, 133], 'children': []}, {'type': 'Block', 'name': '', 'range': [134, 213], 'children': [{'type': 'Assignment', 'name': 'sdk_key', 'range': [136, 140], 'children': []}, {'type': 'MethodCall', 'name': 'logger.debug', 'range': [142, 150], 'children': [{'type': 'StringLiteral', 'name': '', 'range': [148, 148], 'children': []}]}, {'type': 'IfStatement', 'name': '', 'range': [153, 166], 'children': [{'type': 'Condition', 'name': '', 'range': [154, 155], 'children': []}, {'type': 'Block', 'name': '', 'range': [156, 166], 'children': [{'type': 'MethodCall', 'name': 'logger.warning', 'range': [158, 163], 'children': [{'type': 'StringLiteral', 'name': '', 'range': [162, 162], 'children': []}]}, {'type': 'ReturnStatement', 'name': '', 'range': [165, 165], 'children': []}]}]}, {'type': 'Assignment', 'name': 'config', 'range': [168, 173], 'children': []}, {'type': 'MethodCall', 'name': 'ldclient.set_config', 'range': [175, 180], 'children': [{'type': 'Identifier', 'name': 'config', 'range': [179, 179], 'children': []}]}, {'type': 'IfStatement', 'name': '', 'range': [183, 211], 'children': [{'type': 'Condition', 'name': '', 'range': [184, 192], 'children': []}, {'type': 'Block', 'name': '', 'range': [193, 211], 'children': [{'type': 'MethodCall', 'name': 'logger.info', 'range': [195, 200], 'children': [{'type': 'StringLiteral', 'name': '', 'range': [199, 199], 'children': []}]}, {'type': 'ElseStatement', 'name': '', 'range': [202, 211], 'children': [{'type': 'Block', 'name': '', 'range': [203, 211], 'children': [{'type': 'MethodCall', 'name': 'logger.error', 'range': [205, 210], 'children': [{'type': 'StringLiteral', 'name': '', 'range': [209, 209], 'children': []}]}]}]}]}]}]}]}]}
2025-01-08 09:43:09,651 - INFO - Starting Step 4: AST normalization
2025-01-08 09:43:12,347 - INFO - Step 5 result: {'type': 'Program', 'name': 'percentage_rollout', 'range': [818, 886], 'children': [{'type': 'FunctionDecl', 'name': 'percentage_rollout', 'range': [818, 886], 'children': [{'type': 'Parameter', 'name': 'flag_key', 'range': [822, 824], 'children': []}, {'type': 'Parameter', 'name': 'default', 'range': [827, 831], 'children': []}, {'type': 'ReturnType', 'name': 'Callable', 'range': [837, 872], 'children': [{'type': 'TypeParameter', 'name': 'Callable', 'range': [841, 855], 'children': []}, {'type': 'TypeParameter', 'name': 'Callable', 'range': [857, 870], 'children': []}]}, {'type': 'Docstring', 'name': '"Decorator for percentage-based rollouts."', 'range': [875, 877], 'children': []}, {'type': 'ReturnStatement', 'name': 'return', 'range': [879, 885], 'children': [{'type': 'CallExpression', 'name': 'feature_flag', 'range': [880, 885], 'children': [{'type': 'Argument', 'name': 'flag_key', 'range': [882, 882], 'children': []}, {'type': 'Argument', 'name': 'default', 'range': [884, 884], 'children': []}]}]}]}]}
2025-01-08 09:43:12,347 - INFO - Completed main AST analysis flow
2025-01-08 09:43:12,348 - INFO - Successfully processed chunk
2025-01-08 09:43:12,700 - INFO - Step 5 result: {'type': 'Program', 'name': 'get_client', 'range': [106, 126], 'children': [{'type': 'FunctionDecl', 'name': 'get_client', 'range': [106, 125], 'children': [{'type': 'FunctionSignature', 'name': 'get_client', 'range': [106, 113], 'children': [{'type': 'Keyword', 'name': 'def', 'range': [106, 106], 'children': []}, {'type': 'Identifier', 'name': 'get_client', 'range': [107, 107], 'children': []}, {'type': 'ReturnType', 'name': '-> LDClient', 'range': [110, 112], 'children': []}]}, {'type': 'FunctionBody', 'name': 'get_client', 'range': [114, 125], 'children': [{'type': 'Docstring', 'name': '"""Get the LaunchDarkly client singleton."""', 'range': [115, 117], 'children': []}, {'type': 'ReturnStatement', 'name': 'return ldclient.get()', 'range': [119, 124], 'children': [{'type': 'Keyword', 'name': 'return', 'range': [119, 119], 'children': []}, {'type': 'CallExpression', 'name': 'ldclient.get()', 'range': [120, 124], 'children': [{'type': 'Identifier', 'name': 'ldclient', 'range': [120, 120], 'children': []}, {'type': 'Identifier', 'name': 'get', 'range': [122, 122], 'children': []}]}]}]}]}]}
2025-01-08 09:43:12,700 - INFO - Completed main AST analysis flow
2025-01-08 09:43:12,700 - INFO - Successfully processed chunk
2025-01-08 09:43:17,354 - INFO - Step 3 result: {'type': 'Program', 'name': 'shutdown_launchdarkly', 'range': [214, 257], 'children': [{'type': 'FunctionDeclaration', 'name': 'shutdown_launchdarkly', 'range': [214, 257], 'children': [{'type': 'FunctionSignature', 'name': 'shutdown_launchdarkly', 'range': [214, 221], 'children': [{'type': 'Keyword', 'name': 'def', 'range': [214, 214], 'children': []}, {'type': 'FunctionName', 'name': 'shutdown_launchdarkly', 'range': [215, 215], 'children': []}, {'type': 'Parameters', 'name': '()', 'range': [216, 217], 'children': []}, {'type': 'ReturnType', 'name': '-> None', 'range': [218, 220], 'children': []}]}, {'type': 'FunctionBody', 'name': 'shutdown_launchdarkly_body', 'range': [222, 257], 'children': [{'type': 'Docstring', 'name': 'docstring', 'range': [222, 226], 'children': [{'type': 'String', 'name': '"""Shutdown the LaunchDarkly client."""', 'range': [223, 225], 'children': []}]}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [227, 248], 'children': [{'type': 'IfKeyword', 'name': 'if', 'range': [227, 227], 'children': []}, {'type': 'Condition', 'name': 'condition', 'range': [228, 236], 'children': [{'type': 'Variable', 'name': 'ldclient', 'range': [228, 228], 'children': []}, {'type': 'MethodCall', 'name': 'get', 'range': [230, 232], 'children': []}, {'type': 'MethodCall', 'name': 'is_initialized', 'range': [234, 236], 'children': []}]}, {'type': 'IfBody', 'name': 'if_body', 'range': [238, 248], 'children': [{'type': 'ExpressionStatement', 'name': 'expression_statement', 'range': [239, 247], 'children': [{'type': 'Variable', 'name': 'ldclient', 'range': [239, 239], 'children': []}, {'type': 'MethodCall', 'name': 'get', 'range': [241, 243], 'children': []}, {'type': 'MethodCall', 'name': 'close', 'range': [245, 247], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': 'expression_statement', 'range': [249, 255], 'children': [{'type': 'Variable', 'name': 'logger', 'range': [249, 249], 'children': []}, {'type': 'MethodCall', 'name': 'info', 'range': [251, 254], 'children': [{'type': 'String', 'name': '"LaunchDarkly client closed successfully"', 'range': [253, 253], 'children': []}]}]}]}]}]}
2025-01-08 09:43:17,354 - INFO - Starting Step 4: AST normalization
2025-01-08 09:43:17,985 - INFO - Step 5 result: {'type': 'Program', 'name': 'create_context', 'range': [258, 338], 'children': [{'type': 'FunctionDecl', 'name': 'create_context', 'range': [258, 338], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [260, 280], 'children': [{'type': 'Parameter', 'name': 'user_id', 'range': [262, 264], 'children': []}, {'type': 'Parameter', 'name': 'additional_attributes', 'range': [266, 278], 'children': []}]}, {'type': 'ReturnType', 'name': 'Context', 'range': [283, 283], 'children': []}, {'type': 'FunctionBody', 'name': 'body', 'range': [285, 338], 'children': [{'type': 'Docstring', 'name': 'docstring', 'range': [286, 288], 'children': []}, {'type': 'Assignment', 'name': 'builder', 'range': [290, 306], 'children': [{'type': 'CallExpression', 'name': 'Context.builder(str(user_id)).kind("user")', 'range': [292, 305], 'children': []}]}, {'type': 'IfStatement', 'name': 'if additional_attributes', 'range': [307, 331], 'children': [{'type': 'ForStatement', 'name': 'for key, value in additional_attributes.items()', 'range': [311, 330], 'children': [{'type': 'CallExpression', 'name': 'builder.set(key, value)', 'range': [323, 330], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return builder.build()', 'range': [332, 338], 'children': [{'type': 'CallExpression', 'name': 'builder.build()', 'range': [333, 337], 'children': []}]}]}]}]}
2025-01-08 09:43:17,985 - INFO - Completed main AST analysis flow
2025-01-08 09:43:17,986 - INFO - Successfully processed chunk
2025-01-08 09:43:19,736 - INFO - Step 4 result: {'type': 'Program', 'name': 'beta_feature', 'range': [889, 977], 'children': [{'type': 'FunctionDecl', 'name': 'beta_feature', 'range': [889, 977], 'children': [{'type': 'Parameter', 'name': 'flag_key', 'range': [893, 900], 'children': [{'type': 'TypeAnnotation', 'name': 'Optional[str]', 'range': [895, 898], 'children': []}, {'type': 'DefaultValue', 'name': 'None', 'range': [899, 900], 'children': []}]}, {'type': 'Parameter', 'name': 'unauthorized_response', 'range': [903, 912], 'children': [{'type': 'TypeAnnotation', 'name': 'Any', 'range': [905, 905], 'children': []}, {'type': 'DefaultValue', 'name': '{"message": "Not available in beta"}', 'range': [906, 911], 'children': []}]}, {'type': 'ReturnType', 'name': 'Callable[[Callable[P, Union[T, Awaitable[T]]]], Callable[P, Union[T, Awaitable[T]]]]', 'range': [917, 952], 'children': []}, {'type': 'FunctionBody', 'name': '', 'range': [954, 977], 'children': [{'type': 'Docstring', 'name': '"Decorator for beta features."', 'range': [955, 957], 'children': []}, {'type': 'VariableDecl', 'name': 'actual_key', 'range': [959, 967], 'children': [{'type': 'Assignment', 'name': '=', 'range': [960, 960], 'children': [{'type': 'Literal', 'name': 'f"beta-{flag_key}"', 'range': [961, 962], 'children': []}, {'type': 'ConditionalExpression', 'name': 'if flag_key else "beta"', 'range': [963, 966], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return feature_flag(actual_key, False)', 'range': [968, 974], 'children': [{'type': 'CallExpression', 'name': 'feature_flag', 'range': [969, 974], 'children': [{'type': 'Argument', 'name': 'actual_key', 'range': [971, 971], 'children': []}, {'type': 'Argument', 'name': 'False', 'range': [973, 973], 'children': []}]}]}]}]}]}
2025-01-08 09:43:19,737 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:43:24,049 - INFO - Step 3 result: {'type': 'Program', 'name': 'mock_flag_variation', 'range': [983, 1056], 'children': [{'type': 'FunctionDeclaration', 'name': 'mock_flag_variation', 'range': [983, 1056], 'children': [{'type': 'ParameterList', 'name': '', 'range': [985, 993], 'children': [{'type': 'Parameter', 'name': 'flag_key', 'range': [986, 988], 'children': []}, {'type': 'Parameter', 'name': 'return_value', 'range': [990, 992], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [994, 1056], 'children': [{'type': 'VariableDeclaration', 'name': 'original_variation', 'range': [1000, 1007], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [1001, 1007], 'children': [{'type': 'CallExpression', 'name': 'get_client', 'range': [1002, 1006], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [1008, 1039], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [1013, 1039], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [1008, 1012], 'children': [{'type': 'CallExpression', 'name': 'get_client', 'range': [1008, 1012], 'children': []}]}, {'type': 'LambdaExpression', 'name': 'lambda', 'range': [1014, 1039], 'children': [{'type': 'ParameterList', 'name': '', 'range': [1015, 1020], 'children': [{'type': 'Parameter', 'name': 'key', 'range': [1015, 1016], 'children': []}, {'type': 'Parameter', 'name': 'context', 'range': [1017, 1018], 'children': []}, {'type': 'Parameter', 'name': 'default', 'range': [1019, 1020], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [1021, 1039], 'children': [{'type': 'IfStatement', 'name': '', 'range': [1024, 1037], 'children': [{'type': 'BinaryExpression', 'name': '==', 'range': [1026, 1028], 'children': [{'type': 'Identifier', 'name': 'key', 'range': [1025, 1026], 'children': []}, {'type': 'Identifier', 'name': 'flag_key', 'range': [1027, 1028], 'children': []}]}, {'type': 'ReturnStatement', 'name': '', 'range': [1023, 1024], 'children': [{'type': 'Identifier', 'name': 'return_value', 'range': [1023, 1024], 'children': []}]}, {'type': 'ReturnStatement', 'name': '', 'range': [1030, 1037], 'children': [{'type': 'CallExpression', 'name': 'original_variation', 'range': [1030, 1037], 'children': [{'type': 'Identifier', 'name': 'key', 'range': [1032, 1033], 'children': []}, {'type': 'Identifier', 'name': 'context', 'range': [1034, 1035], 'children': []}, {'type': 'Identifier', 'name': 'default', 'range': [1036, 1037], 'children': []}]}]}]}]}]}]}]}, {'type': 'TryStatement', 'name': '', 'range': [1041, 1056], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [1043, 1045], 'children': [{'type': 'YieldStatement', 'name': '', 'range': [1044, 1045], 'children': []}]}, {'type': 'FinallyStatement', 'name': '', 'range': [1046, 1056], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [1048, 1056], 'children': [{'type': 'ExpressionStatement', 'name': '', 'range': [1049, 1055], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [1054, 1055], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [1049, 1053], 'children': [{'type': 'CallExpression', 'name': 'get_client', 'range': [1049, 1053], 'children': []}]}, {'type': 'Identifier', 'name': 'original_variation', 'range': [1055, 1056], 'children': []}]}]}]}]}]}]}]}]}
2025-01-08 09:43:24,049 - INFO - Starting Step 4: AST normalization
2025-01-08 09:43:25,646 - INFO - Step 4 result: {'type': 'Program', 'name': 'initialize_launchdarkly', 'range': [127, 213], 'children': [{'type': 'FunctionDecl', 'name': 'initialize_launchdarkly', 'range': [127, 213], 'children': [{'type': 'ParameterList', 'name': '', 'range': [129, 130], 'children': []}, {'type': 'ReturnType', 'name': 'None', 'range': [131, 133], 'children': []}, {'type': 'Block', 'name': '', 'range': [134, 213], 'children': [{'type': 'AssignmentExpression', 'name': 'sdk_key', 'range': [136, 140], 'children': []}, {'type': 'CallExpression', 'name': 'logger.debug', 'range': [142, 150], 'children': [{'type': 'Literal', 'name': '', 'range': [148, 148], 'children': []}]}, {'type': 'IfStatement', 'name': '', 'range': [153, 166], 'children': [{'type': 'Condition', 'name': '', 'range': [154, 155], 'children': []}, {'type': 'Block', 'name': '', 'range': [156, 166], 'children': [{'type': 'CallExpression', 'name': 'logger.warning', 'range': [158, 163], 'children': [{'type': 'Literal', 'name': '', 'range': [162, 162], 'children': []}]}, {'type': 'ReturnStatement', 'name': '', 'range': [165, 165], 'children': []}]}]}, {'type': 'AssignmentExpression', 'name': 'config', 'range': [168, 173], 'children': []}, {'type': 'CallExpression', 'name': 'ldclient.set_config', 'range': [175, 180], 'children': [{'type': 'Identifier', 'name': 'config', 'range': [179, 179], 'children': []}]}, {'type': 'IfStatement', 'name': '', 'range': [183, 211], 'children': [{'type': 'Condition', 'name': '', 'range': [184, 192], 'children': []}, {'type': 'Block', 'name': '', 'range': [193, 211], 'children': [{'type': 'CallExpression', 'name': 'logger.info', 'range': [195, 200], 'children': [{'type': 'Literal', 'name': '', 'range': [199, 199], 'children': []}]}, {'type': 'ElseStatement', 'name': '', 'range': [202, 211], 'children': [{'type': 'Block', 'name': '', 'range': [203, 211], 'children': [{'type': 'CallExpression', 'name': 'logger.error', 'range': [205, 210], 'children': [{'type': 'Literal', 'name': '', 'range': [209, 209], 'children': []}]}]}]}]}]}]}]}]}
2025-01-08 09:43:25,646 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:43:27,289 - INFO - Step 3 result: {'type': 'Program', 'name': 'feature_flag', 'range': [341, 815], 'children': [{'type': 'FunctionDeclaration', 'name': 'decorator', 'range': [403, 815], 'children': [{'type': 'FunctionDeclaration', 'name': 'async_wrapper', 'range': [450, 618], 'children': [{'type': 'TryStatement', 'range': [474, 618], 'children': [{'type': 'BlockStatement', 'range': [476, 602], 'children': [{'type': 'VariableDeclaration', 'range': [477, 484], 'children': []}, {'type': 'IfStatement', 'range': [486, 496], 'children': [{'type': 'BlockStatement', 'range': [490, 496], 'children': [{'type': 'ThrowStatement', 'range': [491, 495], 'children': []}]}]}, {'type': 'IfStatement', 'range': [498, 522], 'children': [{'type': 'BlockStatement', 'range': [508, 522], 'children': [{'type': 'ExpressionStatement', 'range': [509, 517], 'children': []}, {'type': 'VariableDeclaration', 'range': [519, 521], 'children': []}]}]}, {'type': 'ElseStatement', 'range': [523, 550], 'children': [{'type': 'BlockStatement', 'range': [525, 550], 'children': [{'type': 'VariableDeclaration', 'range': [526, 534], 'children': []}, {'type': 'VariableDeclaration', 'range': [536, 549], 'children': []}]}]}, {'type': 'IfStatement', 'range': [552, 568], 'children': [{'type': 'BlockStatement', 'range': [556, 568], 'children': [{'type': 'ThrowStatement', 'range': [557, 567], 'children': []}]}]}, {'type': 'VariableDeclaration', 'range': [570, 580], 'children': []}, {'type': 'IfStatement', 'range': [582, 594], 'children': [{'type': 'BlockStatement', 'range': [590, 594], 'children': [{'type': 'ReturnStatement', 'range': [591, 593], 'children': []}]}]}, {'type': 'ReturnStatement', 'range': [595, 601], 'children': []}]}, {'type': 'CatchClause', 'range': [603, 618], 'children': [{'type': 'BlockStatement', 'range': [608, 618], 'children': [{'type': 'ExpressionStatement', 'range': [609, 615], 'children': []}, {'type': 'ThrowStatement', 'range': [617, 617], 'children': []}]}]}]}]}, {'type': 'FunctionDeclaration', 'name': 'sync_wrapper', 'range': [626, 776], 'children': [{'type': 'TryStatement', 'range': [649, 776], 'children': [{'type': 'BlockStatement', 'range': [651, 759], 'children': [{'type': 'VariableDeclaration', 'range': [652, 659], 'children': []}, {'type': 'IfStatement', 'range': [661, 671], 'children': [{'type': 'BlockStatement', 'range': [665, 671], 'children': [{'type': 'ThrowStatement', 'range': [666, 670], 'children': []}]}]}, {'type': 'IfStatement', 'range': [673, 697], 'children': [{'type': 'BlockStatement', 'range': [683, 697], 'children': [{'type': 'ExpressionStatement', 'range': [684, 692], 'children': []}, {'type': 'VariableDeclaration', 'range': [694, 696], 'children': []}]}]}, {'type': 'ElseStatement', 'range': [698, 724], 'children': [{'type': 'BlockStatement', 'range': [700, 724], 'children': [{'type': 'VariableDeclaration', 'range': [701, 709], 'children': []}, {'type': 'VariableDeclaration', 'range': [711, 723], 'children': []}]}]}, {'type': 'IfStatement', 'range': [727, 742], 'children': [{'type': 'BlockStatement', 'range': [731, 742], 'children': [{'type': 'ThrowStatement', 'range': [732, 741], 'children': []}]}]}, {'type': 'ReturnStatement', 'range': [745, 759], 'children': []}]}, {'type': 'CatchClause', 'range': [761, 776], 'children': [{'type': 'BlockStatement', 'range': [766, 776], 'children': [{'type': 'ExpressionStatement', 'range': [767, 773], 'children': []}, {'type': 'ThrowStatement', 'range': [775, 775], 'children': []}]}]}]}]}]}]}
2025-01-08 09:43:27,289 - INFO - Starting Step 4: AST normalization
2025-01-08 09:43:33,473 - INFO - Step 5 result: {'type': 'Program', 'name': 'beta_feature', 'range': [889, 977], 'children': [{'type': 'FunctionDecl', 'name': 'beta_feature', 'range': [889, 977], 'children': [{'type': 'Parameter', 'name': 'flag_key', 'range': [893, 900], 'children': [{'type': 'TypeAnnotation', 'name': 'Optional[str]', 'range': [895, 898], 'children': []}, {'type': 'DefaultValue', 'name': 'None', 'range': [899, 900], 'children': []}]}, {'type': 'Parameter', 'name': 'unauthorized_response', 'range': [903, 912], 'children': [{'type': 'TypeAnnotation', 'name': 'Any', 'range': [905, 905], 'children': []}, {'type': 'DefaultValue', 'name': '{"message": "Not available in beta"}', 'range': [906, 911], 'children': []}]}, {'type': 'ReturnType', 'name': 'Callable[[Callable[P, Union[T, Awaitable[T]]]], Callable[P, Union[T, Awaitable[T]]]]', 'range': [917, 952], 'children': []}, {'type': 'FunctionBody', 'name': '', 'range': [954, 977], 'children': [{'type': 'Docstring', 'name': '"Decorator for beta features."', 'range': [955, 957], 'children': []}, {'type': 'VariableDecl', 'name': 'actual_key', 'range': [959, 967], 'children': [{'type': 'Assignment', 'name': '=', 'range': [960, 960], 'children': [{'type': 'Literal', 'name': 'f"beta-{flag_key}"', 'range': [961, 962], 'children': []}, {'type': 'ConditionalExpression', 'name': 'if flag_key else "beta"', 'range': [963, 966], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return feature_flag(actual_key, False)', 'range': [968, 974], 'children': [{'type': 'CallExpression', 'name': 'feature_flag', 'range': [969, 974], 'children': [{'type': 'Argument', 'name': 'actual_key', 'range': [971, 971], 'children': []}, {'type': 'Argument', 'name': 'False', 'range': [973, 973], 'children': []}]}]}]}]}]}
2025-01-08 09:43:33,474 - INFO - Completed main AST analysis flow
2025-01-08 09:43:33,474 - INFO - Successfully processed chunk
2025-01-08 09:43:33,801 - INFO - Step 3 result: {'nodes': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 8], 'children': [{'type': 'ImportClause', 'name': 'asyncio', 'range': [1, 1], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [9, 13], 'children': [{'type': 'ImportClause', 'name': 'contextlib', 'range': [4, 4], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [14, 32], 'children': [{'type': 'ImportClause', 'name': 'wraps', 'range': [12, 12], 'children': []}, {'type': 'ImportClause', 'name': 'Any', 'range': [17, 17], 'children': []}, {'type': 'ImportClause', 'name': 'Awaitable', 'range': [19, 19], 'children': []}, {'type': 'ImportClause', 'name': 'Callable', 'range': [21, 21], 'children': []}, {'type': 'ImportClause', 'name': 'Dict', 'range': [23, 23], 'children': []}, {'type': 'ImportClause', 'name': 'Optional', 'range': [25, 25], 'children': []}, {'type': 'ImportClause', 'name': 'TypeVar', 'range': [27, 27], 'children': []}, {'type': 'ImportClause', 'name': 'Union', 'range': [29, 29], 'children': []}, {'type': 'ImportClause', 'name': 'cast', 'range': [31, 31], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [34, 36], 'children': [{'type': 'ImportClause', 'name': 'ldclient', 'range': [35, 35], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [37, 41], 'children': [{'type': 'ImportClause', 'name': 'HTTPException', 'range': [40, 40], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [42, 48], 'children': [{'type': 'ImportClause', 'name': 'Context', 'range': [45, 45], 'children': []}, {'type': 'ImportClause', 'name': 'LDClient', 'range': [47, 47], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [49, 55], 'children': [{'type': 'ImportClause', 'name': 'Config', 'range': [54, 54], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [56, 60], 'children': [{'type': 'ImportClause', 'name': 'ParamSpec', 'range': [59, 59], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [62, 67], 'children': [{'type': 'ImportClause', 'name': 'SETTINGS', 'range': [66, 66], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'logger', 'range': [69, 77], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [70, 76], 'children': [{'type': 'CallExpression', 'name': 'getLogger', 'range': [73, 76], 'children': [{'type': 'Identifier', 'name': '__name__', 'range': [75, 75], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [78, 88], 'children': [{'type': 'CallExpression', 'name': 'basicConfig', 'range': [80, 87], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [82, 86], 'children': [{'type': 'Identifier', 'name': 'level', 'range': [82, 82], 'children': []}, {'type': 'Identifier', 'name': 'DEBUG', 'range': [86, 86], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'P', 'range': [90, 96], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [91, 95], 'children': [{'type': 'CallExpression', 'name': 'ParamSpec', 'range': [92, 95], 'children': [{'type': 'StringLiteral', 'name': '"P"', 'range': [94, 94], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'T', 'range': [97, 103], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [98, 102], 'children': [{'type': 'CallExpression', 'name': 'TypeVar', 'range': [99, 102], 'children': [{'type': 'StringLiteral', 'name': '"T"', 'range': [101, 101], 'children': []}]}]}]}]}
2025-01-08 09:43:33,801 - INFO - Starting Step 4: AST normalization
2025-01-08 09:43:33,895 - INFO - Step 4 result: {'type': 'Program', 'name': 'shutdown_launchdarkly', 'range': [214, 257], 'children': [{'type': 'FunctionDecl', 'name': 'shutdown_launchdarkly', 'range': [214, 257], 'children': [{'type': 'FunctionSignature', 'name': 'shutdown_launchdarkly', 'range': [214, 221], 'children': [{'type': 'Keyword', 'name': 'def', 'range': [214, 214], 'children': []}, {'type': 'Identifier', 'name': 'shutdown_launchdarkly', 'range': [215, 215], 'children': []}, {'type': 'Parameters', 'name': '()', 'range': [216, 217], 'children': []}, {'type': 'ReturnType', 'name': '-> None', 'range': [218, 220], 'children': []}]}, {'type': 'FunctionBody', 'name': 'shutdown_launchdarkly_body', 'range': [222, 257], 'children': [{'type': 'Docstring', 'name': 'docstring', 'range': [222, 226], 'children': [{'type': 'Literal', 'name': '"""Shutdown the LaunchDarkly client."""', 'range': [223, 225], 'children': []}]}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [227, 248], 'children': [{'type': 'IfKeyword', 'name': 'if', 'range': [227, 227], 'children': []}, {'type': 'Condition', 'name': 'condition', 'range': [228, 236], 'children': [{'type': 'Identifier', 'name': 'ldclient', 'range': [228, 228], 'children': []}, {'type': 'CallExpression', 'name': 'get', 'range': [230, 232], 'children': []}, {'type': 'CallExpression', 'name': 'is_initialized', 'range': [234, 236], 'children': []}]}, {'type': 'IfBody', 'name': 'if_body', 'range': [238, 248], 'children': [{'type': 'ExpressionStatement', 'name': 'expression_statement', 'range': [239, 247], 'children': [{'type': 'Identifier', 'name': 'ldclient', 'range': [239, 239], 'children': []}, {'type': 'CallExpression', 'name': 'get', 'range': [241, 243], 'children': []}, {'type': 'CallExpression', 'name': 'close', 'range': [245, 247], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': 'expression_statement', 'range': [249, 255], 'children': [{'type': 'Identifier', 'name': 'logger', 'range': [249, 249], 'children': []}, {'type': 'CallExpression', 'name': 'info', 'range': [251, 254], 'children': [{'type': 'Literal', 'name': '"LaunchDarkly client closed successfully"', 'range': [253, 253], 'children': []}]}]}]}]}]}
2025-01-08 09:43:33,895 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:43:42,009 - INFO - Step 5 result: {'type': 'Program', 'name': 'initialize_launchdarkly', 'range': [127, 213], 'children': [{'type': 'FunctionDecl', 'name': 'initialize_launchdarkly', 'range': [127, 213], 'children': [{'type': 'ParameterList', 'name': '', 'range': [129, 130], 'children': []}, {'type': 'ReturnType', 'name': 'None', 'range': [131, 133], 'children': []}, {'type': 'Block', 'name': '', 'range': [134, 213], 'children': [{'type': 'AssignmentExpression', 'name': 'sdk_key', 'range': [136, 140], 'children': []}, {'type': 'CallExpression', 'name': 'logger.debug', 'range': [142, 150], 'children': [{'type': 'Literal', 'name': '', 'range': [148, 148], 'children': []}]}, {'type': 'IfStatement', 'name': '', 'range': [153, 166], 'children': [{'type': 'Condition', 'name': '', 'range': [154, 155], 'children': []}, {'type': 'Block', 'name': '', 'range': [156, 166], 'children': [{'type': 'CallExpression', 'name': 'logger.warning', 'range': [158, 163], 'children': [{'type': 'Literal', 'name': '', 'range': [162, 162], 'children': []}]}, {'type': 'ReturnStatement', 'name': '', 'range': [165, 165], 'children': []}]}]}, {'type': 'AssignmentExpression', 'name': 'config', 'range': [168, 173], 'children': []}, {'type': 'CallExpression', 'name': 'ldclient.set_config', 'range': [175, 180], 'children': [{'type': 'Identifier', 'name': 'config', 'range': [179, 179], 'children': []}]}, {'type': 'IfStatement', 'name': '', 'range': [183, 211], 'children': [{'type': 'Condition', 'name': '', 'range': [184, 192], 'children': []}, {'type': 'Block', 'name': '', 'range': [193, 211], 'children': [{'type': 'CallExpression', 'name': 'logger.info', 'range': [195, 200], 'children': [{'type': 'Literal', 'name': '', 'range': [199, 199], 'children': []}]}, {'type': 'ElseStatement', 'name': '', 'range': [202, 211], 'children': [{'type': 'Block', 'name': '', 'range': [203, 211], 'children': [{'type': 'CallExpression', 'name': 'logger.error', 'range': [205, 210], 'children': [{'type': 'Literal', 'name': '', 'range': [209, 209], 'children': []}]}]}]}]}]}]}]}]}
2025-01-08 09:43:42,010 - INFO - Completed main AST analysis flow
2025-01-08 09:43:42,010 - INFO - Successfully processed chunk
2025-01-08 09:43:50,623 - INFO - Step 5 result: {'type': 'Program', 'name': 'shutdown_launchdarkly', 'range': [214, 257], 'children': [{'type': 'FunctionDecl', 'name': 'shutdown_launchdarkly', 'range': [214, 257], 'children': [{'type': 'FunctionSignature', 'name': 'shutdown_launchdarkly', 'range': [214, 221], 'children': [{'type': 'Keyword', 'name': 'def', 'range': [214, 214], 'children': []}, {'type': 'Identifier', 'name': 'shutdown_launchdarkly', 'range': [215, 215], 'children': []}, {'type': 'Parameters', 'name': '()', 'range': [216, 217], 'children': []}, {'type': 'ReturnType', 'name': '-> None', 'range': [218, 220], 'children': []}]}, {'type': 'FunctionBody', 'name': 'shutdown_launchdarkly_body', 'range': [222, 257], 'children': [{'type': 'Docstring', 'name': 'docstring', 'range': [222, 226], 'children': [{'type': 'Literal', 'name': '"""Shutdown the LaunchDarkly client."""', 'range': [223, 225], 'children': []}]}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [227, 248], 'children': [{'type': 'IfKeyword', 'name': 'if', 'range': [227, 227], 'children': []}, {'type': 'Condition', 'name': 'condition', 'range': [228, 236], 'children': [{'type': 'Identifier', 'name': 'ldclient', 'range': [228, 228], 'children': []}, {'type': 'CallExpression', 'name': 'get', 'range': [230, 232], 'children': []}, {'type': 'CallExpression', 'name': 'is_initialized', 'range': [234, 236], 'children': []}]}, {'type': 'IfBody', 'name': 'if_body', 'range': [238, 248], 'children': [{'type': 'ExpressionStatement', 'name': 'expression_statement', 'range': [239, 247], 'children': [{'type': 'Identifier', 'name': 'ldclient', 'range': [239, 239], 'children': []}, {'type': 'CallExpression', 'name': 'get', 'range': [241, 243], 'children': []}, {'type': 'CallExpression', 'name': 'close', 'range': [245, 247], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': 'expression_statement', 'range': [249, 255], 'children': [{'type': 'Identifier', 'name': 'logger', 'range': [249, 249], 'children': []}, {'type': 'CallExpression', 'name': 'info', 'range': [251, 254], 'children': [{'type': 'Literal', 'name': '"LaunchDarkly client closed successfully"', 'range': [253, 253], 'children': []}]}]}]}]}]}
2025-01-08 09:43:50,623 - INFO - Completed main AST analysis flow
2025-01-08 09:43:50,623 - INFO - Successfully processed chunk
2025-01-08 09:43:51,660 - INFO - Step 4 result: {'type': 'Program', 'name': 'mock_flag_variation', 'range': [983, 1056], 'children': [{'type': 'FunctionDecl', 'name': 'mock_flag_variation', 'range': [983, 1056], 'children': [{'type': 'ParameterList', 'name': '', 'range': [985, 993], 'children': [{'type': 'Parameter', 'name': 'flag_key', 'range': [986, 988], 'children': []}, {'type': 'Parameter', 'name': 'return_value', 'range': [990, 992], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [994, 1056], 'children': [{'type': 'VariableDeclaration', 'name': 'original_variation', 'range': [1000, 1007], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [1001, 1007], 'children': [{'type': 'CallExpression', 'name': 'get_client', 'range': [1002, 1006], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [1008, 1039], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [1013, 1039], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [1008, 1012], 'children': [{'type': 'CallExpression', 'name': 'get_client', 'range': [1008, 1012], 'children': []}]}, {'type': 'LambdaExpression', 'name': 'lambda', 'range': [1014, 1039], 'children': [{'type': 'ParameterList', 'name': '', 'range': [1015, 1020], 'children': [{'type': 'Parameter', 'name': 'key', 'range': [1015, 1016], 'children': []}, {'type': 'Parameter', 'name': 'context', 'range': [1017, 1018], 'children': []}, {'type': 'Parameter', 'name': 'default', 'range': [1019, 1020], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [1021, 1039], 'children': [{'type': 'IfStatement', 'name': '', 'range': [1024, 1037], 'children': [{'type': 'BinaryExpression', 'name': '==', 'range': [1026, 1028], 'children': [{'type': 'Identifier', 'name': 'key', 'range': [1025, 1026], 'children': []}, {'type': 'Identifier', 'name': 'flag_key', 'range': [1027, 1028], 'children': []}]}, {'type': 'ReturnStatement', 'name': '', 'range': [1023, 1024], 'children': [{'type': 'Identifier', 'name': 'return_value', 'range': [1023, 1024], 'children': []}]}, {'type': 'ReturnStatement', 'name': '', 'range': [1030, 1037], 'children': [{'type': 'CallExpression', 'name': 'original_variation', 'range': [1030, 1037], 'children': [{'type': 'Identifier', 'name': 'key', 'range': [1032, 1033], 'children': []}, {'type': 'Identifier', 'name': 'context', 'range': [1034, 1035], 'children': []}, {'type': 'Identifier', 'name': 'default', 'range': [1036, 1037], 'children': []}]}]}]}]}]}]}]}, {'type': 'TryStatement', 'name': '', 'range': [1041, 1056], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [1043, 1045], 'children': [{'type': 'YieldStatement', 'name': '', 'range': [1044, 1045], 'children': []}]}, {'type': 'FinallyStatement', 'name': '', 'range': [1046, 1056], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [1048, 1056], 'children': [{'type': 'ExpressionStatement', 'name': '', 'range': [1049, 1055], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [1054, 1055], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [1049, 1053], 'children': [{'type': 'CallExpression', 'name': 'get_client', 'range': [1049, 1053], 'children': []}]}, {'type': 'Identifier', 'name': 'original_variation', 'range': [1055, 1056], 'children': []}]}]}]}]}]}]}]}]}
2025-01-08 09:43:51,660 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:43:57,526 - INFO - Step 4 result: {'type': 'Program', 'name': 'feature_flag', 'range': [341, 815], 'children': [{'type': 'FunctionDecl', 'name': 'decorator', 'range': [403, 815], 'children': [{'type': 'FunctionDecl', 'name': 'async_wrapper', 'range': [450, 618], 'children': [{'type': 'TryStatement', 'range': [474, 618], 'children': [{'type': 'BlockStatement', 'range': [476, 602], 'children': [{'type': 'VariableDecl', 'range': [477, 484], 'children': []}, {'type': 'IfStatement', 'range': [486, 496], 'children': [{'type': 'BlockStatement', 'range': [490, 496], 'children': [{'type': 'ThrowStatement', 'range': [491, 495], 'children': []}]}]}, {'type': 'IfStatement', 'range': [498, 522], 'children': [{'type': 'BlockStatement', 'range': [508, 522], 'children': [{'type': 'ExpressionStatement', 'range': [509, 517], 'children': []}, {'type': 'VariableDecl', 'range': [519, 521], 'children': []}]}]}, {'type': 'ElseStatement', 'range': [523, 550], 'children': [{'type': 'BlockStatement', 'range': [525, 550], 'children': [{'type': 'VariableDecl', 'range': [526, 534], 'children': []}, {'type': 'VariableDecl', 'range': [536, 549], 'children': []}]}]}, {'type': 'IfStatement', 'range': [552, 568], 'children': [{'type': 'BlockStatement', 'range': [556, 568], 'children': [{'type': 'ThrowStatement', 'range': [557, 567], 'children': []}]}]}, {'type': 'VariableDecl', 'range': [570, 580], 'children': []}, {'type': 'IfStatement', 'range': [582, 594], 'children': [{'type': 'BlockStatement', 'range': [590, 594], 'children': [{'type': 'ReturnStatement', 'range': [591, 593], 'children': []}]}]}, {'type': 'ReturnStatement', 'range': [595, 601], 'children': []}]}, {'type': 'CatchClause', 'range': [603, 618], 'children': [{'type': 'BlockStatement', 'range': [608, 618], 'children': [{'type': 'ExpressionStatement', 'range': [609, 615], 'children': []}, {'type': 'ThrowStatement', 'range': [617, 617], 'children': []}]}]}]}]}, {'type': 'FunctionDecl', 'name': 'sync_wrapper', 'range': [626, 776], 'children': [{'type': 'TryStatement', 'range': [649, 776], 'children': [{'type': 'BlockStatement', 'range': [651, 759], 'children': [{'type': 'VariableDecl', 'range': [652, 659], 'children': []}, {'type': 'IfStatement', 'range': [661, 671], 'children': [{'type': 'BlockStatement', 'range': [665, 671], 'children': [{'type': 'ThrowStatement', 'range': [666, 670], 'children': []}]}]}, {'type': 'IfStatement', 'range': [673, 697], 'children': [{'type': 'BlockStatement', 'range': [683, 697], 'children': [{'type': 'ExpressionStatement', 'range': [684, 692], 'children': []}, {'type': 'VariableDecl', 'range': [694, 696], 'children': []}]}]}, {'type': 'ElseStatement', 'range': [698, 724], 'children': [{'type': 'BlockStatement', 'range': [700, 724], 'children': [{'type': 'VariableDecl', 'range': [701, 709], 'children': []}, {'type': 'VariableDecl', 'range': [711, 723], 'children': []}]}]}, {'type': 'IfStatement', 'range': [727, 742], 'children': [{'type': 'BlockStatement', 'range': [731, 742], 'children': [{'type': 'ThrowStatement', 'range': [732, 741], 'children': []}]}]}, {'type': 'ReturnStatement', 'range': [745, 759], 'children': []}]}, {'type': 'CatchClause', 'range': [761, 776], 'children': [{'type': 'BlockStatement', 'range': [766, 776], 'children': [{'type': 'ExpressionStatement', 'range': [767, 773], 'children': []}, {'type': 'ThrowStatement', 'range': [775, 775], 'children': []}]}]}]}]}]}]}
2025-01-08 09:43:57,526 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:44:07,882 - INFO - Step 4 result: {'nodes': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 8], 'children': [{'type': 'ImportClause', 'name': 'asyncio', 'range': [1, 1], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [9, 13], 'children': [{'type': 'ImportClause', 'name': 'contextlib', 'range': [4, 4], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [14, 32], 'children': [{'type': 'ImportClause', 'name': 'wraps', 'range': [12, 12], 'children': []}, {'type': 'ImportClause', 'name': 'Any', 'range': [17, 17], 'children': []}, {'type': 'ImportClause', 'name': 'Awaitable', 'range': [19, 19], 'children': []}, {'type': 'ImportClause', 'name': 'Callable', 'range': [21, 21], 'children': []}, {'type': 'ImportClause', 'name': 'Dict', 'range': [23, 23], 'children': []}, {'type': 'ImportClause', 'name': 'Optional', 'range': [25, 25], 'children': []}, {'type': 'ImportClause', 'name': 'TypeVar', 'range': [27, 27], 'children': []}, {'type': 'ImportClause', 'name': 'Union', 'range': [29, 29], 'children': []}, {'type': 'ImportClause', 'name': 'cast', 'range': [31, 31], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [34, 36], 'children': [{'type': 'ImportClause', 'name': 'ldclient', 'range': [35, 35], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [37, 41], 'children': [{'type': 'ImportClause', 'name': 'HTTPException', 'range': [40, 40], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [42, 48], 'children': [{'type': 'ImportClause', 'name': 'Context', 'range': [45, 45], 'children': []}, {'type': 'ImportClause', 'name': 'LDClient', 'range': [47, 47], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [49, 55], 'children': [{'type': 'ImportClause', 'name': 'Config', 'range': [54, 54], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [56, 60], 'children': [{'type': 'ImportClause', 'name': 'ParamSpec', 'range': [59, 59], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [62, 67], 'children': [{'type': 'ImportClause', 'name': 'SETTINGS', 'range': [66, 66], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'logger', 'range': [69, 77], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [70, 76], 'children': [{'type': 'CallExpression', 'name': 'getLogger', 'range': [73, 76], 'children': [{'type': 'Identifier', 'name': '__name__', 'range': [75, 75], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [78, 88], 'children': [{'type': 'CallExpression', 'name': 'basicConfig', 'range': [80, 87], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [82, 86], 'children': [{'type': 'Identifier', 'name': 'level', 'range': [82, 82], 'children': []}, {'type': 'Identifier', 'name': 'DEBUG', 'range': [86, 86], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'P', 'range': [90, 96], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [91, 95], 'children': [{'type': 'CallExpression', 'name': 'ParamSpec', 'range': [92, 95], 'children': [{'type': 'StringLiteral', 'name': '"P"', 'range': [94, 94], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'T', 'range': [97, 103], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [98, 102], 'children': [{'type': 'CallExpression', 'name': 'TypeVar', 'range': [99, 102], 'children': [{'type': 'StringLiteral', 'name': '"T"', 'range': [101, 101], 'children': []}]}]}]}]}
2025-01-08 09:44:07,882 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:44:19,834 - INFO - Step 5 result: {'type': 'Program', 'name': 'mock_flag_variation', 'range': [983, 1056], 'children': [{'type': 'FunctionDecl', 'name': 'mock_flag_variation', 'range': [983, 1056], 'children': [{'type': 'ParameterList', 'name': '', 'range': [985, 993], 'children': [{'type': 'Parameter', 'name': 'flag_key', 'range': [986, 988], 'children': []}, {'type': 'Parameter', 'name': 'return_value', 'range': [990, 992], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [994, 1056], 'children': [{'type': 'VariableDeclaration', 'name': 'original_variation', 'range': [1000, 1007], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [1001, 1007], 'children': [{'type': 'CallExpression', 'name': 'get_client', 'range': [1002, 1006], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [1008, 1039], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [1013, 1039], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [1008, 1012], 'children': [{'type': 'CallExpression', 'name': 'get_client', 'range': [1008, 1012], 'children': []}]}, {'type': 'LambdaExpression', 'name': 'lambda', 'range': [1014, 1039], 'children': [{'type': 'ParameterList', 'name': '', 'range': [1015, 1020], 'children': [{'type': 'Parameter', 'name': 'key', 'range': [1015, 1016], 'children': []}, {'type': 'Parameter', 'name': 'context', 'range': [1017, 1018], 'children': []}, {'type': 'Parameter', 'name': 'default', 'range': [1019, 1020], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [1021, 1039], 'children': [{'type': 'IfStatement', 'name': '', 'range': [1024, 1037], 'children': [{'type': 'BinaryExpression', 'name': '==', 'range': [1026, 1028], 'children': [{'type': 'Identifier', 'name': 'key', 'range': [1025, 1026], 'children': []}, {'type': 'Identifier', 'name': 'flag_key', 'range': [1027, 1028], 'children': []}]}, {'type': 'ReturnStatement', 'name': '', 'range': [1023, 1024], 'children': [{'type': 'Identifier', 'name': 'return_value', 'range': [1023, 1024], 'children': []}]}, {'type': 'ReturnStatement', 'name': '', 'range': [1030, 1037], 'children': [{'type': 'CallExpression', 'name': 'original_variation', 'range': [1030, 1037], 'children': [{'type': 'Identifier', 'name': 'key', 'range': [1032, 1033], 'children': []}, {'type': 'Identifier', 'name': 'context', 'range': [1034, 1035], 'children': []}, {'type': 'Identifier', 'name': 'default', 'range': [1036, 1037], 'children': []}]}]}]}]}]}]}]}, {'type': 'TryStatement', 'name': '', 'range': [1041, 1056], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [1043, 1045], 'children': [{'type': 'YieldStatement', 'name': '', 'range': [1044, 1045], 'children': []}]}, {'type': 'FinallyStatement', 'name': '', 'range': [1046, 1056], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [1048, 1056], 'children': [{'type': 'ExpressionStatement', 'name': '', 'range': [1049, 1055], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [1054, 1055], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [1049, 1053], 'children': [{'type': 'CallExpression', 'name': 'get_client', 'range': [1049, 1053], 'children': []}]}, {'type': 'Identifier', 'name': 'original_variation', 'range': [1055, 1056], 'children': []}]}]}]}]}]}]}]}]}
2025-01-08 09:44:19,835 - INFO - Completed main AST analysis flow
2025-01-08 09:44:19,835 - INFO - Successfully processed chunk
2025-01-08 09:44:27,360 - INFO - Step 5 result: {'type': 'Program', 'name': 'feature_flag', 'range': [341, 815], 'children': [{'type': 'FunctionDecl', 'name': 'decorator', 'range': [403, 815], 'children': [{'type': 'FunctionDecl', 'name': 'async_wrapper', 'range': [450, 618], 'children': [{'type': 'TryStatement', 'range': [474, 618], 'children': [{'type': 'BlockStatement', 'range': [476, 602], 'children': [{'type': 'VariableDecl', 'range': [477, 484], 'children': []}, {'type': 'IfStatement', 'range': [486, 496], 'children': [{'type': 'BlockStatement', 'range': [490, 496], 'children': [{'type': 'ThrowStatement', 'range': [491, 495], 'children': []}]}]}, {'type': 'IfStatement', 'range': [498, 522], 'children': [{'type': 'BlockStatement', 'range': [508, 522], 'children': [{'type': 'ExpressionStatement', 'range': [509, 517], 'children': []}, {'type': 'VariableDecl', 'range': [519, 521], 'children': []}]}]}, {'type': 'ElseStatement', 'range': [523, 550], 'children': [{'type': 'BlockStatement', 'range': [525, 550], 'children': [{'type': 'VariableDecl', 'range': [526, 534], 'children': []}, {'type': 'VariableDecl', 'range': [536, 549], 'children': []}]}]}, {'type': 'IfStatement', 'range': [552, 568], 'children': [{'type': 'BlockStatement', 'range': [556, 568], 'children': [{'type': 'ThrowStatement', 'range': [557, 567], 'children': []}]}]}, {'type': 'VariableDecl', 'range': [570, 580], 'children': []}, {'type': 'IfStatement', 'range': [582, 594], 'children': [{'type': 'BlockStatement', 'range': [590, 594], 'children': [{'type': 'ReturnStatement', 'range': [591, 593], 'children': []}]}]}, {'type': 'ReturnStatement', 'range': [595, 601], 'children': []}]}, {'type': 'CatchClause', 'range': [603, 618], 'children': [{'type': 'BlockStatement', 'range': [608, 618], 'children': [{'type': 'ExpressionStatement', 'range': [609, 615], 'children': []}, {'type': 'ThrowStatement', 'range': [617, 617], 'children': []}]}]}]}]}, {'type': 'FunctionDecl', 'name': 'sync_wrapper', 'range': [626, 776], 'children': [{'type': 'TryStatement', 'range': [649, 776], 'children': [{'type': 'BlockStatement', 'range': [651, 759], 'children': [{'type': 'VariableDecl', 'range': [652, 659], 'children': []}, {'type': 'IfStatement', 'range': [661, 671], 'children': [{'type': 'BlockStatement', 'range': [665, 671], 'children': [{'type': 'ThrowStatement', 'range': [666, 670], 'children': []}]}]}, {'type': 'IfStatement', 'range': [673, 697], 'children': [{'type': 'BlockStatement', 'range': [683, 697], 'children': [{'type': 'ExpressionStatement', 'range': [684, 692], 'children': []}, {'type': 'VariableDecl', 'range': [694, 696], 'children': []}]}]}, {'type': 'ElseStatement', 'range': [698, 724], 'children': [{'type': 'BlockStatement', 'range': [700, 724], 'children': [{'type': 'VariableDecl', 'range': [701, 709], 'children': []}, {'type': 'VariableDecl', 'range': [711, 723], 'children': []}]}]}, {'type': 'IfStatement', 'range': [727, 742], 'children': [{'type': 'BlockStatement', 'range': [731, 742], 'children': [{'type': 'ThrowStatement', 'range': [732, 741], 'children': []}]}]}, {'type': 'ReturnStatement', 'range': [745, 759], 'children': []}]}, {'type': 'CatchClause', 'range': [761, 776], 'children': [{'type': 'BlockStatement', 'range': [766, 776], 'children': [{'type': 'ExpressionStatement', 'range': [767, 773], 'children': []}, {'type': 'ThrowStatement', 'range': [775, 775], 'children': []}]}]}]}]}]}]}
2025-01-08 09:44:27,360 - INFO - Completed main AST analysis flow
2025-01-08 09:44:27,361 - INFO - Successfully processed chunk
2025-01-08 09:44:45,789 - INFO - Step 5 result: {'nodes': [{'type': 'Program', 'name': 'MainProgram', 'range': [0, 103], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 8], 'children': [{'type': 'ImportClause', 'name': 'asyncio', 'range': [1, 1], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [9, 13], 'children': [{'type': 'ImportClause', 'name': 'contextlib', 'range': [4, 4], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [14, 32], 'children': [{'type': 'ImportClause', 'name': 'wraps', 'range': [12, 12], 'children': []}, {'type': 'ImportClause', 'name': 'Any', 'range': [17, 17], 'children': []}, {'type': 'ImportClause', 'name': 'Awaitable', 'range': [19, 19], 'children': []}, {'type': 'ImportClause', 'name': 'Callable', 'range': [21, 21], 'children': []}, {'type': 'ImportClause', 'name': 'Dict', 'range': [23, 23], 'children': []}, {'type': 'ImportClause', 'name': 'Optional', 'range': [25, 25], 'children': []}, {'type': 'ImportClause', 'name': 'TypeVar', 'range': [27, 27], 'children': []}, {'type': 'ImportClause', 'name': 'Union', 'range': [29, 29], 'children': []}, {'type': 'ImportClause', 'name': 'cast', 'range': [31, 31], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [34, 36], 'children': [{'type': 'ImportClause', 'name': 'ldclient', 'range': [35, 35], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [37, 41], 'children': [{'type': 'ImportClause', 'name': 'HTTPException', 'range': [40, 40], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [42, 48], 'children': [{'type': 'ImportClause', 'name': 'Context', 'range': [45, 45], 'children': []}, {'type': 'ImportClause', 'name': 'LDClient', 'range': [47, 47], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [49, 55], 'children': [{'type': 'ImportClause', 'name': 'Config', 'range': [54, 54], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [56, 60], 'children': [{'type': 'ImportClause', 'name': 'ParamSpec', 'range': [59, 59], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [62, 67], 'children': [{'type': 'ImportClause', 'name': 'SETTINGS', 'range': [66, 66], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'logger', 'range': [69, 77], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [70, 76], 'children': [{'type': 'CallExpression', 'name': 'getLogger', 'range': [73, 76], 'children': [{'type': 'Identifier', 'name': '__name__', 'range': [75, 75], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [78, 88], 'children': [{'type': 'CallExpression', 'name': 'basicConfig', 'range': [80, 87], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [82, 86], 'children': [{'type': 'Identifier', 'name': 'level', 'range': [82, 82], 'children': []}, {'type': 'Identifier', 'name': 'DEBUG', 'range': [86, 86], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'P', 'range': [90, 96], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [91, 95], 'children': [{'type': 'CallExpression', 'name': 'ParamSpec', 'range': [92, 95], 'children': [{'type': 'StringLiteral', 'name': '"P"', 'range': [94, 94], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'T', 'range': [97, 103], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [98, 102], 'children': [{'type': 'CallExpression', 'name': 'TypeVar', 'range': [99, 102], 'children': [{'type': 'StringLiteral', 'name': '"T"', 'range': [101, 101], 'children': []}]}]}]}]}]}
2025-01-08 09:44:45,789 - INFO - Completed main AST analysis flow
2025-01-08 09:44:45,790 - INFO - Successfully processed chunk
2025-01-08 09:44:45,829 - INFO - Starting code generation from AST
2025-01-08 10:14:47,346 - ERROR - Error in get_code_from_ast: Expecting value: line 30 column 1 (char 29)
2025-01-08 10:14:47,346 - INFO - Starting static code similarity comparison
2025-01-08 10:14:47,350 - INFO - Static similarity result: {'final_score': 20.48, 'length_similarity': 0.0, 'token_similarity': 0.0, 'structure_similarity': 0.0, 'function_similarity': 100, 'complexity_similarity': 4.76, 'variable_similarity': 100}
