2025-01-08 09:38:52,018 - INFO - Processing sample 66
2025-01-08 09:38:52,019 - INFO - Starting Step 0: Splitting code into top-level declarations
2025-01-08 09:38:56,636 - INFO - Successfully split code into 4 top-level declarations
2025-01-08 09:38:56,657 - INFO - Processing chunk #0 (size=334 chars, start_index=0)
2025-01-08 09:38:56,657 - INFO - Processing chunk with 334 chars starting at index 0
2025-01-08 09:38:56,657 - INFO - Starting main AST analysis flow
2025-01-08 09:38:56,658 - INFO - Tokenized code into 65 tokens
2025-01-08 09:38:56,658 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:38:56,664 - INFO - Processing chunk #1 (size=49 chars, start_index=65)
2025-01-08 09:38:56,665 - INFO - Processing chunk #2 (size=83 chars, start_index=74)
2025-01-08 09:38:56,667 - INFO - Processing chunk with 83 chars starting at index 74
2025-01-08 09:38:56,667 - INFO - Starting main AST analysis flow
2025-01-08 09:38:56,667 - INFO - Tokenized code into 16 tokens
2025-01-08 09:38:56,667 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:38:56,667 - INFO - Processing chunk #3 (size=2712 chars, start_index=90)
2025-01-08 09:38:56,672 - INFO - Processing chunk with 2712 chars starting at index 90
2025-01-08 09:38:56,672 - INFO - Starting main AST analysis flow
2025-01-08 09:38:56,673 - INFO - Tokenized code into 446 tokens
2025-01-08 09:38:56,673 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:38:56,667 - INFO - Processing chunk with 49 chars starting at index 65
2025-01-08 09:38:56,679 - INFO - Starting main AST analysis flow
2025-01-08 09:38:56,679 - INFO - Tokenized code into 9 tokens
2025-01-08 09:38:56,679 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:39:10,195 - INFO - Step 1 result: {'type': 'Program', 'name': 'get_service_name', 'range': [65, 73], 'children': []}
2025-01-08 09:39:10,195 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:39:10,380 - INFO - Step 1 result: {'type': 'Program', 'name': 'set_service_name', 'range': [74, 89], 'children': []}
2025-01-08 09:39:10,380 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:39:18,798 - INFO - Step 1 result: {'type': 'Program', 'name': 'AppProcess', 'range': [90, 535], 'children': [{'type': 'ClassDeclaration', 'name': 'AppProcess', 'range': [90, 535], 'children': [{'type': 'MethodDeclaration', 'name': 'run', 'range': [144, 156], 'children': []}, {'type': 'MethodDeclaration', 'name': 'service_name', 'range': [164, 178], 'children': []}, {'type': 'MethodDeclaration', 'name': 'cleanup', 'range': [180, 192], 'children': []}, {'type': 'MethodDeclaration', 'name': 'health_check', 'range': [194, 206], 'children': []}, {'type': 'MethodDeclaration', 'name': 'execute_run_command', 'range': [208, 304], 'children': []}, {'type': 'MethodDeclaration', 'name': '_self_terminate', 'range': [305, 330], 'children': []}, {'type': 'MethodDeclaration', 'name': '__enter__', 'range': [343, 361], 'children': []}, {'type': 'MethodDeclaration', 'name': '__exit__', 'range': [363, 383], 'children': []}, {'type': 'MethodDeclaration', 'name': 'start', 'range': [384, 490], 'children': []}, {'type': 'MethodDeclaration', 'name': 'stop', 'range': [492, 535], 'children': []}]}]}
2025-01-08 09:39:18,798 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:39:19,712 - INFO - Step 2 result: {'type': 'Program', 'name': 'set_service_name', 'range': [74, 89], 'children': [{'type': 'FunctionDeclaration', 'name': 'set_service_name', 'range': [74, 89], 'children': [{'type': 'Parameter', 'name': 'name', 'range': [77, 79], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [79, 79], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [82, 89], 'children': [{'type': 'GlobalStatement', 'name': '_SERVICE_NAME', 'range': [83, 84], 'children': []}, {'type': 'AssignmentExpression', 'name': '=', 'range': [86, 88], 'children': [{'type': 'Identifier', 'name': '_SERVICE_NAME', 'range': [86, 86], 'children': []}, {'type': 'Identifier', 'name': 'name', 'range': [88, 88], 'children': []}]}]}]}]}
2025-01-08 09:39:19,712 - INFO - Starting Step 3: AST simplification
2025-01-08 09:39:19,735 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [0, 64], 'children': [{'type': 'ImportDeclaration', 'name': 'logging', 'range': [0, 1], 'children': []}, {'type': 'ImportDeclaration', 'name': 'os', 'range': [3, 4], 'children': []}, {'type': 'ImportDeclaration', 'name': 'signal', 'range': [6, 7], 'children': []}, {'type': 'ImportDeclaration', 'name': 'sys', 'range': [9, 10], 'children': []}, {'type': 'ImportDeclaration', 'name': 'ABC', 'range': [12, 15], 'children': []}, {'type': 'ImportDeclaration', 'name': 'abstractmethod', 'range': [12, 17], 'children': []}, {'type': 'ImportDeclaration', 'name': 'Process', 'range': [19, 22], 'children': []}, {'type': 'ImportDeclaration', 'name': 'set_start_method', 'range': [19, 24], 'children': []}, {'type': 'ImportDeclaration', 'name': 'Optional', 'range': [26, 29], 'children': []}, {'type': 'ImportDeclaration', 'name': 'configure_logging', 'range': [32, 39], 'children': []}, {'type': 'ImportDeclaration', 'name': 'sentry_init', 'range': [41, 48], 'children': []}, {'type': 'VariableDeclaration', 'name': 'logger', 'range': [51, 58], 'children': []}, {'type': 'VariableDeclaration', 'name': '_SERVICE_NAME', 'range': [60, 62], 'children': []}]}
2025-01-08 09:39:19,735 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:39:21,005 - INFO - Step 2 result: {'type': 'Program', 'name': 'get_service_name', 'range': [65, 73], 'children': [{'type': 'FunctionDeclaration', 'name': 'get_service_name', 'range': [65, 73], 'children': [{'type': 'FunctionSignature', 'name': 'get_service_name', 'range': [65, 69], 'children': [{'type': 'Keyword', 'name': 'def', 'range': [65, 65], 'children': []}, {'type': 'FunctionName', 'name': 'get_service_name', 'range': [66, 66], 'children': []}, {'type': 'ParameterList', 'name': '', 'range': [67, 68], 'children': []}, {'type': 'ReturnTypeIndicator', 'name': ':', 'range': [69, 69], 'children': []}]}, {'type': 'FunctionBody', 'name': '', 'range': [70, 73], 'children': [{'type': 'ReturnStatement', 'name': '', 'range': [71, 72], 'children': [{'type': 'Keyword', 'name': 'return', 'range': [71, 71], 'children': []}, {'type': 'Identifier', 'name': '_SERVICE_NAME', 'range': [72, 72], 'children': []}]}]}]}]}
2025-01-08 09:39:21,005 - INFO - Starting Step 3: AST simplification
2025-01-08 09:39:27,715 - INFO - Step 3 result: {'type': 'Program', 'name': 'set_service_name', 'range': [74, 89], 'children': [{'type': 'FunctionDeclaration', 'name': 'set_service_name', 'range': [74, 89], 'children': [{'type': 'Parameter', 'name': 'name', 'range': [77, 79], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [79, 79], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [82, 89], 'children': [{'type': 'GlobalStatement', 'name': '_SERVICE_NAME', 'range': [83, 84], 'children': []}, {'type': 'AssignmentExpression', 'name': '=', 'range': [86, 88], 'children': [{'type': 'Identifier', 'name': '_SERVICE_NAME', 'range': [86, 86], 'children': []}, {'type': 'Identifier', 'name': 'name', 'range': [88, 88], 'children': []}]}]}]}]}
2025-01-08 09:39:27,715 - INFO - Starting Step 4: AST normalization
2025-01-08 09:39:30,546 - INFO - Step 3 result: {'type': 'Program', 'name': 'get_service_name', 'range': [65, 73], 'children': [{'type': 'FunctionDeclaration', 'name': 'get_service_name', 'range': [65, 73], 'children': [{'type': 'FunctionSignature', 'name': 'get_service_name', 'range': [65, 69], 'children': [{'type': 'Keyword', 'name': 'def', 'range': [65, 65], 'children': []}, {'type': 'FunctionName', 'name': 'get_service_name', 'range': [66, 66], 'children': []}, {'type': 'ReturnTypeIndicator', 'name': ':', 'range': [69, 69], 'children': []}]}, {'type': 'FunctionBody', 'name': '', 'range': [70, 73], 'children': [{'type': 'ReturnStatement', 'name': '', 'range': [71, 72], 'children': [{'type': 'Keyword', 'name': 'return', 'range': [71, 71], 'children': []}, {'type': 'Identifier', 'name': '_SERVICE_NAME', 'range': [72, 72], 'children': []}]}]}]}]}
2025-01-08 09:39:30,546 - INFO - Starting Step 4: AST normalization
2025-01-08 09:39:36,378 - INFO - Step 4 result: {'type': 'Program', 'name': 'set_service_name', 'range': [74, 89], 'children': [{'type': 'FunctionDecl', 'name': 'set_service_name', 'range': [74, 89], 'children': [{'type': 'Parameter', 'name': 'name', 'range': [77, 79], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [79, 79], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [82, 89], 'children': [{'type': 'GlobalStatement', 'name': '_SERVICE_NAME', 'range': [83, 84], 'children': []}, {'type': 'AssignmentExpression', 'name': '=', 'range': [86, 88], 'children': [{'type': 'Identifier', 'name': '_SERVICE_NAME', 'range': [86, 86], 'children': []}, {'type': 'Identifier', 'name': 'name', 'range': [88, 88], 'children': []}]}]}]}]}
2025-01-08 09:39:36,378 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:39:39,626 - INFO - Step 4 result: {'type': 'Program', 'name': 'get_service_name', 'range': [65, 73], 'children': [{'type': 'FunctionDecl', 'name': 'get_service_name', 'range': [65, 73], 'children': [{'type': 'FunctionSignature', 'name': 'get_service_name', 'range': [65, 69], 'children': [{'type': 'Keyword', 'name': 'def', 'range': [65, 65], 'children': []}, {'type': 'FunctionName', 'name': 'get_service_name', 'range': [66, 66], 'children': []}, {'type': 'ReturnTypeIndicator', 'name': ':', 'range': [69, 69], 'children': []}]}, {'type': 'FunctionBody', 'name': '', 'range': [70, 73], 'children': [{'type': 'ReturnStatement', 'name': '', 'range': [71, 72], 'children': [{'type': 'Keyword', 'name': 'return', 'range': [71, 71], 'children': []}, {'type': 'Identifier', 'name': '_SERVICE_NAME', 'range': [72, 72], 'children': []}]}]}]}]}
2025-01-08 09:39:39,626 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:39:44,552 - INFO - Step 5 result: {'type': 'Program', 'name': 'set_service_name', 'range': [74, 89], 'children': [{'type': 'FunctionDecl', 'name': 'set_service_name', 'range': [74, 89], 'children': [{'type': 'Parameter', 'name': 'name', 'range': [77, 79], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [79, 79], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [82, 89], 'children': [{'type': 'GlobalStatement', 'name': '_SERVICE_NAME', 'range': [83, 84], 'children': []}, {'type': 'AssignmentExpression', 'name': '=', 'range': [86, 88], 'children': [{'type': 'Identifier', 'name': '_SERVICE_NAME', 'range': [86, 86], 'children': []}, {'type': 'Identifier', 'name': 'name', 'range': [88, 88], 'children': []}]}]}]}]}
2025-01-08 09:39:44,553 - INFO - Completed main AST analysis flow
2025-01-08 09:39:44,553 - INFO - Successfully processed chunk
2025-01-08 09:39:48,527 - INFO - Step 5 result: {'type': 'Program', 'name': 'get_service_name', 'range': [65, 73], 'children': [{'type': 'FunctionDecl', 'name': 'get_service_name', 'range': [65, 73], 'children': [{'type': 'FunctionSignature', 'name': 'get_service_name', 'range': [65, 69], 'children': [{'type': 'Keyword', 'name': 'def', 'range': [65, 65], 'children': []}, {'type': 'FunctionName', 'name': 'get_service_name', 'range': [66, 66], 'children': []}, {'type': 'ReturnTypeIndicator', 'name': ':', 'range': [69, 69], 'children': []}]}, {'type': 'FunctionBody', 'name': '', 'range': [70, 73], 'children': [{'type': 'ReturnStatement', 'name': '', 'range': [71, 72], 'children': [{'type': 'Keyword', 'name': 'return', 'range': [71, 71], 'children': []}, {'type': 'Identifier', 'name': '_SERVICE_NAME', 'range': [72, 72], 'children': []}]}]}]}]}
2025-01-08 09:39:48,527 - INFO - Completed main AST analysis flow
2025-01-08 09:39:48,527 - INFO - Successfully processed chunk
2025-01-08 09:39:51,275 - INFO - Step 2 result: {'nodes': [{'type': 'ImportDeclaration', 'name': 'logging', 'range': [0, 1], 'children': [{'type': 'ImportPath', 'name': 'logging', 'range': [0, 1], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'os', 'range': [3, 4], 'children': [{'type': 'ImportPath', 'name': 'os', 'range': [3, 4], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'signal', 'range': [6, 7], 'children': [{'type': 'ImportPath', 'name': 'signal', 'range': [6, 7], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'sys', 'range': [9, 10], 'children': [{'type': 'ImportPath', 'name': 'sys', 'range': [9, 10], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'ABC', 'range': [12, 15], 'children': [{'type': 'ImportPath', 'name': 'abc', 'range': [12, 13], 'children': []}, {'type': 'ImportedItem', 'name': 'ABC', 'range': [14, 15], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'abstractmethod', 'range': [12, 17], 'children': [{'type': 'ImportPath', 'name': 'abc', 'range': [12, 13], 'children': []}, {'type': 'ImportedItem', 'name': 'abstractmethod', 'range': [16, 17], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'Process', 'range': [19, 22], 'children': [{'type': 'ImportPath', 'name': 'multiprocessing', 'range': [19, 20], 'children': []}, {'type': 'ImportedItem', 'name': 'Process', 'range': [21, 22], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'set_start_method', 'range': [19, 24], 'children': [{'type': 'ImportPath', 'name': 'multiprocessing', 'range': [19, 20], 'children': []}, {'type': 'ImportedItem', 'name': 'set_start_method', 'range': [23, 24], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'Optional', 'range': [26, 29], 'children': [{'type': 'ImportPath', 'name': 'typing', 'range': [26, 27], 'children': []}, {'type': 'ImportedItem', 'name': 'Optional', 'range': [28, 29], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'configure_logging', 'range': [32, 39], 'children': [{'type': 'ImportPath', 'name': 'backend.util.logging', 'range': [32, 37], 'children': []}, {'type': 'ImportedItem', 'name': 'configure_logging', 'range': [38, 39], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'sentry_init', 'range': [41, 48], 'children': [{'type': 'ImportPath', 'name': 'backend.util.metrics', 'range': [41, 46], 'children': []}, {'type': 'ImportedItem', 'name': 'sentry_init', 'range': [47, 48], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'logger', 'range': [51, 58], 'children': [{'type': 'Assignment', 'name': '=', 'range': [52, 53], 'children': [{'type': 'CallExpression', 'name': 'getLogger', 'range': [53, 58], 'children': [{'type': 'Identifier', 'name': 'logging', 'range': [53, 54], 'children': []}, {'type': 'Arguments', 'name': '(', 'range': [55, 58], 'children': [{'type': 'StringLiteral', 'name': '__name__', 'range': [56, 57], 'children': []}]}]}]}]}, {'type': 'VariableDeclaration', 'name': '_SERVICE_NAME', 'range': [60, 62], 'children': [{'type': 'Assignment', 'name': '=', 'range': [61, 62], 'children': [{'type': 'StringLiteral', 'name': '"MainProcess"', 'range': [62, 63], 'children': []}]}]}]}
2025-01-08 09:39:51,275 - INFO - Starting Step 3: AST simplification
2025-01-08 09:40:18,790 - INFO - Step 2 result: {'type': 'Program', 'name': 'AppProcess', 'range': [90, 535], 'children': [{'type': 'ClassDeclaration', 'name': 'AppProcess', 'range': [90, 535], 'children': [{'type': 'MethodDeclaration', 'name': 'run', 'range': [144, 156], 'children': [{'type': 'FunctionSignature', 'name': 'run', 'range': [144, 149], 'children': []}, {'type': 'Block', 'name': 'run_block', 'range': [150, 156], 'children': [{'type': 'PassStatement', 'name': 'pass', 'range': [155, 156], 'children': []}]}]}, {'type': 'MethodDeclaration', 'name': 'service_name', 'range': [164, 178], 'children': [{'type': 'FunctionSignature', 'name': 'service_name', 'range': [164, 172], 'children': []}, {'type': 'Block', 'name': 'service_name_block', 'range': [173, 178], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [174, 178], 'children': [{'type': 'Expression', 'name': 'cls.__name__', 'range': [175, 177], 'children': []}]}]}]}, {'type': 'MethodDeclaration', 'name': 'cleanup', 'range': [180, 192], 'children': [{'type': 'FunctionSignature', 'name': 'cleanup', 'range': [180, 185], 'children': []}, {'type': 'Block', 'name': 'cleanup_block', 'range': [186, 192], 'children': [{'type': 'PassStatement', 'name': 'pass', 'range': [191, 192], 'children': []}]}]}, {'type': 'MethodDeclaration', 'name': 'health_check', 'range': [194, 206], 'children': [{'type': 'FunctionSignature', 'name': 'health_check', 'range': [194, 199], 'children': []}, {'type': 'Block', 'name': 'health_check_block', 'range': [200, 206], 'children': [{'type': 'PassStatement', 'name': 'pass', 'range': [205, 206], 'children': []}]}]}, {'type': 'MethodDeclaration', 'name': 'execute_run_command', 'range': [208, 304], 'children': [{'type': 'FunctionSignature', 'name': 'execute_run_command', 'range': [208, 215], 'children': []}, {'type': 'Block', 'name': 'execute_run_command_block', 'range': [216, 304], 'children': [{'type': 'ExpressionStatement', 'name': 'signal.signal', 'range': [217, 229], 'children': []}, {'type': 'TryStatement', 'name': 'try', 'range': [231, 304], 'children': [{'type': 'Block', 'name': 'try_block', 'range': [233, 285], 'children': [{'type': 'IfStatement', 'name': 'if', 'range': [234, 263], 'children': [{'type': 'Expression', 'name': 'silent', 'range': [235, 236], 'children': []}, {'type': 'Block', 'name': 'if_block', 'range': [237, 263], 'children': [{'type': 'ExpressionStatement', 'name': 'sys.stdout', 'range': [238, 250], 'children': []}, {'type': 'ExpressionStatement', 'name': 'sys.stderr', 'range': [251, 263], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'set_service_name', 'range': [265, 271], 'children': []}, {'type': 'ExpressionStatement', 'name': 'logger.info', 'range': [272, 279], 'children': []}, {'type': 'ExpressionStatement', 'name': 'self.run', 'range': [280, 285], 'children': []}]}, {'type': 'ExceptClause', 'name': 'except', 'range': [286, 304], 'children': [{'type': 'Block', 'name': 'except_block', 'range': [295, 304], 'children': [{'type': 'ExpressionStatement', 'name': 'logger.warning', 'range': [296, 303], 'children': []}]}]}]}]}]}, {'type': 'MethodDeclaration', 'name': '_self_terminate', 'range': [305, 330], 'children': [{'type': 'FunctionSignature', 'name': '_self_terminate', 'range': [305, 316], 'children': []}, {'type': 'Block', 'name': '_self_terminate_block', 'range': [317, 330], 'children': [{'type': 'ExpressionStatement', 'name': 'self.cleanup', 'range': [318, 323], 'children': []}, {'type': 'ExpressionStatement', 'name': 'sys.exit', 'range': [324, 330], 'children': []}]}]}, {'type': 'MethodDeclaration', 'name': '__enter__', 'range': [343, 361], 'children': [{'type': 'FunctionSignature', 'name': '__enter__', 'range': [343, 348], 'children': []}, {'type': 'Block', 'name': '__enter___block', 'range': [349, 361], 'children': [{'type': 'ExpressionStatement', 'name': 'self.start', 'range': [350, 358], 'children': []}, {'type': 'ReturnStatement', 'name': 'return', 'range': [359, 361], 'children': [{'type': 'Expression', 'name': 'self', 'range': [360, 361], 'children': []}]}]}]}, {'type': 'MethodDeclaration', 'name': '__exit__', 'range': [363, 383], 'children': [{'type': 'FunctionSignature', 'name': '__exit__', 'range': [363, 375], 'children': []}, {'type': 'Block', 'name': '__exit___block', 'range': [376, 383], 'children': [{'type': 'ExpressionStatement', 'name': 'self.stop', 'range': [377, 382], 'children': []}]}]}, {'type': 'MethodDeclaration', 'name': 'start', 'range': [384, 490], 'children': [{'type': 'FunctionSignature', 'name': 'start', 'range': [384, 408], 'children': []}, {'type': 'Block', 'name': 'start_block', 'range': [409, 490], 'children': [{'type': 'IfStatement', 'name': 'if', 'range': [414, 428], 'children': [{'type': 'Expression', 'name': 'not background', 'range': [415, 417], 'children': []}, {'type': 'Block', 'name': 'if_block', 'range': [418, 428], 'children': [{'type': 'ExpressionStatement', 'name': 'self.execute_run_command', 'range': [419, 425], 'children': []}, {'type': 'ReturnStatement', 'name': 'return', 'range': [426, 428], 'children': [{'type': 'Expression', 'name': '0', 'range': [427, 428], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': 'self.process', 'range': [430, 467], 'children': []}, {'type': 'ExpressionStatement', 'name': 'self.process.start', 'range': [468, 475], 'children': []}, {'type': 'ExpressionStatement', 'name': 'self.health_check', 'range': [476, 481], 'children': []}, {'type': 'ReturnStatement', 'name': 'return', 'range': [482, 490], 'children': [{'type': 'Expression', 'name': 'self.process.pid or 0', 'range': [483, 489], 'children': []}]}]}]}, {'type': 'MethodDeclaration', 'name': 'stop', 'range': [492, 535], 'children': [{'type': 'FunctionSignature', 'name': 'stop', 'range': [492, 497], 'children': []}, {'type': 'Block', 'name': 'stop_block', 'range': [498, 535], 'children': [{'type': 'IfStatement', 'name': 'if', 'range': [503, 511], 'children': [{'type': 'Expression', 'name': 'not self.process', 'range': [504, 508], 'children': []}, {'type': 'Block', 'name': 'if_block', 'range': [509, 511], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [510, 511], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'self.process.terminate', 'range': [513, 520], 'children': []}, {'type': 'ExpressionStatement', 'name': 'self.process.join', 'range': [521, 528], 'children': []}, {'type': 'ExpressionStatement', 'name': 'self.process', 'range': [529, 534], 'children': []}]}]}]}]}
2025-01-08 09:40:18,790 - INFO - Starting Step 3: AST simplification
2025-01-08 09:40:21,926 - INFO - Step 3 result: {'nodes': [{'type': 'ImportDeclaration', 'name': 'logging', 'range': [0, 1], 'children': [{'type': 'ImportPath', 'name': 'logging', 'range': [0, 1], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'os', 'range': [3, 4], 'children': [{'type': 'ImportPath', 'name': 'os', 'range': [3, 4], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'signal', 'range': [6, 7], 'children': [{'type': 'ImportPath', 'name': 'signal', 'range': [6, 7], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'sys', 'range': [9, 10], 'children': [{'type': 'ImportPath', 'name': 'sys', 'range': [9, 10], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'ABC', 'range': [12, 15], 'children': [{'type': 'ImportPath', 'name': 'abc', 'range': [12, 13], 'children': []}, {'type': 'ImportedItem', 'name': 'ABC', 'range': [14, 15], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'abstractmethod', 'range': [12, 17], 'children': [{'type': 'ImportPath', 'name': 'abc', 'range': [12, 13], 'children': []}, {'type': 'ImportedItem', 'name': 'abstractmethod', 'range': [16, 17], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'Process', 'range': [19, 22], 'children': [{'type': 'ImportPath', 'name': 'multiprocessing', 'range': [19, 20], 'children': []}, {'type': 'ImportedItem', 'name': 'Process', 'range': [21, 22], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'set_start_method', 'range': [19, 24], 'children': [{'type': 'ImportPath', 'name': 'multiprocessing', 'range': [19, 20], 'children': []}, {'type': 'ImportedItem', 'name': 'set_start_method', 'range': [23, 24], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'Optional', 'range': [26, 29], 'children': [{'type': 'ImportPath', 'name': 'typing', 'range': [26, 27], 'children': []}, {'type': 'ImportedItem', 'name': 'Optional', 'range': [28, 29], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'configure_logging', 'range': [32, 39], 'children': [{'type': 'ImportPath', 'name': 'backend.util.logging', 'range': [32, 37], 'children': []}, {'type': 'ImportedItem', 'name': 'configure_logging', 'range': [38, 39], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'sentry_init', 'range': [41, 48], 'children': [{'type': 'ImportPath', 'name': 'backend.util.metrics', 'range': [41, 46], 'children': []}, {'type': 'ImportedItem', 'name': 'sentry_init', 'range': [47, 48], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'logger', 'range': [51, 58], 'children': [{'type': 'Assignment', 'name': '=', 'range': [52, 53], 'children': [{'type': 'CallExpression', 'name': 'getLogger', 'range': [53, 58], 'children': [{'type': 'Identifier', 'name': 'logging', 'range': [53, 54], 'children': []}, {'type': 'Arguments', 'name': '(', 'range': [55, 58], 'children': [{'type': 'StringLiteral', 'name': '__name__', 'range': [56, 57], 'children': []}]}]}]}]}, {'type': 'VariableDeclaration', 'name': '_SERVICE_NAME', 'range': [60, 62], 'children': [{'type': 'Assignment', 'name': '=', 'range': [61, 62], 'children': [{'type': 'StringLiteral', 'name': '"MainProcess"', 'range': [62, 63], 'children': []}]}]}]}
2025-01-08 09:40:21,928 - INFO - Starting Step 4: AST normalization
2025-01-08 09:40:52,899 - INFO - Step 4 result: {'nodes': [{'type': 'ImportDeclaration', 'name': 'logging', 'range': [0, 1], 'children': [{'type': 'ImportPath', 'name': 'logging', 'range': [0, 1], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'os', 'range': [3, 4], 'children': [{'type': 'ImportPath', 'name': 'os', 'range': [3, 4], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'signal', 'range': [6, 7], 'children': [{'type': 'ImportPath', 'name': 'signal', 'range': [6, 7], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'sys', 'range': [9, 10], 'children': [{'type': 'ImportPath', 'name': 'sys', 'range': [9, 10], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'ABC', 'range': [12, 15], 'children': [{'type': 'ImportPath', 'name': 'abc', 'range': [12, 13], 'children': []}, {'type': 'ImportedItem', 'name': 'ABC', 'range': [14, 15], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'abstractmethod', 'range': [12, 17], 'children': [{'type': 'ImportPath', 'name': 'abc', 'range': [12, 13], 'children': []}, {'type': 'ImportedItem', 'name': 'abstractmethod', 'range': [16, 17], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'Process', 'range': [19, 22], 'children': [{'type': 'ImportPath', 'name': 'multiprocessing', 'range': [19, 20], 'children': []}, {'type': 'ImportedItem', 'name': 'Process', 'range': [21, 22], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'set_start_method', 'range': [19, 24], 'children': [{'type': 'ImportPath', 'name': 'multiprocessing', 'range': [19, 20], 'children': []}, {'type': 'ImportedItem', 'name': 'set_start_method', 'range': [23, 24], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'Optional', 'range': [26, 29], 'children': [{'type': 'ImportPath', 'name': 'typing', 'range': [26, 27], 'children': []}, {'type': 'ImportedItem', 'name': 'Optional', 'range': [28, 29], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'configure_logging', 'range': [32, 39], 'children': [{'type': 'ImportPath', 'name': 'backend.util.logging', 'range': [32, 37], 'children': []}, {'type': 'ImportedItem', 'name': 'configure_logging', 'range': [38, 39], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'sentry_init', 'range': [41, 48], 'children': [{'type': 'ImportPath', 'name': 'backend.util.metrics', 'range': [41, 46], 'children': []}, {'type': 'ImportedItem', 'name': 'sentry_init', 'range': [47, 48], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'logger', 'range': [51, 58], 'children': [{'type': 'Assignment', 'name': '=', 'range': [52, 53], 'children': [{'type': 'CallExpression', 'name': 'getLogger', 'range': [53, 58], 'children': [{'type': 'Identifier', 'name': 'logging', 'range': [53, 54], 'children': []}, {'type': 'Arguments', 'name': '(', 'range': [55, 58], 'children': [{'type': 'StringLiteral', 'name': '__name__', 'range': [56, 57], 'children': []}]}]}]}]}, {'type': 'VariableDeclaration', 'name': '_SERVICE_NAME', 'range': [60, 62], 'children': [{'type': 'Assignment', 'name': '=', 'range': [61, 62], 'children': [{'type': 'StringLiteral', 'name': '"MainProcess"', 'range': [62, 63], 'children': []}]}]}]}
2025-01-08 09:40:52,899 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:41:18,756 - INFO - Step 3 result: {'type': 'Program', 'name': 'AppProcess', 'range': [90, 535], 'children': [{'type': 'ClassDeclaration', 'name': 'AppProcess', 'range': [90, 535], 'children': [{'type': 'MethodDeclaration', 'name': 'run', 'range': [144, 156], 'children': [{'type': 'FunctionSignature', 'name': 'run', 'range': [144, 149], 'children': []}, {'type': 'Block', 'name': 'run_block', 'range': [150, 156], 'children': [{'type': 'PassStatement', 'name': 'pass', 'range': [155, 156], 'children': []}]}]}, {'type': 'MethodDeclaration', 'name': 'service_name', 'range': [164, 178], 'children': [{'type': 'FunctionSignature', 'name': 'service_name', 'range': [164, 172], 'children': []}, {'type': 'Block', 'name': 'service_name_block', 'range': [173, 178], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [174, 178], 'children': [{'type': 'Expression', 'name': 'cls.__name__', 'range': [175, 177], 'children': []}]}]}]}, {'type': 'MethodDeclaration', 'name': 'cleanup', 'range': [180, 192], 'children': [{'type': 'FunctionSignature', 'name': 'cleanup', 'range': [180, 185], 'children': []}, {'type': 'Block', 'name': 'cleanup_block', 'range': [186, 192], 'children': [{'type': 'PassStatement', 'name': 'pass', 'range': [191, 192], 'children': []}]}]}, {'type': 'MethodDeclaration', 'name': 'health_check', 'range': [194, 206], 'children': [{'type': 'FunctionSignature', 'name': 'health_check', 'range': [194, 199], 'children': []}, {'type': 'Block', 'name': 'health_check_block', 'range': [200, 206], 'children': [{'type': 'PassStatement', 'name': 'pass', 'range': [205, 206], 'children': []}]}]}, {'type': 'MethodDeclaration', 'name': 'execute_run_command', 'range': [208, 304], 'children': [{'type': 'FunctionSignature', 'name': 'execute_run_command', 'range': [208, 215], 'children': []}, {'type': 'Block', 'name': 'execute_run_command_block', 'range': [216, 304], 'children': [{'type': 'ExpressionStatement', 'name': 'signal.signal', 'range': [217, 229], 'children': []}, {'type': 'TryStatement', 'name': 'try', 'range': [231, 304], 'children': [{'type': 'Block', 'name': 'try_block', 'range': [233, 285], 'children': [{'type': 'IfStatement', 'name': 'if', 'range': [234, 263], 'children': [{'type': 'Expression', 'name': 'silent', 'range': [235, 236], 'children': []}, {'type': 'Block', 'name': 'if_block', 'range': [237, 263], 'children': [{'type': 'ExpressionStatement', 'name': 'sys.stdout', 'range': [238, 250], 'children': []}, {'type': 'ExpressionStatement', 'name': 'sys.stderr', 'range': [251, 263], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'set_service_name', 'range': [265, 271], 'children': []}, {'type': 'ExpressionStatement', 'name': 'logger.info', 'range': [272, 279], 'children': []}, {'type': 'ExpressionStatement', 'name': 'self.run', 'range': [280, 285], 'children': []}]}, {'type': 'ExceptClause', 'name': 'except', 'range': [286, 304], 'children': [{'type': 'Block', 'name': 'except_block', 'range': [295, 304], 'children': [{'type': 'ExpressionStatement', 'name': 'logger.warning', 'range': [296, 303], 'children': []}]}]}]}]}]}, {'type': 'MethodDeclaration', 'name': '_self_terminate', 'range': [305, 330], 'children': [{'type': 'FunctionSignature', 'name': '_self_terminate', 'range': [305, 316], 'children': []}, {'type': 'Block', 'name': '_self_terminate_block', 'range': [317, 330], 'children': [{'type': 'ExpressionStatement', 'name': 'self.cleanup', 'range': [318, 323], 'children': []}, {'type': 'ExpressionStatement', 'name': 'sys.exit', 'range': [324, 330], 'children': []}]}]}, {'type': 'MethodDeclaration', 'name': '__enter__', 'range': [343, 361], 'children': [{'type': 'FunctionSignature', 'name': '__enter__', 'range': [343, 348], 'children': []}, {'type': 'Block', 'name': '__enter___block', 'range': [349, 361], 'children': [{'type': 'ExpressionStatement', 'name': 'self.start', 'range': [350, 358], 'children': []}, {'type': 'ReturnStatement', 'name': 'return', 'range': [359, 361], 'children': [{'type': 'Expression', 'name': 'self', 'range': [360, 361], 'children': []}]}]}]}, {'type': 'MethodDeclaration', 'name': '__exit__', 'range': [363, 383], 'children': [{'type': 'FunctionSignature', 'name': '__exit__', 'range': [363, 375], 'children': []}, {'type': 'Block', 'name': '__exit___block', 'range': [376, 383], 'children': [{'type': 'ExpressionStatement', 'name': 'self.stop', 'range': [377, 382], 'children': []}]}]}, {'type': 'MethodDeclaration', 'name': 'start', 'range': [384, 490], 'children': [{'type': 'FunctionSignature', 'name': 'start', 'range': [384, 408], 'children': []}, {'type': 'Block', 'name': 'start_block', 'range': [409, 490], 'children': [{'type': 'IfStatement', 'name': 'if', 'range': [414, 428], 'children': [{'type': 'Expression', 'name': 'not background', 'range': [415, 417], 'children': []}, {'type': 'Block', 'name': 'if_block', 'range': [418, 428], 'children': [{'type': 'ExpressionStatement', 'name': 'self.execute_run_command', 'range': [419, 425], 'children': []}, {'type': 'ReturnStatement', 'name': 'return', 'range': [426, 428], 'children': [{'type': 'Expression', 'name': '0', 'range': [427, 428], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': 'self.process', 'range': [430, 467], 'children': []}, {'type': 'ExpressionStatement', 'name': 'self.process.start', 'range': [468, 475], 'children': []}, {'type': 'ExpressionStatement', 'name': 'self.health_check', 'range': [476, 481], 'children': []}, {'type': 'ReturnStatement', 'name': 'return', 'range': [482, 490], 'children': [{'type': 'Expression', 'name': 'self.process.pid or 0', 'range': [483, 489], 'children': []}]}]}]}, {'type': 'MethodDeclaration', 'name': 'stop', 'range': [492, 535], 'children': [{'type': 'FunctionSignature', 'name': 'stop', 'range': [492, 497], 'children': []}, {'type': 'Block', 'name': 'stop_block', 'range': [498, 535], 'children': [{'type': 'IfStatement', 'name': 'if', 'range': [503, 511], 'children': [{'type': 'Expression', 'name': 'not self.process', 'range': [504, 508], 'children': []}, {'type': 'Block', 'name': 'if_block', 'range': [509, 511], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [510, 511], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'self.process.terminate', 'range': [513, 520], 'children': []}, {'type': 'ExpressionStatement', 'name': 'self.process.join', 'range': [521, 528], 'children': []}, {'type': 'ExpressionStatement', 'name': 'self.process', 'range': [529, 534], 'children': []}]}]}]}]}
2025-01-08 09:41:18,756 - INFO - Starting Step 4: AST normalization
2025-01-08 09:41:23,202 - INFO - Step 5 result: {'type': 'Program', 'name': 'MainProgram', 'range': [0, 63], 'children': [{'type': 'ImportDeclaration', 'name': 'logging', 'range': [0, 1], 'children': [{'type': 'ImportPath', 'name': 'logging', 'range': [0, 1], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'os', 'range': [3, 4], 'children': [{'type': 'ImportPath', 'name': 'os', 'range': [3, 4], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'signal', 'range': [6, 7], 'children': [{'type': 'ImportPath', 'name': 'signal', 'range': [6, 7], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'sys', 'range': [9, 10], 'children': [{'type': 'ImportPath', 'name': 'sys', 'range': [9, 10], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'ABC', 'range': [12, 15], 'children': [{'type': 'ImportPath', 'name': 'abc', 'range': [12, 13], 'children': []}, {'type': 'ImportedItem', 'name': 'ABC', 'range': [14, 15], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'abstractmethod', 'range': [12, 17], 'children': [{'type': 'ImportPath', 'name': 'abc', 'range': [12, 13], 'children': []}, {'type': 'ImportedItem', 'name': 'abstractmethod', 'range': [16, 17], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'Process', 'range': [19, 22], 'children': [{'type': 'ImportPath', 'name': 'multiprocessing', 'range': [19, 20], 'children': []}, {'type': 'ImportedItem', 'name': 'Process', 'range': [21, 22], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'set_start_method', 'range': [19, 24], 'children': [{'type': 'ImportPath', 'name': 'multiprocessing', 'range': [19, 20], 'children': []}, {'type': 'ImportedItem', 'name': 'set_start_method', 'range': [23, 24], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'Optional', 'range': [26, 29], 'children': [{'type': 'ImportPath', 'name': 'typing', 'range': [26, 27], 'children': []}, {'type': 'ImportedItem', 'name': 'Optional', 'range': [28, 29], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'configure_logging', 'range': [32, 39], 'children': [{'type': 'ImportPath', 'name': 'backend.util.logging', 'range': [32, 37], 'children': []}, {'type': 'ImportedItem', 'name': 'configure_logging', 'range': [38, 39], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'sentry_init', 'range': [41, 48], 'children': [{'type': 'ImportPath', 'name': 'backend.util.metrics', 'range': [41, 46], 'children': []}, {'type': 'ImportedItem', 'name': 'sentry_init', 'range': [47, 48], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'logger', 'range': [51, 58], 'children': [{'type': 'Assignment', 'name': '=', 'range': [52, 53], 'children': [{'type': 'CallExpression', 'name': 'getLogger', 'range': [53, 58], 'children': [{'type': 'Identifier', 'name': 'logging', 'range': [53, 54], 'children': []}, {'type': 'Arguments', 'name': '(', 'range': [55, 58], 'children': [{'type': 'StringLiteral', 'name': '__name__', 'range': [56, 57], 'children': []}]}]}]}]}, {'type': 'VariableDeclaration', 'name': '_SERVICE_NAME', 'range': [60, 62], 'children': [{'type': 'Assignment', 'name': '=', 'range': [61, 62], 'children': [{'type': 'StringLiteral', 'name': '"MainProcess"', 'range': [62, 63], 'children': []}]}]}]}
2025-01-08 09:41:23,203 - INFO - Completed main AST analysis flow
2025-01-08 09:41:23,203 - INFO - Successfully processed chunk
2025-01-08 09:42:18,285 - INFO - Step 4 result: {'type': 'Program', 'name': 'AppProcess', 'range': [90, 535], 'children': [{'type': 'ClassDecl', 'name': 'AppProcess', 'range': [90, 535], 'children': [{'type': 'FunctionDecl', 'name': 'run', 'range': [144, 156], 'children': [{'type': 'FunctionSignature', 'name': 'run', 'range': [144, 149], 'children': []}, {'type': 'Block', 'name': 'run_block', 'range': [150, 156], 'children': [{'type': 'PassStatement', 'name': 'pass', 'range': [155, 156], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'service_name', 'range': [164, 178], 'children': [{'type': 'FunctionSignature', 'name': 'service_name', 'range': [164, 172], 'children': []}, {'type': 'Block', 'name': 'service_name_block', 'range': [173, 178], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [174, 178], 'children': [{'type': 'Identifier', 'name': 'cls.__name__', 'range': [175, 177], 'children': []}]}]}]}, {'type': 'FunctionDecl', 'name': 'cleanup', 'range': [180, 192], 'children': [{'type': 'FunctionSignature', 'name': 'cleanup', 'range': [180, 185], 'children': []}, {'type': 'Block', 'name': 'cleanup_block', 'range': [186, 192], 'children': [{'type': 'PassStatement', 'name': 'pass', 'range': [191, 192], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'health_check', 'range': [194, 206], 'children': [{'type': 'FunctionSignature', 'name': 'health_check', 'range': [194, 199], 'children': []}, {'type': 'Block', 'name': 'health_check_block', 'range': [200, 206], 'children': [{'type': 'PassStatement', 'name': 'pass', 'range': [205, 206], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'execute_run_command', 'range': [208, 304], 'children': [{'type': 'FunctionSignature', 'name': 'execute_run_command', 'range': [208, 215], 'children': []}, {'type': 'Block', 'name': 'execute_run_command_block', 'range': [216, 304], 'children': [{'type': 'ExpressionStatement', 'name': 'signal.signal', 'range': [217, 229], 'children': []}, {'type': 'TryStatement', 'name': 'try', 'range': [231, 304], 'children': [{'type': 'Block', 'name': 'try_block', 'range': [233, 285], 'children': [{'type': 'IfStatement', 'name': 'if', 'range': [234, 263], 'children': [{'type': 'Identifier', 'name': 'silent', 'range': [235, 236], 'children': []}, {'type': 'Block', 'name': 'if_block', 'range': [237, 263], 'children': [{'type': 'ExpressionStatement', 'name': 'sys.stdout', 'range': [238, 250], 'children': []}, {'type': 'ExpressionStatement', 'name': 'sys.stderr', 'range': [251, 263], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'set_service_name', 'range': [265, 271], 'children': []}, {'type': 'ExpressionStatement', 'name': 'logger.info', 'range': [272, 279], 'children': []}, {'type': 'ExpressionStatement', 'name': 'self.run', 'range': [280, 285], 'children': []}]}, {'type': 'ExceptClause', 'name': 'except', 'range': [286, 304], 'children': [{'type': 'Block', 'name': 'except_block', 'range': [295, 304], 'children': [{'type': 'ExpressionStatement', 'name': 'logger.warning', 'range': [296, 303], 'children': []}]}]}]}]}]}, {'type': 'FunctionDecl', 'name': '_self_terminate', 'range': [305, 330], 'children': [{'type': 'FunctionSignature', 'name': '_self_terminate', 'range': [305, 316], 'children': []}, {'type': 'Block', 'name': '_self_terminate_block', 'range': [317, 330], 'children': [{'type': 'ExpressionStatement', 'name': 'self.cleanup', 'range': [318, 323], 'children': []}, {'type': 'ExpressionStatement', 'name': 'sys.exit', 'range': [324, 330], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': '__enter__', 'range': [343, 361], 'children': [{'type': 'FunctionSignature', 'name': '__enter__', 'range': [343, 348], 'children': []}, {'type': 'Block', 'name': '__enter___block', 'range': [349, 361], 'children': [{'type': 'ExpressionStatement', 'name': 'self.start', 'range': [350, 358], 'children': []}, {'type': 'ReturnStatement', 'name': 'return', 'range': [359, 361], 'children': [{'type': 'Identifier', 'name': 'self', 'range': [360, 361], 'children': []}]}]}]}, {'type': 'FunctionDecl', 'name': '__exit__', 'range': [363, 383], 'children': [{'type': 'FunctionSignature', 'name': '__exit__', 'range': [363, 375], 'children': []}, {'type': 'Block', 'name': '__exit___block', 'range': [376, 383], 'children': [{'type': 'ExpressionStatement', 'name': 'self.stop', 'range': [377, 382], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'start', 'range': [384, 490], 'children': [{'type': 'FunctionSignature', 'name': 'start', 'range': [384, 408], 'children': []}, {'type': 'Block', 'name': 'start_block', 'range': [409, 490], 'children': [{'type': 'IfStatement', 'name': 'if', 'range': [414, 428], 'children': [{'type': 'UnaryExpression', 'name': 'not background', 'range': [415, 417], 'children': []}, {'type': 'Block', 'name': 'if_block', 'range': [418, 428], 'children': [{'type': 'ExpressionStatement', 'name': 'self.execute_run_command', 'range': [419, 425], 'children': []}, {'type': 'ReturnStatement', 'name': 'return', 'range': [426, 428], 'children': [{'type': 'Literal', 'name': '0', 'range': [427, 428], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': 'self.process', 'range': [430, 467], 'children': []}, {'type': 'ExpressionStatement', 'name': 'self.process.start', 'range': [468, 475], 'children': []}, {'type': 'ExpressionStatement', 'name': 'self.health_check', 'range': [476, 481], 'children': []}, {'type': 'ReturnStatement', 'name': 'return', 'range': [482, 490], 'children': [{'type': 'BinaryExpression', 'name': 'self.process.pid or 0', 'range': [483, 489], 'children': []}]}]}]}, {'type': 'FunctionDecl', 'name': 'stop', 'range': [492, 535], 'children': [{'type': 'FunctionSignature', 'name': 'stop', 'range': [492, 497], 'children': []}, {'type': 'Block', 'name': 'stop_block', 'range': [498, 535], 'children': [{'type': 'IfStatement', 'name': 'if', 'range': [503, 511], 'children': [{'type': 'UnaryExpression', 'name': 'not self.process', 'range': [504, 508], 'children': []}, {'type': 'Block', 'name': 'if_block', 'range': [509, 511], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [510, 511], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'self.process.terminate', 'range': [513, 520], 'children': []}, {'type': 'ExpressionStatement', 'name': 'self.process.join', 'range': [521, 528], 'children': []}, {'type': 'ExpressionStatement', 'name': 'self.process', 'range': [529, 534], 'children': []}]}]}]}]}
2025-01-08 09:42:18,285 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:43:11,073 - INFO - Step 5 result: {'type': 'Program', 'name': 'AppProcess', 'range': [90, 535], 'children': [{'type': 'ClassDecl', 'name': 'AppProcess', 'range': [90, 535], 'children': [{'type': 'FunctionDecl', 'name': 'run', 'range': [144, 156], 'children': [{'type': 'FunctionSignature', 'name': 'run', 'range': [144, 149], 'children': []}, {'type': 'Block', 'name': 'run_block', 'range': [150, 156], 'children': [{'type': 'PassStatement', 'name': 'pass', 'range': [155, 156], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'service_name', 'range': [164, 178], 'children': [{'type': 'FunctionSignature', 'name': 'service_name', 'range': [164, 172], 'children': []}, {'type': 'Block', 'name': 'service_name_block', 'range': [173, 178], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [174, 178], 'children': [{'type': 'Identifier', 'name': 'cls.__name__', 'range': [175, 177], 'children': []}]}]}]}, {'type': 'FunctionDecl', 'name': 'cleanup', 'range': [180, 192], 'children': [{'type': 'FunctionSignature', 'name': 'cleanup', 'range': [180, 185], 'children': []}, {'type': 'Block', 'name': 'cleanup_block', 'range': [186, 192], 'children': [{'type': 'PassStatement', 'name': 'pass', 'range': [191, 192], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'health_check', 'range': [194, 206], 'children': [{'type': 'FunctionSignature', 'name': 'health_check', 'range': [194, 199], 'children': []}, {'type': 'Block', 'name': 'health_check_block', 'range': [200, 206], 'children': [{'type': 'PassStatement', 'name': 'pass', 'range': [205, 206], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'execute_run_command', 'range': [208, 304], 'children': [{'type': 'FunctionSignature', 'name': 'execute_run_command', 'range': [208, 215], 'children': []}, {'type': 'Block', 'name': 'execute_run_command_block', 'range': [216, 304], 'children': [{'type': 'ExpressionStatement', 'name': 'signal.signal', 'range': [217, 229], 'children': []}, {'type': 'TryStatement', 'name': 'try', 'range': [231, 304], 'children': [{'type': 'Block', 'name': 'try_block', 'range': [233, 285], 'children': [{'type': 'IfStatement', 'name': 'if', 'range': [234, 263], 'children': [{'type': 'Identifier', 'name': 'silent', 'range': [235, 236], 'children': []}, {'type': 'Block', 'name': 'if_block', 'range': [237, 263], 'children': [{'type': 'ExpressionStatement', 'name': 'sys.stdout', 'range': [238, 250], 'children': []}, {'type': 'ExpressionStatement', 'name': 'sys.stderr', 'range': [251, 263], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'set_service_name', 'range': [265, 271], 'children': []}, {'type': 'ExpressionStatement', 'name': 'logger.info', 'range': [272, 279], 'children': []}, {'type': 'ExpressionStatement', 'name': 'self.run', 'range': [280, 285], 'children': []}]}, {'type': 'ExceptClause', 'name': 'except', 'range': [286, 304], 'children': [{'type': 'Block', 'name': 'except_block', 'range': [295, 304], 'children': [{'type': 'ExpressionStatement', 'name': 'logger.warning', 'range': [296, 303], 'children': []}]}]}]}]}]}, {'type': 'FunctionDecl', 'name': '_self_terminate', 'range': [305, 330], 'children': [{'type': 'FunctionSignature', 'name': '_self_terminate', 'range': [305, 316], 'children': []}, {'type': 'Block', 'name': '_self_terminate_block', 'range': [317, 330], 'children': [{'type': 'ExpressionStatement', 'name': 'self.cleanup', 'range': [318, 323], 'children': []}, {'type': 'ExpressionStatement', 'name': 'sys.exit', 'range': [324, 330], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': '__enter__', 'range': [343, 361], 'children': [{'type': 'FunctionSignature', 'name': '__enter__', 'range': [343, 348], 'children': []}, {'type': 'Block', 'name': '__enter___block', 'range': [349, 361], 'children': [{'type': 'ExpressionStatement', 'name': 'self.start', 'range': [350, 358], 'children': []}, {'type': 'ReturnStatement', 'name': 'return', 'range': [359, 361], 'children': [{'type': 'Identifier', 'name': 'self', 'range': [360, 361], 'children': []}]}]}]}, {'type': 'FunctionDecl', 'name': '__exit__', 'range': [363, 383], 'children': [{'type': 'FunctionSignature', 'name': '__exit__', 'range': [363, 375], 'children': []}, {'type': 'Block', 'name': '__exit___block', 'range': [376, 383], 'children': [{'type': 'ExpressionStatement', 'name': 'self.stop', 'range': [377, 382], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'start', 'range': [384, 490], 'children': [{'type': 'FunctionSignature', 'name': 'start', 'range': [384, 408], 'children': []}, {'type': 'Block', 'name': 'start_block', 'range': [409, 490], 'children': [{'type': 'IfStatement', 'name': 'if', 'range': [414, 428], 'children': [{'type': 'UnaryExpression', 'name': 'not background', 'range': [415, 417], 'children': []}, {'type': 'Block', 'name': 'if_block', 'range': [418, 428], 'children': [{'type': 'ExpressionStatement', 'name': 'self.execute_run_command', 'range': [419, 425], 'children': []}, {'type': 'ReturnStatement', 'name': 'return', 'range': [426, 428], 'children': [{'type': 'Literal', 'name': '0', 'range': [427, 428], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': 'self.process', 'range': [430, 467], 'children': []}, {'type': 'ExpressionStatement', 'name': 'self.process.start', 'range': [468, 475], 'children': []}, {'type': 'ExpressionStatement', 'name': 'self.health_check', 'range': [476, 481], 'children': []}, {'type': 'ReturnStatement', 'name': 'return', 'range': [482, 490], 'children': [{'type': 'BinaryExpression', 'name': 'self.process.pid or 0', 'range': [483, 489], 'children': []}]}]}]}, {'type': 'FunctionDecl', 'name': 'stop', 'range': [492, 535], 'children': [{'type': 'FunctionSignature', 'name': 'stop', 'range': [492, 497], 'children': []}, {'type': 'Block', 'name': 'stop_block', 'range': [498, 535], 'children': [{'type': 'IfStatement', 'name': 'if', 'range': [503, 511], 'children': [{'type': 'UnaryExpression', 'name': 'not self.process', 'range': [504, 508], 'children': []}, {'type': 'Block', 'name': 'if_block', 'range': [509, 511], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [510, 511], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'self.process.terminate', 'range': [513, 520], 'children': []}, {'type': 'ExpressionStatement', 'name': 'self.process.join', 'range': [521, 528], 'children': []}, {'type': 'ExpressionStatement', 'name': 'self.process', 'range': [529, 534], 'children': []}]}]}]}]}
2025-01-08 09:43:11,074 - INFO - Completed main AST analysis flow
2025-01-08 09:43:11,076 - INFO - Successfully processed chunk
2025-01-08 09:43:11,101 - INFO - Starting code generation from AST
2025-01-08 09:43:24,725 - INFO - Successfully generated code from AST
2025-01-08 09:43:24,725 - INFO - Starting static code similarity comparison
2025-01-08 09:43:24,739 - INFO - Static similarity result: {'final_score': 99.98, 'length_similarity': 99.87, 'token_similarity': 100.0, 'structure_similarity': 100.0, 'function_similarity': 100, 'complexity_similarity': 100.0, 'variable_similarity': 100}
