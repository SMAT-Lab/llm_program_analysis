2025-01-08 10:18:12,795 - INFO - Processing sample 144
2025-01-08 10:18:12,795 - INFO - Starting Step 0: Splitting code into top-level declarations
2025-01-08 10:18:15,694 - INFO - Successfully split code into 2 top-level declarations
2025-01-08 10:18:15,695 - INFO - Processing chunk #0 (size=65 chars, start_index=0)
2025-01-08 10:18:15,695 - INFO - Processing chunk with 65 chars starting at index 0
2025-01-08 10:18:15,695 - INFO - Starting main AST analysis flow
2025-01-08 10:18:15,696 - INFO - Tokenized code into 14 tokens
2025-01-08 10:18:15,696 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:18:15,697 - INFO - Processing chunk #1 (size=409 chars, start_index=14)
2025-01-08 10:18:15,697 - INFO - Processing chunk with 409 chars starting at index 14
2025-01-08 10:18:15,697 - INFO - Starting main AST analysis flow
2025-01-08 10:18:15,698 - INFO - Tokenized code into 108 tokens
2025-01-08 10:18:15,698 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:18:18,956 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [14, 121], 'children': [{'type': 'ClassDeclaration', 'name': 'JsonFileHandler', 'range': [14, 121], 'children': [{'type': 'FunctionDeclaration', 'name': 'format', 'range': [23, 74], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'emit', 'range': [76, 121], 'children': []}]}]}
2025-01-08 10:18:18,956 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:18:20,261 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [0, 13], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 4], 'children': [{'type': 'ImportSpecifier', 'name': 'annotations', 'range': [3, 4]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [6, 8], 'children': [{'type': 'ImportSpecifier', 'name': 'json', 'range': [7, 8]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [9, 11], 'children': [{'type': 'ImportSpecifier', 'name': 'logging', 'range': [10, 11]}]}]}
2025-01-08 10:18:20,261 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:18:27,329 - INFO - Step 2 result: {'nodes': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 4], 'children': [{'type': 'FromKeyword', 'name': 'from', 'range': [0, 1]}, {'type': 'ModuleSpecifier', 'name': '__future__', 'range': [1, 2]}, {'type': 'ImportKeyword', 'name': 'import', 'range': [2, 3]}, {'type': 'ImportSpecifier', 'name': 'annotations', 'range': [3, 4]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [6, 8], 'children': [{'type': 'ImportKeyword', 'name': 'import', 'range': [6, 7]}, {'type': 'ImportSpecifier', 'name': 'json', 'range': [7, 8]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [9, 11], 'children': [{'type': 'ImportKeyword', 'name': 'import', 'range': [9, 10]}, {'type': 'ImportSpecifier', 'name': 'logging', 'range': [10, 11]}]}]}
2025-01-08 10:18:27,329 - INFO - Starting Step 3: AST simplification
2025-01-08 10:18:34,173 - INFO - Step 3 result: {'nodes': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 4], 'children': [{'type': 'FromKeyword', 'name': 'from', 'range': [0, 1]}, {'type': 'ModuleSpecifier', 'name': '__future__', 'range': [1, 2]}, {'type': 'ImportKeyword', 'name': 'import', 'range': [2, 3]}, {'type': 'ImportSpecifier', 'name': 'annotations', 'range': [3, 4]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [6, 8], 'children': [{'type': 'ImportKeyword', 'name': 'import', 'range': [6, 7]}, {'type': 'ImportSpecifier', 'name': 'json', 'range': [7, 8]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [9, 11], 'children': [{'type': 'ImportKeyword', 'name': 'import', 'range': [9, 10]}, {'type': 'ImportSpecifier', 'name': 'logging', 'range': [10, 11]}]}]}
2025-01-08 10:18:34,174 - INFO - Starting Step 4: AST normalization
2025-01-08 10:18:41,099 - INFO - Step 4 result: {'nodes': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 4], 'children': [{'type': 'FromKeyword', 'name': 'from', 'range': [0, 1]}, {'type': 'ModuleSpecifier', 'name': '__future__', 'range': [1, 2]}, {'type': 'ImportKeyword', 'name': 'import', 'range': [2, 3]}, {'type': 'ImportSpecifier', 'name': 'annotations', 'range': [3, 4]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [6, 8], 'children': [{'type': 'ImportKeyword', 'name': 'import', 'range': [6, 7]}, {'type': 'ImportSpecifier', 'name': 'json', 'range': [7, 8]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [9, 11], 'children': [{'type': 'ImportKeyword', 'name': 'import', 'range': [9, 10]}, {'type': 'ImportSpecifier', 'name': 'logging', 'range': [10, 11]}]}]}
2025-01-08 10:18:41,099 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:18:42,506 - INFO - Step 2 result: {'type': 'Program', 'name': '', 'range': [14, 121], 'children': [{'type': 'ClassDeclaration', 'name': 'JsonFileHandler', 'range': [14, 121], 'children': [{'type': 'FunctionDeclaration', 'name': 'format', 'range': [23, 74], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [26, 26], 'children': []}, {'type': 'Parameter', 'name': 'record', 'range': [28, 28], 'children': []}, {'type': 'TypeAnnotation', 'name': 'logging.LogRecord', 'range': [30, 32], 'children': []}, {'type': 'ReturnType', 'name': 'str', 'range': [36, 36], 'children': []}, {'type': 'AssignmentExpression', 'name': '=', 'range': [42, 42], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [40, 41], 'children': [{'type': 'Identifier', 'name': 'record', 'range': [39, 39], 'children': []}, {'type': 'Identifier', 'name': 'json_data', 'range': [41, 41], 'children': []}]}, {'type': 'CallExpression', 'name': 'json.loads', 'range': [43, 52], 'children': [{'type': 'CallExpression', 'name': 'record.getMessage', 'range': [47, 51], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [54, 54], 'children': [{'type': 'CallExpression', 'name': 'json.dumps', 'range': [55, 73], 'children': [{'type': 'CallExpression', 'name': 'getattr', 'range': [59, 64], 'children': [{'type': 'Identifier', 'name': 'record', 'range': [61, 61], 'children': []}, {'type': 'StringLiteral', 'name': '"json_data"', 'range': [63, 63], 'children': []}]}, {'type': 'KeywordArgument', 'name': 'ensure_ascii', 'range': [66, 68], 'children': []}, {'type': 'KeywordArgument', 'name': 'indent', 'range': [70, 72], 'children': []}]}]}]}, {'type': 'FunctionDeclaration', 'name': 'emit', 'range': [76, 121], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [79, 79], 'children': []}, {'type': 'Parameter', 'name': 'record', 'range': [81, 81], 'children': []}, {'type': 'TypeAnnotation', 'name': 'logging.LogRecord', 'range': [83, 85], 'children': []}, {'type': 'ReturnType', 'name': 'None', 'range': [89, 89], 'children': []}, {'type': 'WithStatement', 'name': 'with', 'range': [92, 120], 'children': [{'type': 'CallExpression', 'name': 'open', 'range': [93, 104], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [96, 97], 'children': [{'type': 'Identifier', 'name': 'self', 'range': [95, 95], 'children': []}, {'type': 'Identifier', 'name': 'baseFilename', 'range': [97, 97], 'children': []}]}, {'type': 'StringLiteral', 'name': '"w"', 'range': [99, 99], 'children': []}, {'type': 'KeywordArgument', 'name': 'encoding', 'range': [101, 103], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [108, 120], 'children': [{'type': 'ExpressionStatement', 'name': '', 'range': [109, 119], 'children': [{'type': 'CallExpression', 'name': 'f.write', 'range': [110, 119], 'children': [{'type': 'CallExpression', 'name': 'self.format', 'range': [115, 118], 'children': [{'type': 'Identifier', 'name': 'record', 'range': [117, 117], 'children': []}]}]}]}]}]}]}]}]}
2025-01-08 10:18:42,506 - INFO - Starting Step 3: AST simplification
2025-01-08 10:18:48,642 - INFO - Step 5 result: {'nodes': [{'type': 'Program', 'name': 'MainOrSomething', 'range': [0, 11], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 4], 'children': [{'type': 'FromKeyword', 'name': 'from', 'range': [0, 1]}, {'type': 'ModuleSpecifier', 'name': '__future__', 'range': [1, 2]}, {'type': 'ImportKeyword', 'name': 'import', 'range': [2, 3]}, {'type': 'ImportSpecifier', 'name': 'annotations', 'range': [3, 4]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [6, 8], 'children': [{'type': 'ImportKeyword', 'name': 'import', 'range': [6, 7]}, {'type': 'ImportSpecifier', 'name': 'json', 'range': [7, 8]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [9, 11], 'children': [{'type': 'ImportKeyword', 'name': 'import', 'range': [9, 10]}, {'type': 'ImportSpecifier', 'name': 'logging', 'range': [10, 11]}]}]}]}
2025-01-08 10:18:48,642 - INFO - Completed main AST analysis flow
2025-01-08 10:18:48,643 - INFO - Successfully processed chunk
2025-01-08 10:19:05,410 - INFO - Step 3 result: {'type': 'Program', 'name': '', 'range': [14, 121], 'children': [{'type': 'ClassDeclaration', 'name': 'JsonFileHandler', 'range': [14, 121], 'children': [{'type': 'FunctionDeclaration', 'name': 'format', 'range': [23, 74], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [26, 26], 'children': []}, {'type': 'Parameter', 'name': 'record', 'range': [28, 28], 'children': []}, {'type': 'TypeAnnotation', 'name': 'logging.LogRecord', 'range': [30, 32], 'children': []}, {'type': 'ReturnType', 'name': 'str', 'range': [36, 36], 'children': []}, {'type': 'AssignmentExpression', 'name': '=', 'range': [42, 52], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [40, 41], 'children': [{'type': 'Identifier', 'name': 'record', 'range': [39, 39], 'children': []}, {'type': 'Identifier', 'name': 'json_data', 'range': [41, 41], 'children': []}]}, {'type': 'CallExpression', 'name': 'json.loads', 'range': [43, 52], 'children': [{'type': 'CallExpression', 'name': 'record.getMessage', 'range': [47, 51], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [54, 73], 'children': [{'type': 'CallExpression', 'name': 'json.dumps', 'range': [55, 73], 'children': [{'type': 'CallExpression', 'name': 'getattr', 'range': [59, 64], 'children': [{'type': 'Identifier', 'name': 'record', 'range': [61, 61], 'children': []}, {'type': 'StringLiteral', 'name': '"json_data"', 'range': [63, 63], 'children': []}]}, {'type': 'KeywordArgument', 'name': 'ensure_ascii', 'range': [66, 68], 'children': []}, {'type': 'KeywordArgument', 'name': 'indent', 'range': [70, 72], 'children': []}]}]}]}, {'type': 'FunctionDeclaration', 'name': 'emit', 'range': [76, 121], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [79, 79], 'children': []}, {'type': 'Parameter', 'name': 'record', 'range': [81, 81], 'children': []}, {'type': 'TypeAnnotation', 'name': 'logging.LogRecord', 'range': [83, 85], 'children': []}, {'type': 'ReturnType', 'name': 'None', 'range': [89, 89], 'children': []}, {'type': 'WithStatement', 'name': 'with', 'range': [92, 120], 'children': [{'type': 'CallExpression', 'name': 'open', 'range': [93, 104], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [96, 97], 'children': [{'type': 'Identifier', 'name': 'self', 'range': [95, 95], 'children': []}, {'type': 'Identifier', 'name': 'baseFilename', 'range': [97, 97], 'children': []}]}, {'type': 'StringLiteral', 'name': '"w"', 'range': [99, 99], 'children': []}, {'type': 'KeywordArgument', 'name': 'encoding', 'range': [101, 103], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [108, 120], 'children': [{'type': 'ExpressionStatement', 'name': '', 'range': [109, 119], 'children': [{'type': 'CallExpression', 'name': 'f.write', 'range': [110, 119], 'children': [{'type': 'CallExpression', 'name': 'self.format', 'range': [115, 118], 'children': [{'type': 'Identifier', 'name': 'record', 'range': [117, 117], 'children': []}]}]}]}]}]}]}]}]}
2025-01-08 10:19:05,411 - INFO - Starting Step 4: AST normalization
2025-01-08 10:19:28,610 - INFO - Step 4 result: {'type': 'Program', 'name': '', 'range': [14, 121], 'children': [{'type': 'ClassDecl', 'name': 'JsonFileHandler', 'range': [14, 121], 'children': [{'type': 'FunctionDecl', 'name': 'format', 'range': [23, 74], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [26, 26], 'children': []}, {'type': 'Parameter', 'name': 'record', 'range': [28, 28], 'children': []}, {'type': 'TypeAnnotation', 'name': 'logging.LogRecord', 'range': [30, 32], 'children': []}, {'type': 'ReturnType', 'name': 'str', 'range': [36, 36], 'children': []}, {'type': 'AssignmentExpression', 'name': '=', 'range': [42, 52], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [40, 41], 'children': [{'type': 'Identifier', 'name': 'record', 'range': [39, 39], 'children': []}, {'type': 'Identifier', 'name': 'json_data', 'range': [41, 41], 'children': []}]}, {'type': 'CallExpression', 'name': 'json.loads', 'range': [43, 52], 'children': [{'type': 'CallExpression', 'name': 'record.getMessage', 'range': [47, 51], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [54, 73], 'children': [{'type': 'CallExpression', 'name': 'json.dumps', 'range': [55, 73], 'children': [{'type': 'CallExpression', 'name': 'getattr', 'range': [59, 64], 'children': [{'type': 'Identifier', 'name': 'record', 'range': [61, 61], 'children': []}, {'type': 'StringLiteral', 'name': '"json_data"', 'range': [63, 63], 'children': []}]}, {'type': 'KeywordArgument', 'name': 'ensure_ascii', 'range': [66, 68], 'children': []}, {'type': 'KeywordArgument', 'name': 'indent', 'range': [70, 72], 'children': []}]}]}]}, {'type': 'FunctionDecl', 'name': 'emit', 'range': [76, 121], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [79, 79], 'children': []}, {'type': 'Parameter', 'name': 'record', 'range': [81, 81], 'children': []}, {'type': 'TypeAnnotation', 'name': 'logging.LogRecord', 'range': [83, 85], 'children': []}, {'type': 'ReturnType', 'name': 'None', 'range': [89, 89], 'children': []}, {'type': 'WithStatement', 'name': 'with', 'range': [92, 120], 'children': [{'type': 'CallExpression', 'name': 'open', 'range': [93, 104], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [96, 97], 'children': [{'type': 'Identifier', 'name': 'self', 'range': [95, 95], 'children': []}, {'type': 'Identifier', 'name': 'baseFilename', 'range': [97, 97], 'children': []}]}, {'type': 'StringLiteral', 'name': '"w"', 'range': [99, 99], 'children': []}, {'type': 'KeywordArgument', 'name': 'encoding', 'range': [101, 103], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [108, 120], 'children': [{'type': 'ExpressionStatement', 'name': '', 'range': [109, 119], 'children': [{'type': 'CallExpression', 'name': 'f.write', 'range': [110, 119], 'children': [{'type': 'CallExpression', 'name': 'self.format', 'range': [115, 118], 'children': [{'type': 'Identifier', 'name': 'record', 'range': [117, 117], 'children': []}]}]}]}]}]}]}]}]}
2025-01-08 10:19:28,611 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:19:52,705 - INFO - Step 5 result: {'type': 'Program', 'name': '', 'range': [14, 121], 'children': [{'type': 'ClassDecl', 'name': 'JsonFileHandler', 'range': [14, 121], 'children': [{'type': 'FunctionDecl', 'name': 'format', 'range': [23, 74], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [26, 26], 'children': []}, {'type': 'Parameter', 'name': 'record', 'range': [28, 28], 'children': []}, {'type': 'TypeAnnotation', 'name': 'logging.LogRecord', 'range': [30, 32], 'children': []}, {'type': 'ReturnType', 'name': 'str', 'range': [36, 36], 'children': []}, {'type': 'AssignmentExpression', 'name': '=', 'range': [42, 52], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [40, 41], 'children': [{'type': 'Identifier', 'name': 'record', 'range': [39, 39], 'children': []}, {'type': 'Identifier', 'name': 'json_data', 'range': [41, 41], 'children': []}]}, {'type': 'CallExpression', 'name': 'json.loads', 'range': [43, 52], 'children': [{'type': 'CallExpression', 'name': 'record.getMessage', 'range': [47, 51], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [54, 73], 'children': [{'type': 'CallExpression', 'name': 'json.dumps', 'range': [55, 73], 'children': [{'type': 'CallExpression', 'name': 'getattr', 'range': [59, 64], 'children': [{'type': 'Identifier', 'name': 'record', 'range': [61, 61], 'children': []}, {'type': 'StringLiteral', 'name': '"json_data"', 'range': [63, 63], 'children': []}]}, {'type': 'KeywordArgument', 'name': 'ensure_ascii', 'range': [66, 68], 'children': []}, {'type': 'KeywordArgument', 'name': 'indent', 'range': [70, 72], 'children': []}]}]}]}, {'type': 'FunctionDecl', 'name': 'emit', 'range': [76, 121], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [79, 79], 'children': []}, {'type': 'Parameter', 'name': 'record', 'range': [81, 81], 'children': []}, {'type': 'TypeAnnotation', 'name': 'logging.LogRecord', 'range': [83, 85], 'children': []}, {'type': 'ReturnType', 'name': 'None', 'range': [89, 89], 'children': []}, {'type': 'WithStatement', 'name': 'with', 'range': [92, 120], 'children': [{'type': 'CallExpression', 'name': 'open', 'range': [93, 104], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [96, 97], 'children': [{'type': 'Identifier', 'name': 'self', 'range': [95, 95], 'children': []}, {'type': 'Identifier', 'name': 'baseFilename', 'range': [97, 97], 'children': []}]}, {'type': 'StringLiteral', 'name': '"w"', 'range': [99, 99], 'children': []}, {'type': 'KeywordArgument', 'name': 'encoding', 'range': [101, 103], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [108, 120], 'children': [{'type': 'ExpressionStatement', 'name': '', 'range': [109, 119], 'children': [{'type': 'CallExpression', 'name': 'f.write', 'range': [110, 119], 'children': [{'type': 'CallExpression', 'name': 'self.format', 'range': [115, 118], 'children': [{'type': 'Identifier', 'name': 'record', 'range': [117, 117], 'children': []}]}]}]}]}]}]}]}]}
2025-01-08 10:19:52,705 - INFO - Completed main AST analysis flow
2025-01-08 10:19:52,706 - INFO - Successfully processed chunk
2025-01-08 10:19:52,714 - INFO - Starting code generation from AST
2025-01-08 10:19:55,520 - INFO - Successfully generated code from AST
2025-01-08 10:19:55,520 - INFO - Starting static code similarity comparison
2025-01-08 10:19:55,522 - INFO - Static similarity result: {'final_score': 79.25, 'length_similarity': 92.74, 'token_similarity': 87.5, 'structure_similarity': 36.36, 'function_similarity': 100, 'complexity_similarity': 100.0, 'variable_similarity': 100}
