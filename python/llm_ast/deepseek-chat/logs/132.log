2025-01-08 10:13:14,688 - INFO - Processing sample 132
2025-01-08 10:13:14,689 - INFO - Starting Step 0: Splitting code into top-level declarations
2025-01-08 10:13:16,829 - INFO - Successfully split code into 2 top-level declarations
2025-01-08 10:13:16,831 - INFO - Processing chunk #0 (size=1215 chars, start_index=0)
2025-01-08 10:13:16,831 - INFO - Processing chunk with 1215 chars starting at index 0
2025-01-08 10:13:16,831 - INFO - Starting main AST analysis flow
2025-01-08 10:13:16,831 - INFO - Tokenized code into 111 tokens
2025-01-08 10:13:16,831 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:13:16,833 - INFO - Processing chunk #1 (size=72 chars, start_index=111)
2025-01-08 10:13:16,833 - INFO - Processing chunk with 72 chars starting at index 111
2025-01-08 10:13:16,833 - INFO - Starting main AST analysis flow
2025-01-08 10:13:16,833 - INFO - Tokenized code into 20 tokens
2025-01-08 10:13:16,833 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:13:18,661 - INFO - Step 1 result: {'type': 'Program', 'name': 'get_1s_count', 'range': [0, 110], 'children': []}
2025-01-08 10:13:18,661 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:13:19,901 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [111, 130], 'children': [{'type': 'IfStatement', 'name': '', 'range': [113, 118], 'children': []}, {'type': 'ImportStatement', 'name': 'doctest', 'range': [120, 122], 'children': []}, {'type': 'ExpressionStatement', 'name': '', 'range': [124, 128], 'children': []}]}
2025-01-08 10:13:19,901 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:13:28,114 - INFO - Step 2 result: {'nodes': [{'type': 'IfStatement', 'name': '', 'range': [113, 118], 'children': [{'type': 'Condition', 'name': '', 'range': [114, 117], 'children': [{'type': 'Variable', 'name': '__name__', 'range': [114, 114], 'children': []}, {'type': 'Operator', 'name': '==', 'range': [115, 116], 'children': []}, {'type': 'StringLiteral', 'name': '"__main__"', 'range': [117, 117], 'children': []}]}]}, {'type': 'ImportStatement', 'name': 'doctest', 'range': [120, 122], 'children': [{'type': 'Module', 'name': 'doctest', 'range': [121, 121], 'children': []}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [124, 128], 'children': [{'type': 'CallExpression', 'name': '', 'range': [124, 128], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [124, 126], 'children': [{'type': 'Object', 'name': 'doctest', 'range': [124, 124], 'children': []}, {'type': 'Property', 'name': 'testmod', 'range': [126, 126], 'children': []}]}, {'type': 'Arguments', 'name': '', 'range': [127, 128], 'children': []}]}]}]}
2025-01-08 10:13:28,115 - INFO - Starting Step 3: AST simplification
2025-01-08 10:13:36,702 - INFO - Step 3 result: {'nodes': [{'type': 'IfStatement', 'name': '', 'range': [113, 118], 'children': [{'type': 'Condition', 'name': '', 'range': [114, 117], 'children': [{'type': 'Variable', 'name': '__name__', 'range': [114, 114], 'children': []}, {'type': 'Operator', 'name': '==', 'range': [115, 116], 'children': []}, {'type': 'StringLiteral', 'name': '"__main__"', 'range': [117, 117], 'children': []}]}]}, {'type': 'ImportStatement', 'name': 'doctest', 'range': [120, 122], 'children': [{'type': 'Module', 'name': 'doctest', 'range': [121, 121], 'children': []}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [124, 128], 'children': [{'type': 'CallExpression', 'name': '', 'range': [124, 128], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [124, 126], 'children': [{'type': 'Object', 'name': 'doctest', 'range': [124, 124], 'children': []}, {'type': 'Property', 'name': 'testmod', 'range': [126, 126], 'children': []}]}]}]}]}
2025-01-08 10:13:36,702 - INFO - Starting Step 4: AST normalization
2025-01-08 10:13:38,851 - INFO - Step 2 result: {'type': 'Program', 'name': 'get_1s_count', 'range': [0, 110], 'children': [{'type': 'FunctionDeclaration', 'name': 'get_1s_count', 'range': [0, 110], 'children': [{'type': 'Parameter', 'name': 'number', 'range': [3, 5], 'children': []}, {'type': 'ReturnType', 'name': 'int', 'range': [9, 9], 'children': []}, {'type': 'Docstring', 'name': '', 'range': [12, 16], 'children': []}, {'type': 'IfStatement', 'name': '', 'range': [18, 37], 'children': [{'type': 'Condition', 'name': '', 'range': [19, 30], 'children': [{'type': 'LogicalExpression', 'name': 'or', 'range': [26, 30], 'children': [{'type': 'CallExpression', 'name': 'isinstance', 'range': [20, 25], 'children': [{'type': 'Argument', 'name': 'number', 'range': [22, 22], 'children': []}, {'type': 'Argument', 'name': 'int', 'range': [24, 24], 'children': []}]}, {'type': 'BinaryExpression', 'name': '<', 'range': [27, 29], 'children': [{'type': 'Left', 'name': 'number', 'range': [27, 27], 'children': []}, {'type': 'Right', 'name': '0', 'range': [29, 29], 'children': []}]}]}]}, {'type': 'Consequent', 'name': '', 'range': [32, 36], 'children': [{'type': 'RaiseStatement', 'name': '', 'range': [32, 36], 'children': [{'type': 'CallExpression', 'name': 'ValueError', 'range': [33, 36], 'children': [{'type': 'Argument', 'name': '"Input must be a non-negative integer"', 'range': [35, 35], 'children': []}]}]}]}]}, {'type': 'VariableDeclaration', 'name': 'count', 'range': [39, 42], 'children': [{'type': 'Assignment', 'name': '=', 'range': [40, 41], 'children': [{'type': 'Right', 'name': '0', 'range': [41, 41], 'children': []}]}]}, {'type': 'WhileStatement', 'name': '', 'range': [43, 107], 'children': [{'type': 'Condition', 'name': 'number', 'range': [44, 44], 'children': []}, {'type': 'Body', 'name': '', 'range': [46, 107], 'children': [{'type': 'Comment', 'name': '', 'range': [47, 95], 'children': []}, {'type': 'ExpressionStatement', 'name': '', 'range': [96, 102], 'children': [{'type': 'AssignmentExpression', 'name': '&=', 'range': [97, 101], 'children': [{'type': 'Left', 'name': 'number', 'range': [96, 96], 'children': []}, {'type': 'Right', 'name': 'number - 1', 'range': [99, 101], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [103, 106], 'children': [{'type': 'AssignmentExpression', 'name': '+=', 'range': [104, 105], 'children': [{'type': 'Left', 'name': 'count', 'range': [103, 103], 'children': []}, {'type': 'Right', 'name': '1', 'range': [106, 106], 'children': []}]}]}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [108, 110], 'children': [{'type': 'Argument', 'name': 'count', 'range': [109, 109], 'children': []}]}]}]}
2025-01-08 10:13:38,851 - INFO - Starting Step 3: AST simplification
2025-01-08 10:13:44,812 - INFO - Step 4 result: {'nodes': [{'type': 'IfStatement', 'name': '', 'range': [113, 118], 'children': [{'type': 'BinaryExpression', 'name': '', 'range': [114, 117], 'children': [{'type': 'Identifier', 'name': '__name__', 'range': [114, 114], 'children': []}, {'type': 'Operator', 'name': '==', 'range': [115, 116], 'children': []}, {'type': 'Literal', 'name': '"__main__"', 'range': [117, 117], 'children': []}]}]}, {'type': 'ImportStatement', 'name': 'doctest', 'range': [120, 122], 'children': [{'type': 'Module', 'name': 'doctest', 'range': [121, 121], 'children': []}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [124, 128], 'children': [{'type': 'CallExpression', 'name': '', 'range': [124, 128], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [124, 126], 'children': [{'type': 'Identifier', 'name': 'doctest', 'range': [124, 124], 'children': []}, {'type': 'Identifier', 'name': 'testmod', 'range': [126, 126], 'children': []}]}]}]}]}
2025-01-08 10:13:44,812 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:13:53,467 - INFO - Step 5 result: {'nodes': [{'type': 'Program', 'name': 'MainOrSomething', 'range': [113, 128], 'children': [{'type': 'IfStatement', 'name': '', 'range': [113, 118], 'children': [{'type': 'BinaryExpression', 'name': '', 'range': [114, 117], 'children': [{'type': 'Identifier', 'name': '__name__', 'range': [114, 114], 'children': []}, {'type': 'Operator', 'name': '==', 'range': [115, 116], 'children': []}, {'type': 'Literal', 'name': '"__main__"', 'range': [117, 117], 'children': []}]}]}, {'type': 'ImportStatement', 'name': 'doctest', 'range': [120, 122], 'children': [{'type': 'Module', 'name': 'doctest', 'range': [121, 121], 'children': []}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [124, 128], 'children': [{'type': 'CallExpression', 'name': '', 'range': [124, 128], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [124, 126], 'children': [{'type': 'Identifier', 'name': 'doctest', 'range': [124, 124], 'children': []}, {'type': 'Identifier', 'name': 'testmod', 'range': [126, 126], 'children': []}]}]}]}]}]}
2025-01-08 10:13:53,467 - INFO - Completed main AST analysis flow
2025-01-08 10:13:53,467 - INFO - Successfully processed chunk
2025-01-08 10:13:59,190 - INFO - Step 3 result: {'type': 'Program', 'name': 'get_1s_count', 'range': [0, 110], 'children': [{'type': 'FunctionDeclaration', 'name': 'get_1s_count', 'range': [0, 110], 'children': [{'type': 'Parameter', 'name': 'number', 'range': [3, 5], 'children': []}, {'type': 'ReturnType', 'name': 'int', 'range': [9, 9], 'children': []}, {'type': 'Docstring', 'name': '', 'range': [12, 16], 'children': []}, {'type': 'IfStatement', 'name': '', 'range': [18, 37], 'children': [{'type': 'Condition', 'name': '', 'range': [19, 30], 'children': [{'type': 'LogicalExpression', 'name': 'or', 'range': [26, 30], 'children': [{'type': 'CallExpression', 'name': 'isinstance', 'range': [20, 25], 'children': [{'type': 'Argument', 'name': 'number', 'range': [22, 22], 'children': []}, {'type': 'Argument', 'name': 'int', 'range': [24, 24], 'children': []}]}, {'type': 'BinaryExpression', 'name': '<', 'range': [27, 29], 'children': [{'type': 'Left', 'name': 'number', 'range': [27, 27], 'children': []}, {'type': 'Right', 'name': '0', 'range': [29, 29], 'children': []}]}]}]}, {'type': 'Consequent', 'name': '', 'range': [32, 36], 'children': [{'type': 'RaiseStatement', 'name': '', 'range': [32, 36], 'children': [{'type': 'CallExpression', 'name': 'ValueError', 'range': [33, 36], 'children': [{'type': 'Argument', 'name': '"Input must be a non-negative integer"', 'range': [35, 35], 'children': []}]}]}]}]}, {'type': 'VariableDeclaration', 'name': 'count', 'range': [39, 42], 'children': [{'type': 'Assignment', 'name': '=', 'range': [40, 41], 'children': [{'type': 'Right', 'name': '0', 'range': [41, 41], 'children': []}]}]}, {'type': 'WhileStatement', 'name': '', 'range': [43, 107], 'children': [{'type': 'Condition', 'name': 'number', 'range': [44, 44], 'children': []}, {'type': 'Body', 'name': '', 'range': [46, 107], 'children': [{'type': 'Comment', 'name': '', 'range': [47, 95], 'children': []}, {'type': 'ExpressionStatement', 'name': '', 'range': [96, 102], 'children': [{'type': 'AssignmentExpression', 'name': '&=', 'range': [97, 101], 'children': [{'type': 'Left', 'name': 'number', 'range': [96, 96], 'children': []}, {'type': 'Right', 'name': 'number - 1', 'range': [99, 101], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [103, 106], 'children': [{'type': 'AssignmentExpression', 'name': '+=', 'range': [104, 105], 'children': [{'type': 'Left', 'name': 'count', 'range': [103, 103], 'children': []}, {'type': 'Right', 'name': '1', 'range': [106, 106], 'children': []}]}]}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [108, 110], 'children': [{'type': 'Argument', 'name': 'count', 'range': [109, 109], 'children': []}]}]}]}
2025-01-08 10:13:59,191 - INFO - Starting Step 4: AST normalization
2025-01-08 10:14:20,893 - INFO - Step 4 result: {'type': 'Program', 'name': 'get_1s_count', 'range': [0, 110], 'children': [{'type': 'FunctionDecl', 'name': 'get_1s_count', 'range': [0, 110], 'children': [{'type': 'Parameter', 'name': 'number', 'range': [3, 5], 'children': []}, {'type': 'ReturnType', 'name': 'int', 'range': [9, 9], 'children': []}, {'type': 'Docstring', 'name': '', 'range': [12, 16], 'children': []}, {'type': 'IfStatement', 'name': '', 'range': [18, 37], 'children': [{'type': 'Condition', 'name': '', 'range': [19, 30], 'children': [{'type': 'LogicalExpression', 'name': 'or', 'range': [26, 30], 'children': [{'type': 'CallExpression', 'name': 'isinstance', 'range': [20, 25], 'children': [{'type': 'Argument', 'name': 'number', 'range': [22, 22], 'children': []}, {'type': 'Argument', 'name': 'int', 'range': [24, 24], 'children': []}]}, {'type': 'BinaryExpression', 'name': '<', 'range': [27, 29], 'children': [{'type': 'Left', 'name': 'number', 'range': [27, 27], 'children': []}, {'type': 'Right', 'name': '0', 'range': [29, 29], 'children': []}]}]}]}, {'type': 'Consequent', 'name': '', 'range': [32, 36], 'children': [{'type': 'RaiseStatement', 'name': '', 'range': [32, 36], 'children': [{'type': 'CallExpression', 'name': 'ValueError', 'range': [33, 36], 'children': [{'type': 'Argument', 'name': '"Input must be a non-negative integer"', 'range': [35, 35], 'children': []}]}]}]}]}, {'type': 'VariableDeclaration', 'name': 'count', 'range': [39, 42], 'children': [{'type': 'Assignment', 'name': '=', 'range': [40, 41], 'children': [{'type': 'Right', 'name': '0', 'range': [41, 41], 'children': []}]}]}, {'type': 'WhileStatement', 'name': '', 'range': [43, 107], 'children': [{'type': 'Condition', 'name': 'number', 'range': [44, 44], 'children': []}, {'type': 'Body', 'name': '', 'range': [46, 107], 'children': [{'type': 'Comment', 'name': '', 'range': [47, 95], 'children': []}, {'type': 'ExpressionStatement', 'name': '', 'range': [96, 102], 'children': [{'type': 'AssignmentExpression', 'name': '&=', 'range': [97, 101], 'children': [{'type': 'Left', 'name': 'number', 'range': [96, 96], 'children': []}, {'type': 'Right', 'name': 'number - 1', 'range': [99, 101], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [103, 106], 'children': [{'type': 'AssignmentExpression', 'name': '+=', 'range': [104, 105], 'children': [{'type': 'Left', 'name': 'count', 'range': [103, 103], 'children': []}, {'type': 'Right', 'name': '1', 'range': [106, 106], 'children': []}]}]}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [108, 110], 'children': [{'type': 'Argument', 'name': 'count', 'range': [109, 109], 'children': []}]}]}]}
2025-01-08 10:14:20,894 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:14:41,571 - INFO - Step 5 result: {'type': 'Program', 'name': 'get_1s_count', 'range': [0, 110], 'children': [{'type': 'FunctionDecl', 'name': 'get_1s_count', 'range': [0, 110], 'children': [{'type': 'Parameter', 'name': 'number', 'range': [3, 5], 'children': []}, {'type': 'ReturnType', 'name': 'int', 'range': [9, 9], 'children': []}, {'type': 'Docstring', 'name': '', 'range': [12, 16], 'children': []}, {'type': 'IfStatement', 'name': '', 'range': [18, 37], 'children': [{'type': 'Condition', 'name': '', 'range': [19, 30], 'children': [{'type': 'LogicalExpression', 'name': 'or', 'range': [26, 30], 'children': [{'type': 'CallExpression', 'name': 'isinstance', 'range': [20, 25], 'children': [{'type': 'Argument', 'name': 'number', 'range': [22, 22], 'children': []}, {'type': 'Argument', 'name': 'int', 'range': [24, 24], 'children': []}]}, {'type': 'BinaryExpression', 'name': '<', 'range': [27, 29], 'children': [{'type': 'Left', 'name': 'number', 'range': [27, 27], 'children': []}, {'type': 'Right', 'name': '0', 'range': [29, 29], 'children': []}]}]}]}, {'type': 'Consequent', 'name': '', 'range': [32, 36], 'children': [{'type': 'RaiseStatement', 'name': '', 'range': [32, 36], 'children': [{'type': 'CallExpression', 'name': 'ValueError', 'range': [33, 36], 'children': [{'type': 'Argument', 'name': '"Input must be a non-negative integer"', 'range': [35, 35], 'children': []}]}]}]}]}, {'type': 'VariableDeclaration', 'name': 'count', 'range': [39, 42], 'children': [{'type': 'Assignment', 'name': '=', 'range': [40, 41], 'children': [{'type': 'Right', 'name': '0', 'range': [41, 41], 'children': []}]}]}, {'type': 'WhileStatement', 'name': '', 'range': [43, 107], 'children': [{'type': 'Condition', 'name': 'number', 'range': [44, 44], 'children': []}, {'type': 'Body', 'name': '', 'range': [46, 107], 'children': [{'type': 'Comment', 'name': '', 'range': [47, 95], 'children': []}, {'type': 'ExpressionStatement', 'name': '', 'range': [96, 102], 'children': [{'type': 'AssignmentExpression', 'name': '&=', 'range': [97, 101], 'children': [{'type': 'Left', 'name': 'number', 'range': [96, 96], 'children': []}, {'type': 'Right', 'name': 'number - 1', 'range': [99, 101], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [103, 106], 'children': [{'type': 'AssignmentExpression', 'name': '+=', 'range': [104, 105], 'children': [{'type': 'Left', 'name': 'count', 'range': [103, 103], 'children': []}, {'type': 'Right', 'name': '1', 'range': [106, 106], 'children': []}]}]}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [108, 110], 'children': [{'type': 'Argument', 'name': 'count', 'range': [109, 109], 'children': []}]}]}]}
2025-01-08 10:14:41,571 - INFO - Completed main AST analysis flow
2025-01-08 10:14:41,572 - INFO - Successfully processed chunk
2025-01-08 10:14:41,580 - INFO - Starting code generation from AST
2025-01-08 10:14:53,024 - INFO - Successfully generated code from AST
2025-01-08 10:14:53,025 - INFO - Starting static code similarity comparison
2025-01-08 10:14:53,028 - INFO - Static similarity result: {'final_score': 61.11, 'length_similarity': 78.07, 'token_similarity': 13.95, 'structure_similarity': 92.86, 'function_similarity': 100, 'complexity_similarity': 20.0, 'variable_similarity': 100}
