2025-01-08 09:16:34,882 - INFO - Processing sample 7
2025-01-08 09:16:34,882 - INFO - Starting Step 0: Splitting code into top-level declarations
2025-01-08 09:16:45,057 - INFO - Successfully split code into 6 top-level declarations
2025-01-08 09:16:45,060 - INFO - Processing chunk #0 (size=470 chars, start_index=0)
2025-01-08 09:16:45,060 - INFO - Processing chunk #1 (size=1460 chars, start_index=91)
2025-01-08 09:16:45,100 - INFO - Processing chunk with 1460 chars starting at index 91
2025-01-08 09:16:45,101 - INFO - Starting main AST analysis flow
2025-01-08 09:16:45,100 - INFO - Processing chunk with 470 chars starting at index 0
2025-01-08 09:16:45,061 - INFO - Processing chunk #2 (size=4737 chars, start_index=221)
2025-01-08 09:16:45,101 - INFO - Tokenized code into 130 tokens
2025-01-08 09:16:45,153 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:16:45,137 - INFO - Processing chunk with 4737 chars starting at index 221
2025-01-08 09:16:45,120 - INFO - Starting main AST analysis flow
2025-01-08 09:16:45,169 - INFO - Starting main AST analysis flow
2025-01-08 09:16:45,179 - INFO - Processing chunk #3 (size=270 chars, start_index=1057)
2025-01-08 09:16:45,180 - INFO - Tokenized code into 91 tokens
2025-01-08 09:16:45,181 - INFO - Processing chunk #4 (size=200 chars, start_index=1126)
2025-01-08 09:16:45,182 - INFO - Tokenized code into 836 tokens
2025-01-08 09:16:45,183 - INFO - Processing chunk with 270 chars starting at index 1057
2025-01-08 09:16:45,184 - INFO - Processing chunk #5 (size=125 chars, start_index=1166)
2025-01-08 09:16:45,184 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:16:45,185 - INFO - Processing chunk with 200 chars starting at index 1126
2025-01-08 09:16:45,185 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:16:45,185 - INFO - Starting main AST analysis flow
2025-01-08 09:16:45,187 - INFO - Processing chunk with 125 chars starting at index 1166
2025-01-08 09:16:45,193 - INFO - Starting main AST analysis flow
2025-01-08 09:16:45,209 - INFO - Tokenized code into 69 tokens
2025-01-08 09:16:45,214 - INFO - Starting main AST analysis flow
2025-01-08 09:16:45,214 - INFO - Tokenized code into 40 tokens
2025-01-08 09:16:45,214 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:16:45,215 - INFO - Tokenized code into 39 tokens
2025-01-08 09:16:45,216 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:16:45,217 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:16:52,733 - INFO - Step 1 result: {'type': 'Program', 'name': 'get_block_costs', 'range': [1166, 1204], 'children': []}
2025-01-08 09:16:52,733 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:16:54,411 - INFO - Step 1 result: {'type': 'Program', 'name': 'DisabledUserCredit', 'range': [1057, 1125], 'children': [{'type': 'FunctionDeclaration', 'name': 'get_or_refill_credit', 'range': [1064, 1084], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'spend_credits', 'range': [1086, 1106], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'top_up_credits', 'range': [1108, 1124], 'children': []}]}
2025-01-08 09:16:54,411 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:16:55,538 - INFO - Step 1 result: {'type': 'Program', 'name': 'UserCreditBase', 'range': [91, 220], 'children': [{'type': 'FunctionDeclaration', 'name': '__init__', 'range': [98, 114], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'get_or_refill_credit', 'range': [119, 139], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'spend_credits', 'range': [144, 193], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'top_up_credits', 'range': [198, 219], 'children': []}]}
2025-01-08 09:16:55,539 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:16:58,567 - INFO - Step 1 result: {'type': 'Program', 'name': 'UserCredit', 'range': [221, 1056], 'children': [{'type': 'FunctionDeclaration', 'name': 'get_or_refill_credit', 'range': [228, 490], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'time_now', 'range': [492, 510], 'children': []}, {'type': 'FunctionDeclaration', 'name': '_block_usage_cost', 'range': [512, 687], 'children': []}, {'type': 'FunctionDeclaration', 'name': '_is_cost_filter_match', 'range': [689, 789], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'spend_credits', 'range': [791, 994], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'top_up_credits', 'range': [996, 1056], 'children': []}]}
2025-01-08 09:16:58,568 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:16:59,322 - INFO - Step 1 result: {'type': 'Program', 'name': 'get_user_credit_model', 'range': [1126, 1165], 'children': [{'type': 'FunctionDeclaration', 'name': 'get_user_credit_model', 'range': [1126, 1165], 'children': [{'type': 'ReturnType', 'name': 'UserCreditBase', 'range': [1130, 1132], 'children': []}, {'type': 'IfStatement', 'name': '', 'range': [1135, 1164], 'children': [{'type': 'Condition', 'name': '', 'range': [1136, 1145], 'children': []}, {'type': 'ReturnStatement', 'name': '', 'range': [1148, 1154], 'children': []}, {'type': 'ElseStatement', 'name': '', 'range': [1156, 1164], 'children': [{'type': 'ReturnStatement', 'name': '', 'range': [1159, 1163], 'children': []}]}]}]}]}
2025-01-08 09:16:59,322 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:17:01,755 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [0, 90], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 6], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [7, 13], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [15, 19], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [20, 26], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [27, 33], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [34, 40], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [42, 54], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [55, 63], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [64, 74], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [75, 83], 'children': []}, {'type': 'VariableDeclaration', 'name': 'config', 'range': [85, 90], 'children': []}]}
2025-01-08 09:17:01,755 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:17:23,241 - INFO - Step 2 result: {'type': 'Program', 'name': 'get_user_credit_model', 'range': [1126, 1165], 'children': [{'type': 'FunctionDeclaration', 'name': 'get_user_credit_model', 'range': [1126, 1165], 'children': [{'type': 'ReturnType', 'name': 'UserCreditBase', 'range': [1130, 1132], 'children': []}, {'type': 'IfStatement', 'name': '', 'range': [1135, 1164], 'children': [{'type': 'Condition', 'name': '', 'range': [1136, 1145], 'children': [{'type': 'MemberExpression', 'name': 'config.enable_credit.lower', 'range': [1136, 1142], 'children': []}, {'type': 'ComparisonOperator', 'name': '==', 'range': [1143, 1144], 'children': []}, {'type': 'StringLiteral', 'name': '"true"', 'range': [1145, 1145], 'children': []}]}, {'type': 'ReturnStatement', 'name': '', 'range': [1148, 1154], 'children': [{'type': 'NewExpression', 'name': 'UserCredit', 'range': [1149, 1154], 'children': [{'type': 'MemberExpression', 'name': 'config.num_user_credits_refill', 'range': [1151, 1153], 'children': []}]}]}, {'type': 'ElseStatement', 'name': '', 'range': [1156, 1164], 'children': [{'type': 'ReturnStatement', 'name': '', 'range': [1159, 1163], 'children': [{'type': 'NewExpression', 'name': 'DisabledUserCredit', 'range': [1160, 1163], 'children': [{'type': 'NumericLiteral', 'name': '0', 'range': [1162, 1162], 'children': []}]}]}]}]}]}]}
2025-01-08 09:17:23,241 - INFO - Starting Step 3: AST simplification
2025-01-08 09:17:31,498 - INFO - Step 2 result: {'type': 'Program', 'name': 'DisabledUserCredit', 'range': [1057, 1125], 'children': [{'type': 'FunctionDeclaration', 'name': 'get_or_refill_credit', 'range': [1064, 1084], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [1067, 1076], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1068, 1068], 'children': []}, {'type': 'Parameter', 'name': 'args', 'range': [1071, 1071], 'children': []}, {'type': 'Parameter', 'name': 'kwargs', 'range': [1075, 1075], 'children': []}]}, {'type': 'ReturnType', 'name': 'int', 'range': [1079, 1079], 'children': []}, {'type': 'BlockStatement', 'name': 'body', 'range': [1081, 1084], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [1082, 1083], 'children': [{'type': 'Literal', 'name': '0', 'range': [1083, 1083], 'children': []}]}]}]}, {'type': 'FunctionDeclaration', 'name': 'spend_credits', 'range': [1086, 1106], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [1089, 1098], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1090, 1090], 'children': []}, {'type': 'Parameter', 'name': 'args', 'range': [1093, 1093], 'children': []}, {'type': 'Parameter', 'name': 'kwargs', 'range': [1097, 1097], 'children': []}]}, {'type': 'ReturnType', 'name': 'int', 'range': [1101, 1101], 'children': []}, {'type': 'BlockStatement', 'name': 'body', 'range': [1103, 1106], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [1104, 1105], 'children': [{'type': 'Literal', 'name': '0', 'range': [1105, 1105], 'children': []}]}]}]}, {'type': 'FunctionDeclaration', 'name': 'top_up_credits', 'range': [1108, 1124], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [1111, 1120], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1112, 1112], 'children': []}, {'type': 'Parameter', 'name': 'args', 'range': [1115, 1115], 'children': []}, {'type': 'Parameter', 'name': 'kwargs', 'range': [1119, 1119], 'children': []}]}, {'type': 'BlockStatement', 'name': 'body', 'range': [1122, 1124], 'children': [{'type': 'PassStatement', 'name': 'pass', 'range': [1123, 1123], 'children': []}]}]}]}
2025-01-08 09:17:31,498 - INFO - Starting Step 3: AST simplification
2025-01-08 09:17:38,310 - INFO - Step 2 result: {'type': 'Program', 'name': 'get_block_costs', 'range': [1166, 1204], 'children': [{'type': 'FunctionDeclaration', 'name': 'get_block_costs', 'range': [1166, 1202], 'children': [{'type': 'FunctionSignature', 'name': 'get_block_costs', 'range': [1166, 1181], 'children': [{'type': 'Keyword', 'name': 'def', 'range': [1166, 1166], 'children': []}, {'type': 'FunctionName', 'name': 'get_block_costs', 'range': [1167, 1167], 'children': []}, {'type': 'Parameters', 'name': '()', 'range': [1168, 1169], 'children': []}, {'type': 'ReturnType', 'name': '-> dict[str, list[BlockCost]]', 'range': [1170, 1180], 'children': [{'type': 'Keyword', 'name': '->', 'range': [1170, 1171], 'children': []}, {'type': 'Type', 'name': 'dict', 'range': [1172, 1172], 'children': []}, {'type': 'TypeParameters', 'name': '[str, list[BlockCost]]', 'range': [1173, 1180], 'children': [{'type': 'Type', 'name': 'str', 'range': [1174, 1174], 'children': []}, {'type': 'Type', 'name': 'list', 'range': [1176, 1176], 'children': []}, {'type': 'TypeParameters', 'name': '[BlockCost]', 'range': [1177, 1179], 'children': [{'type': 'Type', 'name': 'BlockCost', 'range': [1178, 1178], 'children': []}]}]}]}]}, {'type': 'FunctionBody', 'name': 'get_block_costs', 'range': [1182, 1202], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [1183, 1202], 'children': [{'type': 'Keyword', 'name': 'return', 'range': [1183, 1183], 'children': []}, {'type': 'Dictionary', 'name': '{block().id: costs for block, costs in BLOCK_COSTS.items()}', 'range': [1184, 1202], 'children': [{'type': 'DictionaryEntry', 'name': 'block().id: costs', 'range': [1185, 1191], 'children': [{'type': 'Key', 'name': 'block().id', 'range': [1185, 1189], 'children': [{'type': 'FunctionCall', 'name': 'block()', 'range': [1185, 1187], 'children': [{'type': 'FunctionName', 'name': 'block', 'range': [1185, 1185], 'children': []}]}, {'type': 'Attribute', 'name': '.id', 'range': [1188, 1189], 'children': []}]}, {'type': 'Value', 'name': 'costs', 'range': [1191, 1191], 'children': []}]}, {'type': 'Comprehension', 'name': 'for block, costs in BLOCK_COSTS.items()', 'range': [1192, 1201], 'children': [{'type': 'Keyword', 'name': 'for', 'range': [1192, 1192], 'children': []}, {'type': 'Variables', 'name': 'block, costs', 'range': [1193, 1195], 'children': []}, {'type': 'Keyword', 'name': 'in', 'range': [1196, 1196], 'children': []}, {'type': 'Expression', 'name': 'BLOCK_COSTS.items()', 'range': [1197, 1201], 'children': [{'type': 'Variable', 'name': 'BLOCK_COSTS', 'range': [1197, 1197], 'children': []}, {'type': 'Attribute', 'name': '.items', 'range': [1198, 1198], 'children': []}, {'type': 'FunctionCall', 'name': '()', 'range': [1199, 1201], 'children': []}]}]}]}]}]}]}]}
2025-01-08 09:17:38,313 - INFO - Starting Step 3: AST simplification
2025-01-08 09:17:47,013 - INFO - Step 2 result: {'type': 'Program', 'name': 'UserCreditBase', 'range': [91, 220], 'children': [{'type': 'FunctionDeclaration', 'name': '__init__', 'range': [98, 114], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [101, 101], 'children': []}, {'type': 'Parameter', 'name': 'num_user_credits_refill', 'range': [103, 103], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [105, 105], 'children': []}]}, {'type': 'Assignment', 'name': 'self.num_user_credits_refill', 'range': [109, 113], 'children': [{'type': 'Identifier', 'name': 'num_user_credits_refill', 'range': [113, 113], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'get_or_refill_credit', 'range': [119, 139], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [123, 123], 'children': []}, {'type': 'Parameter', 'name': 'user_id', 'range': [125, 125], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [127, 127], 'children': []}]}, {'type': 'ReturnType', 'name': 'int', 'range': [131, 131], 'children': []}, {'type': 'Docstring', 'name': 'Get the current credit for the user and refill if no transaction has been made in the current cycle.', 'range': [134, 136], 'children': []}, {'type': 'PassStatement', 'name': 'pass', 'range': [138, 138], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': 'spend_credits', 'range': [144, 193], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [149, 149], 'children': []}, {'type': 'Parameter', 'name': 'user_id', 'range': [152, 152], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [154, 154], 'children': []}]}, {'type': 'Parameter', 'name': 'user_credit', 'range': [157, 157], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [159, 159], 'children': []}]}, {'type': 'Parameter', 'name': 'block_id', 'range': [162, 162], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [164, 164], 'children': []}]}, {'type': 'Parameter', 'name': 'input_data', 'range': [167, 167], 'children': [{'type': 'TypeAnnotation', 'name': 'BlockInput', 'range': [169, 169], 'children': []}]}, {'type': 'Parameter', 'name': 'data_size', 'range': [172, 172], 'children': [{'type': 'TypeAnnotation', 'name': 'float', 'range': [174, 174], 'children': []}]}, {'type': 'Parameter', 'name': 'run_time', 'range': [177, 177], 'children': [{'type': 'TypeAnnotation', 'name': 'float', 'range': [179, 179], 'children': []}]}, {'type': 'ReturnType', 'name': 'int', 'range': [185, 185], 'children': []}, {'type': 'Docstring', 'name': 'Spend the credits for the user based on the block usage.', 'range': [188, 190], 'children': []}, {'type': 'PassStatement', 'name': 'pass', 'range': [192, 192], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': 'top_up_credits', 'range': [198, 219], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [202, 202], 'children': []}, {'type': 'Parameter', 'name': 'user_id', 'range': [204, 204], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [206, 206], 'children': []}]}, {'type': 'Parameter', 'name': 'amount', 'range': [208, 208], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [210, 210], 'children': []}]}, {'type': 'Docstring', 'name': 'Top up the credits for the user.', 'range': [214, 216], 'children': []}, {'type': 'PassStatement', 'name': 'pass', 'range': [218, 218], 'children': []}]}]}
2025-01-08 09:17:47,014 - INFO - Starting Step 3: AST simplification
2025-01-08 09:17:49,562 - INFO - Step 3 result: {'type': 'Program', 'name': 'get_user_credit_model', 'range': [1126, 1165], 'children': [{'type': 'FunctionDeclaration', 'name': 'get_user_credit_model', 'range': [1126, 1165], 'children': [{'type': 'ReturnType', 'name': 'UserCreditBase', 'range': [1130, 1132], 'children': []}, {'type': 'IfStatement', 'name': '', 'range': [1135, 1164], 'children': [{'type': 'Condition', 'name': '', 'range': [1136, 1145], 'children': [{'type': 'MemberExpression', 'name': 'config.enable_credit.lower', 'range': [1136, 1142], 'children': []}, {'type': 'ComparisonOperator', 'name': '==', 'range': [1143, 1144], 'children': []}, {'type': 'StringLiteral', 'name': '"true"', 'range': [1145, 1145], 'children': []}]}, {'type': 'ReturnStatement', 'name': '', 'range': [1148, 1154], 'children': [{'type': 'NewExpression', 'name': 'UserCredit', 'range': [1149, 1154], 'children': [{'type': 'MemberExpression', 'name': 'config.num_user_credits_refill', 'range': [1151, 1153], 'children': []}]}]}, {'type': 'ElseStatement', 'name': '', 'range': [1156, 1164], 'children': [{'type': 'ReturnStatement', 'name': '', 'range': [1159, 1163], 'children': [{'type': 'NewExpression', 'name': 'DisabledUserCredit', 'range': [1160, 1163], 'children': [{'type': 'NumericLiteral', 'name': '0', 'range': [1162, 1162], 'children': []}]}]}]}]}]}]}
2025-01-08 09:17:49,562 - INFO - Starting Step 4: AST normalization
2025-01-08 09:18:03,526 - INFO - Step 2 result: {'nodes': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 6], 'children': [{'type': 'FromImport', 'name': 'abc', 'range': [0, 1], 'children': []}, {'type': 'ImportList', 'name': '', 'range': [2, 5], 'children': [{'type': 'ImportSpecifier', 'name': 'ABC', 'range': [3, 3], 'children': []}, {'type': 'ImportSpecifier', 'name': 'abstractmethod', 'range': [5, 5], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [7, 13], 'children': [{'type': 'FromImport', 'name': 'datetime', 'range': [7, 8], 'children': []}, {'type': 'ImportList', 'name': '', 'range': [9, 12], 'children': [{'type': 'ImportSpecifier', 'name': 'datetime', 'range': [10, 10], 'children': []}, {'type': 'ImportSpecifier', 'name': 'timezone', 'range': [12, 12], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [15, 19], 'children': [{'type': 'FromImport', 'name': 'prisma', 'range': [15, 16], 'children': []}, {'type': 'ImportList', 'name': '', 'range': [17, 18], 'children': [{'type': 'ImportSpecifier', 'name': 'Json', 'range': [18, 18], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [20, 26], 'children': [{'type': 'FromImport', 'name': 'prisma.enums', 'range': [20, 23], 'children': []}, {'type': 'ImportList', 'name': '', 'range': [24, 25], 'children': [{'type': 'ImportSpecifier', 'name': 'CreditTransactionType', 'range': [25, 25], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [27, 33], 'children': [{'type': 'FromImport', 'name': 'prisma.errors', 'range': [27, 30], 'children': []}, {'type': 'ImportList', 'name': '', 'range': [31, 32], 'children': [{'type': 'ImportSpecifier', 'name': 'UniqueViolationError', 'range': [32, 32], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [34, 40], 'children': [{'type': 'FromImport', 'name': 'prisma.models', 'range': [34, 37], 'children': []}, {'type': 'ImportList', 'name': '', 'range': [38, 39], 'children': [{'type': 'ImportSpecifier', 'name': 'CreditTransaction', 'range': [39, 39], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [42, 54], 'children': [{'type': 'FromImport', 'name': 'backend.data.block', 'range': [42, 47], 'children': []}, {'type': 'ImportList', 'name': '', 'range': [48, 53], 'children': [{'type': 'ImportSpecifier', 'name': 'Block', 'range': [49, 49], 'children': []}, {'type': 'ImportSpecifier', 'name': 'BlockInput', 'range': [51, 51], 'children': []}, {'type': 'ImportSpecifier', 'name': 'get_block', 'range': [53, 53], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [55, 63], 'children': [{'type': 'FromImport', 'name': 'backend.data.block_cost_config', 'range': [55, 60], 'children': []}, {'type': 'ImportList', 'name': '', 'range': [61, 62], 'children': [{'type': 'ImportSpecifier', 'name': 'BLOCK_COSTS', 'range': [62, 62], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [64, 74], 'children': [{'type': 'FromImport', 'name': 'backend.data.cost', 'range': [64, 69], 'children': []}, {'type': 'ImportList', 'name': '', 'range': [70, 73], 'children': [{'type': 'ImportSpecifier', 'name': 'BlockCost', 'range': [71, 71], 'children': []}, {'type': 'ImportSpecifier', 'name': 'BlockCostType', 'range': [73, 73], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [75, 83], 'children': [{'type': 'FromImport', 'name': 'backend.util.settings', 'range': [75, 80], 'children': []}, {'type': 'ImportList', 'name': '', 'range': [81, 82], 'children': [{'type': 'ImportSpecifier', 'name': 'Config', 'range': [82, 82], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'config', 'range': [85, 90], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [86, 89], 'children': [{'type': 'Identifier', 'name': 'Config', 'range': [87, 87], 'children': []}]}]}]}
2025-01-08 09:18:03,527 - INFO - Starting Step 3: AST simplification
2025-01-08 09:18:06,532 - INFO - Step 3 result: {'type': 'Program', 'name': 'DisabledUserCredit', 'range': [1057, 1125], 'children': [{'type': 'FunctionDeclaration', 'name': 'get_or_refill_credit', 'range': [1064, 1084], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [1067, 1076], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1068, 1068], 'children': []}, {'type': 'Parameter', 'name': 'args', 'range': [1071, 1071], 'children': []}, {'type': 'Parameter', 'name': 'kwargs', 'range': [1075, 1075], 'children': []}]}, {'type': 'ReturnType', 'name': 'int', 'range': [1079, 1079], 'children': []}, {'type': 'BlockStatement', 'name': 'body', 'range': [1081, 1084], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [1082, 1083], 'children': [{'type': 'Literal', 'name': '0', 'range': [1083, 1083], 'children': []}]}]}]}, {'type': 'FunctionDeclaration', 'name': 'spend_credits', 'range': [1086, 1106], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [1089, 1098], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1090, 1090], 'children': []}, {'type': 'Parameter', 'name': 'args', 'range': [1093, 1093], 'children': []}, {'type': 'Parameter', 'name': 'kwargs', 'range': [1097, 1097], 'children': []}]}, {'type': 'ReturnType', 'name': 'int', 'range': [1101, 1101], 'children': []}, {'type': 'BlockStatement', 'name': 'body', 'range': [1103, 1106], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [1104, 1105], 'children': [{'type': 'Literal', 'name': '0', 'range': [1105, 1105], 'children': []}]}]}]}, {'type': 'FunctionDeclaration', 'name': 'top_up_credits', 'range': [1108, 1124], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [1111, 1120], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1112, 1112], 'children': []}, {'type': 'Parameter', 'name': 'args', 'range': [1115, 1115], 'children': []}, {'type': 'Parameter', 'name': 'kwargs', 'range': [1119, 1119], 'children': []}]}, {'type': 'BlockStatement', 'name': 'body', 'range': [1122, 1124], 'children': [{'type': 'PassStatement', 'name': 'pass', 'range': [1123, 1123], 'children': []}]}]}]}
2025-01-08 09:18:06,532 - INFO - Starting Step 4: AST normalization
2025-01-08 09:18:13,179 - INFO - Step 4 result: {'type': 'Program', 'name': 'get_user_credit_model', 'range': [1126, 1165], 'children': [{'type': 'FunctionDecl', 'name': 'get_user_credit_model', 'range': [1126, 1165], 'children': [{'type': 'ReturnType', 'name': 'UserCreditBase', 'range': [1130, 1132], 'children': []}, {'type': 'IfStatement', 'name': '', 'range': [1135, 1164], 'children': [{'type': 'Condition', 'name': '', 'range': [1136, 1145], 'children': [{'type': 'MemberExpression', 'name': 'config.enable_credit.lower', 'range': [1136, 1142], 'children': []}, {'type': 'BinaryExpression', 'name': '==', 'range': [1143, 1144], 'children': []}, {'type': 'Literal', 'name': '"true"', 'range': [1145, 1145], 'children': []}]}, {'type': 'ReturnStatement', 'name': '', 'range': [1148, 1154], 'children': [{'type': 'NewExpression', 'name': 'UserCredit', 'range': [1149, 1154], 'children': [{'type': 'MemberExpression', 'name': 'config.num_user_credits_refill', 'range': [1151, 1153], 'children': []}]}]}, {'type': 'ElseStatement', 'name': '', 'range': [1156, 1164], 'children': [{'type': 'ReturnStatement', 'name': '', 'range': [1159, 1163], 'children': [{'type': 'NewExpression', 'name': 'DisabledUserCredit', 'range': [1160, 1163], 'children': [{'type': 'Literal', 'name': '0', 'range': [1162, 1162], 'children': []}]}]}]}]}]}]}
2025-01-08 09:18:13,179 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:18:24,836 - INFO - Step 3 result: {'type': 'Program', 'name': 'get_block_costs', 'range': [1166, 1204], 'children': [{'type': 'FunctionDeclaration', 'name': 'get_block_costs', 'range': [1166, 1202], 'children': [{'type': 'FunctionSignature', 'name': 'get_block_costs', 'range': [1166, 1181], 'children': [{'type': 'Keyword', 'name': 'def', 'range': [1166, 1166], 'children': []}, {'type': 'FunctionName', 'name': 'get_block_costs', 'range': [1167, 1167], 'children': []}, {'type': 'Parameters', 'name': '()', 'range': [1168, 1169], 'children': []}, {'type': 'ReturnType', 'name': '-> dict[str, list[BlockCost]]', 'range': [1170, 1180], 'children': [{'type': 'Keyword', 'name': '->', 'range': [1170, 1171], 'children': []}, {'type': 'Type', 'name': 'dict', 'range': [1172, 1172], 'children': []}, {'type': 'TypeParameters', 'name': '[str, list[BlockCost]]', 'range': [1173, 1180], 'children': [{'type': 'Type', 'name': 'str', 'range': [1174, 1174], 'children': []}, {'type': 'Type', 'name': 'list', 'range': [1176, 1176], 'children': []}, {'type': 'TypeParameters', 'name': '[BlockCost]', 'range': [1177, 1179], 'children': [{'type': 'Type', 'name': 'BlockCost', 'range': [1178, 1178], 'children': []}]}]}]}]}, {'type': 'FunctionBody', 'name': 'get_block_costs', 'range': [1182, 1202], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [1183, 1202], 'children': [{'type': 'Keyword', 'name': 'return', 'range': [1183, 1183], 'children': []}, {'type': 'Dictionary', 'name': '{block().id: costs for block, costs in BLOCK_COSTS.items()}', 'range': [1184, 1202], 'children': [{'type': 'DictionaryEntry', 'name': 'block().id: costs', 'range': [1185, 1191], 'children': [{'type': 'Key', 'name': 'block().id', 'range': [1185, 1189], 'children': [{'type': 'FunctionCall', 'name': 'block()', 'range': [1185, 1187], 'children': [{'type': 'FunctionName', 'name': 'block', 'range': [1185, 1185], 'children': []}]}, {'type': 'Attribute', 'name': '.id', 'range': [1188, 1189], 'children': []}]}, {'type': 'Value', 'name': 'costs', 'range': [1191, 1191], 'children': []}]}, {'type': 'Comprehension', 'name': 'for block, costs in BLOCK_COSTS.items()', 'range': [1192, 1201], 'children': [{'type': 'Keyword', 'name': 'for', 'range': [1192, 1192], 'children': []}, {'type': 'Variables', 'name': 'block, costs', 'range': [1193, 1195], 'children': []}, {'type': 'Keyword', 'name': 'in', 'range': [1196, 1196], 'children': []}, {'type': 'Expression', 'name': 'BLOCK_COSTS.items()', 'range': [1197, 1201], 'children': [{'type': 'Variable', 'name': 'BLOCK_COSTS', 'range': [1197, 1197], 'children': []}, {'type': 'Attribute', 'name': '.items', 'range': [1198, 1198], 'children': []}, {'type': 'FunctionCall', 'name': '()', 'range': [1199, 1201], 'children': []}]}]}]}]}]}]}]}
2025-01-08 09:18:24,836 - INFO - Starting Step 4: AST normalization
2025-01-08 09:18:36,266 - INFO - Step 3 result: {'type': 'Program', 'name': 'UserCreditBase', 'range': [91, 220], 'children': [{'type': 'FunctionDeclaration', 'name': '__init__', 'range': [98, 114], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [101, 101], 'children': []}, {'type': 'Parameter', 'name': 'num_user_credits_refill', 'range': [103, 103], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [105, 105], 'children': []}]}, {'type': 'Assignment', 'name': 'self.num_user_credits_refill', 'range': [109, 113], 'children': [{'type': 'Identifier', 'name': 'num_user_credits_refill', 'range': [113, 113], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'get_or_refill_credit', 'range': [119, 139], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [123, 123], 'children': []}, {'type': 'Parameter', 'name': 'user_id', 'range': [125, 125], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [127, 127], 'children': []}]}, {'type': 'ReturnType', 'name': 'int', 'range': [131, 131], 'children': []}, {'type': 'Docstring', 'name': 'Get the current credit for the user and refill if no transaction has been made in the current cycle.', 'range': [134, 136], 'children': []}, {'type': 'PassStatement', 'name': 'pass', 'range': [138, 138], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': 'spend_credits', 'range': [144, 193], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [149, 149], 'children': []}, {'type': 'Parameter', 'name': 'user_id', 'range': [152, 152], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [154, 154], 'children': []}]}, {'type': 'Parameter', 'name': 'user_credit', 'range': [157, 157], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [159, 159], 'children': []}]}, {'type': 'Parameter', 'name': 'block_id', 'range': [162, 162], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [164, 164], 'children': []}]}, {'type': 'Parameter', 'name': 'input_data', 'range': [167, 167], 'children': [{'type': 'TypeAnnotation', 'name': 'BlockInput', 'range': [169, 169], 'children': []}]}, {'type': 'Parameter', 'name': 'data_size', 'range': [172, 172], 'children': [{'type': 'TypeAnnotation', 'name': 'float', 'range': [174, 174], 'children': []}]}, {'type': 'Parameter', 'name': 'run_time', 'range': [177, 177], 'children': [{'type': 'TypeAnnotation', 'name': 'float', 'range': [179, 179], 'children': []}]}, {'type': 'ReturnType', 'name': 'int', 'range': [185, 185], 'children': []}, {'type': 'Docstring', 'name': 'Spend the credits for the user based on the block usage.', 'range': [188, 190], 'children': []}, {'type': 'PassStatement', 'name': 'pass', 'range': [192, 192], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': 'top_up_credits', 'range': [198, 219], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [202, 202], 'children': []}, {'type': 'Parameter', 'name': 'user_id', 'range': [204, 204], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [206, 206], 'children': []}]}, {'type': 'Parameter', 'name': 'amount', 'range': [208, 208], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [210, 210], 'children': []}]}, {'type': 'Docstring', 'name': 'Top up the credits for the user.', 'range': [214, 216], 'children': []}, {'type': 'PassStatement', 'name': 'pass', 'range': [218, 218], 'children': []}]}]}
2025-01-08 09:18:36,267 - INFO - Starting Step 4: AST normalization
2025-01-08 09:18:39,948 - INFO - Step 5 result: {'type': 'Program', 'name': 'get_user_credit_model', 'range': [1126, 1165], 'children': [{'type': 'FunctionDecl', 'name': 'get_user_credit_model', 'range': [1126, 1165], 'children': [{'type': 'ReturnType', 'name': 'UserCreditBase', 'range': [1130, 1132], 'children': []}, {'type': 'IfStatement', 'name': '', 'range': [1135, 1164], 'children': [{'type': 'Condition', 'name': '', 'range': [1136, 1145], 'children': [{'type': 'MemberExpression', 'name': 'config.enable_credit.lower', 'range': [1136, 1142], 'children': []}, {'type': 'BinaryExpression', 'name': '==', 'range': [1143, 1144], 'children': []}, {'type': 'Literal', 'name': '"true"', 'range': [1145, 1145], 'children': []}]}, {'type': 'ReturnStatement', 'name': '', 'range': [1148, 1154], 'children': [{'type': 'NewExpression', 'name': 'UserCredit', 'range': [1149, 1154], 'children': [{'type': 'MemberExpression', 'name': 'config.num_user_credits_refill', 'range': [1151, 1153], 'children': []}]}]}, {'type': 'ElseStatement', 'name': '', 'range': [1156, 1164], 'children': [{'type': 'ReturnStatement', 'name': '', 'range': [1159, 1163], 'children': [{'type': 'NewExpression', 'name': 'DisabledUserCredit', 'range': [1160, 1163], 'children': [{'type': 'Literal', 'name': '0', 'range': [1162, 1162], 'children': []}]}]}]}]}]}]}
2025-01-08 09:18:39,948 - INFO - Completed main AST analysis flow
2025-01-08 09:18:39,949 - INFO - Successfully processed chunk
2025-01-08 09:18:46,076 - INFO - Step 4 result: {'type': 'Program', 'name': 'DisabledUserCredit', 'range': [1057, 1125], 'children': [{'type': 'FunctionDecl', 'name': 'get_or_refill_credit', 'range': [1064, 1084], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [1067, 1076], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1068, 1068], 'children': []}, {'type': 'Parameter', 'name': 'args', 'range': [1071, 1071], 'children': []}, {'type': 'Parameter', 'name': 'kwargs', 'range': [1075, 1075], 'children': []}]}, {'type': 'ReturnType', 'name': 'int', 'range': [1079, 1079], 'children': []}, {'type': 'BlockStatement', 'name': 'body', 'range': [1081, 1084], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [1082, 1083], 'children': [{'type': 'Literal', 'name': '0', 'range': [1083, 1083], 'children': []}]}]}]}, {'type': 'FunctionDecl', 'name': 'spend_credits', 'range': [1086, 1106], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [1089, 1098], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1090, 1090], 'children': []}, {'type': 'Parameter', 'name': 'args', 'range': [1093, 1093], 'children': []}, {'type': 'Parameter', 'name': 'kwargs', 'range': [1097, 1097], 'children': []}]}, {'type': 'ReturnType', 'name': 'int', 'range': [1101, 1101], 'children': []}, {'type': 'BlockStatement', 'name': 'body', 'range': [1103, 1106], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [1104, 1105], 'children': [{'type': 'Literal', 'name': '0', 'range': [1105, 1105], 'children': []}]}]}]}, {'type': 'FunctionDecl', 'name': 'top_up_credits', 'range': [1108, 1124], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [1111, 1120], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1112, 1112], 'children': []}, {'type': 'Parameter', 'name': 'args', 'range': [1115, 1115], 'children': []}, {'type': 'Parameter', 'name': 'kwargs', 'range': [1119, 1119], 'children': []}]}, {'type': 'BlockStatement', 'name': 'body', 'range': [1122, 1124], 'children': [{'type': 'PassStatement', 'name': 'pass', 'range': [1123, 1123], 'children': []}]}]}]}
2025-01-08 09:18:46,076 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:18:51,940 - INFO - Step 2 result: {'type': 'Program', 'name': 'UserCredit', 'range': [221, 1056], 'children': [{'type': 'FunctionDeclaration', 'name': 'get_or_refill_credit', 'range': [228, 490], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [232, 232], 'children': []}, {'type': 'Parameter', 'name': 'user_id', 'range': [234, 234], 'children': []}, {'type': 'ReturnType', 'name': 'int', 'range': [240, 240], 'children': []}, {'type': 'Block', 'name': 'get_or_refill_credit_block', 'range': [242, 490], 'children': [{'type': 'VariableDeclaration', 'name': 'cur_time', 'range': [243, 249], 'children': []}, {'type': 'VariableDeclaration', 'name': 'cur_month', 'range': [251, 276], 'children': []}, {'type': 'VariableDeclaration', 'name': 'nxt_month', 'range': [278, 320], 'children': []}, {'type': 'VariableDeclaration', 'name': 'user_credit', 'range': [323, 381], 'children': []}, {'type': 'IfStatement', 'name': 'if_user_credit', 'range': [384, 412], 'children': [{'type': 'Block', 'name': 'if_user_credit_block', 'range': [387, 412], 'children': [{'type': 'VariableDeclaration', 'name': 'credit_sum', 'range': [388, 402], 'children': []}, {'type': 'ReturnStatement', 'name': 'return_credit_sum', 'range': [403, 412], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'key', 'range': [414, 418], 'children': []}, {'type': 'TryStatement', 'name': 'try_create_transaction', 'range': [420, 484], 'children': [{'type': 'Block', 'name': 'try_create_transaction_block', 'range': [422, 473], 'children': [{'type': 'AwaitExpression', 'name': 'await_create', 'range': [423, 473], 'children': []}]}, {'type': 'CatchClause', 'name': 'catch_unique_violation', 'range': [474, 484], 'children': [{'type': 'Block', 'name': 'catch_unique_violation_block', 'range': [477, 484], 'children': [{'type': 'PassStatement', 'name': 'pass', 'range': [478, 478], 'children': []}]}]}]}, {'type': 'ReturnStatement', 'name': 'return_num_user_credits_refill', 'range': [486, 490], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'time_now', 'range': [492, 510], 'children': [{'type': 'ReturnStatement', 'name': 'return_datetime_now', 'range': [501, 510], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': '_block_usage_cost', 'range': [512, 687], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [516, 516], 'children': []}, {'type': 'Parameter', 'name': 'block', 'range': [519, 519], 'children': []}, {'type': 'Parameter', 'name': 'input_data', 'range': [524, 524], 'children': []}, {'type': 'Parameter', 'name': 'data_size', 'range': [529, 529], 'children': []}, {'type': 'Parameter', 'name': 'run_time', 'range': [534, 534], 'children': []}, {'type': 'ReturnType', 'name': 'tuple', 'range': [542, 542], 'children': []}, {'type': 'Block', 'name': '_block_usage_cost_block', 'range': [549, 687], 'children': [{'type': 'VariableDeclaration', 'name': 'block_costs', 'range': [550, 561], 'children': []}, {'type': 'IfStatement', 'name': 'if_not_block_costs', 'range': [562, 572], 'children': [{'type': 'Block', 'name': 'if_not_block_costs_block', 'range': [565, 572], 'children': [{'type': 'ReturnStatement', 'name': 'return_0', 'range': [567, 572], 'children': []}]}]}, {'type': 'ForStatement', 'name': 'for_block_cost_in_block_costs', 'range': [574, 680], 'children': [{'type': 'Block', 'name': 'for_block_cost_in_block_costs_block', 'range': [578, 680], 'children': [{'type': 'IfStatement', 'name': 'if_not_is_cost_filter_match', 'range': [580, 595], 'children': [{'type': 'Block', 'name': 'if_not_is_cost_filter_match_block', 'range': [583, 595], 'children': [{'type': 'ContinueStatement', 'name': 'continue', 'range': [594, 594], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if_cost_type_run', 'range': [597, 616], 'children': [{'type': 'Block', 'name': 'if_cost_type_run_block', 'range': [600, 616], 'children': [{'type': 'ReturnStatement', 'name': 'return_block_cost', 'range': [608, 616], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if_cost_type_second', 'range': [618, 648], 'children': [{'type': 'Block', 'name': 'if_cost_type_second_block', 'range': [621, 648], 'children': [{'type': 'ReturnStatement', 'name': 'return_int_run_time', 'range': [629, 648], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if_cost_type_byte', 'range': [650, 680], 'children': [{'type': 'Block', 'name': 'if_cost_type_byte_block', 'range': [653, 680], 'children': [{'type': 'ReturnStatement', 'name': 'return_int_data_size', 'range': [661, 680], 'children': []}]}]}]}]}, {'type': 'ReturnStatement', 'name': 'return_0', 'range': [682, 687], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': '_is_cost_filter_match', 'range': [689, 789], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [693, 693], 'children': []}, {'type': 'Parameter', 'name': 'cost_filter', 'range': [695, 695], 'children': []}, {'type': 'Parameter', 'name': 'input_data', 'range': [699, 699], 'children': []}, {'type': 'ReturnType', 'name': 'bool', 'range': [706, 706], 'children': []}, {'type': 'Block', 'name': '_is_cost_filter_match_block', 'range': [708, 789], 'children': [{'type': 'IfStatement', 'name': 'if_not_isinstance', 'range': [713, 736], 'children': [{'type': 'Block', 'name': 'if_not_isinstance_block', 'range': [716, 736], 'children': [{'type': 'ReturnStatement', 'name': 'return_cost_filter_equal_input_data', 'range': [731, 736], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return_all', 'range': [738, 789], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'spend_credits', 'range': [791, 994], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [796, 796], 'children': []}, {'type': 'Parameter', 'name': 'user_id', 'range': [799, 799], 'children': []}, {'type': 'Parameter', 'name': 'user_credit', 'range': [804, 804], 'children': []}, {'type': 'Parameter', 'name': 'block_id', 'range': [809, 809], 'children': []}, {'type': 'Parameter', 'name': 'input_data', 'range': [814, 814], 'children': []}, {'type': 'Parameter', 'name': 'data_size', 'range': [819, 819], 'children': []}, {'type': 'Parameter', 'name': 'run_time', 'range': [824, 824], 'children': []}, {'type': 'Parameter', 'name': 'validate_balance', 'range': [829, 829], 'children': []}, {'type': 'ReturnType', 'name': 'int', 'range': [839, 839], 'children': []}, {'type': 'Block', 'name': 'spend_credits_block', 'range': [841, 994], 'children': [{'type': 'VariableDeclaration', 'name': 'block', 'range': [842, 848], 'children': []}, {'type': 'IfStatement', 'name': 'if_not_block', 'range': [849, 860], 'children': [{'type': 'Block', 'name': 'if_not_block_block', 'range': [852, 860], 'children': [{'type': 'RaiseStatement', 'name': 'raise_value_error', 'range': [854, 860], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'cost', 'range': [862, 887], 'children': []}, {'type': 'IfStatement', 'name': 'if_cost_less_equal_0', 'range': [889, 898], 'children': [{'type': 'Block', 'name': 'if_cost_less_equal_0_block', 'range': [892, 898], 'children': [{'type': 'ReturnStatement', 'name': 'return_0', 'range': [896, 898], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if_validate_balance_and_user_credit_less_cost', 'range': [900, 914], 'children': [{'type': 'Block', 'name': 'if_validate_balance_and_user_credit_less_cost_block', 'range': [903, 914], 'children': [{'type': 'RaiseStatement', 'name': 'raise_value_error', 'range': [908, 914], 'children': []}]}]}, {'type': 'AwaitExpression', 'name': 'await_create', 'range': [916, 991], 'children': []}, {'type': 'ReturnStatement', 'name': 'return_cost', 'range': [992, 994], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'top_up_credits', 'range': [996, 1056], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1000, 1000], 'children': []}, {'type': 'Parameter', 'name': 'user_id', 'range': [1002, 1002], 'children': []}, {'type': 'Parameter', 'name': 'amount', 'range': [1006, 1006], 'children': []}, {'type': 'Block', 'name': 'top_up_credits_block', 'range': [1011, 1056], 'children': [{'type': 'AwaitExpression', 'name': 'await_create', 'range': [1012, 1055], 'children': []}]}]}]}
2025-01-08 09:18:51,940 - INFO - Starting Step 3: AST simplification
2025-01-08 09:19:01,601 - INFO - Step 3 result: {'nodes': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 6], 'children': [{'type': 'FromImport', 'name': 'abc', 'range': [0, 1], 'children': []}, {'type': 'ImportList', 'name': '', 'range': [2, 5], 'children': [{'type': 'ImportSpecifier', 'name': 'ABC', 'range': [3, 3], 'children': []}, {'type': 'ImportSpecifier', 'name': 'abstractmethod', 'range': [5, 5], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [7, 13], 'children': [{'type': 'FromImport', 'name': 'datetime', 'range': [7, 8], 'children': []}, {'type': 'ImportList', 'name': '', 'range': [9, 12], 'children': [{'type': 'ImportSpecifier', 'name': 'datetime', 'range': [10, 10], 'children': []}, {'type': 'ImportSpecifier', 'name': 'timezone', 'range': [12, 12], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [15, 19], 'children': [{'type': 'FromImport', 'name': 'prisma', 'range': [15, 16], 'children': []}, {'type': 'ImportList', 'name': '', 'range': [17, 18], 'children': [{'type': 'ImportSpecifier', 'name': 'Json', 'range': [18, 18], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [20, 26], 'children': [{'type': 'FromImport', 'name': 'prisma.enums', 'range': [20, 23], 'children': []}, {'type': 'ImportList', 'name': '', 'range': [24, 25], 'children': [{'type': 'ImportSpecifier', 'name': 'CreditTransactionType', 'range': [25, 25], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [27, 33], 'children': [{'type': 'FromImport', 'name': 'prisma.errors', 'range': [27, 30], 'children': []}, {'type': 'ImportList', 'name': '', 'range': [31, 32], 'children': [{'type': 'ImportSpecifier', 'name': 'UniqueViolationError', 'range': [32, 32], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [34, 40], 'children': [{'type': 'FromImport', 'name': 'prisma.models', 'range': [34, 37], 'children': []}, {'type': 'ImportList', 'name': '', 'range': [38, 39], 'children': [{'type': 'ImportSpecifier', 'name': 'CreditTransaction', 'range': [39, 39], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [42, 54], 'children': [{'type': 'FromImport', 'name': 'backend.data.block', 'range': [42, 47], 'children': []}, {'type': 'ImportList', 'name': '', 'range': [48, 53], 'children': [{'type': 'ImportSpecifier', 'name': 'Block', 'range': [49, 49], 'children': []}, {'type': 'ImportSpecifier', 'name': 'BlockInput', 'range': [51, 51], 'children': []}, {'type': 'ImportSpecifier', 'name': 'get_block', 'range': [53, 53], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [55, 63], 'children': [{'type': 'FromImport', 'name': 'backend.data.block_cost_config', 'range': [55, 60], 'children': []}, {'type': 'ImportList', 'name': '', 'range': [61, 62], 'children': [{'type': 'ImportSpecifier', 'name': 'BLOCK_COSTS', 'range': [62, 62], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [64, 74], 'children': [{'type': 'FromImport', 'name': 'backend.data.cost', 'range': [64, 69], 'children': []}, {'type': 'ImportList', 'name': '', 'range': [70, 73], 'children': [{'type': 'ImportSpecifier', 'name': 'BlockCost', 'range': [71, 71], 'children': []}, {'type': 'ImportSpecifier', 'name': 'BlockCostType', 'range': [73, 73], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [75, 83], 'children': [{'type': 'FromImport', 'name': 'backend.util.settings', 'range': [75, 80], 'children': []}, {'type': 'ImportList', 'name': '', 'range': [81, 82], 'children': [{'type': 'ImportSpecifier', 'name': 'Config', 'range': [82, 82], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'config', 'range': [85, 90], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [86, 89], 'children': [{'type': 'Identifier', 'name': 'Config', 'range': [87, 87], 'children': []}]}]}]}
2025-01-08 09:19:01,601 - INFO - Starting Step 4: AST normalization
2025-01-08 09:19:13,618 - INFO - Step 4 result: {'type': 'Program', 'name': 'get_block_costs', 'range': [1166, 1204], 'children': [{'type': 'FunctionDecl', 'name': 'get_block_costs', 'range': [1166, 1202], 'children': [{'type': 'FunctionSignature', 'name': 'get_block_costs', 'range': [1166, 1181], 'children': [{'type': 'Keyword', 'name': 'def', 'range': [1166, 1166], 'children': []}, {'type': 'Identifier', 'name': 'get_block_costs', 'range': [1167, 1167], 'children': []}, {'type': 'Parameters', 'name': '()', 'range': [1168, 1169], 'children': []}, {'type': 'ReturnType', 'name': '-> dict[str, list[BlockCost]]', 'range': [1170, 1180], 'children': [{'type': 'Keyword', 'name': '->', 'range': [1170, 1171], 'children': []}, {'type': 'Type', 'name': 'dict', 'range': [1172, 1172], 'children': []}, {'type': 'TypeParameters', 'name': '[str, list[BlockCost]]', 'range': [1173, 1180], 'children': [{'type': 'Type', 'name': 'str', 'range': [1174, 1174], 'children': []}, {'type': 'Type', 'name': 'list', 'range': [1176, 1176], 'children': []}, {'type': 'TypeParameters', 'name': '[BlockCost]', 'range': [1177, 1179], 'children': [{'type': 'Type', 'name': 'BlockCost', 'range': [1178, 1178], 'children': []}]}]}]}]}, {'type': 'FunctionBody', 'name': 'get_block_costs', 'range': [1182, 1202], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [1183, 1202], 'children': [{'type': 'Keyword', 'name': 'return', 'range': [1183, 1183], 'children': []}, {'type': 'Dictionary', 'name': '{block().id: costs for block, costs in BLOCK_COSTS.items()}', 'range': [1184, 1202], 'children': [{'type': 'DictionaryEntry', 'name': 'block().id: costs', 'range': [1185, 1191], 'children': [{'type': 'Key', 'name': 'block().id', 'range': [1185, 1189], 'children': [{'type': 'CallExpression', 'name': 'block()', 'range': [1185, 1187], 'children': [{'type': 'Identifier', 'name': 'block', 'range': [1185, 1185], 'children': []}]}, {'type': 'Attribute', 'name': '.id', 'range': [1188, 1189], 'children': []}]}, {'type': 'Value', 'name': 'costs', 'range': [1191, 1191], 'children': []}]}, {'type': 'Comprehension', 'name': 'for block, costs in BLOCK_COSTS.items()', 'range': [1192, 1201], 'children': [{'type': 'Keyword', 'name': 'for', 'range': [1192, 1192], 'children': []}, {'type': 'Variables', 'name': 'block, costs', 'range': [1193, 1195], 'children': []}, {'type': 'Keyword', 'name': 'in', 'range': [1196, 1196], 'children': []}, {'type': 'CallExpression', 'name': 'BLOCK_COSTS.items()', 'range': [1197, 1201], 'children': [{'type': 'Identifier', 'name': 'BLOCK_COSTS', 'range': [1197, 1197], 'children': []}, {'type': 'Attribute', 'name': '.items', 'range': [1198, 1198], 'children': []}, {'type': 'CallExpression', 'name': '()', 'range': [1199, 1201], 'children': []}]}]}]}]}]}]}]}
2025-01-08 09:19:13,618 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:19:22,267 - INFO - Step 5 result: {'type': 'Program', 'name': 'DisabledUserCredit', 'range': [1057, 1125], 'children': [{'type': 'FunctionDecl', 'name': 'get_or_refill_credit', 'range': [1064, 1084], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [1067, 1076], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1068, 1068], 'children': []}, {'type': 'Parameter', 'name': 'args', 'range': [1071, 1071], 'children': []}, {'type': 'Parameter', 'name': 'kwargs', 'range': [1075, 1075], 'children': []}]}, {'type': 'ReturnType', 'name': 'int', 'range': [1079, 1079], 'children': []}, {'type': 'BlockStatement', 'name': 'body', 'range': [1081, 1084], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [1082, 1083], 'children': [{'type': 'Literal', 'name': '0', 'range': [1083, 1083], 'children': []}]}]}]}, {'type': 'FunctionDecl', 'name': 'spend_credits', 'range': [1086, 1106], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [1089, 1098], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1090, 1090], 'children': []}, {'type': 'Parameter', 'name': 'args', 'range': [1093, 1093], 'children': []}, {'type': 'Parameter', 'name': 'kwargs', 'range': [1097, 1097], 'children': []}]}, {'type': 'ReturnType', 'name': 'int', 'range': [1101, 1101], 'children': []}, {'type': 'BlockStatement', 'name': 'body', 'range': [1103, 1106], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [1104, 1105], 'children': [{'type': 'Literal', 'name': '0', 'range': [1105, 1105], 'children': []}]}]}]}, {'type': 'FunctionDecl', 'name': 'top_up_credits', 'range': [1108, 1124], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [1111, 1120], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1112, 1112], 'children': []}, {'type': 'Parameter', 'name': 'args', 'range': [1115, 1115], 'children': []}, {'type': 'Parameter', 'name': 'kwargs', 'range': [1119, 1119], 'children': []}]}, {'type': 'BlockStatement', 'name': 'body', 'range': [1122, 1124], 'children': [{'type': 'PassStatement', 'name': 'pass', 'range': [1123, 1123], 'children': []}]}]}]}
2025-01-08 09:19:22,267 - INFO - Completed main AST analysis flow
2025-01-08 09:19:22,268 - INFO - Successfully processed chunk
2025-01-08 09:19:30,254 - INFO - Step 4 result: {'type': 'Program', 'name': 'UserCreditBase', 'range': [91, 220], 'children': [{'type': 'FunctionDecl', 'name': '__init__', 'range': [98, 114], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [101, 101], 'children': []}, {'type': 'Parameter', 'name': 'num_user_credits_refill', 'range': [103, 103], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [105, 105], 'children': []}]}, {'type': 'Assignment', 'name': 'self.num_user_credits_refill', 'range': [109, 113], 'children': [{'type': 'Identifier', 'name': 'num_user_credits_refill', 'range': [113, 113], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'get_or_refill_credit', 'range': [119, 139], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [123, 123], 'children': []}, {'type': 'Parameter', 'name': 'user_id', 'range': [125, 125], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [127, 127], 'children': []}]}, {'type': 'ReturnType', 'name': 'int', 'range': [131, 131], 'children': []}, {'type': 'Docstring', 'name': 'Get the current credit for the user and refill if no transaction has been made in the current cycle.', 'range': [134, 136], 'children': []}, {'type': 'PassStatement', 'name': 'pass', 'range': [138, 138], 'children': []}]}, {'type': 'FunctionDecl', 'name': 'spend_credits', 'range': [144, 193], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [149, 149], 'children': []}, {'type': 'Parameter', 'name': 'user_id', 'range': [152, 152], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [154, 154], 'children': []}]}, {'type': 'Parameter', 'name': 'user_credit', 'range': [157, 157], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [159, 159], 'children': []}]}, {'type': 'Parameter', 'name': 'block_id', 'range': [162, 162], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [164, 164], 'children': []}]}, {'type': 'Parameter', 'name': 'input_data', 'range': [167, 167], 'children': [{'type': 'TypeAnnotation', 'name': 'BlockInput', 'range': [169, 169], 'children': []}]}, {'type': 'Parameter', 'name': 'data_size', 'range': [172, 172], 'children': [{'type': 'TypeAnnotation', 'name': 'float', 'range': [174, 174], 'children': []}]}, {'type': 'Parameter', 'name': 'run_time', 'range': [177, 177], 'children': [{'type': 'TypeAnnotation', 'name': 'float', 'range': [179, 179], 'children': []}]}, {'type': 'ReturnType', 'name': 'int', 'range': [185, 185], 'children': []}, {'type': 'Docstring', 'name': 'Spend the credits for the user based on the block usage.', 'range': [188, 190], 'children': []}, {'type': 'PassStatement', 'name': 'pass', 'range': [192, 192], 'children': []}]}, {'type': 'FunctionDecl', 'name': 'top_up_credits', 'range': [198, 219], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [202, 202], 'children': []}, {'type': 'Parameter', 'name': 'user_id', 'range': [204, 204], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [206, 206], 'children': []}]}, {'type': 'Parameter', 'name': 'amount', 'range': [208, 208], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [210, 210], 'children': []}]}, {'type': 'Docstring', 'name': 'Top up the credits for the user.', 'range': [214, 216], 'children': []}, {'type': 'PassStatement', 'name': 'pass', 'range': [218, 218], 'children': []}]}]}
2025-01-08 09:19:30,254 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:19:57,631 - INFO - Step 5 result: {'type': 'Program', 'name': 'get_block_costs', 'range': [1166, 1204], 'children': [{'type': 'FunctionDecl', 'name': 'get_block_costs', 'range': [1166, 1202], 'children': [{'type': 'FunctionSignature', 'name': 'get_block_costs', 'range': [1166, 1181], 'children': [{'type': 'Keyword', 'name': 'def', 'range': [1166, 1166], 'children': []}, {'type': 'Identifier', 'name': 'get_block_costs', 'range': [1167, 1167], 'children': []}, {'type': 'Parameters', 'name': '()', 'range': [1168, 1169], 'children': []}, {'type': 'ReturnType', 'name': '-> dict[str, list[BlockCost]]', 'range': [1170, 1180], 'children': [{'type': 'Keyword', 'name': '->', 'range': [1170, 1171], 'children': []}, {'type': 'Type', 'name': 'dict', 'range': [1172, 1172], 'children': []}, {'type': 'TypeParameters', 'name': '[str, list[BlockCost]]', 'range': [1173, 1180], 'children': [{'type': 'Type', 'name': 'str', 'range': [1174, 1174], 'children': []}, {'type': 'Type', 'name': 'list', 'range': [1176, 1176], 'children': []}, {'type': 'TypeParameters', 'name': '[BlockCost]', 'range': [1177, 1179], 'children': [{'type': 'Type', 'name': 'BlockCost', 'range': [1178, 1178], 'children': []}]}]}]}]}, {'type': 'FunctionBody', 'name': 'get_block_costs', 'range': [1182, 1202], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [1183, 1202], 'children': [{'type': 'Keyword', 'name': 'return', 'range': [1183, 1183], 'children': []}, {'type': 'Dictionary', 'name': '{block().id: costs for block, costs in BLOCK_COSTS.items()}', 'range': [1184, 1202], 'children': [{'type': 'DictionaryEntry', 'name': 'block().id: costs', 'range': [1185, 1191], 'children': [{'type': 'Key', 'name': 'block().id', 'range': [1185, 1189], 'children': [{'type': 'CallExpression', 'name': 'block()', 'range': [1185, 1187], 'children': [{'type': 'Identifier', 'name': 'block', 'range': [1185, 1185], 'children': []}]}, {'type': 'Attribute', 'name': '.id', 'range': [1188, 1189], 'children': []}]}, {'type': 'Value', 'name': 'costs', 'range': [1191, 1191], 'children': []}]}, {'type': 'Comprehension', 'name': 'for block, costs in BLOCK_COSTS.items()', 'range': [1192, 1201], 'children': [{'type': 'Keyword', 'name': 'for', 'range': [1192, 1192], 'children': []}, {'type': 'Variables', 'name': 'block, costs', 'range': [1193, 1195], 'children': []}, {'type': 'Keyword', 'name': 'in', 'range': [1196, 1196], 'children': []}, {'type': 'CallExpression', 'name': 'BLOCK_COSTS.items()', 'range': [1197, 1201], 'children': [{'type': 'Identifier', 'name': 'BLOCK_COSTS', 'range': [1197, 1197], 'children': []}, {'type': 'Attribute', 'name': '.items', 'range': [1198, 1198], 'children': []}, {'type': 'CallExpression', 'name': '()', 'range': [1199, 1201], 'children': []}]}]}]}]}]}]}]}
2025-01-08 09:19:57,631 - INFO - Completed main AST analysis flow
2025-01-08 09:19:57,632 - INFO - Successfully processed chunk
2025-01-08 09:19:58,496 - INFO - Step 4 result: {'nodes': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 6], 'children': [{'type': 'FromImport', 'name': 'abc', 'range': [0, 1], 'children': []}, {'type': 'ImportList', 'name': '', 'range': [2, 5], 'children': [{'type': 'ImportSpecifier', 'name': 'ABC', 'range': [3, 3], 'children': []}, {'type': 'ImportSpecifier', 'name': 'abstractmethod', 'range': [5, 5], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [7, 13], 'children': [{'type': 'FromImport', 'name': 'datetime', 'range': [7, 8], 'children': []}, {'type': 'ImportList', 'name': '', 'range': [9, 12], 'children': [{'type': 'ImportSpecifier', 'name': 'datetime', 'range': [10, 10], 'children': []}, {'type': 'ImportSpecifier', 'name': 'timezone', 'range': [12, 12], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [15, 19], 'children': [{'type': 'FromImport', 'name': 'prisma', 'range': [15, 16], 'children': []}, {'type': 'ImportList', 'name': '', 'range': [17, 18], 'children': [{'type': 'ImportSpecifier', 'name': 'Json', 'range': [18, 18], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [20, 26], 'children': [{'type': 'FromImport', 'name': 'prisma.enums', 'range': [20, 23], 'children': []}, {'type': 'ImportList', 'name': '', 'range': [24, 25], 'children': [{'type': 'ImportSpecifier', 'name': 'CreditTransactionType', 'range': [25, 25], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [27, 33], 'children': [{'type': 'FromImport', 'name': 'prisma.errors', 'range': [27, 30], 'children': []}, {'type': 'ImportList', 'name': '', 'range': [31, 32], 'children': [{'type': 'ImportSpecifier', 'name': 'UniqueViolationError', 'range': [32, 32], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [34, 40], 'children': [{'type': 'FromImport', 'name': 'prisma.models', 'range': [34, 37], 'children': []}, {'type': 'ImportList', 'name': '', 'range': [38, 39], 'children': [{'type': 'ImportSpecifier', 'name': 'CreditTransaction', 'range': [39, 39], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [42, 54], 'children': [{'type': 'FromImport', 'name': 'backend.data.block', 'range': [42, 47], 'children': []}, {'type': 'ImportList', 'name': '', 'range': [48, 53], 'children': [{'type': 'ImportSpecifier', 'name': 'Block', 'range': [49, 49], 'children': []}, {'type': 'ImportSpecifier', 'name': 'BlockInput', 'range': [51, 51], 'children': []}, {'type': 'ImportSpecifier', 'name': 'get_block', 'range': [53, 53], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [55, 63], 'children': [{'type': 'FromImport', 'name': 'backend.data.block_cost_config', 'range': [55, 60], 'children': []}, {'type': 'ImportList', 'name': '', 'range': [61, 62], 'children': [{'type': 'ImportSpecifier', 'name': 'BLOCK_COSTS', 'range': [62, 62], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [64, 74], 'children': [{'type': 'FromImport', 'name': 'backend.data.cost', 'range': [64, 69], 'children': []}, {'type': 'ImportList', 'name': '', 'range': [70, 73], 'children': [{'type': 'ImportSpecifier', 'name': 'BlockCost', 'range': [71, 71], 'children': []}, {'type': 'ImportSpecifier', 'name': 'BlockCostType', 'range': [73, 73], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [75, 83], 'children': [{'type': 'FromImport', 'name': 'backend.util.settings', 'range': [75, 80], 'children': []}, {'type': 'ImportList', 'name': '', 'range': [81, 82], 'children': [{'type': 'ImportSpecifier', 'name': 'Config', 'range': [82, 82], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'config', 'range': [85, 90], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [86, 89], 'children': [{'type': 'Identifier', 'name': 'Config', 'range': [87, 87], 'children': []}]}]}]}
2025-01-08 09:19:58,497 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:20:22,327 - INFO - Step 5 result: {'type': 'Program', 'name': 'UserCreditBase', 'range': [91, 220], 'children': [{'type': 'FunctionDecl', 'name': '__init__', 'range': [98, 114], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [101, 101], 'children': []}, {'type': 'Parameter', 'name': 'num_user_credits_refill', 'range': [103, 103], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [105, 105], 'children': []}]}, {'type': 'Assignment', 'name': 'self.num_user_credits_refill', 'range': [109, 113], 'children': [{'type': 'Identifier', 'name': 'num_user_credits_refill', 'range': [113, 113], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'get_or_refill_credit', 'range': [119, 139], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [123, 123], 'children': []}, {'type': 'Parameter', 'name': 'user_id', 'range': [125, 125], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [127, 127], 'children': []}]}, {'type': 'ReturnType', 'name': 'int', 'range': [131, 131], 'children': []}, {'type': 'Docstring', 'name': 'Get the current credit for the user and refill if no transaction has been made in the current cycle.', 'range': [134, 136], 'children': []}, {'type': 'PassStatement', 'name': 'pass', 'range': [138, 138], 'children': []}]}, {'type': 'FunctionDecl', 'name': 'spend_credits', 'range': [144, 193], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [149, 149], 'children': []}, {'type': 'Parameter', 'name': 'user_id', 'range': [152, 152], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [154, 154], 'children': []}]}, {'type': 'Parameter', 'name': 'user_credit', 'range': [157, 157], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [159, 159], 'children': []}]}, {'type': 'Parameter', 'name': 'block_id', 'range': [162, 162], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [164, 164], 'children': []}]}, {'type': 'Parameter', 'name': 'input_data', 'range': [167, 167], 'children': [{'type': 'TypeAnnotation', 'name': 'BlockInput', 'range': [169, 169], 'children': []}]}, {'type': 'Parameter', 'name': 'data_size', 'range': [172, 172], 'children': [{'type': 'TypeAnnotation', 'name': 'float', 'range': [174, 174], 'children': []}]}, {'type': 'Parameter', 'name': 'run_time', 'range': [177, 177], 'children': [{'type': 'TypeAnnotation', 'name': 'float', 'range': [179, 179], 'children': []}]}, {'type': 'ReturnType', 'name': 'int', 'range': [185, 185], 'children': []}, {'type': 'Docstring', 'name': 'Spend the credits for the user based on the block usage.', 'range': [188, 190], 'children': []}, {'type': 'PassStatement', 'name': 'pass', 'range': [192, 192], 'children': []}]}, {'type': 'FunctionDecl', 'name': 'top_up_credits', 'range': [198, 219], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [202, 202], 'children': []}, {'type': 'Parameter', 'name': 'user_id', 'range': [204, 204], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [206, 206], 'children': []}]}, {'type': 'Parameter', 'name': 'amount', 'range': [208, 208], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [210, 210], 'children': []}]}, {'type': 'Docstring', 'name': 'Top up the credits for the user.', 'range': [214, 216], 'children': []}, {'type': 'PassStatement', 'name': 'pass', 'range': [218, 218], 'children': []}]}]}
2025-01-08 09:20:22,327 - INFO - Completed main AST analysis flow
2025-01-08 09:20:22,327 - INFO - Successfully processed chunk
2025-01-08 09:20:43,951 - INFO - Step 3 result: {'type': 'Program', 'name': 'UserCredit', 'range': [221, 1056], 'children': [{'type': 'FunctionDeclaration', 'name': 'get_or_refill_credit', 'range': [228, 490], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [232, 232], 'children': []}, {'type': 'Parameter', 'name': 'user_id', 'range': [234, 234], 'children': []}, {'type': 'ReturnType', 'name': 'int', 'range': [240, 240], 'children': []}, {'type': 'Block', 'name': 'get_or_refill_credit_block', 'range': [242, 490], 'children': [{'type': 'VariableDeclaration', 'name': 'cur_time', 'range': [243, 249], 'children': []}, {'type': 'VariableDeclaration', 'name': 'cur_month', 'range': [251, 276], 'children': []}, {'type': 'VariableDeclaration', 'name': 'nxt_month', 'range': [278, 320], 'children': []}, {'type': 'VariableDeclaration', 'name': 'user_credit', 'range': [323, 381], 'children': []}, {'type': 'IfStatement', 'name': 'if_user_credit', 'range': [384, 412], 'children': [{'type': 'Block', 'name': 'if_user_credit_block', 'range': [387, 412], 'children': [{'type': 'VariableDeclaration', 'name': 'credit_sum', 'range': [388, 402], 'children': []}, {'type': 'ReturnStatement', 'name': 'return_credit_sum', 'range': [403, 412], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'key', 'range': [414, 418], 'children': []}, {'type': 'TryStatement', 'name': 'try_create_transaction', 'range': [420, 484], 'children': [{'type': 'Block', 'name': 'try_create_transaction_block', 'range': [422, 473], 'children': [{'type': 'AwaitExpression', 'name': 'await_create', 'range': [423, 473], 'children': []}]}, {'type': 'CatchClause', 'name': 'catch_unique_violation', 'range': [474, 484], 'children': [{'type': 'Block', 'name': 'catch_unique_violation_block', 'range': [477, 484], 'children': [{'type': 'PassStatement', 'name': 'pass', 'range': [478, 478], 'children': []}]}]}]}, {'type': 'ReturnStatement', 'name': 'return_num_user_credits_refill', 'range': [486, 490], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'time_now', 'range': [492, 510], 'children': [{'type': 'ReturnStatement', 'name': 'return_datetime_now', 'range': [501, 510], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': '_block_usage_cost', 'range': [512, 687], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [516, 516], 'children': []}, {'type': 'Parameter', 'name': 'block', 'range': [519, 519], 'children': []}, {'type': 'Parameter', 'name': 'input_data', 'range': [524, 524], 'children': []}, {'type': 'Parameter', 'name': 'data_size', 'range': [529, 529], 'children': []}, {'type': 'Parameter', 'name': 'run_time', 'range': [534, 534], 'children': []}, {'type': 'ReturnType', 'name': 'tuple', 'range': [542, 542], 'children': []}, {'type': 'Block', 'name': '_block_usage_cost_block', 'range': [549, 687], 'children': [{'type': 'VariableDeclaration', 'name': 'block_costs', 'range': [550, 561], 'children': []}, {'type': 'IfStatement', 'name': 'if_not_block_costs', 'range': [562, 572], 'children': [{'type': 'Block', 'name': 'if_not_block_costs_block', 'range': [565, 572], 'children': [{'type': 'ReturnStatement', 'name': 'return_0', 'range': [567, 572], 'children': []}]}]}, {'type': 'ForStatement', 'name': 'for_block_cost_in_block_costs', 'range': [574, 680], 'children': [{'type': 'Block', 'name': 'for_block_cost_in_block_costs_block', 'range': [578, 680], 'children': [{'type': 'IfStatement', 'name': 'if_not_is_cost_filter_match', 'range': [580, 595], 'children': [{'type': 'Block', 'name': 'if_not_is_cost_filter_match_block', 'range': [583, 595], 'children': [{'type': 'ContinueStatement', 'name': 'continue', 'range': [594, 594], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if_cost_type_run', 'range': [597, 616], 'children': [{'type': 'Block', 'name': 'if_cost_type_run_block', 'range': [600, 616], 'children': [{'type': 'ReturnStatement', 'name': 'return_block_cost', 'range': [608, 616], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if_cost_type_second', 'range': [618, 648], 'children': [{'type': 'Block', 'name': 'if_cost_type_second_block', 'range': [621, 648], 'children': [{'type': 'ReturnStatement', 'name': 'return_int_run_time', 'range': [629, 648], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if_cost_type_byte', 'range': [650, 680], 'children': [{'type': 'Block', 'name': 'if_cost_type_byte_block', 'range': [653, 680], 'children': [{'type': 'ReturnStatement', 'name': 'return_int_data_size', 'range': [661, 680], 'children': []}]}]}]}]}, {'type': 'ReturnStatement', 'name': 'return_0', 'range': [682, 687], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': '_is_cost_filter_match', 'range': [689, 789], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [693, 693], 'children': []}, {'type': 'Parameter', 'name': 'cost_filter', 'range': [695, 695], 'children': []}, {'type': 'Parameter', 'name': 'input_data', 'range': [699, 699], 'children': []}, {'type': 'ReturnType', 'name': 'bool', 'range': [706, 706], 'children': []}, {'type': 'Block', 'name': '_is_cost_filter_match_block', 'range': [708, 789], 'children': [{'type': 'IfStatement', 'name': 'if_not_isinstance', 'range': [713, 736], 'children': [{'type': 'Block', 'name': 'if_not_isinstance_block', 'range': [716, 736], 'children': [{'type': 'ReturnStatement', 'name': 'return_cost_filter_equal_input_data', 'range': [731, 736], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return_all', 'range': [738, 789], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'spend_credits', 'range': [791, 994], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [796, 796], 'children': []}, {'type': 'Parameter', 'name': 'user_id', 'range': [799, 799], 'children': []}, {'type': 'Parameter', 'name': 'user_credit', 'range': [804, 804], 'children': []}, {'type': 'Parameter', 'name': 'block_id', 'range': [809, 809], 'children': []}, {'type': 'Parameter', 'name': 'input_data', 'range': [814, 814], 'children': []}, {'type': 'Parameter', 'name': 'data_size', 'range': [819, 819], 'children': []}, {'type': 'Parameter', 'name': 'run_time', 'range': [824, 824], 'children': []}, {'type': 'Parameter', 'name': 'validate_balance', 'range': [829, 829], 'children': []}, {'type': 'ReturnType', 'name': 'int', 'range': [839, 839], 'children': []}, {'type': 'Block', 'name': 'spend_credits_block', 'range': [841, 994], 'children': [{'type': 'VariableDeclaration', 'name': 'block', 'range': [842, 848], 'children': []}, {'type': 'IfStatement', 'name': 'if_not_block', 'range': [849, 860], 'children': [{'type': 'Block', 'name': 'if_not_block_block', 'range': [852, 860], 'children': [{'type': 'RaiseStatement', 'name': 'raise_value_error', 'range': [854, 860], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'cost', 'range': [862, 887], 'children': []}, {'type': 'IfStatement', 'name': 'if_cost_less_equal_0', 'range': [889, 898], 'children': [{'type': 'Block', 'name': 'if_cost_less_equal_0_block', 'range': [892, 898], 'children': [{'type': 'ReturnStatement', 'name': 'return_0', 'range': [896, 898], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if_validate_balance_and_user_credit_less_cost', 'range': [900, 914], 'children': [{'type': 'Block', 'name': 'if_validate_balance_and_user_credit_less_cost_block', 'range': [903, 914], 'children': [{'type': 'RaiseStatement', 'name': 'raise_value_error', 'range': [908, 914], 'children': []}]}]}, {'type': 'AwaitExpression', 'name': 'await_create', 'range': [916, 991], 'children': []}, {'type': 'ReturnStatement', 'name': 'return_cost', 'range': [992, 994], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'top_up_credits', 'range': [996, 1056], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1000, 1000], 'children': []}, {'type': 'Parameter', 'name': 'user_id', 'range': [1002, 1002], 'children': []}, {'type': 'Parameter', 'name': 'amount', 'range': [1006, 1006], 'children': []}, {'type': 'Block', 'name': 'top_up_credits_block', 'range': [1011, 1056], 'children': [{'type': 'AwaitExpression', 'name': 'await_create', 'range': [1012, 1055], 'children': []}]}]}]}
2025-01-08 09:20:43,951 - INFO - Starting Step 4: AST normalization
2025-01-08 09:21:04,187 - INFO - Step 5 result: {'type': 'Program', 'name': 'MainProgram', 'range': [0, 90], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 6], 'children': [{'type': 'FromImport', 'name': 'abc', 'range': [0, 1], 'children': []}, {'type': 'ImportList', 'name': '', 'range': [2, 5], 'children': [{'type': 'ImportSpecifier', 'name': 'ABC', 'range': [3, 3], 'children': []}, {'type': 'ImportSpecifier', 'name': 'abstractmethod', 'range': [5, 5], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [7, 13], 'children': [{'type': 'FromImport', 'name': 'datetime', 'range': [7, 8], 'children': []}, {'type': 'ImportList', 'name': '', 'range': [9, 12], 'children': [{'type': 'ImportSpecifier', 'name': 'datetime', 'range': [10, 10], 'children': []}, {'type': 'ImportSpecifier', 'name': 'timezone', 'range': [12, 12], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [15, 19], 'children': [{'type': 'FromImport', 'name': 'prisma', 'range': [15, 16], 'children': []}, {'type': 'ImportList', 'name': '', 'range': [17, 18], 'children': [{'type': 'ImportSpecifier', 'name': 'Json', 'range': [18, 18], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [20, 26], 'children': [{'type': 'FromImport', 'name': 'prisma.enums', 'range': [20, 23], 'children': []}, {'type': 'ImportList', 'name': '', 'range': [24, 25], 'children': [{'type': 'ImportSpecifier', 'name': 'CreditTransactionType', 'range': [25, 25], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [27, 33], 'children': [{'type': 'FromImport', 'name': 'prisma.errors', 'range': [27, 30], 'children': []}, {'type': 'ImportList', 'name': '', 'range': [31, 32], 'children': [{'type': 'ImportSpecifier', 'name': 'UniqueViolationError', 'range': [32, 32], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [34, 40], 'children': [{'type': 'FromImport', 'name': 'prisma.models', 'range': [34, 37], 'children': []}, {'type': 'ImportList', 'name': '', 'range': [38, 39], 'children': [{'type': 'ImportSpecifier', 'name': 'CreditTransaction', 'range': [39, 39], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [42, 54], 'children': [{'type': 'FromImport', 'name': 'backend.data.block', 'range': [42, 47], 'children': []}, {'type': 'ImportList', 'name': '', 'range': [48, 53], 'children': [{'type': 'ImportSpecifier', 'name': 'Block', 'range': [49, 49], 'children': []}, {'type': 'ImportSpecifier', 'name': 'BlockInput', 'range': [51, 51], 'children': []}, {'type': 'ImportSpecifier', 'name': 'get_block', 'range': [53, 53], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [55, 63], 'children': [{'type': 'FromImport', 'name': 'backend.data.block_cost_config', 'range': [55, 60], 'children': []}, {'type': 'ImportList', 'name': '', 'range': [61, 62], 'children': [{'type': 'ImportSpecifier', 'name': 'BLOCK_COSTS', 'range': [62, 62], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [64, 74], 'children': [{'type': 'FromImport', 'name': 'backend.data.cost', 'range': [64, 69], 'children': []}, {'type': 'ImportList', 'name': '', 'range': [70, 73], 'children': [{'type': 'ImportSpecifier', 'name': 'BlockCost', 'range': [71, 71], 'children': []}, {'type': 'ImportSpecifier', 'name': 'BlockCostType', 'range': [73, 73], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [75, 83], 'children': [{'type': 'FromImport', 'name': 'backend.util.settings', 'range': [75, 80], 'children': []}, {'type': 'ImportList', 'name': '', 'range': [81, 82], 'children': [{'type': 'ImportSpecifier', 'name': 'Config', 'range': [82, 82], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'config', 'range': [85, 90], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [86, 89], 'children': [{'type': 'Identifier', 'name': 'Config', 'range': [87, 87], 'children': []}]}]}]}
2025-01-08 09:21:04,187 - INFO - Completed main AST analysis flow
2025-01-08 09:21:04,188 - INFO - Successfully processed chunk
2025-01-08 09:22:36,152 - INFO - Step 4 result: {'type': 'Program', 'name': 'UserCredit', 'range': [221, 1056], 'children': [{'type': 'FunctionDecl', 'name': 'get_or_refill_credit', 'range': [228, 490], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [232, 232], 'children': []}, {'type': 'Parameter', 'name': 'user_id', 'range': [234, 234], 'children': []}, {'type': 'ReturnType', 'name': 'int', 'range': [240, 240], 'children': []}, {'type': 'Block', 'name': 'get_or_refill_credit_block', 'range': [242, 490], 'children': [{'type': 'VariableDecl', 'name': 'cur_time', 'range': [243, 249], 'children': []}, {'type': 'VariableDecl', 'name': 'cur_month', 'range': [251, 276], 'children': []}, {'type': 'VariableDecl', 'name': 'nxt_month', 'range': [278, 320], 'children': []}, {'type': 'VariableDecl', 'name': 'user_credit', 'range': [323, 381], 'children': []}, {'type': 'IfStatement', 'name': 'if_user_credit', 'range': [384, 412], 'children': [{'type': 'Block', 'name': 'if_user_credit_block', 'range': [387, 412], 'children': [{'type': 'VariableDecl', 'name': 'credit_sum', 'range': [388, 402], 'children': []}, {'type': 'ReturnStatement', 'name': 'return_credit_sum', 'range': [403, 412], 'children': []}]}]}, {'type': 'VariableDecl', 'name': 'key', 'range': [414, 418], 'children': []}, {'type': 'TryStatement', 'name': 'try_create_transaction', 'range': [420, 484], 'children': [{'type': 'Block', 'name': 'try_create_transaction_block', 'range': [422, 473], 'children': [{'type': 'AwaitExpression', 'name': 'await_create', 'range': [423, 473], 'children': []}]}, {'type': 'CatchClause', 'name': 'catch_unique_violation', 'range': [474, 484], 'children': [{'type': 'Block', 'name': 'catch_unique_violation_block', 'range': [477, 484], 'children': [{'type': 'PassStatement', 'name': 'pass', 'range': [478, 478], 'children': []}]}]}]}, {'type': 'ReturnStatement', 'name': 'return_num_user_credits_refill', 'range': [486, 490], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'time_now', 'range': [492, 510], 'children': [{'type': 'ReturnStatement', 'name': 'return_datetime_now', 'range': [501, 510], 'children': []}]}, {'type': 'FunctionDecl', 'name': '_block_usage_cost', 'range': [512, 687], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [516, 516], 'children': []}, {'type': 'Parameter', 'name': 'block', 'range': [519, 519], 'children': []}, {'type': 'Parameter', 'name': 'input_data', 'range': [524, 524], 'children': []}, {'type': 'Parameter', 'name': 'data_size', 'range': [529, 529], 'children': []}, {'type': 'Parameter', 'name': 'run_time', 'range': [534, 534], 'children': []}, {'type': 'ReturnType', 'name': 'tuple', 'range': [542, 542], 'children': []}, {'type': 'Block', 'name': '_block_usage_cost_block', 'range': [549, 687], 'children': [{'type': 'VariableDecl', 'name': 'block_costs', 'range': [550, 561], 'children': []}, {'type': 'IfStatement', 'name': 'if_not_block_costs', 'range': [562, 572], 'children': [{'type': 'Block', 'name': 'if_not_block_costs_block', 'range': [565, 572], 'children': [{'type': 'ReturnStatement', 'name': 'return_0', 'range': [567, 572], 'children': []}]}]}, {'type': 'ForStatement', 'name': 'for_block_cost_in_block_costs', 'range': [574, 680], 'children': [{'type': 'Block', 'name': 'for_block_cost_in_block_costs_block', 'range': [578, 680], 'children': [{'type': 'IfStatement', 'name': 'if_not_is_cost_filter_match', 'range': [580, 595], 'children': [{'type': 'Block', 'name': 'if_not_is_cost_filter_match_block', 'range': [583, 595], 'children': [{'type': 'ContinueStatement', 'name': 'continue', 'range': [594, 594], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if_cost_type_run', 'range': [597, 616], 'children': [{'type': 'Block', 'name': 'if_cost_type_run_block', 'range': [600, 616], 'children': [{'type': 'ReturnStatement', 'name': 'return_block_cost', 'range': [608, 616], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if_cost_type_second', 'range': [618, 648], 'children': [{'type': 'Block', 'name': 'if_cost_type_second_block', 'range': [621, 648], 'children': [{'type': 'ReturnStatement', 'name': 'return_int_run_time', 'range': [629, 648], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if_cost_type_byte', 'range': [650, 680], 'children': [{'type': 'Block', 'name': 'if_cost_type_byte_block', 'range': [653, 680], 'children': [{'type': 'ReturnStatement', 'name': 'return_int_data_size', 'range': [661, 680], 'children': []}]}]}]}]}, {'type': 'ReturnStatement', 'name': 'return_0', 'range': [682, 687], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': '_is_cost_filter_match', 'range': [689, 789], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [693, 693], 'children': []}, {'type': 'Parameter', 'name': 'cost_filter', 'range': [695, 695], 'children': []}, {'type': 'Parameter', 'name': 'input_data', 'range': [699, 699], 'children': []}, {'type': 'ReturnType', 'name': 'bool', 'range': [706, 706], 'children': []}, {'type': 'Block', 'name': '_is_cost_filter_match_block', 'range': [708, 789], 'children': [{'type': 'IfStatement', 'name': 'if_not_isinstance', 'range': [713, 736], 'children': [{'type': 'Block', 'name': 'if_not_isinstance_block', 'range': [716, 736], 'children': [{'type': 'ReturnStatement', 'name': 'return_cost_filter_equal_input_data', 'range': [731, 736], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return_all', 'range': [738, 789], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'spend_credits', 'range': [791, 994], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [796, 796], 'children': []}, {'type': 'Parameter', 'name': 'user_id', 'range': [799, 799], 'children': []}, {'type': 'Parameter', 'name': 'user_credit', 'range': [804, 804], 'children': []}, {'type': 'Parameter', 'name': 'block_id', 'range': [809, 809], 'children': []}, {'type': 'Parameter', 'name': 'input_data', 'range': [814, 814], 'children': []}, {'type': 'Parameter', 'name': 'data_size', 'range': [819, 819], 'children': []}, {'type': 'Parameter', 'name': 'run_time', 'range': [824, 824], 'children': []}, {'type': 'Parameter', 'name': 'validate_balance', 'range': [829, 829], 'children': []}, {'type': 'ReturnType', 'name': 'int', 'range': [839, 839], 'children': []}, {'type': 'Block', 'name': 'spend_credits_block', 'range': [841, 994], 'children': [{'type': 'VariableDecl', 'name': 'block', 'range': [842, 848], 'children': []}, {'type': 'IfStatement', 'name': 'if_not_block', 'range': [849, 860], 'children': [{'type': 'Block', 'name': 'if_not_block_block', 'range': [852, 860], 'children': [{'type': 'RaiseStatement', 'name': 'raise_value_error', 'range': [854, 860], 'children': []}]}]}, {'type': 'VariableDecl', 'name': 'cost', 'range': [862, 887], 'children': []}, {'type': 'IfStatement', 'name': 'if_cost_less_equal_0', 'range': [889, 898], 'children': [{'type': 'Block', 'name': 'if_cost_less_equal_0_block', 'range': [892, 898], 'children': [{'type': 'ReturnStatement', 'name': 'return_0', 'range': [896, 898], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if_validate_balance_and_user_credit_less_cost', 'range': [900, 914], 'children': [{'type': 'Block', 'name': 'if_validate_balance_and_user_credit_less_cost_block', 'range': [903, 914], 'children': [{'type': 'RaiseStatement', 'name': 'raise_value_error', 'range': [908, 914], 'children': []}]}]}, {'type': 'AwaitExpression', 'name': 'await_create', 'range': [916, 991], 'children': []}, {'type': 'ReturnStatement', 'name': 'return_cost', 'range': [992, 994], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'top_up_credits', 'range': [996, 1056], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1000, 1000], 'children': []}, {'type': 'Parameter', 'name': 'user_id', 'range': [1002, 1002], 'children': []}, {'type': 'Parameter', 'name': 'amount', 'range': [1006, 1006], 'children': []}, {'type': 'Block', 'name': 'top_up_credits_block', 'range': [1011, 1056], 'children': [{'type': 'AwaitExpression', 'name': 'await_create', 'range': [1012, 1055], 'children': []}]}]}]}
2025-01-08 09:22:36,152 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:24:25,676 - INFO - Step 5 result: {'type': 'Program', 'name': 'UserCredit', 'range': [221, 1056], 'children': [{'type': 'FunctionDecl', 'name': 'get_or_refill_credit', 'range': [228, 490], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [232, 232], 'children': []}, {'type': 'Parameter', 'name': 'user_id', 'range': [234, 234], 'children': []}, {'type': 'ReturnType', 'name': 'int', 'range': [240, 240], 'children': []}, {'type': 'Block', 'name': 'get_or_refill_credit_block', 'range': [242, 490], 'children': [{'type': 'VariableDecl', 'name': 'cur_time', 'range': [243, 249], 'children': []}, {'type': 'VariableDecl', 'name': 'cur_month', 'range': [251, 276], 'children': []}, {'type': 'VariableDecl', 'name': 'nxt_month', 'range': [278, 320], 'children': []}, {'type': 'VariableDecl', 'name': 'user_credit', 'range': [323, 381], 'children': []}, {'type': 'IfStatement', 'name': 'if_user_credit', 'range': [384, 412], 'children': [{'type': 'Block', 'name': 'if_user_credit_block', 'range': [387, 412], 'children': [{'type': 'VariableDecl', 'name': 'credit_sum', 'range': [388, 402], 'children': []}, {'type': 'ReturnStatement', 'name': 'return_credit_sum', 'range': [403, 412], 'children': []}]}]}, {'type': 'VariableDecl', 'name': 'key', 'range': [414, 418], 'children': []}, {'type': 'TryStatement', 'name': 'try_create_transaction', 'range': [420, 484], 'children': [{'type': 'Block', 'name': 'try_create_transaction_block', 'range': [422, 473], 'children': [{'type': 'AwaitExpression', 'name': 'await_create', 'range': [423, 473], 'children': []}]}, {'type': 'CatchClause', 'name': 'catch_unique_violation', 'range': [474, 484], 'children': [{'type': 'Block', 'name': 'catch_unique_violation_block', 'range': [477, 484], 'children': [{'type': 'PassStatement', 'name': 'pass', 'range': [478, 478], 'children': []}]}]}]}, {'type': 'ReturnStatement', 'name': 'return_num_user_credits_refill', 'range': [486, 490], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'time_now', 'range': [492, 510], 'children': [{'type': 'ReturnStatement', 'name': 'return_datetime_now', 'range': [501, 510], 'children': []}]}, {'type': 'FunctionDecl', 'name': '_block_usage_cost', 'range': [512, 687], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [516, 516], 'children': []}, {'type': 'Parameter', 'name': 'block', 'range': [519, 519], 'children': []}, {'type': 'Parameter', 'name': 'input_data', 'range': [524, 524], 'children': []}, {'type': 'Parameter', 'name': 'data_size', 'range': [529, 529], 'children': []}, {'type': 'Parameter', 'name': 'run_time', 'range': [534, 534], 'children': []}, {'type': 'ReturnType', 'name': 'tuple', 'range': [542, 542], 'children': []}, {'type': 'Block', 'name': '_block_usage_cost_block', 'range': [549, 687], 'children': [{'type': 'VariableDecl', 'name': 'block_costs', 'range': [550, 561], 'children': []}, {'type': 'IfStatement', 'name': 'if_not_block_costs', 'range': [562, 572], 'children': [{'type': 'Block', 'name': 'if_not_block_costs_block', 'range': [565, 572], 'children': [{'type': 'ReturnStatement', 'name': 'return_0', 'range': [567, 572], 'children': []}]}]}, {'type': 'ForStatement', 'name': 'for_block_cost_in_block_costs', 'range': [574, 680], 'children': [{'type': 'Block', 'name': 'for_block_cost_in_block_costs_block', 'range': [578, 680], 'children': [{'type': 'IfStatement', 'name': 'if_not_is_cost_filter_match', 'range': [580, 595], 'children': [{'type': 'Block', 'name': 'if_not_is_cost_filter_match_block', 'range': [583, 595], 'children': [{'type': 'ContinueStatement', 'name': 'continue', 'range': [594, 594], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if_cost_type_run', 'range': [597, 616], 'children': [{'type': 'Block', 'name': 'if_cost_type_run_block', 'range': [600, 616], 'children': [{'type': 'ReturnStatement', 'name': 'return_block_cost', 'range': [608, 616], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if_cost_type_second', 'range': [618, 648], 'children': [{'type': 'Block', 'name': 'if_cost_type_second_block', 'range': [621, 648], 'children': [{'type': 'ReturnStatement', 'name': 'return_int_run_time', 'range': [629, 648], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if_cost_type_byte', 'range': [650, 680], 'children': [{'type': 'Block', 'name': 'if_cost_type_byte_block', 'range': [653, 680], 'children': [{'type': 'ReturnStatement', 'name': 'return_int_data_size', 'range': [661, 680], 'children': []}]}]}]}]}, {'type': 'ReturnStatement', 'name': 'return_0', 'range': [682, 687], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': '_is_cost_filter_match', 'range': [689, 789], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [693, 693], 'children': []}, {'type': 'Parameter', 'name': 'cost_filter', 'range': [695, 695], 'children': []}, {'type': 'Parameter', 'name': 'input_data', 'range': [699, 699], 'children': []}, {'type': 'ReturnType', 'name': 'bool', 'range': [706, 706], 'children': []}, {'type': 'Block', 'name': '_is_cost_filter_match_block', 'range': [708, 789], 'children': [{'type': 'IfStatement', 'name': 'if_not_isinstance', 'range': [713, 736], 'children': [{'type': 'Block', 'name': 'if_not_isinstance_block', 'range': [716, 736], 'children': [{'type': 'ReturnStatement', 'name': 'return_cost_filter_equal_input_data', 'range': [731, 736], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return_all', 'range': [738, 789], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'spend_credits', 'range': [791, 994], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [796, 796], 'children': []}, {'type': 'Parameter', 'name': 'user_id', 'range': [799, 799], 'children': []}, {'type': 'Parameter', 'name': 'user_credit', 'range': [804, 804], 'children': []}, {'type': 'Parameter', 'name': 'block_id', 'range': [809, 809], 'children': []}, {'type': 'Parameter', 'name': 'input_data', 'range': [814, 814], 'children': []}, {'type': 'Parameter', 'name': 'data_size', 'range': [819, 819], 'children': []}, {'type': 'Parameter', 'name': 'run_time', 'range': [824, 824], 'children': []}, {'type': 'Parameter', 'name': 'validate_balance', 'range': [829, 829], 'children': []}, {'type': 'ReturnType', 'name': 'int', 'range': [839, 839], 'children': []}, {'type': 'Block', 'name': 'spend_credits_block', 'range': [841, 994], 'children': [{'type': 'VariableDecl', 'name': 'block', 'range': [842, 848], 'children': []}, {'type': 'IfStatement', 'name': 'if_not_block', 'range': [849, 860], 'children': [{'type': 'Block', 'name': 'if_not_block_block', 'range': [852, 860], 'children': [{'type': 'RaiseStatement', 'name': 'raise_value_error', 'range': [854, 860], 'children': []}]}]}, {'type': 'VariableDecl', 'name': 'cost', 'range': [862, 887], 'children': []}, {'type': 'IfStatement', 'name': 'if_cost_less_equal_0', 'range': [889, 898], 'children': [{'type': 'Block', 'name': 'if_cost_less_equal_0_block', 'range': [892, 898], 'children': [{'type': 'ReturnStatement', 'name': 'return_0', 'range': [896, 898], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if_validate_balance_and_user_credit_less_cost', 'range': [900, 914], 'children': [{'type': 'Block', 'name': 'if_validate_balance_and_user_credit_less_cost_block', 'range': [903, 914], 'children': [{'type': 'RaiseStatement', 'name': 'raise_value_error', 'range': [908, 914], 'children': []}]}]}, {'type': 'AwaitExpression', 'name': 'await_create', 'range': [916, 991], 'children': []}, {'type': 'ReturnStatement', 'name': 'return_cost', 'range': [992, 994], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'top_up_credits', 'range': [996, 1056], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1000, 1000], 'children': []}, {'type': 'Parameter', 'name': 'user_id', 'range': [1002, 1002], 'children': []}, {'type': 'Parameter', 'name': 'amount', 'range': [1006, 1006], 'children': []}, {'type': 'Block', 'name': 'top_up_credits_block', 'range': [1011, 1056], 'children': [{'type': 'AwaitExpression', 'name': 'await_create', 'range': [1012, 1055], 'children': []}]}]}]}
2025-01-08 09:24:25,676 - INFO - Completed main AST analysis flow
2025-01-08 09:24:25,677 - INFO - Successfully processed chunk
2025-01-08 09:24:25,724 - INFO - Starting code generation from AST
2025-01-08 09:54:27,201 - ERROR - Error in get_code_from_ast: Expecting value: line 30 column 1 (char 29)
2025-01-08 09:54:27,202 - INFO - Starting static code similarity comparison
2025-01-08 09:54:27,209 - INFO - Static similarity result: {'final_score': 20.4, 'length_similarity': 0.0, 'token_similarity': 0.0, 'structure_similarity': 0.0, 'function_similarity': 100, 'complexity_similarity': 4.0, 'variable_similarity': 100}
