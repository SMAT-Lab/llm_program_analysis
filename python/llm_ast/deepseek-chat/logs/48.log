2025-01-08 09:22:45,483 - INFO - Processing sample 48
2025-01-08 09:22:45,483 - INFO - Starting Step 0: Splitting code into top-level declarations
2025-01-08 09:22:56,689 - INFO - Successfully split code into 3 top-level declarations
2025-01-08 09:22:56,691 - INFO - Processing chunk #0 (size=1735 chars, start_index=0)
2025-01-08 09:22:56,692 - INFO - Processing chunk with 1735 chars starting at index 0
2025-01-08 09:22:56,692 - INFO - Starting main AST analysis flow
2025-01-08 09:22:56,693 - INFO - Tokenized code into 258 tokens
2025-01-08 09:22:56,693 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:22:56,698 - INFO - Processing chunk #1 (size=1130 chars, start_index=258)
2025-01-08 09:22:56,699 - INFO - Processing chunk with 1130 chars starting at index 258
2025-01-08 09:22:56,699 - INFO - Starting main AST analysis flow
2025-01-08 09:22:56,700 - INFO - Tokenized code into 192 tokens
2025-01-08 09:22:56,700 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:22:56,705 - INFO - Processing chunk #2 (size=70 chars, start_index=450)
2025-01-08 09:22:56,705 - INFO - Processing chunk with 70 chars starting at index 450
2025-01-08 09:22:56,705 - INFO - Starting main AST analysis flow
2025-01-08 09:22:56,706 - INFO - Tokenized code into 18 tokens
2025-01-08 09:22:56,706 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:23:01,965 - INFO - Step 1 result: {'type': 'Program', 'name': 'backtrack', 'range': [258, 449], 'children': []}
2025-01-08 09:23:01,965 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:23:02,743 - INFO - Step 1 result: {'type': 'Program', 'name': 'match_word_pattern', 'range': [0, 31], 'children': []}
2025-01-08 09:23:02,744 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:23:04,779 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [450, 467], 'children': [{'type': 'IfStatement', 'name': '', 'range': [450, 456], 'children': []}, {'type': 'ImportStatement', 'name': 'doctest', 'range': [457, 459], 'children': []}, {'type': 'ExpressionStatement', 'name': '', 'range': [461, 466], 'children': []}]}
2025-01-08 09:23:04,779 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:23:31,841 - INFO - Step 2 result: {'nodes': [{'type': 'IfStatement', 'name': '', 'range': [450, 456], 'children': [{'type': 'Condition', 'name': '', 'range': [451, 454], 'children': [{'type': 'Variable', 'name': '__name__', 'range': [451, 451], 'children': []}, {'type': 'Operator', 'name': '==', 'range': [452, 453], 'children': []}, {'type': 'StringLiteral', 'name': '"__main__"', 'range': [454, 454], 'children': []}]}]}, {'type': 'ImportStatement', 'name': 'doctest', 'range': [457, 459], 'children': [{'type': 'Module', 'name': 'doctest', 'range': [458, 458], 'children': []}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [461, 466], 'children': [{'type': 'CallExpression', 'name': '', 'range': [461, 465], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [461, 463], 'children': [{'type': 'Object', 'name': 'doctest', 'range': [461, 461], 'children': []}, {'type': 'Property', 'name': 'testmod', 'range': [463, 463], 'children': []}]}, {'type': 'Arguments', 'name': '', 'range': [464, 465], 'children': []}]}]}]}
2025-01-08 09:23:31,841 - INFO - Starting Step 3: AST simplification
2025-01-08 09:23:52,661 - INFO - Step 2 result: {'type': 'Program', 'name': 'backtrack', 'range': [258, 449], 'children': [{'type': 'FunctionDeclaration', 'name': 'backtrack', 'range': [258, 449], 'children': [{'type': 'Parameters', 'name': 'parameters', 'range': [260, 268], 'children': [{'type': 'Parameter', 'name': 'pattern_index', 'range': [261, 263], 'children': []}, {'type': 'Parameter', 'name': 'str_index', 'range': [265, 267], 'children': []}]}, {'type': 'ReturnType', 'name': 'return_type', 'range': [269, 271], 'children': []}, {'type': 'Docstring', 'name': 'docstring', 'range': [274, 276], 'children': []}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [278, 298], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [279, 293], 'children': []}, {'type': 'ReturnStatement', 'name': 'return_statement', 'range': [296, 297], 'children': []}]}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [299, 319], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [300, 314], 'children': []}, {'type': 'ReturnStatement', 'name': 'return_statement', 'range': [317, 318], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'variable_declaration', 'range': [320, 326], 'children': [{'type': 'Variable', 'name': 'char', 'range': [320, 321], 'children': []}, {'type': 'Assignment', 'name': 'assignment', 'range': [322, 325], 'children': []}]}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [327, 371], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [328, 331], 'children': []}, {'type': 'VariableDeclaration', 'name': 'variable_declaration', 'range': [333, 339], 'children': [{'type': 'Variable', 'name': 'mapped_str', 'range': [333, 334], 'children': []}, {'type': 'Assignment', 'name': 'assignment', 'range': [335, 338], 'children': []}]}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [340, 365], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [341, 349], 'children': []}, {'type': 'ReturnStatement', 'name': 'return_statement', 'range': [351, 364], 'children': []}]}, {'type': 'ElseStatement', 'name': 'else_statement', 'range': [366, 371], 'children': [{'type': 'ReturnStatement', 'name': 'return_statement', 'range': [369, 370], 'children': []}]}]}, {'type': 'ForStatement', 'name': 'for_statement', 'range': [372, 446], 'children': [{'type': 'Initialization', 'name': 'initialization', 'range': [373, 387], 'children': []}, {'type': 'VariableDeclaration', 'name': 'variable_declaration', 'range': [390, 398], 'children': [{'type': 'Variable', 'name': 'substr', 'range': [390, 391], 'children': []}, {'type': 'Assignment', 'name': 'assignment', 'range': [392, 397], 'children': []}]}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [399, 406], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [400, 403], 'children': []}, {'type': 'ContinueStatement', 'name': 'continue_statement', 'range': [405, 406], 'children': []}]}, {'type': 'Assignment', 'name': 'assignment', 'range': [407, 420], 'children': []}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [421, 434], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [422, 430], 'children': []}, {'type': 'ReturnStatement', 'name': 'return_statement', 'range': [432, 433], 'children': []}]}, {'type': 'Deletion', 'name': 'deletion', 'range': [435, 446], 'children': []}]}, {'type': 'ReturnStatement', 'name': 'return_statement', 'range': [447, 448], 'children': []}]}]}
2025-01-08 09:23:52,661 - INFO - Starting Step 3: AST simplification
2025-01-08 09:23:58,869 - INFO - Step 2 result: {'type': 'Program', 'name': 'match_word_pattern', 'range': [0, 31], 'children': [{'type': 'FunctionDeclaration', 'name': 'match_word_pattern', 'range': [0, 31], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [2, 10], 'children': [{'type': 'Parameter', 'name': 'pattern', 'range': [3, 5], 'children': []}, {'type': 'Parameter', 'name': 'input_string', 'range': [7, 9], 'children': []}]}, {'type': 'ReturnType', 'name': 'returnType', 'range': [11, 13], 'children': []}, {'type': 'FunctionBody', 'name': 'body', 'range': [14, 31], 'children': [{'type': 'Docstring', 'name': 'docstring', 'range': [16, 30], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'backtrack', 'range': [33, 257], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [35, 43], 'children': [{'type': 'Parameter', 'name': 'pattern_index', 'range': [36, 38], 'children': []}, {'type': 'Parameter', 'name': 'str_index', 'range': [40, 42], 'children': []}]}, {'type': 'ReturnType', 'name': 'returnType', 'range': [44, 46], 'children': []}, {'type': 'FunctionBody', 'name': 'body', 'range': [47, 257], 'children': [{'type': 'Docstring', 'name': 'docstring', 'range': [49, 51], 'children': []}, {'type': 'IfStatement', 'name': 'ifStatement', 'range': [53, 73], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [54, 68], 'children': []}, {'type': 'ReturnStatement', 'name': 'returnStatement', 'range': [71, 72], 'children': []}]}, {'type': 'IfStatement', 'name': 'ifStatement', 'range': [74, 94], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [75, 89], 'children': []}, {'type': 'ReturnStatement', 'name': 'returnStatement', 'range': [92, 93], 'children': []}]}, {'type': 'Assignment', 'name': 'assignment', 'range': [95, 101], 'children': []}, {'type': 'IfStatement', 'name': 'ifStatement', 'range': [102, 146], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [103, 106], 'children': []}, {'type': 'Assignment', 'name': 'assignment', 'range': [108, 114], 'children': []}, {'type': 'IfStatement', 'name': 'ifStatement', 'range': [115, 140], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [116, 124], 'children': []}, {'type': 'ReturnStatement', 'name': 'returnStatement', 'range': [126, 139], 'children': []}]}, {'type': 'ElseStatement', 'name': 'elseStatement', 'range': [141, 146], 'children': [{'type': 'ReturnStatement', 'name': 'returnStatement', 'range': [144, 145], 'children': []}]}]}, {'type': 'ForLoop', 'name': 'forLoop', 'range': [147, 221], 'children': [{'type': 'Range', 'name': 'range', 'range': [150, 162], 'children': []}, {'type': 'Assignment', 'name': 'assignment', 'range': [165, 172], 'children': []}, {'type': 'IfStatement', 'name': 'ifStatement', 'range': [174, 181], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [175, 178], 'children': []}, {'type': 'ContinueStatement', 'name': 'continueStatement', 'range': [180, 180], 'children': []}]}, {'type': 'Assignment', 'name': 'assignment', 'range': [182, 195], 'children': []}, {'type': 'IfStatement', 'name': 'ifStatement', 'range': [196, 209], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [197, 205], 'children': []}, {'type': 'ReturnStatement', 'name': 'returnStatement', 'range': [207, 208], 'children': []}]}, {'type': 'DeleteStatement', 'name': 'deleteStatement', 'range': [210, 215], 'children': []}, {'type': 'DeleteStatement', 'name': 'deleteStatement', 'range': [216, 221], 'children': []}]}, {'type': 'ReturnStatement', 'name': 'returnStatement', 'range': [222, 223], 'children': []}, {'type': 'Assignment', 'name': 'assignment', 'range': [226, 237], 'children': []}, {'type': 'Assignment', 'name': 'assignment', 'range': [238, 249], 'children': []}, {'type': 'ReturnStatement', 'name': 'returnStatement', 'range': [250, 257], 'children': []}]}]}]}
2025-01-08 09:23:58,869 - INFO - Starting Step 3: AST simplification
2025-01-08 09:24:04,427 - INFO - Step 3 result: {'nodes': [{'type': 'IfStatement', 'name': '', 'range': [450, 456], 'children': [{'type': 'Condition', 'name': '', 'range': [451, 454], 'children': [{'type': 'Variable', 'name': '__name__', 'range': [451, 451], 'children': []}, {'type': 'Operator', 'name': '==', 'range': [452, 453], 'children': []}, {'type': 'StringLiteral', 'name': '"__main__"', 'range': [454, 454], 'children': []}]}]}, {'type': 'ImportStatement', 'name': 'doctest', 'range': [457, 459], 'children': [{'type': 'Module', 'name': 'doctest', 'range': [458, 458], 'children': []}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [461, 466], 'children': [{'type': 'CallExpression', 'name': '', 'range': [461, 465], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [461, 463], 'children': [{'type': 'Object', 'name': 'doctest', 'range': [461, 461], 'children': []}, {'type': 'Property', 'name': 'testmod', 'range': [463, 463], 'children': []}]}]}]}]}
2025-01-08 09:24:04,427 - INFO - Starting Step 4: AST normalization
2025-01-08 09:24:29,358 - INFO - Step 4 result: {'nodes': [{'type': 'IfStatement', 'name': '', 'range': [450, 456], 'children': [{'type': 'BinaryExpression', 'name': '', 'range': [451, 454], 'children': [{'type': 'Identifier', 'name': '__name__', 'range': [451, 451], 'children': []}, {'type': 'Operator', 'name': '==', 'range': [452, 453], 'children': []}, {'type': 'Literal', 'name': '"__main__"', 'range': [454, 454], 'children': []}]}]}, {'type': 'ImportStatement', 'name': 'doctest', 'range': [457, 459], 'children': [{'type': 'Identifier', 'name': 'doctest', 'range': [458, 458], 'children': []}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [461, 466], 'children': [{'type': 'CallExpression', 'name': '', 'range': [461, 465], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [461, 463], 'children': [{'type': 'Identifier', 'name': 'doctest', 'range': [461, 461], 'children': []}, {'type': 'Identifier', 'name': 'testmod', 'range': [463, 463], 'children': []}]}]}]}]}
2025-01-08 09:24:29,359 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:24:47,698 - INFO - Step 5 result: {'nodes': [{'type': 'Program', 'name': 'MainProgram', 'range': [450, 466], 'children': [{'type': 'IfStatement', 'name': '', 'range': [450, 456], 'children': [{'type': 'BinaryExpression', 'name': '', 'range': [451, 454], 'children': [{'type': 'Identifier', 'name': '__name__', 'range': [451, 451], 'children': []}, {'type': 'Operator', 'name': '==', 'range': [452, 453], 'children': []}, {'type': 'Literal', 'name': '"__main__"', 'range': [454, 454], 'children': []}]}]}, {'type': 'ImportStatement', 'name': 'doctest', 'range': [457, 459], 'children': [{'type': 'Identifier', 'name': 'doctest', 'range': [458, 458], 'children': []}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [461, 466], 'children': [{'type': 'CallExpression', 'name': '', 'range': [461, 465], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [461, 463], 'children': [{'type': 'Identifier', 'name': 'doctest', 'range': [461, 461], 'children': []}, {'type': 'Identifier', 'name': 'testmod', 'range': [463, 463], 'children': []}]}]}]}]}]}
2025-01-08 09:24:47,698 - INFO - Completed main AST analysis flow
2025-01-08 09:24:47,698 - INFO - Successfully processed chunk
2025-01-08 09:24:59,431 - INFO - Step 3 result: {'type': 'Program', 'name': 'backtrack', 'range': [258, 449], 'children': [{'type': 'FunctionDeclaration', 'name': 'backtrack', 'range': [258, 449], 'children': [{'type': 'Parameters', 'name': 'parameters', 'range': [260, 268], 'children': [{'type': 'Parameter', 'name': 'pattern_index', 'range': [261, 263], 'children': []}, {'type': 'Parameter', 'name': 'str_index', 'range': [265, 267], 'children': []}]}, {'type': 'ReturnType', 'name': 'return_type', 'range': [269, 271], 'children': []}, {'type': 'Docstring', 'name': 'docstring', 'range': [274, 276], 'children': []}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [278, 298], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [279, 293], 'children': []}, {'type': 'ReturnStatement', 'name': 'return_statement', 'range': [296, 297], 'children': []}]}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [299, 319], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [300, 314], 'children': []}, {'type': 'ReturnStatement', 'name': 'return_statement', 'range': [317, 318], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'variable_declaration', 'range': [320, 326], 'children': [{'type': 'Variable', 'name': 'char', 'range': [320, 321], 'children': []}, {'type': 'Assignment', 'name': 'assignment', 'range': [322, 325], 'children': []}]}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [327, 371], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [328, 331], 'children': []}, {'type': 'VariableDeclaration', 'name': 'variable_declaration', 'range': [333, 339], 'children': [{'type': 'Variable', 'name': 'mapped_str', 'range': [333, 334], 'children': []}, {'type': 'Assignment', 'name': 'assignment', 'range': [335, 338], 'children': []}]}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [340, 365], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [341, 349], 'children': []}, {'type': 'ReturnStatement', 'name': 'return_statement', 'range': [351, 364], 'children': []}]}, {'type': 'ElseStatement', 'name': 'else_statement', 'range': [366, 371], 'children': [{'type': 'ReturnStatement', 'name': 'return_statement', 'range': [369, 370], 'children': []}]}]}, {'type': 'ForStatement', 'name': 'for_statement', 'range': [372, 446], 'children': [{'type': 'Initialization', 'name': 'initialization', 'range': [373, 387], 'children': []}, {'type': 'VariableDeclaration', 'name': 'variable_declaration', 'range': [390, 398], 'children': [{'type': 'Variable', 'name': 'substr', 'range': [390, 391], 'children': []}, {'type': 'Assignment', 'name': 'assignment', 'range': [392, 397], 'children': []}]}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [399, 406], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [400, 403], 'children': []}, {'type': 'ContinueStatement', 'name': 'continue_statement', 'range': [405, 406], 'children': []}]}, {'type': 'Assignment', 'name': 'assignment', 'range': [407, 420], 'children': []}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [421, 434], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [422, 430], 'children': []}, {'type': 'ReturnStatement', 'name': 'return_statement', 'range': [432, 433], 'children': []}]}, {'type': 'Deletion', 'name': 'deletion', 'range': [435, 446], 'children': []}]}, {'type': 'ReturnStatement', 'name': 'return_statement', 'range': [447, 448], 'children': []}]}]}
2025-01-08 09:24:59,431 - INFO - Starting Step 4: AST normalization
2025-01-08 09:25:06,206 - INFO - Step 3 result: {'type': 'Program', 'name': 'match_word_pattern', 'range': [0, 31], 'children': [{'type': 'FunctionDeclaration', 'name': 'match_word_pattern', 'range': [0, 31], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [2, 10], 'children': [{'type': 'Parameter', 'name': 'pattern', 'range': [3, 5], 'children': []}, {'type': 'Parameter', 'name': 'input_string', 'range': [7, 9], 'children': []}]}, {'type': 'ReturnType', 'name': 'returnType', 'range': [11, 13], 'children': []}, {'type': 'FunctionBody', 'name': 'body', 'range': [14, 31], 'children': [{'type': 'Docstring', 'name': 'docstring', 'range': [16, 30], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'backtrack', 'range': [33, 257], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [35, 43], 'children': [{'type': 'Parameter', 'name': 'pattern_index', 'range': [36, 38], 'children': []}, {'type': 'Parameter', 'name': 'str_index', 'range': [40, 42], 'children': []}]}, {'type': 'ReturnType', 'name': 'returnType', 'range': [44, 46], 'children': []}, {'type': 'FunctionBody', 'name': 'body', 'range': [47, 257], 'children': [{'type': 'Docstring', 'name': 'docstring', 'range': [49, 51], 'children': []}, {'type': 'IfStatement', 'name': 'ifStatement', 'range': [53, 73], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [54, 68], 'children': []}, {'type': 'ReturnStatement', 'name': 'returnStatement', 'range': [71, 72], 'children': []}]}, {'type': 'IfStatement', 'name': 'ifStatement', 'range': [74, 94], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [75, 89], 'children': []}, {'type': 'ReturnStatement', 'name': 'returnStatement', 'range': [92, 93], 'children': []}]}, {'type': 'Assignment', 'name': 'assignment', 'range': [95, 101], 'children': []}, {'type': 'IfStatement', 'name': 'ifStatement', 'range': [102, 146], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [103, 106], 'children': []}, {'type': 'Assignment', 'name': 'assignment', 'range': [108, 114], 'children': []}, {'type': 'IfStatement', 'name': 'ifStatement', 'range': [115, 140], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [116, 124], 'children': []}, {'type': 'ReturnStatement', 'name': 'returnStatement', 'range': [126, 139], 'children': []}]}, {'type': 'ElseStatement', 'name': 'elseStatement', 'range': [141, 146], 'children': [{'type': 'ReturnStatement', 'name': 'returnStatement', 'range': [144, 145], 'children': []}]}]}, {'type': 'ForLoop', 'name': 'forLoop', 'range': [147, 221], 'children': [{'type': 'Range', 'name': 'range', 'range': [150, 162], 'children': []}, {'type': 'Assignment', 'name': 'assignment', 'range': [165, 172], 'children': []}, {'type': 'IfStatement', 'name': 'ifStatement', 'range': [174, 181], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [175, 178], 'children': []}, {'type': 'ContinueStatement', 'name': 'continueStatement', 'range': [180, 180], 'children': []}]}, {'type': 'Assignment', 'name': 'assignment', 'range': [182, 195], 'children': []}, {'type': 'IfStatement', 'name': 'ifStatement', 'range': [196, 209], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [197, 205], 'children': []}, {'type': 'ReturnStatement', 'name': 'returnStatement', 'range': [207, 208], 'children': []}]}, {'type': 'DeleteStatement', 'name': 'deleteStatement', 'range': [210, 215], 'children': []}, {'type': 'DeleteStatement', 'name': 'deleteStatement', 'range': [216, 221], 'children': []}]}, {'type': 'ReturnStatement', 'name': 'returnStatement', 'range': [222, 223], 'children': []}, {'type': 'Assignment', 'name': 'assignment', 'range': [226, 237], 'children': []}, {'type': 'Assignment', 'name': 'assignment', 'range': [238, 249], 'children': []}, {'type': 'ReturnStatement', 'name': 'returnStatement', 'range': [250, 257], 'children': []}]}]}]}
2025-01-08 09:25:06,206 - INFO - Starting Step 4: AST normalization
2025-01-08 09:25:48,789 - INFO - Step 4 result: {'type': 'Program', 'name': 'backtrack', 'range': [258, 449], 'children': [{'type': 'FunctionDecl', 'name': 'backtrack', 'range': [258, 449], 'children': [{'type': 'Parameters', 'name': 'parameters', 'range': [260, 268], 'children': [{'type': 'Parameter', 'name': 'pattern_index', 'range': [261, 263], 'children': []}, {'type': 'Parameter', 'name': 'str_index', 'range': [265, 267], 'children': []}]}, {'type': 'ReturnType', 'name': 'return_type', 'range': [269, 271], 'children': []}, {'type': 'Docstring', 'name': 'docstring', 'range': [274, 276], 'children': []}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [278, 298], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [279, 293], 'children': []}, {'type': 'ReturnStatement', 'name': 'return_statement', 'range': [296, 297], 'children': []}]}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [299, 319], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [300, 314], 'children': []}, {'type': 'ReturnStatement', 'name': 'return_statement', 'range': [317, 318], 'children': []}]}, {'type': 'VariableDecl', 'name': 'variable_declaration', 'range': [320, 326], 'children': [{'type': 'Variable', 'name': 'char', 'range': [320, 321], 'children': []}, {'type': 'Assignment', 'name': 'assignment', 'range': [322, 325], 'children': []}]}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [327, 371], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [328, 331], 'children': []}, {'type': 'VariableDecl', 'name': 'variable_declaration', 'range': [333, 339], 'children': [{'type': 'Variable', 'name': 'mapped_str', 'range': [333, 334], 'children': []}, {'type': 'Assignment', 'name': 'assignment', 'range': [335, 338], 'children': []}]}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [340, 365], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [341, 349], 'children': []}, {'type': 'ReturnStatement', 'name': 'return_statement', 'range': [351, 364], 'children': []}]}, {'type': 'ElseStatement', 'name': 'else_statement', 'range': [366, 371], 'children': [{'type': 'ReturnStatement', 'name': 'return_statement', 'range': [369, 370], 'children': []}]}]}, {'type': 'ForStatement', 'name': 'for_statement', 'range': [372, 446], 'children': [{'type': 'Initialization', 'name': 'initialization', 'range': [373, 387], 'children': []}, {'type': 'VariableDecl', 'name': 'variable_declaration', 'range': [390, 398], 'children': [{'type': 'Variable', 'name': 'substr', 'range': [390, 391], 'children': []}, {'type': 'Assignment', 'name': 'assignment', 'range': [392, 397], 'children': []}]}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [399, 406], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [400, 403], 'children': []}, {'type': 'ContinueStatement', 'name': 'continue_statement', 'range': [405, 406], 'children': []}]}, {'type': 'Assignment', 'name': 'assignment', 'range': [407, 420], 'children': []}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [421, 434], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [422, 430], 'children': []}, {'type': 'ReturnStatement', 'name': 'return_statement', 'range': [432, 433], 'children': []}]}, {'type': 'Deletion', 'name': 'deletion', 'range': [435, 446], 'children': []}]}, {'type': 'ReturnStatement', 'name': 'return_statement', 'range': [447, 448], 'children': []}]}]}
2025-01-08 09:25:48,790 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:26:04,411 - INFO - Step 4 result: {'type': 'Program', 'name': 'match_word_pattern', 'range': [0, 31], 'children': [{'type': 'FunctionDecl', 'name': 'match_word_pattern', 'range': [0, 31], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [2, 10], 'children': [{'type': 'Parameter', 'name': 'pattern', 'range': [3, 5], 'children': []}, {'type': 'Parameter', 'name': 'input_string', 'range': [7, 9], 'children': []}]}, {'type': 'ReturnType', 'name': 'returnType', 'range': [11, 13], 'children': []}, {'type': 'FunctionBody', 'name': 'body', 'range': [14, 31], 'children': [{'type': 'Docstring', 'name': 'docstring', 'range': [16, 30], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'backtrack', 'range': [33, 257], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [35, 43], 'children': [{'type': 'Parameter', 'name': 'pattern_index', 'range': [36, 38], 'children': []}, {'type': 'Parameter', 'name': 'str_index', 'range': [40, 42], 'children': []}]}, {'type': 'ReturnType', 'name': 'returnType', 'range': [44, 46], 'children': []}, {'type': 'FunctionBody', 'name': 'body', 'range': [47, 257], 'children': [{'type': 'Docstring', 'name': 'docstring', 'range': [49, 51], 'children': []}, {'type': 'IfStatement', 'name': 'ifStatement', 'range': [53, 73], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [54, 68], 'children': []}, {'type': 'ReturnStatement', 'name': 'returnStatement', 'range': [71, 72], 'children': []}]}, {'type': 'IfStatement', 'name': 'ifStatement', 'range': [74, 94], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [75, 89], 'children': []}, {'type': 'ReturnStatement', 'name': 'returnStatement', 'range': [92, 93], 'children': []}]}, {'type': 'Assignment', 'name': 'assignment', 'range': [95, 101], 'children': []}, {'type': 'IfStatement', 'name': 'ifStatement', 'range': [102, 146], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [103, 106], 'children': []}, {'type': 'Assignment', 'name': 'assignment', 'range': [108, 114], 'children': []}, {'type': 'IfStatement', 'name': 'ifStatement', 'range': [115, 140], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [116, 124], 'children': []}, {'type': 'ReturnStatement', 'name': 'returnStatement', 'range': [126, 139], 'children': []}]}, {'type': 'ElseStatement', 'name': 'elseStatement', 'range': [141, 146], 'children': [{'type': 'ReturnStatement', 'name': 'returnStatement', 'range': [144, 145], 'children': []}]}]}, {'type': 'ForStatement', 'name': 'forLoop', 'range': [147, 221], 'children': [{'type': 'Range', 'name': 'range', 'range': [150, 162], 'children': []}, {'type': 'Assignment', 'name': 'assignment', 'range': [165, 172], 'children': []}, {'type': 'IfStatement', 'name': 'ifStatement', 'range': [174, 181], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [175, 178], 'children': []}, {'type': 'ContinueStatement', 'name': 'continueStatement', 'range': [180, 180], 'children': []}]}, {'type': 'Assignment', 'name': 'assignment', 'range': [182, 195], 'children': []}, {'type': 'IfStatement', 'name': 'ifStatement', 'range': [196, 209], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [197, 205], 'children': []}, {'type': 'ReturnStatement', 'name': 'returnStatement', 'range': [207, 208], 'children': []}]}, {'type': 'DeleteStatement', 'name': 'deleteStatement', 'range': [210, 215], 'children': []}, {'type': 'DeleteStatement', 'name': 'deleteStatement', 'range': [216, 221], 'children': []}]}, {'type': 'ReturnStatement', 'name': 'returnStatement', 'range': [222, 223], 'children': []}, {'type': 'Assignment', 'name': 'assignment', 'range': [226, 237], 'children': []}, {'type': 'Assignment', 'name': 'assignment', 'range': [238, 249], 'children': []}, {'type': 'ReturnStatement', 'name': 'returnStatement', 'range': [250, 257], 'children': []}]}]}]}
2025-01-08 09:26:04,412 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:26:47,110 - INFO - Step 5 result: {'type': 'Program', 'name': 'backtrack', 'range': [258, 449], 'children': [{'type': 'FunctionDecl', 'name': 'backtrack', 'range': [258, 449], 'children': [{'type': 'Parameters', 'name': 'parameters', 'range': [260, 268], 'children': [{'type': 'Parameter', 'name': 'pattern_index', 'range': [261, 263], 'children': []}, {'type': 'Parameter', 'name': 'str_index', 'range': [265, 267], 'children': []}]}, {'type': 'ReturnType', 'name': 'return_type', 'range': [269, 271], 'children': []}, {'type': 'Docstring', 'name': 'docstring', 'range': [274, 276], 'children': []}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [278, 298], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [279, 293], 'children': []}, {'type': 'ReturnStatement', 'name': 'return_statement', 'range': [296, 297], 'children': []}]}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [299, 319], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [300, 314], 'children': []}, {'type': 'ReturnStatement', 'name': 'return_statement', 'range': [317, 318], 'children': []}]}, {'type': 'VariableDecl', 'name': 'variable_declaration', 'range': [320, 326], 'children': [{'type': 'Variable', 'name': 'char', 'range': [320, 321], 'children': []}, {'type': 'Assignment', 'name': 'assignment', 'range': [322, 325], 'children': []}]}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [327, 371], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [328, 331], 'children': []}, {'type': 'VariableDecl', 'name': 'variable_declaration', 'range': [333, 339], 'children': [{'type': 'Variable', 'name': 'mapped_str', 'range': [333, 334], 'children': []}, {'type': 'Assignment', 'name': 'assignment', 'range': [335, 338], 'children': []}]}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [340, 365], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [341, 349], 'children': []}, {'type': 'ReturnStatement', 'name': 'return_statement', 'range': [351, 364], 'children': []}]}, {'type': 'ElseStatement', 'name': 'else_statement', 'range': [366, 371], 'children': [{'type': 'ReturnStatement', 'name': 'return_statement', 'range': [369, 370], 'children': []}]}]}, {'type': 'ForStatement', 'name': 'for_statement', 'range': [372, 446], 'children': [{'type': 'Initialization', 'name': 'initialization', 'range': [373, 387], 'children': []}, {'type': 'VariableDecl', 'name': 'variable_declaration', 'range': [390, 398], 'children': [{'type': 'Variable', 'name': 'substr', 'range': [390, 391], 'children': []}, {'type': 'Assignment', 'name': 'assignment', 'range': [392, 397], 'children': []}]}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [399, 406], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [400, 403], 'children': []}, {'type': 'ContinueStatement', 'name': 'continue_statement', 'range': [405, 406], 'children': []}]}, {'type': 'Assignment', 'name': 'assignment', 'range': [407, 420], 'children': []}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [421, 434], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [422, 430], 'children': []}, {'type': 'ReturnStatement', 'name': 'return_statement', 'range': [432, 433], 'children': []}]}, {'type': 'Deletion', 'name': 'deletion', 'range': [435, 446], 'children': []}]}, {'type': 'ReturnStatement', 'name': 'return_statement', 'range': [447, 448], 'children': []}]}]}
2025-01-08 09:26:47,111 - INFO - Completed main AST analysis flow
2025-01-08 09:26:47,111 - INFO - Successfully processed chunk
2025-01-08 09:26:59,688 - INFO - Step 5 result: {'type': 'Program', 'name': 'match_word_pattern', 'range': [0, 257], 'children': [{'type': 'FunctionDecl', 'name': 'match_word_pattern', 'range': [0, 31], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [2, 10], 'children': [{'type': 'Parameter', 'name': 'pattern', 'range': [3, 5], 'children': []}, {'type': 'Parameter', 'name': 'input_string', 'range': [7, 9], 'children': []}]}, {'type': 'ReturnType', 'name': 'returnType', 'range': [11, 13], 'children': []}, {'type': 'FunctionBody', 'name': 'body', 'range': [14, 31], 'children': [{'type': 'Docstring', 'name': 'docstring', 'range': [16, 30], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'backtrack', 'range': [33, 257], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [35, 43], 'children': [{'type': 'Parameter', 'name': 'pattern_index', 'range': [36, 38], 'children': []}, {'type': 'Parameter', 'name': 'str_index', 'range': [40, 42], 'children': []}]}, {'type': 'ReturnType', 'name': 'returnType', 'range': [44, 46], 'children': []}, {'type': 'FunctionBody', 'name': 'body', 'range': [47, 257], 'children': [{'type': 'Docstring', 'name': 'docstring', 'range': [49, 51], 'children': []}, {'type': 'IfStatement', 'name': 'ifStatement', 'range': [53, 73], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [54, 68], 'children': []}, {'type': 'ReturnStatement', 'name': 'returnStatement', 'range': [71, 72], 'children': []}]}, {'type': 'IfStatement', 'name': 'ifStatement', 'range': [74, 94], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [75, 89], 'children': []}, {'type': 'ReturnStatement', 'name': 'returnStatement', 'range': [92, 93], 'children': []}]}, {'type': 'Assignment', 'name': 'assignment', 'range': [95, 101], 'children': []}, {'type': 'IfStatement', 'name': 'ifStatement', 'range': [102, 146], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [103, 106], 'children': []}, {'type': 'Assignment', 'name': 'assignment', 'range': [108, 114], 'children': []}, {'type': 'IfStatement', 'name': 'ifStatement', 'range': [115, 140], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [116, 124], 'children': []}, {'type': 'ReturnStatement', 'name': 'returnStatement', 'range': [126, 139], 'children': []}]}, {'type': 'ElseStatement', 'name': 'elseStatement', 'range': [141, 146], 'children': [{'type': 'ReturnStatement', 'name': 'returnStatement', 'range': [144, 145], 'children': []}]}]}, {'type': 'ForStatement', 'name': 'forLoop', 'range': [147, 221], 'children': [{'type': 'Range', 'name': 'range', 'range': [150, 162], 'children': []}, {'type': 'Assignment', 'name': 'assignment', 'range': [165, 172], 'children': []}, {'type': 'IfStatement', 'name': 'ifStatement', 'range': [174, 181], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [175, 178], 'children': []}, {'type': 'ContinueStatement', 'name': 'continueStatement', 'range': [180, 180], 'children': []}]}, {'type': 'Assignment', 'name': 'assignment', 'range': [182, 195], 'children': []}, {'type': 'IfStatement', 'name': 'ifStatement', 'range': [196, 209], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [197, 205], 'children': []}, {'type': 'ReturnStatement', 'name': 'returnStatement', 'range': [207, 208], 'children': []}]}, {'type': 'DeleteStatement', 'name': 'deleteStatement', 'range': [210, 215], 'children': []}, {'type': 'DeleteStatement', 'name': 'deleteStatement', 'range': [216, 221], 'children': []}]}, {'type': 'ReturnStatement', 'name': 'returnStatement', 'range': [222, 223], 'children': []}, {'type': 'Assignment', 'name': 'assignment', 'range': [226, 237], 'children': []}, {'type': 'Assignment', 'name': 'assignment', 'range': [238, 249], 'children': []}, {'type': 'ReturnStatement', 'name': 'returnStatement', 'range': [250, 257], 'children': []}]}]}]}
2025-01-08 09:26:59,688 - INFO - Completed main AST analysis flow
2025-01-08 09:26:59,689 - INFO - Successfully processed chunk
2025-01-08 09:26:59,708 - INFO - Starting code generation from AST
2025-01-08 09:27:22,177 - INFO - Successfully generated code from AST
2025-01-08 09:27:22,178 - INFO - Starting static code similarity comparison
2025-01-08 09:27:22,183 - INFO - Static similarity result: {'final_score': 85.46, 'length_similarity': 92.59, 'token_similarity': 96.92, 'structure_similarity': 50.0, 'function_similarity': 100, 'complexity_similarity': 100.0, 'variable_similarity': 100}
