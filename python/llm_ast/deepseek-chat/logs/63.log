2025-01-08 09:34:35,600 - INFO - Processing sample 63
2025-01-08 09:34:35,600 - INFO - Starting Step 0: Splitting code into top-level declarations
2025-01-08 09:35:54,380 - INFO - Successfully split code into 7 top-level declarations
2025-01-08 09:35:54,383 - INFO - Processing chunk #0 (size=524 chars, start_index=0)
2025-01-08 09:35:54,383 - INFO - Processing chunk with 524 chars starting at index 0
2025-01-08 09:35:54,383 - INFO - Starting main AST analysis flow
2025-01-08 09:35:54,384 - INFO - Tokenized code into 97 tokens
2025-01-08 09:35:54,384 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:35:54,385 - INFO - Processing chunk #1 (size=238 chars, start_index=97)
2025-01-08 09:35:54,385 - INFO - Processing chunk with 238 chars starting at index 97
2025-01-08 09:35:54,385 - INFO - Starting main AST analysis flow
2025-01-08 09:35:54,386 - INFO - Tokenized code into 26 tokens
2025-01-08 09:35:54,386 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:35:54,387 - INFO - Processing chunk #2 (size=351 chars, start_index=123)
2025-01-08 09:35:54,387 - INFO - Processing chunk with 351 chars starting at index 123
2025-01-08 09:35:54,387 - INFO - Starting main AST analysis flow
2025-01-08 09:35:54,387 - INFO - Tokenized code into 76 tokens
2025-01-08 09:35:54,388 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:35:54,388 - INFO - Processing chunk #3 (size=260 chars, start_index=199)
2025-01-08 09:35:54,390 - INFO - Processing chunk #4 (size=6840 chars, start_index=241)
2025-01-08 09:35:54,403 - INFO - Processing chunk #5 (size=650 chars, start_index=1072)
2025-01-08 09:35:54,404 - INFO - Processing chunk with 260 chars starting at index 199
2025-01-08 09:35:54,405 - INFO - Processing chunk with 6840 chars starting at index 241
2025-01-08 09:35:54,405 - INFO - Processing chunk #6 (size=87 chars, start_index=1187)
2025-01-08 09:35:54,411 - INFO - Processing chunk with 650 chars starting at index 1072
2025-01-08 09:35:54,411 - INFO - Starting main AST analysis flow
2025-01-08 09:35:54,411 - INFO - Starting main AST analysis flow
2025-01-08 09:35:54,412 - INFO - Processing chunk with 87 chars starting at index 1187
2025-01-08 09:35:54,412 - INFO - Starting main AST analysis flow
2025-01-08 09:35:54,412 - INFO - Tokenized code into 42 tokens
2025-01-08 09:35:54,414 - INFO - Tokenized code into 831 tokens
2025-01-08 09:35:54,414 - INFO - Starting main AST analysis flow
2025-01-08 09:35:54,415 - INFO - Tokenized code into 115 tokens
2025-01-08 09:35:54,415 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:35:54,415 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:35:54,416 - INFO - Tokenized code into 21 tokens
2025-01-08 09:35:54,423 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:35:54,416 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:36:04,141 - INFO - Step 1 result: {'type': 'Program', 'name': 'create_test_graph', 'range': [241, 1071], 'children': []}
2025-01-08 09:36:04,142 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:36:06,374 - INFO - Step 1 result: {'type': 'Program', 'name': 'sample_block_modules', 'range': [97, 122], 'children': [{'type': 'ObjectLiteral', 'range': [99, 121], 'children': [{'type': 'Property', 'key': '"llm"', 'value': '"Block that calls the AI model to generate text."', 'range': [101, 103]}, {'type': 'Property', 'key': '"basic"', 'value': '"Block that does basic operations."', 'range': [106, 108]}, {'type': 'Property', 'key': '"text"', 'value': '"Blocks that do text operations."', 'range': [111, 113]}, {'type': 'Property', 'key': '"reddit"', 'value': '"Blocks that interacts with Reddit."', 'range': [116, 118]}]}]}
2025-01-08 09:36:06,374 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:36:10,772 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [1187, 1207], 'children': [{'type': 'IfStatement', 'name': '', 'range': [1187, 1193], 'children': []}, {'type': 'ImportStatement', 'name': 'asyncio', 'range': [1194, 1196], 'children': []}, {'type': 'ExpressionStatement', 'name': '', 'range': [1198, 1206], 'children': [{'type': 'CallExpression', 'name': 'run', 'range': [1198, 1205], 'children': [{'type': 'CallExpression', 'name': 'block_autogen_agent', 'range': [1202, 1204], 'children': []}]}]}]}
2025-01-08 09:36:10,772 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:36:12,329 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [123, 198], 'children': [{'type': 'VariableDeclaration', 'name': 'sample_block_codes', 'range': [123, 126], 'children': []}, {'type': 'ForLoop', 'name': '', 'range': [128, 133], 'children': []}, {'type': 'ModuleDeclaration', 'name': 'module', 'range': [129, 133], 'children': []}, {'type': 'VariableDeclaration', 'name': 'current_dir', 'range': [140, 147], 'children': []}, {'type': 'VariableDeclaration', 'name': 'file_path', 'range': [149, 158], 'children': []}, {'type': 'WithStatement', 'name': '', 'range': [160, 189], 'children': []}, {'type': 'VariableAssignment', 'name': 'sample_block_codes', 'range': [190, 196], 'children': []}]}
2025-01-08 09:36:12,329 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:36:12,972 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [0, 96], 'children': [{'type': 'ImportDeclaration', 'name': 'Path', 'range': [0, 4], 'children': []}, {'type': 'ImportDeclaration', 'name': 'User', 'range': [6, 12], 'children': []}, {'type': 'ImportDeclaration', 'name': 'StoreValueBlock', 'range': [14, 22], 'children': []}, {'type': 'ImportDeclaration', 'name': 'BlockInstallationBlock', 'range': [23, 31], 'children': []}, {'type': 'ImportDeclaration', 'name': 'SendWebRequestBlock', 'range': [32, 40], 'children': []}, {'type': 'ImportDeclaration', 'name': 'AITextGeneratorBlock', 'range': [41, 49], 'children': []}, {'type': 'ImportDeclaration', 'name': 'ExtractTextInformationBlock', 'range': [50, 60], 'children': []}, {'type': 'ImportDeclaration', 'name': 'FillTextTemplateBlock', 'range': [50, 60], 'children': []}, {'type': 'ImportDeclaration', 'name': 'Graph', 'range': [61, 75], 'children': []}, {'type': 'ImportDeclaration', 'name': 'Link', 'range': [61, 75], 'children': []}, {'type': 'ImportDeclaration', 'name': 'Node', 'range': [61, 75], 'children': []}, {'type': 'ImportDeclaration', 'name': 'create_graph', 'range': [61, 75], 'children': []}, {'type': 'ImportDeclaration', 'name': 'get_or_create_user', 'range': [76, 84], 'children': []}, {'type': 'ImportDeclaration', 'name': 'SpinTestServer', 'range': [85, 95], 'children': []}, {'type': 'ImportDeclaration', 'name': 'wait_execution', 'range': [85, 95], 'children': []}]}
2025-01-08 09:36:12,972 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:36:17,934 - INFO - Step 2 result: {'type': 'Program', 'name': 'sample_block_modules', 'range': [97, 122], 'children': [{'type': 'ObjectLiteral', 'range': [99, 121], 'children': [{'type': 'Property', 'key': '"llm"', 'value': '"Block that calls the AI model to generate text."', 'range': [101, 103], 'children': []}, {'type': 'Property', 'key': '"basic"', 'value': '"Block that does basic operations."', 'range': [106, 108], 'children': []}, {'type': 'Property', 'key': '"text"', 'value': '"Blocks that do text operations."', 'range': [111, 113], 'children': []}, {'type': 'Property', 'key': '"reddit"', 'value': '"Blocks that interacts with Reddit."', 'range': [116, 118], 'children': []}]}]}
2025-01-08 09:36:17,934 - INFO - Starting Step 3: AST simplification
2025-01-08 09:36:24,404 - INFO - Step 1 result: {'type': 'Program', 'name': 'create_test_user', 'range': [199, 240], 'children': [{'type': 'FunctionDeclaration', 'name': 'create_test_user', 'range': [199, 240], 'children': [{'type': 'AsyncKeyword', 'range': [199, 199]}, {'type': 'DefKeyword', 'range': [200, 200]}, {'type': 'FunctionName', 'name': 'create_test_user', 'range': [201, 201]}, {'type': 'ParameterList', 'range': [202, 203], 'children': []}, {'type': 'ReturnType', 'range': [204, 206], 'children': [{'type': 'Arrow', 'range': [204, 205]}, {'type': 'TypeName', 'name': 'User', 'range': [206, 206]}]}, {'type': 'Colon', 'range': [207, 207]}, {'type': 'NewLine', 'range': [208, 208]}, {'type': 'VariableDeclaration', 'name': 'test_user_data', 'range': [209, 228], 'children': [{'type': 'Assignment', 'range': [210, 210]}, {'type': 'ObjectLiteral', 'range': [211, 228], 'children': [{'type': 'NewLine', 'range': [212, 212]}, {'type': 'Property', 'name': 'sub', 'range': [213, 215], 'children': [{'type': 'StringLiteral', 'value': 'ef3b97d7-1161-4eb4-92b2-10c24fb154c1', 'range': [215, 215]}]}, {'type': 'Comma', 'range': [216, 216]}, {'type': 'NewLine', 'range': [217, 217]}, {'type': 'Property', 'name': 'email', 'range': [218, 220], 'children': [{'type': 'StringLiteral', 'value': 'testuser@example.com', 'range': [220, 220]}]}, {'type': 'Comma', 'range': [221, 221]}, {'type': 'NewLine', 'range': [222, 222]}, {'type': 'Property', 'name': 'name', 'range': [223, 225], 'children': [{'type': 'StringLiteral', 'value': 'Test User', 'range': [225, 225]}]}, {'type': 'Comma', 'range': [226, 226]}, {'type': 'NewLine', 'range': [227, 227]}]}]}, {'type': 'NewLine', 'range': [229, 229]}, {'type': 'VariableDeclaration', 'name': 'user', 'range': [230, 236], 'children': [{'type': 'Assignment', 'range': [231, 231]}, {'type': 'AwaitExpression', 'range': [232, 236], 'children': [{'type': 'FunctionCall', 'name': 'get_or_create_user', 'range': [233, 236], 'children': [{'type': 'ArgumentList', 'range': [234, 236], 'children': [{'type': 'VariableReference', 'name': 'test_user_data', 'range': [235, 235]}]}]}]}]}, {'type': 'NewLine', 'range': [237, 237]}, {'type': 'ReturnStatement', 'range': [238, 240], 'children': [{'type': 'VariableReference', 'name': 'user', 'range': [239, 239]}, {'type': 'NewLine', 'range': [240, 240]}]}]}]}
2025-01-08 09:36:24,405 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:36:25,944 - INFO - Step 3 result: {'type': 'Program', 'name': 'sample_block_modules', 'range': [97, 122], 'children': [{'type': 'ObjectLiteral', 'range': [99, 121], 'children': [{'type': 'Property', 'key': '"llm"', 'value': '"Block that calls the AI model to generate text."', 'range': [101, 103], 'children': []}, {'type': 'Property', 'key': '"basic"', 'value': '"Block that does basic operations."', 'range': [106, 108], 'children': []}, {'type': 'Property', 'key': '"text"', 'value': '"Blocks that do text operations."', 'range': [111, 113], 'children': []}, {'type': 'Property', 'key': '"reddit"', 'value': '"Blocks that interacts with Reddit."', 'range': [116, 118], 'children': []}]}]}
2025-01-08 09:36:25,945 - INFO - Starting Step 4: AST normalization
2025-01-08 09:36:27,406 - INFO - Step 1 result: {'type': 'Program', 'name': 'block_autogen_agent', 'range': [1072, 1186], 'children': [{'type': 'FunctionDeclaration', 'name': 'block_autogen_agent', 'range': [1072, 1078], 'children': []}, {'type': 'AsyncWithStatement', 'name': '', 'range': [1079, 1087], 'children': [{'type': 'CallExpression', 'name': 'SpinTestServer', 'range': [1081, 1083], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'test_user', 'range': [1088, 1094], 'children': [{'type': 'CallExpression', 'name': 'create_test_user', 'range': [1091, 1093], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'test_graph', 'range': [1095, 1110], 'children': [{'type': 'CallExpression', 'name': 'create_graph', 'range': [1098, 1109], 'children': [{'type': 'CallExpression', 'name': 'create_test_graph', 'range': [1100, 1102], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'input_data', 'range': [1111, 1118], 'children': []}, {'type': 'VariableDeclaration', 'name': 'response', 'range': [1119, 1140], 'children': [{'type': 'CallExpression', 'name': 'test_execute_graph', 'range': [1126, 1139], 'children': []}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [1141, 1145], 'children': [{'type': 'CallExpression', 'name': 'print', 'range': [1141, 1144], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'result', 'range': [1146, 1180], 'children': [{'type': 'CallExpression', 'name': 'wait_execution', 'range': [1149, 1179], 'children': []}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [1181, 1185], 'children': [{'type': 'CallExpression', 'name': 'print', 'range': [1181, 1184], 'children': []}]}]}
2025-01-08 09:36:27,406 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:36:29,118 - INFO - Step 2 result: {'nodes': [{'type': 'IfStatement', 'name': '', 'range': [1187, 1193], 'children': [{'type': 'Condition', 'name': '', 'range': [1187, 1191], 'children': [{'type': 'Variable', 'name': '__name__', 'range': [1188, 1188], 'children': []}, {'type': 'Operator', 'name': '==', 'range': [1189, 1190], 'children': []}, {'type': 'StringLiteral', 'name': '"__main__"', 'range': [1191, 1191], 'children': []}]}]}, {'type': 'ImportStatement', 'name': 'asyncio', 'range': [1194, 1196], 'children': [{'type': 'Module', 'name': 'asyncio', 'range': [1195, 1195], 'children': []}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [1198, 1206], 'children': [{'type': 'CallExpression', 'name': 'run', 'range': [1198, 1205], 'children': [{'type': 'MemberExpression', 'name': 'asyncio.run', 'range': [1198, 1200], 'children': [{'type': 'Variable', 'name': 'asyncio', 'range': [1198, 1198], 'children': []}, {'type': 'Property', 'name': 'run', 'range': [1200, 1200], 'children': []}]}, {'type': 'CallExpression', 'name': 'block_autogen_agent', 'range': [1202, 1204], 'children': []}]}]}]}
2025-01-08 09:36:29,118 - INFO - Starting Step 3: AST simplification
2025-01-08 09:36:41,407 - INFO - Step 4 result: {'type': 'Program', 'name': 'sample_block_modules', 'range': [97, 122], 'children': [{'type': 'ObjectExpression', 'range': [99, 121], 'children': [{'type': 'Property', 'key': {'type': 'Literal', 'value': 'llm', 'range': [101, 103]}, 'value': {'type': 'Literal', 'value': 'Block that calls the AI model to generate text.', 'range': [101, 103]}, 'range': [101, 103], 'children': []}, {'type': 'Property', 'key': {'type': 'Literal', 'value': 'basic', 'range': [106, 108]}, 'value': {'type': 'Literal', 'value': 'Block that does basic operations.', 'range': [106, 108]}, 'range': [106, 108], 'children': []}, {'type': 'Property', 'key': {'type': 'Literal', 'value': 'text', 'range': [111, 113]}, 'value': {'type': 'Literal', 'value': 'Blocks that do text operations.', 'range': [111, 113]}, 'range': [111, 113], 'children': []}, {'type': 'Property', 'key': {'type': 'Literal', 'value': 'reddit', 'range': [116, 118]}, 'value': {'type': 'Literal', 'value': 'Blocks that interacts with Reddit.', 'range': [116, 118]}, 'range': [116, 118], 'children': []}]}]}
2025-01-08 09:36:41,407 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:36:45,584 - INFO - Step 2 result: {'nodes': [{'type': 'ImportDeclaration', 'name': 'Path', 'range': [0, 4], 'children': [{'type': 'FromImport', 'name': 'pathlib', 'range': [0, 1], 'children': []}, {'type': 'Import', 'name': 'Path', 'range': [2, 3], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'User', 'range': [6, 12], 'children': [{'type': 'FromImport', 'name': 'prisma.models', 'range': [6, 9], 'children': []}, {'type': 'Import', 'name': 'User', 'range': [10, 11], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'StoreValueBlock', 'range': [14, 22], 'children': [{'type': 'FromImport', 'name': 'backend.blocks.basic', 'range': [14, 19], 'children': []}, {'type': 'Import', 'name': 'StoreValueBlock', 'range': [20, 21], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'BlockInstallationBlock', 'range': [23, 31], 'children': [{'type': 'FromImport', 'name': 'backend.blocks.block', 'range': [23, 28], 'children': []}, {'type': 'Import', 'name': 'BlockInstallationBlock', 'range': [29, 30], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'SendWebRequestBlock', 'range': [32, 40], 'children': [{'type': 'FromImport', 'name': 'backend.blocks.http', 'range': [32, 37], 'children': []}, {'type': 'Import', 'name': 'SendWebRequestBlock', 'range': [38, 39], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'AITextGeneratorBlock', 'range': [41, 49], 'children': [{'type': 'FromImport', 'name': 'backend.blocks.llm', 'range': [41, 46], 'children': []}, {'type': 'Import', 'name': 'AITextGeneratorBlock', 'range': [47, 48], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'ExtractTextInformationBlock', 'range': [50, 60], 'children': [{'type': 'FromImport', 'name': 'backend.blocks.text', 'range': [50, 55], 'children': []}, {'type': 'Import', 'name': 'ExtractTextInformationBlock', 'range': [56, 57], 'children': []}, {'type': 'Import', 'name': 'FillTextTemplateBlock', 'range': [58, 59], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'Graph', 'range': [61, 75], 'children': [{'type': 'FromImport', 'name': 'backend.data.graph', 'range': [61, 66], 'children': []}, {'type': 'Import', 'name': 'Graph', 'range': [67, 68], 'children': []}, {'type': 'Import', 'name': 'Link', 'range': [69, 70], 'children': []}, {'type': 'Import', 'name': 'Node', 'range': [71, 72], 'children': []}, {'type': 'Import', 'name': 'create_graph', 'range': [73, 74], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'get_or_create_user', 'range': [76, 84], 'children': [{'type': 'FromImport', 'name': 'backend.data.user', 'range': [76, 81], 'children': []}, {'type': 'Import', 'name': 'get_or_create_user', 'range': [82, 83], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'SpinTestServer', 'range': [85, 95], 'children': [{'type': 'FromImport', 'name': 'backend.util.test', 'range': [85, 90], 'children': []}, {'type': 'Import', 'name': 'SpinTestServer', 'range': [91, 92], 'children': []}, {'type': 'Import', 'name': 'wait_execution', 'range': [93, 94], 'children': []}]}]}
2025-01-08 09:36:45,584 - INFO - Starting Step 3: AST simplification
2025-01-08 09:36:45,603 - INFO - Step 3 result: {'nodes': [{'type': 'IfStatement', 'name': '', 'range': [1187, 1193], 'children': [{'type': 'Condition', 'name': '', 'range': [1187, 1191], 'children': [{'type': 'Variable', 'name': '__name__', 'range': [1188, 1188], 'children': []}, {'type': 'Operator', 'name': '==', 'range': [1189, 1190], 'children': []}, {'type': 'StringLiteral', 'name': '"__main__"', 'range': [1191, 1191], 'children': []}]}]}, {'type': 'ImportStatement', 'name': 'asyncio', 'range': [1194, 1196], 'children': [{'type': 'Module', 'name': 'asyncio', 'range': [1195, 1195], 'children': []}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [1198, 1206], 'children': [{'type': 'CallExpression', 'name': 'run', 'range': [1198, 1205], 'children': [{'type': 'MemberExpression', 'name': 'asyncio.run', 'range': [1198, 1200], 'children': [{'type': 'Variable', 'name': 'asyncio', 'range': [1198, 1198], 'children': []}, {'type': 'Property', 'name': 'run', 'range': [1200, 1200], 'children': []}]}, {'type': 'CallExpression', 'name': 'block_autogen_agent', 'range': [1202, 1204], 'children': []}]}]}]}
2025-01-08 09:36:45,603 - INFO - Starting Step 4: AST normalization
2025-01-08 09:36:52,765 - INFO - Step 5 result: {'type': 'Program', 'name': 'sample_block_modules', 'range': [97, 122], 'children': [{'type': 'ObjectExpression', 'range': [99, 121], 'children': [{'type': 'Property', 'key': {'type': 'Literal', 'value': 'llm', 'range': [101, 103]}, 'value': {'type': 'Literal', 'value': 'Block that calls the AI model to generate text.', 'range': [101, 103]}, 'range': [101, 103], 'children': []}, {'type': 'Property', 'key': {'type': 'Literal', 'value': 'basic', 'range': [106, 108]}, 'value': {'type': 'Literal', 'value': 'Block that does basic operations.', 'range': [106, 108]}, 'range': [106, 108], 'children': []}, {'type': 'Property', 'key': {'type': 'Literal', 'value': 'text', 'range': [111, 113]}, 'value': {'type': 'Literal', 'value': 'Blocks that do text operations.', 'range': [111, 113]}, 'range': [111, 113], 'children': []}, {'type': 'Property', 'key': {'type': 'Literal', 'value': 'reddit', 'range': [116, 118]}, 'value': {'type': 'Literal', 'value': 'Blocks that interacts with Reddit.', 'range': [116, 118]}, 'range': [116, 118], 'children': []}]}]}
2025-01-08 09:36:52,765 - INFO - Completed main AST analysis flow
2025-01-08 09:36:52,766 - INFO - Successfully processed chunk
2025-01-08 09:36:58,096 - INFO - Step 2 result: {'type': 'Program', 'name': 'create_test_user', 'range': [199, 240], 'children': [{'type': 'FunctionDeclaration', 'name': 'create_test_user', 'range': [199, 240], 'children': [{'type': 'AsyncKeyword', 'range': [199, 199]}, {'type': 'DefKeyword', 'range': [200, 200]}, {'type': 'FunctionName', 'name': 'create_test_user', 'range': [201, 201]}, {'type': 'ParameterList', 'range': [202, 203], 'children': []}, {'type': 'ReturnType', 'range': [204, 206], 'children': [{'type': 'Arrow', 'range': [204, 205]}, {'type': 'TypeName', 'name': 'User', 'range': [206, 206]}]}, {'type': 'Colon', 'range': [207, 207]}, {'type': 'NewLine', 'range': [208, 208]}, {'type': 'VariableDeclaration', 'name': 'test_user_data', 'range': [209, 228], 'children': [{'type': 'Assignment', 'range': [210, 210]}, {'type': 'ObjectLiteral', 'range': [211, 228], 'children': [{'type': 'NewLine', 'range': [212, 212]}, {'type': 'Property', 'name': 'sub', 'range': [213, 215], 'children': [{'type': 'StringLiteral', 'value': 'ef3b97d7-1161-4eb4-92b2-10c24fb154c1', 'range': [215, 215]}]}, {'type': 'Comma', 'range': [216, 216]}, {'type': 'NewLine', 'range': [217, 217]}, {'type': 'Property', 'name': 'email', 'range': [218, 220], 'children': [{'type': 'StringLiteral', 'value': 'testuser@example.com', 'range': [220, 220]}]}, {'type': 'Comma', 'range': [221, 221]}, {'type': 'NewLine', 'range': [222, 222]}, {'type': 'Property', 'name': 'name', 'range': [223, 225], 'children': [{'type': 'StringLiteral', 'value': 'Test User', 'range': [225, 225]}]}, {'type': 'Comma', 'range': [226, 226]}, {'type': 'NewLine', 'range': [227, 227]}]}]}, {'type': 'NewLine', 'range': [229, 229]}, {'type': 'VariableDeclaration', 'name': 'user', 'range': [230, 236], 'children': [{'type': 'Assignment', 'range': [231, 231]}, {'type': 'AwaitExpression', 'range': [232, 236], 'children': [{'type': 'FunctionCall', 'name': 'get_or_create_user', 'range': [233, 236], 'children': [{'type': 'ArgumentList', 'range': [234, 236], 'children': [{'type': 'VariableReference', 'name': 'test_user_data', 'range': [235, 235]}]}]}]}]}, {'type': 'NewLine', 'range': [237, 237]}, {'type': 'ReturnStatement', 'range': [238, 240], 'children': [{'type': 'VariableReference', 'name': 'user', 'range': [239, 239]}, {'type': 'NewLine', 'range': [240, 240]}]}]}]}
2025-01-08 09:36:58,097 - INFO - Starting Step 3: AST simplification
2025-01-08 09:36:58,176 - INFO - Step 4 result: {'nodes': [{'type': 'IfStatement', 'name': '', 'range': [1187, 1193], 'children': [{'type': 'BinaryExpression', 'name': '', 'range': [1187, 1191], 'children': [{'type': 'Identifier', 'name': '__name__', 'range': [1188, 1188], 'children': []}, {'type': 'Operator', 'name': '==', 'range': [1189, 1190], 'children': []}, {'type': 'Literal', 'name': '"__main__"', 'range': [1191, 1191], 'children': []}]}]}, {'type': 'ImportStatement', 'name': 'asyncio', 'range': [1194, 1196], 'children': [{'type': 'Module', 'name': 'asyncio', 'range': [1195, 1195], 'children': []}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [1198, 1206], 'children': [{'type': 'CallExpression', 'name': 'run', 'range': [1198, 1205], 'children': [{'type': 'MemberExpression', 'name': 'asyncio.run', 'range': [1198, 1200], 'children': [{'type': 'Identifier', 'name': 'asyncio', 'range': [1198, 1198], 'children': []}, {'type': 'Property', 'name': 'run', 'range': [1200, 1200], 'children': []}]}, {'type': 'CallExpression', 'name': 'block_autogen_agent', 'range': [1202, 1204], 'children': []}]}]}]}
2025-01-08 09:36:58,176 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:37:03,510 - INFO - Step 2 result: {'nodes': [{'type': 'VariableDeclaration', 'name': 'sample_block_codes', 'range': [123, 126], 'children': [{'type': 'Assignment', 'name': '=', 'range': [124, 124], 'children': []}, {'type': 'Block', 'name': '{}', 'range': [125, 126], 'children': []}]}, {'type': 'ForLoop', 'name': '', 'range': [128, 133], 'children': [{'type': 'Keyword', 'name': 'for', 'range': [128, 128], 'children': []}, {'type': 'VariableDeclaration', 'name': 'module', 'range': [129, 129], 'children': []}, {'type': 'Keyword', 'name': 'in', 'range': [132, 132], 'children': []}, {'type': 'Expression', 'name': 'sample_block_modules.items()', 'range': [133, 137], 'children': [{'type': 'Variable', 'name': 'sample_block_modules', 'range': [133, 133], 'children': []}, {'type': 'MethodCall', 'name': 'items', 'range': [135, 137], 'children': []}]}]}, {'type': 'ModuleDeclaration', 'name': 'module', 'range': [129, 133], 'children': []}, {'type': 'VariableDeclaration', 'name': 'current_dir', 'range': [140, 147], 'children': [{'type': 'Assignment', 'name': '=', 'range': [141, 141], 'children': []}, {'type': 'Expression', 'name': 'Path(__file__).parent', 'range': [142, 147], 'children': [{'type': 'FunctionCall', 'name': 'Path', 'range': [142, 145], 'children': [{'type': 'Variable', 'name': '__file__', 'range': [144, 144], 'children': []}]}, {'type': 'PropertyAccess', 'name': 'parent', 'range': [146, 147], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'file_path', 'range': [149, 158], 'children': [{'type': 'Assignment', 'name': '=', 'range': [150, 150], 'children': []}, {'type': 'Expression', 'name': 'current_dir.parent/"blocks"/f"{module}.py"', 'range': [151, 158], 'children': [{'type': 'Variable', 'name': 'current_dir', 'range': [151, 151], 'children': []}, {'type': 'PropertyAccess', 'name': 'parent', 'range': [152, 153], 'children': []}, {'type': 'StringLiteral', 'name': '"blocks"', 'range': [155, 155], 'children': []}, {'type': 'StringLiteral', 'name': 'f"{module}.py"', 'range': [157, 158], 'children': []}]}]}, {'type': 'WithStatement', 'name': '', 'range': [160, 189], 'children': [{'type': 'Keyword', 'name': 'with', 'range': [160, 160], 'children': []}, {'type': 'FunctionCall', 'name': 'open', 'range': [161, 166], 'children': [{'type': 'Variable', 'name': 'file_path', 'range': [163, 163], 'children': []}, {'type': 'StringLiteral', 'name': '"r"', 'range': [165, 165], 'children': []}]}, {'type': 'Keyword', 'name': 'as', 'range': [167, 167], 'children': []}, {'type': 'Variable', 'name': 'f', 'range': [168, 168], 'children': []}, {'type': 'Block', 'name': '{}', 'range': [169, 189], 'children': [{'type': 'VariableDeclaration', 'name': 'code', 'range': [171, 188], 'children': [{'type': 'Assignment', 'name': '=', 'range': [172, 172], 'children': []}, {'type': 'Expression', 'name': '"\\n".join(["```python", f.read(), "```"])', 'range': [173, 188], 'children': [{'type': 'StringLiteral', 'name': '"\\n"', 'range': [173, 173], 'children': []}, {'type': 'MethodCall', 'name': 'join', 'range': [174, 188], 'children': [{'type': 'ArrayLiteral', 'name': '["```python", f.read(), "```"]', 'range': [176, 187], 'children': [{'type': 'StringLiteral', 'name': '"```python"', 'range': [178, 178], 'children': []}, {'type': 'MethodCall', 'name': 'read', 'range': [180, 184], 'children': []}, {'type': 'StringLiteral', 'name': '"```"', 'range': [186, 186], 'children': []}]}]}]}]}]}]}, {'type': 'VariableAssignment', 'name': 'sample_block_codes', 'range': [190, 196], 'children': [{'type': 'Assignment', 'name': '=', 'range': [194, 194], 'children': []}, {'type': 'Expression', 'name': 'f"[Example: {description}]\\n{code}"', 'range': [195, 196], 'children': [{'type': 'StringLiteral', 'name': 'f"[Example: {description}]\\n{code}"', 'range': [195, 196], 'children': []}]}]}]}
2025-01-08 09:37:03,510 - INFO - Starting Step 3: AST simplification
2025-01-08 09:37:14,266 - INFO - Step 5 result: {'nodes': [{'type': 'Program', 'name': 'MainProgram', 'range': [1187, 1206], 'children': [{'type': 'IfStatement', 'name': '', 'range': [1187, 1193], 'children': [{'type': 'BinaryExpression', 'name': '', 'range': [1187, 1191], 'children': [{'type': 'Identifier', 'name': '__name__', 'range': [1188, 1188], 'children': []}, {'type': 'Operator', 'name': '==', 'range': [1189, 1190], 'children': []}, {'type': 'Literal', 'name': '"__main__"', 'range': [1191, 1191], 'children': []}]}]}, {'type': 'ImportStatement', 'name': 'asyncio', 'range': [1194, 1196], 'children': [{'type': 'Module', 'name': 'asyncio', 'range': [1195, 1195], 'children': []}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [1198, 1206], 'children': [{'type': 'CallExpression', 'name': 'run', 'range': [1198, 1205], 'children': [{'type': 'MemberExpression', 'name': 'asyncio.run', 'range': [1198, 1200], 'children': [{'type': 'Identifier', 'name': 'asyncio', 'range': [1198, 1198], 'children': []}, {'type': 'Property', 'name': 'run', 'range': [1200, 1200], 'children': []}]}, {'type': 'CallExpression', 'name': 'block_autogen_agent', 'range': [1202, 1204], 'children': []}]}]}]}]}
2025-01-08 09:37:14,266 - INFO - Completed main AST analysis flow
2025-01-08 09:37:14,267 - INFO - Successfully processed chunk
2025-01-08 09:37:15,643 - INFO - Step 3 result: {'nodes': [{'type': 'ImportDeclaration', 'name': 'Path', 'range': [0, 4], 'children': [{'type': 'FromImport', 'name': 'pathlib', 'range': [0, 1], 'children': []}, {'type': 'Import', 'name': 'Path', 'range': [2, 3], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'User', 'range': [6, 12], 'children': [{'type': 'FromImport', 'name': 'prisma.models', 'range': [6, 9], 'children': []}, {'type': 'Import', 'name': 'User', 'range': [10, 11], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'StoreValueBlock', 'range': [14, 22], 'children': [{'type': 'FromImport', 'name': 'backend.blocks.basic', 'range': [14, 19], 'children': []}, {'type': 'Import', 'name': 'StoreValueBlock', 'range': [20, 21], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'BlockInstallationBlock', 'range': [23, 31], 'children': [{'type': 'FromImport', 'name': 'backend.blocks.block', 'range': [23, 28], 'children': []}, {'type': 'Import', 'name': 'BlockInstallationBlock', 'range': [29, 30], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'SendWebRequestBlock', 'range': [32, 40], 'children': [{'type': 'FromImport', 'name': 'backend.blocks.http', 'range': [32, 37], 'children': []}, {'type': 'Import', 'name': 'SendWebRequestBlock', 'range': [38, 39], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'AITextGeneratorBlock', 'range': [41, 49], 'children': [{'type': 'FromImport', 'name': 'backend.blocks.llm', 'range': [41, 46], 'children': []}, {'type': 'Import', 'name': 'AITextGeneratorBlock', 'range': [47, 48], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'ExtractTextInformationBlock', 'range': [50, 60], 'children': [{'type': 'FromImport', 'name': 'backend.blocks.text', 'range': [50, 55], 'children': []}, {'type': 'Import', 'name': 'ExtractTextInformationBlock', 'range': [56, 57], 'children': []}, {'type': 'Import', 'name': 'FillTextTemplateBlock', 'range': [58, 59], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'Graph', 'range': [61, 75], 'children': [{'type': 'FromImport', 'name': 'backend.data.graph', 'range': [61, 66], 'children': []}, {'type': 'Import', 'name': 'Graph', 'range': [67, 68], 'children': []}, {'type': 'Import', 'name': 'Link', 'range': [69, 70], 'children': []}, {'type': 'Import', 'name': 'Node', 'range': [71, 72], 'children': []}, {'type': 'Import', 'name': 'create_graph', 'range': [73, 74], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'get_or_create_user', 'range': [76, 84], 'children': [{'type': 'FromImport', 'name': 'backend.data.user', 'range': [76, 81], 'children': []}, {'type': 'Import', 'name': 'get_or_create_user', 'range': [82, 83], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'SpinTestServer', 'range': [85, 95], 'children': [{'type': 'FromImport', 'name': 'backend.util.test', 'range': [85, 90], 'children': []}, {'type': 'Import', 'name': 'SpinTestServer', 'range': [91, 92], 'children': []}, {'type': 'Import', 'name': 'wait_execution', 'range': [93, 94], 'children': []}]}]}
2025-01-08 09:37:15,643 - INFO - Starting Step 4: AST normalization
2025-01-08 09:37:21,159 - INFO - Step 3 result: {'type': 'Program', 'name': 'create_test_user', 'range': [199, 240], 'children': [{'type': 'FunctionDeclaration', 'name': 'create_test_user', 'range': [199, 240], 'children': [{'type': 'AsyncKeyword', 'range': [199, 199]}, {'type': 'DefKeyword', 'range': [200, 200]}, {'type': 'FunctionName', 'name': 'create_test_user', 'range': [201, 201]}, {'type': 'ParameterList', 'range': [202, 203], 'children': []}, {'type': 'ReturnType', 'range': [204, 206], 'children': [{'type': 'Arrow', 'range': [204, 205]}, {'type': 'TypeName', 'name': 'User', 'range': [206, 206]}]}, {'type': 'VariableDeclaration', 'name': 'test_user_data', 'range': [209, 228], 'children': [{'type': 'ObjectLiteral', 'range': [211, 228], 'children': [{'type': 'Property', 'name': 'sub', 'range': [213, 215], 'children': [{'type': 'StringLiteral', 'value': 'ef3b97d7-1161-4eb4-92b2-10c24fb154c1', 'range': [215, 215]}]}, {'type': 'Property', 'name': 'email', 'range': [218, 220], 'children': [{'type': 'StringLiteral', 'value': 'testuser@example.com', 'range': [220, 220]}]}, {'type': 'Property', 'name': 'name', 'range': [223, 225], 'children': [{'type': 'StringLiteral', 'value': 'Test User', 'range': [225, 225]}]}]}]}, {'type': 'VariableDeclaration', 'name': 'user', 'range': [230, 236], 'children': [{'type': 'AwaitExpression', 'range': [232, 236], 'children': [{'type': 'FunctionCall', 'name': 'get_or_create_user', 'range': [233, 236], 'children': [{'type': 'ArgumentList', 'range': [234, 236], 'children': [{'type': 'VariableReference', 'name': 'test_user_data', 'range': [235, 235]}]}]}]}]}, {'type': 'ReturnStatement', 'range': [238, 240], 'children': [{'type': 'VariableReference', 'name': 'user', 'range': [239, 239]}]}]}]}
2025-01-08 09:37:21,159 - INFO - Starting Step 4: AST normalization
2025-01-08 09:37:40,383 - INFO - Step 4 result: {'type': 'Program', 'name': 'create_test_user', 'range': [199, 240], 'children': [{'type': 'FunctionDecl', 'name': 'create_test_user', 'range': [199, 240], 'children': [{'type': 'AsyncKeyword', 'range': [199, 199]}, {'type': 'DefKeyword', 'range': [200, 200]}, {'type': 'Identifier', 'name': 'create_test_user', 'range': [201, 201]}, {'type': 'ParameterList', 'range': [202, 203], 'children': []}, {'type': 'ReturnType', 'range': [204, 206], 'children': [{'type': 'Arrow', 'range': [204, 205]}, {'type': 'TypeName', 'name': 'User', 'range': [206, 206]}]}, {'type': 'VariableDecl', 'name': 'test_user_data', 'range': [209, 228], 'children': [{'type': 'ObjectLiteral', 'range': [211, 228], 'children': [{'type': 'Property', 'name': 'sub', 'range': [213, 215], 'children': [{'type': 'Literal', 'value': 'ef3b97d7-1161-4eb4-92b2-10c24fb154c1', 'range': [215, 215]}]}, {'type': 'Property', 'name': 'email', 'range': [218, 220], 'children': [{'type': 'Literal', 'value': 'testuser@example.com', 'range': [220, 220]}]}, {'type': 'Property', 'name': 'name', 'range': [223, 225], 'children': [{'type': 'Literal', 'value': 'Test User', 'range': [225, 225]}]}]}]}, {'type': 'VariableDecl', 'name': 'user', 'range': [230, 236], 'children': [{'type': 'AwaitExpression', 'range': [232, 236], 'children': [{'type': 'CallExpression', 'name': 'get_or_create_user', 'range': [233, 236], 'children': [{'type': 'ArgumentList', 'range': [234, 236], 'children': [{'type': 'Identifier', 'name': 'test_user_data', 'range': [235, 235]}]}]}]}]}, {'type': 'ReturnStatement', 'range': [238, 240], 'children': [{'type': 'Identifier', 'name': 'user', 'range': [239, 239]}]}]}]}
2025-01-08 09:37:40,383 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:37:42,705 - INFO - Step 3 result: {'nodes': [{'type': 'VariableDeclaration', 'name': 'sample_block_codes', 'range': [123, 126], 'children': [{'type': 'Assignment', 'name': '=', 'range': [124, 124], 'children': []}, {'type': 'Block', 'name': '{}', 'range': [125, 126], 'children': []}]}, {'type': 'ForLoop', 'name': '', 'range': [128, 133], 'children': [{'type': 'Keyword', 'name': 'for', 'range': [128, 128], 'children': []}, {'type': 'VariableDeclaration', 'name': 'module', 'range': [129, 129], 'children': []}, {'type': 'Keyword', 'name': 'in', 'range': [132, 132], 'children': []}, {'type': 'Expression', 'name': 'sample_block_modules.items', 'range': [133, 137], 'children': [{'type': 'Variable', 'name': 'sample_block_modules', 'range': [133, 133], 'children': []}, {'type': 'MethodCall', 'name': 'items', 'range': [135, 137], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'current_dir', 'range': [140, 147], 'children': [{'type': 'Assignment', 'name': '=', 'range': [141, 141], 'children': []}, {'type': 'Expression', 'name': 'Path(__file__).parent', 'range': [142, 147], 'children': [{'type': 'FunctionCall', 'name': 'Path', 'range': [142, 145], 'children': [{'type': 'Variable', 'name': '__file__', 'range': [144, 144], 'children': []}]}, {'type': 'PropertyAccess', 'name': 'parent', 'range': [146, 147], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'file_path', 'range': [149, 158], 'children': [{'type': 'Assignment', 'name': '=', 'range': [150, 150], 'children': []}, {'type': 'Expression', 'name': 'current_dir.parent/"blocks"/f"{module}.py"', 'range': [151, 158], 'children': [{'type': 'Variable', 'name': 'current_dir', 'range': [151, 151], 'children': []}, {'type': 'PropertyAccess', 'name': 'parent', 'range': [152, 153], 'children': []}, {'type': 'StringLiteral', 'name': '"blocks"', 'range': [155, 155], 'children': []}, {'type': 'StringLiteral', 'name': 'f"{module}.py"', 'range': [157, 158], 'children': []}]}]}, {'type': 'WithStatement', 'name': '', 'range': [160, 189], 'children': [{'type': 'Keyword', 'name': 'with', 'range': [160, 160], 'children': []}, {'type': 'FunctionCall', 'name': 'open', 'range': [161, 166], 'children': [{'type': 'Variable', 'name': 'file_path', 'range': [163, 163], 'children': []}, {'type': 'StringLiteral', 'name': '"r"', 'range': [165, 165], 'children': []}]}, {'type': 'Keyword', 'name': 'as', 'range': [167, 167], 'children': []}, {'type': 'Variable', 'name': 'f', 'range': [168, 168], 'children': []}, {'type': 'Block', 'name': '{}', 'range': [169, 189], 'children': [{'type': 'VariableDeclaration', 'name': 'code', 'range': [171, 188], 'children': [{'type': 'Assignment', 'name': '=', 'range': [172, 172], 'children': []}, {'type': 'Expression', 'name': '"\\n".join(["```python", f.read(), "```"])', 'range': [173, 188], 'children': [{'type': 'StringLiteral', 'name': '"\\n"', 'range': [173, 173], 'children': []}, {'type': 'MethodCall', 'name': 'join', 'range': [174, 188], 'children': [{'type': 'ArrayLiteral', 'name': '["```python", f.read(), "```"]', 'range': [176, 187], 'children': [{'type': 'StringLiteral', 'name': '"```python"', 'range': [178, 178], 'children': []}, {'type': 'MethodCall', 'name': 'read', 'range': [180, 184], 'children': []}, {'type': 'StringLiteral', 'name': '"```"', 'range': [186, 186], 'children': []}]}]}]}]}]}]}, {'type': 'VariableAssignment', 'name': 'sample_block_codes', 'range': [190, 196], 'children': [{'type': 'Assignment', 'name': '=', 'range': [194, 194], 'children': []}, {'type': 'Expression', 'name': 'f"[Example: {description}]\\n{code}"', 'range': [195, 196], 'children': [{'type': 'StringLiteral', 'name': 'f"[Example: {description}]\\n{code}"', 'range': [195, 196], 'children': []}]}]}]}
2025-01-08 09:37:42,705 - INFO - Starting Step 4: AST normalization
2025-01-08 09:37:53,944 - INFO - Step 4 result: {'nodes': [{'type': 'ImportDeclaration', 'name': 'Path', 'range': [0, 4], 'children': [{'type': 'FromImport', 'name': 'pathlib', 'range': [0, 1], 'children': []}, {'type': 'Import', 'name': 'Path', 'range': [2, 3], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'User', 'range': [6, 12], 'children': [{'type': 'FromImport', 'name': 'prisma.models', 'range': [6, 9], 'children': []}, {'type': 'Import', 'name': 'User', 'range': [10, 11], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'StoreValueBlock', 'range': [14, 22], 'children': [{'type': 'FromImport', 'name': 'backend.blocks.basic', 'range': [14, 19], 'children': []}, {'type': 'Import', 'name': 'StoreValueBlock', 'range': [20, 21], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'BlockInstallationBlock', 'range': [23, 31], 'children': [{'type': 'FromImport', 'name': 'backend.blocks.block', 'range': [23, 28], 'children': []}, {'type': 'Import', 'name': 'BlockInstallationBlock', 'range': [29, 30], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'SendWebRequestBlock', 'range': [32, 40], 'children': [{'type': 'FromImport', 'name': 'backend.blocks.http', 'range': [32, 37], 'children': []}, {'type': 'Import', 'name': 'SendWebRequestBlock', 'range': [38, 39], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'AITextGeneratorBlock', 'range': [41, 49], 'children': [{'type': 'FromImport', 'name': 'backend.blocks.llm', 'range': [41, 46], 'children': []}, {'type': 'Import', 'name': 'AITextGeneratorBlock', 'range': [47, 48], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'ExtractTextInformationBlock', 'range': [50, 60], 'children': [{'type': 'FromImport', 'name': 'backend.blocks.text', 'range': [50, 55], 'children': []}, {'type': 'Import', 'name': 'ExtractTextInformationBlock', 'range': [56, 57], 'children': []}, {'type': 'Import', 'name': 'FillTextTemplateBlock', 'range': [58, 59], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'Graph', 'range': [61, 75], 'children': [{'type': 'FromImport', 'name': 'backend.data.graph', 'range': [61, 66], 'children': []}, {'type': 'Import', 'name': 'Graph', 'range': [67, 68], 'children': []}, {'type': 'Import', 'name': 'Link', 'range': [69, 70], 'children': []}, {'type': 'Import', 'name': 'Node', 'range': [71, 72], 'children': []}, {'type': 'Import', 'name': 'create_graph', 'range': [73, 74], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'get_or_create_user', 'range': [76, 84], 'children': [{'type': 'FromImport', 'name': 'backend.data.user', 'range': [76, 81], 'children': []}, {'type': 'Import', 'name': 'get_or_create_user', 'range': [82, 83], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'SpinTestServer', 'range': [85, 95], 'children': [{'type': 'FromImport', 'name': 'backend.util.test', 'range': [85, 90], 'children': []}, {'type': 'Import', 'name': 'SpinTestServer', 'range': [91, 92], 'children': []}, {'type': 'Import', 'name': 'wait_execution', 'range': [93, 94], 'children': []}]}]}
2025-01-08 09:37:53,944 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:37:59,707 - INFO - Step 5 result: {'type': 'Program', 'name': 'create_test_user', 'range': [199, 240], 'children': [{'type': 'FunctionDecl', 'name': 'create_test_user', 'range': [199, 240], 'children': [{'type': 'AsyncKeyword', 'range': [199, 199]}, {'type': 'DefKeyword', 'range': [200, 200]}, {'type': 'Identifier', 'name': 'create_test_user', 'range': [201, 201]}, {'type': 'ParameterList', 'range': [202, 203], 'children': []}, {'type': 'ReturnType', 'range': [204, 206], 'children': [{'type': 'Arrow', 'range': [204, 205]}, {'type': 'TypeName', 'name': 'User', 'range': [206, 206]}]}, {'type': 'VariableDecl', 'name': 'test_user_data', 'range': [209, 228], 'children': [{'type': 'ObjectLiteral', 'range': [211, 228], 'children': [{'type': 'Property', 'name': 'sub', 'range': [213, 215], 'children': [{'type': 'Literal', 'value': 'ef3b97d7-1161-4eb4-92b2-10c24fb154c1', 'range': [215, 215]}]}, {'type': 'Property', 'name': 'email', 'range': [218, 220], 'children': [{'type': 'Literal', 'value': 'testuser@example.com', 'range': [220, 220]}]}, {'type': 'Property', 'name': 'name', 'range': [223, 225], 'children': [{'type': 'Literal', 'value': 'Test User', 'range': [225, 225]}]}]}]}, {'type': 'VariableDecl', 'name': 'user', 'range': [230, 236], 'children': [{'type': 'AwaitExpression', 'range': [232, 236], 'children': [{'type': 'CallExpression', 'name': 'get_or_create_user', 'range': [233, 236], 'children': [{'type': 'ArgumentList', 'range': [234, 236], 'children': [{'type': 'Identifier', 'name': 'test_user_data', 'range': [235, 235]}]}]}]}]}, {'type': 'ReturnStatement', 'range': [238, 240], 'children': [{'type': 'Identifier', 'name': 'user', 'range': [239, 239]}]}]}]}
2025-01-08 09:37:59,707 - INFO - Completed main AST analysis flow
2025-01-08 09:37:59,707 - INFO - Successfully processed chunk
2025-01-08 09:38:20,798 - INFO - Step 4 result: {'nodes': [{'type': 'VariableDeclaration', 'name': 'sample_block_codes', 'range': [123, 126], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [124, 124], 'children': []}, {'type': 'BlockStatement', 'name': '{}', 'range': [125, 126], 'children': []}]}, {'type': 'ForStatement', 'name': '', 'range': [128, 133], 'children': [{'type': 'Keyword', 'name': 'for', 'range': [128, 128], 'children': []}, {'type': 'VariableDeclaration', 'name': 'module', 'range': [129, 129], 'children': []}, {'type': 'Keyword', 'name': 'in', 'range': [132, 132], 'children': []}, {'type': 'MemberExpression', 'name': 'sample_block_modules.items', 'range': [133, 137], 'children': [{'type': 'Identifier', 'name': 'sample_block_modules', 'range': [133, 133], 'children': []}, {'type': 'CallExpression', 'name': 'items', 'range': [135, 137], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'current_dir', 'range': [140, 147], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [141, 141], 'children': []}, {'type': 'CallExpression', 'name': 'Path(__file__).parent', 'range': [142, 147], 'children': [{'type': 'CallExpression', 'name': 'Path', 'range': [142, 145], 'children': [{'type': 'Identifier', 'name': '__file__', 'range': [144, 144], 'children': []}]}, {'type': 'MemberExpression', 'name': 'parent', 'range': [146, 147], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'file_path', 'range': [149, 158], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [150, 150], 'children': []}, {'type': 'BinaryExpression', 'name': 'current_dir.parent/"blocks"/f"{module}.py"', 'range': [151, 158], 'children': [{'type': 'Identifier', 'name': 'current_dir', 'range': [151, 151], 'children': []}, {'type': 'MemberExpression', 'name': 'parent', 'range': [152, 153], 'children': []}, {'type': 'Literal', 'name': '"blocks"', 'range': [155, 155], 'children': []}, {'type': 'Literal', 'name': 'f"{module}.py"', 'range': [157, 158], 'children': []}]}]}, {'type': 'WithStatement', 'name': '', 'range': [160, 189], 'children': [{'type': 'Keyword', 'name': 'with', 'range': [160, 160], 'children': []}, {'type': 'CallExpression', 'name': 'open', 'range': [161, 166], 'children': [{'type': 'Identifier', 'name': 'file_path', 'range': [163, 163], 'children': []}, {'type': 'Literal', 'name': '"r"', 'range': [165, 165], 'children': []}]}, {'type': 'Keyword', 'name': 'as', 'range': [167, 167], 'children': []}, {'type': 'Identifier', 'name': 'f', 'range': [168, 168], 'children': []}, {'type': 'BlockStatement', 'name': '{}', 'range': [169, 189], 'children': [{'type': 'VariableDeclaration', 'name': 'code', 'range': [171, 188], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [172, 172], 'children': []}, {'type': 'CallExpression', 'name': '"\\n".join(["```python", f.read(), "```"])', 'range': [173, 188], 'children': [{'type': 'Literal', 'name': '"\\n"', 'range': [173, 173], 'children': []}, {'type': 'CallExpression', 'name': 'join', 'range': [174, 188], 'children': [{'type': 'ArrayExpression', 'name': '["```python", f.read(), "```"]', 'range': [176, 187], 'children': [{'type': 'Literal', 'name': '"```python"', 'range': [178, 178], 'children': []}, {'type': 'CallExpression', 'name': 'read', 'range': [180, 184], 'children': []}, {'type': 'Literal', 'name': '"```"', 'range': [186, 186], 'children': []}]}]}]}]}]}]}, {'type': 'AssignmentExpression', 'name': 'sample_block_codes', 'range': [190, 196], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [194, 194], 'children': []}, {'type': 'Literal', 'name': 'f"[Example: {description}]\\n{code}"', 'range': [195, 196], 'children': []}]}]}
2025-01-08 09:38:20,799 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:38:24,955 - INFO - Step 5 result: {'nodes': [{'type': 'Program', 'name': 'MainProgram', 'range': [0, 95], 'children': [{'type': 'ImportDeclaration', 'name': 'Path', 'range': [0, 4], 'children': [{'type': 'FromImport', 'name': 'pathlib', 'range': [0, 1], 'children': []}, {'type': 'Import', 'name': 'Path', 'range': [2, 3], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'User', 'range': [6, 12], 'children': [{'type': 'FromImport', 'name': 'prisma.models', 'range': [6, 9], 'children': []}, {'type': 'Import', 'name': 'User', 'range': [10, 11], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'StoreValueBlock', 'range': [14, 22], 'children': [{'type': 'FromImport', 'name': 'backend.blocks.basic', 'range': [14, 19], 'children': []}, {'type': 'Import', 'name': 'StoreValueBlock', 'range': [20, 21], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'BlockInstallationBlock', 'range': [23, 31], 'children': [{'type': 'FromImport', 'name': 'backend.blocks.block', 'range': [23, 28], 'children': []}, {'type': 'Import', 'name': 'BlockInstallationBlock', 'range': [29, 30], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'SendWebRequestBlock', 'range': [32, 40], 'children': [{'type': 'FromImport', 'name': 'backend.blocks.http', 'range': [32, 37], 'children': []}, {'type': 'Import', 'name': 'SendWebRequestBlock', 'range': [38, 39], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'AITextGeneratorBlock', 'range': [41, 49], 'children': [{'type': 'FromImport', 'name': 'backend.blocks.llm', 'range': [41, 46], 'children': []}, {'type': 'Import', 'name': 'AITextGeneratorBlock', 'range': [47, 48], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'ExtractTextInformationBlock', 'range': [50, 60], 'children': [{'type': 'FromImport', 'name': 'backend.blocks.text', 'range': [50, 55], 'children': []}, {'type': 'Import', 'name': 'ExtractTextInformationBlock', 'range': [56, 57], 'children': []}, {'type': 'Import', 'name': 'FillTextTemplateBlock', 'range': [58, 59], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'Graph', 'range': [61, 75], 'children': [{'type': 'FromImport', 'name': 'backend.data.graph', 'range': [61, 66], 'children': []}, {'type': 'Import', 'name': 'Graph', 'range': [67, 68], 'children': []}, {'type': 'Import', 'name': 'Link', 'range': [69, 70], 'children': []}, {'type': 'Import', 'name': 'Node', 'range': [71, 72], 'children': []}, {'type': 'Import', 'name': 'create_graph', 'range': [73, 74], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'get_or_create_user', 'range': [76, 84], 'children': [{'type': 'FromImport', 'name': 'backend.data.user', 'range': [76, 81], 'children': []}, {'type': 'Import', 'name': 'get_or_create_user', 'range': [82, 83], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'SpinTestServer', 'range': [85, 95], 'children': [{'type': 'FromImport', 'name': 'backend.util.test', 'range': [85, 90], 'children': []}, {'type': 'Import', 'name': 'SpinTestServer', 'range': [91, 92], 'children': []}, {'type': 'Import', 'name': 'wait_execution', 'range': [93, 94], 'children': []}]}]}]}
2025-01-08 09:38:24,955 - INFO - Completed main AST analysis flow
2025-01-08 09:38:24,956 - INFO - Successfully processed chunk
2025-01-08 09:38:48,274 - INFO - Step 2 result: {'nodes': [{'type': 'FunctionDeclaration', 'name': 'block_autogen_agent', 'range': [1072, 1078], 'children': [{'type': 'Keyword', 'name': 'async', 'range': [1072, 1072], 'children': []}, {'type': 'Keyword', 'name': 'def', 'range': [1073, 1073], 'children': []}, {'type': 'Identifier', 'name': 'block_autogen_agent', 'range': [1074, 1074], 'children': []}, {'type': 'Punctuator', 'name': '(', 'range': [1075, 1075], 'children': []}, {'type': 'Punctuator', 'name': ')', 'range': [1076, 1076], 'children': []}, {'type': 'Punctuator', 'name': ':', 'range': [1077, 1077], 'children': []}, {'type': 'Punctuator', 'name': '\n', 'range': [1078, 1078], 'children': []}]}, {'type': 'AsyncWithStatement', 'name': '', 'range': [1079, 1087], 'children': [{'type': 'Keyword', 'name': 'async', 'range': [1079, 1079], 'children': []}, {'type': 'Keyword', 'name': 'with', 'range': [1080, 1080], 'children': []}, {'type': 'CallExpression', 'name': 'SpinTestServer', 'range': [1081, 1083], 'children': [{'type': 'Identifier', 'name': 'SpinTestServer', 'range': [1081, 1081], 'children': []}, {'type': 'Punctuator', 'name': '(', 'range': [1082, 1082], 'children': []}, {'type': 'Punctuator', 'name': ')', 'range': [1083, 1083], 'children': []}]}, {'type': 'Keyword', 'name': 'as', 'range': [1084, 1084], 'children': []}, {'type': 'Identifier', 'name': 'server', 'range': [1085, 1085], 'children': []}, {'type': 'Punctuator', 'name': ':', 'range': [1086, 1086], 'children': []}, {'type': 'Punctuator', 'name': '\n', 'range': [1087, 1087], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'test_user', 'range': [1088, 1094], 'children': [{'type': 'Identifier', 'name': 'test_user', 'range': [1088, 1088], 'children': []}, {'type': 'Punctuator', 'name': '=', 'range': [1089, 1089], 'children': []}, {'type': 'Keyword', 'name': 'await', 'range': [1090, 1090], 'children': []}, {'type': 'CallExpression', 'name': 'create_test_user', 'range': [1091, 1093], 'children': [{'type': 'Identifier', 'name': 'create_test_user', 'range': [1091, 1091], 'children': []}, {'type': 'Punctuator', 'name': '(', 'range': [1092, 1092], 'children': []}, {'type': 'Punctuator', 'name': ')', 'range': [1093, 1093], 'children': []}]}, {'type': 'Punctuator', 'name': '\n', 'range': [1094, 1094], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'test_graph', 'range': [1095, 1110], 'children': [{'type': 'Identifier', 'name': 'test_graph', 'range': [1095, 1095], 'children': []}, {'type': 'Punctuator', 'name': '=', 'range': [1096, 1096], 'children': []}, {'type': 'Keyword', 'name': 'await', 'range': [1097, 1097], 'children': []}, {'type': 'CallExpression', 'name': 'create_graph', 'range': [1098, 1109], 'children': [{'type': 'Identifier', 'name': 'create_graph', 'range': [1098, 1098], 'children': []}, {'type': 'Punctuator', 'name': '(', 'range': [1099, 1099], 'children': []}, {'type': 'CallExpression', 'name': 'create_test_graph', 'range': [1100, 1102], 'children': [{'type': 'Identifier', 'name': 'create_test_graph', 'range': [1100, 1100], 'children': []}, {'type': 'Punctuator', 'name': '(', 'range': [1101, 1101], 'children': []}, {'type': 'Punctuator', 'name': ')', 'range': [1102, 1102], 'children': []}]}, {'type': 'Punctuator', 'name': ',', 'range': [1103, 1103], 'children': []}, {'type': 'Identifier', 'name': 'user_id', 'range': [1104, 1104], 'children': []}, {'type': 'Punctuator', 'name': '=', 'range': [1105, 1105], 'children': []}, {'type': 'Identifier', 'name': 'test_user', 'range': [1106, 1106], 'children': []}, {'type': 'Punctuator', 'name': '.', 'range': [1107, 1107], 'children': []}, {'type': 'Identifier', 'name': 'id', 'range': [1108, 1108], 'children': []}, {'type': 'Punctuator', 'name': ')', 'range': [1109, 1109], 'children': []}]}, {'type': 'Punctuator', 'name': '\n', 'range': [1110, 1110], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'input_data', 'range': [1111, 1118], 'children': [{'type': 'Identifier', 'name': 'input_data', 'range': [1111, 1111], 'children': []}, {'type': 'Punctuator', 'name': '=', 'range': [1112, 1112], 'children': []}, {'type': 'ObjectExpression', 'name': '', 'range': [1113, 1117], 'children': [{'type': 'Punctuator', 'name': '{', 'range': [1113, 1113], 'children': []}, {'type': 'Property', 'name': 'input', 'range': [1114, 1116], 'children': [{'type': 'String', 'name': '"input"', 'range': [1114, 1114], 'children': []}, {'type': 'Punctuator', 'name': ':', 'range': [1115, 1115], 'children': []}, {'type': 'String', 'name': '"Write me a block that writes a string into a file."', 'range': [1116, 1116], 'children': []}]}, {'type': 'Punctuator', 'name': '}', 'range': [1117, 1117], 'children': []}]}, {'type': 'Punctuator', 'name': '\n', 'range': [1118, 1118], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'response', 'range': [1119, 1140], 'children': [{'type': 'Identifier', 'name': 'response', 'range': [1119, 1119], 'children': []}, {'type': 'Punctuator', 'name': '=', 'range': [1120, 1120], 'children': []}, {'type': 'Keyword', 'name': 'await', 'range': [1121, 1121], 'children': []}, {'type': 'CallExpression', 'name': 'test_execute_graph', 'range': [1126, 1139], 'children': [{'type': 'MemberExpression', 'name': 'server.agent_server', 'range': [1122, 1125], 'children': [{'type': 'Identifier', 'name': 'server', 'range': [1122, 1122], 'children': []}, {'type': 'Punctuator', 'name': '.', 'range': [1123, 1123], 'children': []}, {'type': 'Identifier', 'name': 'agent_server', 'range': [1124, 1124], 'children': []}]}, {'type': 'Punctuator', 'name': '.', 'range': [1125, 1125], 'children': []}, {'type': 'Identifier', 'name': 'test_execute_graph', 'range': [1126, 1126], 'children': []}, {'type': 'Punctuator', 'name': '(', 'range': [1127, 1127], 'children': []}, {'type': 'Identifier', 'name': 'test_graph', 'range': [1129, 1129], 'children': []}, {'type': 'Punctuator', 'name': '.', 'range': [1130, 1130], 'children': []}, {'type': 'Identifier', 'name': 'id', 'range': [1131, 1131], 'children': []}, {'type': 'Punctuator', 'name': ',', 'range': [1132, 1132], 'children': []}, {'type': 'Identifier', 'name': 'input_data', 'range': [1133, 1133], 'children': []}, {'type': 'Punctuator', 'name': ',', 'range': [1134, 1134], 'children': []}, {'type': 'Identifier', 'name': 'test_user', 'range': [1135, 1135], 'children': []}, {'type': 'Punctuator', 'name': '.', 'range': [1136, 1136], 'children': []}, {'type': 'Identifier', 'name': 'id', 'range': [1137, 1137], 'children': []}, {'type': 'Punctuator', 'name': ')', 'range': [1139, 1139], 'children': []}]}, {'type': 'Punctuator', 'name': '\n', 'range': [1140, 1140], 'children': []}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [1141, 1145], 'children': [{'type': 'CallExpression', 'name': 'print', 'range': [1141, 1144], 'children': [{'type': 'Identifier', 'name': 'print', 'range': [1141, 1141], 'children': []}, {'type': 'Punctuator', 'name': '(', 'range': [1142, 1142], 'children': []}, {'type': 'Identifier', 'name': 'response', 'range': [1143, 1143], 'children': []}, {'type': 'Punctuator', 'name': ')', 'range': [1144, 1144], 'children': []}]}, {'type': 'Punctuator', 'name': '\n', 'range': [1145, 1145], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'result', 'range': [1146, 1180], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [1146, 1146], 'children': []}, {'type': 'Punctuator', 'name': '=', 'range': [1147, 1147], 'children': []}, {'type': 'Keyword', 'name': 'await', 'range': [1148, 1148], 'children': []}, {'type': 'CallExpression', 'name': 'wait_execution', 'range': [1149, 1179], 'children': [{'type': 'Identifier', 'name': 'wait_execution', 'range': [1149, 1149], 'children': []}, {'type': 'Punctuator', 'name': '(', 'range': [1150, 1150], 'children': []}, {'type': 'Identifier', 'name': 'graph_id', 'range': [1152, 1152], 'children': []}, {'type': 'Punctuator', 'name': '=', 'range': [1153, 1153], 'children': []}, {'type': 'Identifier', 'name': 'test_graph', 'range': [1154, 1154], 'children': []}, {'type': 'Punctuator', 'name': '.', 'range': [1155, 1155], 'children': []}, {'type': 'Identifier', 'name': 'id', 'range': [1156, 1156], 'children': []}, {'type': 'Punctuator', 'name': ',', 'range': [1157, 1157], 'children': []}, {'type': 'Identifier', 'name': 'graph_exec_id', 'range': [1159, 1159], 'children': []}, {'type': 'Punctuator', 'name': '=', 'range': [1160, 1160], 'children': []}, {'type': 'Identifier', 'name': 'response', 'range': [1161, 1161], 'children': []}, {'type': 'Punctuator', 'name': '[', 'range': [1162, 1162], 'children': []}, {'type': 'String', 'name': '"id"', 'range': [1163, 1163], 'children': []}, {'type': 'Punctuator', 'name': ']', 'range': [1164, 1164], 'children': []}, {'type': 'Punctuator', 'name': ',', 'range': [1165, 1165], 'children': []}, {'type': 'Identifier', 'name': 'timeout', 'range': [1167, 1167], 'children': []}, {'type': 'Punctuator', 'name': '=', 'range': [1168, 1168], 'children': []}, {'type': 'Numeric', 'name': '1200', 'range': [1169, 1169], 'children': []}, {'type': 'Punctuator', 'name': ',', 'range': [1170, 1170], 'children': []}, {'type': 'Identifier', 'name': 'user_id', 'range': [1172, 1172], 'children': []}, {'type': 'Punctuator', 'name': '=', 'range': [1173, 1173], 'children': []}, {'type': 'Identifier', 'name': 'test_user', 'range': [1174, 1174], 'children': []}, {'type': 'Punctuator', 'name': '.', 'range': [1175, 1175], 'children': []}, {'type': 'Identifier', 'name': 'id', 'range': [1176, 1176], 'children': []}, {'type': 'Punctuator', 'name': ')', 'range': [1179, 1179], 'children': []}]}, {'type': 'Punctuator', 'name': '\n', 'range': [1180, 1180], 'children': []}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [1181, 1185], 'children': [{'type': 'CallExpression', 'name': 'print', 'range': [1181, 1184], 'children': [{'type': 'Identifier', 'name': 'print', 'range': [1181, 1181], 'children': []}, {'type': 'Punctuator', 'name': '(', 'range': [1182, 1182], 'children': []}, {'type': 'Identifier', 'name': 'result', 'range': [1183, 1183], 'children': []}, {'type': 'Punctuator', 'name': ')', 'range': [1184, 1184], 'children': []}]}, {'type': 'Punctuator', 'name': '\n', 'range': [1185, 1185], 'children': []}]}]}
2025-01-08 09:38:48,274 - INFO - Starting Step 3: AST simplification
2025-01-08 09:38:59,187 - INFO - Step 5 result: {'nodes': [{'type': 'Program', 'name': 'MainProgram', 'range': [123, 196], 'children': [{'type': 'VariableDeclaration', 'name': 'sample_block_codes', 'range': [123, 126], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [124, 124], 'children': []}, {'type': 'BlockStatement', 'name': '{}', 'range': [125, 126], 'children': []}]}, {'type': 'ForStatement', 'name': '', 'range': [128, 133], 'children': [{'type': 'Keyword', 'name': 'for', 'range': [128, 128], 'children': []}, {'type': 'VariableDeclaration', 'name': 'module', 'range': [129, 129], 'children': []}, {'type': 'Keyword', 'name': 'in', 'range': [132, 132], 'children': []}, {'type': 'MemberExpression', 'name': 'sample_block_modules.items', 'range': [133, 137], 'children': [{'type': 'Identifier', 'name': 'sample_block_modules', 'range': [133, 133], 'children': []}, {'type': 'CallExpression', 'name': 'items', 'range': [135, 137], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'current_dir', 'range': [140, 147], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [141, 141], 'children': []}, {'type': 'CallExpression', 'name': 'Path(__file__).parent', 'range': [142, 147], 'children': [{'type': 'CallExpression', 'name': 'Path', 'range': [142, 145], 'children': [{'type': 'Identifier', 'name': '__file__', 'range': [144, 144], 'children': []}]}, {'type': 'MemberExpression', 'name': 'parent', 'range': [146, 147], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'file_path', 'range': [149, 158], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [150, 150], 'children': []}, {'type': 'BinaryExpression', 'name': 'current_dir.parent/"blocks"/f"{module}.py"', 'range': [151, 158], 'children': [{'type': 'Identifier', 'name': 'current_dir', 'range': [151, 151], 'children': []}, {'type': 'MemberExpression', 'name': 'parent', 'range': [152, 153], 'children': []}, {'type': 'Literal', 'name': '"blocks"', 'range': [155, 155], 'children': []}, {'type': 'Literal', 'name': 'f"{module}.py"', 'range': [157, 158], 'children': []}]}]}, {'type': 'WithStatement', 'name': '', 'range': [160, 189], 'children': [{'type': 'Keyword', 'name': 'with', 'range': [160, 160], 'children': []}, {'type': 'CallExpression', 'name': 'open', 'range': [161, 166], 'children': [{'type': 'Identifier', 'name': 'file_path', 'range': [163, 163], 'children': []}, {'type': 'Literal', 'name': '"r"', 'range': [165, 165], 'children': []}]}, {'type': 'Keyword', 'name': 'as', 'range': [167, 167], 'children': []}, {'type': 'Identifier', 'name': 'f', 'range': [168, 168], 'children': []}, {'type': 'BlockStatement', 'name': '{}', 'range': [169, 189], 'children': [{'type': 'VariableDeclaration', 'name': 'code', 'range': [171, 188], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [172, 172], 'children': []}, {'type': 'CallExpression', 'name': '"\\n".join(["```python", f.read(), "```"])', 'range': [173, 188], 'children': [{'type': 'Literal', 'name': '"\\n"', 'range': [173, 173], 'children': []}, {'type': 'CallExpression', 'name': 'join', 'range': [174, 188], 'children': [{'type': 'ArrayExpression', 'name': '["```python", f.read(), "```"]', 'range': [176, 187], 'children': [{'type': 'Literal', 'name': '"```python"', 'range': [178, 178], 'children': []}, {'type': 'CallExpression', 'name': 'read', 'range': [180, 184], 'children': []}, {'type': 'Literal', 'name': '"```"', 'range': [186, 186], 'children': []}]}]}]}]}]}]}, {'type': 'AssignmentExpression', 'name': 'sample_block_codes', 'range': [190, 196], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [194, 194], 'children': []}, {'type': 'Literal', 'name': 'f"[Example: {description}]\\n{code}"', 'range': [195, 196], 'children': []}]}]}]}
2025-01-08 09:38:59,187 - INFO - Completed main AST analysis flow
2025-01-08 09:38:59,188 - INFO - Successfully processed chunk
2025-01-08 09:39:37,923 - ERROR - Failed to parse Step 2 result
2025-01-08 09:39:37,923 - INFO - Starting Step 3: AST simplification
2025-01-08 09:39:45,919 - INFO - Step 3 result: {'nodes': [{'type': 'FunctionDeclaration', 'name': 'block_autogen_agent', 'range': [1072, 1078], 'children': [{'type': 'Keyword', 'name': 'async', 'range': [1072, 1072], 'children': []}, {'type': 'Keyword', 'name': 'def', 'range': [1073, 1073], 'children': []}, {'type': 'Identifier', 'name': 'block_autogen_agent', 'range': [1074, 1074], 'children': []}]}, {'type': 'AsyncWithStatement', 'name': '', 'range': [1079, 1087], 'children': [{'type': 'Keyword', 'name': 'async', 'range': [1079, 1079], 'children': []}, {'type': 'Keyword', 'name': 'with', 'range': [1080, 1080], 'children': []}, {'type': 'CallExpression', 'name': 'SpinTestServer', 'range': [1081, 1083], 'children': [{'type': 'Identifier', 'name': 'SpinTestServer', 'range': [1081, 1081], 'children': []}]}, {'type': 'Keyword', 'name': 'as', 'range': [1084, 1084], 'children': []}, {'type': 'Identifier', 'name': 'server', 'range': [1085, 1085], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'test_user', 'range': [1088, 1094], 'children': [{'type': 'Identifier', 'name': 'test_user', 'range': [1088, 1088], 'children': []}, {'type': 'Keyword', 'name': 'await', 'range': [1090, 1090], 'children': []}, {'type': 'CallExpression', 'name': 'create_test_user', 'range': [1091, 1093], 'children': [{'type': 'Identifier', 'name': 'create_test_user', 'range': [1091, 1091], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'test_graph', 'range': [1095, 1110], 'children': [{'type': 'Identifier', 'name': 'test_graph', 'range': [1095, 1095], 'children': []}, {'type': 'Keyword', 'name': 'await', 'range': [1097, 1097], 'children': []}, {'type': 'CallExpression', 'name': 'create_graph', 'range': [1098, 1109], 'children': [{'type': 'Identifier', 'name': 'create_graph', 'range': [1098, 1098], 'children': []}, {'type': 'CallExpression', 'name': 'create_test_graph', 'range': [1100, 1102], 'children': [{'type': 'Identifier', 'name': 'create_test_graph', 'range': [1100, 1100], 'children': []}]}, {'type': 'Identifier', 'name': 'user_id', 'range': [1104, 1104], 'children': []}, {'type': 'Identifier', 'name': 'test_user', 'range': [1106, 1106], 'children': []}, {'type': 'Identifier', 'name': 'id', 'range': [1108, 1108], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'input_data', 'range': [1111, 1118], 'children': [{'type': 'Identifier', 'name': 'input_data', 'range': [1111, 1111], 'children': []}, {'type': 'ObjectExpression', 'name': '', 'range': [1113, 1117], 'children': [{'type': 'Property', 'name': 'input', 'range': [1114, 1116], 'children': [{'type': 'String', 'name': '"input"', 'range': [1114, 1114], 'children': []}, {'type': 'String', 'name': '"Write me a block that writes a string into a file."', 'range': [1116, 1116], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'response', 'range': [1119, 1140], 'children': [{'type': 'Identifier', 'name': 'response', 'range': [1119, 1119], 'children': []}, {'type': 'Keyword', 'name': 'await', 'range': [1121, 1121], 'children': []}, {'type': 'CallExpression', 'name': 'test_execute_graph', 'range': [1126, 1139], 'children': [{'type': 'MemberExpression', 'name': 'server.agent_server', 'range': [1122, 1125], 'children': [{'type': 'Identifier', 'name': 'server', 'range': [1122, 1122], 'children': []}, {'type': 'Identifier', 'name': 'agent_server', 'range': [1124, 1124], 'children': []}]}, {'type': 'Identifier', 'name': 'test_execute_graph', 'range': [1126, 1126], 'children': []}, {'type': 'Identifier', 'name': 'test_graph', 'range': [1129, 1129], 'children': []}, {'type': 'Identifier', 'name': 'id', 'range': [1131, 1131], 'children': []}, {'type': 'Identifier', 'name': 'input_data', 'range': [1133, 1133], 'children': []}, {'type': 'Identifier', 'name': 'test_user', 'range': [1135, 1135], 'children': []}, {'type': 'Identifier', 'name': 'id', 'range': [1137, 1137], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [1141, 1145], 'children': [{'type': 'CallExpression', 'name': 'print', 'range': [1141, 1144], 'children': [{'type': 'Identifier', 'name': 'print', 'range': [1141, 1141], 'children': []}, {'type': 'Identifier', 'name': 'response', 'range': [1143, 1143], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'result', 'range': [1146, 1180], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [1146, 1146], 'children': []}, {'type': 'Keyword', 'name': 'await', 'range': [1148, 1148], 'children': []}, {'type': 'CallExpression', 'name': 'wait_execution', 'range': [1149, 1179], 'children': [{'type': 'Identifier', 'name': 'wait_execution', 'range': [1149, 1149], 'children': []}, {'type': 'Identifier', 'name': 'graph_id', 'range': [1152, 1152], 'children': []}, {'type': 'Identifier', 'name': 'test_graph', 'range': [1154, 1154], 'children': []}, {'type': 'Identifier', 'name': 'id', 'range': [1156, 1156], 'children': []}, {'type': 'Identifier', 'name': 'graph_exec_id', 'range': [1159, 1159], 'children': []}, {'type': 'Identifier', 'name': 'response', 'range': [1161, 1161], 'children': []}, {'type': 'String', 'name': '"id"', 'range': [1163, 1163], 'children': []}, {'type': 'Identifier', 'name': 'timeout', 'range': [1167, 1167], 'children': []}, {'type': 'Numeric', 'name': '1200', 'range': [1169, 1169], 'children': []}, {'type': 'Identifier', 'name': 'user_id', 'range': [1172, 1172], 'children': []}, {'type': 'Identifier', 'name': 'test_user', 'range': [1174, 1174], 'children': []}, {'type': 'Identifier', 'name': 'id', 'range': [1176, 1176], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [1181, 1185], 'children': [{'type': 'CallExpression', 'name': 'print', 'range': [1181, 1184], 'children': [{'type': 'Identifier', 'name': 'print', 'range': [1181, 1181], 'children': []}, {'type': 'Identifier', 'name': 'result', 'range': [1183, 1183], 'children': []}]}]}]}
2025-01-08 09:39:45,919 - INFO - Starting Step 4: AST normalization
2025-01-08 09:39:50,951 - INFO - Step 3 result: {'type': 'Program', 'children': [{'type': 'FunctionDeclaration', 'name': 'create_test_graph', 'range': [241, 1071], 'children': [{'type': 'ReturnStatement', 'range': [1046, 1071], 'children': [{'type': 'CallExpression', 'range': [1047, 1070], 'children': [{'type': 'Identifier', 'name': 'Graph', 'range': [1047, 1052]}, {'type': 'ObjectExpression', 'range': [1053, 1069], 'children': [{'type': 'Property', 'key': {'type': 'Identifier', 'name': 'name', 'range': [1050, 1054]}, 'value': {'type': 'Literal', 'value': 'BlockAutoGen', 'range': [1052, 1064]}}, {'type': 'Property', 'key': {'type': 'Identifier', 'name': 'description', 'range': [1055, 1066]}, 'value': {'type': 'Literal', 'value': 'Block auto generation agent', 'range': [1057, 1086]}}, {'type': 'Property', 'key': {'type': 'Identifier', 'name': 'nodes', 'range': [1060, 1065]}, 'value': {'type': 'Identifier', 'name': 'nodes', 'range': [1062, 1067]}}, {'type': 'Property', 'key': {'type': 'Identifier', 'name': 'links', 'range': [1065, 1070]}, 'value': {'type': 'Identifier', 'name': 'links', 'range': [1067, 1072]}}]}]}]}]}]}
2025-01-08 09:39:50,951 - INFO - Starting Step 4: AST normalization
2025-01-08 09:40:02,976 - INFO - Step 4 result: {'type': 'Program', 'children': [{'type': 'FunctionDecl', 'name': 'create_test_graph', 'range': [241, 1071], 'children': [{'type': 'ReturnStatement', 'range': [1046, 1071], 'children': [{'type': 'CallExpression', 'range': [1047, 1070], 'children': [{'type': 'Identifier', 'name': 'Graph', 'range': [1047, 1052]}, {'type': 'ObjectExpression', 'range': [1053, 1069], 'children': [{'type': 'Property', 'key': {'type': 'Identifier', 'name': 'name', 'range': [1050, 1054]}, 'value': {'type': 'Literal', 'value': 'BlockAutoGen', 'range': [1052, 1064]}}, {'type': 'Property', 'key': {'type': 'Identifier', 'name': 'description', 'range': [1055, 1066]}, 'value': {'type': 'Literal', 'value': 'Block auto generation agent', 'range': [1057, 1086]}}, {'type': 'Property', 'key': {'type': 'Identifier', 'name': 'nodes', 'range': [1060, 1065]}, 'value': {'type': 'Identifier', 'name': 'nodes', 'range': [1062, 1067]}}, {'type': 'Property', 'key': {'type': 'Identifier', 'name': 'links', 'range': [1065, 1070]}, 'value': {'type': 'Identifier', 'name': 'links', 'range': [1067, 1072]}}]}]}]}]}]}
2025-01-08 09:40:02,976 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:40:15,659 - INFO - Step 5 result: {'type': 'Program', 'name': 'create_test_graph', 'range': [241, 1071], 'children': [{'type': 'FunctionDecl', 'name': 'create_test_graph', 'range': [241, 1071], 'children': [{'type': 'ReturnStatement', 'range': [1046, 1071], 'children': [{'type': 'CallExpression', 'range': [1047, 1070], 'children': [{'type': 'Identifier', 'name': 'Graph', 'range': [1047, 1052]}, {'type': 'ObjectExpression', 'range': [1053, 1069], 'children': [{'type': 'Property', 'key': {'type': 'Identifier', 'name': 'name', 'range': [1050, 1054]}, 'value': {'type': 'Literal', 'value': 'BlockAutoGen', 'range': [1052, 1064]}}, {'type': 'Property', 'key': {'type': 'Identifier', 'name': 'description', 'range': [1055, 1066]}, 'value': {'type': 'Literal', 'value': 'Block auto generation agent', 'range': [1057, 1086]}}, {'type': 'Property', 'key': {'type': 'Identifier', 'name': 'nodes', 'range': [1060, 1065]}, 'value': {'type': 'Identifier', 'name': 'nodes', 'range': [1062, 1067]}}, {'type': 'Property', 'key': {'type': 'Identifier', 'name': 'links', 'range': [1065, 1070]}, 'value': {'type': 'Identifier', 'name': 'links', 'range': [1067, 1072]}}]}]}]}]}]}
2025-01-08 09:40:15,659 - INFO - Completed main AST analysis flow
2025-01-08 09:40:15,659 - INFO - Successfully processed chunk
2025-01-08 09:40:42,092 - INFO - Step 4 result: {'nodes': [{'type': 'FunctionDecl', 'name': 'block_autogen_agent', 'range': [1072, 1078], 'children': [{'type': 'Keyword', 'name': 'async', 'range': [1072, 1072], 'children': []}, {'type': 'Keyword', 'name': 'def', 'range': [1073, 1073], 'children': []}, {'type': 'Identifier', 'name': 'block_autogen_agent', 'range': [1074, 1074], 'children': []}]}, {'type': 'AsyncWithStatement', 'name': '', 'range': [1079, 1087], 'children': [{'type': 'Keyword', 'name': 'async', 'range': [1079, 1079], 'children': []}, {'type': 'Keyword', 'name': 'with', 'range': [1080, 1080], 'children': []}, {'type': 'CallExpression', 'name': 'SpinTestServer', 'range': [1081, 1083], 'children': [{'type': 'Identifier', 'name': 'SpinTestServer', 'range': [1081, 1081], 'children': []}]}, {'type': 'Keyword', 'name': 'as', 'range': [1084, 1084], 'children': []}, {'type': 'Identifier', 'name': 'server', 'range': [1085, 1085], 'children': []}]}, {'type': 'VariableDecl', 'name': 'test_user', 'range': [1088, 1094], 'children': [{'type': 'Identifier', 'name': 'test_user', 'range': [1088, 1088], 'children': []}, {'type': 'Keyword', 'name': 'await', 'range': [1090, 1090], 'children': []}, {'type': 'CallExpression', 'name': 'create_test_user', 'range': [1091, 1093], 'children': [{'type': 'Identifier', 'name': 'create_test_user', 'range': [1091, 1091], 'children': []}]}]}, {'type': 'VariableDecl', 'name': 'test_graph', 'range': [1095, 1110], 'children': [{'type': 'Identifier', 'name': 'test_graph', 'range': [1095, 1095], 'children': []}, {'type': 'Keyword', 'name': 'await', 'range': [1097, 1097], 'children': []}, {'type': 'CallExpression', 'name': 'create_graph', 'range': [1098, 1109], 'children': [{'type': 'Identifier', 'name': 'create_graph', 'range': [1098, 1098], 'children': []}, {'type': 'CallExpression', 'name': 'create_test_graph', 'range': [1100, 1102], 'children': [{'type': 'Identifier', 'name': 'create_test_graph', 'range': [1100, 1100], 'children': []}]}, {'type': 'Identifier', 'name': 'user_id', 'range': [1104, 1104], 'children': []}, {'type': 'Identifier', 'name': 'test_user', 'range': [1106, 1106], 'children': []}, {'type': 'Identifier', 'name': 'id', 'range': [1108, 1108], 'children': []}]}]}, {'type': 'VariableDecl', 'name': 'input_data', 'range': [1111, 1118], 'children': [{'type': 'Identifier', 'name': 'input_data', 'range': [1111, 1111], 'children': []}, {'type': 'ObjectExpression', 'name': '', 'range': [1113, 1117], 'children': [{'type': 'Property', 'name': 'input', 'range': [1114, 1116], 'children': [{'type': 'Literal', 'name': '"input"', 'range': [1114, 1114], 'children': []}, {'type': 'Literal', 'name': '"Write me a block that writes a string into a file."', 'range': [1116, 1116], 'children': []}]}]}]}, {'type': 'VariableDecl', 'name': 'response', 'range': [1119, 1140], 'children': [{'type': 'Identifier', 'name': 'response', 'range': [1119, 1119], 'children': []}, {'type': 'Keyword', 'name': 'await', 'range': [1121, 1121], 'children': []}, {'type': 'CallExpression', 'name': 'test_execute_graph', 'range': [1126, 1139], 'children': [{'type': 'MemberExpression', 'name': 'server.agent_server', 'range': [1122, 1125], 'children': [{'type': 'Identifier', 'name': 'server', 'range': [1122, 1122], 'children': []}, {'type': 'Identifier', 'name': 'agent_server', 'range': [1124, 1124], 'children': []}]}, {'type': 'Identifier', 'name': 'test_execute_graph', 'range': [1126, 1126], 'children': []}, {'type': 'Identifier', 'name': 'test_graph', 'range': [1129, 1129], 'children': []}, {'type': 'Identifier', 'name': 'id', 'range': [1131, 1131], 'children': []}, {'type': 'Identifier', 'name': 'input_data', 'range': [1133, 1133], 'children': []}, {'type': 'Identifier', 'name': 'test_user', 'range': [1135, 1135], 'children': []}, {'type': 'Identifier', 'name': 'id', 'range': [1137, 1137], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [1141, 1145], 'children': [{'type': 'CallExpression', 'name': 'print', 'range': [1141, 1144], 'children': [{'type': 'Identifier', 'name': 'print', 'range': [1141, 1141], 'children': []}, {'type': 'Identifier', 'name': 'response', 'range': [1143, 1143], 'children': []}]}]}, {'type': 'VariableDecl', 'name': 'result', 'range': [1146, 1180], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [1146, 1146], 'children': []}, {'type': 'Keyword', 'name': 'await', 'range': [1148, 1148], 'children': []}, {'type': 'CallExpression', 'name': 'wait_execution', 'range': [1149, 1179], 'children': [{'type': 'Identifier', 'name': 'wait_execution', 'range': [1149, 1149], 'children': []}, {'type': 'Identifier', 'name': 'graph_id', 'range': [1152, 1152], 'children': []}, {'type': 'Identifier', 'name': 'test_graph', 'range': [1154, 1154], 'children': []}, {'type': 'Identifier', 'name': 'id', 'range': [1156, 1156], 'children': []}, {'type': 'Identifier', 'name': 'graph_exec_id', 'range': [1159, 1159], 'children': []}, {'type': 'Identifier', 'name': 'response', 'range': [1161, 1161], 'children': []}, {'type': 'Literal', 'name': '"id"', 'range': [1163, 1163], 'children': []}, {'type': 'Identifier', 'name': 'timeout', 'range': [1167, 1167], 'children': []}, {'type': 'Literal', 'name': '1200', 'range': [1169, 1169], 'children': []}, {'type': 'Identifier', 'name': 'user_id', 'range': [1172, 1172], 'children': []}, {'type': 'Identifier', 'name': 'test_user', 'range': [1174, 1174], 'children': []}, {'type': 'Identifier', 'name': 'id', 'range': [1176, 1176], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [1181, 1185], 'children': [{'type': 'CallExpression', 'name': 'print', 'range': [1181, 1184], 'children': [{'type': 'Identifier', 'name': 'print', 'range': [1181, 1181], 'children': []}, {'type': 'Identifier', 'name': 'result', 'range': [1183, 1183], 'children': []}]}]}]}
2025-01-08 09:40:42,093 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:41:40,032 - INFO - Step 5 result: {'type': 'Program', 'name': 'MainProgram', 'range': [1072, 1185], 'children': [{'type': 'FunctionDecl', 'name': 'block_autogen_agent', 'range': [1072, 1078], 'children': [{'type': 'Keyword', 'name': 'async', 'range': [1072, 1072], 'children': []}, {'type': 'Keyword', 'name': 'def', 'range': [1073, 1073], 'children': []}, {'type': 'Identifier', 'name': 'block_autogen_agent', 'range': [1074, 1074], 'children': []}]}, {'type': 'AsyncWithStatement', 'name': '', 'range': [1079, 1087], 'children': [{'type': 'Keyword', 'name': 'async', 'range': [1079, 1079], 'children': []}, {'type': 'Keyword', 'name': 'with', 'range': [1080, 1080], 'children': []}, {'type': 'CallExpression', 'name': 'SpinTestServer', 'range': [1081, 1083], 'children': [{'type': 'Identifier', 'name': 'SpinTestServer', 'range': [1081, 1081], 'children': []}]}, {'type': 'Keyword', 'name': 'as', 'range': [1084, 1084], 'children': []}, {'type': 'Identifier', 'name': 'server', 'range': [1085, 1085], 'children': []}]}, {'type': 'VariableDecl', 'name': 'test_user', 'range': [1088, 1094], 'children': [{'type': 'Identifier', 'name': 'test_user', 'range': [1088, 1088], 'children': []}, {'type': 'Keyword', 'name': 'await', 'range': [1090, 1090], 'children': []}, {'type': 'CallExpression', 'name': 'create_test_user', 'range': [1091, 1093], 'children': [{'type': 'Identifier', 'name': 'create_test_user', 'range': [1091, 1091], 'children': []}]}]}, {'type': 'VariableDecl', 'name': 'test_graph', 'range': [1095, 1110], 'children': [{'type': 'Identifier', 'name': 'test_graph', 'range': [1095, 1095], 'children': []}, {'type': 'Keyword', 'name': 'await', 'range': [1097, 1097], 'children': []}, {'type': 'CallExpression', 'name': 'create_graph', 'range': [1098, 1109], 'children': [{'type': 'Identifier', 'name': 'create_graph', 'range': [1098, 1098], 'children': []}, {'type': 'CallExpression', 'name': 'create_test_graph', 'range': [1100, 1102], 'children': [{'type': 'Identifier', 'name': 'create_test_graph', 'range': [1100, 1100], 'children': []}]}, {'type': 'Identifier', 'name': 'user_id', 'range': [1104, 1104], 'children': []}, {'type': 'Identifier', 'name': 'test_user', 'range': [1106, 1106], 'children': []}, {'type': 'Identifier', 'name': 'id', 'range': [1108, 1108], 'children': []}]}]}, {'type': 'VariableDecl', 'name': 'input_data', 'range': [1111, 1118], 'children': [{'type': 'Identifier', 'name': 'input_data', 'range': [1111, 1111], 'children': []}, {'type': 'ObjectExpression', 'name': '', 'range': [1113, 1117], 'children': [{'type': 'Property', 'name': 'input', 'range': [1114, 1116], 'children': [{'type': 'Literal', 'name': '"input"', 'range': [1114, 1114], 'children': []}, {'type': 'Literal', 'name': '"Write me a block that writes a string into a file."', 'range': [1116, 1116], 'children': []}]}]}]}, {'type': 'VariableDecl', 'name': 'response', 'range': [1119, 1140], 'children': [{'type': 'Identifier', 'name': 'response', 'range': [1119, 1119], 'children': []}, {'type': 'Keyword', 'name': 'await', 'range': [1121, 1121], 'children': []}, {'type': 'CallExpression', 'name': 'test_execute_graph', 'range': [1126, 1139], 'children': [{'type': 'MemberExpression', 'name': 'server.agent_server', 'range': [1122, 1125], 'children': [{'type': 'Identifier', 'name': 'server', 'range': [1122, 1122], 'children': []}, {'type': 'Identifier', 'name': 'agent_server', 'range': [1124, 1124], 'children': []}]}, {'type': 'Identifier', 'name': 'test_execute_graph', 'range': [1126, 1126], 'children': []}, {'type': 'Identifier', 'name': 'test_graph', 'range': [1129, 1129], 'children': []}, {'type': 'Identifier', 'name': 'id', 'range': [1131, 1131], 'children': []}, {'type': 'Identifier', 'name': 'input_data', 'range': [1133, 1133], 'children': []}, {'type': 'Identifier', 'name': 'test_user', 'range': [1135, 1135], 'children': []}, {'type': 'Identifier', 'name': 'id', 'range': [1137, 1137], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [1141, 1145], 'children': [{'type': 'CallExpression', 'name': 'print', 'range': [1141, 1144], 'children': [{'type': 'Identifier', 'name': 'print', 'range': [1141, 1141], 'children': []}, {'type': 'Identifier', 'name': 'response', 'range': [1143, 1143], 'children': []}]}]}, {'type': 'VariableDecl', 'name': 'result', 'range': [1146, 1180], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [1146, 1146], 'children': []}, {'type': 'Keyword', 'name': 'await', 'range': [1148, 1148], 'children': []}, {'type': 'CallExpression', 'name': 'wait_execution', 'range': [1149, 1179], 'children': [{'type': 'Identifier', 'name': 'wait_execution', 'range': [1149, 1149], 'children': []}, {'type': 'Identifier', 'name': 'graph_id', 'range': [1152, 1152], 'children': []}, {'type': 'Identifier', 'name': 'test_graph', 'range': [1154, 1154], 'children': []}, {'type': 'Identifier', 'name': 'id', 'range': [1156, 1156], 'children': []}, {'type': 'Identifier', 'name': 'graph_exec_id', 'range': [1159, 1159], 'children': []}, {'type': 'Identifier', 'name': 'response', 'range': [1161, 1161], 'children': []}, {'type': 'Literal', 'name': '"id"', 'range': [1163, 1163], 'children': []}, {'type': 'Identifier', 'name': 'timeout', 'range': [1167, 1167], 'children': []}, {'type': 'Literal', 'name': '1200', 'range': [1169, 1169], 'children': []}, {'type': 'Identifier', 'name': 'user_id', 'range': [1172, 1172], 'children': []}, {'type': 'Identifier', 'name': 'test_user', 'range': [1174, 1174], 'children': []}, {'type': 'Identifier', 'name': 'id', 'range': [1176, 1176], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [1181, 1185], 'children': [{'type': 'CallExpression', 'name': 'print', 'range': [1181, 1184], 'children': [{'type': 'Identifier', 'name': 'print', 'range': [1181, 1181], 'children': []}, {'type': 'Identifier', 'name': 'result', 'range': [1183, 1183], 'children': []}]}]}]}
2025-01-08 09:41:40,032 - INFO - Completed main AST analysis flow
2025-01-08 09:41:40,032 - INFO - Successfully processed chunk
2025-01-08 09:41:40,063 - INFO - Starting code generation from AST
2025-01-08 09:42:16,376 - INFO - Successfully generated code from AST
2025-01-08 09:42:16,377 - INFO - Starting static code similarity comparison
2025-01-08 09:42:16,410 - INFO - Static similarity result: {'final_score': 75.45, 'length_similarity': 81.3, 'token_similarity': 63.09, 'structure_similarity': 70.63, 'function_similarity': 100, 'complexity_similarity': 66.67, 'variable_similarity': 100}
