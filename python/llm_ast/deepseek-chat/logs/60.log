2025-01-08 09:30:27,454 - INFO - Processing sample 60
2025-01-08 09:30:27,454 - INFO - Starting Step 0: Splitting code into top-level declarations
2025-01-08 09:30:38,620 - INFO - Successfully split code into 7 top-level declarations
2025-01-08 09:30:38,626 - INFO - Processing chunk #0 (size=423 chars, start_index=0)
2025-01-08 09:30:38,626 - INFO - Processing chunk with 423 chars starting at index 0
2025-01-08 09:30:38,626 - INFO - Starting main AST analysis flow
2025-01-08 09:30:38,627 - INFO - Processing chunk #1 (size=102 chars, start_index=87)
2025-01-08 09:30:38,627 - INFO - Tokenized code into 87 tokens
2025-01-08 09:30:38,629 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:30:38,629 - INFO - Processing chunk #2 (size=68 chars, start_index=109)
2025-01-08 09:30:38,630 - INFO - Processing chunk with 68 chars starting at index 109
2025-01-08 09:30:38,628 - INFO - Processing chunk with 102 chars starting at index 87
2025-01-08 09:30:38,630 - INFO - Starting main AST analysis flow
2025-01-08 09:30:38,631 - INFO - Processing chunk #3 (size=720 chars, start_index=127)
2025-01-08 09:30:38,632 - INFO - Processing chunk #4 (size=5760 chars, start_index=300)
2025-01-08 09:30:38,632 - INFO - Starting main AST analysis flow
2025-01-08 09:30:38,633 - INFO - Processing chunk #5 (size=3257 chars, start_index=1174)
2025-01-08 09:30:38,637 - INFO - Tokenized code into 18 tokens
2025-01-08 09:30:38,638 - INFO - Processing chunk with 720 chars starting at index 127
2025-01-08 09:30:38,638 - INFO - Processing chunk #6 (size=839 chars, start_index=1803)
2025-01-08 09:30:38,639 - INFO - Processing chunk with 5760 chars starting at index 300
2025-01-08 09:30:38,639 - INFO - Tokenized code into 22 tokens
2025-01-08 09:30:38,640 - INFO - Processing chunk with 3257 chars starting at index 1174
2025-01-08 09:30:38,640 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:30:38,640 - INFO - Starting main AST analysis flow
2025-01-08 09:30:38,640 - INFO - Processing chunk with 839 chars starting at index 1803
2025-01-08 09:30:38,641 - INFO - Starting main AST analysis flow
2025-01-08 09:30:38,641 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:30:38,641 - INFO - Starting main AST analysis flow
2025-01-08 09:30:38,642 - INFO - Tokenized code into 173 tokens
2025-01-08 09:30:38,643 - INFO - Starting main AST analysis flow
2025-01-08 09:30:38,645 - INFO - Tokenized code into 874 tokens
2025-01-08 09:30:38,647 - INFO - Tokenized code into 629 tokens
2025-01-08 09:30:38,651 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:30:38,655 - INFO - Tokenized code into 182 tokens
2025-01-08 09:30:38,656 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:30:38,656 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:30:38,661 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:30:50,327 - INFO - Step 1 result: {'type': 'Program', 'name': 'AppEnvironment', 'range': [87, 108], 'children': [{'type': 'ClassDeclaration', 'name': 'AppEnvironment', 'range': [87, 108], 'children': [{'type': 'VariableDeclaration', 'name': 'LOCAL', 'range': [96, 98], 'children': []}, {'type': 'VariableDeclaration', 'name': 'DEVELOPMENT', 'range': [100, 102], 'children': []}, {'type': 'VariableDeclaration', 'name': 'PRODUCTION', 'range': [104, 106], 'children': []}]}]}
2025-01-08 09:30:50,327 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:30:50,720 - INFO - Step 1 result: {'type': 'Program', 'name': 'Settings', 'range': [1803, 1984], 'children': [{'type': 'ClassDeclaration', 'name': 'Settings', 'range': [1803, 1825], 'children': [{'type': 'VariableDeclaration', 'name': 'config', 'range': [1810, 1817], 'children': []}, {'type': 'VariableDeclaration', 'name': 'secrets', 'range': [1818, 1825], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': 'save', 'range': [1827, 1984], 'children': []}]}
2025-01-08 09:30:50,720 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:30:52,189 - INFO - Step 1 result: {'type': 'Program', 'name': 'BehaveAs', 'range': [109, 126], 'children': [{'type': 'ClassDeclaration', 'name': 'BehaveAs', 'range': [109, 126], 'children': [{'type': 'VariableDeclaration', 'name': 'LOCAL', 'range': [118, 121], 'children': [{'type': 'Literal', 'value': '"local"', 'range': [120, 120]}]}, {'type': 'VariableDeclaration', 'name': 'CLOUD', 'range': [122, 125], 'children': [{'type': 'Literal', 'value': '"cloud"', 'range': [124, 124]}]}]}]}
2025-01-08 09:30:52,189 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:30:53,822 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [127, 299], 'children': [{'type': 'ClassDeclaration', 'name': 'UpdateTrackingModel', 'range': [127, 152], 'children': []}, {'type': 'FunctionDeclaration', 'name': '__setattr__', 'range': [154, 197], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'mark_updated', 'range': [199, 229], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'clear_updates', 'range': [231, 248], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'get_updates', 'range': [250, 282], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'updated_fields', 'range': [284, 298], 'children': []}]}
2025-01-08 09:30:53,822 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:30:55,736 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [0, 86], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 2], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [3, 5], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [6, 10], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [11, 29], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [30, 43], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [44, 62], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [63, 72], 'children': []}, {'type': 'TypeVarDeclaration', 'name': 'T', 'range': [74, 84], 'children': []}]}
2025-01-08 09:30:55,737 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:31:16,480 - INFO - Step 1 result: {'type': 'Program', 'name': 'Config', 'range': [300, 1173], 'children': [{'type': 'FieldDeclaration', 'name': 'num_graph_workers', 'range': [317, 344]}, {'type': 'FieldDeclaration', 'name': 'num_node_workers', 'range': [346, 373]}, {'type': 'FieldDeclaration', 'name': 'pyro_host', 'range': [375, 392]}, {'type': 'FieldDeclaration', 'name': 'pyro_client_comm_timeout', 'range': [394, 411]}, {'type': 'FieldDeclaration', 'name': 'pyro_client_comm_retry', 'range': [413, 430]}, {'type': 'FieldDeclaration', 'name': 'enable_auth', 'range': [432, 449]}, {'type': 'FieldDeclaration', 'name': 'enable_credit', 'range': [451, 468]}, {'type': 'FieldDeclaration', 'name': 'num_user_credits_refill', 'range': [470, 487]}, {'type': 'FieldDeclaration', 'name': 'websocket_server_host', 'range': [516, 533]}, {'type': 'FieldDeclaration', 'name': 'websocket_server_port', 'range': [536, 553]}, {'type': 'FieldDeclaration', 'name': 'execution_manager_port', 'range': [556, 573]}, {'type': 'FieldDeclaration', 'name': 'execution_scheduler_port', 'range': [576, 593]}, {'type': 'FieldDeclaration', 'name': 'agent_server_port', 'range': [596, 613]}, {'type': 'FieldDeclaration', 'name': 'database_api_port', 'range': [616, 633]}, {'type': 'FieldDeclaration', 'name': 'agent_api_host', 'range': [636, 653]}, {'type': 'FieldDeclaration', 'name': 'agent_api_port', 'range': [656, 673]}, {'type': 'FieldDeclaration', 'name': 'platform_base_url', 'range': [676, 695]}, {'type': 'FieldDeclaration', 'name': 'frontend_base_url', 'range': [698, 717]}, {'type': 'FieldDeclaration', 'name': 'media_gcs_bucket_name', 'range': [720, 737]}, {'type': 'MethodDeclaration', 'name': 'validate_platform_base_url', 'range': [751, 825]}, {'type': 'FieldDeclaration', 'name': 'app_env', 'range': [827, 846]}, {'type': 'FieldDeclaration', 'name': 'behave_as', 'range': [849, 868]}, {'type': 'FieldDeclaration', 'name': 'execution_event_bus_name', 'range': [871, 888]}, {'type': 'FieldDeclaration', 'name': 'trust_endpoints_for_requests', 'range': [891, 911]}, {'type': 'FieldDeclaration', 'name': 'backend_cors_allow_origins', 'range': [914, 926]}, {'type': 'MethodDeclaration', 'name': 'validate_cors_allow_origins', 'range': [938, 1097]}, {'type': 'MethodDeclaration', 'name': 'settings_customise_sources', 'range': [1102, 1171]}]}
2025-01-08 09:31:16,480 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:31:29,196 - INFO - Step 2 result: {'type': 'Program', 'name': 'BehaveAs', 'range': [109, 126], 'children': [{'type': 'ClassDeclaration', 'name': 'BehaveAs', 'range': [109, 126], 'children': [{'type': 'VariableDeclaration', 'name': 'LOCAL', 'range': [118, 121], 'children': [{'type': 'Literal', 'value': '"local"', 'range': [120, 120]}]}, {'type': 'VariableDeclaration', 'name': 'CLOUD', 'range': [122, 125], 'children': [{'type': 'Literal', 'value': '"cloud"', 'range': [124, 124]}]}]}]}
2025-01-08 09:31:29,196 - INFO - Starting Step 3: AST simplification
2025-01-08 09:31:31,225 - INFO - Step 1 result: {'type': 'Program', 'name': 'Secrets', 'range': [1174, 1802], 'children': [{'type': 'ClassDeclaration', 'name': 'Secrets', 'range': [1174, 1802], 'children': [{'type': 'FieldDeclaration', 'name': 'supabase_url', 'range': [1191, 1205], 'children': []}, {'type': 'FieldDeclaration', 'name': 'supabase_service_role_key', 'range': [1206, 1222], 'children': []}, {'type': 'FieldDeclaration', 'name': 'encryption_key', 'range': [1224, 1238], 'children': []}, {'type': 'FieldDeclaration', 'name': 'github_client_id', 'range': [1260, 1274], 'children': []}, {'type': 'FieldDeclaration', 'name': 'github_client_secret', 'range': [1275, 1291], 'children': []}, {'type': 'FieldDeclaration', 'name': 'google_client_id', 'range': [1305, 1319], 'children': []}, {'type': 'FieldDeclaration', 'name': 'google_client_secret', 'range': [1320, 1336], 'children': []}, {'type': 'FieldDeclaration', 'name': 'notion_client_id', 'range': [1337, 1351], 'children': []}, {'type': 'FieldDeclaration', 'name': 'notion_client_secret', 'range': [1352, 1368], 'children': []}, {'type': 'FieldDeclaration', 'name': 'openai_api_key', 'range': [1370, 1384], 'children': []}, {'type': 'FieldDeclaration', 'name': 'anthropic_api_key', 'range': [1385, 1399], 'children': []}, {'type': 'FieldDeclaration', 'name': 'groq_api_key', 'range': [1400, 1414], 'children': []}, {'type': 'FieldDeclaration', 'name': 'open_router_api_key', 'range': [1415, 1429], 'children': []}, {'type': 'FieldDeclaration', 'name': 'reddit_client_id', 'range': [1431, 1445], 'children': []}, {'type': 'FieldDeclaration', 'name': 'reddit_client_secret', 'range': [1446, 1460], 'children': []}, {'type': 'FieldDeclaration', 'name': 'reddit_username', 'range': [1461, 1475], 'children': []}, {'type': 'FieldDeclaration', 'name': 'reddit_password', 'range': [1476, 1490], 'children': []}, {'type': 'FieldDeclaration', 'name': 'openweathermap_api_key', 'range': [1492, 1508], 'children': []}, {'type': 'FieldDeclaration', 'name': 'medium_api_key', 'range': [1510, 1524], 'children': []}, {'type': 'FieldDeclaration', 'name': 'medium_author_id', 'range': [1525, 1539], 'children': []}, {'type': 'FieldDeclaration', 'name': 'did_api_key', 'range': [1540, 1554], 'children': []}, {'type': 'FieldDeclaration', 'name': 'revid_api_key', 'range': [1555, 1569], 'children': []}, {'type': 'FieldDeclaration', 'name': 'discord_bot_token', 'range': [1570, 1584], 'children': []}, {'type': 'FieldDeclaration', 'name': 'smtp_server', 'range': [1586, 1600], 'children': []}, {'type': 'FieldDeclaration', 'name': 'smtp_port', 'range': [1601, 1615], 'children': []}, {'type': 'FieldDeclaration', 'name': 'smtp_username', 'range': [1616, 1630], 'children': []}, {'type': 'FieldDeclaration', 'name': 'smtp_password', 'range': [1631, 1645], 'children': []}, {'type': 'FieldDeclaration', 'name': 'sentry_dsn', 'range': [1647, 1661], 'children': []}, {'type': 'FieldDeclaration', 'name': 'google_maps_api_key', 'range': [1663, 1677], 'children': []}, {'type': 'FieldDeclaration', 'name': 'replicate_api_key', 'range': [1679, 1693], 'children': []}, {'type': 'FieldDeclaration', 'name': 'unreal_speech_api_key', 'range': [1694, 1708], 'children': []}, {'type': 'FieldDeclaration', 'name': 'ideogram_api_key', 'range': [1709, 1723], 'children': []}, {'type': 'FieldDeclaration', 'name': 'jina_api_key', 'range': [1724, 1738], 'children': []}, {'type': 'FieldDeclaration', 'name': 'unreal_speech_api_key', 'range': [1739, 1753], 'children': []}, {'type': 'FieldDeclaration', 'name': 'fal_key', 'range': [1755, 1769], 'children': []}, {'type': 'ModelConfig', 'name': 'model_config', 'range': [1780, 1802], 'children': []}]}]}
2025-01-08 09:31:31,225 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:31:34,186 - INFO - Step 2 result: {'type': 'Program', 'name': 'AppEnvironment', 'range': [87, 108], 'children': [{'type': 'ClassDeclaration', 'name': 'AppEnvironment', 'range': [87, 108], 'children': [{'type': 'VariableDeclaration', 'name': 'LOCAL', 'range': [96, 98], 'children': [{'type': 'Literal', 'value': '"local"', 'range': [98, 98], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'DEVELOPMENT', 'range': [100, 102], 'children': [{'type': 'Literal', 'value': '"dev"', 'range': [102, 102], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'PRODUCTION', 'range': [104, 106], 'children': [{'type': 'Literal', 'value': '"prod"', 'range': [106, 106], 'children': []}]}]}]}
2025-01-08 09:31:34,186 - INFO - Starting Step 3: AST simplification
2025-01-08 09:31:51,030 - INFO - Step 3 result: {'type': 'Program', 'name': 'BehaveAs', 'range': [109, 126], 'children': [{'type': 'ClassDeclaration', 'name': 'BehaveAs', 'range': [109, 126], 'children': [{'type': 'VariableDeclaration', 'name': 'LOCAL', 'range': [118, 121], 'children': [{'type': 'Literal', 'value': '"local"', 'range': [120, 120]}]}, {'type': 'VariableDeclaration', 'name': 'CLOUD', 'range': [122, 125], 'children': [{'type': 'Literal', 'value': '"cloud"', 'range': [124, 124]}]}]}]}
2025-01-08 09:31:51,030 - INFO - Starting Step 4: AST normalization
2025-01-08 09:31:52,928 - INFO - Step 3 result: {'type': 'Program', 'name': 'AppEnvironment', 'range': [87, 108], 'children': [{'type': 'ClassDeclaration', 'name': 'AppEnvironment', 'range': [87, 108], 'children': [{'type': 'VariableDeclaration', 'name': 'LOCAL', 'range': [96, 98], 'children': [{'type': 'Literal', 'value': '"local"', 'range': [98, 98]}]}, {'type': 'VariableDeclaration', 'name': 'DEVELOPMENT', 'range': [100, 102], 'children': [{'type': 'Literal', 'value': '"dev"', 'range': [102, 102]}]}, {'type': 'VariableDeclaration', 'name': 'PRODUCTION', 'range': [104, 106], 'children': [{'type': 'Literal', 'value': '"prod"', 'range': [106, 106]}]}]}]}
2025-01-08 09:31:52,928 - INFO - Starting Step 4: AST normalization
2025-01-08 09:32:08,805 - INFO - Step 2 result: {'nodes': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 2], 'children': [{'type': 'ImportClause', 'name': 'json', 'range': [1, 1], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [3, 5], 'children': [{'type': 'ImportClause', 'name': 'os', 'range': [4, 4], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [6, 10], 'children': [{'type': 'FromClause', 'name': 'enum', 'range': [7, 7], 'children': []}, {'type': 'ImportClause', 'name': 'Enum', 'range': [9, 9], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [11, 29], 'children': [{'type': 'FromClause', 'name': 'typing', 'range': [12, 12], 'children': []}, {'type': 'ImportClause', 'name': 'Any', 'range': [14, 14], 'children': []}, {'type': 'ImportClause', 'name': 'Dict', 'range': [16, 16], 'children': []}, {'type': 'ImportClause', 'name': 'Generic', 'range': [18, 18], 'children': []}, {'type': 'ImportClause', 'name': 'List', 'range': [20, 20], 'children': []}, {'type': 'ImportClause', 'name': 'Set', 'range': [22, 22], 'children': []}, {'type': 'ImportClause', 'name': 'Tuple', 'range': [24, 24], 'children': []}, {'type': 'ImportClause', 'name': 'Type', 'range': [26, 26], 'children': []}, {'type': 'ImportClause', 'name': 'TypeVar', 'range': [28, 28], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [30, 43], 'children': [{'type': 'FromClause', 'name': 'pydantic', 'range': [32, 32], 'children': []}, {'type': 'ImportClause', 'name': 'BaseModel', 'range': [34, 34], 'children': []}, {'type': 'ImportClause', 'name': 'Field', 'range': [36, 36], 'children': []}, {'type': 'ImportClause', 'name': 'PrivateAttr', 'range': [38, 38], 'children': []}, {'type': 'ImportClause', 'name': 'ValidationInfo', 'range': [40, 40], 'children': []}, {'type': 'ImportClause', 'name': 'field_validator', 'range': [42, 42], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [44, 62], 'children': [{'type': 'FromClause', 'name': 'pydantic_settings', 'range': [45, 45], 'children': []}, {'type': 'ImportClause', 'name': 'BaseSettings', 'range': [49, 49], 'children': []}, {'type': 'ImportClause', 'name': 'JsonConfigSettingsSource', 'range': [52, 52], 'children': []}, {'type': 'ImportClause', 'name': 'PydanticBaseSettingsSource', 'range': [55, 55], 'children': []}, {'type': 'ImportClause', 'name': 'SettingsConfigDict', 'range': [58, 58], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [63, 72], 'children': [{'type': 'FromClause', 'name': 'backend.util.data', 'range': [65, 69], 'children': []}, {'type': 'ImportClause', 'name': 'get_data_path', 'range': [71, 71], 'children': []}]}, {'type': 'TypeVarDeclaration', 'name': 'T', 'range': [74, 84], 'children': [{'type': 'TypeVarClause', 'name': 'T', 'range': [74, 74], 'children': []}, {'type': 'BoundClause', 'name': 'BaseSettings', 'range': [82, 82], 'children': []}]}]}
2025-01-08 09:32:08,805 - INFO - Starting Step 3: AST simplification
2025-01-08 09:32:22,971 - INFO - Step 2 result: {'type': 'Program', 'name': '', 'range': [127, 299], 'children': [{'type': 'ClassDeclaration', 'name': 'UpdateTrackingModel', 'range': [127, 152], 'children': [{'type': 'Inheritance', 'name': '', 'range': [129, 136], 'children': [{'type': 'BaseClass', 'name': 'BaseModel', 'range': [130, 130], 'children': []}, {'type': 'Generic', 'name': 'Generic[T]', 'range': [132, 135], 'children': []}]}, {'type': 'ClassVariable', 'name': '_updated_fields', 'range': [139, 151], 'children': [{'type': 'TypeAnnotation', 'name': 'Set[str]', 'range': [141, 144], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [145, 151], 'children': [{'type': 'PrivateAttr', 'name': 'PrivateAttr', 'range': [146, 151], 'children': [{'type': 'Argument', 'name': 'default_factory=set', 'range': [148, 150], 'children': []}]}]}]}]}, {'type': 'FunctionDeclaration', 'name': '__setattr__', 'range': [154, 197], 'children': [{'type': 'Parameters', 'name': '', 'range': [156, 164], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [157, 157], 'children': []}, {'type': 'Parameter', 'name': 'name: str', 'range': [159, 161], 'children': []}, {'type': 'Parameter', 'name': 'value', 'range': [163, 163], 'children': []}]}, {'type': 'ReturnType', 'name': '-> None', 'range': [165, 167], 'children': []}, {'type': 'FunctionBody', 'name': '', 'range': [169, 197], 'children': [{'type': 'IfStatement', 'name': '', 'range': [170, 186], 'children': [{'type': 'Condition', 'name': 'name in self.model_fields', 'range': [171, 175], 'children': []}, {'type': 'ThenBlock', 'name': '', 'range': [177, 186], 'children': [{'type': 'ExpressionStatement', 'name': 'self._updated_fields.add(name)', 'range': [178, 185], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'super().__setattr__(name, value)', 'range': [187, 196], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'mark_updated', 'range': [199, 229], 'children': [{'type': 'Parameters', 'name': '', 'range': [201, 207], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [202, 202], 'children': []}, {'type': 'Parameter', 'name': 'field_name: str', 'range': [204, 206], 'children': []}]}, {'type': 'ReturnType', 'name': '-> None', 'range': [208, 210], 'children': []}, {'type': 'FunctionBody', 'name': '', 'range': [212, 229], 'children': [{'type': 'IfStatement', 'name': '', 'range': [213, 229], 'children': [{'type': 'Condition', 'name': 'field_name in self.model_fields', 'range': [214, 218], 'children': []}, {'type': 'ThenBlock', 'name': '', 'range': [220, 229], 'children': [{'type': 'ExpressionStatement', 'name': 'self._updated_fields.add(field_name)', 'range': [221, 228], 'children': []}]}]}]}]}, {'type': 'FunctionDeclaration', 'name': 'clear_updates', 'range': [231, 248], 'children': [{'type': 'Parameters', 'name': '', 'range': [233, 235], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [234, 234], 'children': []}]}, {'type': 'ReturnType', 'name': '-> None', 'range': [236, 238], 'children': []}, {'type': 'FunctionBody', 'name': '', 'range': [240, 248], 'children': [{'type': 'ExpressionStatement', 'name': 'self._updated_fields.clear()', 'range': [241, 247], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'get_updates', 'range': [250, 282], 'children': [{'type': 'Parameters', 'name': '', 'range': [252, 254], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [253, 253], 'children': []}]}, {'type': 'ReturnType', 'name': '-> Dict[str, Any]', 'range': [255, 262], 'children': []}, {'type': 'FunctionBody', 'name': '', 'range': [264, 282], 'children': [{'type': 'ReturnStatement', 'name': '', 'range': [265, 281], 'children': [{'type': 'DictComprehension', 'name': '', 'range': [266, 281], 'children': [{'type': 'KeyValuePair', 'name': 'field: getattr(self, field)', 'range': [267, 274], 'children': []}, {'type': 'ForLoop', 'name': 'for field in self._updated_fields', 'range': [275, 280], 'children': []}]}]}]}]}, {'type': 'FunctionDeclaration', 'name': 'updated_fields', 'range': [284, 298], 'children': [{'type': 'Parameters', 'name': '', 'range': [286, 288], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [287, 287], 'children': []}]}, {'type': 'ReturnType', 'name': '', 'range': [289, 289], 'children': []}, {'type': 'FunctionBody', 'name': '', 'range': [291, 298], 'children': [{'type': 'ReturnStatement', 'name': 'return self._updated_fields', 'range': [294, 297], 'children': []}]}]}]}
2025-01-08 09:32:22,971 - INFO - Starting Step 3: AST simplification
2025-01-08 09:32:42,375 - INFO - Step 4 result: {'type': 'Program', 'name': 'BehaveAs', 'range': [109, 126], 'children': [{'type': 'ClassDecl', 'name': 'BehaveAs', 'range': [109, 126], 'children': [{'type': 'VariableDeclaration', 'name': 'LOCAL', 'range': [118, 121], 'children': [{'type': 'Literal', 'value': '"local"', 'range': [120, 120]}]}, {'type': 'VariableDeclaration', 'name': 'CLOUD', 'range': [122, 125], 'children': [{'type': 'Literal', 'value': '"cloud"', 'range': [124, 124]}]}]}]}
2025-01-08 09:32:42,376 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:32:45,182 - INFO - Step 4 result: {'type': 'Program', 'name': 'AppEnvironment', 'range': [87, 108], 'children': [{'type': 'ClassDecl', 'name': 'AppEnvironment', 'range': [87, 108], 'children': [{'type': 'VariableDeclaration', 'name': 'LOCAL', 'range': [96, 98], 'children': [{'type': 'Literal', 'value': '"local"', 'range': [98, 98]}]}, {'type': 'VariableDeclaration', 'name': 'DEVELOPMENT', 'range': [100, 102], 'children': [{'type': 'Literal', 'value': '"dev"', 'range': [102, 102]}]}, {'type': 'VariableDeclaration', 'name': 'PRODUCTION', 'range': [104, 106], 'children': [{'type': 'Literal', 'value': '"prod"', 'range': [106, 106]}]}]}]}
2025-01-08 09:32:45,183 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:33:01,163 - INFO - Step 2 result: {'type': 'Program', 'name': 'Settings', 'range': [1803, 1984], 'children': [{'type': 'ClassDeclaration', 'name': 'Settings', 'range': [1803, 1825], 'children': [{'type': 'VariableDeclaration', 'name': 'config', 'range': [1810, 1817], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [1813, 1817], 'children': [{'type': 'Identifier', 'name': 'Config', 'range': [1814, 1817], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'secrets', 'range': [1818, 1825], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [1821, 1825], 'children': [{'type': 'Identifier', 'name': 'Secrets', 'range': [1822, 1825], 'children': []}]}]}]}, {'type': 'FunctionDeclaration', 'name': 'save', 'range': [1827, 1984], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [1836, 1984], 'children': [{'type': 'IfStatement', 'name': 'if', 'range': [1845, 1948], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [1846, 1851], 'children': [{'type': 'Identifier', 'name': 'self', 'range': [1846, 1847], 'children': []}, {'type': 'Identifier', 'name': 'config', 'range': [1848, 1851], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [1852, 1948], 'children': [{'type': 'VariableDeclaration', 'name': 'config_to_save', 'range': [1853, 1862], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [1854, 1862], 'children': [{'type': 'CallExpression', 'name': 'get_updates', 'range': [1855, 1862], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [1855, 1859], 'children': [{'type': 'Identifier', 'name': 'self', 'range': [1855, 1856], 'children': []}, {'type': 'Identifier', 'name': 'config', 'range': [1857, 1859], 'children': []}]}]}]}]}, {'type': 'VariableDeclaration', 'name': 'config_path', 'range': [1863, 1877], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [1864, 1877], 'children': [{'type': 'CallExpression', 'name': 'join', 'range': [1865, 1877], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [1865, 1869], 'children': [{'type': 'Identifier', 'name': 'os', 'range': [1865, 1866], 'children': []}, {'type': 'Identifier', 'name': 'path', 'range': [1867, 1869], 'children': []}]}, {'type': 'CallExpression', 'name': 'get_data_path', 'range': [1871, 1873], 'children': []}, {'type': 'Literal', 'name': '"config.json"', 'range': [1875, 1877], 'children': []}]}]}]}, {'type': 'IfStatement', 'name': 'if', 'range': [1878, 1948], 'children': [{'type': 'CallExpression', 'name': 'exists', 'range': [1879, 1887], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [1879, 1883], 'children': [{'type': 'Identifier', 'name': 'os', 'range': [1879, 1880], 'children': []}, {'type': 'Identifier', 'name': 'path', 'range': [1881, 1883], 'children': []}]}, {'type': 'Identifier', 'name': 'config_path', 'range': [1885, 1887], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [1888, 1948], 'children': [{'type': 'WithStatement', 'name': 'with', 'range': [1889, 1948], 'children': [{'type': 'CallExpression', 'name': 'open', 'range': [1890, 1895], 'children': [{'type': 'Identifier', 'name': 'config_path', 'range': [1892, 1895], 'children': []}, {'type': 'Literal', 'name': '"r+"', 'range': [1894, 1895], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [1898, 1948], 'children': [{'type': 'VariableDeclaration', 'name': 'existing_config', 'range': [1900, 1915], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [1908, 1915], 'children': [{'type': 'CallExpression', 'name': 'load', 'range': [1909, 1915], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [1909, 1911], 'children': [{'type': 'Identifier', 'name': 'json', 'range': [1909, 1910], 'children': []}]}, {'type': 'Identifier', 'name': 'f', 'range': [1913, 1915], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [1916, 1922], 'children': [{'type': 'CallExpression', 'name': 'update', 'range': [1916, 1922], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [1916, 1918], 'children': [{'type': 'Identifier', 'name': 'existing_config', 'range': [1916, 1917], 'children': []}]}, {'type': 'Identifier', 'name': 'config_to_save', 'range': [1920, 1922], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [1923, 1929], 'children': [{'type': 'CallExpression', 'name': 'seek', 'range': [1923, 1929], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [1923, 1925], 'children': [{'type': 'Identifier', 'name': 'f', 'range': [1923, 1924], 'children': []}]}, {'type': 'Literal', 'name': '0', 'range': [1927, 1929], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [1930, 1942], 'children': [{'type': 'CallExpression', 'name': 'dump', 'range': [1930, 1942], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [1930, 1932], 'children': [{'type': 'Identifier', 'name': 'json', 'range': [1930, 1931], 'children': []}]}, {'type': 'Identifier', 'name': 'existing_config', 'range': [1934, 1936], 'children': []}, {'type': 'Identifier', 'name': 'f', 'range': [1936, 1937], 'children': []}, {'type': 'Literal', 'name': '2', 'range': [1940, 1942], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [1943, 1948], 'children': [{'type': 'CallExpression', 'name': 'truncate', 'range': [1943, 1948], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [1943, 1945], 'children': [{'type': 'Identifier', 'name': 'f', 'range': [1943, 1944], 'children': []}]}]}]}]}]}]}]}]}]}, {'type': 'ElseStatement', 'name': 'else', 'range': [1949, 1975], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [1951, 1975], 'children': [{'type': 'WithStatement', 'name': 'with', 'range': [1952, 1975], 'children': [{'type': 'CallExpression', 'name': 'open', 'range': [1953, 1958], 'children': [{'type': 'Identifier', 'name': 'config_path', 'range': [1955, 1958], 'children': []}, {'type': 'Literal', 'name': '"w"', 'range': [1957, 1958], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [1961, 1975], 'children': [{'type': 'ExpressionStatement', 'name': '', 'range': [1963, 1975], 'children': [{'type': 'CallExpression', 'name': 'dump', 'range': [1963, 1975], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [1963, 1965], 'children': [{'type': 'Identifier', 'name': 'json', 'range': [1963, 1964], 'children': []}]}, {'type': 'Identifier', 'name': 'config_to_save', 'range': [1967, 1969], 'children': []}, {'type': 'Identifier', 'name': 'f', 'range': [1969, 1970], 'children': []}, {'type': 'Literal', 'name': '2', 'range': [1973, 1975], 'children': []}]}]}]}]}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [1976, 1983], 'children': [{'type': 'CallExpression', 'name': 'clear_updates', 'range': [1976, 1983], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [1976, 1980], 'children': [{'type': 'Identifier', 'name': 'self', 'range': [1976, 1977], 'children': []}, {'type': 'Identifier', 'name': 'config', 'range': [1978, 1980], 'children': []}]}]}]}]}]}]}
2025-01-08 09:33:01,164 - INFO - Starting Step 3: AST simplification
2025-01-08 09:33:16,932 - INFO - Step 3 result: {'nodes': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 2], 'children': [{'type': 'ImportClause', 'name': 'json', 'range': [1, 1], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [3, 5], 'children': [{'type': 'ImportClause', 'name': 'os', 'range': [4, 4], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [6, 10], 'children': [{'type': 'FromClause', 'name': 'enum', 'range': [7, 7], 'children': []}, {'type': 'ImportClause', 'name': 'Enum', 'range': [9, 9], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [11, 29], 'children': [{'type': 'FromClause', 'name': 'typing', 'range': [12, 12], 'children': []}, {'type': 'ImportClause', 'name': 'Any', 'range': [14, 14], 'children': []}, {'type': 'ImportClause', 'name': 'Dict', 'range': [16, 16], 'children': []}, {'type': 'ImportClause', 'name': 'Generic', 'range': [18, 18], 'children': []}, {'type': 'ImportClause', 'name': 'List', 'range': [20, 20], 'children': []}, {'type': 'ImportClause', 'name': 'Set', 'range': [22, 22], 'children': []}, {'type': 'ImportClause', 'name': 'Tuple', 'range': [24, 24], 'children': []}, {'type': 'ImportClause', 'name': 'Type', 'range': [26, 26], 'children': []}, {'type': 'ImportClause', 'name': 'TypeVar', 'range': [28, 28], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [30, 43], 'children': [{'type': 'FromClause', 'name': 'pydantic', 'range': [32, 32], 'children': []}, {'type': 'ImportClause', 'name': 'BaseModel', 'range': [34, 34], 'children': []}, {'type': 'ImportClause', 'name': 'Field', 'range': [36, 36], 'children': []}, {'type': 'ImportClause', 'name': 'PrivateAttr', 'range': [38, 38], 'children': []}, {'type': 'ImportClause', 'name': 'ValidationInfo', 'range': [40, 40], 'children': []}, {'type': 'ImportClause', 'name': 'field_validator', 'range': [42, 42], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [44, 62], 'children': [{'type': 'FromClause', 'name': 'pydantic_settings', 'range': [45, 45], 'children': []}, {'type': 'ImportClause', 'name': 'BaseSettings', 'range': [49, 49], 'children': []}, {'type': 'ImportClause', 'name': 'JsonConfigSettingsSource', 'range': [52, 52], 'children': []}, {'type': 'ImportClause', 'name': 'PydanticBaseSettingsSource', 'range': [55, 55], 'children': []}, {'type': 'ImportClause', 'name': 'SettingsConfigDict', 'range': [58, 58], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [63, 72], 'children': [{'type': 'FromClause', 'name': 'backend.util.data', 'range': [65, 69], 'children': []}, {'type': 'ImportClause', 'name': 'get_data_path', 'range': [71, 71], 'children': []}]}, {'type': 'TypeVarDeclaration', 'name': 'T', 'range': [74, 84], 'children': [{'type': 'TypeVarClause', 'name': 'T', 'range': [74, 74], 'children': []}, {'type': 'BoundClause', 'name': 'BaseSettings', 'range': [82, 82], 'children': []}]}]}
2025-01-08 09:33:16,933 - INFO - Starting Step 4: AST normalization
2025-01-08 09:33:39,813 - INFO - Step 3 result: {'type': 'Program', 'name': '', 'range': [127, 299], 'children': [{'type': 'ClassDeclaration', 'name': 'UpdateTrackingModel', 'range': [127, 152], 'children': [{'type': 'Inheritance', 'name': '', 'range': [129, 136], 'children': [{'type': 'BaseClass', 'name': 'BaseModel', 'range': [130, 130], 'children': []}, {'type': 'Generic', 'name': 'Generic[T]', 'range': [132, 135], 'children': []}]}, {'type': 'ClassVariable', 'name': '_updated_fields', 'range': [139, 151], 'children': [{'type': 'TypeAnnotation', 'name': 'Set[str]', 'range': [141, 144], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [145, 151], 'children': [{'type': 'PrivateAttr', 'name': 'PrivateAttr', 'range': [146, 151], 'children': [{'type': 'Argument', 'name': 'default_factory=set', 'range': [148, 150], 'children': []}]}]}]}]}, {'type': 'FunctionDeclaration', 'name': '__setattr__', 'range': [154, 197], 'children': [{'type': 'Parameters', 'name': '', 'range': [156, 164], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [157, 157], 'children': []}, {'type': 'Parameter', 'name': 'name: str', 'range': [159, 161], 'children': []}, {'type': 'Parameter', 'name': 'value', 'range': [163, 163], 'children': []}]}, {'type': 'ReturnType', 'name': '-> None', 'range': [165, 167], 'children': []}, {'type': 'FunctionBody', 'name': '', 'range': [169, 197], 'children': [{'type': 'IfStatement', 'name': '', 'range': [170, 186], 'children': [{'type': 'Condition', 'name': 'name in self.model_fields', 'range': [171, 175], 'children': []}, {'type': 'ThenBlock', 'name': '', 'range': [177, 186], 'children': [{'type': 'ExpressionStatement', 'name': 'self._updated_fields.add(name)', 'range': [178, 185], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'super().__setattr__(name, value)', 'range': [187, 196], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'mark_updated', 'range': [199, 229], 'children': [{'type': 'Parameters', 'name': '', 'range': [201, 207], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [202, 202], 'children': []}, {'type': 'Parameter', 'name': 'field_name: str', 'range': [204, 206], 'children': []}]}, {'type': 'ReturnType', 'name': '-> None', 'range': [208, 210], 'children': []}, {'type': 'FunctionBody', 'name': '', 'range': [212, 229], 'children': [{'type': 'IfStatement', 'name': '', 'range': [213, 229], 'children': [{'type': 'Condition', 'name': 'field_name in self.model_fields', 'range': [214, 218], 'children': []}, {'type': 'ThenBlock', 'name': '', 'range': [220, 229], 'children': [{'type': 'ExpressionStatement', 'name': 'self._updated_fields.add(field_name)', 'range': [221, 228], 'children': []}]}]}]}]}, {'type': 'FunctionDeclaration', 'name': 'clear_updates', 'range': [231, 248], 'children': [{'type': 'Parameters', 'name': '', 'range': [233, 235], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [234, 234], 'children': []}]}, {'type': 'ReturnType', 'name': '-> None', 'range': [236, 238], 'children': []}, {'type': 'FunctionBody', 'name': '', 'range': [240, 248], 'children': [{'type': 'ExpressionStatement', 'name': 'self._updated_fields.clear()', 'range': [241, 247], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'get_updates', 'range': [250, 282], 'children': [{'type': 'Parameters', 'name': '', 'range': [252, 254], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [253, 253], 'children': []}]}, {'type': 'ReturnType', 'name': '-> Dict[str, Any]', 'range': [255, 262], 'children': []}, {'type': 'FunctionBody', 'name': '', 'range': [264, 282], 'children': [{'type': 'ReturnStatement', 'name': '', 'range': [265, 281], 'children': [{'type': 'DictComprehension', 'name': '', 'range': [266, 281], 'children': [{'type': 'KeyValuePair', 'name': 'field: getattr(self, field)', 'range': [267, 274], 'children': []}, {'type': 'ForLoop', 'name': 'for field in self._updated_fields', 'range': [275, 280], 'children': []}]}]}]}]}, {'type': 'FunctionDeclaration', 'name': 'updated_fields', 'range': [284, 298], 'children': [{'type': 'Parameters', 'name': '', 'range': [286, 288], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [287, 287], 'children': []}]}, {'type': 'ReturnType', 'name': '', 'range': [289, 289], 'children': []}, {'type': 'FunctionBody', 'name': '', 'range': [291, 298], 'children': [{'type': 'ReturnStatement', 'name': 'return self._updated_fields', 'range': [294, 297], 'children': []}]}]}]}
2025-01-08 09:33:39,813 - INFO - Starting Step 4: AST normalization
2025-01-08 09:33:40,016 - INFO - Step 5 result: {'type': 'Program', 'name': 'BehaveAs', 'range': [109, 126], 'children': [{'type': 'ClassDecl', 'name': 'BehaveAs', 'range': [109, 126], 'children': [{'type': 'VariableDeclaration', 'name': 'LOCAL', 'range': [118, 121], 'children': [{'type': 'Literal', 'value': '"local"', 'range': [120, 120]}]}, {'type': 'VariableDeclaration', 'name': 'CLOUD', 'range': [122, 125], 'children': [{'type': 'Literal', 'value': '"cloud"', 'range': [124, 124]}]}]}]}
2025-01-08 09:33:40,016 - INFO - Completed main AST analysis flow
2025-01-08 09:33:40,016 - INFO - Successfully processed chunk
2025-01-08 09:33:41,252 - INFO - Step 5 result: {'type': 'Program', 'name': 'AppEnvironment', 'range': [87, 108], 'children': [{'type': 'ClassDecl', 'name': 'AppEnvironment', 'range': [87, 108], 'children': [{'type': 'VariableDeclaration', 'name': 'LOCAL', 'range': [96, 98], 'children': [{'type': 'Literal', 'value': '"local"', 'range': [98, 98]}]}, {'type': 'VariableDeclaration', 'name': 'DEVELOPMENT', 'range': [100, 102], 'children': [{'type': 'Literal', 'value': '"dev"', 'range': [102, 102]}]}, {'type': 'VariableDeclaration', 'name': 'PRODUCTION', 'range': [104, 106], 'children': [{'type': 'Literal', 'value': '"prod"', 'range': [106, 106]}]}]}]}
2025-01-08 09:33:41,252 - INFO - Completed main AST analysis flow
2025-01-08 09:33:41,253 - INFO - Successfully processed chunk
2025-01-08 09:34:32,723 - INFO - Step 4 result: {'nodes': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 2], 'children': [{'type': 'ImportSpecifier', 'name': 'json', 'range': [1, 1], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [3, 5], 'children': [{'type': 'ImportSpecifier', 'name': 'os', 'range': [4, 4], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [6, 10], 'children': [{'type': 'ImportSpecifier', 'name': 'Enum', 'range': [9, 9], 'children': []}, {'type': 'FromClause', 'name': 'enum', 'range': [7, 7], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [11, 29], 'children': [{'type': 'ImportSpecifier', 'name': 'Any', 'range': [14, 14], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Dict', 'range': [16, 16], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Generic', 'range': [18, 18], 'children': []}, {'type': 'ImportSpecifier', 'name': 'List', 'range': [20, 20], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Set', 'range': [22, 22], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Tuple', 'range': [24, 24], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Type', 'range': [26, 26], 'children': []}, {'type': 'ImportSpecifier', 'name': 'TypeVar', 'range': [28, 28], 'children': []}, {'type': 'FromClause', 'name': 'typing', 'range': [12, 12], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [30, 43], 'children': [{'type': 'ImportSpecifier', 'name': 'BaseModel', 'range': [34, 34], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Field', 'range': [36, 36], 'children': []}, {'type': 'ImportSpecifier', 'name': 'PrivateAttr', 'range': [38, 38], 'children': []}, {'type': 'ImportSpecifier', 'name': 'ValidationInfo', 'range': [40, 40], 'children': []}, {'type': 'ImportSpecifier', 'name': 'field_validator', 'range': [42, 42], 'children': []}, {'type': 'FromClause', 'name': 'pydantic', 'range': [32, 32], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [44, 62], 'children': [{'type': 'ImportSpecifier', 'name': 'BaseSettings', 'range': [49, 49], 'children': []}, {'type': 'ImportSpecifier', 'name': 'JsonConfigSettingsSource', 'range': [52, 52], 'children': []}, {'type': 'ImportSpecifier', 'name': 'PydanticBaseSettingsSource', 'range': [55, 55], 'children': []}, {'type': 'ImportSpecifier', 'name': 'SettingsConfigDict', 'range': [58, 58], 'children': []}, {'type': 'FromClause', 'name': 'pydantic_settings', 'range': [45, 45], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [63, 72], 'children': [{'type': 'ImportSpecifier', 'name': 'get_data_path', 'range': [71, 71], 'children': []}, {'type': 'FromClause', 'name': 'backend.util.data', 'range': [65, 69], 'children': []}]}, {'type': 'TypeAliasDeclaration', 'name': 'T', 'range': [74, 84], 'children': [{'type': 'TypeParameter', 'name': 'T', 'range': [74, 74], 'children': []}, {'type': 'TypeReference', 'name': 'BaseSettings', 'range': [82, 82], 'children': []}]}]}
2025-01-08 09:34:32,724 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:34:55,568 - INFO - Step 4 result: {'type': 'Program', 'name': '', 'range': [127, 299], 'children': [{'type': 'ClassDecl', 'name': 'UpdateTrackingModel', 'range': [127, 152], 'children': [{'type': 'Inheritance', 'name': '', 'range': [129, 136], 'children': [{'type': 'BaseClass', 'name': 'BaseModel', 'range': [130, 130], 'children': []}, {'type': 'Generic', 'name': 'Generic[T]', 'range': [132, 135], 'children': []}]}, {'type': 'ClassVariable', 'name': '_updated_fields', 'range': [139, 151], 'children': [{'type': 'TypeAnnotation', 'name': 'Set[str]', 'range': [141, 144], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [145, 151], 'children': [{'type': 'PrivateAttr', 'name': 'PrivateAttr', 'range': [146, 151], 'children': [{'type': 'Argument', 'name': 'default_factory=set', 'range': [148, 150], 'children': []}]}]}]}]}, {'type': 'FunctionDecl', 'name': '__setattr__', 'range': [154, 197], 'children': [{'type': 'Parameters', 'name': '', 'range': [156, 164], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [157, 157], 'children': []}, {'type': 'Parameter', 'name': 'name: str', 'range': [159, 161], 'children': []}, {'type': 'Parameter', 'name': 'value', 'range': [163, 163], 'children': []}]}, {'type': 'ReturnType', 'name': '-> None', 'range': [165, 167], 'children': []}, {'type': 'FunctionBody', 'name': '', 'range': [169, 197], 'children': [{'type': 'IfStatement', 'name': '', 'range': [170, 186], 'children': [{'type': 'Condition', 'name': 'name in self.model_fields', 'range': [171, 175], 'children': []}, {'type': 'ThenBlock', 'name': '', 'range': [177, 186], 'children': [{'type': 'ExpressionStatement', 'name': 'self._updated_fields.add(name)', 'range': [178, 185], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'super().__setattr__(name, value)', 'range': [187, 196], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'mark_updated', 'range': [199, 229], 'children': [{'type': 'Parameters', 'name': '', 'range': [201, 207], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [202, 202], 'children': []}, {'type': 'Parameter', 'name': 'field_name: str', 'range': [204, 206], 'children': []}]}, {'type': 'ReturnType', 'name': '-> None', 'range': [208, 210], 'children': []}, {'type': 'FunctionBody', 'name': '', 'range': [212, 229], 'children': [{'type': 'IfStatement', 'name': '', 'range': [213, 229], 'children': [{'type': 'Condition', 'name': 'field_name in self.model_fields', 'range': [214, 218], 'children': []}, {'type': 'ThenBlock', 'name': '', 'range': [220, 229], 'children': [{'type': 'ExpressionStatement', 'name': 'self._updated_fields.add(field_name)', 'range': [221, 228], 'children': []}]}]}]}]}, {'type': 'FunctionDecl', 'name': 'clear_updates', 'range': [231, 248], 'children': [{'type': 'Parameters', 'name': '', 'range': [233, 235], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [234, 234], 'children': []}]}, {'type': 'ReturnType', 'name': '-> None', 'range': [236, 238], 'children': []}, {'type': 'FunctionBody', 'name': '', 'range': [240, 248], 'children': [{'type': 'ExpressionStatement', 'name': 'self._updated_fields.clear()', 'range': [241, 247], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'get_updates', 'range': [250, 282], 'children': [{'type': 'Parameters', 'name': '', 'range': [252, 254], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [253, 253], 'children': []}]}, {'type': 'ReturnType', 'name': '-> Dict[str, Any]', 'range': [255, 262], 'children': []}, {'type': 'FunctionBody', 'name': '', 'range': [264, 282], 'children': [{'type': 'ReturnStatement', 'name': '', 'range': [265, 281], 'children': [{'type': 'DictComprehension', 'name': '', 'range': [266, 281], 'children': [{'type': 'KeyValuePair', 'name': 'field: getattr(self, field)', 'range': [267, 274], 'children': []}, {'type': 'ForStatement', 'name': 'for field in self._updated_fields', 'range': [275, 280], 'children': []}]}]}]}]}, {'type': 'FunctionDecl', 'name': 'updated_fields', 'range': [284, 298], 'children': [{'type': 'Parameters', 'name': '', 'range': [286, 288], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [287, 287], 'children': []}]}, {'type': 'ReturnType', 'name': '', 'range': [289, 289], 'children': []}, {'type': 'FunctionBody', 'name': '', 'range': [291, 298], 'children': [{'type': 'ReturnStatement', 'name': 'return self._updated_fields', 'range': [294, 297], 'children': []}]}]}]}
2025-01-08 09:34:55,569 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:35:28,282 - ERROR - Failed to parse Step 2 result
2025-01-08 09:35:28,283 - INFO - Starting Step 3: AST simplification
2025-01-08 09:35:37,686 - INFO - Step 3 result: {'type': 'Program', 'name': 'Settings', 'range': [1803, 1984], 'children': [{'type': 'ClassDeclaration', 'name': 'Settings', 'range': [1803, 1825], 'children': [{'type': 'VariableDeclaration', 'name': 'config', 'range': [1810, 1817], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [1813, 1817], 'children': [{'type': 'Identifier', 'name': 'Config', 'range': [1814, 1817], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'secrets', 'range': [1818, 1825], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [1821, 1825], 'children': [{'type': 'Identifier', 'name': 'Secrets', 'range': [1822, 1825], 'children': []}]}]}]}, {'type': 'FunctionDeclaration', 'name': 'save', 'range': [1827, 1984], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [1836, 1984], 'children': [{'type': 'IfStatement', 'name': 'if', 'range': [1845, 1948], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [1846, 1851], 'children': [{'type': 'Identifier', 'name': 'self', 'range': [1846, 1847], 'children': []}, {'type': 'Identifier', 'name': 'config', 'range': [1848, 1851], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [1852, 1948], 'children': [{'type': 'VariableDeclaration', 'name': 'config_to_save', 'range': [1853, 1862], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [1854, 1862], 'children': [{'type': 'CallExpression', 'name': 'get_updates', 'range': [1855, 1862], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [1855, 1859], 'children': [{'type': 'Identifier', 'name': 'self', 'range': [1855, 1856], 'children': []}, {'type': 'Identifier', 'name': 'config', 'range': [1857, 1859], 'children': []}]}]}]}]}, {'type': 'VariableDeclaration', 'name': 'config_path', 'range': [1863, 1877], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [1864, 1877], 'children': [{'type': 'CallExpression', 'name': 'join', 'range': [1865, 1877], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [1865, 1869], 'children': [{'type': 'Identifier', 'name': 'os', 'range': [1865, 1866], 'children': []}, {'type': 'Identifier', 'name': 'path', 'range': [1867, 1869], 'children': []}]}, {'type': 'CallExpression', 'name': 'get_data_path', 'range': [1871, 1873], 'children': []}, {'type': 'Literal', 'name': '"config.json"', 'range': [1875, 1877], 'children': []}]}]}]}, {'type': 'IfStatement', 'name': 'if', 'range': [1878, 1948], 'children': [{'type': 'CallExpression', 'name': 'exists', 'range': [1879, 1887], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [1879, 1883], 'children': [{'type': 'Identifier', 'name': 'os', 'range': [1879, 1880], 'children': []}, {'type': 'Identifier', 'name': 'path', 'range': [1881, 1883], 'children': []}]}, {'type': 'Identifier', 'name': 'config_path', 'range': [1885, 1887], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [1888, 1948], 'children': [{'type': 'WithStatement', 'name': 'with', 'range': [1889, 1948], 'children': [{'type': 'CallExpression', 'name': 'open', 'range': [1890, 1895], 'children': [{'type': 'Identifier', 'name': 'config_path', 'range': [1892, 1895], 'children': []}, {'type': 'Literal', 'name': '"r+"', 'range': [1894, 1895], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [1898, 1948], 'children': [{'type': 'VariableDeclaration', 'name': 'existing_config', 'range': [1900, 1915], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [1908, 1915], 'children': [{'type': 'CallExpression', 'name': 'load', 'range': [1909, 1915], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [1909, 1911], 'children': [{'type': 'Identifier', 'name': 'json', 'range': [1909, 1910], 'children': []}]}, {'type': 'Identifier', 'name': 'f', 'range': [1913, 1915], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [1916, 1922], 'children': [{'type': 'CallExpression', 'name': 'update', 'range': [1916, 1922], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [1916, 1918], 'children': [{'type': 'Identifier', 'name': 'existing_config', 'range': [1916, 1917], 'children': []}]}, {'type': 'Identifier', 'name': 'config_to_save', 'range': [1920, 1922], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [1923, 1929], 'children': [{'type': 'CallExpression', 'name': 'seek', 'range': [1923, 1929], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [1923, 1925], 'children': [{'type': 'Identifier', 'name': 'f', 'range': [1923, 1924], 'children': []}]}, {'type': 'Literal', 'name': '0', 'range': [1927, 1929], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [1930, 1942], 'children': [{'type': 'CallExpression', 'name': 'dump', 'range': [1930, 1942], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [1930, 1932], 'children': [{'type': 'Identifier', 'name': 'json', 'range': [1930, 1931], 'children': []}]}, {'type': 'Identifier', 'name': 'existing_config', 'range': [1934, 1936], 'children': []}, {'type': 'Identifier', 'name': 'f', 'range': [1936, 1937], 'children': []}, {'type': 'Literal', 'name': '2', 'range': [1940, 1942], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [1943, 1948], 'children': [{'type': 'CallExpression', 'name': 'truncate', 'range': [1943, 1948], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [1943, 1945], 'children': [{'type': 'Identifier', 'name': 'f', 'range': [1943, 1944], 'children': []}]}]}]}]}]}]}]}]}]}, {'type': 'ElseStatement', 'name': 'else', 'range': [1949, 1975], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [1951, 1975], 'children': [{'type': 'WithStatement', 'name': 'with', 'range': [1952, 1975], 'children': [{'type': 'CallExpression', 'name': 'open', 'range': [1953, 1958], 'children': [{'type': 'Identifier', 'name': 'config_path', 'range': [1955, 1958], 'children': []}, {'type': 'Literal', 'name': '"w"', 'range': [1957, 1958], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [1961, 1975], 'children': [{'type': 'ExpressionStatement', 'name': '', 'range': [1963, 1975], 'children': [{'type': 'CallExpression', 'name': 'dump', 'range': [1963, 1975], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [1963, 1965], 'children': [{'type': 'Identifier', 'name': 'json', 'range': [1963, 1964], 'children': []}]}, {'type': 'Identifier', 'name': 'config_to_save', 'range': [1967, 1969], 'children': []}, {'type': 'Identifier', 'name': 'f', 'range': [1969, 1970], 'children': []}, {'type': 'Literal', 'name': '2', 'range': [1973, 1975], 'children': []}]}]}]}]}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [1976, 1983], 'children': [{'type': 'CallExpression', 'name': 'clear_updates', 'range': [1976, 1983], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [1976, 1980], 'children': [{'type': 'Identifier', 'name': 'self', 'range': [1976, 1977], 'children': []}, {'type': 'Identifier', 'name': 'config', 'range': [1978, 1980], 'children': []}]}]}]}]}]}]}
2025-01-08 09:35:37,686 - INFO - Starting Step 4: AST normalization
2025-01-08 09:35:38,935 - ERROR - Failed to parse Step 2 result
2025-01-08 09:35:38,935 - INFO - Starting Step 3: AST simplification
2025-01-08 09:36:19,790 - INFO - Step 5 result: {'nodes': [{'type': 'Program', 'name': 'MainOrSomething', 'range': [0, 84], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 2], 'children': [{'type': 'ImportSpecifier', 'name': 'json', 'range': [1, 1], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [3, 5], 'children': [{'type': 'ImportSpecifier', 'name': 'os', 'range': [4, 4], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [6, 10], 'children': [{'type': 'ImportSpecifier', 'name': 'Enum', 'range': [9, 9], 'children': []}, {'type': 'FromClause', 'name': 'enum', 'range': [7, 7], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [11, 29], 'children': [{'type': 'ImportSpecifier', 'name': 'Any', 'range': [14, 14], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Dict', 'range': [16, 16], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Generic', 'range': [18, 18], 'children': []}, {'type': 'ImportSpecifier', 'name': 'List', 'range': [20, 20], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Set', 'range': [22, 22], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Tuple', 'range': [24, 24], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Type', 'range': [26, 26], 'children': []}, {'type': 'ImportSpecifier', 'name': 'TypeVar', 'range': [28, 28], 'children': []}, {'type': 'FromClause', 'name': 'typing', 'range': [12, 12], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [30, 43], 'children': [{'type': 'ImportSpecifier', 'name': 'BaseModel', 'range': [34, 34], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Field', 'range': [36, 36], 'children': []}, {'type': 'ImportSpecifier', 'name': 'PrivateAttr', 'range': [38, 38], 'children': []}, {'type': 'ImportSpecifier', 'name': 'ValidationInfo', 'range': [40, 40], 'children': []}, {'type': 'ImportSpecifier', 'name': 'field_validator', 'range': [42, 42], 'children': []}, {'type': 'FromClause', 'name': 'pydantic', 'range': [32, 32], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [44, 62], 'children': [{'type': 'ImportSpecifier', 'name': 'BaseSettings', 'range': [49, 49], 'children': []}, {'type': 'ImportSpecifier', 'name': 'JsonConfigSettingsSource', 'range': [52, 52], 'children': []}, {'type': 'ImportSpecifier', 'name': 'PydanticBaseSettingsSource', 'range': [55, 55], 'children': []}, {'type': 'ImportSpecifier', 'name': 'SettingsConfigDict', 'range': [58, 58], 'children': []}, {'type': 'FromClause', 'name': 'pydantic_settings', 'range': [45, 45], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [63, 72], 'children': [{'type': 'ImportSpecifier', 'name': 'get_data_path', 'range': [71, 71], 'children': []}, {'type': 'FromClause', 'name': 'backend.util.data', 'range': [65, 69], 'children': []}]}, {'type': 'TypeAliasDeclaration', 'name': 'T', 'range': [74, 84], 'children': [{'type': 'TypeParameter', 'name': 'T', 'range': [74, 74], 'children': []}, {'type': 'TypeReference', 'name': 'BaseSettings', 'range': [82, 82], 'children': []}]}]}]}
2025-01-08 09:36:19,790 - INFO - Completed main AST analysis flow
2025-01-08 09:36:19,791 - INFO - Successfully processed chunk
2025-01-08 09:36:34,798 - INFO - Step 5 result: {'type': 'Program', 'name': 'UpdateTrackingModel', 'range': [127, 299], 'children': [{'type': 'ClassDecl', 'name': 'UpdateTrackingModel', 'range': [127, 152], 'children': [{'type': 'Inheritance', 'name': '', 'range': [129, 136], 'children': [{'type': 'BaseClass', 'name': 'BaseModel', 'range': [130, 130], 'children': []}, {'type': 'Generic', 'name': 'Generic[T]', 'range': [132, 135], 'children': []}]}, {'type': 'ClassVariable', 'name': '_updated_fields', 'range': [139, 151], 'children': [{'type': 'TypeAnnotation', 'name': 'Set[str]', 'range': [141, 144], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [145, 151], 'children': [{'type': 'PrivateAttr', 'name': 'PrivateAttr', 'range': [146, 151], 'children': [{'type': 'Argument', 'name': 'default_factory=set', 'range': [148, 150], 'children': []}]}]}]}]}, {'type': 'FunctionDecl', 'name': '__setattr__', 'range': [154, 197], 'children': [{'type': 'Parameters', 'name': '', 'range': [156, 164], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [157, 157], 'children': []}, {'type': 'Parameter', 'name': 'name: str', 'range': [159, 161], 'children': []}, {'type': 'Parameter', 'name': 'value', 'range': [163, 163], 'children': []}]}, {'type': 'ReturnType', 'name': '-> None', 'range': [165, 167], 'children': []}, {'type': 'FunctionBody', 'name': '', 'range': [169, 197], 'children': [{'type': 'IfStatement', 'name': '', 'range': [170, 186], 'children': [{'type': 'Condition', 'name': 'name in self.model_fields', 'range': [171, 175], 'children': []}, {'type': 'ThenBlock', 'name': '', 'range': [177, 186], 'children': [{'type': 'ExpressionStatement', 'name': 'self._updated_fields.add(name)', 'range': [178, 185], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'super().__setattr__(name, value)', 'range': [187, 196], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'mark_updated', 'range': [199, 229], 'children': [{'type': 'Parameters', 'name': '', 'range': [201, 207], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [202, 202], 'children': []}, {'type': 'Parameter', 'name': 'field_name: str', 'range': [204, 206], 'children': []}]}, {'type': 'ReturnType', 'name': '-> None', 'range': [208, 210], 'children': []}, {'type': 'FunctionBody', 'name': '', 'range': [212, 229], 'children': [{'type': 'IfStatement', 'name': '', 'range': [213, 229], 'children': [{'type': 'Condition', 'name': 'field_name in self.model_fields', 'range': [214, 218], 'children': []}, {'type': 'ThenBlock', 'name': '', 'range': [220, 229], 'children': [{'type': 'ExpressionStatement', 'name': 'self._updated_fields.add(field_name)', 'range': [221, 228], 'children': []}]}]}]}]}, {'type': 'FunctionDecl', 'name': 'clear_updates', 'range': [231, 248], 'children': [{'type': 'Parameters', 'name': '', 'range': [233, 235], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [234, 234], 'children': []}]}, {'type': 'ReturnType', 'name': '-> None', 'range': [236, 238], 'children': []}, {'type': 'FunctionBody', 'name': '', 'range': [240, 248], 'children': [{'type': 'ExpressionStatement', 'name': 'self._updated_fields.clear()', 'range': [241, 247], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'get_updates', 'range': [250, 282], 'children': [{'type': 'Parameters', 'name': '', 'range': [252, 254], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [253, 253], 'children': []}]}, {'type': 'ReturnType', 'name': '-> Dict[str, Any]', 'range': [255, 262], 'children': []}, {'type': 'FunctionBody', 'name': '', 'range': [264, 282], 'children': [{'type': 'ReturnStatement', 'name': '', 'range': [265, 281], 'children': [{'type': 'DictComprehension', 'name': '', 'range': [266, 281], 'children': [{'type': 'KeyValuePair', 'name': 'field: getattr(self, field)', 'range': [267, 274], 'children': []}, {'type': 'ForStatement', 'name': 'for field in self._updated_fields', 'range': [275, 280], 'children': []}]}]}]}]}, {'type': 'FunctionDecl', 'name': 'updated_fields', 'range': [284, 298], 'children': [{'type': 'Parameters', 'name': '', 'range': [286, 288], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [287, 287], 'children': []}]}, {'type': 'ReturnType', 'name': '', 'range': [289, 289], 'children': []}, {'type': 'FunctionBody', 'name': '', 'range': [291, 298], 'children': [{'type': 'ReturnStatement', 'name': 'return self._updated_fields', 'range': [294, 297], 'children': []}]}]}]}
2025-01-08 09:36:34,798 - INFO - Completed main AST analysis flow
2025-01-08 09:36:34,799 - INFO - Successfully processed chunk
2025-01-08 09:37:39,365 - INFO - Step 4 result: {'type': 'Program', 'name': 'Settings', 'range': [1803, 1984], 'children': [{'type': 'ClassDecl', 'name': 'Settings', 'range': [1803, 1825], 'children': [{'type': 'VariableDecl', 'name': 'config', 'range': [1810, 1817], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [1813, 1817], 'children': [{'type': 'Identifier', 'name': 'Config', 'range': [1814, 1817], 'children': []}]}]}, {'type': 'VariableDecl', 'name': 'secrets', 'range': [1818, 1825], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [1821, 1825], 'children': [{'type': 'Identifier', 'name': 'Secrets', 'range': [1822, 1825], 'children': []}]}]}]}, {'type': 'FunctionDecl', 'name': 'save', 'range': [1827, 1984], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [1836, 1984], 'children': [{'type': 'IfStatement', 'name': 'if', 'range': [1845, 1948], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [1846, 1851], 'children': [{'type': 'Identifier', 'name': 'self', 'range': [1846, 1847], 'children': []}, {'type': 'Identifier', 'name': 'config', 'range': [1848, 1851], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [1852, 1948], 'children': [{'type': 'VariableDecl', 'name': 'config_to_save', 'range': [1853, 1862], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [1854, 1862], 'children': [{'type': 'CallExpression', 'name': 'get_updates', 'range': [1855, 1862], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [1855, 1859], 'children': [{'type': 'Identifier', 'name': 'self', 'range': [1855, 1856], 'children': []}, {'type': 'Identifier', 'name': 'config', 'range': [1857, 1859], 'children': []}]}]}]}]}, {'type': 'VariableDecl', 'name': 'config_path', 'range': [1863, 1877], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [1864, 1877], 'children': [{'type': 'CallExpression', 'name': 'join', 'range': [1865, 1877], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [1865, 1869], 'children': [{'type': 'Identifier', 'name': 'os', 'range': [1865, 1866], 'children': []}, {'type': 'Identifier', 'name': 'path', 'range': [1867, 1869], 'children': []}]}, {'type': 'CallExpression', 'name': 'get_data_path', 'range': [1871, 1873], 'children': []}, {'type': 'Literal', 'name': '"config.json"', 'range': [1875, 1877], 'children': []}]}]}]}, {'type': 'IfStatement', 'name': 'if', 'range': [1878, 1948], 'children': [{'type': 'CallExpression', 'name': 'exists', 'range': [1879, 1887], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [1879, 1883], 'children': [{'type': 'Identifier', 'name': 'os', 'range': [1879, 1880], 'children': []}, {'type': 'Identifier', 'name': 'path', 'range': [1881, 1883], 'children': []}]}, {'type': 'Identifier', 'name': 'config_path', 'range': [1885, 1887], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [1888, 1948], 'children': [{'type': 'WithStatement', 'name': 'with', 'range': [1889, 1948], 'children': [{'type': 'CallExpression', 'name': 'open', 'range': [1890, 1895], 'children': [{'type': 'Identifier', 'name': 'config_path', 'range': [1892, 1895], 'children': []}, {'type': 'Literal', 'name': '"r+"', 'range': [1894, 1895], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [1898, 1948], 'children': [{'type': 'VariableDecl', 'name': 'existing_config', 'range': [1900, 1915], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [1908, 1915], 'children': [{'type': 'CallExpression', 'name': 'load', 'range': [1909, 1915], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [1909, 1911], 'children': [{'type': 'Identifier', 'name': 'json', 'range': [1909, 1910], 'children': []}]}, {'type': 'Identifier', 'name': 'f', 'range': [1913, 1915], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [1916, 1922], 'children': [{'type': 'CallExpression', 'name': 'update', 'range': [1916, 1922], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [1916, 1918], 'children': [{'type': 'Identifier', 'name': 'existing_config', 'range': [1916, 1917], 'children': []}]}, {'type': 'Identifier', 'name': 'config_to_save', 'range': [1920, 1922], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [1923, 1929], 'children': [{'type': 'CallExpression', 'name': 'seek', 'range': [1923, 1929], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [1923, 1925], 'children': [{'type': 'Identifier', 'name': 'f', 'range': [1923, 1924], 'children': []}]}, {'type': 'Literal', 'name': '0', 'range': [1927, 1929], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [1930, 1942], 'children': [{'type': 'CallExpression', 'name': 'dump', 'range': [1930, 1942], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [1930, 1932], 'children': [{'type': 'Identifier', 'name': 'json', 'range': [1930, 1931], 'children': []}]}, {'type': 'Identifier', 'name': 'existing_config', 'range': [1934, 1936], 'children': []}, {'type': 'Identifier', 'name': 'f', 'range': [1936, 1937], 'children': []}, {'type': 'Literal', 'name': '2', 'range': [1940, 1942], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [1943, 1948], 'children': [{'type': 'CallExpression', 'name': 'truncate', 'range': [1943, 1948], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [1943, 1945], 'children': [{'type': 'Identifier', 'name': 'f', 'range': [1943, 1944], 'children': []}]}]}]}]}]}]}]}]}]}, {'type': 'ElseStatement', 'name': 'else', 'range': [1949, 1975], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [1951, 1975], 'children': [{'type': 'WithStatement', 'name': 'with', 'range': [1952, 1975], 'children': [{'type': 'CallExpression', 'name': 'open', 'range': [1953, 1958], 'children': [{'type': 'Identifier', 'name': 'config_path', 'range': [1955, 1958], 'children': []}, {'type': 'Literal', 'name': '"w"', 'range': [1957, 1958], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [1961, 1975], 'children': [{'type': 'ExpressionStatement', 'name': '', 'range': [1963, 1975], 'children': [{'type': 'CallExpression', 'name': 'dump', 'range': [1963, 1975], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [1963, 1965], 'children': [{'type': 'Identifier', 'name': 'json', 'range': [1963, 1964], 'children': []}]}, {'type': 'Identifier', 'name': 'config_to_save', 'range': [1967, 1969], 'children': []}, {'type': 'Identifier', 'name': 'f', 'range': [1969, 1970], 'children': []}, {'type': 'Literal', 'name': '2', 'range': [1973, 1975], 'children': []}]}]}]}]}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [1976, 1983], 'children': [{'type': 'CallExpression', 'name': 'clear_updates', 'range': [1976, 1983], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [1976, 1980], 'children': [{'type': 'Identifier', 'name': 'self', 'range': [1976, 1977], 'children': []}, {'type': 'Identifier', 'name': 'config', 'range': [1978, 1980], 'children': []}]}]}]}]}]}]}
2025-01-08 09:37:39,365 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:38:55,632 - ERROR - Failed to parse Step 3 result
2025-01-08 09:38:55,633 - INFO - Starting Step 4: AST normalization
2025-01-08 09:39:10,061 - INFO - Step 4 result: {'type': 'Program', 'name': 'Main', 'range': [0, 0], 'children': []}
2025-01-08 09:39:10,061 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:39:10,801 - INFO - Step 5 result: {'type': 'Program', 'name': 'Settings', 'range': [1803, 1984], 'children': [{'type': 'ClassDecl', 'name': 'Settings', 'range': [1803, 1825], 'children': [{'type': 'VariableDecl', 'name': 'config', 'range': [1810, 1817], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [1813, 1817], 'children': [{'type': 'Identifier', 'name': 'Config', 'range': [1814, 1817], 'children': []}]}]}, {'type': 'VariableDecl', 'name': 'secrets', 'range': [1818, 1825], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [1821, 1825], 'children': [{'type': 'Identifier', 'name': 'Secrets', 'range': [1822, 1825], 'children': []}]}]}]}, {'type': 'FunctionDecl', 'name': 'save', 'range': [1827, 1984], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [1836, 1984], 'children': [{'type': 'IfStatement', 'name': 'if', 'range': [1845, 1948], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [1846, 1851], 'children': [{'type': 'Identifier', 'name': 'self', 'range': [1846, 1847], 'children': []}, {'type': 'Identifier', 'name': 'config', 'range': [1848, 1851], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [1852, 1948], 'children': [{'type': 'VariableDecl', 'name': 'config_to_save', 'range': [1853, 1862], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [1854, 1862], 'children': [{'type': 'CallExpression', 'name': 'get_updates', 'range': [1855, 1862], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [1855, 1859], 'children': [{'type': 'Identifier', 'name': 'self', 'range': [1855, 1856], 'children': []}, {'type': 'Identifier', 'name': 'config', 'range': [1857, 1859], 'children': []}]}]}]}]}, {'type': 'VariableDecl', 'name': 'config_path', 'range': [1863, 1877], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [1864, 1877], 'children': [{'type': 'CallExpression', 'name': 'join', 'range': [1865, 1877], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [1865, 1869], 'children': [{'type': 'Identifier', 'name': 'os', 'range': [1865, 1866], 'children': []}, {'type': 'Identifier', 'name': 'path', 'range': [1867, 1869], 'children': []}]}, {'type': 'CallExpression', 'name': 'get_data_path', 'range': [1871, 1873], 'children': []}, {'type': 'Literal', 'name': '"config.json"', 'range': [1875, 1877], 'children': []}]}]}]}, {'type': 'IfStatement', 'name': 'if', 'range': [1878, 1948], 'children': [{'type': 'CallExpression', 'name': 'exists', 'range': [1879, 1887], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [1879, 1883], 'children': [{'type': 'Identifier', 'name': 'os', 'range': [1879, 1880], 'children': []}, {'type': 'Identifier', 'name': 'path', 'range': [1881, 1883], 'children': []}]}, {'type': 'Identifier', 'name': 'config_path', 'range': [1885, 1887], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [1888, 1948], 'children': [{'type': 'WithStatement', 'name': 'with', 'range': [1889, 1948], 'children': [{'type': 'CallExpression', 'name': 'open', 'range': [1890, 1895], 'children': [{'type': 'Identifier', 'name': 'config_path', 'range': [1892, 1895], 'children': []}, {'type': 'Literal', 'name': '"r+"', 'range': [1894, 1895], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [1898, 1948], 'children': [{'type': 'VariableDecl', 'name': 'existing_config', 'range': [1900, 1915], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [1908, 1915], 'children': [{'type': 'CallExpression', 'name': 'load', 'range': [1909, 1915], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [1909, 1911], 'children': [{'type': 'Identifier', 'name': 'json', 'range': [1909, 1910], 'children': []}]}, {'type': 'Identifier', 'name': 'f', 'range': [1913, 1915], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [1916, 1922], 'children': [{'type': 'CallExpression', 'name': 'update', 'range': [1916, 1922], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [1916, 1918], 'children': [{'type': 'Identifier', 'name': 'existing_config', 'range': [1916, 1917], 'children': []}]}, {'type': 'Identifier', 'name': 'config_to_save', 'range': [1920, 1922], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [1923, 1929], 'children': [{'type': 'CallExpression', 'name': 'seek', 'range': [1923, 1929], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [1923, 1925], 'children': [{'type': 'Identifier', 'name': 'f', 'range': [1923, 1924], 'children': []}]}, {'type': 'Literal', 'name': '0', 'range': [1927, 1929], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [1930, 1942], 'children': [{'type': 'CallExpression', 'name': 'dump', 'range': [1930, 1942], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [1930, 1932], 'children': [{'type': 'Identifier', 'name': 'json', 'range': [1930, 1931], 'children': []}]}, {'type': 'Identifier', 'name': 'existing_config', 'range': [1934, 1936], 'children': []}, {'type': 'Identifier', 'name': 'f', 'range': [1936, 1937], 'children': []}, {'type': 'Literal', 'name': '2', 'range': [1940, 1942], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [1943, 1948], 'children': [{'type': 'CallExpression', 'name': 'truncate', 'range': [1943, 1948], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [1943, 1945], 'children': [{'type': 'Identifier', 'name': 'f', 'range': [1943, 1944], 'children': []}]}]}]}]}]}]}]}]}]}, {'type': 'ElseStatement', 'name': 'else', 'range': [1949, 1975], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [1951, 1975], 'children': [{'type': 'WithStatement', 'name': 'with', 'range': [1952, 1975], 'children': [{'type': 'CallExpression', 'name': 'open', 'range': [1953, 1958], 'children': [{'type': 'Identifier', 'name': 'config_path', 'range': [1955, 1958], 'children': []}, {'type': 'Literal', 'name': '"w"', 'range': [1957, 1958], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [1961, 1975], 'children': [{'type': 'ExpressionStatement', 'name': '', 'range': [1963, 1975], 'children': [{'type': 'CallExpression', 'name': 'dump', 'range': [1963, 1975], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [1963, 1965], 'children': [{'type': 'Identifier', 'name': 'json', 'range': [1963, 1964], 'children': []}]}, {'type': 'Identifier', 'name': 'config_to_save', 'range': [1967, 1969], 'children': []}, {'type': 'Identifier', 'name': 'f', 'range': [1969, 1970], 'children': []}, {'type': 'Literal', 'name': '2', 'range': [1973, 1975], 'children': []}]}]}]}]}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [1976, 1983], 'children': [{'type': 'CallExpression', 'name': 'clear_updates', 'range': [1976, 1983], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [1976, 1980], 'children': [{'type': 'Identifier', 'name': 'self', 'range': [1976, 1977], 'children': []}, {'type': 'Identifier', 'name': 'config', 'range': [1978, 1980], 'children': []}]}]}]}]}]}]}
2025-01-08 09:39:10,801 - INFO - Completed main AST analysis flow
2025-01-08 09:39:10,802 - INFO - Successfully processed chunk
2025-01-08 09:39:11,328 - INFO - Step 3 result: {'type': 'ClassDefinition', 'name': 'Secrets', 'range': [1174, 1802], 'children': [{'type': 'Inheritance', 'name': 'UpdateTrackingModel', 'range': [1176, 1183], 'children': [{'type': 'GenericType', 'name': 'UpdateTrackingModel', 'range': [1177, 1177], 'children': []}, {'type': 'TypeArgument', 'name': 'Secrets', 'range': [1179, 1179], 'children': []}, {'type': 'BaseClass', 'name': 'BaseSettings', 'range': [1182, 1182], 'children': []}]}, {'type': 'Docstring', 'name': 'Secrets for the server.', 'range': [1186, 1188], 'children': []}, {'type': 'FieldDefinition', 'name': 'supabase_url', 'range': [1191, 1204], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1193, 1193], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1195, 1204], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1197, 1199], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1201, 1203], 'children': []}]}]}, {'type': 'FieldDefinition', 'name': 'supabase_service_role_key', 'range': [1206, 1221], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1208, 1208], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1210, 1221], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1213, 1215], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1217, 1219], 'children': []}]}]}, {'type': 'FieldDefinition', 'name': 'encryption_key', 'range': [1224, 1237], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1226, 1226], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1228, 1237], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1230, 1232], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1234, 1236], 'children': []}]}]}, {'type': 'Comment', 'name': 'OAuth server credentials for integrations', 'range': [1240, 1259], 'children': []}, {'type': 'FieldDefinition', 'name': 'github_client_id', 'range': [1260, 1273], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1262, 1262], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1264, 1273], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1266, 1268], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1270, 1272], 'children': []}]}]}, {'type': 'FieldDefinition', 'name': 'github_client_secret', 'range': [1275, 1290], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1277, 1277], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1279, 1290], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1282, 1284], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1286, 1288], 'children': []}]}]}, {'type': 'Comment', 'name': 'OAuthServerCredentialsExample', 'range': [1292, 1304], 'children': []}, {'type': 'FieldDefinition', 'name': 'google_client_id', 'range': [1305, 1318], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1307, 1307], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1309, 1318], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1311, 1313], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1315, 1317], 'children': []}]}]}, {'type': 'FieldDefinition', 'name': 'google_client_secret', 'range': [1320, 1335], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1322, 1322], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1324, 1335], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1327, 1329], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1331, 1333], 'children': []}]}]}, {'type': 'FieldDefinition', 'name': 'notion_client_id', 'range': [1337, 1350], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1339, 1339], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1341, 1350], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1343, 1345], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1347, 1349], 'children': []}]}]}, {'type': 'FieldDefinition', 'name': 'notion_client_secret', 'range': [1352, 1367], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1354, 1354], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1356, 1367], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1359, 1361], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1363, 1365], 'children': []}]}]}, {'type': 'FieldDefinition', 'name': 'openai_api_key', 'range': [1370, 1383], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1372, 1372], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1374, 1383], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1376, 1378], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1380, 1382], 'children': []}]}]}, {'type': 'FieldDefinition', 'name': 'anthropic_api_key', 'range': [1385, 1398], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1387, 1387], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1389, 1398], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1391, 1393], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1395, 1397], 'children': []}]}]}, {'type': 'FieldDefinition', 'name': 'groq_api_key', 'range': [1400, 1413], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1402, 1402], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1404, 1413], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1406, 1408], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1410, 1412], 'children': []}]}]}, {'type': 'FieldDefinition', 'name': 'open_router_api_key', 'range': [1415, 1428], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1417, 1417], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1419, 1428], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1421, 1423], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1425, 1427], 'children': []}]}]}, {'type': 'FieldDefinition', 'name': 'reddit_client_id', 'range': [1431, 1444], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1433, 1433], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1435, 1444], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1437, 1439], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1441, 1443], 'children': []}]}]}, {'type': 'FieldDefinition', 'name': 'reddit_client_secret', 'range': [1446, 1459], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1448, 1448], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1450, 1459], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1452, 1454], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1456, 1458], 'children': []}]}]}, {'type': 'FieldDefinition', 'name': 'reddit_username', 'range': [1461, 1474], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1463, 1463], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1465, 1474], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1467, 1469], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1471, 1473], 'children': []}]}]}, {'type': 'FieldDefinition', 'name': 'reddit_password', 'range': [1476, 1489], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1478, 1478], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1480, 1489], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1482, 1484], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1486, 1488], 'children': []}]}]}, {'type': 'FieldDefinition', 'name': 'openweathermap_api_key', 'range': [1492, 1507], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1494, 1494], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1496, 1507], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1499, 1501], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1503, 1505], 'children': []}]}]}, {'type': 'FieldDefinition', 'name': 'medium_api_key', 'range': [1510, 1523], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1512, 1512], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1514, 1523], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1516, 1518], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1520, 1522], 'children': []}]}]}, {'type': 'FieldDefinition', 'name': 'medium_author_id', 'range': [1525, 1538], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1527, 1527], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1529, 1538], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1531, 1533], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1535, 1537], 'children': []}]}]}, {'type': 'FieldDefinition', 'name': 'did_api_key', 'range': [1540, 1553], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1542, 1542], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1544, 1553], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1546, 1548], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1550, 1552], 'children': []}]}]}, {'type': 'FieldDefinition', 'name': 'revid_api_key', 'range': [1555, 1568], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1557, 1557], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1559, 1568], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1561, 1563], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1565, 1567], 'children': []}]}]}, {'type': 'FieldDefinition', 'name': 'discord_bot_token', 'range': [1570, 1583], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1572, 1572], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1574, 1583], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1576, 1578], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1580, 1582], 'children': []}]}]}, {'type': 'FieldDefinition', 'name': 'smtp_server', 'range': [1586, 1599], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1588, 1588], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1590, 1599], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1592, 1594], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1596, 1598], 'children': []}]}]}, {'type': 'FieldDefinition', 'name': 'smtp_port', 'range': [1601, 1614], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1603, 1603], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1605, 1614], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1607, 1609], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1611, 1613], 'children': []}]}]}, {'type': 'FieldDefinition', 'name': 'smtp_username', 'range': [1616, 1629], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1618, 1618], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1620, 1629], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1622, 1624], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1626, 1628], 'children': []}]}]}, {'type': 'FieldDefinition', 'name': 'smtp_password', 'range': [1631, 1644], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1633, 1633], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1635, 1644], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1637, 1639], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1641, 1643], 'children': []}]}]}, {'type': 'FieldDefinition', 'name': 'sentry_dsn', 'range': [1647, 1660], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1649, 1649], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1651, 1660], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1653, 1655], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1657, 1659], 'children': []}]}]}, {'type': 'FieldDefinition', 'name': 'google_maps_api_key', 'range': [1663, 1676], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1665, 1665], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1667, 1676], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1669, 1671], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1673, 1675], 'children': []}]}]}, {'type': 'FieldDefinition', 'name': 'replicate_api_key', 'range': [1679, 1692], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1681, 1681], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1683, 1692], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1685, 1687], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1689, 1691], 'children': []}]}]}, {'type': 'FieldDefinition', 'name': 'unreal_speech_api_key', 'range': [1694, 1707], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1696, 1696], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1698, 1707], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1700, 1702], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1704, 1706], 'children': []}]}]}, {'type': 'FieldDefinition', 'name': 'ideogram_api_key', 'range': [1709, 1722], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1711, 1711], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1713, 1722], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1715, 1717], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1719, 1721], 'children': []}]}]}, {'type': 'FieldDefinition', 'name': 'jina_api_key', 'range': [1724, 1737], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1726, 1726], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1728, 1737], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1730, 1732], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1734, 1736], 'children': []}]}]}, {'type': 'FieldDefinition', 'name': 'unreal_speech_api_key', 'range': [1739, 1752], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1741, 1741], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1743, 1752], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1745, 1747], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1749, 1751], 'children': []}]}]}, {'type': 'FieldDefinition', 'name': 'fal_key', 'range': [1755, 1768], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1757, 1757], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1759, 1768], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1761, 1763], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1765, 1767], 'children': []}]}]}, {'type': 'Comment', 'name': 'Add more secret fields as needed', 'range': [1771, 1778], 'children': []}, {'type': 'ModelConfig', 'name': 'SettingsConfigDict', 'range': [1780, 1800], 'children': [{'type': 'Argument', 'name': 'env_file', 'range': [1785, 1787], 'children': []}, {'type': 'Argument', 'name': 'env_file_encoding', 'range': [1790, 1792], 'children': []}, {'type': 'Argument', 'name': 'extra', 'range': [1795, 1797], 'children': []}]}]}
2025-01-08 09:39:11,328 - INFO - Starting Step 4: AST normalization
2025-01-08 09:39:13,681 - INFO - Step 5 result: {'type': 'Program', 'name': 'Main', 'range': [0, 0], 'children': []}
2025-01-08 09:39:13,681 - INFO - Completed main AST analysis flow
2025-01-08 09:39:13,681 - INFO - Successfully processed chunk
2025-01-08 09:41:44,294 - INFO - Step 4 result: {'type': 'ClassDecl', 'name': 'Secrets', 'range': [1174, 1802], 'children': [{'type': 'Inheritance', 'name': 'UpdateTrackingModel', 'range': [1176, 1183], 'children': [{'type': 'GenericType', 'name': 'UpdateTrackingModel', 'range': [1177, 1177], 'children': []}, {'type': 'TypeArgument', 'name': 'Secrets', 'range': [1179, 1179], 'children': []}, {'type': 'BaseClass', 'name': 'BaseSettings', 'range': [1182, 1182], 'children': []}]}, {'type': 'Docstring', 'name': 'Secrets for the server.', 'range': [1186, 1188], 'children': []}, {'type': 'FieldDecl', 'name': 'supabase_url', 'range': [1191, 1204], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1193, 1193], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1195, 1204], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1197, 1199], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1201, 1203], 'children': []}]}]}, {'type': 'FieldDecl', 'name': 'supabase_service_role_key', 'range': [1206, 1221], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1208, 1208], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1210, 1221], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1213, 1215], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1217, 1219], 'children': []}]}]}, {'type': 'FieldDecl', 'name': 'encryption_key', 'range': [1224, 1237], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1226, 1226], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1228, 1237], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1230, 1232], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1234, 1236], 'children': []}]}]}, {'type': 'Comment', 'name': 'OAuth server credentials for integrations', 'range': [1240, 1259], 'children': []}, {'type': 'FieldDecl', 'name': 'github_client_id', 'range': [1260, 1273], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1262, 1262], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1264, 1273], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1266, 1268], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1270, 1272], 'children': []}]}]}, {'type': 'FieldDecl', 'name': 'github_client_secret', 'range': [1275, 1290], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1277, 1277], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1279, 1290], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1282, 1284], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1286, 1288], 'children': []}]}]}, {'type': 'Comment', 'name': 'OAuthServerCredentialsExample', 'range': [1292, 1304], 'children': []}, {'type': 'FieldDecl', 'name': 'google_client_id', 'range': [1305, 1318], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1307, 1307], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1309, 1318], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1311, 1313], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1315, 1317], 'children': []}]}]}, {'type': 'FieldDecl', 'name': 'google_client_secret', 'range': [1320, 1335], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1322, 1322], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1324, 1335], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1327, 1329], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1331, 1333], 'children': []}]}]}, {'type': 'FieldDecl', 'name': 'notion_client_id', 'range': [1337, 1350], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1339, 1339], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1341, 1350], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1343, 1345], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1347, 1349], 'children': []}]}]}, {'type': 'FieldDecl', 'name': 'notion_client_secret', 'range': [1352, 1367], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1354, 1354], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1356, 1367], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1359, 1361], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1363, 1365], 'children': []}]}]}, {'type': 'FieldDecl', 'name': 'openai_api_key', 'range': [1370, 1383], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1372, 1372], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1374, 1383], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1376, 1378], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1380, 1382], 'children': []}]}]}, {'type': 'FieldDecl', 'name': 'anthropic_api_key', 'range': [1385, 1398], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1387, 1387], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1389, 1398], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1391, 1393], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1395, 1397], 'children': []}]}]}, {'type': 'FieldDecl', 'name': 'groq_api_key', 'range': [1400, 1413], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1402, 1402], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1404, 1413], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1406, 1408], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1410, 1412], 'children': []}]}]}, {'type': 'FieldDecl', 'name': 'open_router_api_key', 'range': [1415, 1428], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1417, 1417], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1419, 1428], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1421, 1423], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1425, 1427], 'children': []}]}]}, {'type': 'FieldDecl', 'name': 'reddit_client_id', 'range': [1431, 1444], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1433, 1433], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1435, 1444], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1437, 1439], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1441, 1443], 'children': []}]}]}, {'type': 'FieldDecl', 'name': 'reddit_client_secret', 'range': [1446, 1459], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1448, 1448], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1450, 1459], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1452, 1454], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1456, 1458], 'children': []}]}]}, {'type': 'FieldDecl', 'name': 'reddit_username', 'range': [1461, 1474], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1463, 1463], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1465, 1474], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1467, 1469], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1471, 1473], 'children': []}]}]}, {'type': 'FieldDecl', 'name': 'reddit_password', 'range': [1476, 1489], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1478, 1478], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1480, 1489], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1482, 1484], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1486, 1488], 'children': []}]}]}, {'type': 'FieldDecl', 'name': 'openweathermap_api_key', 'range': [1492, 1507], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1494, 1494], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1496, 1507], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1499, 1501], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1503, 1505], 'children': []}]}]}, {'type': 'FieldDecl', 'name': 'medium_api_key', 'range': [1510, 1523], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1512, 1512], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1514, 1523], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1516, 1518], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1520, 1522], 'children': []}]}]}, {'type': 'FieldDecl', 'name': 'medium_author_id', 'range': [1525, 1538], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1527, 1527], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1529, 1538], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1531, 1533], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1535, 1537], 'children': []}]}]}, {'type': 'FieldDecl', 'name': 'did_api_key', 'range': [1540, 1553], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1542, 1542], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1544, 1553], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1546, 1548], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1550, 1552], 'children': []}]}]}, {'type': 'FieldDecl', 'name': 'revid_api_key', 'range': [1555, 1568], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1557, 1557], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1559, 1568], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1561, 1563], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1565, 1567], 'children': []}]}]}, {'type': 'FieldDecl', 'name': 'discord_bot_token', 'range': [1570, 1583], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1572, 1572], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1574, 1583], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1576, 1578], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1580, 1582], 'children': []}]}]}, {'type': 'FieldDecl', 'name': 'smtp_server', 'range': [1586, 1599], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1588, 1588], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1590, 1599], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1592, 1594], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1596, 1598], 'children': []}]}]}, {'type': 'FieldDecl', 'name': 'smtp_port', 'range': [1601, 1614], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1603, 1603], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1605, 1614], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1607, 1609], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1611, 1613], 'children': []}]}]}, {'type': 'FieldDecl', 'name': 'smtp_username', 'range': [1616, 1629], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1618, 1618], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1620, 1629], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1622, 1624], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1626, 1628], 'children': []}]}]}, {'type': 'FieldDecl', 'name': 'smtp_password', 'range': [1631, 1644], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1633, 1633], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1635, 1644], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1637, 1639], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1641, 1643], 'children': []}]}]}, {'type': 'FieldDecl', 'name': 'sentry_dsn', 'range': [1647, 1660], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1649, 1649], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1651, 1660], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1653, 1655], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1657, 1659], 'children': []}]}]}, {'type': 'FieldDecl', 'name': 'google_maps_api_key', 'range': [1663, 1676], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1665, 1665], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1667, 1676], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1669, 1671], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1673, 1675], 'children': []}]}]}, {'type': 'FieldDecl', 'name': 'replicate_api_key', 'range': [1679, 1692], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1681, 1681], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1683, 1692], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1685, 1687], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1689, 1691], 'children': []}]}]}, {'type': 'FieldDecl', 'name': 'unreal_speech_api_key', 'range': [1694, 1707], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1696, 1696], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1698, 1707], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1700, 1702], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1704, 1706], 'children': []}]}]}, {'type': 'FieldDecl', 'name': 'ideogram_api_key', 'range': [1709, 1722], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1711, 1711], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1713, 1722], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1715, 1717], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1719, 1721], 'children': []}]}]}, {'type': 'FieldDecl', 'name': 'jina_api_key', 'range': [1724, 1737], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1726, 1726], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1728, 1737], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1730, 1732], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1734, 1736], 'children': []}]}]}, {'type': 'FieldDecl', 'name': 'unreal_speech_api_key', 'range': [1739, 1752], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1741, 1741], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1743, 1752], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1745, 1747], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1749, 1751], 'children': []}]}]}, {'type': 'FieldDecl', 'name': 'fal_key', 'range': [1755, 1768], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1757, 1757], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1759, 1768], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1761, 1763], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1765, 1767], 'children': []}]}]}, {'type': 'Comment', 'name': 'Add more secret fields as needed', 'range': [1771, 1778], 'children': []}, {'type': 'ModelConfig', 'name': 'SettingsConfigDict', 'range': [1780, 1800], 'children': [{'type': 'Argument', 'name': 'env_file', 'range': [1785, 1787], 'children': []}, {'type': 'Argument', 'name': 'env_file_encoding', 'range': [1790, 1792], 'children': []}, {'type': 'Argument', 'name': 'extra', 'range': [1795, 1797], 'children': []}]}]}
2025-01-08 09:41:44,295 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:43:55,211 - INFO - Step 5 result: {'type': 'Program', 'name': 'Secrets', 'range': [1174, 1802], 'children': [{'type': 'ClassDecl', 'name': 'Secrets', 'range': [1174, 1802], 'children': [{'type': 'Inheritance', 'name': 'UpdateTrackingModel', 'range': [1176, 1183], 'children': [{'type': 'GenericType', 'name': 'UpdateTrackingModel', 'range': [1177, 1177], 'children': []}, {'type': 'TypeArgument', 'name': 'Secrets', 'range': [1179, 1179], 'children': []}, {'type': 'BaseClass', 'name': 'BaseSettings', 'range': [1182, 1182], 'children': []}]}, {'type': 'Docstring', 'name': 'Secrets for the server.', 'range': [1186, 1188], 'children': []}, {'type': 'FieldDecl', 'name': 'supabase_url', 'range': [1191, 1204], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1193, 1193], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1195, 1204], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1197, 1199], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1201, 1203], 'children': []}]}]}, {'type': 'FieldDecl', 'name': 'supabase_service_role_key', 'range': [1206, 1221], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1208, 1208], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1210, 1221], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1213, 1215], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1217, 1219], 'children': []}]}]}, {'type': 'FieldDecl', 'name': 'encryption_key', 'range': [1224, 1237], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1226, 1226], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1228, 1237], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1230, 1232], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1234, 1236], 'children': []}]}]}, {'type': 'Comment', 'name': 'OAuth server credentials for integrations', 'range': [1240, 1259], 'children': []}, {'type': 'FieldDecl', 'name': 'github_client_id', 'range': [1260, 1273], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1262, 1262], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1264, 1273], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1266, 1268], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1270, 1272], 'children': []}]}]}, {'type': 'FieldDecl', 'name': 'github_client_secret', 'range': [1275, 1290], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1277, 1277], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1279, 1290], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1282, 1284], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1286, 1288], 'children': []}]}]}, {'type': 'Comment', 'name': 'OAuthServerCredentialsExample', 'range': [1292, 1304], 'children': []}, {'type': 'FieldDecl', 'name': 'google_client_id', 'range': [1305, 1318], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1307, 1307], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1309, 1318], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1311, 1313], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1315, 1317], 'children': []}]}]}, {'type': 'FieldDecl', 'name': 'google_client_secret', 'range': [1320, 1335], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1322, 1322], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1324, 1335], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1327, 1329], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1331, 1333], 'children': []}]}]}, {'type': 'FieldDecl', 'name': 'notion_client_id', 'range': [1337, 1350], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1339, 1339], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1341, 1350], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1343, 1345], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1347, 1349], 'children': []}]}]}, {'type': 'FieldDecl', 'name': 'notion_client_secret', 'range': [1352, 1367], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1354, 1354], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1356, 1367], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1359, 1361], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1363, 1365], 'children': []}]}]}, {'type': 'FieldDecl', 'name': 'openai_api_key', 'range': [1370, 1383], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1372, 1372], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1374, 1383], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1376, 1378], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1380, 1382], 'children': []}]}]}, {'type': 'FieldDecl', 'name': 'anthropic_api_key', 'range': [1385, 1398], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1387, 1387], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1389, 1398], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1391, 1393], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1395, 1397], 'children': []}]}]}, {'type': 'FieldDecl', 'name': 'groq_api_key', 'range': [1400, 1413], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1402, 1402], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1404, 1413], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1406, 1408], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1410, 1412], 'children': []}]}]}, {'type': 'FieldDecl', 'name': 'open_router_api_key', 'range': [1415, 1428], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1417, 1417], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1419, 1428], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1421, 1423], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1425, 1427], 'children': []}]}]}, {'type': 'FieldDecl', 'name': 'reddit_client_id', 'range': [1431, 1444], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1433, 1433], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1435, 1444], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1437, 1439], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1441, 1443], 'children': []}]}]}, {'type': 'FieldDecl', 'name': 'reddit_client_secret', 'range': [1446, 1459], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1448, 1448], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1450, 1459], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1452, 1454], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1456, 1458], 'children': []}]}]}, {'type': 'FieldDecl', 'name': 'reddit_username', 'range': [1461, 1474], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1463, 1463], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1465, 1474], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1467, 1469], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1471, 1473], 'children': []}]}]}, {'type': 'FieldDecl', 'name': 'reddit_password', 'range': [1476, 1489], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1478, 1478], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1480, 1489], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1482, 1484], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1486, 1488], 'children': []}]}]}, {'type': 'FieldDecl', 'name': 'openweathermap_api_key', 'range': [1492, 1507], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1494, 1494], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1496, 1507], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1499, 1501], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1503, 1505], 'children': []}]}]}, {'type': 'FieldDecl', 'name': 'medium_api_key', 'range': [1510, 1523], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1512, 1512], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1514, 1523], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1516, 1518], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1520, 1522], 'children': []}]}]}, {'type': 'FieldDecl', 'name': 'medium_author_id', 'range': [1525, 1538], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1527, 1527], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1529, 1538], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1531, 1533], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1535, 1537], 'children': []}]}]}, {'type': 'FieldDecl', 'name': 'did_api_key', 'range': [1540, 1553], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1542, 1542], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1544, 1553], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1546, 1548], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1550, 1552], 'children': []}]}]}, {'type': 'FieldDecl', 'name': 'revid_api_key', 'range': [1555, 1568], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1557, 1557], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1559, 1568], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1561, 1563], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1565, 1567], 'children': []}]}]}, {'type': 'FieldDecl', 'name': 'discord_bot_token', 'range': [1570, 1583], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1572, 1572], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1574, 1583], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1576, 1578], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1580, 1582], 'children': []}]}]}, {'type': 'FieldDecl', 'name': 'smtp_server', 'range': [1586, 1599], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1588, 1588], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1590, 1599], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1592, 1594], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1596, 1598], 'children': []}]}]}, {'type': 'FieldDecl', 'name': 'smtp_port', 'range': [1601, 1614], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1603, 1603], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1605, 1614], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1607, 1609], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1611, 1613], 'children': []}]}]}, {'type': 'FieldDecl', 'name': 'smtp_username', 'range': [1616, 1629], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1618, 1618], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1620, 1629], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1622, 1624], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1626, 1628], 'children': []}]}]}, {'type': 'FieldDecl', 'name': 'smtp_password', 'range': [1631, 1644], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1633, 1633], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1635, 1644], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1637, 1639], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1641, 1643], 'children': []}]}]}, {'type': 'FieldDecl', 'name': 'sentry_dsn', 'range': [1647, 1660], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1649, 1649], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1651, 1660], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1653, 1655], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1657, 1659], 'children': []}]}]}, {'type': 'FieldDecl', 'name': 'google_maps_api_key', 'range': [1663, 1676], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1665, 1665], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1667, 1676], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1669, 1671], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1673, 1675], 'children': []}]}]}, {'type': 'FieldDecl', 'name': 'replicate_api_key', 'range': [1679, 1692], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1681, 1681], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1683, 1692], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1685, 1687], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1689, 1691], 'children': []}]}]}, {'type': 'FieldDecl', 'name': 'unreal_speech_api_key', 'range': [1694, 1707], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1696, 1696], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1698, 1707], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1700, 1702], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1704, 1706], 'children': []}]}]}, {'type': 'FieldDecl', 'name': 'ideogram_api_key', 'range': [1709, 1722], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1711, 1711], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1713, 1722], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1715, 1717], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1719, 1721], 'children': []}]}]}, {'type': 'FieldDecl', 'name': 'jina_api_key', 'range': [1724, 1737], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1726, 1726], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1728, 1737], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1730, 1732], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1734, 1736], 'children': []}]}]}, {'type': 'FieldDecl', 'name': 'unreal_speech_api_key', 'range': [1739, 1752], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1741, 1741], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1743, 1752], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1745, 1747], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1749, 1751], 'children': []}]}]}, {'type': 'FieldDecl', 'name': 'fal_key', 'range': [1755, 1768], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1757, 1757], 'children': []}, {'type': 'FieldInitialization', 'name': 'Field', 'range': [1759, 1768], 'children': [{'type': 'Argument', 'name': 'default', 'range': [1761, 1763], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [1765, 1767], 'children': []}]}]}, {'type': 'Comment', 'name': 'Add more secret fields as needed', 'range': [1771, 1778], 'children': []}, {'type': 'ModelConfig', 'name': 'SettingsConfigDict', 'range': [1780, 1800], 'children': [{'type': 'Argument', 'name': 'env_file', 'range': [1785, 1787], 'children': []}, {'type': 'Argument', 'name': 'env_file_encoding', 'range': [1790, 1792], 'children': []}, {'type': 'Argument', 'name': 'extra', 'range': [1795, 1797], 'children': []}]}]}]}
2025-01-08 09:43:55,211 - INFO - Completed main AST analysis flow
2025-01-08 09:43:55,212 - INFO - Successfully processed chunk
2025-01-08 09:43:55,282 - INFO - Starting code generation from AST
2025-01-08 10:13:57,102 - ERROR - Error in get_code_from_ast: Expecting value: line 30 column 1 (char 29)
2025-01-08 10:13:57,103 - INFO - Starting static code similarity comparison
2025-01-08 10:13:57,109 - INFO - Static similarity result: {'final_score': 20.29, 'length_similarity': 0.0, 'token_similarity': 0.0, 'structure_similarity': 0.0, 'function_similarity': 100, 'complexity_similarity': 2.86, 'variable_similarity': 100}
