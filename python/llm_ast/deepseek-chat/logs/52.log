2025-01-08 09:24:40,820 - INFO - Processing sample 52
2025-01-08 09:24:40,820 - INFO - Starting Step 0: Splitting code into top-level declarations
2025-01-08 09:25:06,624 - INFO - Successfully split code into 3 top-level declarations
2025-01-08 09:25:06,625 - INFO - Processing chunk #0 (size=62 chars, start_index=0)
2025-01-08 09:25:06,626 - INFO - Processing chunk with 62 chars starting at index 0
2025-01-08 09:25:06,626 - INFO - Starting main AST analysis flow
2025-01-08 09:25:06,626 - INFO - Tokenized code into 13 tokens
2025-01-08 09:25:06,626 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:25:06,627 - INFO - Processing chunk #1 (size=136 chars, start_index=13)
2025-01-08 09:25:06,627 - INFO - Processing chunk with 136 chars starting at index 13
2025-01-08 09:25:06,628 - INFO - Starting main AST analysis flow
2025-01-08 09:25:06,628 - INFO - Tokenized code into 29 tokens
2025-01-08 09:25:06,628 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:25:06,632 - INFO - Processing chunk #2 (size=809 chars, start_index=42)
2025-01-08 09:25:06,633 - INFO - Processing chunk with 809 chars starting at index 42
2025-01-08 09:25:06,633 - INFO - Starting main AST analysis flow
2025-01-08 09:25:06,633 - INFO - Tokenized code into 152 tokens
2025-01-08 09:25:06,633 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:25:15,567 - INFO - Step 1 result: {'type': 'Program', 'name': 'APIKeyContainer', 'range': [13, 41], 'children': []}
2025-01-08 09:25:15,567 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:25:18,906 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [0, 12], 'children': [{'type': 'ImportDeclaration', 'name': 'hashlib', 'range': [0, 2], 'children': []}, {'type': 'ImportDeclaration', 'name': 'secrets', 'range': [3, 5], 'children': []}, {'type': 'ImportDeclaration', 'name': 'NamedTuple', 'range': [6, 10], 'children': []}]}
2025-01-08 09:25:18,906 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:25:21,255 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [42, 193], 'children': [{'type': 'ClassDeclaration', 'name': 'APIKeyManager', 'range': [42, 63], 'children': [{'type': 'VariableDeclaration', 'name': 'PREFIX', 'range': [46, 50], 'children': []}, {'type': 'VariableDeclaration', 'name': 'PREFIX_LENGTH', 'range': [52, 56], 'children': []}, {'type': 'VariableDeclaration', 'name': 'POSTFIX_LENGTH', 'range': [58, 62], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': 'generate_api_key', 'range': [65, 135], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'verify_api_key', 'range': [137, 192], 'children': []}]}
2025-01-08 09:25:21,255 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:25:46,412 - INFO - Step 2 result: {'type': 'Program', 'name': 'APIKeyContainer', 'range': [13, 41], 'children': [{'type': 'ClassDeclaration', 'name': 'APIKeyContainer', 'range': [13, 41], 'children': [{'type': 'Inheritance', 'name': 'NamedTuple', 'range': [15, 17], 'children': []}, {'type': 'Docstring', 'name': 'Container for API key parts.', 'range': [20, 22], 'children': []}, {'type': 'FieldDeclaration', 'name': 'raw', 'range': [25, 27], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [27, 27], 'children': []}]}, {'type': 'FieldDeclaration', 'name': 'prefix', 'range': [29, 31], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [31, 31], 'children': []}]}, {'type': 'FieldDeclaration', 'name': 'postfix', 'range': [33, 35], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [35, 35], 'children': []}]}, {'type': 'FieldDeclaration', 'name': 'hash', 'range': [37, 39], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [39, 39], 'children': []}]}]}]}
2025-01-08 09:25:46,413 - INFO - Starting Step 3: AST simplification
2025-01-08 09:26:08,851 - INFO - Step 2 result: {'nodes': [{'type': 'ImportDeclaration', 'name': 'hashlib', 'range': [0, 2], 'children': [{'type': 'ImportSpecifier', 'name': 'hashlib', 'range': [0, 2], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'secrets', 'range': [3, 5], 'children': [{'type': 'ImportSpecifier', 'name': 'secrets', 'range': [3, 5], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'NamedTuple', 'range': [6, 10], 'children': [{'type': 'FromImport', 'name': 'typing', 'range': [6, 8], 'children': []}, {'type': 'ImportSpecifier', 'name': 'NamedTuple', 'range': [9, 10], 'children': []}]}]}
2025-01-08 09:26:08,851 - INFO - Starting Step 3: AST simplification
2025-01-08 09:26:17,190 - INFO - Step 3 result: {'type': 'Program', 'name': 'APIKeyContainer', 'range': [13, 41], 'children': [{'type': 'ClassDeclaration', 'name': 'APIKeyContainer', 'range': [13, 41], 'children': [{'type': 'Inheritance', 'name': 'NamedTuple', 'range': [15, 17], 'children': []}, {'type': 'Docstring', 'name': 'Container for API key parts.', 'range': [20, 22], 'children': []}, {'type': 'FieldDeclaration', 'name': 'raw', 'range': [25, 27], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [27, 27], 'children': []}]}, {'type': 'FieldDeclaration', 'name': 'prefix', 'range': [29, 31], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [31, 31], 'children': []}]}, {'type': 'FieldDeclaration', 'name': 'postfix', 'range': [33, 35], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [35, 35], 'children': []}]}, {'type': 'FieldDeclaration', 'name': 'hash', 'range': [37, 39], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [39, 39], 'children': []}]}]}]}
2025-01-08 09:26:17,190 - INFO - Starting Step 4: AST normalization
2025-01-08 09:26:25,335 - INFO - Step 3 result: {'nodes': [{'type': 'ImportDeclaration', 'name': 'hashlib', 'range': [0, 2], 'children': [{'type': 'ImportSpecifier', 'name': 'hashlib', 'range': [0, 2], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'secrets', 'range': [3, 5], 'children': [{'type': 'ImportSpecifier', 'name': 'secrets', 'range': [3, 5], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'NamedTuple', 'range': [6, 10], 'children': [{'type': 'FromImport', 'name': 'typing', 'range': [6, 8], 'children': []}, {'type': 'ImportSpecifier', 'name': 'NamedTuple', 'range': [9, 10], 'children': []}]}]}
2025-01-08 09:26:25,336 - INFO - Starting Step 4: AST normalization
2025-01-08 09:26:37,110 - INFO - Step 4 result: {'nodes': [{'type': 'ImportDeclaration', 'name': 'hashlib', 'range': [0, 2], 'children': [{'type': 'ImportSpecifier', 'name': 'hashlib', 'range': [0, 2], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'secrets', 'range': [3, 5], 'children': [{'type': 'ImportSpecifier', 'name': 'secrets', 'range': [3, 5], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'NamedTuple', 'range': [6, 10], 'children': [{'type': 'FromImport', 'name': 'typing', 'range': [6, 8], 'children': []}, {'type': 'ImportSpecifier', 'name': 'NamedTuple', 'range': [9, 10], 'children': []}]}]}
2025-01-08 09:26:37,110 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:26:44,410 - INFO - Step 4 result: {'type': 'Program', 'name': 'APIKeyContainer', 'range': [13, 41], 'children': [{'type': 'ClassDecl', 'name': 'APIKeyContainer', 'range': [13, 41], 'children': [{'type': 'Inheritance', 'name': 'NamedTuple', 'range': [15, 17], 'children': []}, {'type': 'Docstring', 'name': 'Container for API key parts.', 'range': [20, 22], 'children': []}, {'type': 'FieldDecl', 'name': 'raw', 'range': [25, 27], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [27, 27], 'children': []}]}, {'type': 'FieldDecl', 'name': 'prefix', 'range': [29, 31], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [31, 31], 'children': []}]}, {'type': 'FieldDecl', 'name': 'postfix', 'range': [33, 35], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [35, 35], 'children': []}]}, {'type': 'FieldDecl', 'name': 'hash', 'range': [37, 39], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [39, 39], 'children': []}]}]}]}
2025-01-08 09:26:44,411 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:26:51,946 - INFO - Step 5 result: {'nodes': [{'type': 'Program', 'name': 'MainOrSomething', 'range': [0, 10], 'children': [{'type': 'ImportDeclaration', 'name': 'hashlib', 'range': [0, 2], 'children': [{'type': 'ImportSpecifier', 'name': 'hashlib', 'range': [0, 2], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'secrets', 'range': [3, 5], 'children': [{'type': 'ImportSpecifier', 'name': 'secrets', 'range': [3, 5], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'NamedTuple', 'range': [6, 10], 'children': [{'type': 'FromImport', 'name': 'typing', 'range': [6, 8], 'children': []}, {'type': 'ImportSpecifier', 'name': 'NamedTuple', 'range': [9, 10], 'children': []}]}]}]}
2025-01-08 09:26:51,947 - INFO - Completed main AST analysis flow
2025-01-08 09:26:51,947 - INFO - Successfully processed chunk
2025-01-08 09:26:56,115 - INFO - Step 2 result: {'type': 'Program', 'name': '', 'range': [42, 193], 'children': [{'type': 'ClassDeclaration', 'name': 'APIKeyManager', 'range': [42, 63], 'children': [{'type': 'VariableDeclaration', 'name': 'PREFIX', 'range': [46, 50], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [48, 48], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [49, 50], 'children': [{'type': 'StringLiteral', 'name': '"agpt_"', 'range': [50, 50], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'PREFIX_LENGTH', 'range': [52, 56], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [54, 54], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [55, 56], 'children': [{'type': 'NumericLiteral', 'name': '8', 'range': [56, 56], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'POSTFIX_LENGTH', 'range': [58, 62], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [60, 60], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [61, 62], 'children': [{'type': 'NumericLiteral', 'name': '8', 'range': [62, 62], 'children': []}]}]}]}, {'type': 'FunctionDeclaration', 'name': 'generate_api_key', 'range': [65, 135], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [68, 68], 'children': []}, {'type': 'ReturnTypeAnnotation', 'name': 'APIKeyContainer', 'range': [72, 72], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [74, 135], 'children': [{'type': 'VariableDeclaration', 'name': 'raw_key', 'range': [79, 83], 'children': [{'type': 'Assignment', 'name': '=', 'range': [80, 83], 'children': [{'type': 'TemplateLiteral', 'name': 'f"{self.PREFIX}{secrets.token_urlsafe(32)}"', 'range': [81, 83], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [84, 135], 'children': [{'type': 'NewExpression', 'name': 'APIKeyContainer', 'range': [85, 135], 'children': [{'type': 'Argument', 'name': 'raw', 'range': [88, 90], 'children': [{'type': 'Identifier', 'name': 'raw_key', 'range': [90, 90], 'children': []}]}, {'type': 'Argument', 'name': 'prefix', 'range': [93, 102], 'children': [{'type': 'SliceExpression', 'name': 'raw_key[:self.PREFIX_LENGTH]', 'range': [95, 101], 'children': []}]}, {'type': 'Argument', 'name': 'postfix', 'range': [104, 114], 'children': [{'type': 'SliceExpression', 'name': 'raw_key[-self.POSTFIX_LENGTH:]', 'range': [106, 113], 'children': []}]}, {'type': 'Argument', 'name': 'hash', 'range': [116, 132], 'children': [{'type': 'CallExpression', 'name': 'hashlib.sha256(raw_key.encode()).hexdigest()', 'range': [118, 131], 'children': []}]}]}]}]}]}, {'type': 'FunctionDeclaration', 'name': 'verify_api_key', 'range': [137, 192], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [140, 140], 'children': []}, {'type': 'Parameter', 'name': 'provided_key', 'range': [142, 142], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [144, 144], 'children': []}]}, {'type': 'Parameter', 'name': 'stored_hash', 'range': [146, 146], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [148, 148], 'children': []}]}, {'type': 'ReturnTypeAnnotation', 'name': 'bool', 'range': [152, 152], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [154, 192], 'children': [{'type': 'IfStatement', 'name': 'if', 'range': [159, 173], 'children': [{'type': 'UnaryExpression', 'name': 'not', 'range': [160, 160], 'children': [{'type': 'CallExpression', 'name': 'provided_key.startswith(self.PREFIX)', 'range': [161, 168], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [170, 173], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [171, 172], 'children': [{'type': 'BooleanLiteral', 'name': 'False', 'range': [172, 172], 'children': []}]}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [174, 192], 'children': [{'type': 'BinaryExpression', 'name': '==', 'range': [189, 190], 'children': [{'type': 'CallExpression', 'name': 'hashlib.sha256(provided_key.encode()).hexdigest()', 'range': [175, 188], 'children': []}, {'type': 'Identifier', 'name': 'stored_hash', 'range': [191, 191], 'children': []}]}]}]}]}]}
2025-01-08 09:26:56,116 - INFO - Starting Step 3: AST simplification
2025-01-08 09:27:08,096 - INFO - Step 5 result: {'type': 'Program', 'name': 'APIKeyContainer', 'range': [13, 41], 'children': [{'type': 'ClassDecl', 'name': 'APIKeyContainer', 'range': [13, 41], 'children': [{'type': 'Inheritance', 'name': 'NamedTuple', 'range': [15, 17], 'children': []}, {'type': 'Docstring', 'name': 'Container for API key parts.', 'range': [20, 22], 'children': []}, {'type': 'FieldDecl', 'name': 'raw', 'range': [25, 27], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [27, 27], 'children': []}]}, {'type': 'FieldDecl', 'name': 'prefix', 'range': [29, 31], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [31, 31], 'children': []}]}, {'type': 'FieldDecl', 'name': 'postfix', 'range': [33, 35], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [35, 35], 'children': []}]}, {'type': 'FieldDecl', 'name': 'hash', 'range': [37, 39], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [39, 39], 'children': []}]}]}]}
2025-01-08 09:27:08,096 - INFO - Completed main AST analysis flow
2025-01-08 09:27:08,096 - INFO - Successfully processed chunk
2025-01-08 09:28:03,745 - INFO - Step 3 result: {'type': 'Program', 'name': '', 'range': [42, 193], 'children': [{'type': 'ClassDeclaration', 'name': 'APIKeyManager', 'range': [42, 63], 'children': [{'type': 'VariableDeclaration', 'name': 'PREFIX', 'range': [46, 50], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [48, 48], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [49, 50], 'children': [{'type': 'StringLiteral', 'name': '"agpt_"', 'range': [50, 50], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'PREFIX_LENGTH', 'range': [52, 56], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [54, 54], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [55, 56], 'children': [{'type': 'NumericLiteral', 'name': '8', 'range': [56, 56], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'POSTFIX_LENGTH', 'range': [58, 62], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [60, 60], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [61, 62], 'children': [{'type': 'NumericLiteral', 'name': '8', 'range': [62, 62], 'children': []}]}]}]}, {'type': 'FunctionDeclaration', 'name': 'generate_api_key', 'range': [65, 135], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [68, 68], 'children': []}, {'type': 'ReturnTypeAnnotation', 'name': 'APIKeyContainer', 'range': [72, 72], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [74, 135], 'children': [{'type': 'VariableDeclaration', 'name': 'raw_key', 'range': [79, 83], 'children': [{'type': 'Assignment', 'name': '=', 'range': [80, 83], 'children': [{'type': 'TemplateLiteral', 'name': 'f"{self.PREFIX}{secrets.token_urlsafe(32)}"', 'range': [81, 83], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [84, 135], 'children': [{'type': 'NewExpression', 'name': 'APIKeyContainer', 'range': [85, 135], 'children': [{'type': 'Argument', 'name': 'raw', 'range': [88, 90], 'children': [{'type': 'Identifier', 'name': 'raw_key', 'range': [90, 90], 'children': []}]}, {'type': 'Argument', 'name': 'prefix', 'range': [93, 102], 'children': [{'type': 'SliceExpression', 'name': 'raw_key[:self.PREFIX_LENGTH]', 'range': [95, 101], 'children': []}]}, {'type': 'Argument', 'name': 'postfix', 'range': [104, 114], 'children': [{'type': 'SliceExpression', 'name': 'raw_key[-self.POSTFIX_LENGTH:]', 'range': [106, 113], 'children': []}]}, {'type': 'Argument', 'name': 'hash', 'range': [116, 132], 'children': [{'type': 'CallExpression', 'name': 'hashlib.sha256(raw_key.encode()).hexdigest()', 'range': [118, 131], 'children': []}]}]}]}]}]}, {'type': 'FunctionDeclaration', 'name': 'verify_api_key', 'range': [137, 192], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [140, 140], 'children': []}, {'type': 'Parameter', 'name': 'provided_key', 'range': [142, 142], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [144, 144], 'children': []}]}, {'type': 'Parameter', 'name': 'stored_hash', 'range': [146, 146], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [148, 148], 'children': []}]}, {'type': 'ReturnTypeAnnotation', 'name': 'bool', 'range': [152, 152], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [154, 192], 'children': [{'type': 'IfStatement', 'name': 'if', 'range': [159, 173], 'children': [{'type': 'UnaryExpression', 'name': 'not', 'range': [160, 160], 'children': [{'type': 'CallExpression', 'name': 'provided_key.startswith(self.PREFIX)', 'range': [161, 168], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [170, 173], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [171, 172], 'children': [{'type': 'BooleanLiteral', 'name': 'False', 'range': [172, 172], 'children': []}]}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [174, 192], 'children': [{'type': 'BinaryExpression', 'name': '==', 'range': [189, 190], 'children': [{'type': 'CallExpression', 'name': 'hashlib.sha256(provided_key.encode()).hexdigest()', 'range': [175, 188], 'children': []}, {'type': 'Identifier', 'name': 'stored_hash', 'range': [191, 191], 'children': []}]}]}]}]}]}
2025-01-08 09:28:03,746 - INFO - Starting Step 4: AST normalization
2025-01-08 09:29:04,724 - INFO - Step 4 result: {'type': 'Program', 'name': '', 'range': [42, 193], 'children': [{'type': 'ClassDecl', 'name': 'APIKeyManager', 'range': [42, 63], 'children': [{'type': 'VariableDecl', 'name': 'PREFIX', 'range': [46, 50], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [48, 48], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [49, 50], 'children': [{'type': 'Literal', 'name': '"agpt_"', 'range': [50, 50], 'children': []}]}]}, {'type': 'VariableDecl', 'name': 'PREFIX_LENGTH', 'range': [52, 56], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [54, 54], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [55, 56], 'children': [{'type': 'Literal', 'name': '8', 'range': [56, 56], 'children': []}]}]}, {'type': 'VariableDecl', 'name': 'POSTFIX_LENGTH', 'range': [58, 62], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [60, 60], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [61, 62], 'children': [{'type': 'Literal', 'name': '8', 'range': [62, 62], 'children': []}]}]}]}, {'type': 'FunctionDecl', 'name': 'generate_api_key', 'range': [65, 135], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [68, 68], 'children': []}, {'type': 'ReturnTypeAnnotation', 'name': 'APIKeyContainer', 'range': [72, 72], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [74, 135], 'children': [{'type': 'VariableDecl', 'name': 'raw_key', 'range': [79, 83], 'children': [{'type': 'Assignment', 'name': '=', 'range': [80, 83], 'children': [{'type': 'TemplateLiteral', 'name': 'f"{self.PREFIX}{secrets.token_urlsafe(32)}"', 'range': [81, 83], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [84, 135], 'children': [{'type': 'NewExpression', 'name': 'APIKeyContainer', 'range': [85, 135], 'children': [{'type': 'Argument', 'name': 'raw', 'range': [88, 90], 'children': [{'type': 'Identifier', 'name': 'raw_key', 'range': [90, 90], 'children': []}]}, {'type': 'Argument', 'name': 'prefix', 'range': [93, 102], 'children': [{'type': 'SliceExpression', 'name': 'raw_key[:self.PREFIX_LENGTH]', 'range': [95, 101], 'children': []}]}, {'type': 'Argument', 'name': 'postfix', 'range': [104, 114], 'children': [{'type': 'SliceExpression', 'name': 'raw_key[-self.POSTFIX_LENGTH:]', 'range': [106, 113], 'children': []}]}, {'type': 'Argument', 'name': 'hash', 'range': [116, 132], 'children': [{'type': 'CallExpression', 'name': 'hashlib.sha256(raw_key.encode()).hexdigest()', 'range': [118, 131], 'children': []}]}]}]}]}]}, {'type': 'FunctionDecl', 'name': 'verify_api_key', 'range': [137, 192], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [140, 140], 'children': []}, {'type': 'Parameter', 'name': 'provided_key', 'range': [142, 142], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [144, 144], 'children': []}]}, {'type': 'Parameter', 'name': 'stored_hash', 'range': [146, 146], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [148, 148], 'children': []}]}, {'type': 'ReturnTypeAnnotation', 'name': 'bool', 'range': [152, 152], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [154, 192], 'children': [{'type': 'IfStatement', 'name': 'if', 'range': [159, 173], 'children': [{'type': 'UnaryExpression', 'name': 'not', 'range': [160, 160], 'children': [{'type': 'CallExpression', 'name': 'provided_key.startswith(self.PREFIX)', 'range': [161, 168], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [170, 173], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [171, 172], 'children': [{'type': 'Literal', 'name': 'False', 'range': [172, 172], 'children': []}]}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [174, 192], 'children': [{'type': 'BinaryExpression', 'name': '==', 'range': [189, 190], 'children': [{'type': 'CallExpression', 'name': 'hashlib.sha256(provided_key.encode()).hexdigest()', 'range': [175, 188], 'children': []}, {'type': 'Identifier', 'name': 'stored_hash', 'range': [191, 191], 'children': []}]}]}]}]}]}
2025-01-08 09:29:04,724 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:30:05,963 - INFO - Step 5 result: {'type': 'Program', 'name': '', 'range': [42, 193], 'children': [{'type': 'ClassDecl', 'name': 'APIKeyManager', 'range': [42, 63], 'children': [{'type': 'VariableDecl', 'name': 'PREFIX', 'range': [46, 50], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [48, 48], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [49, 50], 'children': [{'type': 'Literal', 'name': '"agpt_"', 'range': [50, 50], 'children': []}]}]}, {'type': 'VariableDecl', 'name': 'PREFIX_LENGTH', 'range': [52, 56], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [54, 54], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [55, 56], 'children': [{'type': 'Literal', 'name': '8', 'range': [56, 56], 'children': []}]}]}, {'type': 'VariableDecl', 'name': 'POSTFIX_LENGTH', 'range': [58, 62], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [60, 60], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [61, 62], 'children': [{'type': 'Literal', 'name': '8', 'range': [62, 62], 'children': []}]}]}]}, {'type': 'FunctionDecl', 'name': 'generate_api_key', 'range': [65, 135], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [68, 68], 'children': []}, {'type': 'ReturnTypeAnnotation', 'name': 'APIKeyContainer', 'range': [72, 72], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [74, 135], 'children': [{'type': 'VariableDecl', 'name': 'raw_key', 'range': [79, 83], 'children': [{'type': 'Assignment', 'name': '=', 'range': [80, 83], 'children': [{'type': 'TemplateLiteral', 'name': 'f"{self.PREFIX}{secrets.token_urlsafe(32)}"', 'range': [81, 83], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [84, 135], 'children': [{'type': 'NewExpression', 'name': 'APIKeyContainer', 'range': [85, 135], 'children': [{'type': 'Argument', 'name': 'raw', 'range': [88, 90], 'children': [{'type': 'Identifier', 'name': 'raw_key', 'range': [90, 90], 'children': []}]}, {'type': 'Argument', 'name': 'prefix', 'range': [93, 102], 'children': [{'type': 'SliceExpression', 'name': 'raw_key[:self.PREFIX_LENGTH]', 'range': [95, 101], 'children': []}]}, {'type': 'Argument', 'name': 'postfix', 'range': [104, 114], 'children': [{'type': 'SliceExpression', 'name': 'raw_key[-self.POSTFIX_LENGTH:]', 'range': [106, 113], 'children': []}]}, {'type': 'Argument', 'name': 'hash', 'range': [116, 132], 'children': [{'type': 'CallExpression', 'name': 'hashlib.sha256(raw_key.encode()).hexdigest()', 'range': [118, 131], 'children': []}]}]}]}]}]}, {'type': 'FunctionDecl', 'name': 'verify_api_key', 'range': [137, 192], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [140, 140], 'children': []}, {'type': 'Parameter', 'name': 'provided_key', 'range': [142, 142], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [144, 144], 'children': []}]}, {'type': 'Parameter', 'name': 'stored_hash', 'range': [146, 146], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [148, 148], 'children': []}]}, {'type': 'ReturnTypeAnnotation', 'name': 'bool', 'range': [152, 152], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [154, 192], 'children': [{'type': 'IfStatement', 'name': 'if', 'range': [159, 173], 'children': [{'type': 'UnaryExpression', 'name': 'not', 'range': [160, 160], 'children': [{'type': 'CallExpression', 'name': 'provided_key.startswith(self.PREFIX)', 'range': [161, 168], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [170, 173], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [171, 172], 'children': [{'type': 'Literal', 'name': 'False', 'range': [172, 172], 'children': []}]}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [174, 192], 'children': [{'type': 'BinaryExpression', 'name': '==', 'range': [189, 190], 'children': [{'type': 'CallExpression', 'name': 'hashlib.sha256(provided_key.encode()).hexdigest()', 'range': [175, 188], 'children': []}, {'type': 'Identifier', 'name': 'stored_hash', 'range': [191, 191], 'children': []}]}]}]}]}]}
2025-01-08 09:30:05,963 - INFO - Completed main AST analysis flow
2025-01-08 09:30:05,963 - INFO - Successfully processed chunk
2025-01-08 09:30:05,975 - INFO - Starting code generation from AST
2025-01-08 09:30:27,449 - INFO - Successfully generated code from AST
2025-01-08 09:30:27,449 - INFO - Starting static code similarity comparison
2025-01-08 09:30:27,452 - INFO - Static similarity result: {'final_score': 94.03, 'length_similarity': 93.79, 'token_similarity': 92.45, 'structure_similarity': 88.89, 'function_similarity': 100, 'complexity_similarity': 100.0, 'variable_similarity': 100}
