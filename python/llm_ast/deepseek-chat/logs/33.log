2025-01-08 09:18:34,107 - INFO - Processing sample 33
2025-01-08 09:18:34,107 - INFO - Starting Step 0: Splitting code into top-level declarations
2025-01-08 09:18:41,021 - INFO - Successfully split code into 2 top-level declarations
2025-01-08 09:18:41,025 - INFO - Processing chunk #0 (size=138 chars, start_index=0)
2025-01-08 09:18:41,028 - INFO - Processing chunk with 138 chars starting at index 0
2025-01-08 09:18:41,028 - INFO - Starting main AST analysis flow
2025-01-08 09:18:41,028 - INFO - Tokenized code into 30 tokens
2025-01-08 09:18:41,029 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:18:41,030 - INFO - Processing chunk #1 (size=1222 chars, start_index=30)
2025-01-08 09:18:41,030 - INFO - Processing chunk with 1222 chars starting at index 30
2025-01-08 09:18:41,030 - INFO - Starting main AST analysis flow
2025-01-08 09:18:41,031 - INFO - Tokenized code into 177 tokens
2025-01-08 09:18:41,031 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:18:52,950 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [30, 206], 'children': [{'type': 'ClassDeclaration', 'name': 'TextDecoderBlock', 'range': [30, 36], 'children': []}, {'type': 'ClassDeclaration', 'name': 'Input', 'range': [37, 43], 'children': []}, {'type': 'VariableDeclaration', 'name': 'text', 'range': [44, 62], 'children': []}, {'type': 'ClassDeclaration', 'name': 'Output', 'range': [64, 70], 'children': []}, {'type': 'VariableDeclaration', 'name': 'decoded_text', 'range': [71, 83], 'children': []}, {'type': 'FunctionDeclaration', 'name': '__init__', 'range': [85, 168], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'run', 'range': [170, 206], 'children': []}]}
2025-01-08 09:18:52,951 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:18:55,710 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [0, 29], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 2], 'children': [{'type': 'ImportSpecifier', 'name': 'codecs', 'range': [1, 1], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [4, 18], 'children': [{'type': 'ImportSpecifier', 'name': 'Block', 'range': [11, 11], 'children': []}, {'type': 'ImportSpecifier', 'name': 'BlockCategory', 'range': [13, 13], 'children': []}, {'type': 'ImportSpecifier', 'name': 'BlockOutput', 'range': [15, 15], 'children': []}, {'type': 'ImportSpecifier', 'name': 'BlockSchema', 'range': [17, 17], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [19, 27], 'children': [{'type': 'ImportSpecifier', 'name': 'SchemaField', 'range': [26, 26], 'children': []}]}]}
2025-01-08 09:18:55,710 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:19:13,059 - INFO - Step 2 result: {'nodes': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 2], 'children': [{'type': 'ImportSpecifier', 'name': 'codecs', 'range': [1, 1], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [4, 18], 'children': [{'type': 'ImportSpecifier', 'name': 'Block', 'range': [11, 11], 'children': []}, {'type': 'ImportSpecifier', 'name': 'BlockCategory', 'range': [13, 13], 'children': []}, {'type': 'ImportSpecifier', 'name': 'BlockOutput', 'range': [15, 15], 'children': []}, {'type': 'ImportSpecifier', 'name': 'BlockSchema', 'range': [17, 17], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [19, 27], 'children': [{'type': 'ImportSpecifier', 'name': 'SchemaField', 'range': [26, 26], 'children': []}]}]}
2025-01-08 09:19:13,060 - INFO - Starting Step 3: AST simplification
2025-01-08 09:19:29,776 - INFO - Step 3 result: {'nodes': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 2], 'children': [{'type': 'ImportSpecifier', 'name': 'codecs', 'range': [1, 1], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [4, 18], 'children': [{'type': 'ImportSpecifier', 'name': 'Block', 'range': [11, 11], 'children': []}, {'type': 'ImportSpecifier', 'name': 'BlockCategory', 'range': [13, 13], 'children': []}, {'type': 'ImportSpecifier', 'name': 'BlockOutput', 'range': [15, 15], 'children': []}, {'type': 'ImportSpecifier', 'name': 'BlockSchema', 'range': [17, 17], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [19, 27], 'children': [{'type': 'ImportSpecifier', 'name': 'SchemaField', 'range': [26, 26], 'children': []}]}]}
2025-01-08 09:19:29,776 - INFO - Starting Step 4: AST normalization
2025-01-08 09:19:40,374 - INFO - Step 2 result: {'type': 'Program', 'name': '', 'range': [30, 206], 'children': [{'type': 'ClassDeclaration', 'name': 'TextDecoderBlock', 'range': [30, 36], 'children': [{'type': 'Inheritance', 'name': 'Block', 'range': [32, 34], 'children': []}]}, {'type': 'ClassDeclaration', 'name': 'Input', 'range': [37, 43], 'children': [{'type': 'Inheritance', 'name': 'BlockSchema', 'range': [39, 41], 'children': []}, {'type': 'VariableDeclaration', 'name': 'text', 'range': [44, 62], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [46, 48], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [47, 61], 'children': [{'type': 'FunctionCall', 'name': 'SchemaField', 'range': [48, 61], 'children': [{'type': 'Argument', 'name': 'description', 'range': [51, 53], 'children': []}, {'type': 'Argument', 'name': 'placeholder', 'range': [56, 58], 'children': []}]}]}]}]}, {'type': 'ClassDeclaration', 'name': 'Output', 'range': [64, 70], 'children': [{'type': 'Inheritance', 'name': 'BlockSchema', 'range': [66, 68], 'children': []}, {'type': 'VariableDeclaration', 'name': 'decoded_text', 'range': [71, 83], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [73, 75], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [74, 82], 'children': [{'type': 'FunctionCall', 'name': 'SchemaField', 'range': [75, 82], 'children': [{'type': 'Argument', 'name': 'description', 'range': [78, 80], 'children': []}]}]}]}]}, {'type': 'FunctionDeclaration', 'name': '__init__', 'range': [85, 168], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [88, 89], 'children': []}, {'type': 'FunctionCall', 'name': 'super', 'range': [92, 167], 'children': [{'type': 'Argument', 'name': 'id', 'range': [99, 101], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [104, 106], 'children': []}, {'type': 'Argument', 'name': 'categories', 'range': [109, 115], 'children': []}, {'type': 'Argument', 'name': 'input_schema', 'range': [118, 123], 'children': []}, {'type': 'Argument', 'name': 'output_schema', 'range': [125, 129], 'children': []}, {'type': 'Argument', 'name': 'test_input', 'range': [132, 143], 'children': []}, {'type': 'Argument', 'name': 'test_output', 'range': [146, 164], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'run', 'range': [170, 206], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [173, 174], 'children': []}, {'type': 'Parameter', 'name': 'input_data', 'range': [175, 177], 'children': []}, {'type': 'Parameter', 'name': 'kwargs', 'range': [181, 182], 'children': []}, {'type': 'ReturnType', 'name': 'BlockOutput', 'range': [185, 186], 'children': []}, {'type': 'FunctionCall', 'name': 'codecs.decode', 'range': [190, 199], 'children': [{'type': 'Argument', 'name': 'input_data.text', 'range': [194, 196], 'children': []}, {'type': 'Argument', 'name': 'unicode_escape', 'range': [198, 199], 'children': []}]}, {'type': 'Yield', 'name': 'yield', 'range': [201, 205], 'children': [{'type': 'Argument', 'name': 'decoded_text', 'range': [202, 204], 'children': []}]}]}]}
2025-01-08 09:19:40,374 - INFO - Starting Step 3: AST simplification
2025-01-08 09:19:48,239 - INFO - Step 4 result: {'nodes': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 2], 'children': [{'type': 'ImportSpecifier', 'name': 'codecs', 'range': [1, 1], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [4, 18], 'children': [{'type': 'ImportSpecifier', 'name': 'Block', 'range': [11, 11], 'children': []}, {'type': 'ImportSpecifier', 'name': 'BlockCategory', 'range': [13, 13], 'children': []}, {'type': 'ImportSpecifier', 'name': 'BlockOutput', 'range': [15, 15], 'children': []}, {'type': 'ImportSpecifier', 'name': 'BlockSchema', 'range': [17, 17], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [19, 27], 'children': [{'type': 'ImportSpecifier', 'name': 'SchemaField', 'range': [26, 26], 'children': []}]}]}
2025-01-08 09:19:48,239 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:20:05,854 - INFO - Step 5 result: {'nodes': [{'type': 'Program', 'name': 'MainOrSomething', 'range': [0, 27], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 2], 'children': [{'type': 'ImportSpecifier', 'name': 'codecs', 'range': [1, 1], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [4, 18], 'children': [{'type': 'ImportSpecifier', 'name': 'Block', 'range': [11, 11], 'children': []}, {'type': 'ImportSpecifier', 'name': 'BlockCategory', 'range': [13, 13], 'children': []}, {'type': 'ImportSpecifier', 'name': 'BlockOutput', 'range': [15, 15], 'children': []}, {'type': 'ImportSpecifier', 'name': 'BlockSchema', 'range': [17, 17], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [19, 27], 'children': [{'type': 'ImportSpecifier', 'name': 'SchemaField', 'range': [26, 26], 'children': []}]}]}]}
2025-01-08 09:20:05,854 - INFO - Completed main AST analysis flow
2025-01-08 09:20:05,855 - INFO - Successfully processed chunk
2025-01-08 09:20:26,416 - INFO - Step 3 result: {'type': 'Program', 'name': '', 'range': [30, 206], 'children': [{'type': 'ClassDeclaration', 'name': 'TextDecoderBlock', 'range': [30, 36], 'children': [{'type': 'Inheritance', 'name': 'Block', 'range': [32, 34], 'children': []}]}, {'type': 'ClassDeclaration', 'name': 'Input', 'range': [37, 43], 'children': [{'type': 'Inheritance', 'name': 'BlockSchema', 'range': [39, 41], 'children': []}, {'type': 'VariableDeclaration', 'name': 'text', 'range': [44, 62], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [46, 48], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [47, 61], 'children': [{'type': 'FunctionCall', 'name': 'SchemaField', 'range': [48, 61], 'children': [{'type': 'Argument', 'name': 'description', 'range': [51, 53], 'children': []}, {'type': 'Argument', 'name': 'placeholder', 'range': [56, 58], 'children': []}]}]}]}]}, {'type': 'ClassDeclaration', 'name': 'Output', 'range': [64, 70], 'children': [{'type': 'Inheritance', 'name': 'BlockSchema', 'range': [66, 68], 'children': []}, {'type': 'VariableDeclaration', 'name': 'decoded_text', 'range': [71, 83], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [73, 75], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [74, 82], 'children': [{'type': 'FunctionCall', 'name': 'SchemaField', 'range': [75, 82], 'children': [{'type': 'Argument', 'name': 'description', 'range': [78, 80], 'children': []}]}]}]}]}, {'type': 'FunctionDeclaration', 'name': '__init__', 'range': [85, 168], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [88, 89], 'children': []}, {'type': 'FunctionCall', 'name': 'super', 'range': [92, 167], 'children': [{'type': 'Argument', 'name': 'id', 'range': [99, 101], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [104, 106], 'children': []}, {'type': 'Argument', 'name': 'categories', 'range': [109, 115], 'children': []}, {'type': 'Argument', 'name': 'input_schema', 'range': [118, 123], 'children': []}, {'type': 'Argument', 'name': 'output_schema', 'range': [125, 129], 'children': []}, {'type': 'Argument', 'name': 'test_input', 'range': [132, 143], 'children': []}, {'type': 'Argument', 'name': 'test_output', 'range': [146, 164], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'run', 'range': [170, 206], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [173, 174], 'children': []}, {'type': 'Parameter', 'name': 'input_data', 'range': [175, 177], 'children': []}, {'type': 'Parameter', 'name': 'kwargs', 'range': [181, 182], 'children': []}, {'type': 'ReturnType', 'name': 'BlockOutput', 'range': [185, 186], 'children': []}, {'type': 'FunctionCall', 'name': 'codecs.decode', 'range': [190, 199], 'children': [{'type': 'Argument', 'name': 'input_data.text', 'range': [194, 196], 'children': []}, {'type': 'Argument', 'name': 'unicode_escape', 'range': [198, 199], 'children': []}]}, {'type': 'Yield', 'name': 'yield', 'range': [201, 205], 'children': [{'type': 'Argument', 'name': 'decoded_text', 'range': [202, 204], 'children': []}]}]}]}
2025-01-08 09:20:26,416 - INFO - Starting Step 4: AST normalization
2025-01-08 09:21:14,680 - INFO - Step 4 result: {'type': 'Program', 'name': '', 'range': [30, 206], 'children': [{'type': 'ClassDecl', 'name': 'TextDecoderBlock', 'range': [30, 36], 'children': [{'type': 'Inheritance', 'name': 'Block', 'range': [32, 34], 'children': []}]}, {'type': 'ClassDecl', 'name': 'Input', 'range': [37, 43], 'children': [{'type': 'Inheritance', 'name': 'BlockSchema', 'range': [39, 41], 'children': []}, {'type': 'VariableDecl', 'name': 'text', 'range': [44, 62], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [46, 48], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [47, 61], 'children': [{'type': 'CallExpression', 'name': 'SchemaField', 'range': [48, 61], 'children': [{'type': 'Argument', 'name': 'description', 'range': [51, 53], 'children': []}, {'type': 'Argument', 'name': 'placeholder', 'range': [56, 58], 'children': []}]}]}]}]}, {'type': 'ClassDecl', 'name': 'Output', 'range': [64, 70], 'children': [{'type': 'Inheritance', 'name': 'BlockSchema', 'range': [66, 68], 'children': []}, {'type': 'VariableDecl', 'name': 'decoded_text', 'range': [71, 83], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [73, 75], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [74, 82], 'children': [{'type': 'CallExpression', 'name': 'SchemaField', 'range': [75, 82], 'children': [{'type': 'Argument', 'name': 'description', 'range': [78, 80], 'children': []}]}]}]}]}, {'type': 'FunctionDecl', 'name': '__init__', 'range': [85, 168], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [88, 89], 'children': []}, {'type': 'CallExpression', 'name': 'super', 'range': [92, 167], 'children': [{'type': 'Argument', 'name': 'id', 'range': [99, 101], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [104, 106], 'children': []}, {'type': 'Argument', 'name': 'categories', 'range': [109, 115], 'children': []}, {'type': 'Argument', 'name': 'input_schema', 'range': [118, 123], 'children': []}, {'type': 'Argument', 'name': 'output_schema', 'range': [125, 129], 'children': []}, {'type': 'Argument', 'name': 'test_input', 'range': [132, 143], 'children': []}, {'type': 'Argument', 'name': 'test_output', 'range': [146, 164], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'run', 'range': [170, 206], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [173, 174], 'children': []}, {'type': 'Parameter', 'name': 'input_data', 'range': [175, 177], 'children': []}, {'type': 'Parameter', 'name': 'kwargs', 'range': [181, 182], 'children': []}, {'type': 'ReturnType', 'name': 'BlockOutput', 'range': [185, 186], 'children': []}, {'type': 'CallExpression', 'name': 'codecs.decode', 'range': [190, 199], 'children': [{'type': 'Argument', 'name': 'input_data.text', 'range': [194, 196], 'children': []}, {'type': 'Argument', 'name': 'unicode_escape', 'range': [198, 199], 'children': []}]}, {'type': 'Yield', 'name': 'yield', 'range': [201, 205], 'children': [{'type': 'Argument', 'name': 'decoded_text', 'range': [202, 204], 'children': []}]}]}]}
2025-01-08 09:21:14,680 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:22:00,726 - INFO - Step 5 result: {'type': 'Program', 'name': 'MainProgram', 'range': [30, 206], 'children': [{'type': 'ClassDecl', 'name': 'TextDecoderBlock', 'range': [30, 36], 'children': [{'type': 'Inheritance', 'name': 'Block', 'range': [32, 34], 'children': []}]}, {'type': 'ClassDecl', 'name': 'Input', 'range': [37, 43], 'children': [{'type': 'Inheritance', 'name': 'BlockSchema', 'range': [39, 41], 'children': []}, {'type': 'VariableDecl', 'name': 'text', 'range': [44, 62], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [46, 48], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [47, 61], 'children': [{'type': 'CallExpression', 'name': 'SchemaField', 'range': [48, 61], 'children': [{'type': 'Argument', 'name': 'description', 'range': [51, 53], 'children': []}, {'type': 'Argument', 'name': 'placeholder', 'range': [56, 58], 'children': []}]}]}]}]}, {'type': 'ClassDecl', 'name': 'Output', 'range': [64, 70], 'children': [{'type': 'Inheritance', 'name': 'BlockSchema', 'range': [66, 68], 'children': []}, {'type': 'VariableDecl', 'name': 'decoded_text', 'range': [71, 83], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [73, 75], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [74, 82], 'children': [{'type': 'CallExpression', 'name': 'SchemaField', 'range': [75, 82], 'children': [{'type': 'Argument', 'name': 'description', 'range': [78, 80], 'children': []}]}]}]}]}, {'type': 'FunctionDecl', 'name': '__init__', 'range': [85, 168], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [88, 89], 'children': []}, {'type': 'CallExpression', 'name': 'super', 'range': [92, 167], 'children': [{'type': 'Argument', 'name': 'id', 'range': [99, 101], 'children': []}, {'type': 'Argument', 'name': 'description', 'range': [104, 106], 'children': []}, {'type': 'Argument', 'name': 'categories', 'range': [109, 115], 'children': []}, {'type': 'Argument', 'name': 'input_schema', 'range': [118, 123], 'children': []}, {'type': 'Argument', 'name': 'output_schema', 'range': [125, 129], 'children': []}, {'type': 'Argument', 'name': 'test_input', 'range': [132, 143], 'children': []}, {'type': 'Argument', 'name': 'test_output', 'range': [146, 164], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'run', 'range': [170, 206], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [173, 174], 'children': []}, {'type': 'Parameter', 'name': 'input_data', 'range': [175, 177], 'children': []}, {'type': 'Parameter', 'name': 'kwargs', 'range': [181, 182], 'children': []}, {'type': 'ReturnType', 'name': 'BlockOutput', 'range': [185, 186], 'children': []}, {'type': 'CallExpression', 'name': 'codecs.decode', 'range': [190, 199], 'children': [{'type': 'Argument', 'name': 'input_data.text', 'range': [194, 196], 'children': []}, {'type': 'Argument', 'name': 'unicode_escape', 'range': [198, 199], 'children': []}]}, {'type': 'Yield', 'name': 'yield', 'range': [201, 205], 'children': [{'type': 'Argument', 'name': 'decoded_text', 'range': [202, 204], 'children': []}]}]}]}
2025-01-08 09:22:00,726 - INFO - Completed main AST analysis flow
2025-01-08 09:22:00,727 - INFO - Successfully processed chunk
2025-01-08 09:22:00,735 - INFO - Starting code generation from AST
2025-01-08 09:22:12,283 - INFO - Successfully generated code from AST
2025-01-08 09:22:12,283 - INFO - Starting static code similarity comparison
2025-01-08 09:22:12,286 - INFO - Static similarity result: {'final_score': 92.04, 'length_similarity': 90.68, 'token_similarity': 90.77, 'structure_similarity': 84.85, 'function_similarity': 100, 'complexity_similarity': 100.0, 'variable_similarity': 100}
