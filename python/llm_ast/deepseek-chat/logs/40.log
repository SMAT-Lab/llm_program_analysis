2025-01-08 09:21:26,781 - INFO - Processing sample 40
2025-01-08 09:21:26,781 - INFO - Starting Step 0: Splitting code into top-level declarations
2025-01-08 09:21:35,474 - INFO - Successfully split code into 3 top-level declarations
2025-01-08 09:21:35,475 - INFO - Processing chunk #0 (size=282 chars, start_index=0)
2025-01-08 09:21:35,476 - INFO - Processing chunk #1 (size=1131 chars, start_index=6)
2025-01-08 09:21:35,477 - INFO - Processing chunk with 1131 chars starting at index 6
2025-01-08 09:21:35,477 - INFO - Starting main AST analysis flow
2025-01-08 09:21:35,476 - INFO - Processing chunk with 282 chars starting at index 0
2025-01-08 09:21:35,478 - INFO - Tokenized code into 140 tokens
2025-01-08 09:21:35,478 - INFO - Starting main AST analysis flow
2025-01-08 09:21:35,478 - INFO - Processing chunk #2 (size=682 chars, start_index=146)
2025-01-08 09:21:35,479 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:21:35,479 - INFO - Tokenized code into 6 tokens
2025-01-08 09:21:35,481 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:21:35,479 - INFO - Processing chunk with 682 chars starting at index 146
2025-01-08 09:21:35,481 - INFO - Starting main AST analysis flow
2025-01-08 09:21:35,482 - INFO - Tokenized code into 59 tokens
2025-01-08 09:21:35,482 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:21:43,455 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [0, 5], 'children': []}
2025-01-08 09:21:43,456 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:21:44,033 - INFO - Step 1 result: {'type': 'Program', 'name': 'word_break', 'range': [146, 204], 'children': []}
2025-01-08 09:21:44,033 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:21:54,961 - INFO - Step 2 result: {'type': 'Program', 'name': '', 'range': [0, 5], 'children': [{'type': 'Comment', 'name': '', 'range': [1, 1], 'children': []}, {'type': 'Whitespace', 'name': '', 'range': [2, 2], 'children': []}, {'type': 'Whitespace', 'name': '', 'range': [3, 3], 'children': []}, {'type': 'Whitespace', 'name': '', 'range': [4, 4], 'children': []}, {'type': 'Whitespace', 'name': '', 'range': [5, 5], 'children': []}]}
2025-01-08 09:21:54,961 - INFO - Starting Step 3: AST simplification
2025-01-08 09:21:57,489 - INFO - Step 1 result: {'type': 'Program', 'name': 'backtrack', 'range': [6, 145], 'children': [{'type': 'FunctionDeclaration', 'name': 'backtrack', 'range': [6, 145], 'children': [{'type': 'Parameter', 'name': 'input_string', 'range': [9, 11], 'children': []}, {'type': 'Parameter', 'name': 'word_dict', 'range': [13, 18], 'children': []}, {'type': 'Parameter', 'name': 'start', 'range': [20, 22], 'children': []}, {'type': 'ReturnType', 'name': 'bool', 'range': [26, 26], 'children': []}, {'type': 'FunctionBody', 'name': '', 'range': [28, 145], 'children': [{'type': 'Comment', 'name': '', 'range': [28, 55], 'children': []}, {'type': 'IfStatement', 'name': '', 'range': [62, 86], 'children': [{'type': 'Condition', 'name': '', 'range': [74, 81], 'children': []}, {'type': 'ReturnStatement', 'name': '', 'range': [84, 85], 'children': []}]}, {'type': 'ForStatement', 'name': '', 'range': [98, 140], 'children': [{'type': 'Range', 'name': '', 'range': [101, 113], 'children': []}, {'type': 'IfStatement', 'name': '', 'range': [116, 139], 'children': [{'type': 'Condition', 'name': '', 'range': [116, 135], 'children': []}, {'type': 'ReturnStatement', 'name': '', 'range': [138, 139], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [142, 143], 'children': []}]}]}]}
2025-01-08 09:21:57,489 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:22:00,715 - INFO - Step 3 result: {'type': 'Program', 'name': '', 'range': [0, 5], 'children': [{'type': 'Comment', 'name': '', 'range': [1, 1], 'children': []}]}
2025-01-08 09:22:00,715 - INFO - Starting Step 4: AST normalization
2025-01-08 09:22:06,420 - INFO - Step 4 result: {'type': 'Program', 'name': '', 'range': [0, 5], 'children': [{'type': 'Comment', 'name': '', 'range': [1, 1], 'children': []}]}
2025-01-08 09:22:06,420 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:22:08,404 - INFO - Step 2 result: {'type': 'Program', 'name': 'word_break', 'range': [146, 204], 'children': [{'type': 'FunctionDeclaration', 'name': 'word_break', 'range': [146, 204], 'children': [{'type': 'FunctionSignature', 'name': 'word_break', 'range': [146, 163], 'children': [{'type': 'Keyword', 'name': 'def', 'range': [146, 149], 'children': []}, {'type': 'FunctionName', 'name': 'word_break', 'range': [147, 158], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [148, 159], 'children': [{'type': 'Parameter', 'name': 'input_string', 'range': [149, 152], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [151, 154], 'children': []}]}, {'type': 'Parameter', 'name': 'word_dict', 'range': [153, 159], 'children': [{'type': 'TypeAnnotation', 'name': 'set[str]', 'range': [155, 159], 'children': []}]}]}, {'type': 'ReturnType', 'name': 'bool', 'range': [162, 163], 'children': []}]}, {'type': 'FunctionBody', 'name': 'body', 'range': [164, 204], 'children': [{'type': 'Docstring', 'name': 'docstring', 'range': [165, 191], 'children': []}, {'type': 'ReturnStatement', 'name': 'return', 'range': [194, 203], 'children': [{'type': 'FunctionCall', 'name': 'backtrack', 'range': [195, 202], 'children': [{'type': 'Argument', 'name': 'input_string', 'range': [197, 198], 'children': []}, {'type': 'Argument', 'name': 'word_dict', 'range': [199, 200], 'children': []}, {'type': 'Argument', 'name': '0', 'range': [201, 202], 'children': []}]}]}]}]}]}
2025-01-08 09:22:08,405 - INFO - Starting Step 3: AST simplification
2025-01-08 09:22:14,961 - INFO - Step 5 result: {'type': 'Program', 'name': '', 'range': [0, 5], 'children': [{'type': 'Comment', 'name': '', 'range': [1, 1], 'children': []}]}
2025-01-08 09:22:14,961 - INFO - Completed main AST analysis flow
2025-01-08 09:22:14,961 - INFO - Successfully processed chunk
2025-01-08 09:22:33,910 - INFO - Step 3 result: {'type': 'Program', 'name': 'word_break', 'range': [146, 204], 'children': [{'type': 'FunctionDeclaration', 'name': 'word_break', 'range': [146, 204], 'children': [{'type': 'FunctionSignature', 'name': 'word_break', 'range': [146, 163], 'children': [{'type': 'Keyword', 'name': 'def', 'range': [146, 149], 'children': []}, {'type': 'FunctionName', 'name': 'word_break', 'range': [147, 158], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [148, 159], 'children': [{'type': 'Parameter', 'name': 'input_string', 'range': [149, 152], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [151, 154], 'children': []}]}, {'type': 'Parameter', 'name': 'word_dict', 'range': [153, 159], 'children': [{'type': 'TypeAnnotation', 'name': 'set[str]', 'range': [155, 159], 'children': []}]}]}, {'type': 'ReturnType', 'name': 'bool', 'range': [162, 163], 'children': []}]}, {'type': 'FunctionBody', 'name': 'body', 'range': [164, 204], 'children': [{'type': 'Docstring', 'name': 'docstring', 'range': [165, 191], 'children': []}, {'type': 'ReturnStatement', 'name': 'return', 'range': [194, 203], 'children': [{'type': 'FunctionCall', 'name': 'backtrack', 'range': [195, 202], 'children': [{'type': 'Argument', 'name': 'input_string', 'range': [197, 198], 'children': []}, {'type': 'Argument', 'name': 'word_dict', 'range': [199, 200], 'children': []}, {'type': 'Argument', 'name': '0', 'range': [201, 202], 'children': []}]}]}]}]}]}
2025-01-08 09:22:33,910 - INFO - Starting Step 4: AST normalization
2025-01-08 09:22:49,954 - INFO - Step 2 result: {'type': 'Program', 'name': 'backtrack', 'range': [6, 145], 'children': [{'type': 'FunctionDeclaration', 'name': 'backtrack', 'range': [6, 145], 'children': [{'type': 'Parameter', 'name': 'input_string', 'range': [9, 11], 'children': []}, {'type': 'Parameter', 'name': 'word_dict', 'range': [13, 18], 'children': []}, {'type': 'Parameter', 'name': 'start', 'range': [20, 22], 'children': []}, {'type': 'ReturnType', 'name': 'bool', 'range': [26, 26], 'children': []}, {'type': 'FunctionBody', 'name': '', 'range': [28, 145], 'children': [{'type': 'Comment', 'name': '', 'range': [28, 55], 'children': []}, {'type': 'IfStatement', 'name': '', 'range': [62, 86], 'children': [{'type': 'Condition', 'name': '', 'range': [74, 81], 'children': [{'type': 'BinaryExpression', 'name': '==', 'range': [76, 77], 'children': [{'type': 'Identifier', 'name': 'start', 'range': [75, 75], 'children': []}, {'type': 'CallExpression', 'name': 'len', 'range': [78, 81], 'children': [{'type': 'Identifier', 'name': 'input_string', 'range': [80, 80], 'children': []}]}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [84, 85], 'children': [{'type': 'BooleanLiteral', 'name': 'True', 'range': [85, 85], 'children': []}]}]}, {'type': 'ForStatement', 'name': '', 'range': [98, 140], 'children': [{'type': 'Range', 'name': '', 'range': [101, 113], 'children': [{'type': 'CallExpression', 'name': 'range', 'range': [101, 113], 'children': [{'type': 'BinaryExpression', 'name': '+', 'range': [104, 105], 'children': [{'type': 'Identifier', 'name': 'start', 'range': [103, 103], 'children': []}, {'type': 'NumericLiteral', 'name': '1', 'range': [105, 105], 'children': []}]}, {'type': 'BinaryExpression', 'name': '+', 'range': [111, 112], 'children': [{'type': 'CallExpression', 'name': 'len', 'range': [107, 110], 'children': [{'type': 'Identifier', 'name': 'input_string', 'range': [109, 109], 'children': []}]}, {'type': 'NumericLiteral', 'name': '1', 'range': [112, 112], 'children': []}]}]}]}, {'type': 'IfStatement', 'name': '', 'range': [116, 139], 'children': [{'type': 'Condition', 'name': '', 'range': [116, 135], 'children': [{'type': 'LogicalExpression', 'name': 'and', 'range': [125, 125], 'children': [{'type': 'BinaryExpression', 'name': 'in', 'range': [123, 124], 'children': [{'type': 'SubscriptExpression', 'name': '', 'range': [118, 122], 'children': [{'type': 'Identifier', 'name': 'input_string', 'range': [117, 117], 'children': []}, {'type': 'Slice', 'name': '', 'range': [119, 121], 'children': [{'type': 'Identifier', 'name': 'start', 'range': [119, 119], 'children': []}, {'type': 'Identifier', 'name': 'end', 'range': [121, 121], 'children': []}]}]}, {'type': 'Identifier', 'name': 'word_dict', 'range': [124, 124], 'children': []}]}, {'type': 'CallExpression', 'name': 'backtrack', 'range': [126, 135], 'children': [{'type': 'Identifier', 'name': 'input_string', 'range': [129, 129], 'children': []}, {'type': 'Identifier', 'name': 'word_dict', 'range': [131, 131], 'children': []}, {'type': 'Identifier', 'name': 'end', 'range': [133, 133], 'children': []}]}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [138, 139], 'children': [{'type': 'BooleanLiteral', 'name': 'True', 'range': [139, 139], 'children': []}]}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [142, 143], 'children': [{'type': 'BooleanLiteral', 'name': 'False', 'range': [143, 143], 'children': []}]}]}]}]}
2025-01-08 09:22:49,954 - INFO - Starting Step 3: AST simplification
2025-01-08 09:22:56,973 - INFO - Step 4 result: {'type': 'Program', 'name': 'word_break', 'range': [146, 204], 'children': [{'type': 'FunctionDecl', 'name': 'word_break', 'range': [146, 204], 'children': [{'type': 'FunctionSignature', 'name': 'word_break', 'range': [146, 163], 'children': [{'type': 'Keyword', 'name': 'def', 'range': [146, 149], 'children': []}, {'type': 'Identifier', 'name': 'word_break', 'range': [147, 158], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [148, 159], 'children': [{'type': 'Parameter', 'name': 'input_string', 'range': [149, 152], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [151, 154], 'children': []}]}, {'type': 'Parameter', 'name': 'word_dict', 'range': [153, 159], 'children': [{'type': 'TypeAnnotation', 'name': 'set[str]', 'range': [155, 159], 'children': []}]}]}, {'type': 'ReturnType', 'name': 'bool', 'range': [162, 163], 'children': []}]}, {'type': 'FunctionBody', 'name': 'body', 'range': [164, 204], 'children': [{'type': 'Docstring', 'name': 'docstring', 'range': [165, 191], 'children': []}, {'type': 'ReturnStatement', 'name': 'return', 'range': [194, 203], 'children': [{'type': 'CallExpression', 'name': 'backtrack', 'range': [195, 202], 'children': [{'type': 'Argument', 'name': 'input_string', 'range': [197, 198], 'children': []}, {'type': 'Argument', 'name': 'word_dict', 'range': [199, 200], 'children': []}, {'type': 'Argument', 'name': '0', 'range': [201, 202], 'children': []}]}]}]}]}]}
2025-01-08 09:22:56,973 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:23:21,792 - INFO - Step 5 result: {'type': 'Program', 'name': 'word_break', 'range': [146, 204], 'children': [{'type': 'FunctionDecl', 'name': 'word_break', 'range': [146, 204], 'children': [{'type': 'FunctionSignature', 'name': 'word_break', 'range': [146, 163], 'children': [{'type': 'Keyword', 'name': 'def', 'range': [146, 149], 'children': []}, {'type': 'Identifier', 'name': 'word_break', 'range': [147, 158], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [148, 159], 'children': [{'type': 'Parameter', 'name': 'input_string', 'range': [149, 152], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [151, 154], 'children': []}]}, {'type': 'Parameter', 'name': 'word_dict', 'range': [153, 159], 'children': [{'type': 'TypeAnnotation', 'name': 'set[str]', 'range': [155, 159], 'children': []}]}]}, {'type': 'ReturnType', 'name': 'bool', 'range': [162, 163], 'children': []}]}, {'type': 'FunctionBody', 'name': 'body', 'range': [164, 204], 'children': [{'type': 'Docstring', 'name': 'docstring', 'range': [165, 191], 'children': []}, {'type': 'ReturnStatement', 'name': 'return', 'range': [194, 203], 'children': [{'type': 'CallExpression', 'name': 'backtrack', 'range': [195, 202], 'children': [{'type': 'Argument', 'name': 'input_string', 'range': [197, 198], 'children': []}, {'type': 'Argument', 'name': 'word_dict', 'range': [199, 200], 'children': []}, {'type': 'Argument', 'name': '0', 'range': [201, 202], 'children': []}]}]}]}]}]}
2025-01-08 09:23:21,792 - INFO - Completed main AST analysis flow
2025-01-08 09:23:21,792 - INFO - Successfully processed chunk
2025-01-08 09:23:42,846 - INFO - Step 3 result: {'type': 'Program', 'name': 'backtrack', 'range': [6, 145], 'children': [{'type': 'FunctionDeclaration', 'name': 'backtrack', 'range': [6, 145], 'children': [{'type': 'Parameter', 'name': 'input_string', 'range': [9, 11], 'children': []}, {'type': 'Parameter', 'name': 'word_dict', 'range': [13, 18], 'children': []}, {'type': 'Parameter', 'name': 'start', 'range': [20, 22], 'children': []}, {'type': 'ReturnType', 'name': 'bool', 'range': [26, 26], 'children': []}, {'type': 'FunctionBody', 'name': '', 'range': [28, 145], 'children': [{'type': 'Comment', 'name': '', 'range': [28, 55], 'children': []}, {'type': 'IfStatement', 'name': '', 'range': [62, 86], 'children': [{'type': 'Condition', 'name': '', 'range': [74, 81], 'children': [{'type': 'BinaryExpression', 'name': '==', 'range': [76, 77], 'children': [{'type': 'Identifier', 'name': 'start', 'range': [75, 75], 'children': []}, {'type': 'CallExpression', 'name': 'len', 'range': [78, 81], 'children': [{'type': 'Identifier', 'name': 'input_string', 'range': [80, 80], 'children': []}]}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [84, 85], 'children': [{'type': 'BooleanLiteral', 'name': 'True', 'range': [85, 85], 'children': []}]}]}, {'type': 'ForStatement', 'name': '', 'range': [98, 140], 'children': [{'type': 'Range', 'name': '', 'range': [101, 113], 'children': [{'type': 'CallExpression', 'name': 'range', 'range': [101, 113], 'children': [{'type': 'BinaryExpression', 'name': '+', 'range': [104, 105], 'children': [{'type': 'Identifier', 'name': 'start', 'range': [103, 103], 'children': []}, {'type': 'NumericLiteral', 'name': '1', 'range': [105, 105], 'children': []}]}, {'type': 'BinaryExpression', 'name': '+', 'range': [111, 112], 'children': [{'type': 'CallExpression', 'name': 'len', 'range': [107, 110], 'children': [{'type': 'Identifier', 'name': 'input_string', 'range': [109, 109], 'children': []}]}, {'type': 'NumericLiteral', 'name': '1', 'range': [112, 112], 'children': []}]}]}]}, {'type': 'IfStatement', 'name': '', 'range': [116, 139], 'children': [{'type': 'Condition', 'name': '', 'range': [116, 135], 'children': [{'type': 'LogicalExpression', 'name': 'and', 'range': [125, 125], 'children': [{'type': 'BinaryExpression', 'name': 'in', 'range': [123, 124], 'children': [{'type': 'SubscriptExpression', 'name': '', 'range': [118, 122], 'children': [{'type': 'Identifier', 'name': 'input_string', 'range': [117, 117], 'children': []}, {'type': 'Slice', 'name': '', 'range': [119, 121], 'children': [{'type': 'Identifier', 'name': 'start', 'range': [119, 119], 'children': []}, {'type': 'Identifier', 'name': 'end', 'range': [121, 121], 'children': []}]}]}, {'type': 'Identifier', 'name': 'word_dict', 'range': [124, 124], 'children': []}]}, {'type': 'CallExpression', 'name': 'backtrack', 'range': [126, 135], 'children': [{'type': 'Identifier', 'name': 'input_string', 'range': [129, 129], 'children': []}, {'type': 'Identifier', 'name': 'word_dict', 'range': [131, 131], 'children': []}, {'type': 'Identifier', 'name': 'end', 'range': [133, 133], 'children': []}]}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [138, 139], 'children': [{'type': 'BooleanLiteral', 'name': 'True', 'range': [139, 139], 'children': []}]}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [142, 143], 'children': [{'type': 'BooleanLiteral', 'name': 'False', 'range': [143, 143], 'children': []}]}]}]}]}
2025-01-08 09:23:42,846 - INFO - Starting Step 4: AST normalization
2025-01-08 09:24:37,496 - INFO - Step 4 result: {'type': 'Program', 'name': 'backtrack', 'range': [6, 145], 'children': [{'type': 'FunctionDecl', 'name': 'backtrack', 'range': [6, 145], 'children': [{'type': 'Parameter', 'name': 'input_string', 'range': [9, 11], 'children': []}, {'type': 'Parameter', 'name': 'word_dict', 'range': [13, 18], 'children': []}, {'type': 'Parameter', 'name': 'start', 'range': [20, 22], 'children': []}, {'type': 'ReturnType', 'name': 'bool', 'range': [26, 26], 'children': []}, {'type': 'FunctionBody', 'name': '', 'range': [28, 145], 'children': [{'type': 'Comment', 'name': '', 'range': [28, 55], 'children': []}, {'type': 'IfStatement', 'name': '', 'range': [62, 86], 'children': [{'type': 'Condition', 'name': '', 'range': [74, 81], 'children': [{'type': 'BinaryExpression', 'name': '==', 'range': [76, 77], 'children': [{'type': 'Identifier', 'name': 'start', 'range': [75, 75], 'children': []}, {'type': 'CallExpression', 'name': 'len', 'range': [78, 81], 'children': [{'type': 'Identifier', 'name': 'input_string', 'range': [80, 80], 'children': []}]}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [84, 85], 'children': [{'type': 'BooleanLiteral', 'name': 'True', 'range': [85, 85], 'children': []}]}]}, {'type': 'ForStatement', 'name': '', 'range': [98, 140], 'children': [{'type': 'Range', 'name': '', 'range': [101, 113], 'children': [{'type': 'CallExpression', 'name': 'range', 'range': [101, 113], 'children': [{'type': 'BinaryExpression', 'name': '+', 'range': [104, 105], 'children': [{'type': 'Identifier', 'name': 'start', 'range': [103, 103], 'children': []}, {'type': 'NumericLiteral', 'name': '1', 'range': [105, 105], 'children': []}]}, {'type': 'BinaryExpression', 'name': '+', 'range': [111, 112], 'children': [{'type': 'CallExpression', 'name': 'len', 'range': [107, 110], 'children': [{'type': 'Identifier', 'name': 'input_string', 'range': [109, 109], 'children': []}]}, {'type': 'NumericLiteral', 'name': '1', 'range': [112, 112], 'children': []}]}]}]}, {'type': 'IfStatement', 'name': '', 'range': [116, 139], 'children': [{'type': 'Condition', 'name': '', 'range': [116, 135], 'children': [{'type': 'LogicalExpression', 'name': 'and', 'range': [125, 125], 'children': [{'type': 'BinaryExpression', 'name': 'in', 'range': [123, 124], 'children': [{'type': 'SubscriptExpression', 'name': '', 'range': [118, 122], 'children': [{'type': 'Identifier', 'name': 'input_string', 'range': [117, 117], 'children': []}, {'type': 'Slice', 'name': '', 'range': [119, 121], 'children': [{'type': 'Identifier', 'name': 'start', 'range': [119, 119], 'children': []}, {'type': 'Identifier', 'name': 'end', 'range': [121, 121], 'children': []}]}]}, {'type': 'Identifier', 'name': 'word_dict', 'range': [124, 124], 'children': []}]}, {'type': 'CallExpression', 'name': 'backtrack', 'range': [126, 135], 'children': [{'type': 'Identifier', 'name': 'input_string', 'range': [129, 129], 'children': []}, {'type': 'Identifier', 'name': 'word_dict', 'range': [131, 131], 'children': []}, {'type': 'Identifier', 'name': 'end', 'range': [133, 133], 'children': []}]}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [138, 139], 'children': [{'type': 'BooleanLiteral', 'name': 'True', 'range': [139, 139], 'children': []}]}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [142, 143], 'children': [{'type': 'BooleanLiteral', 'name': 'False', 'range': [143, 143], 'children': []}]}]}]}]}
2025-01-08 09:24:37,496 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:25:29,834 - INFO - Step 5 result: {'type': 'Program', 'name': 'backtrack', 'range': [6, 145], 'children': [{'type': 'FunctionDecl', 'name': 'backtrack', 'range': [6, 145], 'children': [{'type': 'Parameter', 'name': 'input_string', 'range': [9, 11], 'children': []}, {'type': 'Parameter', 'name': 'word_dict', 'range': [13, 18], 'children': []}, {'type': 'Parameter', 'name': 'start', 'range': [20, 22], 'children': []}, {'type': 'ReturnType', 'name': 'bool', 'range': [26, 26], 'children': []}, {'type': 'FunctionBody', 'name': '', 'range': [28, 145], 'children': [{'type': 'Comment', 'name': '', 'range': [28, 55], 'children': []}, {'type': 'IfStatement', 'name': '', 'range': [62, 86], 'children': [{'type': 'Condition', 'name': '', 'range': [74, 81], 'children': [{'type': 'BinaryExpression', 'name': '==', 'range': [76, 77], 'children': [{'type': 'Identifier', 'name': 'start', 'range': [75, 75], 'children': []}, {'type': 'CallExpression', 'name': 'len', 'range': [78, 81], 'children': [{'type': 'Identifier', 'name': 'input_string', 'range': [80, 80], 'children': []}]}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [84, 85], 'children': [{'type': 'BooleanLiteral', 'name': 'True', 'range': [85, 85], 'children': []}]}]}, {'type': 'ForStatement', 'name': '', 'range': [98, 140], 'children': [{'type': 'Range', 'name': '', 'range': [101, 113], 'children': [{'type': 'CallExpression', 'name': 'range', 'range': [101, 113], 'children': [{'type': 'BinaryExpression', 'name': '+', 'range': [104, 105], 'children': [{'type': 'Identifier', 'name': 'start', 'range': [103, 103], 'children': []}, {'type': 'NumericLiteral', 'name': '1', 'range': [105, 105], 'children': []}]}, {'type': 'BinaryExpression', 'name': '+', 'range': [111, 112], 'children': [{'type': 'CallExpression', 'name': 'len', 'range': [107, 110], 'children': [{'type': 'Identifier', 'name': 'input_string', 'range': [109, 109], 'children': []}]}, {'type': 'NumericLiteral', 'name': '1', 'range': [112, 112], 'children': []}]}]}]}, {'type': 'IfStatement', 'name': '', 'range': [116, 139], 'children': [{'type': 'Condition', 'name': '', 'range': [116, 135], 'children': [{'type': 'LogicalExpression', 'name': 'and', 'range': [125, 125], 'children': [{'type': 'BinaryExpression', 'name': 'in', 'range': [123, 124], 'children': [{'type': 'SubscriptExpression', 'name': '', 'range': [118, 122], 'children': [{'type': 'Identifier', 'name': 'input_string', 'range': [117, 117], 'children': []}, {'type': 'Slice', 'name': '', 'range': [119, 121], 'children': [{'type': 'Identifier', 'name': 'start', 'range': [119, 119], 'children': []}, {'type': 'Identifier', 'name': 'end', 'range': [121, 121], 'children': []}]}]}, {'type': 'Identifier', 'name': 'word_dict', 'range': [124, 124], 'children': []}]}, {'type': 'CallExpression', 'name': 'backtrack', 'range': [126, 135], 'children': [{'type': 'Identifier', 'name': 'input_string', 'range': [129, 129], 'children': []}, {'type': 'Identifier', 'name': 'word_dict', 'range': [131, 131], 'children': []}, {'type': 'Identifier', 'name': 'end', 'range': [133, 133], 'children': []}]}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [138, 139], 'children': [{'type': 'BooleanLiteral', 'name': 'True', 'range': [139, 139], 'children': []}]}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [142, 143], 'children': [{'type': 'BooleanLiteral', 'name': 'False', 'range': [143, 143], 'children': []}]}]}]}]}
2025-01-08 09:25:29,834 - INFO - Completed main AST analysis flow
2025-01-08 09:25:29,835 - INFO - Successfully processed chunk
2025-01-08 09:25:29,850 - INFO - Starting code generation from AST
2025-01-08 09:26:17,122 - INFO - Successfully generated code from AST
2025-01-08 09:26:17,122 - INFO - Starting static code similarity comparison
2025-01-08 09:26:17,127 - INFO - Static similarity result: {'final_score': 61.48, 'length_similarity': 97.27, 'token_similarity': 80.0, 'structure_similarity': 11.54, 'function_similarity': 0.0, 'complexity_similarity': 100.0, 'variable_similarity': 100}
