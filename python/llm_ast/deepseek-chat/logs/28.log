2025-01-08 09:16:35,134 - INFO - Processing sample 28
2025-01-08 09:16:35,134 - INFO - Starting Step 0: Splitting code into top-level declarations
2025-01-08 09:16:43,129 - INFO - Successfully split code into 3 top-level declarations
2025-01-08 09:16:43,131 - INFO - Processing chunk #0 (size=132 chars, start_index=0)
2025-01-08 09:16:43,131 - INFO - Processing chunk with 132 chars starting at index 0
2025-01-08 09:16:43,131 - INFO - Starting main AST analysis flow
2025-01-08 09:16:43,131 - INFO - Tokenized code into 30 tokens
2025-01-08 09:16:43,131 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:16:43,132 - INFO - Processing chunk #1 (size=219 chars, start_index=30)
2025-01-08 09:16:43,132 - INFO - Processing chunk with 219 chars starting at index 30
2025-01-08 09:16:43,132 - INFO - Starting main AST analysis flow
2025-01-08 09:16:43,132 - INFO - Tokenized code into 50 tokens
2025-01-08 09:16:43,132 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:16:43,137 - INFO - Processing chunk #2 (size=475 chars, start_index=80)
2025-01-08 09:16:43,137 - INFO - Processing chunk with 475 chars starting at index 80
2025-01-08 09:16:43,137 - INFO - Starting main AST analysis flow
2025-01-08 09:16:43,137 - INFO - Tokenized code into 97 tokens
2025-01-08 09:16:43,138 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:16:54,321 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [0, 29], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 4], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [5, 11], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [13, 17], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [19, 27], 'children': []}]}
2025-01-08 09:16:54,322 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:16:54,729 - INFO - Step 1 result: {'type': 'Program', 'name': 'BlockCostType', 'range': [30, 79], 'children': [{'type': 'EnumDeclaration', 'name': 'RUN', 'range': [39, 48], 'children': []}, {'type': 'EnumDeclaration', 'name': 'BYTE', 'range': [49, 58], 'children': []}, {'type': 'EnumDeclaration', 'name': 'SECOND', 'range': [59, 68], 'children': []}, {'type': 'EnumDeclaration', 'name': 'DOLLAR', 'range': [69, 78], 'children': []}]}
2025-01-08 09:16:54,729 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:17:01,474 - INFO - Step 1 result: {'type': 'Program', 'name': 'BlockCost', 'range': [80, 176], 'children': [{'type': 'ClassDeclaration', 'name': 'BlockCost', 'range': [80, 98], 'children': [{'type': 'PropertyDeclaration', 'name': 'cost_amount', 'range': [87, 89], 'children': []}, {'type': 'PropertyDeclaration', 'name': 'cost_filter', 'range': [91, 93], 'children': []}, {'type': 'PropertyDeclaration', 'name': 'cost_type', 'range': [95, 97], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': '__init__', 'range': [100, 176], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [104, 104], 'children': []}, {'type': 'Parameter', 'name': 'cost_amount', 'range': [107, 109], 'children': []}, {'type': 'Parameter', 'name': 'cost_type', 'range': [112, 114], 'children': []}, {'type': 'Parameter', 'name': 'cost_filter', 'range': [121, 126], 'children': []}, {'type': 'Parameter', 'name': 'data', 'range': [133, 135], 'children': []}, {'type': 'SuperCall', 'name': '', 'range': [144, 174], 'children': []}]}]}
2025-01-08 09:17:01,474 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:17:15,592 - INFO - Step 2 result: {'nodes': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 4], 'children': [{'type': 'FromImport', 'name': 'enum', 'range': [0, 4], 'children': [{'type': 'Import', 'name': 'Enum', 'range': [2, 4], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [5, 11], 'children': [{'type': 'FromImport', 'name': 'typing', 'range': [5, 11], 'children': [{'type': 'Import', 'name': 'Any', 'range': [7, 8], 'children': []}, {'type': 'Import', 'name': 'Optional', 'range': [9, 10], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [13, 17], 'children': [{'type': 'FromImport', 'name': 'pydantic', 'range': [13, 17], 'children': [{'type': 'Import', 'name': 'BaseModel', 'range': [15, 17], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [19, 27], 'children': [{'type': 'FromImport', 'name': 'backend.data.block', 'range': [19, 27], 'children': [{'type': 'Import', 'name': 'BlockInput', 'range': [25, 27], 'children': []}]}]}]}
2025-01-08 09:17:15,592 - INFO - Starting Step 3: AST simplification
2025-01-08 09:17:20,158 - INFO - Step 2 result: {'type': 'Program', 'name': 'BlockCostType', 'range': [30, 79], 'children': [{'type': 'EnumDeclaration', 'name': 'RUN', 'range': [39, 48], 'children': [{'type': 'Assignment', 'name': '=', 'range': [40, 41], 'children': [{'type': 'Literal', 'name': '"run"', 'range': [41, 41], 'children': []}]}, {'type': 'Comment', 'name': '#', 'range': [42, 47], 'children': []}]}, {'type': 'EnumDeclaration', 'name': 'BYTE', 'range': [49, 58], 'children': [{'type': 'Assignment', 'name': '=', 'range': [50, 51], 'children': [{'type': 'Literal', 'name': '"byte"', 'range': [51, 51], 'children': []}]}, {'type': 'Comment', 'name': '#', 'range': [52, 57], 'children': []}]}, {'type': 'EnumDeclaration', 'name': 'SECOND', 'range': [59, 68], 'children': [{'type': 'Assignment', 'name': '=', 'range': [60, 61], 'children': [{'type': 'Literal', 'name': '"second"', 'range': [61, 61], 'children': []}]}, {'type': 'Comment', 'name': '#', 'range': [62, 67], 'children': []}]}, {'type': 'EnumDeclaration', 'name': 'DOLLAR', 'range': [69, 78], 'children': [{'type': 'Assignment', 'name': '=', 'range': [70, 71], 'children': [{'type': 'Literal', 'name': '"dollar"', 'range': [71, 71], 'children': []}]}, {'type': 'Comment', 'name': '#', 'range': [72, 77], 'children': []}]}]}
2025-01-08 09:17:20,158 - INFO - Starting Step 3: AST simplification
2025-01-08 09:17:34,559 - INFO - Step 3 result: {'nodes': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 4], 'children': [{'type': 'FromImport', 'name': 'enum', 'range': [0, 4], 'children': [{'type': 'Import', 'name': 'Enum', 'range': [2, 4], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [5, 11], 'children': [{'type': 'FromImport', 'name': 'typing', 'range': [5, 11], 'children': [{'type': 'Import', 'name': 'Any', 'range': [7, 8], 'children': []}, {'type': 'Import', 'name': 'Optional', 'range': [9, 10], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [13, 17], 'children': [{'type': 'FromImport', 'name': 'pydantic', 'range': [13, 17], 'children': [{'type': 'Import', 'name': 'BaseModel', 'range': [15, 17], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [19, 27], 'children': [{'type': 'FromImport', 'name': 'backend.data.block', 'range': [19, 27], 'children': [{'type': 'Import', 'name': 'BlockInput', 'range': [25, 27], 'children': []}]}]}]}
2025-01-08 09:17:34,559 - INFO - Starting Step 4: AST normalization
2025-01-08 09:17:36,383 - INFO - Step 2 result: {'type': 'Program', 'name': 'BlockCost', 'range': [80, 176], 'children': [{'type': 'ClassDeclaration', 'name': 'BlockCost', 'range': [80, 98], 'children': [{'type': 'PropertyDeclaration', 'name': 'cost_amount', 'range': [87, 89], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [89, 89], 'children': []}]}, {'type': 'PropertyDeclaration', 'name': 'cost_filter', 'range': [91, 93], 'children': [{'type': 'TypeAnnotation', 'name': 'BlockInput', 'range': [93, 93], 'children': []}]}, {'type': 'PropertyDeclaration', 'name': 'cost_type', 'range': [95, 97], 'children': [{'type': 'TypeAnnotation', 'name': 'BlockCostType', 'range': [97, 97], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': '__init__', 'range': [100, 176], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [104, 104], 'children': []}, {'type': 'Parameter', 'name': 'cost_amount', 'range': [107, 109], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [109, 109], 'children': []}]}, {'type': 'Parameter', 'name': 'cost_type', 'range': [112, 114], 'children': [{'type': 'TypeAnnotation', 'name': 'BlockCostType', 'range': [114, 114], 'children': []}, {'type': 'DefaultValue', 'name': 'BlockCostType.RUN', 'range': [115, 118], 'children': []}]}, {'type': 'Parameter', 'name': 'cost_filter', 'range': [121, 126], 'children': [{'type': 'TypeAnnotation', 'name': 'Optional[BlockInput]', 'range': [123, 126], 'children': []}, {'type': 'DefaultValue', 'name': 'None', 'range': [127, 128], 'children': []}]}, {'type': 'Parameter', 'name': 'data', 'range': [133, 135], 'children': [{'type': 'TypeAnnotation', 'name': 'Any', 'range': [135, 135], 'children': []}]}, {'type': 'SuperCall', 'name': '', 'range': [144, 174], 'children': [{'type': 'Argument', 'name': 'cost_amount', 'range': [151, 153], 'children': []}, {'type': 'Argument', 'name': 'cost_filter', 'range': [156, 158], 'children': []}, {'type': 'Argument', 'name': 'cost_type', 'range': [164, 166], 'children': []}, {'type': 'Argument', 'name': 'data', 'range': [171, 171], 'children': []}]}]}]}
2025-01-08 09:17:36,383 - INFO - Starting Step 3: AST simplification
2025-01-08 09:17:41,821 - INFO - Step 3 result: {'type': 'Program', 'name': 'BlockCostType', 'range': [30, 79], 'children': [{'type': 'EnumDeclaration', 'name': 'RUN', 'range': [39, 48], 'children': [{'type': 'Assignment', 'name': '=', 'range': [40, 41], 'children': [{'type': 'Literal', 'name': '"run"', 'range': [41, 41], 'children': []}]}, {'type': 'Comment', 'name': '#', 'range': [42, 47], 'children': []}]}, {'type': 'EnumDeclaration', 'name': 'BYTE', 'range': [49, 58], 'children': [{'type': 'Assignment', 'name': '=', 'range': [50, 51], 'children': [{'type': 'Literal', 'name': '"byte"', 'range': [51, 51], 'children': []}]}, {'type': 'Comment', 'name': '#', 'range': [52, 57], 'children': []}]}, {'type': 'EnumDeclaration', 'name': 'SECOND', 'range': [59, 68], 'children': [{'type': 'Assignment', 'name': '=', 'range': [60, 61], 'children': [{'type': 'Literal', 'name': '"second"', 'range': [61, 61], 'children': []}]}, {'type': 'Comment', 'name': '#', 'range': [62, 67], 'children': []}]}, {'type': 'EnumDeclaration', 'name': 'DOLLAR', 'range': [69, 78], 'children': [{'type': 'Assignment', 'name': '=', 'range': [70, 71], 'children': [{'type': 'Literal', 'name': '"dollar"', 'range': [71, 71], 'children': []}]}, {'type': 'Comment', 'name': '#', 'range': [72, 77], 'children': []}]}]}
2025-01-08 09:17:41,821 - INFO - Starting Step 4: AST normalization
2025-01-08 09:18:01,868 - INFO - Step 4 result: {'nodes': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 4], 'children': [{'type': 'FromImport', 'name': 'enum', 'range': [0, 4], 'children': [{'type': 'Import', 'name': 'Enum', 'range': [2, 4], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [5, 11], 'children': [{'type': 'FromImport', 'name': 'typing', 'range': [5, 11], 'children': [{'type': 'Import', 'name': 'Any', 'range': [7, 8], 'children': []}, {'type': 'Import', 'name': 'Optional', 'range': [9, 10], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [13, 17], 'children': [{'type': 'FromImport', 'name': 'pydantic', 'range': [13, 17], 'children': [{'type': 'Import', 'name': 'BaseModel', 'range': [15, 17], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [19, 27], 'children': [{'type': 'FromImport', 'name': 'backend.data.block', 'range': [19, 27], 'children': [{'type': 'Import', 'name': 'BlockInput', 'range': [25, 27], 'children': []}]}]}]}
2025-01-08 09:18:01,868 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:18:06,877 - INFO - Step 4 result: {'type': 'Program', 'name': 'BlockCostType', 'range': [30, 79], 'children': [{'type': 'EnumDeclaration', 'name': 'RUN', 'range': [39, 48], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [40, 41], 'children': [{'type': 'Literal', 'name': '"run"', 'range': [41, 41], 'children': []}]}, {'type': 'Comment', 'name': '#', 'range': [42, 47], 'children': []}]}, {'type': 'EnumDeclaration', 'name': 'BYTE', 'range': [49, 58], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [50, 51], 'children': [{'type': 'Literal', 'name': '"byte"', 'range': [51, 51], 'children': []}]}, {'type': 'Comment', 'name': '#', 'range': [52, 57], 'children': []}]}, {'type': 'EnumDeclaration', 'name': 'SECOND', 'range': [59, 68], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [60, 61], 'children': [{'type': 'Literal', 'name': '"second"', 'range': [61, 61], 'children': []}]}, {'type': 'Comment', 'name': '#', 'range': [62, 67], 'children': []}]}, {'type': 'EnumDeclaration', 'name': 'DOLLAR', 'range': [69, 78], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [70, 71], 'children': [{'type': 'Literal', 'name': '"dollar"', 'range': [71, 71], 'children': []}]}, {'type': 'Comment', 'name': '#', 'range': [72, 77], 'children': []}]}]}
2025-01-08 09:18:06,877 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:18:14,888 - INFO - Step 3 result: {'type': 'Program', 'name': 'BlockCost', 'range': [80, 176], 'children': [{'type': 'ClassDeclaration', 'name': 'BlockCost', 'range': [80, 98], 'children': [{'type': 'PropertyDeclaration', 'name': 'cost_amount', 'range': [87, 89], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [89, 89], 'children': []}]}, {'type': 'PropertyDeclaration', 'name': 'cost_filter', 'range': [91, 93], 'children': [{'type': 'TypeAnnotation', 'name': 'BlockInput', 'range': [93, 93], 'children': []}]}, {'type': 'PropertyDeclaration', 'name': 'cost_type', 'range': [95, 97], 'children': [{'type': 'TypeAnnotation', 'name': 'BlockCostType', 'range': [97, 97], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': '__init__', 'range': [100, 176], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [104, 104], 'children': []}, {'type': 'Parameter', 'name': 'cost_amount', 'range': [107, 109], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [109, 109], 'children': []}]}, {'type': 'Parameter', 'name': 'cost_type', 'range': [112, 114], 'children': [{'type': 'TypeAnnotation', 'name': 'BlockCostType', 'range': [114, 114], 'children': []}, {'type': 'DefaultValue', 'name': 'BlockCostType.RUN', 'range': [115, 118], 'children': []}]}, {'type': 'Parameter', 'name': 'cost_filter', 'range': [121, 126], 'children': [{'type': 'TypeAnnotation', 'name': 'Optional[BlockInput]', 'range': [123, 126], 'children': []}, {'type': 'DefaultValue', 'name': 'None', 'range': [127, 128], 'children': []}]}, {'type': 'Parameter', 'name': 'data', 'range': [133, 135], 'children': [{'type': 'TypeAnnotation', 'name': 'Any', 'range': [135, 135], 'children': []}]}, {'type': 'SuperCall', 'name': '', 'range': [144, 174], 'children': [{'type': 'Argument', 'name': 'cost_amount', 'range': [151, 153], 'children': []}, {'type': 'Argument', 'name': 'cost_filter', 'range': [156, 158], 'children': []}, {'type': 'Argument', 'name': 'cost_type', 'range': [164, 166], 'children': []}, {'type': 'Argument', 'name': 'data', 'range': [171, 171], 'children': []}]}]}]}
2025-01-08 09:18:14,888 - INFO - Starting Step 4: AST normalization
2025-01-08 09:18:22,897 - INFO - Step 5 result: {'nodes': [{'type': 'Program', 'name': 'MainOrSomething', 'range': [0, 27], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 4], 'children': [{'type': 'FromImport', 'name': 'enum', 'range': [0, 4], 'children': [{'type': 'Import', 'name': 'Enum', 'range': [2, 4], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [5, 11], 'children': [{'type': 'FromImport', 'name': 'typing', 'range': [5, 11], 'children': [{'type': 'Import', 'name': 'Any', 'range': [7, 8], 'children': []}, {'type': 'Import', 'name': 'Optional', 'range': [9, 10], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [13, 17], 'children': [{'type': 'FromImport', 'name': 'pydantic', 'range': [13, 17], 'children': [{'type': 'Import', 'name': 'BaseModel', 'range': [15, 17], 'children': []}]}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [19, 27], 'children': [{'type': 'FromImport', 'name': 'backend.data.block', 'range': [19, 27], 'children': [{'type': 'Import', 'name': 'BlockInput', 'range': [25, 27], 'children': []}]}]}]}]}
2025-01-08 09:18:22,897 - INFO - Completed main AST analysis flow
2025-01-08 09:18:22,898 - INFO - Successfully processed chunk
2025-01-08 09:18:34,728 - INFO - Step 5 result: {'type': 'Program', 'name': 'BlockCostType', 'range': [30, 79], 'children': [{'type': 'EnumDeclaration', 'name': 'RUN', 'range': [39, 48], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [40, 41], 'children': [{'type': 'Literal', 'name': '"run"', 'range': [41, 41], 'children': []}]}, {'type': 'Comment', 'name': '#', 'range': [42, 47], 'children': []}]}, {'type': 'EnumDeclaration', 'name': 'BYTE', 'range': [49, 58], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [50, 51], 'children': [{'type': 'Literal', 'name': '"byte"', 'range': [51, 51], 'children': []}]}, {'type': 'Comment', 'name': '#', 'range': [52, 57], 'children': []}]}, {'type': 'EnumDeclaration', 'name': 'SECOND', 'range': [59, 68], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [60, 61], 'children': [{'type': 'Literal', 'name': '"second"', 'range': [61, 61], 'children': []}]}, {'type': 'Comment', 'name': '#', 'range': [62, 67], 'children': []}]}, {'type': 'EnumDeclaration', 'name': 'DOLLAR', 'range': [69, 78], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [70, 71], 'children': [{'type': 'Literal', 'name': '"dollar"', 'range': [71, 71], 'children': []}]}, {'type': 'Comment', 'name': '#', 'range': [72, 77], 'children': []}]}]}
2025-01-08 09:18:34,729 - INFO - Completed main AST analysis flow
2025-01-08 09:18:34,729 - INFO - Successfully processed chunk
2025-01-08 09:18:50,843 - INFO - Step 4 result: {'type': 'Program', 'name': 'BlockCost', 'range': [80, 176], 'children': [{'type': 'ClassDecl', 'name': 'BlockCost', 'range': [80, 98], 'children': [{'type': 'PropertyDecl', 'name': 'cost_amount', 'range': [87, 89], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [89, 89], 'children': []}]}, {'type': 'PropertyDecl', 'name': 'cost_filter', 'range': [91, 93], 'children': [{'type': 'TypeAnnotation', 'name': 'BlockInput', 'range': [93, 93], 'children': []}]}, {'type': 'PropertyDecl', 'name': 'cost_type', 'range': [95, 97], 'children': [{'type': 'TypeAnnotation', 'name': 'BlockCostType', 'range': [97, 97], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': '__init__', 'range': [100, 176], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [104, 104], 'children': []}, {'type': 'Parameter', 'name': 'cost_amount', 'range': [107, 109], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [109, 109], 'children': []}]}, {'type': 'Parameter', 'name': 'cost_type', 'range': [112, 114], 'children': [{'type': 'TypeAnnotation', 'name': 'BlockCostType', 'range': [114, 114], 'children': []}, {'type': 'DefaultValue', 'name': 'BlockCostType.RUN', 'range': [115, 118], 'children': []}]}, {'type': 'Parameter', 'name': 'cost_filter', 'range': [121, 126], 'children': [{'type': 'TypeAnnotation', 'name': 'Optional[BlockInput]', 'range': [123, 126], 'children': []}, {'type': 'DefaultValue', 'name': 'None', 'range': [127, 128], 'children': []}]}, {'type': 'Parameter', 'name': 'data', 'range': [133, 135], 'children': [{'type': 'TypeAnnotation', 'name': 'Any', 'range': [135, 135], 'children': []}]}, {'type': 'SuperCall', 'name': '', 'range': [144, 174], 'children': [{'type': 'Argument', 'name': 'cost_amount', 'range': [151, 153], 'children': []}, {'type': 'Argument', 'name': 'cost_filter', 'range': [156, 158], 'children': []}, {'type': 'Argument', 'name': 'cost_type', 'range': [164, 166], 'children': []}, {'type': 'Argument', 'name': 'data', 'range': [171, 171], 'children': []}]}]}]}
2025-01-08 09:18:50,843 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:19:21,632 - INFO - Step 5 result: {'type': 'Program', 'name': 'BlockCost', 'range': [80, 176], 'children': [{'type': 'ClassDecl', 'name': 'BlockCost', 'range': [80, 98], 'children': [{'type': 'PropertyDecl', 'name': 'cost_amount', 'range': [87, 89], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [89, 89], 'children': []}]}, {'type': 'PropertyDecl', 'name': 'cost_filter', 'range': [91, 93], 'children': [{'type': 'TypeAnnotation', 'name': 'BlockInput', 'range': [93, 93], 'children': []}]}, {'type': 'PropertyDecl', 'name': 'cost_type', 'range': [95, 97], 'children': [{'type': 'TypeAnnotation', 'name': 'BlockCostType', 'range': [97, 97], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': '__init__', 'range': [100, 176], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [104, 104], 'children': []}, {'type': 'Parameter', 'name': 'cost_amount', 'range': [107, 109], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [109, 109], 'children': []}]}, {'type': 'Parameter', 'name': 'cost_type', 'range': [112, 114], 'children': [{'type': 'TypeAnnotation', 'name': 'BlockCostType', 'range': [114, 114], 'children': []}, {'type': 'DefaultValue', 'name': 'BlockCostType.RUN', 'range': [115, 118], 'children': []}]}, {'type': 'Parameter', 'name': 'cost_filter', 'range': [121, 126], 'children': [{'type': 'TypeAnnotation', 'name': 'Optional[BlockInput]', 'range': [123, 126], 'children': []}, {'type': 'DefaultValue', 'name': 'None', 'range': [127, 128], 'children': []}]}, {'type': 'Parameter', 'name': 'data', 'range': [133, 135], 'children': [{'type': 'TypeAnnotation', 'name': 'Any', 'range': [135, 135], 'children': []}]}, {'type': 'SuperCall', 'name': '', 'range': [144, 174], 'children': [{'type': 'Argument', 'name': 'cost_amount', 'range': [151, 153], 'children': []}, {'type': 'Argument', 'name': 'cost_filter', 'range': [156, 158], 'children': []}, {'type': 'Argument', 'name': 'cost_type', 'range': [164, 166], 'children': []}, {'type': 'Argument', 'name': 'data', 'range': [171, 171], 'children': []}]}]}]}
2025-01-08 09:19:21,632 - INFO - Completed main AST analysis flow
2025-01-08 09:19:21,633 - INFO - Successfully processed chunk
2025-01-08 09:19:21,640 - INFO - Starting code generation from AST
2025-01-08 09:19:33,139 - INFO - Successfully generated code from AST
2025-01-08 09:19:33,140 - INFO - Starting static code similarity comparison
2025-01-08 09:19:33,143 - INFO - Static similarity result: {'final_score': 90.19, 'length_similarity': 84.35, 'token_similarity': 87.93, 'structure_similarity': 84.62, 'function_similarity': 100, 'complexity_similarity': 100.0, 'variable_similarity': 100}
