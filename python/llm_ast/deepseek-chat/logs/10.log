2025-01-08 09:16:34,926 - INFO - Processing sample 10
2025-01-08 09:16:34,926 - INFO - Starting Step 0: Splitting code into top-level declarations
2025-01-08 09:16:45,825 - INFO - Successfully split code into 6 top-level declarations
2025-01-08 09:16:45,828 - INFO - Processing chunk #0 (size=119 chars, start_index=0)
2025-01-08 09:16:45,828 - INFO - Processing chunk with 119 chars starting at index 0
2025-01-08 09:16:45,828 - INFO - Starting main AST analysis flow
2025-01-08 09:16:45,828 - INFO - Tokenized code into 29 tokens
2025-01-08 09:16:45,828 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:16:45,834 - INFO - Processing chunk #1 (size=768 chars, start_index=29)
2025-01-08 09:16:45,834 - INFO - Processing chunk with 768 chars starting at index 29
2025-01-08 09:16:45,834 - INFO - Starting main AST analysis flow
2025-01-08 09:16:45,834 - INFO - Tokenized code into 152 tokens
2025-01-08 09:16:45,834 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:16:45,836 - INFO - Processing chunk #2 (size=425 chars, start_index=181)
2025-01-08 09:16:45,837 - INFO - Processing chunk with 425 chars starting at index 181
2025-01-08 09:16:45,837 - INFO - Starting main AST analysis flow
2025-01-08 09:16:45,838 - INFO - Tokenized code into 87 tokens
2025-01-08 09:16:45,838 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:16:45,846 - INFO - Processing chunk #3 (size=1020 chars, start_index=268)
2025-01-08 09:16:45,846 - INFO - Processing chunk with 1020 chars starting at index 268
2025-01-08 09:16:45,846 - INFO - Starting main AST analysis flow
2025-01-08 09:16:45,846 - INFO - Tokenized code into 134 tokens
2025-01-08 09:16:45,846 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:16:45,848 - INFO - Processing chunk #4 (size=1105 chars, start_index=402)
2025-01-08 09:16:45,848 - INFO - Processing chunk with 1105 chars starting at index 402
2025-01-08 09:16:45,848 - INFO - Starting main AST analysis flow
2025-01-08 09:16:45,853 - INFO - Processing chunk #5 (size=39 chars, start_index=561)
2025-01-08 09:16:45,854 - INFO - Tokenized code into 159 tokens
2025-01-08 09:16:45,854 - INFO - Processing chunk with 39 chars starting at index 561
2025-01-08 09:16:45,854 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:16:45,854 - INFO - Starting main AST analysis flow
2025-01-08 09:16:45,856 - INFO - Tokenized code into 12 tokens
2025-01-08 09:16:45,856 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:16:53,244 - INFO - Step 1 result: {'type': 'Program', 'name': 'get_environment_variables', 'range': [29, 180], 'children': []}
2025-01-08 09:16:53,245 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:16:53,299 - INFO - Step 1 result: {'type': 'Program', 'name': 'make_api_request', 'range': [181, 267], 'children': []}
2025-01-08 09:16:53,300 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:16:53,366 - INFO - Step 1 result: {'type': 'Program', 'name': 'main', 'range': [402, 560], 'children': []}
2025-01-08 09:16:53,366 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:16:53,811 - INFO - Step 1 result: {'type': 'Program', 'name': 'process_check_runs', 'range': [268, 401], 'children': []}
2025-01-08 09:16:53,812 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:16:55,235 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [561, 572], 'children': [{'type': 'IfStatement', 'name': '', 'range': [561, 567], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'main', 'range': [568, 571], 'children': []}]}
2025-01-08 09:16:55,236 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:17:00,686 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [0, 28], 'children': [{'type': 'ImportDeclaration', 'name': 'json', 'range': [0, 2], 'children': []}, {'type': 'ImportDeclaration', 'name': 'os', 'range': [3, 5], 'children': []}, {'type': 'ImportDeclaration', 'name': 'requests', 'range': [6, 8], 'children': []}, {'type': 'ImportDeclaration', 'name': 'sys', 'range': [9, 11], 'children': []}, {'type': 'ImportDeclaration', 'name': 'time', 'range': [12, 14], 'children': []}, {'type': 'ImportDeclaration', 'name': 'Dict, List, Tuple', 'range': [15, 23], 'children': []}, {'type': 'VariableDeclaration', 'name': 'CHECK_INTERVAL', 'range': [25, 28], 'children': []}]}
2025-01-08 09:17:00,687 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:17:11,635 - INFO - Step 2 result: {'type': 'Program', 'name': '', 'range': [561, 572], 'children': [{'type': 'IfStatement', 'name': '', 'range': [561, 567], 'children': [{'type': 'Condition', 'name': '', 'range': [561, 566], 'children': [{'type': 'BinaryExpression', 'name': '', 'range': [562, 565], 'children': [{'type': 'Identifier', 'name': '__name__', 'range': [562, 562], 'children': []}, {'type': 'Operator', 'name': '==', 'range': [563, 564], 'children': []}, {'type': 'StringLiteral', 'name': '__main__', 'range': [565, 565], 'children': []}]}]}]}, {'type': 'FunctionDeclaration', 'name': 'main', 'range': [568, 571], 'children': [{'type': 'FunctionCall', 'name': 'main', 'range': [568, 571], 'children': []}]}]}
2025-01-08 09:17:11,635 - INFO - Starting Step 3: AST simplification
2025-01-08 09:17:16,702 - INFO - Step 2 result: {'type': 'Program', 'name': 'make_api_request', 'range': [181, 267], 'children': [{'type': 'FunctionDeclaration', 'name': 'make_api_request', 'range': [181, 267], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [183, 196], 'children': [{'type': 'Parameter', 'name': 'url', 'range': [184, 186], 'children': []}, {'type': 'Parameter', 'name': 'headers', 'range': [188, 195], 'children': []}]}, {'type': 'ReturnType', 'name': 'Dict', 'range': [197, 200], 'children': []}, {'type': 'Docstring', 'name': 'docstring', 'range': [202, 204], 'children': []}, {'type': 'TryBlock', 'name': 'try', 'range': [206, 266], 'children': [{'type': 'PrintStatement', 'name': 'print', 'range': [209, 214], 'children': []}, {'type': 'Assignment', 'name': 'response', 'range': [216, 231], 'children': []}, {'type': 'MethodCall', 'name': 'raise_for_status', 'range': [233, 237], 'children': []}, {'type': 'ReturnStatement', 'name': 'return', 'range': [239, 244], 'children': []}, {'type': 'ExceptBlock', 'name': 'except', 'range': [246, 266], 'children': [{'type': 'PrintStatement', 'name': 'print', 'range': [254, 258], 'children': []}, {'type': 'MethodCall', 'name': 'exit', 'range': [260, 265], 'children': []}]}]}]}]}
2025-01-08 09:17:16,703 - INFO - Starting Step 3: AST simplification
2025-01-08 09:17:25,314 - INFO - Step 3 result: {'type': 'Program', 'name': '', 'range': [561, 572], 'children': [{'type': 'IfStatement', 'name': '', 'range': [561, 567], 'children': [{'type': 'Condition', 'name': '', 'range': [561, 566], 'children': [{'type': 'BinaryExpression', 'name': '', 'range': [562, 565], 'children': [{'type': 'Identifier', 'name': '__name__', 'range': [562, 562], 'children': []}, {'type': 'Operator', 'name': '==', 'range': [563, 564], 'children': []}, {'type': 'StringLiteral', 'name': '__main__', 'range': [565, 565], 'children': []}]}]}]}, {'type': 'FunctionDeclaration', 'name': 'main', 'range': [568, 571], 'children': [{'type': 'FunctionCall', 'name': 'main', 'range': [568, 571], 'children': []}]}]}
2025-01-08 09:17:25,314 - INFO - Starting Step 4: AST normalization
2025-01-08 09:17:25,956 - INFO - Step 2 result: {'nodes': [{'type': 'ImportDeclaration', 'name': 'json', 'range': [0, 2], 'children': [{'type': 'ImportSpecifier', 'name': 'json', 'range': [0, 2], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'os', 'range': [3, 5], 'children': [{'type': 'ImportSpecifier', 'name': 'os', 'range': [3, 5], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'requests', 'range': [6, 8], 'children': [{'type': 'ImportSpecifier', 'name': 'requests', 'range': [6, 8], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'sys', 'range': [9, 11], 'children': [{'type': 'ImportSpecifier', 'name': 'sys', 'range': [9, 11], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'time', 'range': [12, 14], 'children': [{'type': 'ImportSpecifier', 'name': 'time', 'range': [12, 14], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'Dict, List, Tuple', 'range': [15, 23], 'children': [{'type': 'ImportSpecifier', 'name': 'Dict', 'range': [18, 18], 'children': []}, {'type': 'ImportSpecifier', 'name': 'List', 'range': [20, 20], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Tuple', 'range': [22, 22], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'CHECK_INTERVAL', 'range': [25, 28], 'children': [{'type': 'VariableDeclarator', 'name': 'CHECK_INTERVAL', 'range': [25, 28], 'children': [{'type': 'Literal', 'name': '30', 'range': [27, 27], 'children': []}]}]}]}
2025-01-08 09:17:25,956 - INFO - Starting Step 3: AST simplification
2025-01-08 09:17:32,121 - INFO - Step 2 result: {'type': 'Program', 'name': 'get_environment_variables', 'range': [29, 180], 'children': [{'type': 'FunctionDeclaration', 'name': 'get_environment_variables', 'range': [29, 180], 'children': [{'type': 'FunctionSignature', 'name': 'get_environment_variables', 'range': [29, 47], 'children': [{'type': 'Keyword', 'name': 'def', 'range': [29, 32], 'children': []}, {'type': 'FunctionName', 'name': 'get_environment_variables', 'range': [30, 54], 'children': []}, {'type': 'ReturnType', 'name': 'Tuple[str, str, str, str, str]', 'range': [35, 46], 'children': []}]}, {'type': 'FunctionBody', 'name': 'get_environment_variables', 'range': [48, 180], 'children': [{'type': 'Docstring', 'name': 'Retrieve and return necessary environment variables.', 'range': [49, 51], 'children': []}, {'type': 'TryBlock', 'name': 'try', 'range': [53, 179], 'children': [{'type': 'WithStatement', 'name': 'with', 'range': [56, 78], 'children': [{'type': 'CallExpression', 'name': 'open', 'range': [57, 65], 'children': [{'type': 'AccessExpression', 'name': 'os.environ["GITHUB_EVENT_PATH"]', 'range': [59, 64], 'children': []}]}, {'type': 'AssignmentExpression', 'name': 'event = json.load(f)', 'range': [70, 77], 'children': []}]}, {'type': 'IfStatement', 'name': 'if', 'range': [89, 119], 'children': [{'type': 'Condition', 'name': '"pull_request" in event', 'range': [90, 92], 'children': []}, {'type': 'AssignmentExpression', 'name': 'sha = event["pull_request"]["head"]["sha"]', 'range': [95, 106], 'children': []}, {'type': 'ElseStatement', 'name': 'else', 'range': [108, 119], 'children': [{'type': 'AssignmentExpression', 'name': 'sha = os.environ["GITHUB_SHA"]', 'range': [111, 118], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [121, 159], 'children': [{'type': 'TupleExpression', 'name': '(os.environ["GITHUB_API_URL"], os.environ["GITHUB_REPOSITORY"], sha, os.environ["GITHUB_TOKEN"], os.environ["GITHUB_RUN_ID"])', 'range': [122, 158], 'children': []}]}]}, {'type': 'ExceptBlock', 'name': 'except', 'range': [161, 179], 'children': [{'type': 'ExceptionType', 'name': 'KeyError', 'range': [162, 169], 'children': []}, {'type': 'PrintStatement', 'name': 'print', 'range': [167, 171], 'children': []}, {'type': 'ExitStatement', 'name': 'sys.exit(1)', 'range': [173, 178], 'children': []}]}]}]}]}
2025-01-08 09:17:32,121 - INFO - Starting Step 3: AST simplification
2025-01-08 09:17:39,046 - INFO - Step 3 result: {'type': 'Program', 'name': 'make_api_request', 'range': [181, 267], 'children': [{'type': 'FunctionDeclaration', 'name': 'make_api_request', 'range': [181, 267], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [183, 196], 'children': [{'type': 'Parameter', 'name': 'url', 'range': [184, 186], 'children': []}, {'type': 'Parameter', 'name': 'headers', 'range': [188, 195], 'children': []}]}, {'type': 'ReturnType', 'name': 'Dict', 'range': [197, 200], 'children': []}, {'type': 'Docstring', 'name': 'docstring', 'range': [202, 204], 'children': []}, {'type': 'TryBlock', 'name': 'try', 'range': [206, 266], 'children': [{'type': 'PrintStatement', 'name': 'print', 'range': [209, 214], 'children': []}, {'type': 'Assignment', 'name': 'response', 'range': [216, 231], 'children': []}, {'type': 'MethodCall', 'name': 'raise_for_status', 'range': [233, 237], 'children': []}, {'type': 'ReturnStatement', 'name': 'return', 'range': [239, 244], 'children': []}, {'type': 'ExceptBlock', 'name': 'except', 'range': [246, 266], 'children': [{'type': 'PrintStatement', 'name': 'print', 'range': [254, 258], 'children': []}, {'type': 'MethodCall', 'name': 'exit', 'range': [260, 265], 'children': []}]}]}]}]}
2025-01-08 09:17:39,047 - INFO - Starting Step 4: AST normalization
2025-01-08 09:17:41,883 - INFO - Step 4 result: {'type': 'Program', 'name': '', 'range': [561, 572], 'children': [{'type': 'IfStatement', 'name': '', 'range': [561, 567], 'children': [{'type': 'Condition', 'name': '', 'range': [561, 566], 'children': [{'type': 'BinaryExpression', 'name': '', 'range': [562, 565], 'children': [{'type': 'Identifier', 'name': '__name__', 'range': [562, 562], 'children': []}, {'type': 'Operator', 'name': '==', 'range': [563, 564], 'children': []}, {'type': 'Literal', 'name': '__main__', 'range': [565, 565], 'children': []}]}]}]}, {'type': 'FunctionDecl', 'name': 'main', 'range': [568, 571], 'children': [{'type': 'CallExpression', 'name': 'main', 'range': [568, 571], 'children': []}]}]}
2025-01-08 09:17:41,883 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:17:50,734 - INFO - Step 3 result: {'nodes': [{'type': 'ImportDeclaration', 'name': 'json', 'range': [0, 2], 'children': [{'type': 'ImportSpecifier', 'name': 'json', 'range': [0, 2], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'os', 'range': [3, 5], 'children': [{'type': 'ImportSpecifier', 'name': 'os', 'range': [3, 5], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'requests', 'range': [6, 8], 'children': [{'type': 'ImportSpecifier', 'name': 'requests', 'range': [6, 8], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'sys', 'range': [9, 11], 'children': [{'type': 'ImportSpecifier', 'name': 'sys', 'range': [9, 11], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'time', 'range': [12, 14], 'children': [{'type': 'ImportSpecifier', 'name': 'time', 'range': [12, 14], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'Dict, List, Tuple', 'range': [15, 23], 'children': [{'type': 'ImportSpecifier', 'name': 'Dict', 'range': [18, 18], 'children': []}, {'type': 'ImportSpecifier', 'name': 'List', 'range': [20, 20], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Tuple', 'range': [22, 22], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'CHECK_INTERVAL', 'range': [25, 28], 'children': [{'type': 'VariableDeclarator', 'name': 'CHECK_INTERVAL', 'range': [25, 28], 'children': [{'type': 'Literal', 'name': '30', 'range': [27, 27], 'children': []}]}]}]}
2025-01-08 09:17:50,735 - INFO - Starting Step 4: AST normalization
2025-01-08 09:17:57,752 - INFO - Step 5 result: {'type': 'Program', 'name': '', 'range': [561, 572], 'children': [{'type': 'IfStatement', 'name': '', 'range': [561, 567], 'children': [{'type': 'Condition', 'name': '', 'range': [561, 566], 'children': [{'type': 'BinaryExpression', 'name': '', 'range': [562, 565], 'children': [{'type': 'Identifier', 'name': '__name__', 'range': [562, 562], 'children': []}, {'type': 'Operator', 'name': '==', 'range': [563, 564], 'children': []}, {'type': 'Literal', 'name': '__main__', 'range': [565, 565], 'children': []}]}]}]}, {'type': 'FunctionDecl', 'name': 'main', 'range': [568, 571], 'children': [{'type': 'CallExpression', 'name': 'main', 'range': [568, 571], 'children': []}]}]}
2025-01-08 09:17:57,753 - INFO - Completed main AST analysis flow
2025-01-08 09:17:57,753 - INFO - Successfully processed chunk
2025-01-08 09:18:05,476 - INFO - Step 3 result: {'type': 'Program', 'name': 'get_environment_variables', 'range': [29, 180], 'children': [{'type': 'FunctionDeclaration', 'name': 'get_environment_variables', 'range': [29, 180], 'children': [{'type': 'FunctionSignature', 'name': 'get_environment_variables', 'range': [29, 47], 'children': [{'type': 'Keyword', 'name': 'def', 'range': [29, 32], 'children': []}, {'type': 'FunctionName', 'name': 'get_environment_variables', 'range': [30, 54], 'children': []}, {'type': 'ReturnType', 'name': 'Tuple[str, str, str, str, str]', 'range': [35, 46], 'children': []}]}, {'type': 'FunctionBody', 'name': 'get_environment_variables', 'range': [48, 180], 'children': [{'type': 'Docstring', 'name': 'Retrieve and return necessary environment variables.', 'range': [49, 51], 'children': []}, {'type': 'TryBlock', 'name': 'try', 'range': [53, 179], 'children': [{'type': 'WithStatement', 'name': 'with', 'range': [56, 78], 'children': [{'type': 'CallExpression', 'name': 'open', 'range': [57, 65], 'children': [{'type': 'AccessExpression', 'name': 'os.environ["GITHUB_EVENT_PATH"]', 'range': [59, 64], 'children': []}]}, {'type': 'AssignmentExpression', 'name': 'event = json.load(f)', 'range': [70, 77], 'children': []}]}, {'type': 'IfStatement', 'name': 'if', 'range': [89, 119], 'children': [{'type': 'Condition', 'name': '"pull_request" in event', 'range': [90, 92], 'children': []}, {'type': 'AssignmentExpression', 'name': 'sha = event["pull_request"]["head"]["sha"]', 'range': [95, 106], 'children': []}, {'type': 'ElseStatement', 'name': 'else', 'range': [108, 119], 'children': [{'type': 'AssignmentExpression', 'name': 'sha = os.environ["GITHUB_SHA"]', 'range': [111, 118], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [121, 159], 'children': [{'type': 'TupleExpression', 'name': '(os.environ["GITHUB_API_URL"], os.environ["GITHUB_REPOSITORY"], sha, os.environ["GITHUB_TOKEN"], os.environ["GITHUB_RUN_ID"])', 'range': [122, 158], 'children': []}]}]}, {'type': 'ExceptBlock', 'name': 'except', 'range': [161, 179], 'children': [{'type': 'ExceptionType', 'name': 'KeyError', 'range': [162, 169], 'children': []}, {'type': 'PrintStatement', 'name': 'print', 'range': [167, 171], 'children': []}, {'type': 'ExitStatement', 'name': 'sys.exit(1)', 'range': [173, 178], 'children': []}]}]}]}]}
2025-01-08 09:18:05,476 - INFO - Starting Step 4: AST normalization
2025-01-08 09:18:06,950 - INFO - Step 4 result: {'type': 'Program', 'name': 'make_api_request', 'range': [181, 267], 'children': [{'type': 'FunctionDecl', 'name': 'make_api_request', 'range': [181, 267], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [183, 196], 'children': [{'type': 'Parameter', 'name': 'url', 'range': [184, 186], 'children': []}, {'type': 'Parameter', 'name': 'headers', 'range': [188, 195], 'children': []}]}, {'type': 'ReturnType', 'name': 'Dict', 'range': [197, 200], 'children': []}, {'type': 'Docstring', 'name': 'docstring', 'range': [202, 204], 'children': []}, {'type': 'TryStatement', 'name': 'try', 'range': [206, 266], 'children': [{'type': 'ExpressionStatement', 'name': 'print', 'range': [209, 214], 'children': [{'type': 'CallExpression', 'name': 'print', 'range': [209, 214], 'children': []}]}, {'type': 'AssignmentExpression', 'name': 'response', 'range': [216, 231], 'children': []}, {'type': 'CallExpression', 'name': 'raise_for_status', 'range': [233, 237], 'children': []}, {'type': 'ReturnStatement', 'name': 'return', 'range': [239, 244], 'children': []}, {'type': 'CatchClause', 'name': 'except', 'range': [246, 266], 'children': [{'type': 'ExpressionStatement', 'name': 'print', 'range': [254, 258], 'children': [{'type': 'CallExpression', 'name': 'print', 'range': [254, 258], 'children': []}]}, {'type': 'CallExpression', 'name': 'exit', 'range': [260, 265], 'children': []}]}]}]}]}
2025-01-08 09:18:06,950 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:18:11,229 - INFO - Step 2 result: {'type': 'Program', 'name': 'process_check_runs', 'range': [268, 401], 'children': [{'type': 'FunctionDeclaration', 'name': 'process_check_runs', 'range': [268, 401], 'children': [{'type': 'Parameter', 'name': 'check_runs', 'range': [271, 276], 'children': [{'type': 'TypeAnnotation', 'name': 'List[Dict]', 'range': [273, 276], 'children': []}]}, {'type': 'ReturnType', 'name': 'Tuple[bool, bool]', 'range': [280, 285], 'children': []}, {'type': 'Docstring', 'name': '"Process check runs and return their status."', 'range': [288, 290], 'children': []}, {'type': 'VariableDeclaration', 'name': 'runs_in_progress', 'range': [292, 294], 'children': [{'type': 'Assignment', 'name': '=', 'range': [293, 294], 'children': [{'type': 'Literal', 'name': 'False', 'range': [294, 294], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'all_others_passed', 'range': [296, 298], 'children': [{'type': 'Assignment', 'name': '=', 'range': [297, 298], 'children': [{'type': 'Literal', 'name': 'True', 'range': [298, 298], 'children': []}]}]}, {'type': 'ForStatement', 'name': 'for', 'range': [301, 383], 'children': [{'type': 'VariableDeclaration', 'name': 'run', 'range': [302, 302], 'children': []}, {'type': 'Expression', 'name': 'in', 'range': [303, 304], 'children': [{'type': 'Identifier', 'name': 'check_runs', 'range': [304, 304], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [305, 383], 'children': [{'type': 'IfStatement', 'name': 'if', 'range': [307, 383], 'children': [{'type': 'Expression', 'name': '!=', 'range': [315, 317], 'children': [{'type': 'CallExpression', 'name': 'str', 'range': [308, 314], 'children': [{'type': 'MemberExpression', 'name': 'run["name"]', 'range': [310, 313], 'children': []}]}, {'type': 'Literal', 'name': '"Check PR Status"', 'range': [317, 317], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [318, 383], 'children': [{'type': 'VariableDeclaration', 'name': 'status', 'range': [320, 326], 'children': [{'type': 'Assignment', 'name': '=', 'range': [321, 326], 'children': [{'type': 'MemberExpression', 'name': 'run["status"]', 'range': [322, 325], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'conclusion', 'range': [327, 333], 'children': [{'type': 'Assignment', 'name': '=', 'range': [328, 333], 'children': [{'type': 'MemberExpression', 'name': 'run["conclusion"]', 'range': [329, 332], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if', 'range': [335, 383], 'children': [{'type': 'Expression', 'name': '==', 'range': [337, 339], 'children': [{'type': 'Identifier', 'name': 'status', 'range': [336, 336], 'children': []}, {'type': 'Literal', 'name': '"completed"', 'range': [339, 339], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [340, 383], 'children': [{'type': 'IfStatement', 'name': 'if', 'range': [342, 383], 'children': [{'type': 'Expression', 'name': 'not in', 'range': [344, 346], 'children': [{'type': 'Identifier', 'name': 'conclusion', 'range': [343, 343], 'children': []}, {'type': 'ArrayExpression', 'name': '', 'range': [346, 352], 'children': [{'type': 'Literal', 'name': '"success"', 'range': [347, 347], 'children': []}, {'type': 'Literal', 'name': '"skipped"', 'range': [349, 349], 'children': []}, {'type': 'Literal', 'name': '"neutral"', 'range': [351, 351], 'children': []}]}]}, {'type': 'BlockStatement', 'name': '', 'range': [353, 383], 'children': [{'type': 'ExpressionStatement', 'name': 'all_others_passed = False', 'range': [355, 357], 'children': []}, {'type': 'CallExpression', 'name': 'print', 'range': [359, 365], 'children': [{'type': 'TemplateLiteral', 'name': 'f"Check run {run[\'name\']} (ID: {run[\'id\']}) has conclusion: {conclusion}"', 'range': [362, 363], 'children': []}]}]}]}, {'type': 'ElseStatement', 'name': 'else', 'range': [367, 383], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [368, 383], 'children': [{'type': 'ExpressionStatement', 'name': 'runs_in_progress = True', 'range': [370, 372], 'children': []}, {'type': 'CallExpression', 'name': 'print', 'range': [374, 378], 'children': [{'type': 'TemplateLiteral', 'name': 'f"Check run {run[\'name\']} (ID: {run[\'id\']}) is still {status}."', 'range': [376, 377], 'children': []}]}, {'type': 'ExpressionStatement', 'name': 'all_others_passed = False', 'range': [380, 382], 'children': []}]}]}]}]}]}]}, {'type': 'ElseStatement', 'name': 'else', 'range': [384, 394], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [385, 394], 'children': [{'type': 'CallExpression', 'name': 'print', 'range': [387, 393], 'children': [{'type': 'TemplateLiteral', 'name': 'f"Skipping check run {run[\'name\']} (ID: {run[\'id\']}) as it is the current run."', 'range': [390, 391], 'children': []}]}]}]}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [396, 399], 'children': [{'type': 'Identifier', 'name': 'runs_in_progress', 'range': [397, 397], 'children': []}, {'type': 'Identifier', 'name': 'all_others_passed', 'range': [399, 399], 'children': []}]}]}]}
2025-01-08 09:18:11,229 - INFO - Starting Step 3: AST simplification
2025-01-08 09:18:15,292 - INFO - Step 4 result: {'nodes': [{'type': 'ImportDeclaration', 'name': 'json', 'range': [0, 2], 'children': [{'type': 'ImportSpecifier', 'name': 'json', 'range': [0, 2], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'os', 'range': [3, 5], 'children': [{'type': 'ImportSpecifier', 'name': 'os', 'range': [3, 5], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'requests', 'range': [6, 8], 'children': [{'type': 'ImportSpecifier', 'name': 'requests', 'range': [6, 8], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'sys', 'range': [9, 11], 'children': [{'type': 'ImportSpecifier', 'name': 'sys', 'range': [9, 11], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'time', 'range': [12, 14], 'children': [{'type': 'ImportSpecifier', 'name': 'time', 'range': [12, 14], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'Dict, List, Tuple', 'range': [15, 23], 'children': [{'type': 'ImportSpecifier', 'name': 'Dict', 'range': [18, 18], 'children': []}, {'type': 'ImportSpecifier', 'name': 'List', 'range': [20, 20], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Tuple', 'range': [22, 22], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'CHECK_INTERVAL', 'range': [25, 28], 'children': [{'type': 'VariableDeclarator', 'name': 'CHECK_INTERVAL', 'range': [25, 28], 'children': [{'type': 'Literal', 'name': '30', 'range': [27, 27], 'children': []}]}]}]}
2025-01-08 09:18:15,293 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:18:29,235 - INFO - Step 2 result: {'type': 'Program', 'name': 'main', 'range': [402, 560], 'children': [{'type': 'FunctionDeclaration', 'name': 'main', 'range': [402, 560], 'children': [{'type': 'ParameterList', 'range': [404, 405], 'children': []}, {'type': 'Block', 'range': [407, 560], 'children': [{'type': 'VariableDeclaration', 'name': 'api_url, repo, sha, github_token, current_run_id', 'range': [408, 420], 'children': [{'type': 'Assignment', 'range': [417, 420], 'children': [{'type': 'FunctionCall', 'name': 'get_environment_variables', 'range': [418, 420], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'endpoint', 'range': [423, 427], 'children': [{'type': 'Assignment', 'range': [424, 427], 'children': [{'type': 'StringLiteral', 'value': '"{api_url}/repos/{repo}/commits/{sha}/check-runs"', 'range': [426, 426], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'headers', 'range': [428, 437], 'children': [{'type': 'Assignment', 'range': [429, 437], 'children': [{'type': 'ObjectLiteral', 'range': [430, 437], 'children': [{'type': 'Property', 'name': '"Accept"', 'range': [432, 434], 'children': [{'type': 'StringLiteral', 'value': '"application/vnd.github.v3+json"', 'range': [434, 434], 'children': []}]}]}]}]}, {'type': 'IfStatement', 'range': [439, 450], 'children': [{'type': 'Condition', 'range': [440, 441], 'children': [{'type': 'Identifier', 'name': 'github_token', 'range': [440, 440], 'children': []}]}, {'type': 'Block', 'range': [442, 450], 'children': [{'type': 'Assignment', 'range': [443, 450], 'children': [{'type': 'MemberExpression', 'range': [443, 446], 'children': [{'type': 'Identifier', 'name': 'headers', 'range': [443, 443], 'children': []}, {'type': 'StringLiteral', 'value': '"Authorization"', 'range': [445, 445], 'children': []}]}, {'type': 'StringLiteral', 'value': '"token {github_token}"', 'range': [449, 449], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'range': [452, 457], 'children': [{'type': 'FunctionCall', 'name': 'print', 'range': [452, 457], 'children': [{'type': 'StringLiteral', 'value': '"Current run ID: {current_run_id}"', 'range': [455, 455], 'children': []}]}]}, {'type': 'WhileStatement', 'range': [459, 527], 'children': [{'type': 'Condition', 'range': [460, 461], 'children': [{'type': 'BooleanLiteral', 'value': 'True', 'range': [460, 460], 'children': []}]}, {'type': 'Block', 'range': [462, 527], 'children': [{'type': 'VariableDeclaration', 'name': 'data', 'range': [463, 470], 'children': [{'type': 'Assignment', 'range': [464, 470], 'children': [{'type': 'FunctionCall', 'name': 'make_api_request', 'range': [465, 470], 'children': [{'type': 'Identifier', 'name': 'endpoint', 'range': [467, 467], 'children': []}, {'type': 'Identifier', 'name': 'headers', 'range': [469, 469], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'check_runs', 'range': [473, 479], 'children': [{'type': 'Assignment', 'range': [474, 479], 'children': [{'type': 'MemberExpression', 'range': [474, 478], 'children': [{'type': 'Identifier', 'name': 'data', 'range': [474, 474], 'children': []}, {'type': 'StringLiteral', 'value': '"check_runs"', 'range': [477, 477], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'range': [481, 485], 'children': [{'type': 'FunctionCall', 'name': 'print', 'range': [481, 485], 'children': [{'type': 'StringLiteral', 'value': '"Processing check runs..."', 'range': [483, 483], 'children': []}]}]}, {'type': 'ExpressionStatement', 'range': [487, 491], 'children': [{'type': 'FunctionCall', 'name': 'print', 'range': [487, 491], 'children': [{'type': 'Identifier', 'name': 'check_runs', 'range': [489, 489], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'runs_in_progress, all_others_passed', 'range': [493, 501], 'children': [{'type': 'Assignment', 'range': [496, 501], 'children': [{'type': 'FunctionCall', 'name': 'process_check_runs', 'range': [497, 501], 'children': [{'type': 'Identifier', 'name': 'check_runs', 'range': [499, 499], 'children': []}]}]}]}, {'type': 'IfStatement', 'range': [503, 509], 'children': [{'type': 'Condition', 'range': [504, 506], 'children': [{'type': 'UnaryExpression', 'operator': 'not', 'range': [504, 505], 'children': [{'type': 'Identifier', 'name': 'runs_in_progress', 'range': [505, 505], 'children': []}]}]}, {'type': 'Block', 'range': [507, 509], 'children': [{'type': 'BreakStatement', 'range': [508, 509], 'children': []}]}]}, {'type': 'ExpressionStatement', 'range': [511, 519], 'children': [{'type': 'FunctionCall', 'name': 'print', 'range': [511, 519], 'children': [{'type': 'StringLiteral', 'value': '"Some check runs are still in progress. "', 'range': [514, 514], 'children': []}, {'type': 'StringLiteral', 'value': '"Waiting {CHECK_INTERVAL} seconds before checking again..."', 'range': [517, 517], 'children': []}]}]}, {'type': 'ExpressionStatement', 'range': [521, 527], 'children': [{'type': 'FunctionCall', 'name': 'time.sleep', 'range': [521, 527], 'children': [{'type': 'Identifier', 'name': 'CHECK_INTERVAL', 'range': [525, 525], 'children': []}]}]}]}]}, {'type': 'IfStatement', 'range': [529, 558], 'children': [{'type': 'Condition', 'range': [530, 531], 'children': [{'type': 'Identifier', 'name': 'all_others_passed', 'range': [530, 530], 'children': []}]}, {'type': 'Block', 'range': [532, 544], 'children': [{'type': 'ExpressionStatement', 'range': [533, 537], 'children': [{'type': 'FunctionCall', 'name': 'print', 'range': [533, 537], 'children': [{'type': 'StringLiteral', 'value': '"All other completed check runs have passed. This check passes."', 'range': [535, 535], 'children': []}]}]}, {'type': 'ExpressionStatement', 'range': [538, 544], 'children': [{'type': 'FunctionCall', 'name': 'sys.exit', 'range': [538, 544], 'children': [{'type': 'NumericLiteral', 'value': '0', 'range': [542, 542], 'children': []}]}]}]}, {'type': 'ElseStatement', 'range': [545, 558], 'children': [{'type': 'Block', 'range': [547, 558], 'children': [{'type': 'ExpressionStatement', 'range': [548, 552], 'children': [{'type': 'FunctionCall', 'name': 'print', 'range': [548, 552], 'children': [{'type': 'StringLiteral', 'value': '"Some check runs have failed or have not completed. This check fails."', 'range': [550, 550], 'children': []}]}]}, {'type': 'ExpressionStatement', 'range': [553, 558], 'children': [{'type': 'FunctionCall', 'name': 'sys.exit', 'range': [553, 558], 'children': [{'type': 'NumericLiteral', 'value': '1', 'range': [557, 557], 'children': []}]}]}]}]}]}]}]}]}
2025-01-08 09:18:29,235 - INFO - Starting Step 3: AST simplification
2025-01-08 09:18:34,593 - INFO - Step 5 result: {'type': 'Program', 'name': 'make_api_request', 'range': [181, 267], 'children': [{'type': 'FunctionDecl', 'name': 'make_api_request', 'range': [181, 267], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [183, 196], 'children': [{'type': 'Parameter', 'name': 'url', 'range': [184, 186], 'children': []}, {'type': 'Parameter', 'name': 'headers', 'range': [188, 195], 'children': []}]}, {'type': 'ReturnType', 'name': 'Dict', 'range': [197, 200], 'children': []}, {'type': 'Docstring', 'name': 'docstring', 'range': [202, 204], 'children': []}, {'type': 'TryStatement', 'name': 'try', 'range': [206, 266], 'children': [{'type': 'ExpressionStatement', 'name': 'print', 'range': [209, 214], 'children': [{'type': 'CallExpression', 'name': 'print', 'range': [209, 214], 'children': []}]}, {'type': 'AssignmentExpression', 'name': 'response', 'range': [216, 231], 'children': []}, {'type': 'CallExpression', 'name': 'raise_for_status', 'range': [233, 237], 'children': []}, {'type': 'ReturnStatement', 'name': 'return', 'range': [239, 244], 'children': []}, {'type': 'CatchClause', 'name': 'except', 'range': [246, 266], 'children': [{'type': 'ExpressionStatement', 'name': 'print', 'range': [254, 258], 'children': [{'type': 'CallExpression', 'name': 'print', 'range': [254, 258], 'children': []}]}, {'type': 'CallExpression', 'name': 'exit', 'range': [260, 265], 'children': []}]}]}]}]}
2025-01-08 09:18:34,594 - INFO - Completed main AST analysis flow
2025-01-08 09:18:34,594 - INFO - Successfully processed chunk
2025-01-08 09:18:43,820 - INFO - Step 5 result: {'nodes': [{'type': 'Program', 'name': 'MainOrSomething', 'range': [0, 28], 'children': [{'type': 'ImportDeclaration', 'name': 'json', 'range': [0, 2], 'children': [{'type': 'ImportSpecifier', 'name': 'json', 'range': [0, 2], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'os', 'range': [3, 5], 'children': [{'type': 'ImportSpecifier', 'name': 'os', 'range': [3, 5], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'requests', 'range': [6, 8], 'children': [{'type': 'ImportSpecifier', 'name': 'requests', 'range': [6, 8], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'sys', 'range': [9, 11], 'children': [{'type': 'ImportSpecifier', 'name': 'sys', 'range': [9, 11], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'time', 'range': [12, 14], 'children': [{'type': 'ImportSpecifier', 'name': 'time', 'range': [12, 14], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'Dict, List, Tuple', 'range': [15, 23], 'children': [{'type': 'ImportSpecifier', 'name': 'Dict', 'range': [18, 18], 'children': []}, {'type': 'ImportSpecifier', 'name': 'List', 'range': [20, 20], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Tuple', 'range': [22, 22], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'CHECK_INTERVAL', 'range': [25, 28], 'children': [{'type': 'VariableDeclarator', 'name': 'CHECK_INTERVAL', 'range': [25, 28], 'children': [{'type': 'Literal', 'name': '30', 'range': [27, 27], 'children': []}]}]}]}]}
2025-01-08 09:18:43,821 - INFO - Completed main AST analysis flow
2025-01-08 09:18:43,821 - INFO - Successfully processed chunk
2025-01-08 09:18:45,624 - INFO - Step 4 result: {'type': 'Program', 'name': 'get_environment_variables', 'range': [29, 180], 'children': [{'type': 'FunctionDecl', 'name': 'get_environment_variables', 'range': [29, 180], 'children': [{'type': 'FunctionSignature', 'name': 'get_environment_variables', 'range': [29, 47], 'children': [{'type': 'Keyword', 'name': 'def', 'range': [29, 32], 'children': []}, {'type': 'FunctionName', 'name': 'get_environment_variables', 'range': [30, 54], 'children': []}, {'type': 'ReturnType', 'name': 'Tuple[str, str, str, str, str]', 'range': [35, 46], 'children': []}]}, {'type': 'FunctionBody', 'name': 'get_environment_variables', 'range': [48, 180], 'children': [{'type': 'Docstring', 'name': 'Retrieve and return necessary environment variables.', 'range': [49, 51], 'children': []}, {'type': 'TryStatement', 'name': 'try', 'range': [53, 179], 'children': [{'type': 'WithStatement', 'name': 'with', 'range': [56, 78], 'children': [{'type': 'CallExpression', 'name': 'open', 'range': [57, 65], 'children': [{'type': 'AccessExpression', 'name': 'os.environ["GITHUB_EVENT_PATH"]', 'range': [59, 64], 'children': []}]}, {'type': 'AssignmentExpression', 'name': 'event = json.load(f)', 'range': [70, 77], 'children': []}]}, {'type': 'IfStatement', 'name': 'if', 'range': [89, 119], 'children': [{'type': 'Condition', 'name': '"pull_request" in event', 'range': [90, 92], 'children': []}, {'type': 'AssignmentExpression', 'name': 'sha = event["pull_request"]["head"]["sha"]', 'range': [95, 106], 'children': []}, {'type': 'ElseStatement', 'name': 'else', 'range': [108, 119], 'children': [{'type': 'AssignmentExpression', 'name': 'sha = os.environ["GITHUB_SHA"]', 'range': [111, 118], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [121, 159], 'children': [{'type': 'TupleExpression', 'name': '(os.environ["GITHUB_API_URL"], os.environ["GITHUB_REPOSITORY"], sha, os.environ["GITHUB_TOKEN"], os.environ["GITHUB_RUN_ID"])', 'range': [122, 158], 'children': []}]}]}, {'type': 'ExceptStatement', 'name': 'except', 'range': [161, 179], 'children': [{'type': 'ExceptionType', 'name': 'KeyError', 'range': [162, 169], 'children': []}, {'type': 'PrintStatement', 'name': 'print', 'range': [167, 171], 'children': []}, {'type': 'ExitStatement', 'name': 'sys.exit(1)', 'range': [173, 178], 'children': []}]}]}]}]}
2025-01-08 09:18:45,624 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:19:22,738 - INFO - Step 5 result: {'type': 'Program', 'name': 'get_environment_variables', 'range': [29, 180], 'children': [{'type': 'FunctionDecl', 'name': 'get_environment_variables', 'range': [29, 180], 'children': [{'type': 'FunctionSignature', 'name': 'get_environment_variables', 'range': [29, 47], 'children': [{'type': 'Keyword', 'name': 'def', 'range': [29, 32], 'children': []}, {'type': 'FunctionName', 'name': 'get_environment_variables', 'range': [30, 54], 'children': []}, {'type': 'ReturnType', 'name': 'Tuple[str, str, str, str, str]', 'range': [35, 46], 'children': []}]}, {'type': 'FunctionBody', 'name': 'get_environment_variables', 'range': [48, 180], 'children': [{'type': 'Docstring', 'name': 'Retrieve and return necessary environment variables.', 'range': [49, 51], 'children': []}, {'type': 'TryStatement', 'name': 'try', 'range': [53, 179], 'children': [{'type': 'WithStatement', 'name': 'with', 'range': [56, 78], 'children': [{'type': 'CallExpression', 'name': 'open', 'range': [57, 65], 'children': [{'type': 'AccessExpression', 'name': 'os.environ["GITHUB_EVENT_PATH"]', 'range': [59, 64], 'children': []}]}, {'type': 'AssignmentExpression', 'name': 'event = json.load(f)', 'range': [70, 77], 'children': []}]}, {'type': 'IfStatement', 'name': 'if', 'range': [89, 119], 'children': [{'type': 'Condition', 'name': '"pull_request" in event', 'range': [90, 92], 'children': []}, {'type': 'AssignmentExpression', 'name': 'sha = event["pull_request"]["head"]["sha"]', 'range': [95, 106], 'children': []}, {'type': 'ElseStatement', 'name': 'else', 'range': [108, 119], 'children': [{'type': 'AssignmentExpression', 'name': 'sha = os.environ["GITHUB_SHA"]', 'range': [111, 118], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [121, 159], 'children': [{'type': 'TupleExpression', 'name': '(os.environ["GITHUB_API_URL"], os.environ["GITHUB_REPOSITORY"], sha, os.environ["GITHUB_TOKEN"], os.environ["GITHUB_RUN_ID"])', 'range': [122, 158], 'children': []}]}]}, {'type': 'ExceptStatement', 'name': 'except', 'range': [161, 179], 'children': [{'type': 'ExceptionType', 'name': 'KeyError', 'range': [162, 169], 'children': []}, {'type': 'PrintStatement', 'name': 'print', 'range': [167, 171], 'children': []}, {'type': 'ExitStatement', 'name': 'sys.exit(1)', 'range': [173, 178], 'children': []}]}]}]}]}
2025-01-08 09:19:22,738 - INFO - Completed main AST analysis flow
2025-01-08 09:19:22,738 - INFO - Successfully processed chunk
2025-01-08 09:19:30,310 - INFO - Step 3 result: {'type': 'Program', 'name': 'process_check_runs', 'range': [268, 401], 'children': [{'type': 'FunctionDeclaration', 'name': 'process_check_runs', 'range': [268, 401], 'children': [{'type': 'Parameter', 'name': 'check_runs', 'range': [271, 276], 'children': [{'type': 'TypeAnnotation', 'name': 'List[Dict]', 'range': [273, 276], 'children': []}]}, {'type': 'ReturnType', 'name': 'Tuple[bool, bool]', 'range': [280, 285], 'children': []}, {'type': 'Docstring', 'name': '"Process check runs and return their status."', 'range': [288, 290], 'children': []}, {'type': 'VariableDeclaration', 'name': 'runs_in_progress', 'range': [292, 294], 'children': [{'type': 'Assignment', 'name': '=', 'range': [293, 294], 'children': [{'type': 'Literal', 'name': 'False', 'range': [294, 294], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'all_others_passed', 'range': [296, 298], 'children': [{'type': 'Assignment', 'name': '=', 'range': [297, 298], 'children': [{'type': 'Literal', 'name': 'True', 'range': [298, 298], 'children': []}]}]}, {'type': 'ForStatement', 'name': 'for', 'range': [301, 383], 'children': [{'type': 'VariableDeclaration', 'name': 'run', 'range': [302, 302], 'children': []}, {'type': 'Expression', 'name': 'in', 'range': [303, 304], 'children': [{'type': 'Identifier', 'name': 'check_runs', 'range': [304, 304], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [305, 383], 'children': [{'type': 'IfStatement', 'name': 'if', 'range': [307, 383], 'children': [{'type': 'Expression', 'name': '!=', 'range': [315, 317], 'children': [{'type': 'CallExpression', 'name': 'str', 'range': [308, 314], 'children': [{'type': 'MemberExpression', 'name': 'run["name"]', 'range': [310, 313], 'children': []}]}, {'type': 'Literal', 'name': '"Check PR Status"', 'range': [317, 317], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [318, 383], 'children': [{'type': 'VariableDeclaration', 'name': 'status', 'range': [320, 326], 'children': [{'type': 'Assignment', 'name': '=', 'range': [321, 326], 'children': [{'type': 'MemberExpression', 'name': 'run["status"]', 'range': [322, 325], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'conclusion', 'range': [327, 333], 'children': [{'type': 'Assignment', 'name': '=', 'range': [328, 333], 'children': [{'type': 'MemberExpression', 'name': 'run["conclusion"]', 'range': [329, 332], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if', 'range': [335, 383], 'children': [{'type': 'Expression', 'name': '==', 'range': [337, 339], 'children': [{'type': 'Identifier', 'name': 'status', 'range': [336, 336], 'children': []}, {'type': 'Literal', 'name': '"completed"', 'range': [339, 339], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [340, 383], 'children': [{'type': 'IfStatement', 'name': 'if', 'range': [342, 383], 'children': [{'type': 'Expression', 'name': 'not in', 'range': [344, 346], 'children': [{'type': 'Identifier', 'name': 'conclusion', 'range': [343, 343], 'children': []}, {'type': 'ArrayExpression', 'name': '', 'range': [346, 352], 'children': [{'type': 'Literal', 'name': '"success"', 'range': [347, 347], 'children': []}, {'type': 'Literal', 'name': '"skipped"', 'range': [349, 349], 'children': []}, {'type': 'Literal', 'name': '"neutral"', 'range': [351, 351], 'children': []}]}]}, {'type': 'BlockStatement', 'name': '', 'range': [353, 383], 'children': [{'type': 'ExpressionStatement', 'name': 'all_others_passed = False', 'range': [355, 357], 'children': []}, {'type': 'CallExpression', 'name': 'print', 'range': [359, 365], 'children': [{'type': 'TemplateLiteral', 'name': 'f"Check run {run[\'name\']} (ID: {run[\'id\']}) has conclusion: {conclusion}"', 'range': [362, 363], 'children': []}]}]}]}, {'type': 'ElseStatement', 'name': 'else', 'range': [367, 383], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [368, 383], 'children': [{'type': 'ExpressionStatement', 'name': 'runs_in_progress = True', 'range': [370, 372], 'children': []}, {'type': 'CallExpression', 'name': 'print', 'range': [374, 378], 'children': [{'type': 'TemplateLiteral', 'name': 'f"Check run {run[\'name\']} (ID: {run[\'id\']}) is still {status}."', 'range': [376, 377], 'children': []}]}, {'type': 'ExpressionStatement', 'name': 'all_others_passed = False', 'range': [380, 382], 'children': []}]}]}]}]}]}]}, {'type': 'ElseStatement', 'name': 'else', 'range': [384, 394], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [385, 394], 'children': [{'type': 'CallExpression', 'name': 'print', 'range': [387, 393], 'children': [{'type': 'TemplateLiteral', 'name': 'f"Skipping check run {run[\'name\']} (ID: {run[\'id\']}) as it is the current run."', 'range': [390, 391], 'children': []}]}]}]}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [396, 399], 'children': [{'type': 'Identifier', 'name': 'runs_in_progress', 'range': [397, 397], 'children': []}, {'type': 'Identifier', 'name': 'all_others_passed', 'range': [399, 399], 'children': []}]}]}]}
2025-01-08 09:19:30,311 - INFO - Starting Step 4: AST normalization
2025-01-08 09:20:09,153 - INFO - Step 3 result: {'type': 'Program', 'name': 'main', 'range': [402, 560], 'children': [{'type': 'FunctionDeclaration', 'name': 'main', 'range': [402, 560], 'children': [{'type': 'Block', 'range': [407, 560], 'children': [{'type': 'VariableDeclaration', 'name': 'api_url, repo, sha, github_token, current_run_id', 'range': [408, 420], 'children': [{'type': 'Assignment', 'range': [417, 420], 'children': [{'type': 'FunctionCall', 'name': 'get_environment_variables', 'range': [418, 420], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'endpoint', 'range': [423, 427], 'children': [{'type': 'Assignment', 'range': [424, 427], 'children': [{'type': 'StringLiteral', 'value': '"{api_url}/repos/{repo}/commits/{sha}/check-runs"', 'range': [426, 426], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'headers', 'range': [428, 437], 'children': [{'type': 'Assignment', 'range': [429, 437], 'children': [{'type': 'ObjectLiteral', 'range': [430, 437], 'children': [{'type': 'Property', 'name': '"Accept"', 'range': [432, 434], 'children': [{'type': 'StringLiteral', 'value': '"application/vnd.github.v3+json"', 'range': [434, 434], 'children': []}]}]}]}]}, {'type': 'IfStatement', 'range': [439, 450], 'children': [{'type': 'Condition', 'range': [440, 441], 'children': [{'type': 'Identifier', 'name': 'github_token', 'range': [440, 440], 'children': []}]}, {'type': 'Block', 'range': [442, 450], 'children': [{'type': 'Assignment', 'range': [443, 450], 'children': [{'type': 'MemberExpression', 'range': [443, 446], 'children': [{'type': 'Identifier', 'name': 'headers', 'range': [443, 443], 'children': []}, {'type': 'StringLiteral', 'value': '"Authorization"', 'range': [445, 445], 'children': []}]}, {'type': 'StringLiteral', 'value': '"token {github_token}"', 'range': [449, 449], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'range': [452, 457], 'children': [{'type': 'FunctionCall', 'name': 'print', 'range': [452, 457], 'children': [{'type': 'StringLiteral', 'value': '"Current run ID: {current_run_id}"', 'range': [455, 455], 'children': []}]}]}, {'type': 'WhileStatement', 'range': [459, 527], 'children': [{'type': 'Condition', 'range': [460, 461], 'children': [{'type': 'BooleanLiteral', 'value': 'True', 'range': [460, 460], 'children': []}]}, {'type': 'Block', 'range': [462, 527], 'children': [{'type': 'VariableDeclaration', 'name': 'data', 'range': [463, 470], 'children': [{'type': 'Assignment', 'range': [464, 470], 'children': [{'type': 'FunctionCall', 'name': 'make_api_request', 'range': [465, 470], 'children': [{'type': 'Identifier', 'name': 'endpoint', 'range': [467, 467], 'children': []}, {'type': 'Identifier', 'name': 'headers', 'range': [469, 469], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'check_runs', 'range': [473, 479], 'children': [{'type': 'Assignment', 'range': [474, 479], 'children': [{'type': 'MemberExpression', 'range': [474, 478], 'children': [{'type': 'Identifier', 'name': 'data', 'range': [474, 474], 'children': []}, {'type': 'StringLiteral', 'value': '"check_runs"', 'range': [477, 477], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'range': [481, 485], 'children': [{'type': 'FunctionCall', 'name': 'print', 'range': [481, 485], 'children': [{'type': 'StringLiteral', 'value': '"Processing check runs..."', 'range': [483, 483], 'children': []}]}]}, {'type': 'ExpressionStatement', 'range': [487, 491], 'children': [{'type': 'FunctionCall', 'name': 'print', 'range': [487, 491], 'children': [{'type': 'Identifier', 'name': 'check_runs', 'range': [489, 489], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'runs_in_progress, all_others_passed', 'range': [493, 501], 'children': [{'type': 'Assignment', 'range': [496, 501], 'children': [{'type': 'FunctionCall', 'name': 'process_check_runs', 'range': [497, 501], 'children': [{'type': 'Identifier', 'name': 'check_runs', 'range': [499, 499], 'children': []}]}]}]}, {'type': 'IfStatement', 'range': [503, 509], 'children': [{'type': 'Condition', 'range': [504, 506], 'children': [{'type': 'UnaryExpression', 'operator': 'not', 'range': [504, 505], 'children': [{'type': 'Identifier', 'name': 'runs_in_progress', 'range': [505, 505], 'children': []}]}]}, {'type': 'Block', 'range': [507, 509], 'children': [{'type': 'BreakStatement', 'range': [508, 509], 'children': []}]}]}, {'type': 'ExpressionStatement', 'range': [511, 519], 'children': [{'type': 'FunctionCall', 'name': 'print', 'range': [511, 519], 'children': [{'type': 'StringLiteral', 'value': '"Some check runs are still in progress. "', 'range': [514, 514], 'children': []}, {'type': 'StringLiteral', 'value': '"Waiting {CHECK_INTERVAL} seconds before checking again..."', 'range': [517, 517], 'children': []}]}]}, {'type': 'ExpressionStatement', 'range': [521, 527], 'children': [{'type': 'FunctionCall', 'name': 'time.sleep', 'range': [521, 527], 'children': [{'type': 'Identifier', 'name': 'CHECK_INTERVAL', 'range': [525, 525], 'children': []}]}]}]}]}, {'type': 'IfStatement', 'range': [529, 558], 'children': [{'type': 'Condition', 'range': [530, 531], 'children': [{'type': 'Identifier', 'name': 'all_others_passed', 'range': [530, 530], 'children': []}]}, {'type': 'Block', 'range': [532, 544], 'children': [{'type': 'ExpressionStatement', 'range': [533, 537], 'children': [{'type': 'FunctionCall', 'name': 'print', 'range': [533, 537], 'children': [{'type': 'StringLiteral', 'value': '"All other completed check runs have passed. This check passes."', 'range': [535, 535], 'children': []}]}]}, {'type': 'ExpressionStatement', 'range': [538, 544], 'children': [{'type': 'FunctionCall', 'name': 'sys.exit', 'range': [538, 544], 'children': [{'type': 'NumericLiteral', 'value': '0', 'range': [542, 542], 'children': []}]}]}]}, {'type': 'ElseStatement', 'range': [545, 558], 'children': [{'type': 'Block', 'range': [547, 558], 'children': [{'type': 'ExpressionStatement', 'range': [548, 552], 'children': [{'type': 'FunctionCall', 'name': 'print', 'range': [548, 552], 'children': [{'type': 'StringLiteral', 'value': '"Some check runs have failed or have not completed. This check fails."', 'range': [550, 550], 'children': []}]}]}, {'type': 'ExpressionStatement', 'range': [553, 558], 'children': [{'type': 'FunctionCall', 'name': 'sys.exit', 'range': [553, 558], 'children': [{'type': 'NumericLiteral', 'value': '1', 'range': [557, 557], 'children': []}]}]}]}]}]}]}]}]}
2025-01-08 09:20:09,154 - INFO - Starting Step 4: AST normalization
2025-01-08 09:20:49,139 - INFO - Step 4 result: {'type': 'Program', 'name': 'process_check_runs', 'range': [268, 401], 'children': [{'type': 'FunctionDecl', 'name': 'process_check_runs', 'range': [268, 401], 'children': [{'type': 'Parameter', 'name': 'check_runs', 'range': [271, 276], 'children': [{'type': 'TypeAnnotation', 'name': 'List[Dict]', 'range': [273, 276], 'children': []}]}, {'type': 'ReturnType', 'name': 'Tuple[bool, bool]', 'range': [280, 285], 'children': []}, {'type': 'Docstring', 'name': '"Process check runs and return their status."', 'range': [288, 290], 'children': []}, {'type': 'VariableDecl', 'name': 'runs_in_progress', 'range': [292, 294], 'children': [{'type': 'Assignment', 'name': '=', 'range': [293, 294], 'children': [{'type': 'Literal', 'name': 'False', 'range': [294, 294], 'children': []}]}]}, {'type': 'VariableDecl', 'name': 'all_others_passed', 'range': [296, 298], 'children': [{'type': 'Assignment', 'name': '=', 'range': [297, 298], 'children': [{'type': 'Literal', 'name': 'True', 'range': [298, 298], 'children': []}]}]}, {'type': 'ForStatement', 'name': 'for', 'range': [301, 383], 'children': [{'type': 'VariableDecl', 'name': 'run', 'range': [302, 302], 'children': []}, {'type': 'BinaryExpression', 'name': 'in', 'range': [303, 304], 'children': [{'type': 'Identifier', 'name': 'check_runs', 'range': [304, 304], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [305, 383], 'children': [{'type': 'IfStatement', 'name': 'if', 'range': [307, 383], 'children': [{'type': 'BinaryExpression', 'name': '!=', 'range': [315, 317], 'children': [{'type': 'CallExpression', 'name': 'str', 'range': [308, 314], 'children': [{'type': 'MemberExpression', 'name': 'run["name"]', 'range': [310, 313], 'children': []}]}, {'type': 'Literal', 'name': '"Check PR Status"', 'range': [317, 317], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [318, 383], 'children': [{'type': 'VariableDecl', 'name': 'status', 'range': [320, 326], 'children': [{'type': 'Assignment', 'name': '=', 'range': [321, 326], 'children': [{'type': 'MemberExpression', 'name': 'run["status"]', 'range': [322, 325], 'children': []}]}]}, {'type': 'VariableDecl', 'name': 'conclusion', 'range': [327, 333], 'children': [{'type': 'Assignment', 'name': '=', 'range': [328, 333], 'children': [{'type': 'MemberExpression', 'name': 'run["conclusion"]', 'range': [329, 332], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if', 'range': [335, 383], 'children': [{'type': 'BinaryExpression', 'name': '==', 'range': [337, 339], 'children': [{'type': 'Identifier', 'name': 'status', 'range': [336, 336], 'children': []}, {'type': 'Literal', 'name': '"completed"', 'range': [339, 339], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [340, 383], 'children': [{'type': 'IfStatement', 'name': 'if', 'range': [342, 383], 'children': [{'type': 'BinaryExpression', 'name': 'not in', 'range': [344, 346], 'children': [{'type': 'Identifier', 'name': 'conclusion', 'range': [343, 343], 'children': []}, {'type': 'ArrayExpression', 'name': '', 'range': [346, 352], 'children': [{'type': 'Literal', 'name': '"success"', 'range': [347, 347], 'children': []}, {'type': 'Literal', 'name': '"skipped"', 'range': [349, 349], 'children': []}, {'type': 'Literal', 'name': '"neutral"', 'range': [351, 351], 'children': []}]}]}, {'type': 'BlockStatement', 'name': '', 'range': [353, 383], 'children': [{'type': 'ExpressionStatement', 'name': 'all_others_passed = False', 'range': [355, 357], 'children': []}, {'type': 'CallExpression', 'name': 'print', 'range': [359, 365], 'children': [{'type': 'TemplateLiteral', 'name': 'f"Check run {run[\'name\']} (ID: {run[\'id\']}) has conclusion: {conclusion}"', 'range': [362, 363], 'children': []}]}]}]}, {'type': 'ElseStatement', 'name': 'else', 'range': [367, 383], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [368, 383], 'children': [{'type': 'ExpressionStatement', 'name': 'runs_in_progress = True', 'range': [370, 372], 'children': []}, {'type': 'CallExpression', 'name': 'print', 'range': [374, 378], 'children': [{'type': 'TemplateLiteral', 'name': 'f"Check run {run[\'name\']} (ID: {run[\'id\']}) is still {status}."', 'range': [376, 377], 'children': []}]}, {'type': 'ExpressionStatement', 'name': 'all_others_passed = False', 'range': [380, 382], 'children': []}]}]}]}]}]}]}, {'type': 'ElseStatement', 'name': 'else', 'range': [384, 394], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [385, 394], 'children': [{'type': 'CallExpression', 'name': 'print', 'range': [387, 393], 'children': [{'type': 'TemplateLiteral', 'name': 'f"Skipping check run {run[\'name\']} (ID: {run[\'id\']}) as it is the current run."', 'range': [390, 391], 'children': []}]}]}]}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [396, 399], 'children': [{'type': 'Identifier', 'name': 'runs_in_progress', 'range': [397, 397], 'children': []}, {'type': 'Identifier', 'name': 'all_others_passed', 'range': [399, 399], 'children': []}]}]}]}
2025-01-08 09:20:49,140 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:21:40,801 - INFO - Step 4 result: {'type': 'Program', 'name': 'main', 'range': [402, 560], 'children': [{'type': 'FunctionDecl', 'name': 'main', 'range': [402, 560], 'children': [{'type': 'BlockStatement', 'range': [407, 560], 'children': [{'type': 'VariableDecl', 'name': 'api_url, repo, sha, github_token, current_run_id', 'range': [408, 420], 'children': [{'type': 'AssignmentExpression', 'range': [417, 420], 'children': [{'type': 'CallExpression', 'name': 'get_environment_variables', 'range': [418, 420], 'children': []}]}]}, {'type': 'VariableDecl', 'name': 'endpoint', 'range': [423, 427], 'children': [{'type': 'AssignmentExpression', 'range': [424, 427], 'children': [{'type': 'Literal', 'value': '"{api_url}/repos/{repo}/commits/{sha}/check-runs"', 'range': [426, 426], 'children': []}]}]}, {'type': 'VariableDecl', 'name': 'headers', 'range': [428, 437], 'children': [{'type': 'AssignmentExpression', 'range': [429, 437], 'children': [{'type': 'ObjectExpression', 'range': [430, 437], 'children': [{'type': 'Property', 'name': '"Accept"', 'range': [432, 434], 'children': [{'type': 'Literal', 'value': '"application/vnd.github.v3+json"', 'range': [434, 434], 'children': []}]}]}]}]}, {'type': 'IfStatement', 'range': [439, 450], 'children': [{'type': 'Condition', 'range': [440, 441], 'children': [{'type': 'Identifier', 'name': 'github_token', 'range': [440, 440], 'children': []}]}, {'type': 'BlockStatement', 'range': [442, 450], 'children': [{'type': 'AssignmentExpression', 'range': [443, 450], 'children': [{'type': 'MemberExpression', 'range': [443, 446], 'children': [{'type': 'Identifier', 'name': 'headers', 'range': [443, 443], 'children': []}, {'type': 'Literal', 'value': '"Authorization"', 'range': [445, 445], 'children': []}]}, {'type': 'Literal', 'value': '"token {github_token}"', 'range': [449, 449], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'range': [452, 457], 'children': [{'type': 'CallExpression', 'name': 'print', 'range': [452, 457], 'children': [{'type': 'Literal', 'value': '"Current run ID: {current_run_id}"', 'range': [455, 455], 'children': []}]}]}, {'type': 'WhileStatement', 'range': [459, 527], 'children': [{'type': 'Condition', 'range': [460, 461], 'children': [{'type': 'Literal', 'value': 'True', 'range': [460, 460], 'children': []}]}, {'type': 'BlockStatement', 'range': [462, 527], 'children': [{'type': 'VariableDecl', 'name': 'data', 'range': [463, 470], 'children': [{'type': 'AssignmentExpression', 'range': [464, 470], 'children': [{'type': 'CallExpression', 'name': 'make_api_request', 'range': [465, 470], 'children': [{'type': 'Identifier', 'name': 'endpoint', 'range': [467, 467], 'children': []}, {'type': 'Identifier', 'name': 'headers', 'range': [469, 469], 'children': []}]}]}]}, {'type': 'VariableDecl', 'name': 'check_runs', 'range': [473, 479], 'children': [{'type': 'AssignmentExpression', 'range': [474, 479], 'children': [{'type': 'MemberExpression', 'range': [474, 478], 'children': [{'type': 'Identifier', 'name': 'data', 'range': [474, 474], 'children': []}, {'type': 'Literal', 'value': '"check_runs"', 'range': [477, 477], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'range': [481, 485], 'children': [{'type': 'CallExpression', 'name': 'print', 'range': [481, 485], 'children': [{'type': 'Literal', 'value': '"Processing check runs..."', 'range': [483, 483], 'children': []}]}]}, {'type': 'ExpressionStatement', 'range': [487, 491], 'children': [{'type': 'CallExpression', 'name': 'print', 'range': [487, 491], 'children': [{'type': 'Identifier', 'name': 'check_runs', 'range': [489, 489], 'children': []}]}]}, {'type': 'VariableDecl', 'name': 'runs_in_progress, all_others_passed', 'range': [493, 501], 'children': [{'type': 'AssignmentExpression', 'range': [496, 501], 'children': [{'type': 'CallExpression', 'name': 'process_check_runs', 'range': [497, 501], 'children': [{'type': 'Identifier', 'name': 'check_runs', 'range': [499, 499], 'children': []}]}]}]}, {'type': 'IfStatement', 'range': [503, 509], 'children': [{'type': 'Condition', 'range': [504, 506], 'children': [{'type': 'UnaryExpression', 'operator': 'not', 'range': [504, 505], 'children': [{'type': 'Identifier', 'name': 'runs_in_progress', 'range': [505, 505], 'children': []}]}]}, {'type': 'BlockStatement', 'range': [507, 509], 'children': [{'type': 'BreakStatement', 'range': [508, 509], 'children': []}]}]}, {'type': 'ExpressionStatement', 'range': [511, 519], 'children': [{'type': 'CallExpression', 'name': 'print', 'range': [511, 519], 'children': [{'type': 'Literal', 'value': '"Some check runs are still in progress. "', 'range': [514, 514], 'children': []}, {'type': 'Literal', 'value': '"Waiting {CHECK_INTERVAL} seconds before checking again..."', 'range': [517, 517], 'children': []}]}]}, {'type': 'ExpressionStatement', 'range': [521, 527], 'children': [{'type': 'CallExpression', 'name': 'time.sleep', 'range': [521, 527], 'children': [{'type': 'Identifier', 'name': 'CHECK_INTERVAL', 'range': [525, 525], 'children': []}]}]}]}]}, {'type': 'IfStatement', 'range': [529, 558], 'children': [{'type': 'Condition', 'range': [530, 531], 'children': [{'type': 'Identifier', 'name': 'all_others_passed', 'range': [530, 530], 'children': []}]}, {'type': 'BlockStatement', 'range': [532, 544], 'children': [{'type': 'ExpressionStatement', 'range': [533, 537], 'children': [{'type': 'CallExpression', 'name': 'print', 'range': [533, 537], 'children': [{'type': 'Literal', 'value': '"All other completed check runs have passed. This check passes."', 'range': [535, 535], 'children': []}]}]}, {'type': 'ExpressionStatement', 'range': [538, 544], 'children': [{'type': 'CallExpression', 'name': 'sys.exit', 'range': [538, 544], 'children': [{'type': 'Literal', 'value': '0', 'range': [542, 542], 'children': []}]}]}]}, {'type': 'ElseStatement', 'range': [545, 558], 'children': [{'type': 'BlockStatement', 'range': [547, 558], 'children': [{'type': 'ExpressionStatement', 'range': [548, 552], 'children': [{'type': 'CallExpression', 'name': 'print', 'range': [548, 552], 'children': [{'type': 'Literal', 'value': '"Some check runs have failed or have not completed. This check fails."', 'range': [550, 550], 'children': []}]}]}, {'type': 'ExpressionStatement', 'range': [553, 558], 'children': [{'type': 'CallExpression', 'name': 'sys.exit', 'range': [553, 558], 'children': [{'type': 'Literal', 'value': '1', 'range': [557, 557], 'children': []}]}]}]}]}]}]}]}]}
2025-01-08 09:21:40,801 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:22:00,819 - INFO - Step 5 result: {'type': 'Program', 'name': 'process_check_runs', 'range': [268, 401], 'children': [{'type': 'FunctionDecl', 'name': 'process_check_runs', 'range': [268, 401], 'children': [{'type': 'Parameter', 'name': 'check_runs', 'range': [271, 276], 'children': [{'type': 'TypeAnnotation', 'name': 'List[Dict]', 'range': [273, 276], 'children': []}]}, {'type': 'ReturnType', 'name': 'Tuple[bool, bool]', 'range': [280, 285], 'children': []}, {'type': 'Docstring', 'name': '"Process check runs and return their status."', 'range': [288, 290], 'children': []}, {'type': 'VariableDecl', 'name': 'runs_in_progress', 'range': [292, 294], 'children': [{'type': 'Assignment', 'name': '=', 'range': [293, 294], 'children': [{'type': 'Literal', 'name': 'False', 'range': [294, 294], 'children': []}]}]}, {'type': 'VariableDecl', 'name': 'all_others_passed', 'range': [296, 298], 'children': [{'type': 'Assignment', 'name': '=', 'range': [297, 298], 'children': [{'type': 'Literal', 'name': 'True', 'range': [298, 298], 'children': []}]}]}, {'type': 'ForStatement', 'name': 'for', 'range': [301, 383], 'children': [{'type': 'VariableDecl', 'name': 'run', 'range': [302, 302], 'children': []}, {'type': 'BinaryExpression', 'name': 'in', 'range': [303, 304], 'children': [{'type': 'Identifier', 'name': 'check_runs', 'range': [304, 304], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [305, 383], 'children': [{'type': 'IfStatement', 'name': 'if', 'range': [307, 383], 'children': [{'type': 'BinaryExpression', 'name': '!=', 'range': [315, 317], 'children': [{'type': 'CallExpression', 'name': 'str', 'range': [308, 314], 'children': [{'type': 'MemberExpression', 'name': 'run["name"]', 'range': [310, 313], 'children': []}]}, {'type': 'Literal', 'name': '"Check PR Status"', 'range': [317, 317], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [318, 383], 'children': [{'type': 'VariableDecl', 'name': 'status', 'range': [320, 326], 'children': [{'type': 'Assignment', 'name': '=', 'range': [321, 326], 'children': [{'type': 'MemberExpression', 'name': 'run["status"]', 'range': [322, 325], 'children': []}]}]}, {'type': 'VariableDecl', 'name': 'conclusion', 'range': [327, 333], 'children': [{'type': 'Assignment', 'name': '=', 'range': [328, 333], 'children': [{'type': 'MemberExpression', 'name': 'run["conclusion"]', 'range': [329, 332], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if', 'range': [335, 383], 'children': [{'type': 'BinaryExpression', 'name': '==', 'range': [337, 339], 'children': [{'type': 'Identifier', 'name': 'status', 'range': [336, 336], 'children': []}, {'type': 'Literal', 'name': '"completed"', 'range': [339, 339], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [340, 383], 'children': [{'type': 'IfStatement', 'name': 'if', 'range': [342, 383], 'children': [{'type': 'BinaryExpression', 'name': 'not in', 'range': [344, 346], 'children': [{'type': 'Identifier', 'name': 'conclusion', 'range': [343, 343], 'children': []}, {'type': 'ArrayExpression', 'name': '', 'range': [346, 352], 'children': [{'type': 'Literal', 'name': '"success"', 'range': [347, 347], 'children': []}, {'type': 'Literal', 'name': '"skipped"', 'range': [349, 349], 'children': []}, {'type': 'Literal', 'name': '"neutral"', 'range': [351, 351], 'children': []}]}]}, {'type': 'BlockStatement', 'name': '', 'range': [353, 383], 'children': [{'type': 'ExpressionStatement', 'name': 'all_others_passed = False', 'range': [355, 357], 'children': []}, {'type': 'CallExpression', 'name': 'print', 'range': [359, 365], 'children': [{'type': 'TemplateLiteral', 'name': 'f"Check run {run[\'name\']} (ID: {run[\'id\']}) has conclusion: {conclusion}"', 'range': [362, 363], 'children': []}]}]}]}, {'type': 'ElseStatement', 'name': 'else', 'range': [367, 383], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [368, 383], 'children': [{'type': 'ExpressionStatement', 'name': 'runs_in_progress = True', 'range': [370, 372], 'children': []}, {'type': 'CallExpression', 'name': 'print', 'range': [374, 378], 'children': [{'type': 'TemplateLiteral', 'name': 'f"Check run {run[\'name\']} (ID: {run[\'id\']}) is still {status}."', 'range': [376, 377], 'children': []}]}, {'type': 'ExpressionStatement', 'name': 'all_others_passed = False', 'range': [380, 382], 'children': []}]}]}]}]}]}]}, {'type': 'ElseStatement', 'name': 'else', 'range': [384, 394], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [385, 394], 'children': [{'type': 'CallExpression', 'name': 'print', 'range': [387, 393], 'children': [{'type': 'TemplateLiteral', 'name': 'f"Skipping check run {run[\'name\']} (ID: {run[\'id\']}) as it is the current run."', 'range': [390, 391], 'children': []}]}]}]}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [396, 399], 'children': [{'type': 'Identifier', 'name': 'runs_in_progress', 'range': [397, 397], 'children': []}, {'type': 'Identifier', 'name': 'all_others_passed', 'range': [399, 399], 'children': []}]}]}]}
2025-01-08 09:22:00,819 - INFO - Completed main AST analysis flow
2025-01-08 09:22:00,820 - INFO - Successfully processed chunk
2025-01-08 09:23:11,908 - INFO - Step 5 result: {'type': 'Program', 'name': 'main', 'range': [402, 560], 'children': [{'type': 'FunctionDecl', 'name': 'main', 'range': [402, 560], 'children': [{'type': 'BlockStatement', 'range': [407, 560], 'children': [{'type': 'VariableDecl', 'name': 'api_url, repo, sha, github_token, current_run_id', 'range': [408, 420], 'children': [{'type': 'AssignmentExpression', 'range': [417, 420], 'children': [{'type': 'CallExpression', 'name': 'get_environment_variables', 'range': [418, 420], 'children': []}]}]}, {'type': 'VariableDecl', 'name': 'endpoint', 'range': [423, 427], 'children': [{'type': 'AssignmentExpression', 'range': [424, 427], 'children': [{'type': 'Literal', 'value': '"{api_url}/repos/{repo}/commits/{sha}/check-runs"', 'range': [426, 426], 'children': []}]}]}, {'type': 'VariableDecl', 'name': 'headers', 'range': [428, 437], 'children': [{'type': 'AssignmentExpression', 'range': [429, 437], 'children': [{'type': 'ObjectExpression', 'range': [430, 437], 'children': [{'type': 'Property', 'name': '"Accept"', 'range': [432, 434], 'children': [{'type': 'Literal', 'value': '"application/vnd.github.v3+json"', 'range': [434, 434], 'children': []}]}]}]}]}, {'type': 'IfStatement', 'range': [439, 450], 'children': [{'type': 'Condition', 'range': [440, 441], 'children': [{'type': 'Identifier', 'name': 'github_token', 'range': [440, 440], 'children': []}]}, {'type': 'BlockStatement', 'range': [442, 450], 'children': [{'type': 'AssignmentExpression', 'range': [443, 450], 'children': [{'type': 'MemberExpression', 'range': [443, 446], 'children': [{'type': 'Identifier', 'name': 'headers', 'range': [443, 443], 'children': []}, {'type': 'Literal', 'value': '"Authorization"', 'range': [445, 445], 'children': []}]}, {'type': 'Literal', 'value': '"token {github_token}"', 'range': [449, 449], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'range': [452, 457], 'children': [{'type': 'CallExpression', 'name': 'print', 'range': [452, 457], 'children': [{'type': 'Literal', 'value': '"Current run ID: {current_run_id}"', 'range': [455, 455], 'children': []}]}]}, {'type': 'WhileStatement', 'range': [459, 527], 'children': [{'type': 'Condition', 'range': [460, 461], 'children': [{'type': 'Literal', 'value': 'True', 'range': [460, 460], 'children': []}]}, {'type': 'BlockStatement', 'range': [462, 527], 'children': [{'type': 'VariableDecl', 'name': 'data', 'range': [463, 470], 'children': [{'type': 'AssignmentExpression', 'range': [464, 470], 'children': [{'type': 'CallExpression', 'name': 'make_api_request', 'range': [465, 470], 'children': [{'type': 'Identifier', 'name': 'endpoint', 'range': [467, 467], 'children': []}, {'type': 'Identifier', 'name': 'headers', 'range': [469, 469], 'children': []}]}]}]}, {'type': 'VariableDecl', 'name': 'check_runs', 'range': [473, 479], 'children': [{'type': 'AssignmentExpression', 'range': [474, 479], 'children': [{'type': 'MemberExpression', 'range': [474, 478], 'children': [{'type': 'Identifier', 'name': 'data', 'range': [474, 474], 'children': []}, {'type': 'Literal', 'value': '"check_runs"', 'range': [477, 477], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'range': [481, 485], 'children': [{'type': 'CallExpression', 'name': 'print', 'range': [481, 485], 'children': [{'type': 'Literal', 'value': '"Processing check runs..."', 'range': [483, 483], 'children': []}]}]}, {'type': 'ExpressionStatement', 'range': [487, 491], 'children': [{'type': 'CallExpression', 'name': 'print', 'range': [487, 491], 'children': [{'type': 'Identifier', 'name': 'check_runs', 'range': [489, 489], 'children': []}]}]}, {'type': 'VariableDecl', 'name': 'runs_in_progress, all_others_passed', 'range': [493, 501], 'children': [{'type': 'AssignmentExpression', 'range': [496, 501], 'children': [{'type': 'CallExpression', 'name': 'process_check_runs', 'range': [497, 501], 'children': [{'type': 'Identifier', 'name': 'check_runs', 'range': [499, 499], 'children': []}]}]}]}, {'type': 'IfStatement', 'range': [503, 509], 'children': [{'type': 'Condition', 'range': [504, 506], 'children': [{'type': 'UnaryExpression', 'operator': 'not', 'range': [504, 505], 'children': [{'type': 'Identifier', 'name': 'runs_in_progress', 'range': [505, 505], 'children': []}]}]}, {'type': 'BlockStatement', 'range': [507, 509], 'children': [{'type': 'BreakStatement', 'range': [508, 509], 'children': []}]}]}, {'type': 'ExpressionStatement', 'range': [511, 519], 'children': [{'type': 'CallExpression', 'name': 'print', 'range': [511, 519], 'children': [{'type': 'Literal', 'value': '"Some check runs are still in progress. "', 'range': [514, 514], 'children': []}, {'type': 'Literal', 'value': '"Waiting {CHECK_INTERVAL} seconds before checking again..."', 'range': [517, 517], 'children': []}]}]}, {'type': 'ExpressionStatement', 'range': [521, 527], 'children': [{'type': 'CallExpression', 'name': 'time.sleep', 'range': [521, 527], 'children': [{'type': 'Identifier', 'name': 'CHECK_INTERVAL', 'range': [525, 525], 'children': []}]}]}]}]}, {'type': 'IfStatement', 'range': [529, 558], 'children': [{'type': 'Condition', 'range': [530, 531], 'children': [{'type': 'Identifier', 'name': 'all_others_passed', 'range': [530, 530], 'children': []}]}, {'type': 'BlockStatement', 'range': [532, 544], 'children': [{'type': 'ExpressionStatement', 'range': [533, 537], 'children': [{'type': 'CallExpression', 'name': 'print', 'range': [533, 537], 'children': [{'type': 'Literal', 'value': '"All other completed check runs have passed. This check passes."', 'range': [535, 535], 'children': []}]}]}, {'type': 'ExpressionStatement', 'range': [538, 544], 'children': [{'type': 'CallExpression', 'name': 'sys.exit', 'range': [538, 544], 'children': [{'type': 'Literal', 'value': '0', 'range': [542, 542], 'children': []}]}]}]}, {'type': 'ElseStatement', 'range': [545, 558], 'children': [{'type': 'BlockStatement', 'range': [547, 558], 'children': [{'type': 'ExpressionStatement', 'range': [548, 552], 'children': [{'type': 'CallExpression', 'name': 'print', 'range': [548, 552], 'children': [{'type': 'Literal', 'value': '"Some check runs have failed or have not completed. This check fails."', 'range': [550, 550], 'children': []}]}]}, {'type': 'ExpressionStatement', 'range': [553, 558], 'children': [{'type': 'CallExpression', 'name': 'sys.exit', 'range': [553, 558], 'children': [{'type': 'Literal', 'value': '1', 'range': [557, 557], 'children': []}]}]}]}]}]}]}]}]}
2025-01-08 09:23:11,908 - INFO - Completed main AST analysis flow
2025-01-08 09:23:11,911 - INFO - Successfully processed chunk
2025-01-08 09:23:11,950 - INFO - Starting code generation from AST
2025-01-08 09:53:13,732 - ERROR - Error in get_code_from_ast: Expecting value: line 30 column 1 (char 29)
2025-01-08 09:53:13,733 - INFO - Starting static code similarity comparison
2025-01-08 09:53:13,736 - INFO - Static similarity result: {'final_score': 20.91, 'length_similarity': 0.0, 'token_similarity': 0.0, 'structure_similarity': 0.0, 'function_similarity': 100, 'complexity_similarity': 9.09, 'variable_similarity': 100}
