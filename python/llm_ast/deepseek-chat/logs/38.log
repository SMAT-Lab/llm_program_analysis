2025-01-08 10:27:27,242 - INFO - Processing sample 38
2025-01-08 10:27:27,242 - INFO - Starting Step 0: Splitting code into top-level declarations
2025-01-08 10:27:48,908 - INFO - Successfully split code into 23 top-level declarations
2025-01-08 10:27:50,341 - INFO - Processing chunk #0 (size=785 chars, start_index=0)
2025-01-08 10:27:50,342 - INFO - Processing chunk with 785 chars starting at index 0
2025-01-08 10:27:50,342 - INFO - Starting main AST analysis flow
2025-01-08 10:27:50,342 - INFO - Tokenized code into 144 tokens
2025-01-08 10:27:50,342 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:50,343 - INFO - Processing chunk #1 (size=557 chars, start_index=144)
2025-01-08 10:27:50,348 - INFO - Processing chunk with 557 chars starting at index 144
2025-01-08 10:27:50,349 - INFO - Processing chunk #2 (size=254 chars, start_index=266)
2025-01-08 10:27:50,349 - INFO - Starting main AST analysis flow
2025-01-08 10:27:50,350 - INFO - Processing chunk with 254 chars starting at index 266
2025-01-08 10:27:50,353 - INFO - Processing chunk #3 (size=1685 chars, start_index=335)
2025-01-08 10:27:50,354 - INFO - Tokenized code into 122 tokens
2025-01-08 10:27:50,367 - INFO - Starting main AST analysis flow
2025-01-08 10:27:50,370 - INFO - Processing chunk with 1685 chars starting at index 335
2025-01-08 10:27:50,373 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:50,378 - INFO - Tokenized code into 69 tokens
2025-01-08 10:27:50,381 - INFO - Starting main AST analysis flow
2025-01-08 10:27:50,389 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:50,398 - INFO - Tokenized code into 327 tokens
2025-01-08 10:27:50,410 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:50,460 - INFO - Processing chunk #4 (size=65 chars, start_index=662)
2025-01-08 10:27:50,460 - INFO - Processing chunk with 65 chars starting at index 662
2025-01-08 10:27:50,460 - INFO - Starting main AST analysis flow
2025-01-08 10:27:50,461 - INFO - Tokenized code into 20 tokens
2025-01-08 10:27:50,461 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:50,464 - INFO - Processing chunk #5 (size=1216 chars, start_index=682)
2025-01-08 10:27:50,466 - INFO - Processing chunk with 1216 chars starting at index 682
2025-01-08 10:27:50,466 - INFO - Starting main AST analysis flow
2025-01-08 10:27:50,467 - INFO - Tokenized code into 222 tokens
2025-01-08 10:27:50,467 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:50,477 - INFO - Processing chunk #6 (size=1952 chars, start_index=904)
2025-01-08 10:27:50,489 - INFO - Processing chunk with 1952 chars starting at index 904
2025-01-08 10:27:50,493 - INFO - Processing chunk #7 (size=8862 chars, start_index=1323)
2025-01-08 10:27:50,496 - INFO - Starting main AST analysis flow
2025-01-08 10:27:50,502 - INFO - Processing chunk #8 (size=65 chars, start_index=2895)
2025-01-08 10:27:50,504 - INFO - Processing chunk with 8862 chars starting at index 1323
2025-01-08 10:27:50,506 - INFO - Processing chunk #9 (size=214 chars, start_index=2944)
2025-01-08 10:27:50,514 - INFO - Tokenized code into 419 tokens
2025-01-08 10:27:50,514 - INFO - Processing chunk #10 (size=464 chars, start_index=2994)
2025-01-08 10:27:50,515 - INFO - Processing chunk with 65 chars starting at index 2895
2025-01-08 10:27:50,520 - INFO - Processing chunk #11 (size=1142 chars, start_index=3097)
2025-01-08 10:27:50,523 - INFO - Starting main AST analysis flow
2025-01-08 10:27:50,525 - INFO - Processing chunk #12 (size=281 chars, start_index=3262)
2025-01-08 10:27:50,534 - INFO - Processing chunk with 214 chars starting at index 2944
2025-01-08 10:27:50,534 - INFO - Processing chunk #13 (size=275 chars, start_index=3325)
2025-01-08 10:27:50,540 - INFO - Processing chunk #14 (size=1009 chars, start_index=3383)
2025-01-08 10:27:50,541 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:50,549 - INFO - Processing chunk with 464 chars starting at index 2994
2025-01-08 10:27:50,554 - INFO - Processing chunk #15 (size=773 chars, start_index=3557)
2025-01-08 10:27:50,557 - INFO - Starting main AST analysis flow
2025-01-08 10:27:51,105 - INFO - Tokenized code into 49 tokens
2025-01-08 10:27:51,105 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:50,562 - INFO - Processing chunk #16 (size=385 chars, start_index=3714)
2025-01-08 10:27:50,571 - INFO - Processing chunk with 281 chars starting at index 3262
2025-01-08 10:27:50,576 - INFO - Processing chunk #17 (size=307 chars, start_index=3801)
2025-01-08 10:27:50,578 - INFO - Starting main AST analysis flow
2025-01-08 10:27:50,580 - INFO - Processing chunk #18 (size=379 chars, start_index=3860)
2025-01-08 10:27:50,585 - INFO - Processing chunk #19 (size=1377 chars, start_index=3936)
2025-01-08 10:27:50,590 - INFO - Processing chunk #20 (size=66 chars, start_index=4193)
2025-01-08 10:27:51,180 - INFO - Processing chunk with 66 chars starting at index 4193
2025-01-08 10:27:50,592 - INFO - Processing chunk #21 (size=830 chars, start_index=4247)
2025-01-08 10:27:50,594 - INFO - Processing chunk with 1009 chars starting at index 3383
2025-01-08 10:27:50,595 - INFO - Processing chunk #22 (size=2700 chars, start_index=4347)
2025-01-08 10:27:51,089 - INFO - Starting main AST analysis flow
2025-01-08 10:27:51,099 - INFO - Processing chunk with 773 chars starting at index 3557
2025-01-08 10:27:51,199 - INFO - Starting main AST analysis flow
2025-01-08 10:27:51,200 - INFO - Tokenized code into 157 tokens
2025-01-08 10:27:51,108 - INFO - Processing chunk with 385 chars starting at index 3714
2025-01-08 10:27:51,201 - INFO - Starting main AST analysis flow
2025-01-08 10:27:51,140 - INFO - Processing chunk with 307 chars starting at index 3801
2025-01-08 10:27:51,156 - INFO - Tokenized code into 50 tokens
2025-01-08 10:27:51,163 - INFO - Processing chunk with 379 chars starting at index 3860
2025-01-08 10:27:51,172 - INFO - Processing chunk with 1377 chars starting at index 3936
2025-01-08 10:27:51,180 - INFO - Starting main AST analysis flow
2025-01-08 10:27:50,591 - INFO - Processing chunk with 275 chars starting at index 3325
2025-01-08 10:27:51,184 - INFO - Processing chunk with 830 chars starting at index 4247
2025-01-08 10:27:51,189 - INFO - Starting main AST analysis flow
2025-01-08 10:27:51,234 - INFO - Tokenized code into 174 tokens
2025-01-08 10:27:51,194 - INFO - Tokenized code into 103 tokens
2025-01-08 10:27:51,235 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:50,570 - INFO - Tokenized code into 1572 tokens
2025-01-08 10:27:51,241 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:50,559 - INFO - Processing chunk with 1142 chars starting at index 3097
2025-01-08 10:27:51,244 - INFO - Starting main AST analysis flow
2025-01-08 10:27:51,246 - INFO - Tokenized code into 165 tokens
2025-01-08 10:27:51,207 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:51,212 - INFO - Starting main AST analysis flow
2025-01-08 10:27:51,226 - INFO - Starting main AST analysis flow
2025-01-08 10:27:51,230 - INFO - Tokenized code into 54 tokens
2025-01-08 10:27:51,231 - INFO - Starting main AST analysis flow
2025-01-08 10:27:51,232 - INFO - Starting main AST analysis flow
2025-01-08 10:27:51,234 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:51,194 - INFO - Processing chunk with 2700 chars starting at index 4347
2025-01-08 10:27:51,200 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:51,129 - INFO - Starting main AST analysis flow
2025-01-08 10:27:51,201 - INFO - Tokenized code into 87 tokens
2025-01-08 10:27:51,328 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:51,202 - INFO - Starting main AST analysis flow
2025-01-08 10:27:51,345 - INFO - Tokenized code into 59 tokens
2025-01-08 10:27:51,265 - INFO - Tokenized code into 257 tokens
2025-01-08 10:27:51,291 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:51,310 - INFO - Tokenized code into 58 tokens
2025-01-08 10:27:51,395 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:51,324 - INFO - Starting main AST analysis flow
2025-01-08 10:27:51,326 - INFO - Tokenized code into 63 tokens
2025-01-08 10:27:51,246 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:51,345 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:51,264 - INFO - Tokenized code into 76 tokens
2025-01-08 10:27:51,412 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:51,312 - INFO - Tokenized code into 100 tokens
2025-01-08 10:27:51,402 - INFO - Tokenized code into 371 tokens
2025-01-08 10:27:51,474 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:51,403 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:51,453 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:51,348 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:59,914 - INFO - Step 1 result: {'type': 'Program', 'name': 'make_graph_model', 'range': [4247, 4346], 'children': []}
2025-01-08 10:27:59,916 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:00,171 - INFO - Step 1 result: {'type': 'Program', 'name': 'get_node', 'range': [2944, 2993], 'children': []}
2025-01-08 10:28:00,171 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:00,230 - INFO - Step 1 result: {'type': 'Program', 'name': 'fix_llm_provider_credentials', 'range': [4347, 4717], 'children': []}
2025-01-08 10:28:00,231 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:00,334 - INFO - Step 1 result: {'type': 'Program', 'name': 'get_execution', 'range': [3325, 3381], 'children': []}
2025-01-08 10:28:00,346 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:00,457 - INFO - Step 1 result: {'type': 'Program', 'name': 'set_node_webhook', 'range': [2994, 3095], 'children': []}
2025-01-08 10:28:00,465 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:00,467 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [662, 681], 'children': [{'type': 'FunctionDeclaration', 'name': 'model_rebuild', 'range': [674, 678], 'children': []}]}
2025-01-08 10:28:00,467 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:00,482 - INFO - Step 1 result: {'type': 'Program', 'name': 'get_graph', 'range': [3383, 3556], 'children': []}
2025-01-08 10:28:00,482 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:00,508 - INFO - Step 1 result: {'type': 'Program', 'name': 'set_graph_active_version', 'range': [3557, 3713], 'children': []}
2025-01-08 10:28:00,518 - INFO - Step 1 result: {'type': 'Program', 'name': 'get_graph_all_versions', 'range': [3714, 3799], 'children': []}
2025-01-08 10:28:00,522 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:00,535 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:00,909 - INFO - Step 1 result: {'type': 'Program', 'name': 'get_graphs', 'range': [3097, 3261], 'children': []}
2025-01-08 10:28:00,969 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:00,965 - INFO - Step 1 result: {'type': 'Program', 'name': '__create_graph', 'range': [3936, 4192], 'children': []}
2025-01-08 10:28:01,076 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:01,051 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [4193, 4246], 'children': []}
2025-01-08 10:28:01,121 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:01,532 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [2895, 2943], 'children': [{'type': 'Comment', 'name': '', 'range': [2895, 2939], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'CRUDfunctions', 'range': [2917, 2939], 'children': []}]}
2025-01-08 10:28:01,540 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:04,552 - INFO - Step 1 result: {'type': 'Program', 'name': 'NodeModel', 'range': [335, 661], 'children': [{'type': 'ClassDeclaration', 'name': 'NodeModel', 'range': [335, 359], 'children': [{'type': 'PropertyDeclaration', 'name': 'graph_id', 'range': [342, 344], 'children': []}, {'type': 'PropertyDeclaration', 'name': 'graph_version', 'range': [346, 348], 'children': []}, {'type': 'PropertyDeclaration', 'name': 'webhook', 'range': [351, 358], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': 'from_db', 'range': [364, 537], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'is_triggered_by_event_type', 'range': [539, 659], 'children': []}]}
2025-01-08 10:28:04,812 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:05,207 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [144, 265], 'children': [{'type': 'ClassDeclaration', 'name': 'Link', 'range': [144, 172], 'children': [{'type': 'PropertyDeclaration', 'name': 'source_id', 'range': [151, 153], 'children': []}, {'type': 'PropertyDeclaration', 'name': 'sink_id', 'range': [155, 157], 'children': []}, {'type': 'PropertyDeclaration', 'name': 'source_name', 'range': [159, 161], 'children': []}, {'type': 'PropertyDeclaration', 'name': 'sink_name', 'range': [163, 165], 'children': []}, {'type': 'PropertyDeclaration', 'name': 'is_static', 'range': [167, 171], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': 'from_db', 'range': [174, 233], 'children': []}, {'type': 'FunctionDeclaration', 'name': '__hash__', 'range': [235, 263], 'children': []}]}
2025-01-08 10:28:05,208 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:06,337 - INFO - Step 1 result: {'type': 'Program', 'name': 'get_executions', 'range': [3262, 3324], 'children': [{'type': 'FunctionDeclaration', 'name': 'get_executions', 'range': [3262, 3324], 'children': [{'type': 'Parameter', 'name': 'user_id', 'range': [3266, 3268], 'children': []}, {'type': 'ReturnType', 'name': 'list[GraphExecution]', 'range': [3270, 3275], 'children': []}, {'type': 'FunctionBody', 'name': '', 'range': [3277, 3324], 'children': [{'type': 'VariableDeclaration', 'name': 'executions', 'range': [3278, 3287], 'children': []}, {'type': 'ReturnStatement', 'name': '', 'range': [3310, 3322], 'children': []}]}]}]}
2025-01-08 10:28:06,342 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:06,416 - INFO - Step 1 result: {'type': 'Program', 'name': 'Node', 'range': [266, 334], 'children': [{'type': 'ClassDeclaration', 'name': 'Node', 'range': [266, 334], 'children': [{'type': 'ClassHeritage', 'name': 'BaseDbModel', 'range': [268, 270], 'children': []}, {'type': 'PropertyDeclaration', 'name': 'block_id', 'range': [273, 275], 'children': []}, {'type': 'PropertyDeclaration', 'name': 'input_default', 'range': [277, 282], 'children': []}, {'type': 'PropertyDeclaration', 'name': 'metadata', 'range': [291, 301], 'children': []}, {'type': 'PropertyDeclaration', 'name': 'input_links', 'range': [303, 311], 'children': []}, {'type': 'PropertyDeclaration', 'name': 'output_links', 'range': [313, 321], 'children': []}, {'type': 'PropertyDeclaration', 'name': 'webhook_id', 'range': [324, 331], 'children': []}]}]}
2025-01-08 10:28:07,407 - INFO - Step 1 result: {'type': 'Program', 'name': 'Graph', 'range': [904, 1322], 'children': [{'type': 'ClassDeclaration', 'name': 'Graph', 'range': [904, 956], 'children': [{'type': 'VariableDeclaration', 'name': 'version', 'range': [911, 915], 'children': []}, {'type': 'VariableDeclaration', 'name': 'is_active', 'range': [917, 921], 'children': []}, {'type': 'VariableDeclaration', 'name': 'is_template', 'range': [923, 927], 'children': []}, {'type': 'VariableDeclaration', 'name': 'name', 'range': [929, 931], 'children': []}, {'type': 'VariableDeclaration', 'name': 'description', 'range': [933, 935], 'children': []}, {'type': 'VariableDeclaration', 'name': 'nodes', 'range': [937, 945], 'children': []}, {'type': 'VariableDeclaration', 'name': 'links', 'range': [947, 955], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': 'input_schema', 'range': [964, 1037], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'output_schema', 'range': [1045, 1118], 'children': []}, {'type': 'FunctionDeclaration', 'name': '_generate_schema', 'range': [1123, 1320], 'children': []}]}
2025-01-08 10:28:08,029 - INFO - Step 1 result: {'type': 'Program', 'name': 'GraphModel', 'range': [1323, 2894], 'children': [{'type': 'ClassDeclaration', 'name': 'GraphModel', 'range': [1323, 1635], 'children': [{'type': 'PropertyDeclaration', 'name': 'user_id', 'range': [1330, 1332], 'children': []}, {'type': 'PropertyDeclaration', 'name': 'nodes', 'range': [1334, 1342], 'children': []}, {'type': 'MethodDeclaration', 'name': 'starting_nodes', 'range': [1352, 1445], 'children': []}, {'type': 'MethodDeclaration', 'name': 'reassign_ids', 'range': [1447, 1635], 'children': []}]}, {'type': 'MethodDeclaration', 'name': 'validate_graph', 'range': [1636, 2139], 'children': []}, {'type': 'MethodDeclaration', 'name': 'from_db', 'range': [2504, 2662], 'children': []}, {'type': 'MethodDeclaration', 'name': '_process_node', 'range': [2663, 2763], 'children': []}, {'type': 'MethodDeclaration', 'name': '_hide_node_input_credentials', 'range': [2764, 2894], 'children': []}]}
2025-01-08 10:28:08,097 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:08,103 - INFO - Step 1 result: {'type': 'Program', 'name': 'GraphExecution', 'range': [682, 902], 'children': [{'type': 'ClassDeclaration', 'name': 'GraphExecution', 'range': [682, 720], 'children': [{'type': 'PropertyDeclaration', 'name': 'execution_id', 'range': [689, 691], 'children': []}, {'type': 'PropertyDeclaration', 'name': 'started_at', 'range': [693, 695], 'children': []}, {'type': 'PropertyDeclaration', 'name': 'ended_at', 'range': [697, 699], 'children': []}, {'type': 'PropertyDeclaration', 'name': 'duration', 'range': [701, 703], 'children': []}, {'type': 'PropertyDeclaration', 'name': 'total_run_time', 'range': [705, 707], 'children': []}, {'type': 'PropertyDeclaration', 'name': 'status', 'range': [709, 711], 'children': []}, {'type': 'PropertyDeclaration', 'name': 'graph_id', 'range': [713, 715], 'children': []}, {'type': 'PropertyDeclaration', 'name': 'graph_version', 'range': [717, 719], 'children': []}]}, {'type': 'MethodDeclaration', 'name': 'from_db', 'range': [722, 901], 'children': []}]}
2025-01-08 10:28:08,406 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:08,527 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:08,603 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:10,110 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [0, 143], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 2], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [3, 5], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [6, 8], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [9, 13], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [14, 20], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [21, 31], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [33, 35], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [36, 48], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [49, 55], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [56, 62], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [64, 72], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [73, 83], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [84, 90], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [92, 103], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [104, 111], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [112, 117], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [118, 125], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [126, 131], 'children': []}, {'type': 'VariableDeclaration', 'name': 'logger', 'range': [133, 141], 'children': []}]}
2025-01-08 10:28:10,110 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:12,059 - INFO - Step 2 result: {'type': 'Program', 'name': '', 'range': [662, 681], 'children': [{'type': 'FunctionDeclaration', 'name': 'model_rebuild', 'range': [674, 678], 'children': [{'type': 'CallExpression', 'name': '', 'range': [676, 678], 'children': [{'type': 'Identifier', 'name': 'model_rebuild', 'range': [676, 676], 'children': []}, {'type': 'Arguments', 'name': '', 'range': [677, 678], 'children': []}]}]}]}
2025-01-08 10:28:12,060 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:12,983 - INFO - Step 2 result: {'type': 'Program', 'name': '', 'range': [4193, 4246], 'children': [{'type': 'Comment', 'name': '', 'range': [4193, 4243], 'children': [{'type': 'CommentLine', 'name': '', 'range': [4193, 4243], 'children': []}]}, {'type': 'NewLine', 'name': '', 'range': [4244, 4246], 'children': []}]}
2025-01-08 10:28:12,984 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:15,069 - INFO - Step 2 result: {'nodes': [{'type': 'Comment', 'name': '', 'range': [2895, 2939], 'children': [{'type': 'CommentLine', 'name': '', 'range': [2895, 2895], 'children': []}, {'type': 'CommentLine', 'name': '', 'range': [2896, 2916], 'children': []}, {'type': 'CommentLine', 'name': '', 'range': [2917, 2939], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': 'CRUDfunctions', 'range': [2917, 2939], 'children': [{'type': 'FunctionName', 'name': 'CRUDfunctions', 'range': [2917, 2928], 'children': []}, {'type': 'FunctionBody', 'name': '', 'range': [2929, 2939], 'children': []}]}]}
2025-01-08 10:28:15,069 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:15,686 - INFO - Step 1 result: {'type': 'Program', 'name': 'create_graph', 'range': [3860, 3935], 'children': [{'type': 'FunctionDeclaration', 'name': 'create_graph', 'range': [3860, 3935], 'children': [{'type': 'Parameter', 'name': 'graph', 'range': [3864, 3866]}, {'type': 'Parameter', 'name': 'user_id', 'range': [3868, 3870]}, {'type': 'ReturnType', 'name': 'GraphModel', 'range': [3874, 3874]}, {'type': 'BlockStatement', 'range': [3876, 3935], 'children': [{'type': 'WithStatement', 'range': [3877, 3885], 'children': [{'type': 'VariableDeclaration', 'name': 'tx', 'range': [3883, 3883]}]}, {'type': 'ExpressionStatement', 'range': [3886, 3895], 'children': [{'type': 'CallExpression', 'name': '__create_graph', 'range': [3887, 3894], 'children': [{'type': 'Argument', 'name': 'tx', 'range': [3889, 3889]}, {'type': 'Argument', 'name': 'graph', 'range': [3891, 3891]}, {'type': 'Argument', 'name': 'user_id', 'range': [3893, 3893]}]}]}, {'type': 'IfStatement', 'range': [3897, 3926], 'children': [{'type': 'AssignmentExpression', 'range': [3898, 3921], 'children': [{'type': 'CallExpression', 'name': 'get_graph', 'range': [3902, 3921], 'children': [{'type': 'Argument', 'name': 'graph.id', 'range': [3905, 3907]}, {'type': 'Argument', 'name': 'graph.version', 'range': [3909, 3911]}, {'type': 'Argument', 'name': 'graph.is_template', 'range': [3913, 3915]}, {'type': 'Argument', 'name': 'user_id', 'range': [3917, 3919]}]}]}, {'type': 'ReturnStatement', 'range': [3924, 3926], 'children': [{'type': 'Identifier', 'name': 'created_graph', 'range': [3925, 3925]}]}]}, {'type': 'ThrowStatement', 'range': [3928, 3934], 'children': [{'type': 'NewExpression', 'name': 'ValueError', 'range': [3929, 3933], 'children': [{'type': 'Literal', 'value': 'f"Created graph {graph.id} v{graph.version} is not in DB"', 'range': [3931, 3932]}]}]}]}]}]}
2025-01-08 10:28:15,686 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:20,890 - INFO - Step 3 result: {'type': 'Program', 'name': '', 'range': [4193, 4246], 'children': [{'type': 'Comment', 'name': '', 'range': [4193, 4243], 'children': []}, {'type': 'NewLine', 'name': '', 'range': [4244, 4246], 'children': []}]}
2025-01-08 10:28:20,890 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:20,922 - INFO - Step 3 result: {'type': 'Program', 'name': '', 'range': [662, 681], 'children': [{'type': 'FunctionDeclaration', 'name': 'model_rebuild', 'range': [674, 678], 'children': [{'type': 'CallExpression', 'name': '', 'range': [676, 678], 'children': [{'type': 'Identifier', 'name': 'model_rebuild', 'range': [676, 676], 'children': []}]}]}]}
2025-01-08 10:28:20,922 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:23,911 - INFO - Step 2 result: {'type': 'Program', 'name': 'get_node', 'range': [2944, 2993], 'children': [{'type': 'FunctionDeclaration', 'name': 'get_node', 'range': [2944, 2992], 'children': [{'type': 'AsyncKeyword', 'name': 'async', 'range': [2944, 2948], 'children': []}, {'type': 'DefKeyword', 'name': 'def', 'range': [2945, 2948], 'children': []}, {'type': 'FunctionName', 'name': 'get_node', 'range': [2946, 2954], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [2947, 2951], 'children': [{'type': 'Parameter', 'name': 'node_id', 'range': [2948, 2950], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [2949, 2950], 'children': []}]}]}, {'type': 'ReturnType', 'name': 'NodeModel', 'range': [2952, 2954], 'children': []}, {'type': 'FunctionBody', 'name': 'body', 'range': [2955, 2992], 'children': [{'type': 'AssignmentExpression', 'name': 'node', 'range': [2957, 2983], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [2959, 2960], 'children': []}, {'type': 'MemberExpression', 'name': 'AgentNode.prisma', 'range': [2960, 2962], 'children': []}, {'type': 'CallExpression', 'name': 'find_unique_or_raise', 'range': [2966, 2983], 'children': [{'type': 'ObjectExpression', 'name': 'where', 'range': [2971, 2975], 'children': [{'type': 'Property', 'name': 'id', 'range': [2972, 2974], 'children': []}]}, {'type': 'Identifier', 'name': 'AGENT_NODE_INCLUDE', 'range': [2980, 2981], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [2985, 2992], 'children': [{'type': 'CallExpression', 'name': 'NodeModel.from_db', 'range': [2986, 2991], 'children': [{'type': 'Identifier', 'name': 'node', 'range': [2990, 2991], 'children': []}]}]}]}]}]}
2025-01-08 10:28:23,912 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:24,202 - INFO - Step 3 result: {'nodes': [{'type': 'Comment', 'name': '', 'range': [2895, 2939], 'children': [{'type': 'CommentLine', 'name': '', 'range': [2895, 2895], 'children': []}, {'type': 'CommentLine', 'name': '', 'range': [2896, 2916], 'children': []}, {'type': 'CommentLine', 'name': '', 'range': [2917, 2939], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': 'CRUDfunctions', 'range': [2917, 2939], 'children': [{'type': 'FunctionName', 'name': 'CRUDfunctions', 'range': [2917, 2928], 'children': []}]}]}
2025-01-08 10:28:24,202 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:25,102 - INFO - Step 4 result: {'type': 'Program', 'name': '', 'range': [4193, 4246], 'children': [{'type': 'Comment', 'name': '', 'range': [4193, 4243], 'children': []}, {'type': 'NewLine', 'name': '', 'range': [4244, 4246], 'children': []}]}
2025-01-08 10:28:25,102 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:28:25,796 - INFO - Step 4 result: {'type': 'Program', 'name': '', 'range': [662, 681], 'children': [{'type': 'FunctionDecl', 'name': 'model_rebuild', 'range': [674, 678], 'children': [{'type': 'CallExpression', 'name': '', 'range': [676, 678], 'children': [{'type': 'Identifier', 'name': 'model_rebuild', 'range': [676, 676], 'children': []}]}]}]}
2025-01-08 10:28:25,796 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:28:26,718 - INFO - Step 2 result: {'type': 'Program', 'name': 'get_graph_all_versions', 'range': [3714, 3799], 'children': [{'type': 'FunctionDeclaration', 'name': 'get_graph_all_versions', 'range': [3714, 3799], 'children': [{'type': 'AsyncKeyword', 'name': 'async', 'range': [3714, 3714], 'children': []}, {'type': 'DefKeyword', 'name': 'def', 'range': [3715, 3715], 'children': []}, {'type': 'FunctionName', 'name': 'get_graph_all_versions', 'range': [3716, 3716], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [3717, 3725], 'children': [{'type': 'Parameter', 'name': 'graph_id', 'range': [3718, 3720], 'children': []}, {'type': 'Parameter', 'name': 'user_id', 'range': [3722, 3724], 'children': []}]}, {'type': 'ReturnType', 'name': 'return_type', 'range': [3726, 3731], 'children': [{'type': 'ListType', 'name': 'list', 'range': [3728, 3731], 'children': [{'type': 'TypeName', 'name': 'GraphModel', 'range': [3730, 3730], 'children': []}]}]}, {'type': 'FunctionBody', 'name': 'body', 'range': [3733, 3799], 'children': [{'type': 'VariableDeclaration', 'name': 'graph_versions', 'range': [3734, 3773], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [3736, 3736], 'children': [{'type': 'CallExpression', 'name': 'AgentGraph.prisma().find_many', 'range': [3737, 3773], 'children': [{'type': 'Arguments', 'name': 'arguments', 'range': [3740, 3773], 'children': [{'type': 'Argument', 'name': 'where', 'range': [3746, 3756], 'children': []}, {'type': 'Argument', 'name': 'order', 'range': [3759, 3765], 'children': []}, {'type': 'Argument', 'name': 'include', 'range': [3768, 3771], 'children': []}]}]}]}]}, {'type': 'IfStatement', 'name': 'if', 'range': [3776, 3784], 'children': [{'type': 'Condition', 'name': 'not graph_versions', 'range': [3777, 3778], 'children': []}, {'type': 'ReturnStatement', 'name': 'return', 'range': [3781, 3783], 'children': []}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [3786, 3798], 'children': [{'type': 'ListComprehension', 'name': 'list comprehension', 'range': [3787, 3798], 'children': [{'type': 'Expression', 'name': 'GraphModel.from_db(graph)', 'range': [3788, 3793], 'children': []}, {'type': 'ForClause', 'name': 'for graph in graph_versions', 'range': [3794, 3797], 'children': []}]}]}]}]}]}
2025-01-08 10:28:26,719 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:26,780 - INFO - Step 2 result: {'type': 'Program', 'name': 'get_executions', 'range': [3262, 3324], 'children': [{'type': 'FunctionDeclaration', 'name': 'get_executions', 'range': [3262, 3324], 'children': [{'type': 'Parameter', 'name': 'user_id', 'range': [3266, 3268], 'children': []}, {'type': 'ReturnType', 'name': 'list[GraphExecution]', 'range': [3270, 3275], 'children': []}, {'type': 'FunctionBody', 'name': '', 'range': [3277, 3324], 'children': [{'type': 'VariableDeclaration', 'name': 'executions', 'range': [3278, 3287], 'children': [{'type': 'Assignment', 'name': '=', 'range': [3279, 3279], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [3280, 3280], 'children': [{'type': 'MemberExpression', 'name': 'AgentGraphExecution.prisma', 'range': [3281, 3283], 'children': [{'type': 'CallExpression', 'name': '()', 'range': [3284, 3285], 'children': []}, {'type': 'MemberExpression', 'name': '.find_many', 'range': [3286, 3287], 'children': [{'type': 'CallExpression', 'name': '()', 'range': [3288, 3308], 'children': [{'type': 'ObjectExpression', 'name': 'where', 'range': [3290, 3296], 'children': [{'type': 'Property', 'name': 'userId', 'range': [3293, 3295], 'children': []}]}, {'type': 'ObjectExpression', 'name': 'order', 'range': [3299, 3305], 'children': [{'type': 'Property', 'name': 'createdAt', 'range': [3302, 3304], 'children': []}]}]}]}]}]}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [3310, 3322], 'children': [{'type': 'ArrayExpression', 'name': '[]', 'range': [3311, 3322], 'children': [{'type': 'CallExpression', 'name': 'GraphExecution.from_db', 'range': [3312, 3317], 'children': [{'type': 'Identifier', 'name': 'execution', 'range': [3316, 3316], 'children': []}]}, {'type': 'ForStatement', 'name': 'for', 'range': [3318, 3321], 'children': [{'type': 'Identifier', 'name': 'execution', 'range': [3319, 3319], 'children': []}, {'type': 'Identifier', 'name': 'executions', 'range': [3321, 3321], 'children': []}]}]}]}]}]}]}
2025-01-08 10:28:26,780 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:26,796 - INFO - Step 2 result: {'type': 'Program', 'name': 'make_graph_model', 'range': [4247, 4346], 'children': [{'type': 'FunctionDeclaration', 'name': 'make_graph_model', 'range': [4247, 4346], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [4249, 4257], 'children': [{'type': 'Parameter', 'name': 'creatable_graph', 'range': [4250, 4252], 'children': []}, {'type': 'Parameter', 'name': 'user_id', 'range': [4254, 4256], 'children': []}]}, {'type': 'ReturnType', 'name': 'GraphModel', 'range': [4258, 4260], 'children': []}, {'type': 'Docstring', 'name': 'docstring', 'range': [4263, 4265], 'children': []}, {'type': 'Comment', 'name': 'comment', 'range': [4267, 4278], 'children': []}, {'type': 'ReturnStatement', 'name': 'return', 'range': [4279, 4345], 'children': [{'type': 'FunctionCall', 'name': 'GraphModel', 'range': [4280, 4344], 'children': [{'type': 'ArgumentList', 'name': 'arguments', 'range': [4281, 4344], 'children': [{'type': 'KeywordArgument', 'name': 'creatable_graph', 'range': [4285, 4294], 'children': [{'type': 'FunctionCall', 'name': 'model_dump', 'range': [4287, 4294], 'children': [{'type': 'ArgumentList', 'name': 'arguments', 'range': [4288, 4294], 'children': [{'type': 'KeywordArgument', 'name': 'exclude', 'range': [4290, 4293], 'children': []}]}]}]}, {'type': 'KeywordArgument', 'name': 'user_id', 'range': [4297, 4299], 'children': []}, {'type': 'KeywordArgument', 'name': 'nodes', 'range': [4302, 4341], 'children': [{'type': 'List', 'name': 'nodes', 'range': [4304, 4341], 'children': [{'type': 'FunctionCall', 'name': 'NodeModel', 'range': [4306, 4332], 'children': [{'type': 'ArgumentList', 'name': 'arguments', 'range': [4307, 4332], 'children': [{'type': 'KeywordArgument', 'name': 'creatable_node', 'range': [4311, 4316], 'children': [{'type': 'FunctionCall', 'name': 'model_dump', 'range': [4313, 4316], 'children': []}]}, {'type': 'KeywordArgument', 'name': 'graph_id', 'range': [4318, 4323], 'children': []}, {'type': 'KeywordArgument', 'name': 'graph_version', 'range': [4325, 4330], 'children': []}]}]}]}]}]}]}]}]}]}
2025-01-08 10:28:26,797 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:27,327 - INFO - Step 2 result: {'type': 'Program', 'name': 'get_execution', 'range': [3325, 3381], 'children': [{'type': 'FunctionDeclaration', 'name': 'get_execution', 'range': [3325, 3381], 'children': [{'type': 'AsyncKeyword', 'name': 'async', 'range': [3325, 3329], 'children': []}, {'type': 'DefKeyword', 'name': 'def', 'range': [3326, 3329], 'children': []}, {'type': 'FunctionName', 'name': 'get_execution', 'range': [3327, 3340], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [3328, 3336], 'children': [{'type': 'Parameter', 'name': 'user_id', 'range': [3329, 3331], 'children': []}, {'type': 'TypeAnnotation', 'name': 'str', 'range': [3330, 3331], 'children': []}, {'type': 'Parameter', 'name': 'execution_id', 'range': [3333, 3335], 'children': []}, {'type': 'TypeAnnotation', 'name': 'str', 'range': [3334, 3335], 'children': []}]}, {'type': 'ReturnType', 'name': 'GraphExecution | None', 'range': [3337, 3341], 'children': []}, {'type': 'FunctionBody', 'name': 'body', 'range': [3343, 3381], 'children': [{'type': 'VariableDeclaration', 'name': 'execution', 'range': [3344, 3368], 'children': [{'type': 'Assignment', 'name': '=', 'range': [3345, 3346], 'children': []}, {'type': 'AwaitExpression', 'name': 'await', 'range': [3346, 3351], 'children': [{'type': 'MemberExpression', 'name': 'AgentGraphExecution.prisma', 'range': [3347, 3350], 'children': []}, {'type': 'CallExpression', 'name': 'find_first', 'range': [3353, 3368], 'children': [{'type': 'ObjectLiteral', 'name': 'where', 'range': [3358, 3366], 'children': [{'type': 'Property', 'name': 'id', 'range': [3359, 3361], 'children': []}, {'type': 'Property', 'name': 'userId', 'range': [3363, 3365], 'children': []}]}]}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [3370, 3380], 'children': [{'type': 'ConditionalExpression', 'name': 'if', 'range': [3377, 3380], 'children': [{'type': 'MemberExpression', 'name': 'GraphExecution.from_db', 'range': [3371, 3376], 'children': []}, {'type': 'Identifier', 'name': 'execution', 'range': [3375, 3376], 'children': []}, {'type': 'Identifier', 'name': 'None', 'range': [3380, 3381], 'children': []}]}]}]}]}]}
2025-01-08 10:28:27,328 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:28,432 - INFO - Step 5 result: {'type': 'Program', 'name': '', 'range': [4193, 4246], 'children': [{'type': 'Comment', 'name': '', 'range': [4193, 4243], 'children': []}, {'type': 'NewLine', 'name': '', 'range': [4244, 4246], 'children': []}]}
2025-01-08 10:28:28,452 - INFO - Completed main AST analysis flow
2025-01-08 10:28:28,452 - INFO - Successfully processed chunk
2025-01-08 10:28:28,564 - INFO - Step 2 result: {'type': 'Program', 'name': 'set_node_webhook', 'range': [2994, 3095], 'children': [{'type': 'FunctionDeclaration', 'name': 'set_node_webhook', 'range': [2994, 3095], 'children': [{'type': 'AsyncKeyword', 'name': 'async', 'range': [2994, 2994], 'children': []}, {'type': 'DefKeyword', 'name': 'def', 'range': [2995, 2995], 'children': []}, {'type': 'FunctionName', 'name': 'set_node_webhook', 'range': [2996, 2996], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [2997, 3007], 'children': [{'type': 'Parameter', 'name': 'node_id', 'range': [2998, 3000], 'children': []}, {'type': 'Parameter', 'name': 'webhook_id', 'range': [3002, 3006], 'children': []}]}, {'type': 'ReturnType', 'name': 'NodeModel', 'range': [3008, 3010], 'children': []}, {'type': 'FunctionBody', 'name': 'body', 'range': [3012, 3095], 'children': [{'type': 'AssignmentExpression', 'name': 'node', 'range': [3013, 3074], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [3015, 3015], 'children': []}, {'type': 'MemberExpression', 'name': 'AgentNode.prisma', 'range': [3016, 3018], 'children': []}, {'type': 'CallExpression', 'name': 'update', 'range': [3022, 3074], 'children': [{'type': 'ObjectExpression', 'name': 'where', 'range': [3025, 3031], 'children': []}, {'type': 'ObjectExpression', 'name': 'data', 'range': [3034, 3065], 'children': []}, {'type': 'Identifier', 'name': 'AGENT_NODE_INCLUDE', 'range': [3069, 3071], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if', 'range': [3076, 3086], 'children': [{'type': 'UnaryExpression', 'name': 'not', 'range': [3077, 3077], 'children': []}, {'type': 'Identifier', 'name': 'node', 'range': [3078, 3078], 'children': []}, {'type': 'ThrowStatement', 'name': 'raise', 'range': [3081, 3086], 'children': [{'type': 'NewExpression', 'name': 'ValueError', 'range': [3082, 3082], 'children': []}, {'type': 'TemplateLiteral', 'name': 'f', 'range': [3084, 3085], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [3088, 3094], 'children': [{'type': 'MemberExpression', 'name': 'NodeModel.from_db', 'range': [3089, 3091], 'children': []}, {'type': 'Identifier', 'name': 'node', 'range': [3093, 3093], 'children': []}]}]}]}]}
2025-01-08 10:28:28,564 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:29,683 - INFO - Step 2 result: {'type': 'Program', 'name': 'Node', 'range': [266, 334], 'children': [{'type': 'ClassDeclaration', 'name': 'Node', 'range': [266, 334], 'children': [{'type': 'ClassHeritage', 'name': 'BaseDbModel', 'range': [268, 270], 'children': []}, {'type': 'PropertyDeclaration', 'name': 'block_id', 'range': [273, 275], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [275, 275], 'children': []}]}, {'type': 'PropertyDeclaration', 'name': 'input_default', 'range': [277, 282], 'children': [{'type': 'TypeAnnotation', 'name': 'BlockInput', 'range': [279, 279], 'children': []}, {'type': 'ObjectLiteral', 'name': '{}', 'range': [281, 282], 'children': []}]}, {'type': 'PropertyDeclaration', 'name': 'metadata', 'range': [291, 301], 'children': [{'type': 'TypeAnnotation', 'name': 'dict[str, Any]', 'range': [293, 298], 'children': []}, {'type': 'ObjectLiteral', 'name': '{}', 'range': [300, 301], 'children': []}]}, {'type': 'PropertyDeclaration', 'name': 'input_links', 'range': [303, 311], 'children': [{'type': 'TypeAnnotation', 'name': 'list[Link]', 'range': [305, 308], 'children': []}, {'type': 'ArrayLiteral', 'name': '[]', 'range': [310, 311], 'children': []}]}, {'type': 'PropertyDeclaration', 'name': 'output_links', 'range': [313, 321], 'children': [{'type': 'TypeAnnotation', 'name': 'list[Link]', 'range': [315, 318], 'children': []}, {'type': 'ArrayLiteral', 'name': '[]', 'range': [320, 321], 'children': []}]}, {'type': 'PropertyDeclaration', 'name': 'webhook_id', 'range': [324, 331], 'children': [{'type': 'TypeAnnotation', 'name': 'Optional[str]', 'range': [326, 329], 'children': []}, {'type': 'NullLiteral', 'name': 'None', 'range': [331, 331], 'children': []}]}]}]}
2025-01-08 10:28:29,684 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:29,697 - INFO - Step 4 result: {'nodes': [{'type': 'Comment', 'name': '', 'range': [2895, 2939], 'children': [{'type': 'CommentLine', 'name': '', 'range': [2895, 2895], 'children': []}, {'type': 'CommentLine', 'name': '', 'range': [2896, 2916], 'children': []}, {'type': 'CommentLine', 'name': '', 'range': [2917, 2939], 'children': []}]}, {'type': 'FunctionDecl', 'name': 'CRUDfunctions', 'range': [2917, 2939], 'children': [{'type': 'Identifier', 'name': 'CRUDfunctions', 'range': [2917, 2928], 'children': []}]}]}
2025-01-08 10:28:29,697 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:28:29,831 - INFO - Step 5 result: {'type': 'Program', 'name': '', 'range': [662, 681], 'children': [{'type': 'FunctionDecl', 'name': 'model_rebuild', 'range': [674, 678], 'children': [{'type': 'CallExpression', 'name': '', 'range': [676, 678], 'children': [{'type': 'Identifier', 'name': 'model_rebuild', 'range': [676, 676], 'children': []}]}]}]}
2025-01-08 10:28:29,831 - INFO - Completed main AST analysis flow
2025-01-08 10:28:29,831 - INFO - Successfully processed chunk
2025-01-08 10:28:31,046 - INFO - Step 1 result: {'type': 'Program', 'name': 'delete_graph', 'range': [3801, 3858], 'children': [{'type': 'FunctionDeclaration', 'name': 'delete_graph', 'range': [3801, 3858], 'children': [{'type': 'Keyword', 'value': 'async', 'range': [3801, 3801]}, {'type': 'Keyword', 'value': 'def', 'range': [3802, 3802]}, {'type': 'Identifier', 'value': 'delete_graph', 'range': [3803, 3803]}, {'type': 'Punctuator', 'value': '(', 'range': [3804, 3804]}, {'type': 'Identifier', 'value': 'graph_id', 'range': [3805, 3805]}, {'type': 'Punctuator', 'value': ':', 'range': [3806, 3806]}, {'type': 'TypeAnnotation', 'value': 'str', 'range': [3807, 3807]}, {'type': 'Punctuator', 'value': ',', 'range': [3808, 3808]}, {'type': 'Identifier', 'value': 'user_id', 'range': [3809, 3809]}, {'type': 'Punctuator', 'value': ':', 'range': [3810, 3810]}, {'type': 'TypeAnnotation', 'value': 'str', 'range': [3811, 3811]}, {'type': 'Punctuator', 'value': ')', 'range': [3812, 3812]}, {'type': 'Punctuator', 'value': '-', 'range': [3813, 3813]}, {'type': 'Punctuator', 'value': '>', 'range': [3814, 3814]}, {'type': 'TypeAnnotation', 'value': 'int', 'range': [3815, 3815]}, {'type': 'Punctuator', 'value': ':', 'range': [3816, 3816]}, {'type': 'LineBreak', 'value': '\\n', 'range': [3817, 3817]}, {'type': 'Identifier', 'value': 'entries_count', 'range': [3818, 3818]}, {'type': 'Punctuator', 'value': '=', 'range': [3819, 3819]}, {'type': 'Keyword', 'value': 'await', 'range': [3820, 3820]}, {'type': 'Identifier', 'value': 'AgentGraph', 'range': [3821, 3821]}, {'type': 'Punctuator', 'value': '.', 'range': [3822, 3822]}, {'type': 'Identifier', 'value': 'prisma', 'range': [3823, 3823]}, {'type': 'Punctuator', 'value': '(', 'range': [3824, 3824]}, {'type': 'Punctuator', 'value': ')', 'range': [3825, 3825]}, {'type': 'Punctuator', 'value': '.', 'range': [3826, 3826]}, {'type': 'Identifier', 'value': 'delete_many', 'range': [3827, 3827]}, {'type': 'Punctuator', 'value': '(', 'range': [3828, 3828]}, {'type': 'LineBreak', 'value': '\\n', 'range': [3829, 3829]}, {'type': 'Identifier', 'value': 'where', 'range': [3830, 3830]}, {'type': 'Punctuator', 'value': '=', 'range': [3831, 3831]}, {'type': 'Punctuator', 'value': '{', 'range': [3832, 3832]}, {'type': 'String', 'value': '"id"', 'range': [3833, 3833]}, {'type': 'Punctuator', 'value': ':', 'range': [3834, 3834]}, {'type': 'Identifier', 'value': 'graph_id', 'range': [3835, 3835]}, {'type': 'Punctuator', 'value': ',', 'range': [3836, 3836]}, {'type': 'String', 'value': '"userId"', 'range': [3837, 3837]}, {'type': 'Punctuator', 'value': ':', 'range': [3838, 3838]}, {'type': 'Identifier', 'value': 'user_id', 'range': [3839, 3839]}, {'type': 'Punctuator', 'value': '}', 'range': [3840, 3840]}, {'type': 'LineBreak', 'value': '\\n', 'range': [3841, 3841]}, {'type': 'Punctuator', 'value': ')', 'range': [3842, 3842]}, {'type': 'LineBreak', 'value': '\\n', 'range': [3843, 3843]}, {'type': 'Keyword', 'value': 'if', 'range': [3844, 3844]}, {'type': 'Identifier', 'value': 'entries_count', 'range': [3845, 3845]}, {'type': 'Punctuator', 'value': ':', 'range': [3846, 3846]}, {'type': 'LineBreak', 'value': '\\n', 'range': [3847, 3847]}, {'type': 'Identifier', 'value': 'logger', 'range': [3848, 3848]}, {'type': 'Punctuator', 'value': '.', 'range': [3849, 3849]}, {'type': 'Identifier', 'value': 'info', 'range': [3850, 3850]}, {'type': 'Punctuator', 'value': '(', 'range': [3851, 3851]}, {'type': 'String', 'value': 'f"Deleted {entries_count} graph entries for Graph #{graph_id}"', 'range': [3852, 3853]}, {'type': 'Punctuator', 'value': ')', 'range': [3854, 3854]}, {'type': 'LineBreak', 'value': '\\n', 'range': [3855, 3855]}, {'type': 'Keyword', 'value': 'return', 'range': [3856, 3856]}, {'type': 'Identifier', 'value': 'entries_count', 'range': [3857, 3857]}, {'type': 'LineBreak', 'value': '\\n', 'range': [3858, 3858]}]}]}
2025-01-08 10:28:31,046 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:35,047 - INFO - Step 2 result: {'type': 'Program', 'name': '', 'range': [144, 265], 'children': [{'type': 'ClassDeclaration', 'name': 'Link', 'range': [144, 172], 'children': [{'type': 'PropertyDeclaration', 'name': 'source_id', 'range': [151, 153], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [153, 153], 'children': []}]}, {'type': 'PropertyDeclaration', 'name': 'sink_id', 'range': [155, 157], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [157, 157], 'children': []}]}, {'type': 'PropertyDeclaration', 'name': 'source_name', 'range': [159, 161], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [161, 161], 'children': []}]}, {'type': 'PropertyDeclaration', 'name': 'sink_name', 'range': [163, 165], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [165, 165], 'children': []}]}, {'type': 'PropertyDeclaration', 'name': 'is_static', 'range': [167, 171], 'children': [{'type': 'TypeAnnotation', 'name': 'bool', 'range': [169, 169], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [170, 170], 'children': [{'type': 'BooleanLiteral', 'name': 'False', 'range': [171, 171], 'children': []}]}]}]}, {'type': 'FunctionDeclaration', 'name': 'from_db', 'range': [174, 233], 'children': [{'type': 'Parameter', 'name': 'link', 'range': [180, 182], 'children': [{'type': 'TypeAnnotation', 'name': 'AgentNodeLink', 'range': [182, 182], 'children': []}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [186, 232], 'children': [{'type': 'CallExpression', 'name': 'Link', 'range': [187, 232], 'children': [{'type': 'Argument', 'name': 'id', 'range': [190, 194], 'children': [{'type': 'MemberExpression', 'name': 'link.id', 'range': [192, 194], 'children': []}]}, {'type': 'Argument', 'name': 'source_name', 'range': [197, 201], 'children': [{'type': 'MemberExpression', 'name': 'link.sourceName', 'range': [199, 201], 'children': []}]}, {'type': 'Argument', 'name': 'source_id', 'range': [204, 208], 'children': [{'type': 'MemberExpression', 'name': 'link.agentNodeSourceId', 'range': [206, 208], 'children': []}]}, {'type': 'Argument', 'name': 'sink_name', 'range': [211, 215], 'children': [{'type': 'MemberExpression', 'name': 'link.sinkName', 'range': [213, 215], 'children': []}]}, {'type': 'Argument', 'name': 'sink_id', 'range': [218, 222], 'children': [{'type': 'MemberExpression', 'name': 'link.agentNodeSinkId', 'range': [220, 222], 'children': []}]}, {'type': 'Argument', 'name': 'is_static', 'range': [225, 229], 'children': [{'type': 'MemberExpression', 'name': 'link.isStatic', 'range': [227, 229], 'children': []}]}]}]}]}, {'type': 'FunctionDeclaration', 'name': '__hash__', 'range': [235, 263], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [238, 238], 'children': []}, {'type': 'ReturnStatement', 'name': 'return', 'range': [242, 262], 'children': [{'type': 'CallExpression', 'name': 'hash', 'range': [243, 262], 'children': [{'type': 'Argument', 'name': 'tuple', 'range': [245, 261], 'children': [{'type': 'MemberExpression', 'name': 'self.source_id', 'range': [246, 248], 'children': []}, {'type': 'MemberExpression', 'name': 'self.sink_id', 'range': [250, 252], 'children': []}, {'type': 'MemberExpression', 'name': 'self.source_name', 'range': [254, 256], 'children': []}, {'type': 'MemberExpression', 'name': 'self.sink_name', 'range': [258, 260], 'children': []}]}]}]}]}]}
2025-01-08 10:28:35,051 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:35,884 - INFO - Step 2 result: {'type': 'Program', 'name': 'create_graph', 'range': [3860, 3935], 'children': [{'type': 'FunctionDeclaration', 'name': 'create_graph', 'range': [3860, 3935], 'children': [{'type': 'Parameter', 'name': 'graph', 'range': [3864, 3866]}, {'type': 'Parameter', 'name': 'user_id', 'range': [3868, 3870]}, {'type': 'ReturnType', 'name': 'GraphModel', 'range': [3874, 3874]}, {'type': 'BlockStatement', 'range': [3876, 3935], 'children': [{'type': 'WithStatement', 'range': [3877, 3885], 'children': [{'type': 'VariableDeclaration', 'name': 'tx', 'range': [3883, 3883]}]}, {'type': 'ExpressionStatement', 'range': [3886, 3895], 'children': [{'type': 'CallExpression', 'name': '__create_graph', 'range': [3887, 3894], 'children': [{'type': 'Argument', 'name': 'tx', 'range': [3889, 3889]}, {'type': 'Argument', 'name': 'graph', 'range': [3891, 3891]}, {'type': 'Argument', 'name': 'user_id', 'range': [3893, 3893]}]}]}, {'type': 'IfStatement', 'range': [3897, 3926], 'children': [{'type': 'AssignmentExpression', 'range': [3898, 3921], 'children': [{'type': 'CallExpression', 'name': 'get_graph', 'range': [3902, 3921], 'children': [{'type': 'Argument', 'name': 'graph.id', 'range': [3905, 3907]}, {'type': 'Argument', 'name': 'graph.version', 'range': [3909, 3911]}, {'type': 'Argument', 'name': 'graph.is_template', 'range': [3913, 3915]}, {'type': 'Argument', 'name': 'user_id', 'range': [3917, 3919]}]}]}, {'type': 'ReturnStatement', 'range': [3924, 3926], 'children': [{'type': 'Identifier', 'name': 'created_graph', 'range': [3925, 3925]}]}]}, {'type': 'ThrowStatement', 'range': [3928, 3934], 'children': [{'type': 'NewExpression', 'name': 'ValueError', 'range': [3929, 3933], 'children': [{'type': 'Literal', 'value': 'f"Created graph {graph.id} v{graph.version} is not in DB"', 'range': [3931, 3932]}]}]}]}]}]}
2025-01-08 10:28:35,884 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:36,209 - INFO - Step 5 result: {'nodes': [{'type': 'Program', 'name': 'CombinedProgram', 'range': [2895, 2939], 'children': [{'type': 'Comment', 'name': '', 'range': [2895, 2939], 'children': [{'type': 'CommentLine', 'name': '', 'range': [2895, 2895], 'children': []}, {'type': 'CommentLine', 'name': '', 'range': [2896, 2916], 'children': []}, {'type': 'CommentLine', 'name': '', 'range': [2917, 2939], 'children': []}]}, {'type': 'FunctionDecl', 'name': 'CRUDfunctions', 'range': [2917, 2939], 'children': [{'type': 'Identifier', 'name': 'CRUDfunctions', 'range': [2917, 2928], 'children': []}]}]}]}
2025-01-08 10:28:36,209 - INFO - Completed main AST analysis flow
2025-01-08 10:28:36,209 - INFO - Successfully processed chunk
2025-01-08 10:28:38,731 - INFO - Step 3 result: {'type': 'Program', 'name': 'get_node', 'range': [2944, 2993], 'children': [{'type': 'FunctionDeclaration', 'name': 'get_node', 'range': [2944, 2992], 'children': [{'type': 'AsyncKeyword', 'name': 'async', 'range': [2944, 2948], 'children': []}, {'type': 'DefKeyword', 'name': 'def', 'range': [2945, 2948], 'children': []}, {'type': 'FunctionName', 'name': 'get_node', 'range': [2946, 2954], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [2947, 2951], 'children': [{'type': 'Parameter', 'name': 'node_id', 'range': [2948, 2950], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [2949, 2950], 'children': []}]}]}, {'type': 'ReturnType', 'name': 'NodeModel', 'range': [2952, 2954], 'children': []}, {'type': 'FunctionBody', 'name': 'body', 'range': [2955, 2992], 'children': [{'type': 'AssignmentExpression', 'name': 'node', 'range': [2957, 2983], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [2959, 2960], 'children': []}, {'type': 'MemberExpression', 'name': 'AgentNode.prisma', 'range': [2960, 2962], 'children': []}, {'type': 'CallExpression', 'name': 'find_unique_or_raise', 'range': [2966, 2983], 'children': [{'type': 'ObjectExpression', 'name': 'where', 'range': [2971, 2975], 'children': [{'type': 'Property', 'name': 'id', 'range': [2972, 2974], 'children': []}]}, {'type': 'Identifier', 'name': 'AGENT_NODE_INCLUDE', 'range': [2980, 2981], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [2985, 2992], 'children': [{'type': 'CallExpression', 'name': 'NodeModel.from_db', 'range': [2986, 2991], 'children': [{'type': 'Identifier', 'name': 'node', 'range': [2990, 2991], 'children': []}]}]}]}]}]}
2025-01-08 10:28:38,731 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:42,374 - INFO - Step 2 result: {'type': 'Program', 'name': 'get_graphs', 'range': [3097, 3261], 'children': [{'type': 'FunctionDeclaration', 'name': 'get_graphs', 'range': [3097, 3261], 'children': [{'type': 'AsyncKeyword', 'name': 'async', 'range': [3097, 3102], 'children': []}, {'type': 'DefKeyword', 'name': 'def', 'range': [3098, 3101], 'children': []}, {'type': 'FunctionName', 'name': 'get_graphs', 'range': [3099, 3108], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [3100, 3121], 'children': [{'type': 'Parameter', 'name': 'user_id', 'range': [3102, 3105], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [3104, 3107], 'children': []}]}, {'type': 'Parameter', 'name': 'filter_by', 'range': [3107, 3119], 'children': [{'type': 'TypeAnnotation', 'name': 'Literal', 'range': [3109, 3114], 'children': []}, {'type': 'DefaultValue', 'name': '"active"', 'range': [3118, 3121], 'children': []}]}]}, {'type': 'ReturnType', 'name': 'list[GraphModel]', 'range': [3124, 3127], 'children': []}, {'type': 'FunctionBody', 'name': 'body', 'range': [3129, 3261], 'children': [{'type': 'Docstring', 'name': 'docstring', 'range': [3130, 3132], 'children': []}, {'type': 'VariableDeclaration', 'name': 'where_clause', 'range': [3134, 3142], 'children': [{'type': 'TypeAnnotation', 'name': 'AgentGraphWhereInput', 'range': [3136, 3141], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [3137, 3142], 'children': []}]}, {'type': 'IfStatement', 'name': 'if', 'range': [3145, 3158], 'children': [{'type': 'Condition', 'name': 'filter_by == "active"', 'range': [3146, 3149], 'children': []}, {'type': 'Body', 'name': 'body', 'range': [3151, 3158], 'children': [{'type': 'Assignment', 'name': 'where_clause["isActive"] = True', 'range': [3152, 3157], 'children': []}]}]}, {'type': 'ElifStatement', 'name': 'elif', 'range': [3159, 3172], 'children': [{'type': 'Condition', 'name': 'filter_by == "template"', 'range': [3160, 3163], 'children': []}, {'type': 'Body', 'name': 'body', 'range': [3165, 3172], 'children': [{'type': 'Assignment', 'name': 'where_clause["isTemplate"] = True', 'range': [3166, 3171], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'graphs', 'range': [3174, 3184], 'children': [{'type': 'Assignment', 'name': '=', 'range': [3175, 3184], 'children': []}]}, {'type': 'AwaitExpression', 'name': 'await', 'range': [3176, 3184], 'children': [{'type': 'CallExpression', 'name': 'AgentGraph.prisma().find_many', 'range': [3177, 3184], 'children': [{'type': 'Arguments', 'name': 'arguments', 'range': [3180, 3184], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'graph_models', 'range': [3215, 3219], 'children': [{'type': 'Assignment', 'name': '=', 'range': [3216, 3219], 'children': []}]}, {'type': 'ForStatement', 'name': 'for', 'range': [3220, 3256], 'children': [{'type': 'Initialization', 'name': 'graph in graphs', 'range': [3221, 3224], 'children': []}, {'type': 'Body', 'name': 'body', 'range': [3225, 3256], 'children': [{'type': 'TryStatement', 'name': 'try', 'range': [3226, 3256], 'children': [{'type': 'Body', 'name': 'body', 'range': [3228, 3240], 'children': [{'type': 'CallExpression', 'name': 'graph_models.append', 'range': [3229, 3240], 'children': [{'type': 'Arguments', 'name': 'arguments', 'range': [3232, 3240], 'children': []}]}]}, {'type': 'CatchClause', 'name': 'except', 'range': [3241, 3256], 'children': [{'type': 'Parameter', 'name': 'Exception as e', 'range': [3242, 3245], 'children': []}, {'type': 'Body', 'name': 'body', 'range': [3246, 3256], 'children': [{'type': 'CallExpression', 'name': 'logger.error', 'range': [3247, 3254], 'children': [{'type': 'Arguments', 'name': 'arguments', 'range': [3250, 3254], 'children': []}]}, {'type': 'ContinueStatement', 'name': 'continue', 'range': [3255, 3256], 'children': []}]}]}]}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [3258, 3261], 'children': [{'type': 'Argument', 'name': 'graph_models', 'range': [3259, 3261], 'children': []}]}]}]}]}
2025-01-08 10:28:42,374 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:44,307 - INFO - Step 3 result: {'type': 'Program', 'name': 'get_executions', 'range': [3262, 3324], 'children': [{'type': 'FunctionDeclaration', 'name': 'get_executions', 'range': [3262, 3324], 'children': [{'type': 'Parameter', 'name': 'user_id', 'range': [3266, 3268], 'children': []}, {'type': 'ReturnType', 'name': 'list[GraphExecution]', 'range': [3270, 3275], 'children': []}, {'type': 'FunctionBody', 'name': '', 'range': [3277, 3324], 'children': [{'type': 'VariableDeclaration', 'name': 'executions', 'range': [3278, 3287], 'children': [{'type': 'Assignment', 'name': '=', 'range': [3279, 3279], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [3280, 3280], 'children': [{'type': 'MemberExpression', 'name': 'AgentGraphExecution.prisma', 'range': [3281, 3283], 'children': [{'type': 'CallExpression', 'name': '()', 'range': [3284, 3285], 'children': []}, {'type': 'MemberExpression', 'name': '.find_many', 'range': [3286, 3287], 'children': [{'type': 'CallExpression', 'name': '()', 'range': [3288, 3308], 'children': [{'type': 'ObjectExpression', 'name': 'where', 'range': [3290, 3296], 'children': [{'type': 'Property', 'name': 'userId', 'range': [3293, 3295], 'children': []}]}, {'type': 'ObjectExpression', 'name': 'order', 'range': [3299, 3305], 'children': [{'type': 'Property', 'name': 'createdAt', 'range': [3302, 3304], 'children': []}]}]}]}]}]}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [3310, 3322], 'children': [{'type': 'ArrayExpression', 'name': '[]', 'range': [3311, 3322], 'children': [{'type': 'CallExpression', 'name': 'GraphExecution.from_db', 'range': [3312, 3317], 'children': [{'type': 'Identifier', 'name': 'execution', 'range': [3316, 3316], 'children': []}]}, {'type': 'ForStatement', 'name': 'for', 'range': [3318, 3321], 'children': [{'type': 'Identifier', 'name': 'execution', 'range': [3319, 3319], 'children': []}, {'type': 'Identifier', 'name': 'executions', 'range': [3321, 3321], 'children': []}]}]}]}]}]}]}
2025-01-08 10:28:44,307 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:44,705 - INFO - Step 3 result: {'type': 'Program', 'name': 'Node', 'range': [266, 334], 'children': [{'type': 'ClassDeclaration', 'name': 'Node', 'range': [266, 334], 'children': [{'type': 'ClassHeritage', 'name': 'BaseDbModel', 'range': [268, 270], 'children': []}, {'type': 'PropertyDeclaration', 'name': 'block_id', 'range': [273, 275], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [275, 275], 'children': []}]}, {'type': 'PropertyDeclaration', 'name': 'input_default', 'range': [277, 282], 'children': [{'type': 'TypeAnnotation', 'name': 'BlockInput', 'range': [279, 279], 'children': []}, {'type': 'ObjectLiteral', 'name': '{}', 'range': [281, 282], 'children': []}]}, {'type': 'PropertyDeclaration', 'name': 'metadata', 'range': [291, 301], 'children': [{'type': 'TypeAnnotation', 'name': 'dict[str, Any]', 'range': [293, 298], 'children': []}, {'type': 'ObjectLiteral', 'name': '{}', 'range': [300, 301], 'children': []}]}, {'type': 'PropertyDeclaration', 'name': 'input_links', 'range': [303, 311], 'children': [{'type': 'TypeAnnotation', 'name': 'list[Link]', 'range': [305, 308], 'children': []}, {'type': 'ArrayLiteral', 'name': '[]', 'range': [310, 311], 'children': []}]}, {'type': 'PropertyDeclaration', 'name': 'output_links', 'range': [313, 321], 'children': [{'type': 'TypeAnnotation', 'name': 'list[Link]', 'range': [315, 318], 'children': []}, {'type': 'ArrayLiteral', 'name': '[]', 'range': [320, 321], 'children': []}]}, {'type': 'PropertyDeclaration', 'name': 'webhook_id', 'range': [324, 331], 'children': [{'type': 'TypeAnnotation', 'name': 'Optional[str]', 'range': [326, 329], 'children': []}, {'type': 'NullLiteral', 'name': 'None', 'range': [331, 331], 'children': []}]}]}]}
2025-01-08 10:28:44,706 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:45,360 - INFO - Step 3 result: {'type': 'Program', 'name': 'make_graph_model', 'range': [4247, 4346], 'children': [{'type': 'FunctionDeclaration', 'name': 'make_graph_model', 'range': [4247, 4346], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [4249, 4257], 'children': [{'type': 'Parameter', 'name': 'creatable_graph', 'range': [4250, 4252], 'children': []}, {'type': 'Parameter', 'name': 'user_id', 'range': [4254, 4256], 'children': []}]}, {'type': 'ReturnType', 'name': 'GraphModel', 'range': [4258, 4260], 'children': []}, {'type': 'Docstring', 'name': 'docstring', 'range': [4263, 4265], 'children': []}, {'type': 'Comment', 'name': 'comment', 'range': [4267, 4278], 'children': []}, {'type': 'ReturnStatement', 'name': 'return', 'range': [4279, 4345], 'children': [{'type': 'FunctionCall', 'name': 'GraphModel', 'range': [4280, 4344], 'children': [{'type': 'ArgumentList', 'name': 'arguments', 'range': [4281, 4344], 'children': [{'type': 'KeywordArgument', 'name': 'creatable_graph', 'range': [4285, 4294], 'children': [{'type': 'FunctionCall', 'name': 'model_dump', 'range': [4287, 4294], 'children': [{'type': 'ArgumentList', 'name': 'arguments', 'range': [4288, 4294], 'children': [{'type': 'KeywordArgument', 'name': 'exclude', 'range': [4290, 4293], 'children': []}]}]}]}, {'type': 'KeywordArgument', 'name': 'user_id', 'range': [4297, 4299], 'children': []}, {'type': 'KeywordArgument', 'name': 'nodes', 'range': [4302, 4341], 'children': [{'type': 'List', 'name': 'nodes', 'range': [4304, 4341], 'children': [{'type': 'FunctionCall', 'name': 'NodeModel', 'range': [4306, 4332], 'children': [{'type': 'ArgumentList', 'name': 'arguments', 'range': [4307, 4332], 'children': [{'type': 'KeywordArgument', 'name': 'creatable_node', 'range': [4311, 4316], 'children': [{'type': 'FunctionCall', 'name': 'model_dump', 'range': [4313, 4316], 'children': []}]}, {'type': 'KeywordArgument', 'name': 'graph_id', 'range': [4318, 4323], 'children': []}, {'type': 'KeywordArgument', 'name': 'graph_version', 'range': [4325, 4330], 'children': []}]}]}]}]}]}]}]}]}]}
2025-01-08 10:28:45,360 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:45,442 - INFO - Step 3 result: {'type': 'Program', 'name': 'get_execution', 'range': [3325, 3381], 'children': [{'type': 'FunctionDeclaration', 'name': 'get_execution', 'range': [3325, 3381], 'children': [{'type': 'AsyncKeyword', 'name': 'async', 'range': [3325, 3329], 'children': []}, {'type': 'DefKeyword', 'name': 'def', 'range': [3326, 3329], 'children': []}, {'type': 'FunctionName', 'name': 'get_execution', 'range': [3327, 3340], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [3328, 3336], 'children': [{'type': 'Parameter', 'name': 'user_id', 'range': [3329, 3331], 'children': []}, {'type': 'TypeAnnotation', 'name': 'str', 'range': [3330, 3331], 'children': []}, {'type': 'Parameter', 'name': 'execution_id', 'range': [3333, 3335], 'children': []}, {'type': 'TypeAnnotation', 'name': 'str', 'range': [3334, 3335], 'children': []}]}, {'type': 'ReturnType', 'name': 'GraphExecution | None', 'range': [3337, 3341], 'children': []}, {'type': 'FunctionBody', 'name': 'body', 'range': [3343, 3381], 'children': [{'type': 'VariableDeclaration', 'name': 'execution', 'range': [3344, 3368], 'children': [{'type': 'Assignment', 'name': '=', 'range': [3345, 3346], 'children': []}, {'type': 'AwaitExpression', 'name': 'await', 'range': [3346, 3351], 'children': [{'type': 'MemberExpression', 'name': 'AgentGraphExecution.prisma', 'range': [3347, 3350], 'children': []}, {'type': 'CallExpression', 'name': 'find_first', 'range': [3353, 3368], 'children': [{'type': 'ObjectLiteral', 'name': 'where', 'range': [3358, 3366], 'children': [{'type': 'Property', 'name': 'id', 'range': [3359, 3361], 'children': []}, {'type': 'Property', 'name': 'userId', 'range': [3363, 3365], 'children': []}]}]}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [3370, 3380], 'children': [{'type': 'ConditionalExpression', 'name': 'if', 'range': [3377, 3380], 'children': [{'type': 'MemberExpression', 'name': 'GraphExecution.from_db', 'range': [3371, 3376], 'children': []}, {'type': 'Identifier', 'name': 'execution', 'range': [3375, 3376], 'children': []}, {'type': 'Identifier', 'name': 'None', 'range': [3380, 3381], 'children': []}]}]}]}]}]}
2025-01-08 10:28:45,442 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:46,306 - INFO - Step 3 result: {'type': 'Program', 'name': 'get_graph_all_versions', 'range': [3714, 3799], 'children': [{'type': 'FunctionDeclaration', 'name': 'get_graph_all_versions', 'range': [3714, 3799], 'children': [{'type': 'AsyncKeyword', 'name': 'async', 'range': [3714, 3714], 'children': []}, {'type': 'DefKeyword', 'name': 'def', 'range': [3715, 3715], 'children': []}, {'type': 'FunctionName', 'name': 'get_graph_all_versions', 'range': [3716, 3716], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [3717, 3725], 'children': [{'type': 'Parameter', 'name': 'graph_id', 'range': [3718, 3720], 'children': []}, {'type': 'Parameter', 'name': 'user_id', 'range': [3722, 3724], 'children': []}]}, {'type': 'ReturnType', 'name': 'return_type', 'range': [3726, 3731], 'children': [{'type': 'ListType', 'name': 'list', 'range': [3728, 3731], 'children': [{'type': 'TypeName', 'name': 'GraphModel', 'range': [3730, 3730], 'children': []}]}]}, {'type': 'FunctionBody', 'name': 'body', 'range': [3733, 3799], 'children': [{'type': 'VariableDeclaration', 'name': 'graph_versions', 'range': [3734, 3773], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [3736, 3736], 'children': [{'type': 'CallExpression', 'name': 'AgentGraph.prisma().find_many', 'range': [3737, 3773], 'children': [{'type': 'Arguments', 'name': 'arguments', 'range': [3740, 3773], 'children': [{'type': 'Argument', 'name': 'where', 'range': [3746, 3756], 'children': []}, {'type': 'Argument', 'name': 'order', 'range': [3759, 3765], 'children': []}, {'type': 'Argument', 'name': 'include', 'range': [3768, 3771], 'children': []}]}]}]}]}, {'type': 'IfStatement', 'name': 'if', 'range': [3776, 3784], 'children': [{'type': 'Condition', 'name': 'not graph_versions', 'range': [3777, 3778], 'children': []}, {'type': 'ReturnStatement', 'name': 'return', 'range': [3781, 3783], 'children': []}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [3786, 3798], 'children': [{'type': 'ListComprehension', 'name': 'list comprehension', 'range': [3787, 3798], 'children': [{'type': 'Expression', 'name': 'GraphModel.from_db(graph)', 'range': [3788, 3793], 'children': []}, {'type': 'ForClause', 'name': 'for graph in graph_versions', 'range': [3794, 3797], 'children': []}]}]}]}]}]}
2025-01-08 10:28:46,306 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:48,248 - INFO - Step 3 result: {'type': 'Program', 'name': 'set_node_webhook', 'range': [2994, 3095], 'children': [{'type': 'FunctionDeclaration', 'name': 'set_node_webhook', 'range': [2994, 3095], 'children': [{'type': 'AsyncKeyword', 'name': 'async', 'range': [2994, 2994], 'children': []}, {'type': 'DefKeyword', 'name': 'def', 'range': [2995, 2995], 'children': []}, {'type': 'FunctionName', 'name': 'set_node_webhook', 'range': [2996, 2996], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [2997, 3007], 'children': [{'type': 'Parameter', 'name': 'node_id', 'range': [2998, 3000], 'children': []}, {'type': 'Parameter', 'name': 'webhook_id', 'range': [3002, 3006], 'children': []}]}, {'type': 'ReturnType', 'name': 'NodeModel', 'range': [3008, 3010], 'children': []}, {'type': 'FunctionBody', 'name': 'body', 'range': [3012, 3095], 'children': [{'type': 'AssignmentExpression', 'name': 'node', 'range': [3013, 3074], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [3015, 3015], 'children': []}, {'type': 'MemberExpression', 'name': 'AgentNode.prisma', 'range': [3016, 3018], 'children': []}, {'type': 'CallExpression', 'name': 'update', 'range': [3022, 3074], 'children': [{'type': 'ObjectExpression', 'name': 'where', 'range': [3025, 3031], 'children': []}, {'type': 'ObjectExpression', 'name': 'data', 'range': [3034, 3065], 'children': []}, {'type': 'Identifier', 'name': 'AGENT_NODE_INCLUDE', 'range': [3069, 3071], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if', 'range': [3076, 3086], 'children': [{'type': 'UnaryExpression', 'name': 'not', 'range': [3077, 3077], 'children': []}, {'type': 'Identifier', 'name': 'node', 'range': [3078, 3078], 'children': []}, {'type': 'ThrowStatement', 'name': 'raise', 'range': [3081, 3086], 'children': [{'type': 'NewExpression', 'name': 'ValueError', 'range': [3082, 3082], 'children': []}, {'type': 'TemplateLiteral', 'name': 'f', 'range': [3084, 3085], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [3088, 3094], 'children': [{'type': 'MemberExpression', 'name': 'NodeModel.from_db', 'range': [3089, 3091], 'children': []}, {'type': 'Identifier', 'name': 'node', 'range': [3093, 3093], 'children': []}]}]}]}]}
2025-01-08 10:28:48,256 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:51,363 - INFO - Step 2 result: {'type': 'Program', 'name': 'get_graph', 'range': [3383, 3556], 'children': [{'type': 'FunctionDeclaration', 'name': 'get_graph', 'range': [3383, 3556], 'children': [{'type': 'AsyncKeyword', 'name': 'async', 'range': [3383, 3387], 'children': []}, {'type': 'DefKeyword', 'name': 'def', 'range': [3384, 3387], 'children': []}, {'type': 'FunctionName', 'name': 'get_graph', 'range': [3385, 3394], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [3386, 3425], 'children': [{'type': 'Parameter', 'name': 'graph_id', 'range': [3388, 3391], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [3389, 3391], 'children': []}]}, {'type': 'Parameter', 'name': 'version', 'range': [3393, 3399], 'children': [{'type': 'TypeAnnotation', 'name': 'int | None', 'range': [3394, 3399], 'children': []}, {'type': 'DefaultValue', 'name': 'None', 'range': [3398, 3399], 'children': []}]}, {'type': 'Parameter', 'name': 'template', 'range': [3402, 3406], 'children': [{'type': 'TypeAnnotation', 'name': 'bool', 'range': [3403, 3406], 'children': []}, {'type': 'DefaultValue', 'name': 'False', 'range': [3405, 3406], 'children': []}]}, {'type': 'Parameter', 'name': 'user_id', 'range': [3409, 3415], 'children': [{'type': 'TypeAnnotation', 'name': 'str | None', 'range': [3410, 3415], 'children': []}, {'type': 'DefaultValue', 'name': 'None', 'range': [3414, 3415], 'children': []}]}, {'type': 'Parameter', 'name': 'for_export', 'range': [3418, 3422], 'children': [{'type': 'TypeAnnotation', 'name': 'bool', 'range': [3419, 3422], 'children': []}, {'type': 'DefaultValue', 'name': 'False', 'range': [3421, 3422], 'children': []}]}]}, {'type': 'ReturnType', 'name': 'GraphModel | None', 'range': [3426, 3431], 'children': []}, {'type': 'FunctionBody', 'name': 'body', 'range': [3432, 3556], 'children': [{'type': 'Docstring', 'name': 'docstring', 'range': [3433, 3435], 'children': []}, {'type': 'VariableDeclaration', 'name': 'where_clause', 'range': [3437, 3448], 'children': [{'type': 'TypeAnnotation', 'name': 'AgentGraphWhereInput', 'range': [3438, 3441], 'children': []}, {'type': 'ObjectLiteral', 'name': 'initializer', 'range': [3441, 3448], 'children': [{'type': 'Property', 'name': 'id', 'range': [3443, 3446], 'children': [{'type': 'Identifier', 'name': 'graph_id', 'range': [3445, 3446], 'children': []}]}]}]}, {'type': 'IfStatement', 'name': 'if', 'range': [3450, 3463], 'children': [{'type': 'Condition', 'name': 'version is not None', 'range': [3451, 3455], 'children': []}, {'type': 'Block', 'name': 'then', 'range': [3456, 3463], 'children': [{'type': 'ExpressionStatement', 'name': 'where_clause["version"] = version', 'range': [3457, 3462], 'children': []}]}]}, {'type': 'ElifStatement', 'name': 'elif', 'range': [3464, 3475], 'children': [{'type': 'Condition', 'name': 'not template', 'range': [3465, 3467], 'children': []}, {'type': 'Block', 'name': 'then', 'range': [3468, 3475], 'children': [{'type': 'ExpressionStatement', 'name': 'where_clause["isActive"] = True', 'range': [3469, 3474], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if', 'range': [3491, 3507], 'children': [{'type': 'Condition', 'name': 'user_id is not None and not template', 'range': [3492, 3499], 'children': []}, {'type': 'Block', 'name': 'then', 'range': [3500, 3507], 'children': [{'type': 'ExpressionStatement', 'name': 'where_clause["userId"] = user_id', 'range': [3501, 3506], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'graph', 'range': [3509, 3541], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [3511, 3541], 'children': [{'type': 'CallExpression', 'name': 'AgentGraph.prisma().find_first', 'range': [3512, 3540], 'children': [{'type': 'Arguments', 'name': 'arguments', 'range': [3519, 3540], 'children': [{'type': 'NamedArgument', 'name': 'where', 'range': [3521, 3524], 'children': [{'type': 'Identifier', 'name': 'where_clause', 'range': [3523, 3524], 'children': []}]}, {'type': 'NamedArgument', 'name': 'include', 'range': [3526, 3529], 'children': [{'type': 'Identifier', 'name': 'AGENT_GRAPH_INCLUDE', 'range': [3528, 3529], 'children': []}]}, {'type': 'NamedArgument', 'name': 'order', 'range': [3531, 3538], 'children': [{'type': 'ObjectLiteral', 'name': 'initializer', 'range': [3533, 3537], 'children': [{'type': 'Property', 'name': 'version', 'range': [3534, 3536], 'children': [{'type': 'StringLiteral', 'name': 'desc', 'range': [3536, 3536], 'children': []}]}]}]}]}]}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [3542, 3555], 'children': [{'type': 'ConditionalExpression', 'name': 'GraphModel.from_db(graph, for_export) if graph else None', 'range': [3543, 3554], 'children': [{'type': 'CallExpression', 'name': 'GraphModel.from_db', 'range': [3543, 3550], 'children': [{'type': 'Arguments', 'name': 'arguments', 'range': [3546, 3550], 'children': [{'type': 'Identifier', 'name': 'graph', 'range': [3547, 3548], 'children': []}, {'type': 'Identifier', 'name': 'for_export', 'range': [3549, 3550], 'children': []}]}]}, {'type': 'Identifier', 'name': 'graph', 'range': [3552, 3553], 'children': []}, {'type': 'NullLiteral', 'name': 'None', 'range': [3554, 3554], 'children': []}]}]}]}]}]}
2025-01-08 10:28:51,363 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:52,348 - INFO - Step 2 result: {'type': 'Program', 'name': 'set_graph_active_version', 'range': [3557, 3713], 'children': [{'type': 'FunctionDeclaration', 'name': 'set_graph_active_version', 'range': [3557, 3576], 'children': [{'type': 'Keyword', 'name': 'async', 'range': [3557, 3561], 'children': []}, {'type': 'Keyword', 'name': 'def', 'range': [3558, 3561], 'children': []}, {'type': 'Identifier', 'name': 'set_graph_active_version', 'range': [3559, 3583], 'children': []}, {'type': 'ParameterList', 'name': '', 'range': [3560, 3572], 'children': [{'type': 'Parameter', 'name': 'graph_id', 'range': [3561, 3567], 'children': [{'type': 'Identifier', 'name': 'graph_id', 'range': [3561, 3567], 'children': []}, {'type': 'TypeAnnotation', 'name': 'str', 'range': [3562, 3567], 'children': []}]}, {'type': 'Parameter', 'name': 'version', 'range': [3565, 3571], 'children': [{'type': 'Identifier', 'name': 'version', 'range': [3565, 3571], 'children': []}, {'type': 'TypeAnnotation', 'name': 'int', 'range': [3566, 3571], 'children': []}]}, {'type': 'Parameter', 'name': 'user_id', 'range': [3569, 3575], 'children': [{'type': 'Identifier', 'name': 'user_id', 'range': [3569, 3575], 'children': []}, {'type': 'TypeAnnotation', 'name': 'str', 'range': [3570, 3575], 'children': []}]}]}, {'type': 'ReturnType', 'name': 'None', 'range': [3573, 3576], 'children': []}]}, {'type': 'Comment', 'name': '# Activate the requested version if it exists and is owned by the user.', 'range': [3578, 3592], 'children': []}, {'type': 'VariableDeclaration', 'name': 'updated_count', 'range': [3594, 3603], 'children': [{'type': 'Identifier', 'name': 'updated_count', 'range': [3594, 3603], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [3595, 3603], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [3596, 3603], 'children': [{'type': 'CallExpression', 'name': 'AgentGraph.prisma().update_many', 'range': [3597, 3637], 'children': [{'type': 'MemberExpression', 'name': 'AgentGraph.prisma', 'range': [3597, 3600], 'children': [{'type': 'Identifier', 'name': 'AgentGraph', 'range': [3597, 3600], 'children': []}, {'type': 'Identifier', 'name': 'prisma', 'range': [3598, 3600], 'children': []}]}, {'type': 'CallExpression', 'name': 'update_many', 'range': [3603, 3637], 'children': [{'type': 'ObjectExpression', 'name': 'data', 'range': [3608, 3612], 'children': [{'type': 'Property', 'name': '"isActive"', 'range': [3609, 3611], 'children': [{'type': 'Literal', 'name': 'True', 'range': [3610, 3611], 'children': []}]}]}, {'type': 'ObjectExpression', 'name': 'where', 'range': [3617, 3634], 'children': [{'type': 'Property', 'name': '"id"', 'range': [3619, 3621], 'children': [{'type': 'Identifier', 'name': 'graph_id', 'range': [3620, 3621], 'children': []}]}, {'type': 'Property', 'name': '"version"', 'range': [3624, 3626], 'children': [{'type': 'Identifier', 'name': 'version', 'range': [3625, 3626], 'children': []}]}, {'type': 'Property', 'name': '"userId"', 'range': [3629, 3631], 'children': [{'type': 'Identifier', 'name': 'user_id', 'range': [3630, 3631], 'children': []}]}]}]}]}]}]}]}, {'type': 'IfStatement', 'name': 'if', 'range': [3639, 3652], 'children': [{'type': 'BinaryExpression', 'name': '==', 'range': [3641, 3643], 'children': [{'type': 'Identifier', 'name': 'updated_count', 'range': [3640, 3643], 'children': []}, {'type': 'Literal', 'name': '0', 'range': [3642, 3643], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [3644, 3652], 'children': [{'type': 'ThrowStatement', 'name': 'raise', 'range': [3646, 3651], 'children': [{'type': 'NewExpression', 'name': 'Exception', 'range': [3647, 3651], 'children': [{'type': 'Literal', 'name': 'f"Graph #{graph_id} v{version} not found or not owned by user"', 'range': [3649, 3651], 'children': []}]}]}]}]}, {'type': 'Comment', 'name': '# Deactivate all other versions.', 'range': [3654, 3659], 'children': []}, {'type': 'ExpressionStatement', 'name': 'await', 'range': [3661, 3712], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [3661, 3712], 'children': [{'type': 'CallExpression', 'name': 'AgentGraph.prisma().update_many', 'range': [3662, 3711], 'children': [{'type': 'MemberExpression', 'name': 'AgentGraph.prisma', 'range': [3662, 3665], 'children': [{'type': 'Identifier', 'name': 'AgentGraph', 'range': [3662, 3665], 'children': []}, {'type': 'Identifier', 'name': 'prisma', 'range': [3663, 3665], 'children': []}]}, {'type': 'CallExpression', 'name': 'update_many', 'range': [3668, 3711], 'children': [{'type': 'ObjectExpression', 'name': 'data', 'range': [3673, 3677], 'children': [{'type': 'Property', 'name': '"isActive"', 'range': [3674, 3676], 'children': [{'type': 'Literal', 'name': 'False', 'range': [3675, 3676], 'children': []}]}]}, {'type': 'ObjectExpression', 'name': 'where', 'range': [3682, 3708], 'children': [{'type': 'Property', 'name': '"id"', 'range': [3684, 3686], 'children': [{'type': 'Identifier', 'name': 'graph_id', 'range': [3685, 3686], 'children': []}]}, {'type': 'Property', 'name': '"version"', 'range': [3689, 3695], 'children': [{'type': 'ObjectExpression', 'name': 'not', 'range': [3692, 3694], 'children': [{'type': 'Identifier', 'name': 'version', 'range': [3693, 3694], 'children': []}]}]}, {'type': 'Property', 'name': '"userId"', 'range': [3698, 3700], 'children': [{'type': 'Identifier', 'name': 'user_id', 'range': [3699, 3700], 'children': []}]}, {'type': 'Property', 'name': '"isActive"', 'range': [3703, 3705], 'children': [{'type': 'Literal', 'name': 'True', 'range': [3704, 3705], 'children': []}]}]}]}]}]}]}]}
2025-01-08 10:28:52,348 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:53,250 - INFO - Step 3 result: {'type': 'Program', 'name': 'create_graph', 'range': [3860, 3935], 'children': [{'type': 'FunctionDeclaration', 'name': 'create_graph', 'range': [3860, 3935], 'children': [{'type': 'Parameter', 'name': 'graph', 'range': [3864, 3866]}, {'type': 'Parameter', 'name': 'user_id', 'range': [3868, 3870]}, {'type': 'ReturnType', 'name': 'GraphModel', 'range': [3874, 3874]}, {'type': 'BlockStatement', 'range': [3876, 3935], 'children': [{'type': 'WithStatement', 'range': [3877, 3885], 'children': [{'type': 'VariableDeclaration', 'name': 'tx', 'range': [3883, 3883]}]}, {'type': 'ExpressionStatement', 'range': [3886, 3895], 'children': [{'type': 'CallExpression', 'name': '__create_graph', 'range': [3887, 3894], 'children': [{'type': 'Argument', 'name': 'tx', 'range': [3889, 3889]}, {'type': 'Argument', 'name': 'graph', 'range': [3891, 3891]}, {'type': 'Argument', 'name': 'user_id', 'range': [3893, 3893]}]}]}, {'type': 'IfStatement', 'range': [3897, 3926], 'children': [{'type': 'AssignmentExpression', 'range': [3898, 3921], 'children': [{'type': 'CallExpression', 'name': 'get_graph', 'range': [3902, 3921], 'children': [{'type': 'Argument', 'name': 'graph.id', 'range': [3905, 3907]}, {'type': 'Argument', 'name': 'graph.version', 'range': [3909, 3911]}, {'type': 'Argument', 'name': 'graph.is_template', 'range': [3913, 3915]}, {'type': 'Argument', 'name': 'user_id', 'range': [3917, 3919]}]}]}, {'type': 'ReturnStatement', 'range': [3924, 3926], 'children': [{'type': 'Identifier', 'name': 'created_graph', 'range': [3925, 3925]}]}]}, {'type': 'ThrowStatement', 'range': [3928, 3934], 'children': [{'type': 'NewExpression', 'name': 'ValueError', 'range': [3929, 3933], 'children': [{'type': 'Literal', 'value': 'f"Created graph {graph.id} v{graph.version} is not in DB"', 'range': [3931, 3932]}]}]}]}]}]}
2025-01-08 10:28:53,250 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:53,426 - INFO - Step 2 result: {'type': 'Program', 'name': '', 'range': [0, 143], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 2], 'children': [{'type': 'ImportClause', 'name': 'asyncio', 'range': [0, 1], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [3, 5], 'children': [{'type': 'ImportClause', 'name': 'logging', 'range': [3, 4], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [6, 8], 'children': [{'type': 'ImportClause', 'name': 'uuid', 'range': [6, 7], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [9, 13], 'children': [{'type': 'ImportClause', 'name': 'defaultdict', 'range': [11, 12], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [14, 20], 'children': [{'type': 'ImportClause', 'name': 'datetime', 'range': [16, 17], 'children': []}, {'type': 'ImportClause', 'name': 'timezone', 'range': [19, 20], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [21, 31], 'children': [{'type': 'ImportClause', 'name': 'Any', 'range': [23, 24], 'children': []}, {'type': 'ImportClause', 'name': 'Literal', 'range': [26, 27], 'children': []}, {'type': 'ImportClause', 'name': 'Optional', 'range': [28, 29], 'children': []}, {'type': 'ImportClause', 'name': 'Type', 'range': [30, 31], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [33, 35], 'children': [{'type': 'ImportClause', 'name': 'prisma', 'range': [33, 34], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [36, 48], 'children': [{'type': 'ImportClause', 'name': 'AgentGraph', 'range': [40, 41], 'children': []}, {'type': 'ImportClause', 'name': 'AgentGraphExecution', 'range': [43, 44], 'children': []}, {'type': 'ImportClause', 'name': 'AgentNode', 'range': [45, 46], 'children': []}, {'type': 'ImportClause', 'name': 'AgentNodeLink', 'range': [47, 48], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [49, 55], 'children': [{'type': 'ImportClause', 'name': 'AgentGraphWhereInput', 'range': [53, 54], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [56, 62], 'children': [{'type': 'ImportClause', 'name': 'computed_field', 'range': [60, 61], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [64, 72], 'children': [{'type': 'ImportClause', 'name': 'AgentExecutorBlock', 'range': [70, 71], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [73, 83], 'children': [{'type': 'ImportClause', 'name': 'AgentInputBlock', 'range': [79, 80], 'children': []}, {'type': 'ImportClause', 'name': 'AgentOutputBlock', 'range': [82, 83], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [84, 90], 'children': [{'type': 'ImportClause', 'name': 'json', 'range': [88, 89], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [92, 103], 'children': [{'type': 'ImportClause', 'name': 'BlockInput', 'range': [95, 96], 'children': []}, {'type': 'ImportClause', 'name': 'BlockType', 'range': [98, 99], 'children': []}, {'type': 'ImportClause', 'name': 'get_block', 'range': [100, 101], 'children': []}, {'type': 'ImportClause', 'name': 'get_blocks', 'range': [102, 103], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [104, 111], 'children': [{'type': 'ImportClause', 'name': 'BaseDbModel', 'range': [107, 108], 'children': []}, {'type': 'ImportClause', 'name': 'transaction', 'range': [110, 111], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [112, 117], 'children': [{'type': 'ImportClause', 'name': 'ExecutionStatus', 'range': [115, 116], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [118, 125], 'children': [{'type': 'ImportClause', 'name': 'AGENT_GRAPH_INCLUDE', 'range': [121, 122], 'children': []}, {'type': 'ImportClause', 'name': 'AGENT_NODE_INCLUDE', 'range': [124, 125], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [126, 131], 'children': [{'type': 'ImportClause', 'name': 'Webhook', 'range': [129, 130], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'logger', 'range': [133, 141], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [134, 141], 'children': [{'type': 'CallExpression', 'name': 'getLogger', 'range': [135, 140], 'children': [{'type': 'Identifier', 'name': '__name__', 'range': [138, 139], 'children': []}]}]}]}]}
2025-01-08 10:28:53,427 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:53,903 - INFO - Step 4 result: {'type': 'Program', 'name': 'get_node', 'range': [2944, 2993], 'children': [{'type': 'FunctionDecl', 'name': 'get_node', 'range': [2944, 2992], 'children': [{'type': 'AsyncKeyword', 'name': 'async', 'range': [2944, 2948], 'children': []}, {'type': 'DefKeyword', 'name': 'def', 'range': [2945, 2948], 'children': []}, {'type': 'FunctionName', 'name': 'get_node', 'range': [2946, 2954], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [2947, 2951], 'children': [{'type': 'Parameter', 'name': 'node_id', 'range': [2948, 2950], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [2949, 2950], 'children': []}]}]}, {'type': 'ReturnType', 'name': 'NodeModel', 'range': [2952, 2954], 'children': []}, {'type': 'FunctionBody', 'name': 'body', 'range': [2955, 2992], 'children': [{'type': 'AssignmentExpression', 'name': 'node', 'range': [2957, 2983], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [2959, 2960], 'children': []}, {'type': 'MemberExpression', 'name': 'AgentNode.prisma', 'range': [2960, 2962], 'children': []}, {'type': 'CallExpression', 'name': 'find_unique_or_raise', 'range': [2966, 2983], 'children': [{'type': 'ObjectExpression', 'name': 'where', 'range': [2971, 2975], 'children': [{'type': 'Property', 'name': 'id', 'range': [2972, 2974], 'children': []}]}, {'type': 'Identifier', 'name': 'AGENT_NODE_INCLUDE', 'range': [2980, 2981], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [2985, 2992], 'children': [{'type': 'CallExpression', 'name': 'NodeModel.from_db', 'range': [2986, 2991], 'children': [{'type': 'Identifier', 'name': 'node', 'range': [2990, 2991], 'children': []}]}]}]}]}]}
2025-01-08 10:28:53,903 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:28:58,587 - INFO - Step 4 result: {'type': 'Program', 'name': 'Node', 'range': [266, 334], 'children': [{'type': 'ClassDecl', 'name': 'Node', 'range': [266, 334], 'children': [{'type': 'ClassHeritage', 'name': 'BaseDbModel', 'range': [268, 270], 'children': []}, {'type': 'PropertyDecl', 'name': 'block_id', 'range': [273, 275], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [275, 275], 'children': []}]}, {'type': 'PropertyDecl', 'name': 'input_default', 'range': [277, 282], 'children': [{'type': 'TypeAnnotation', 'name': 'BlockInput', 'range': [279, 279], 'children': []}, {'type': 'ObjectLiteral', 'name': '{}', 'range': [281, 282], 'children': []}]}, {'type': 'PropertyDecl', 'name': 'metadata', 'range': [291, 301], 'children': [{'type': 'TypeAnnotation', 'name': 'dict[str, Any]', 'range': [293, 298], 'children': []}, {'type': 'ObjectLiteral', 'name': '{}', 'range': [300, 301], 'children': []}]}, {'type': 'PropertyDecl', 'name': 'input_links', 'range': [303, 311], 'children': [{'type': 'TypeAnnotation', 'name': 'list[Link]', 'range': [305, 308], 'children': []}, {'type': 'ArrayLiteral', 'name': '[]', 'range': [310, 311], 'children': []}]}, {'type': 'PropertyDecl', 'name': 'output_links', 'range': [313, 321], 'children': [{'type': 'TypeAnnotation', 'name': 'list[Link]', 'range': [315, 318], 'children': []}, {'type': 'ArrayLiteral', 'name': '[]', 'range': [320, 321], 'children': []}]}, {'type': 'PropertyDecl', 'name': 'webhook_id', 'range': [324, 331], 'children': [{'type': 'TypeAnnotation', 'name': 'Optional[str]', 'range': [326, 329], 'children': []}, {'type': 'NullLiteral', 'name': 'None', 'range': [331, 331], 'children': []}]}]}]}
2025-01-08 10:28:58,587 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:29:00,967 - INFO - Step 4 result: {'type': 'Program', 'name': 'get_executions', 'range': [3262, 3324], 'children': [{'type': 'FunctionDecl', 'name': 'get_executions', 'range': [3262, 3324], 'children': [{'type': 'Parameter', 'name': 'user_id', 'range': [3266, 3268], 'children': []}, {'type': 'ReturnType', 'name': 'list[GraphExecution]', 'range': [3270, 3275], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [3277, 3324], 'children': [{'type': 'VariableDecl', 'name': 'executions', 'range': [3278, 3287], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [3279, 3279], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [3280, 3280], 'children': [{'type': 'MemberExpression', 'name': 'AgentGraphExecution.prisma', 'range': [3281, 3283], 'children': [{'type': 'CallExpression', 'name': '()', 'range': [3284, 3285], 'children': []}, {'type': 'MemberExpression', 'name': '.find_many', 'range': [3286, 3287], 'children': [{'type': 'CallExpression', 'name': '()', 'range': [3288, 3308], 'children': [{'type': 'ObjectExpression', 'name': 'where', 'range': [3290, 3296], 'children': [{'type': 'Property', 'name': 'userId', 'range': [3293, 3295], 'children': []}]}, {'type': 'ObjectExpression', 'name': 'order', 'range': [3299, 3305], 'children': [{'type': 'Property', 'name': 'createdAt', 'range': [3302, 3304], 'children': []}]}]}]}]}]}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [3310, 3322], 'children': [{'type': 'ArrayExpression', 'name': '[]', 'range': [3311, 3322], 'children': [{'type': 'CallExpression', 'name': 'GraphExecution.from_db', 'range': [3312, 3317], 'children': [{'type': 'Identifier', 'name': 'execution', 'range': [3316, 3316], 'children': []}]}, {'type': 'ForStatement', 'name': 'for', 'range': [3318, 3321], 'children': [{'type': 'Identifier', 'name': 'execution', 'range': [3319, 3319], 'children': []}, {'type': 'Identifier', 'name': 'executions', 'range': [3321, 3321], 'children': []}]}]}]}]}]}]}
2025-01-08 10:29:00,967 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:29:02,195 - INFO - Step 3 result: {'type': 'Program', 'name': '', 'range': [144, 265], 'children': [{'type': 'ClassDeclaration', 'name': 'Link', 'range': [144, 172], 'children': [{'type': 'PropertyDeclaration', 'name': 'source_id', 'range': [151, 153], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [153, 153], 'children': []}]}, {'type': 'PropertyDeclaration', 'name': 'sink_id', 'range': [155, 157], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [157, 157], 'children': []}]}, {'type': 'PropertyDeclaration', 'name': 'source_name', 'range': [159, 161], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [161, 161], 'children': []}]}, {'type': 'PropertyDeclaration', 'name': 'sink_name', 'range': [163, 165], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [165, 165], 'children': []}]}, {'type': 'PropertyDeclaration', 'name': 'is_static', 'range': [167, 171], 'children': [{'type': 'TypeAnnotation', 'name': 'bool', 'range': [169, 169], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [170, 170], 'children': [{'type': 'BooleanLiteral', 'name': 'False', 'range': [171, 171], 'children': []}]}]}]}, {'type': 'FunctionDeclaration', 'name': 'from_db', 'range': [174, 233], 'children': [{'type': 'Parameter', 'name': 'link', 'range': [180, 182], 'children': [{'type': 'TypeAnnotation', 'name': 'AgentNodeLink', 'range': [182, 182], 'children': []}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [186, 232], 'children': [{'type': 'CallExpression', 'name': 'Link', 'range': [187, 232], 'children': [{'type': 'Argument', 'name': 'id', 'range': [190, 194], 'children': [{'type': 'MemberExpression', 'name': 'link.id', 'range': [192, 194], 'children': []}]}, {'type': 'Argument', 'name': 'source_name', 'range': [197, 201], 'children': [{'type': 'MemberExpression', 'name': 'link.sourceName', 'range': [199, 201], 'children': []}]}, {'type': 'Argument', 'name': 'source_id', 'range': [204, 208], 'children': [{'type': 'MemberExpression', 'name': 'link.agentNodeSourceId', 'range': [206, 208], 'children': []}]}, {'type': 'Argument', 'name': 'sink_name', 'range': [211, 215], 'children': [{'type': 'MemberExpression', 'name': 'link.sinkName', 'range': [213, 215], 'children': []}]}, {'type': 'Argument', 'name': 'sink_id', 'range': [218, 222], 'children': [{'type': 'MemberExpression', 'name': 'link.agentNodeSinkId', 'range': [220, 222], 'children': []}]}, {'type': 'Argument', 'name': 'is_static', 'range': [225, 229], 'children': [{'type': 'MemberExpression', 'name': 'link.isStatic', 'range': [227, 229], 'children': []}]}]}]}]}, {'type': 'FunctionDeclaration', 'name': '__hash__', 'range': [235, 263], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [238, 238], 'children': []}, {'type': 'ReturnStatement', 'name': 'return', 'range': [242, 262], 'children': [{'type': 'CallExpression', 'name': 'hash', 'range': [243, 262], 'children': [{'type': 'Argument', 'name': 'tuple', 'range': [245, 261], 'children': [{'type': 'MemberExpression', 'name': 'self.source_id', 'range': [246, 248], 'children': []}, {'type': 'MemberExpression', 'name': 'self.sink_id', 'range': [250, 252], 'children': []}, {'type': 'MemberExpression', 'name': 'self.source_name', 'range': [254, 256], 'children': []}, {'type': 'MemberExpression', 'name': 'self.sink_name', 'range': [258, 260], 'children': []}]}]}]}]}]}
2025-01-08 10:29:02,196 - INFO - Starting Step 4: AST normalization
2025-01-08 10:29:02,362 - INFO - Step 4 result: {'type': 'Program', 'name': 'make_graph_model', 'range': [4247, 4346], 'children': [{'type': 'FunctionDecl', 'name': 'make_graph_model', 'range': [4247, 4346], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [4249, 4257], 'children': [{'type': 'Parameter', 'name': 'creatable_graph', 'range': [4250, 4252], 'children': []}, {'type': 'Parameter', 'name': 'user_id', 'range': [4254, 4256], 'children': []}]}, {'type': 'ReturnType', 'name': 'GraphModel', 'range': [4258, 4260], 'children': []}, {'type': 'Docstring', 'name': 'docstring', 'range': [4263, 4265], 'children': []}, {'type': 'Comment', 'name': 'comment', 'range': [4267, 4278], 'children': []}, {'type': 'ReturnStatement', 'name': 'return', 'range': [4279, 4345], 'children': [{'type': 'CallExpression', 'name': 'GraphModel', 'range': [4280, 4344], 'children': [{'type': 'ArgumentList', 'name': 'arguments', 'range': [4281, 4344], 'children': [{'type': 'KeywordArgument', 'name': 'creatable_graph', 'range': [4285, 4294], 'children': [{'type': 'CallExpression', 'name': 'model_dump', 'range': [4287, 4294], 'children': [{'type': 'ArgumentList', 'name': 'arguments', 'range': [4288, 4294], 'children': [{'type': 'KeywordArgument', 'name': 'exclude', 'range': [4290, 4293], 'children': []}]}]}]}, {'type': 'KeywordArgument', 'name': 'user_id', 'range': [4297, 4299], 'children': []}, {'type': 'KeywordArgument', 'name': 'nodes', 'range': [4302, 4341], 'children': [{'type': 'List', 'name': 'nodes', 'range': [4304, 4341], 'children': [{'type': 'CallExpression', 'name': 'NodeModel', 'range': [4306, 4332], 'children': [{'type': 'ArgumentList', 'name': 'arguments', 'range': [4307, 4332], 'children': [{'type': 'KeywordArgument', 'name': 'creatable_node', 'range': [4311, 4316], 'children': [{'type': 'CallExpression', 'name': 'model_dump', 'range': [4313, 4316], 'children': []}]}, {'type': 'KeywordArgument', 'name': 'graph_id', 'range': [4318, 4323], 'children': []}, {'type': 'KeywordArgument', 'name': 'graph_version', 'range': [4325, 4330], 'children': []}]}]}]}]}]}]}]}]}]}
2025-01-08 10:29:02,362 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:29:02,877 - INFO - Step 4 result: {'type': 'Program', 'name': 'get_execution', 'range': [3325, 3381], 'children': [{'type': 'FunctionDecl', 'name': 'get_execution', 'range': [3325, 3381], 'children': [{'type': 'AsyncKeyword', 'name': 'async', 'range': [3325, 3329], 'children': []}, {'type': 'DefKeyword', 'name': 'def', 'range': [3326, 3329], 'children': []}, {'type': 'FunctionName', 'name': 'get_execution', 'range': [3327, 3340], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [3328, 3336], 'children': [{'type': 'Parameter', 'name': 'user_id', 'range': [3329, 3331], 'children': []}, {'type': 'TypeAnnotation', 'name': 'str', 'range': [3330, 3331], 'children': []}, {'type': 'Parameter', 'name': 'execution_id', 'range': [3333, 3335], 'children': []}, {'type': 'TypeAnnotation', 'name': 'str', 'range': [3334, 3335], 'children': []}]}, {'type': 'ReturnType', 'name': 'GraphExecution | None', 'range': [3337, 3341], 'children': []}, {'type': 'FunctionBody', 'name': 'body', 'range': [3343, 3381], 'children': [{'type': 'VariableDeclaration', 'name': 'execution', 'range': [3344, 3368], 'children': [{'type': 'Assignment', 'name': '=', 'range': [3345, 3346], 'children': []}, {'type': 'AwaitExpression', 'name': 'await', 'range': [3346, 3351], 'children': [{'type': 'MemberExpression', 'name': 'AgentGraphExecution.prisma', 'range': [3347, 3350], 'children': []}, {'type': 'CallExpression', 'name': 'find_first', 'range': [3353, 3368], 'children': [{'type': 'ObjectLiteral', 'name': 'where', 'range': [3358, 3366], 'children': [{'type': 'Property', 'name': 'id', 'range': [3359, 3361], 'children': []}, {'type': 'Property', 'name': 'userId', 'range': [3363, 3365], 'children': []}]}]}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [3370, 3380], 'children': [{'type': 'ConditionalExpression', 'name': 'if', 'range': [3377, 3380], 'children': [{'type': 'MemberExpression', 'name': 'GraphExecution.from_db', 'range': [3371, 3376], 'children': []}, {'type': 'Identifier', 'name': 'execution', 'range': [3375, 3376], 'children': []}, {'type': 'Identifier', 'name': 'None', 'range': [3380, 3381], 'children': []}]}]}]}]}]}
2025-01-08 10:29:02,877 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:29:04,907 - INFO - Step 4 result: {'type': 'Program', 'name': 'get_graph_all_versions', 'range': [3714, 3799], 'children': [{'type': 'FunctionDecl', 'name': 'get_graph_all_versions', 'range': [3714, 3799], 'children': [{'type': 'AsyncKeyword', 'name': 'async', 'range': [3714, 3714], 'children': []}, {'type': 'DefKeyword', 'name': 'def', 'range': [3715, 3715], 'children': []}, {'type': 'Identifier', 'name': 'get_graph_all_versions', 'range': [3716, 3716], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [3717, 3725], 'children': [{'type': 'Parameter', 'name': 'graph_id', 'range': [3718, 3720], 'children': []}, {'type': 'Parameter', 'name': 'user_id', 'range': [3722, 3724], 'children': []}]}, {'type': 'ReturnType', 'name': 'return_type', 'range': [3726, 3731], 'children': [{'type': 'ListType', 'name': 'list', 'range': [3728, 3731], 'children': [{'type': 'TypeName', 'name': 'GraphModel', 'range': [3730, 3730], 'children': []}]}]}, {'type': 'BlockStatement', 'name': 'body', 'range': [3733, 3799], 'children': [{'type': 'VariableDecl', 'name': 'graph_versions', 'range': [3734, 3773], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [3736, 3736], 'children': [{'type': 'CallExpression', 'name': 'AgentGraph.prisma().find_many', 'range': [3737, 3773], 'children': [{'type': 'Arguments', 'name': 'arguments', 'range': [3740, 3773], 'children': [{'type': 'Argument', 'name': 'where', 'range': [3746, 3756], 'children': []}, {'type': 'Argument', 'name': 'order', 'range': [3759, 3765], 'children': []}, {'type': 'Argument', 'name': 'include', 'range': [3768, 3771], 'children': []}]}]}]}]}, {'type': 'IfStatement', 'name': 'if', 'range': [3776, 3784], 'children': [{'type': 'UnaryExpression', 'name': 'not graph_versions', 'range': [3777, 3778], 'children': []}, {'type': 'ReturnStatement', 'name': 'return', 'range': [3781, 3783], 'children': []}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [3786, 3798], 'children': [{'type': 'ListComprehension', 'name': 'list comprehension', 'range': [3787, 3798], 'children': [{'type': 'CallExpression', 'name': 'GraphModel.from_db(graph)', 'range': [3788, 3793], 'children': []}, {'type': 'ForStatement', 'name': 'for graph in graph_versions', 'range': [3794, 3797], 'children': []}]}]}]}]}]}
2025-01-08 10:29:04,907 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:29:06,971 - INFO - Step 2 result: {'type': 'Program', 'name': 'delete_graph', 'range': [3801, 3858], 'children': [{'type': 'FunctionDeclaration', 'name': 'delete_graph', 'range': [3801, 3858], 'children': [{'type': 'Keyword', 'value': 'async', 'range': [3801, 3801]}, {'type': 'Keyword', 'value': 'def', 'range': [3802, 3802]}, {'type': 'Identifier', 'value': 'delete_graph', 'range': [3803, 3803]}, {'type': 'ParameterList', 'range': [3804, 3812], 'children': [{'type': 'Parameter', 'name': 'graph_id', 'range': [3805, 3807], 'children': [{'type': 'Identifier', 'value': 'graph_id', 'range': [3805, 3805]}, {'type': 'Punctuator', 'value': ':', 'range': [3806, 3806]}, {'type': 'TypeAnnotation', 'value': 'str', 'range': [3807, 3807]}]}, {'type': 'Parameter', 'name': 'user_id', 'range': [3809, 3811], 'children': [{'type': 'Identifier', 'value': 'user_id', 'range': [3809, 3809]}, {'type': 'Punctuator', 'value': ':', 'range': [3810, 3810]}, {'type': 'TypeAnnotation', 'value': 'str', 'range': [3811, 3811]}]}]}, {'type': 'ReturnType', 'range': [3813, 3815], 'children': [{'type': 'Punctuator', 'value': '-', 'range': [3813, 3813]}, {'type': 'Punctuator', 'value': '>', 'range': [3814, 3814]}, {'type': 'TypeAnnotation', 'value': 'int', 'range': [3815, 3815]}]}, {'type': 'BlockStatement', 'range': [3817, 3858], 'children': [{'type': 'VariableDeclaration', 'name': 'entries_count', 'range': [3818, 3842], 'children': [{'type': 'Identifier', 'value': 'entries_count', 'range': [3818, 3818]}, {'type': 'Punctuator', 'value': '=', 'range': [3819, 3819]}, {'type': 'AwaitExpression', 'range': [3820, 3842], 'children': [{'type': 'Keyword', 'value': 'await', 'range': [3820, 3820]}, {'type': 'CallExpression', 'range': [3821, 3842], 'children': [{'type': 'MemberExpression', 'range': [3821, 3827], 'children': [{'type': 'Identifier', 'value': 'AgentGraph', 'range': [3821, 3821]}, {'type': 'Punctuator', 'value': '.', 'range': [3822, 3822]}, {'type': 'Identifier', 'value': 'prisma', 'range': [3823, 3823]}, {'type': 'CallExpression', 'range': [3824, 3825], 'children': [{'type': 'Punctuator', 'value': '(', 'range': [3824, 3824]}, {'type': 'Punctuator', 'value': ')', 'range': [3825, 3825]}]}, {'type': 'Punctuator', 'value': '.', 'range': [3826, 3826]}, {'type': 'Identifier', 'value': 'delete_many', 'range': [3827, 3827]}]}, {'type': 'ArgumentList', 'range': [3828, 3842], 'children': [{'type': 'ObjectExpression', 'range': [3832, 3840], 'children': [{'type': 'Property', 'name': 'id', 'range': [3833, 3835], 'children': [{'type': 'String', 'value': '"id"', 'range': [3833, 3833]}, {'type': 'Punctuator', 'value': ':', 'range': [3834, 3834]}, {'type': 'Identifier', 'value': 'graph_id', 'range': [3835, 3835]}]}, {'type': 'Property', 'name': 'userId', 'range': [3837, 3839], 'children': [{'type': 'String', 'value': '"userId"', 'range': [3837, 3837]}, {'type': 'Punctuator', 'value': ':', 'range': [3838, 3838]}, {'type': 'Identifier', 'value': 'user_id', 'range': [3839, 3839]}]}]}]}]}]}]}, {'type': 'IfStatement', 'range': [3844, 3855], 'children': [{'type': 'Keyword', 'value': 'if', 'range': [3844, 3844]}, {'type': 'Identifier', 'value': 'entries_count', 'range': [3845, 3845]}, {'type': 'Punctuator', 'value': ':', 'range': [3846, 3846]}, {'type': 'BlockStatement', 'range': [3847, 3855], 'children': [{'type': 'ExpressionStatement', 'range': [3848, 3854], 'children': [{'type': 'CallExpression', 'range': [3848, 3854], 'children': [{'type': 'MemberExpression', 'range': [3848, 3850], 'children': [{'type': 'Identifier', 'value': 'logger', 'range': [3848, 3848]}, {'type': 'Punctuator', 'value': '.', 'range': [3849, 3849]}, {'type': 'Identifier', 'value': 'info', 'range': [3850, 3850]}]}, {'type': 'ArgumentList', 'range': [3851, 3854], 'children': [{'type': 'String', 'value': 'f"Deleted {entries_count} graph entries for Graph #{graph_id}"', 'range': [3852, 3853]}]}]}]}]}]}, {'type': 'ReturnStatement', 'range': [3856, 3858], 'children': [{'type': 'Keyword', 'value': 'return', 'range': [3856, 3856]}, {'type': 'Identifier', 'value': 'entries_count', 'range': [3857, 3857]}]}]}]}]}
2025-01-08 10:29:06,971 - INFO - Starting Step 3: AST simplification
2025-01-08 10:29:07,538 - INFO - Step 4 result: {'type': 'Program', 'name': 'set_node_webhook', 'range': [2994, 3095], 'children': [{'type': 'FunctionDecl', 'name': 'set_node_webhook', 'range': [2994, 3095], 'children': [{'type': 'AsyncKeyword', 'name': 'async', 'range': [2994, 2994], 'children': []}, {'type': 'DefKeyword', 'name': 'def', 'range': [2995, 2995], 'children': []}, {'type': 'FunctionName', 'name': 'set_node_webhook', 'range': [2996, 2996], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [2997, 3007], 'children': [{'type': 'Parameter', 'name': 'node_id', 'range': [2998, 3000], 'children': []}, {'type': 'Parameter', 'name': 'webhook_id', 'range': [3002, 3006], 'children': []}]}, {'type': 'ReturnType', 'name': 'NodeModel', 'range': [3008, 3010], 'children': []}, {'type': 'FunctionBody', 'name': 'body', 'range': [3012, 3095], 'children': [{'type': 'AssignmentExpression', 'name': 'node', 'range': [3013, 3074], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [3015, 3015], 'children': []}, {'type': 'MemberExpression', 'name': 'AgentNode.prisma', 'range': [3016, 3018], 'children': []}, {'type': 'CallExpression', 'name': 'update', 'range': [3022, 3074], 'children': [{'type': 'ObjectExpression', 'name': 'where', 'range': [3025, 3031], 'children': []}, {'type': 'ObjectExpression', 'name': 'data', 'range': [3034, 3065], 'children': []}, {'type': 'Identifier', 'name': 'AGENT_NODE_INCLUDE', 'range': [3069, 3071], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if', 'range': [3076, 3086], 'children': [{'type': 'UnaryExpression', 'name': 'not', 'range': [3077, 3077], 'children': []}, {'type': 'Identifier', 'name': 'node', 'range': [3078, 3078], 'children': []}, {'type': 'ThrowStatement', 'name': 'raise', 'range': [3081, 3086], 'children': [{'type': 'NewExpression', 'name': 'ValueError', 'range': [3082, 3082], 'children': []}, {'type': 'TemplateLiteral', 'name': 'f', 'range': [3084, 3085], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [3088, 3094], 'children': [{'type': 'MemberExpression', 'name': 'NodeModel.from_db', 'range': [3089, 3091], 'children': []}, {'type': 'Identifier', 'name': 'node', 'range': [3093, 3093], 'children': []}]}]}]}]}
2025-01-08 10:29:07,538 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:29:08,561 - INFO - Step 5 result: {'type': 'Program', 'name': 'get_node', 'range': [2944, 2993], 'children': [{'type': 'FunctionDecl', 'name': 'get_node', 'range': [2944, 2992], 'children': [{'type': 'AsyncKeyword', 'name': 'async', 'range': [2944, 2948], 'children': []}, {'type': 'DefKeyword', 'name': 'def', 'range': [2945, 2948], 'children': []}, {'type': 'FunctionName', 'name': 'get_node', 'range': [2946, 2954], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [2947, 2951], 'children': [{'type': 'Parameter', 'name': 'node_id', 'range': [2948, 2950], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [2949, 2950], 'children': []}]}]}, {'type': 'ReturnType', 'name': 'NodeModel', 'range': [2952, 2954], 'children': []}, {'type': 'FunctionBody', 'name': 'body', 'range': [2955, 2992], 'children': [{'type': 'AssignmentExpression', 'name': 'node', 'range': [2957, 2983], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [2959, 2960], 'children': []}, {'type': 'MemberExpression', 'name': 'AgentNode.prisma', 'range': [2960, 2962], 'children': []}, {'type': 'CallExpression', 'name': 'find_unique_or_raise', 'range': [2966, 2983], 'children': [{'type': 'ObjectExpression', 'name': 'where', 'range': [2971, 2975], 'children': [{'type': 'Property', 'name': 'id', 'range': [2972, 2974], 'children': []}]}, {'type': 'Identifier', 'name': 'AGENT_NODE_INCLUDE', 'range': [2980, 2981], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [2985, 2992], 'children': [{'type': 'CallExpression', 'name': 'NodeModel.from_db', 'range': [2986, 2991], 'children': [{'type': 'Identifier', 'name': 'node', 'range': [2990, 2991], 'children': []}]}]}]}]}]}
2025-01-08 10:29:08,561 - INFO - Completed main AST analysis flow
2025-01-08 10:29:08,562 - INFO - Successfully processed chunk
2025-01-08 10:29:09,203 - INFO - Step 4 result: {'type': 'Program', 'name': 'create_graph', 'range': [3860, 3935], 'children': [{'type': 'FunctionDecl', 'name': 'create_graph', 'range': [3860, 3935], 'children': [{'type': 'Parameter', 'name': 'graph', 'range': [3864, 3866]}, {'type': 'Parameter', 'name': 'user_id', 'range': [3868, 3870]}, {'type': 'ReturnType', 'name': 'GraphModel', 'range': [3874, 3874]}, {'type': 'BlockStatement', 'range': [3876, 3935], 'children': [{'type': 'WithStatement', 'range': [3877, 3885], 'children': [{'type': 'VariableDecl', 'name': 'tx', 'range': [3883, 3883]}]}, {'type': 'ExpressionStatement', 'range': [3886, 3895], 'children': [{'type': 'CallExpression', 'name': '__create_graph', 'range': [3887, 3894], 'children': [{'type': 'Argument', 'name': 'tx', 'range': [3889, 3889]}, {'type': 'Argument', 'name': 'graph', 'range': [3891, 3891]}, {'type': 'Argument', 'name': 'user_id', 'range': [3893, 3893]}]}]}, {'type': 'IfStatement', 'range': [3897, 3926], 'children': [{'type': 'AssignmentExpression', 'range': [3898, 3921], 'children': [{'type': 'CallExpression', 'name': 'get_graph', 'range': [3902, 3921], 'children': [{'type': 'Argument', 'name': 'graph.id', 'range': [3905, 3907]}, {'type': 'Argument', 'name': 'graph.version', 'range': [3909, 3911]}, {'type': 'Argument', 'name': 'graph.is_template', 'range': [3913, 3915]}, {'type': 'Argument', 'name': 'user_id', 'range': [3917, 3919]}]}]}, {'type': 'ReturnStatement', 'range': [3924, 3926], 'children': [{'type': 'Identifier', 'name': 'created_graph', 'range': [3925, 3925]}]}]}, {'type': 'ThrowStatement', 'range': [3928, 3934], 'children': [{'type': 'NewExpression', 'name': 'ValueError', 'range': [3929, 3933], 'children': [{'type': 'Literal', 'value': 'f"Created graph {graph.id} v{graph.version} is not in DB"', 'range': [3931, 3932]}]}]}]}]}]}
2025-01-08 10:29:09,204 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:29:14,947 - INFO - Step 5 result: {'type': 'Program', 'name': 'Node', 'range': [266, 334], 'children': [{'type': 'ClassDecl', 'name': 'Node', 'range': [266, 334], 'children': [{'type': 'ClassHeritage', 'name': 'BaseDbModel', 'range': [268, 270], 'children': []}, {'type': 'PropertyDecl', 'name': 'block_id', 'range': [273, 275], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [275, 275], 'children': []}]}, {'type': 'PropertyDecl', 'name': 'input_default', 'range': [277, 282], 'children': [{'type': 'TypeAnnotation', 'name': 'BlockInput', 'range': [279, 279], 'children': []}, {'type': 'ObjectLiteral', 'name': '{}', 'range': [281, 282], 'children': []}]}, {'type': 'PropertyDecl', 'name': 'metadata', 'range': [291, 301], 'children': [{'type': 'TypeAnnotation', 'name': 'dict[str, Any]', 'range': [293, 298], 'children': []}, {'type': 'ObjectLiteral', 'name': '{}', 'range': [300, 301], 'children': []}]}, {'type': 'PropertyDecl', 'name': 'input_links', 'range': [303, 311], 'children': [{'type': 'TypeAnnotation', 'name': 'list[Link]', 'range': [305, 308], 'children': []}, {'type': 'ArrayLiteral', 'name': '[]', 'range': [310, 311], 'children': []}]}, {'type': 'PropertyDecl', 'name': 'output_links', 'range': [313, 321], 'children': [{'type': 'TypeAnnotation', 'name': 'list[Link]', 'range': [315, 318], 'children': []}, {'type': 'ArrayLiteral', 'name': '[]', 'range': [320, 321], 'children': []}]}, {'type': 'PropertyDecl', 'name': 'webhook_id', 'range': [324, 331], 'children': [{'type': 'TypeAnnotation', 'name': 'Optional[str]', 'range': [326, 329], 'children': []}, {'type': 'NullLiteral', 'name': 'None', 'range': [331, 331], 'children': []}]}]}]}
2025-01-08 10:29:14,947 - INFO - Completed main AST analysis flow
2025-01-08 10:29:14,948 - INFO - Successfully processed chunk
2025-01-08 10:29:16,400 - INFO - Step 3 result: {'type': 'Program', 'name': 'get_graphs', 'range': [3097, 3261], 'children': [{'type': 'FunctionDeclaration', 'name': 'get_graphs', 'range': [3097, 3261], 'children': [{'type': 'AsyncKeyword', 'name': 'async', 'range': [3097, 3102], 'children': []}, {'type': 'DefKeyword', 'name': 'def', 'range': [3098, 3101], 'children': []}, {'type': 'FunctionName', 'name': 'get_graphs', 'range': [3099, 3108], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [3100, 3121], 'children': [{'type': 'Parameter', 'name': 'user_id', 'range': [3102, 3105], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [3104, 3107], 'children': []}]}, {'type': 'Parameter', 'name': 'filter_by', 'range': [3107, 3119], 'children': [{'type': 'TypeAnnotation', 'name': 'Literal', 'range': [3109, 3114], 'children': []}, {'type': 'DefaultValue', 'name': '"active"', 'range': [3118, 3121], 'children': []}]}]}, {'type': 'ReturnType', 'name': 'list[GraphModel]', 'range': [3124, 3127], 'children': []}, {'type': 'FunctionBody', 'name': 'body', 'range': [3129, 3261], 'children': [{'type': 'Docstring', 'name': 'docstring', 'range': [3130, 3132], 'children': []}, {'type': 'VariableDeclaration', 'name': 'where_clause', 'range': [3134, 3142], 'children': [{'type': 'TypeAnnotation', 'name': 'AgentGraphWhereInput', 'range': [3136, 3141], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [3137, 3142], 'children': []}]}, {'type': 'IfStatement', 'name': 'if', 'range': [3145, 3158], 'children': [{'type': 'Condition', 'name': 'filter_by == "active"', 'range': [3146, 3149], 'children': []}, {'type': 'Body', 'name': 'body', 'range': [3151, 3158], 'children': [{'type': 'Assignment', 'name': 'where_clause["isActive"] = True', 'range': [3152, 3157], 'children': []}]}]}, {'type': 'ElifStatement', 'name': 'elif', 'range': [3159, 3172], 'children': [{'type': 'Condition', 'name': 'filter_by == "template"', 'range': [3160, 3163], 'children': []}, {'type': 'Body', 'name': 'body', 'range': [3165, 3172], 'children': [{'type': 'Assignment', 'name': 'where_clause["isTemplate"] = True', 'range': [3166, 3171], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'graphs', 'range': [3174, 3184], 'children': [{'type': 'Assignment', 'name': '=', 'range': [3175, 3184], 'children': []}]}, {'type': 'AwaitExpression', 'name': 'await', 'range': [3176, 3184], 'children': [{'type': 'CallExpression', 'name': 'AgentGraph.prisma().find_many', 'range': [3177, 3184], 'children': [{'type': 'Arguments', 'name': 'arguments', 'range': [3180, 3184], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'graph_models', 'range': [3215, 3219], 'children': [{'type': 'Assignment', 'name': '=', 'range': [3216, 3219], 'children': []}]}, {'type': 'ForStatement', 'name': 'for', 'range': [3220, 3256], 'children': [{'type': 'Initialization', 'name': 'graph in graphs', 'range': [3221, 3224], 'children': []}, {'type': 'Body', 'name': 'body', 'range': [3225, 3256], 'children': [{'type': 'TryStatement', 'name': 'try', 'range': [3226, 3256], 'children': [{'type': 'Body', 'name': 'body', 'range': [3228, 3240], 'children': [{'type': 'CallExpression', 'name': 'graph_models.append', 'range': [3229, 3240], 'children': [{'type': 'Arguments', 'name': 'arguments', 'range': [3232, 3240], 'children': []}]}]}, {'type': 'CatchClause', 'name': 'except', 'range': [3241, 3256], 'children': [{'type': 'Parameter', 'name': 'Exception as e', 'range': [3242, 3245], 'children': []}, {'type': 'Body', 'name': 'body', 'range': [3246, 3256], 'children': [{'type': 'CallExpression', 'name': 'logger.error', 'range': [3247, 3254], 'children': [{'type': 'Arguments', 'name': 'arguments', 'range': [3250, 3254], 'children': []}]}, {'type': 'ContinueStatement', 'name': 'continue', 'range': [3255, 3256], 'children': []}]}]}]}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [3258, 3261], 'children': [{'type': 'Argument', 'name': 'graph_models', 'range': [3259, 3261], 'children': []}]}]}]}]}
2025-01-08 10:29:16,400 - INFO - Starting Step 4: AST normalization
2025-01-08 10:29:18,427 - INFO - Step 5 result: {'type': 'Program', 'name': 'get_executions', 'range': [3262, 3324], 'children': [{'type': 'FunctionDecl', 'name': 'get_executions', 'range': [3262, 3324], 'children': [{'type': 'Parameter', 'name': 'user_id', 'range': [3266, 3268], 'children': []}, {'type': 'ReturnType', 'name': 'list[GraphExecution]', 'range': [3270, 3275], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [3277, 3324], 'children': [{'type': 'VariableDecl', 'name': 'executions', 'range': [3278, 3287], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [3279, 3279], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [3280, 3280], 'children': [{'type': 'MemberExpression', 'name': 'AgentGraphExecution.prisma', 'range': [3281, 3283], 'children': [{'type': 'CallExpression', 'name': '()', 'range': [3284, 3285], 'children': []}, {'type': 'MemberExpression', 'name': '.find_many', 'range': [3286, 3287], 'children': [{'type': 'CallExpression', 'name': '()', 'range': [3288, 3308], 'children': [{'type': 'ObjectExpression', 'name': 'where', 'range': [3290, 3296], 'children': [{'type': 'Property', 'name': 'userId', 'range': [3293, 3295], 'children': []}]}, {'type': 'ObjectExpression', 'name': 'order', 'range': [3299, 3305], 'children': [{'type': 'Property', 'name': 'createdAt', 'range': [3302, 3304], 'children': []}]}]}]}]}]}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [3310, 3322], 'children': [{'type': 'ArrayExpression', 'name': '[]', 'range': [3311, 3322], 'children': [{'type': 'CallExpression', 'name': 'GraphExecution.from_db', 'range': [3312, 3317], 'children': [{'type': 'Identifier', 'name': 'execution', 'range': [3316, 3316], 'children': []}]}, {'type': 'ForStatement', 'name': 'for', 'range': [3318, 3321], 'children': [{'type': 'Identifier', 'name': 'execution', 'range': [3319, 3319], 'children': []}, {'type': 'Identifier', 'name': 'executions', 'range': [3321, 3321], 'children': []}]}]}]}]}]}]}
2025-01-08 10:29:18,427 - INFO - Completed main AST analysis flow
2025-01-08 10:29:18,428 - INFO - Successfully processed chunk
2025-01-08 10:29:18,681 - INFO - Step 2 result: {'type': 'Program', 'name': 'GraphExecution', 'range': [682, 902], 'children': [{'type': 'ClassDeclaration', 'name': 'GraphExecution', 'range': [682, 720], 'children': [{'type': 'PropertyDeclaration', 'name': 'execution_id', 'range': [689, 691], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [691, 691], 'children': []}]}, {'type': 'PropertyDeclaration', 'name': 'started_at', 'range': [693, 695], 'children': [{'type': 'TypeAnnotation', 'name': 'datetime', 'range': [695, 695], 'children': []}]}, {'type': 'PropertyDeclaration', 'name': 'ended_at', 'range': [697, 699], 'children': [{'type': 'TypeAnnotation', 'name': 'datetime', 'range': [699, 699], 'children': []}]}, {'type': 'PropertyDeclaration', 'name': 'duration', 'range': [701, 703], 'children': [{'type': 'TypeAnnotation', 'name': 'float', 'range': [703, 703], 'children': []}]}, {'type': 'PropertyDeclaration', 'name': 'total_run_time', 'range': [705, 707], 'children': [{'type': 'TypeAnnotation', 'name': 'float', 'range': [707, 707], 'children': []}]}, {'type': 'PropertyDeclaration', 'name': 'status', 'range': [709, 711], 'children': [{'type': 'TypeAnnotation', 'name': 'ExecutionStatus', 'range': [711, 711], 'children': []}]}, {'type': 'PropertyDeclaration', 'name': 'graph_id', 'range': [713, 715], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [715, 715], 'children': []}]}, {'type': 'PropertyDeclaration', 'name': 'graph_version', 'range': [717, 719], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [719, 719], 'children': []}]}]}, {'type': 'MethodDeclaration', 'name': 'from_db', 'range': [722, 901], 'children': [{'type': 'Parameter', 'name': 'execution', 'range': [728, 730], 'children': [{'type': 'TypeAnnotation', 'name': 'AgentGraphExecution', 'range': [730, 730], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [733, 901], 'children': [{'type': 'VariableDeclaration', 'name': 'now', 'range': [734, 743], 'children': [{'type': 'CallExpression', 'name': 'datetime.now', 'range': [736, 743], 'children': [{'type': 'MemberExpression', 'name': 'datetime.now', 'range': [736, 738], 'children': []}, {'type': 'ArgumentList', 'name': '', 'range': [739, 743], 'children': [{'type': 'MemberExpression', 'name': 'timezone.utc', 'range': [740, 742], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'start_time', 'range': [745, 754], 'children': [{'type': 'BinaryExpression', 'name': 'or', 'range': [747, 754], 'children': [{'type': 'MemberExpression', 'name': 'execution.startedAt', 'range': [747, 749], 'children': []}, {'type': 'MemberExpression', 'name': 'execution.createdAt', 'range': [751, 753], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'end_time', 'range': [756, 762], 'children': [{'type': 'BinaryExpression', 'name': 'or', 'range': [758, 762], 'children': [{'type': 'MemberExpression', 'name': 'execution.updatedAt', 'range': [758, 760], 'children': []}, {'type': 'Identifier', 'name': 'now', 'range': [761, 761], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'duration', 'range': [764, 774], 'children': [{'type': 'CallExpression', 'name': 'total_seconds', 'range': [765, 774], 'children': [{'type': 'BinaryExpression', 'name': '-', 'range': [766, 768], 'children': [{'type': 'Identifier', 'name': 'end_time', 'range': [766, 766], 'children': []}, {'type': 'Identifier', 'name': 'start_time', 'range': [768, 768], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'total_run_time', 'range': [776, 778], 'children': [{'type': 'Identifier', 'name': 'duration', 'range': [777, 777], 'children': []}]}, {'type': 'TryStatement', 'name': '', 'range': [780, 813], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [782, 804], 'children': [{'type': 'VariableDeclaration', 'name': 'stats', 'range': [783, 803], 'children': [{'type': 'CallExpression', 'name': 'json.loads', 'range': [785, 803], 'children': [{'type': 'MemberExpression', 'name': 'json.loads', 'range': [785, 787], 'children': []}, {'type': 'ArgumentList', 'name': '', 'range': [788, 803], 'children': [{'type': 'BinaryExpression', 'name': 'or', 'range': [789, 793], 'children': [{'type': 'MemberExpression', 'name': 'execution.stats', 'range': [789, 791], 'children': []}, {'type': 'StringLiteral', 'name': '"{}"', 'range': [793, 793], 'children': []}]}, {'type': 'KeywordArgument', 'name': 'target_type', 'range': [795, 802], 'children': [{'type': 'TypeAnnotation', 'name': 'dict[str, Any]', 'range': [797, 802], 'children': []}]}]}]}]}]}, {'type': 'CatchClause', 'name': 'ValueError', 'range': [805, 813], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [808, 813], 'children': [{'type': 'VariableDeclaration', 'name': 'stats', 'range': [809, 812], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [811, 812], 'children': []}]}]}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [815, 825], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [816, 824], 'children': [{'type': 'Identifier', 'name': 'duration', 'range': [816, 816], 'children': []}, {'type': 'CallExpression', 'name': 'stats.get', 'range': [817, 824], 'children': [{'type': 'MemberExpression', 'name': 'stats.get', 'range': [817, 819], 'children': []}, {'type': 'ArgumentList', 'name': '', 'range': [820, 824], 'children': [{'type': 'StringLiteral', 'name': '"walltime"', 'range': [821, 821], 'children': []}, {'type': 'Identifier', 'name': 'duration', 'range': [823, 823], 'children': []}]}]}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [826, 836], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [827, 835], 'children': [{'type': 'Identifier', 'name': 'total_run_time', 'range': [827, 827], 'children': []}, {'type': 'CallExpression', 'name': 'stats.get', 'range': [828, 835], 'children': [{'type': 'MemberExpression', 'name': 'stats.get', 'range': [828, 830], 'children': []}, {'type': 'ArgumentList', 'name': '', 'range': [831, 835], 'children': [{'type': 'StringLiteral', 'name': '"nodes_walltime"', 'range': [832, 832], 'children': []}, {'type': 'Identifier', 'name': 'total_run_time', 'range': [834, 834], 'children': []}]}]}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [838, 901], 'children': [{'type': 'NewExpression', 'name': 'GraphExecution', 'range': [839, 900], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [840, 900], 'children': [{'type': 'KeywordArgument', 'name': 'id', 'range': [842, 847], 'children': [{'type': 'MemberExpression', 'name': 'execution.id', 'range': [844, 846], 'children': []}]}, {'type': 'KeywordArgument', 'name': 'execution_id', 'range': [849, 854], 'children': [{'type': 'MemberExpression', 'name': 'execution.id', 'range': [852, 854], 'children': []}]}, {'type': 'KeywordArgument', 'name': 'started_at', 'range': [856, 859], 'children': [{'type': 'Identifier', 'name': 'start_time', 'range': [858, 858], 'children': []}]}, {'type': 'KeywordArgument', 'name': 'ended_at', 'range': [861, 864], 'children': [{'type': 'Identifier', 'name': 'end_time', 'range': [863, 863], 'children': []}]}, {'type': 'KeywordArgument', 'name': 'duration', 'range': [866, 869], 'children': [{'type': 'Identifier', 'name': 'duration', 'range': [868, 868], 'children': []}]}, {'type': 'KeywordArgument', 'name': 'total_run_time', 'range': [871, 874], 'children': [{'type': 'Identifier', 'name': 'total_run_time', 'range': [873, 873], 'children': []}]}, {'type': 'KeywordArgument', 'name': 'status', 'range': [876, 884], 'children': [{'type': 'CallExpression', 'name': 'ExecutionStatus', 'range': [878, 884], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [879, 884], 'children': [{'type': 'MemberExpression', 'name': 'execution.executionStatus', 'range': [880, 882], 'children': []}]}]}]}, {'type': 'KeywordArgument', 'name': 'graph_id', 'range': [886, 891], 'children': [{'type': 'MemberExpression', 'name': 'execution.agentGraphId', 'range': [888, 890], 'children': []}]}, {'type': 'KeywordArgument', 'name': 'graph_version', 'range': [893, 898], 'children': [{'type': 'MemberExpression', 'name': 'execution.agentGraphVersion', 'range': [895, 897], 'children': []}]}]}]}]}]}]}]}
2025-01-08 10:29:18,681 - INFO - Starting Step 3: AST simplification
2025-01-08 10:29:20,017 - INFO - Step 5 result: {'type': 'Program', 'name': 'make_graph_model', 'range': [4247, 4346], 'children': [{'type': 'FunctionDecl', 'name': 'make_graph_model', 'range': [4247, 4346], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [4249, 4257], 'children': [{'type': 'Parameter', 'name': 'creatable_graph', 'range': [4250, 4252], 'children': []}, {'type': 'Parameter', 'name': 'user_id', 'range': [4254, 4256], 'children': []}]}, {'type': 'ReturnType', 'name': 'GraphModel', 'range': [4258, 4260], 'children': []}, {'type': 'Docstring', 'name': 'docstring', 'range': [4263, 4265], 'children': []}, {'type': 'Comment', 'name': 'comment', 'range': [4267, 4278], 'children': []}, {'type': 'ReturnStatement', 'name': 'return', 'range': [4279, 4345], 'children': [{'type': 'CallExpression', 'name': 'GraphModel', 'range': [4280, 4344], 'children': [{'type': 'ArgumentList', 'name': 'arguments', 'range': [4281, 4344], 'children': [{'type': 'KeywordArgument', 'name': 'creatable_graph', 'range': [4285, 4294], 'children': [{'type': 'CallExpression', 'name': 'model_dump', 'range': [4287, 4294], 'children': [{'type': 'ArgumentList', 'name': 'arguments', 'range': [4288, 4294], 'children': [{'type': 'KeywordArgument', 'name': 'exclude', 'range': [4290, 4293], 'children': []}]}]}]}, {'type': 'KeywordArgument', 'name': 'user_id', 'range': [4297, 4299], 'children': []}, {'type': 'KeywordArgument', 'name': 'nodes', 'range': [4302, 4341], 'children': [{'type': 'List', 'name': 'nodes', 'range': [4304, 4341], 'children': [{'type': 'CallExpression', 'name': 'NodeModel', 'range': [4306, 4332], 'children': [{'type': 'ArgumentList', 'name': 'arguments', 'range': [4307, 4332], 'children': [{'type': 'KeywordArgument', 'name': 'creatable_node', 'range': [4311, 4316], 'children': [{'type': 'CallExpression', 'name': 'model_dump', 'range': [4313, 4316], 'children': []}]}, {'type': 'KeywordArgument', 'name': 'graph_id', 'range': [4318, 4323], 'children': []}, {'type': 'KeywordArgument', 'name': 'graph_version', 'range': [4325, 4330], 'children': []}]}]}]}]}]}]}]}]}]}
2025-01-08 10:29:20,017 - INFO - Completed main AST analysis flow
2025-01-08 10:29:20,018 - INFO - Successfully processed chunk
2025-01-08 10:29:20,437 - INFO - Step 5 result: {'type': 'Program', 'name': 'get_execution', 'range': [3325, 3381], 'children': [{'type': 'FunctionDecl', 'name': 'get_execution', 'range': [3325, 3381], 'children': [{'type': 'AsyncKeyword', 'name': 'async', 'range': [3325, 3329], 'children': []}, {'type': 'DefKeyword', 'name': 'def', 'range': [3326, 3329], 'children': []}, {'type': 'FunctionName', 'name': 'get_execution', 'range': [3327, 3340], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [3328, 3336], 'children': [{'type': 'Parameter', 'name': 'user_id', 'range': [3329, 3331], 'children': []}, {'type': 'TypeAnnotation', 'name': 'str', 'range': [3330, 3331], 'children': []}, {'type': 'Parameter', 'name': 'execution_id', 'range': [3333, 3335], 'children': []}, {'type': 'TypeAnnotation', 'name': 'str', 'range': [3334, 3335], 'children': []}]}, {'type': 'ReturnType', 'name': 'GraphExecution | None', 'range': [3337, 3341], 'children': []}, {'type': 'FunctionBody', 'name': 'body', 'range': [3343, 3381], 'children': [{'type': 'VariableDeclaration', 'name': 'execution', 'range': [3344, 3368], 'children': [{'type': 'Assignment', 'name': '=', 'range': [3345, 3346], 'children': []}, {'type': 'AwaitExpression', 'name': 'await', 'range': [3346, 3351], 'children': [{'type': 'MemberExpression', 'name': 'AgentGraphExecution.prisma', 'range': [3347, 3350], 'children': []}, {'type': 'CallExpression', 'name': 'find_first', 'range': [3353, 3368], 'children': [{'type': 'ObjectLiteral', 'name': 'where', 'range': [3358, 3366], 'children': [{'type': 'Property', 'name': 'id', 'range': [3359, 3361], 'children': []}, {'type': 'Property', 'name': 'userId', 'range': [3363, 3365], 'children': []}]}]}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [3370, 3380], 'children': [{'type': 'ConditionalExpression', 'name': 'if', 'range': [3377, 3380], 'children': [{'type': 'MemberExpression', 'name': 'GraphExecution.from_db', 'range': [3371, 3376], 'children': []}, {'type': 'Identifier', 'name': 'execution', 'range': [3375, 3376], 'children': []}, {'type': 'Identifier', 'name': 'None', 'range': [3380, 3381], 'children': []}]}]}]}]}]}
2025-01-08 10:29:20,437 - INFO - Completed main AST analysis flow
2025-01-08 10:29:20,439 - INFO - Successfully processed chunk
2025-01-08 10:29:21,235 - INFO - Step 2 result: {'type': 'Program', 'name': 'NodeModel', 'range': [335, 661], 'children': [{'type': 'ClassDeclaration', 'name': 'NodeModel', 'range': [335, 359], 'children': [{'type': 'PropertyDeclaration', 'name': 'graph_id', 'range': [342, 344], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [344, 344], 'children': []}]}, {'type': 'PropertyDeclaration', 'name': 'graph_version', 'range': [346, 348], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [348, 348], 'children': []}]}, {'type': 'PropertyDeclaration', 'name': 'webhook', 'range': [351, 358], 'children': [{'type': 'TypeAnnotation', 'name': 'Optional[Webhook]', 'range': [353, 356], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [357, 358], 'children': [{'type': 'Literal', 'name': 'None', 'range': [358, 358], 'children': []}]}]}]}, {'type': 'FunctionDeclaration', 'name': 'from_db', 'range': [364, 537], 'children': [{'type': 'Parameter', 'name': 'node', 'range': [367, 369], 'children': [{'type': 'TypeAnnotation', 'name': 'AgentNode', 'range': [369, 369], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [372, 537], 'children': [{'type': 'IfStatement', 'name': '', 'range': [373, 386], 'children': [{'type': 'UnaryExpression', 'name': 'not', 'range': [374, 375], 'children': [{'type': 'MemberExpression', 'name': 'node.AgentBlock', 'range': [375, 377], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [379, 386], 'children': [{'type': 'ThrowStatement', 'name': 'raise', 'range': [380, 385], 'children': [{'type': 'NewExpression', 'name': 'ValueError', 'range': [381, 385], 'children': [{'type': 'TemplateLiteral', 'name': 'f"Invalid node {node.id}, invalid AgentBlock."', 'range': [383, 384], 'children': []}]}]}]}]}, {'type': 'VariableDeclaration', 'name': 'obj', 'range': [387, 489], 'children': [{'type': 'Assignment', 'name': '=', 'range': [388, 389], 'children': [{'type': 'NewExpression', 'name': 'NodeModel', 'range': [389, 489], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [390, 489], 'children': [{'type': 'AssignmentExpression', 'name': 'id=', 'range': [392, 397], 'children': [{'type': 'MemberExpression', 'name': 'node.id', 'range': [394, 396], 'children': []}]}, {'type': 'AssignmentExpression', 'name': 'block_id=', 'range': [399, 406], 'children': [{'type': 'MemberExpression', 'name': 'node.AgentBlock.id', 'range': [401, 405], 'children': []}]}, {'type': 'AssignmentExpression', 'name': 'input_default=', 'range': [408, 426], 'children': [{'type': 'CallExpression', 'name': 'json.loads', 'range': [410, 426], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [413, 426], 'children': [{'type': 'MemberExpression', 'name': 'node.constantInput', 'range': [414, 416], 'children': []}, {'type': 'AssignmentExpression', 'name': 'target_type=', 'range': [418, 425], 'children': [{'type': 'TypeAnnotation', 'name': 'dict[str, Any]', 'range': [420, 425], 'children': []}]}]}]}]}, {'type': 'AssignmentExpression', 'name': 'metadata=', 'range': [429, 447], 'children': [{'type': 'CallExpression', 'name': 'json.loads', 'range': [431, 447], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [434, 447], 'children': [{'type': 'MemberExpression', 'name': 'node.metadata', 'range': [435, 437], 'children': []}, {'type': 'AssignmentExpression', 'name': 'target_type=', 'range': [439, 446], 'children': [{'type': 'TypeAnnotation', 'name': 'dict[str, Any]', 'range': [441, 446], 'children': []}]}]}]}]}, {'type': 'AssignmentExpression', 'name': 'graph_id=', 'range': [450, 455], 'children': [{'type': 'MemberExpression', 'name': 'node.agentGraphId', 'range': [452, 454], 'children': []}]}, {'type': 'AssignmentExpression', 'name': 'graph_version=', 'range': [457, 462], 'children': [{'type': 'MemberExpression', 'name': 'node.agentGraphVersion', 'range': [459, 461], 'children': []}]}, {'type': 'AssignmentExpression', 'name': 'webhook_id=', 'range': [464, 469], 'children': [{'type': 'MemberExpression', 'name': 'node.webhookId', 'range': [466, 468], 'children': []}]}, {'type': 'AssignmentExpression', 'name': 'webhook=', 'range': [471, 487], 'children': [{'type': 'ConditionalExpression', 'name': 'if', 'range': [473, 486], 'children': [{'type': 'CallExpression', 'name': 'Webhook.from_db', 'range': [473, 480], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [476, 480], 'children': [{'type': 'MemberExpression', 'name': 'node.Webhook', 'range': [477, 479], 'children': []}]}]}, {'type': 'Literal', 'name': 'None', 'range': [486, 486], 'children': []}]}]}]}]}]}]}, {'type': 'AssignmentExpression', 'name': 'obj.input_links=', 'range': [491, 512], 'children': [{'type': 'ArrayExpression', 'name': '', 'range': [495, 511], 'children': [{'type': 'CallExpression', 'name': 'Link.from_db', 'range': [496, 501], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [498, 501], 'children': [{'type': 'Identifier', 'name': 'link', 'range': [500, 500], 'children': []}]}]}]}]}, {'type': 'AssignmentExpression', 'name': 'obj.output_links=', 'range': [513, 534], 'children': [{'type': 'ArrayExpression', 'name': '', 'range': [517, 533], 'children': [{'type': 'CallExpression', 'name': 'Link.from_db', 'range': [518, 523], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [520, 523], 'children': [{'type': 'Identifier', 'name': 'link', 'range': [522, 522], 'children': []}]}]}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [535, 536], 'children': [{'type': 'Identifier', 'name': 'obj', 'range': [536, 536], 'children': []}]}]}]}, {'type': 'FunctionDeclaration', 'name': 'is_triggered_by_event_type', 'range': [539, 659], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [542, 542], 'children': []}, {'type': 'Parameter', 'name': 'event_type', 'range': [544, 546], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [546, 546], 'children': []}]}, {'type': 'TypeAnnotation', 'name': '-> bool', 'range': [548, 550], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [552, 659], 'children': [{'type': 'IfStatement', 'name': '', 'range': [553, 574], 'children': [{'type': 'UnaryExpression', 'name': 'not', 'range': [554, 555], 'children': [{'type': 'AssignmentExpression', 'name': 'block=', 'range': [556, 565], 'children': [{'type': 'CallExpression', 'name': 'get_block', 'range': [559, 564], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [561, 564], 'children': [{'type': 'MemberExpression', 'name': 'self.block_id', 'range': [562, 563], 'children': []}]}]}]}]}, {'type': 'BlockStatement', 'name': '', 'range': [567, 574], 'children': [{'type': 'ThrowStatement', 'name': 'raise', 'range': [568, 573], 'children': [{'type': 'NewExpression', 'name': 'ValueError', 'range': [569, 573], 'children': [{'type': 'TemplateLiteral', 'name': 'f"Block #{self.block_id} not found for node #{self.id}"', 'range': [571, 572], 'children': []}]}]}]}]}, {'type': 'IfStatement', 'name': '', 'range': [575, 587], 'children': [{'type': 'UnaryExpression', 'name': 'not', 'range': [576, 577], 'children': [{'type': 'MemberExpression', 'name': 'block.webhook_config', 'range': [577, 579], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [581, 587], 'children': [{'type': 'ThrowStatement', 'name': 'raise', 'range': [582, 586], 'children': [{'type': 'NewExpression', 'name': 'TypeError', 'range': [583, 586], 'children': [{'type': 'Literal', 'name': '"This method can\'t be used on non-webhook blocks"', 'range': [585, 585], 'children': []}]}]}]}]}, {'type': 'IfStatement', 'name': '', 'range': [588, 599], 'children': [{'type': 'UnaryExpression', 'name': 'not', 'range': [589, 590], 'children': [{'type': 'MemberExpression', 'name': 'block.webhook_config.event_filter_input', 'range': [590, 594], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [596, 599], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [597, 598], 'children': [{'type': 'Literal', 'name': 'True', 'range': [598, 598], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'event_filter', 'range': [600, 614], 'children': [{'type': 'Assignment', 'name': '=', 'range': [601, 602], 'children': [{'type': 'CallExpression', 'name': 'self.input_default.get', 'range': [602, 613], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [606, 613], 'children': [{'type': 'MemberExpression', 'name': 'block.webhook_config.event_filter_input', 'range': [608, 612], 'children': []}]}]}]}]}, {'type': 'IfStatement', 'name': '', 'range': [615, 626], 'children': [{'type': 'UnaryExpression', 'name': 'not', 'range': [616, 617], 'children': [{'type': 'Identifier', 'name': 'event_filter', 'range': [617, 617], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [619, 626], 'children': [{'type': 'ThrowStatement', 'name': 'raise', 'range': [620, 625], 'children': [{'type': 'NewExpression', 'name': 'ValueError', 'range': [621, 625], 'children': [{'type': 'TemplateLiteral', 'name': 'f"Event filter is not configured on node #{self.id}"', 'range': [623, 624], 'children': []}]}]}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [627, 658], 'children': [{'type': 'BinaryExpression', 'name': 'in', 'range': [628, 630], 'children': [{'type': 'Identifier', 'name': 'event_type', 'range': [628, 628], 'children': []}, {'type': 'ArrayExpression', 'name': '', 'range': [630, 658], 'children': [{'type': 'CallExpression', 'name': 'block.webhook_config.event_format.format', 'range': [632, 644], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [638, 644], 'children': [{'type': 'AssignmentExpression', 'name': 'event=', 'range': [640, 642], 'children': [{'type': 'Identifier', 'name': 'k', 'range': [642, 642], 'children': []}]}]}]}]}]}]}]}]}]}
2025-01-08 10:29:21,236 - INFO - Starting Step 3: AST simplification
2025-01-08 10:29:22,648 - INFO - Step 2 result: {'type': 'Program', 'name': '__create_graph', 'range': [3936, 4192], 'children': [{'type': 'FunctionDeclaration', 'name': '__create_graph', 'range': [3936, 4192], 'children': [{'type': 'FunctionSignature', 'name': '__create_graph', 'range': [3936, 3950], 'children': [{'type': 'Keyword', 'name': 'async', 'range': [3936, 3941], 'children': []}, {'type': 'Keyword', 'name': 'def', 'range': [3937, 3940], 'children': []}, {'type': 'Identifier', 'name': '__create_graph', 'range': [3938, 3950], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [3939, 3949], 'children': [{'type': 'Parameter', 'name': 'tx', 'range': [3940, 3942], 'children': []}, {'type': 'Parameter', 'name': 'graph', 'range': [3942, 3948], 'children': [{'type': 'TypeAnnotation', 'name': 'Graph', 'range': [3944, 3948], 'children': []}]}, {'type': 'Parameter', 'name': 'user_id', 'range': [3946, 3952], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [3948, 3952], 'children': []}]}]}]}, {'type': 'BlockStatement', 'name': 'body', 'range': [3951, 4192], 'children': [{'type': 'ExpressionStatement', 'name': 'await AgentGraph.prisma(tx).create(data)', 'range': [3952, 4017], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [3952, 3957], 'children': [{'type': 'CallExpression', 'name': 'AgentGraph.prisma(tx).create', 'range': [3953, 4016], 'children': [{'type': 'MemberExpression', 'name': 'AgentGraph.prisma', 'range': [3953, 3965], 'children': [{'type': 'Identifier', 'name': 'AgentGraph', 'range': [3953, 3962], 'children': []}, {'type': 'Identifier', 'name': 'prisma', 'range': [3963, 3969], 'children': []}]}, {'type': 'CallExpression', 'name': 'prisma(tx)', 'range': [3966, 3974], 'children': [{'type': 'Identifier', 'name': 'tx', 'range': [3967, 3969], 'children': []}]}, {'type': 'MemberExpression', 'name': 'create', 'range': [3975, 3981], 'children': []}, {'type': 'ObjectExpression', 'name': 'data', 'range': [3982, 4014], 'children': [{'type': 'Property', 'name': 'id', 'range': [3987, 3993], 'children': [{'type': 'Identifier', 'name': 'graph.id', 'range': [3989, 3993], 'children': []}]}, {'type': 'Property', 'name': 'version', 'range': [3994, 4000], 'children': [{'type': 'Identifier', 'name': 'graph.version', 'range': [3996, 4000], 'children': []}]}, {'type': 'Property', 'name': 'name', 'range': [4001, 4007], 'children': [{'type': 'Identifier', 'name': 'graph.name', 'range': [4003, 4007], 'children': []}]}, {'type': 'Property', 'name': 'description', 'range': [4008, 4014], 'children': [{'type': 'Identifier', 'name': 'graph.description', 'range': [4010, 4014], 'children': []}]}, {'type': 'Property', 'name': 'isTemplate', 'range': [4015, 4021], 'children': [{'type': 'Identifier', 'name': 'graph.is_template', 'range': [4017, 4021], 'children': []}]}, {'type': 'Property', 'name': 'isActive', 'range': [4022, 4028], 'children': [{'type': 'Identifier', 'name': 'graph.is_active', 'range': [4024, 4028], 'children': []}]}, {'type': 'Property', 'name': 'userId', 'range': [4029, 4035], 'children': [{'type': 'Identifier', 'name': 'user_id', 'range': [4031, 4035], 'children': []}]}]}]}]}]}, {'type': 'ExpressionStatement', 'name': 'await asyncio.gather(*[AgentNode.prisma(tx).create({...}) for node in graph.nodes])', 'range': [4019, 4106], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [4019, 4024], 'children': [{'type': 'CallExpression', 'name': 'asyncio.gather', 'range': [4025, 4105], 'children': [{'type': 'MemberExpression', 'name': 'asyncio.gather', 'range': [4025, 4039], 'children': [{'type': 'Identifier', 'name': 'asyncio', 'range': [4025, 4031], 'children': []}, {'type': 'Identifier', 'name': 'gather', 'range': [4032, 4038], 'children': []}]}, {'type': 'SpreadElement', 'name': '*', 'range': [4040, 4041], 'children': [{'type': 'ArrayExpression', 'name': '[...]', 'range': [4042, 4103], 'children': [{'type': 'CallExpression', 'name': 'AgentNode.prisma(tx).create', 'range': [4044, 4094], 'children': [{'type': 'MemberExpression', 'name': 'AgentNode.prisma', 'range': [4044, 4056], 'children': [{'type': 'Identifier', 'name': 'AgentNode', 'range': [4044, 4052], 'children': []}, {'type': 'Identifier', 'name': 'prisma', 'range': [4053, 4059], 'children': []}]}, {'type': 'CallExpression', 'name': 'prisma(tx)', 'range': [4060, 4068], 'children': [{'type': 'Identifier', 'name': 'tx', 'range': [4061, 4063], 'children': []}]}, {'type': 'MemberExpression', 'name': 'create', 'range': [4069, 4075], 'children': []}, {'type': 'ObjectExpression', 'name': '{...}', 'range': [4076, 4092], 'children': [{'type': 'Property', 'name': 'id', 'range': [4080, 4086], 'children': [{'type': 'Identifier', 'name': 'node.id', 'range': [4082, 4086], 'children': []}]}, {'type': 'Property', 'name': 'agentBlockId', 'range': [4087, 4093], 'children': [{'type': 'Identifier', 'name': 'node.block_id', 'range': [4089, 4093], 'children': []}]}, {'type': 'Property', 'name': 'agentGraphId', 'range': [4094, 4100], 'children': [{'type': 'Identifier', 'name': 'graph.id', 'range': [4096, 4100], 'children': []}]}, {'type': 'Property', 'name': 'agentGraphVersion', 'range': [4101, 4107], 'children': [{'type': 'Identifier', 'name': 'graph.version', 'range': [4103, 4107], 'children': []}]}, {'type': 'Property', 'name': 'constantInput', 'range': [4108, 4114], 'children': [{'type': 'CallExpression', 'name': 'json.dumps(node.input_default)', 'range': [4110, 4126], 'children': [{'type': 'MemberExpression', 'name': 'json.dumps', 'range': [4110, 4119], 'children': [{'type': 'Identifier', 'name': 'json', 'range': [4110, 4114], 'children': []}, {'type': 'Identifier', 'name': 'dumps', 'range': [4115, 4119], 'children': []}]}, {'type': 'CallExpression', 'name': 'node.input_default', 'range': [4120, 4126], 'children': [{'type': 'Identifier', 'name': 'node', 'range': [4120, 4124], 'children': []}, {'type': 'Identifier', 'name': 'input_default', 'range': [4125, 4126], 'children': []}]}]}]}, {'type': 'Property', 'name': 'metadata', 'range': [4127, 4133], 'children': [{'type': 'CallExpression', 'name': 'json.dumps(node.metadata)', 'range': [4129, 4145], 'children': [{'type': 'MemberExpression', 'name': 'json.dumps', 'range': [4129, 4138], 'children': [{'type': 'Identifier', 'name': 'json', 'range': [4129, 4133], 'children': []}, {'type': 'Identifier', 'name': 'dumps', 'range': [4134, 4138], 'children': []}]}, {'type': 'CallExpression', 'name': 'node.metadata', 'range': [4139, 4145], 'children': [{'type': 'Identifier', 'name': 'node', 'range': [4139, 4143], 'children': []}, {'type': 'Identifier', 'name': 'metadata', 'range': [4144, 4145], 'children': []}]}]}]}]}]}]}]}]}]}]}, {'type': 'ExpressionStatement', 'name': 'await asyncio.gather(*[AgentNodeLink.prisma(tx).create({...}) for link in graph.links])', 'range': [4108, 4190], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [4108, 4113], 'children': [{'type': 'CallExpression', 'name': 'asyncio.gather', 'range': [4114, 4189], 'children': [{'type': 'MemberExpression', 'name': 'asyncio.gather', 'range': [4114, 4128], 'children': [{'type': 'Identifier', 'name': 'asyncio', 'range': [4114, 4120], 'children': []}, {'type': 'Identifier', 'name': 'gather', 'range': [4121, 4127], 'children': []}]}, {'type': 'SpreadElement', 'name': '*', 'range': [4129, 4130], 'children': [{'type': 'ArrayExpression', 'name': '[...]', 'range': [4131, 4187], 'children': [{'type': 'CallExpression', 'name': 'AgentNodeLink.prisma(tx).create', 'range': [4133, 4178], 'children': [{'type': 'MemberExpression', 'name': 'AgentNodeLink.prisma', 'range': [4133, 4145], 'children': [{'type': 'Identifier', 'name': 'AgentNodeLink', 'range': [4133, 4145], 'children': []}, {'type': 'Identifier', 'name': 'prisma', 'range': [4146, 4152], 'children': []}]}, {'type': 'CallExpression', 'name': 'prisma(tx)', 'range': [4153, 4161], 'children': [{'type': 'Identifier', 'name': 'tx', 'range': [4154, 4156], 'children': []}]}, {'type': 'MemberExpression', 'name': 'create', 'range': [4162, 4168], 'children': []}, {'type': 'ObjectExpression', 'name': '{...}', 'range': [4169, 4176], 'children': [{'type': 'Property', 'name': 'id', 'range': [4170, 4176], 'children': [{'type': 'CallExpression', 'name': 'str(uuid.uuid4())', 'range': [4172, 4184], 'children': [{'type': 'CallExpression', 'name': 'uuid.uuid4()', 'range': [4176, 4184], 'children': [{'type': 'MemberExpression', 'name': 'uuid.uuid4', 'range': [4176, 4184], 'children': [{'type': 'Identifier', 'name': 'uuid', 'range': [4176, 4180], 'children': []}, {'type': 'Identifier', 'name': 'uuid4', 'range': [4181, 4185], 'children': []}]}]}]}]}, {'type': 'Property', 'name': 'sourceName', 'range': [4185, 4191], 'children': [{'type': 'Identifier', 'name': 'link.source_name', 'range': [4187, 4191], 'children': []}]}, {'type': 'Property', 'name': 'sinkName', 'range': [4192, 4198], 'children': [{'type': 'Identifier', 'name': 'link.sink_name', 'range': [4194, 4198], 'children': []}]}, {'type': 'Property', 'name': 'agentNodeSourceId', 'range': [4199, 4205], 'children': [{'type': 'Identifier', 'name': 'link.source_id', 'range': [4201, 4205], 'children': []}]}, {'type': 'Property', 'name': 'agentNodeSinkId', 'range': [4206, 4212], 'children': [{'type': 'Identifier', 'name': 'link.sink_id', 'range': [4208, 4212], 'children': []}]}, {'type': 'Property', 'name': 'isStatic', 'range': [4213, 4219], 'children': [{'type': 'Identifier', 'name': 'link.is_static', 'range': [4215, 4219], 'children': []}]}]}]}]}]}]}]}]}]}]}]}
2025-01-08 10:29:22,648 - INFO - Starting Step 3: AST simplification
2025-01-08 10:29:24,572 - INFO - Step 5 result: {'type': 'Program', 'name': 'get_graph_all_versions', 'range': [3714, 3799], 'children': [{'type': 'FunctionDecl', 'name': 'get_graph_all_versions', 'range': [3714, 3799], 'children': [{'type': 'AsyncKeyword', 'name': 'async', 'range': [3714, 3714], 'children': []}, {'type': 'DefKeyword', 'name': 'def', 'range': [3715, 3715], 'children': []}, {'type': 'Identifier', 'name': 'get_graph_all_versions', 'range': [3716, 3716], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [3717, 3725], 'children': [{'type': 'Parameter', 'name': 'graph_id', 'range': [3718, 3720], 'children': []}, {'type': 'Parameter', 'name': 'user_id', 'range': [3722, 3724], 'children': []}]}, {'type': 'ReturnType', 'name': 'return_type', 'range': [3726, 3731], 'children': [{'type': 'ListType', 'name': 'list', 'range': [3728, 3731], 'children': [{'type': 'TypeName', 'name': 'GraphModel', 'range': [3730, 3730], 'children': []}]}]}, {'type': 'BlockStatement', 'name': 'body', 'range': [3733, 3799], 'children': [{'type': 'VariableDecl', 'name': 'graph_versions', 'range': [3734, 3773], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [3736, 3736], 'children': [{'type': 'CallExpression', 'name': 'AgentGraph.prisma().find_many', 'range': [3737, 3773], 'children': [{'type': 'Arguments', 'name': 'arguments', 'range': [3740, 3773], 'children': [{'type': 'Argument', 'name': 'where', 'range': [3746, 3756], 'children': []}, {'type': 'Argument', 'name': 'order', 'range': [3759, 3765], 'children': []}, {'type': 'Argument', 'name': 'include', 'range': [3768, 3771], 'children': []}]}]}]}]}, {'type': 'IfStatement', 'name': 'if', 'range': [3776, 3784], 'children': [{'type': 'UnaryExpression', 'name': 'not graph_versions', 'range': [3777, 3778], 'children': []}, {'type': 'ReturnStatement', 'name': 'return', 'range': [3781, 3783], 'children': []}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [3786, 3798], 'children': [{'type': 'ListComprehension', 'name': 'list comprehension', 'range': [3787, 3798], 'children': [{'type': 'CallExpression', 'name': 'GraphModel.from_db(graph)', 'range': [3788, 3793], 'children': []}, {'type': 'ForStatement', 'name': 'for graph in graph_versions', 'range': [3794, 3797], 'children': []}]}]}]}]}]}
2025-01-08 10:29:24,573 - INFO - Completed main AST analysis flow
2025-01-08 10:29:24,573 - INFO - Successfully processed chunk
2025-01-08 10:29:26,033 - INFO - Step 5 result: {'type': 'Program', 'name': 'create_graph', 'range': [3860, 3935], 'children': [{'type': 'FunctionDecl', 'name': 'create_graph', 'range': [3860, 3935], 'children': [{'type': 'Parameter', 'name': 'graph', 'range': [3864, 3866]}, {'type': 'Parameter', 'name': 'user_id', 'range': [3868, 3870]}, {'type': 'ReturnType', 'name': 'GraphModel', 'range': [3874, 3874]}, {'type': 'BlockStatement', 'range': [3876, 3935], 'children': [{'type': 'WithStatement', 'range': [3877, 3885], 'children': [{'type': 'VariableDecl', 'name': 'tx', 'range': [3883, 3883]}]}, {'type': 'ExpressionStatement', 'range': [3886, 3895], 'children': [{'type': 'CallExpression', 'name': '__create_graph', 'range': [3887, 3894], 'children': [{'type': 'Argument', 'name': 'tx', 'range': [3889, 3889]}, {'type': 'Argument', 'name': 'graph', 'range': [3891, 3891]}, {'type': 'Argument', 'name': 'user_id', 'range': [3893, 3893]}]}]}, {'type': 'IfStatement', 'range': [3897, 3926], 'children': [{'type': 'AssignmentExpression', 'range': [3898, 3921], 'children': [{'type': 'CallExpression', 'name': 'get_graph', 'range': [3902, 3921], 'children': [{'type': 'Argument', 'name': 'graph.id', 'range': [3905, 3907]}, {'type': 'Argument', 'name': 'graph.version', 'range': [3909, 3911]}, {'type': 'Argument', 'name': 'graph.is_template', 'range': [3913, 3915]}, {'type': 'Argument', 'name': 'user_id', 'range': [3917, 3919]}]}]}, {'type': 'ReturnStatement', 'range': [3924, 3926], 'children': [{'type': 'Identifier', 'name': 'created_graph', 'range': [3925, 3925]}]}]}, {'type': 'ThrowStatement', 'range': [3928, 3934], 'children': [{'type': 'NewExpression', 'name': 'ValueError', 'range': [3929, 3933], 'children': [{'type': 'Literal', 'value': 'f"Created graph {graph.id} v{graph.version} is not in DB"', 'range': [3931, 3932]}]}]}]}]}]}
2025-01-08 10:29:26,033 - INFO - Completed main AST analysis flow
2025-01-08 10:29:26,034 - INFO - Successfully processed chunk
2025-01-08 10:29:27,563 - INFO - Step 5 result: {'type': 'Program', 'name': 'set_node_webhook', 'range': [2994, 3095], 'children': [{'type': 'FunctionDecl', 'name': 'set_node_webhook', 'range': [2994, 3095], 'children': [{'type': 'AsyncKeyword', 'name': 'async', 'range': [2994, 2994], 'children': []}, {'type': 'DefKeyword', 'name': 'def', 'range': [2995, 2995], 'children': []}, {'type': 'FunctionName', 'name': 'set_node_webhook', 'range': [2996, 2996], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [2997, 3007], 'children': [{'type': 'Parameter', 'name': 'node_id', 'range': [2998, 3000], 'children': []}, {'type': 'Parameter', 'name': 'webhook_id', 'range': [3002, 3006], 'children': []}]}, {'type': 'ReturnType', 'name': 'NodeModel', 'range': [3008, 3010], 'children': []}, {'type': 'FunctionBody', 'name': 'body', 'range': [3012, 3095], 'children': [{'type': 'AssignmentExpression', 'name': 'node', 'range': [3013, 3074], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [3015, 3015], 'children': []}, {'type': 'MemberExpression', 'name': 'AgentNode.prisma', 'range': [3016, 3018], 'children': []}, {'type': 'CallExpression', 'name': 'update', 'range': [3022, 3074], 'children': [{'type': 'ObjectExpression', 'name': 'where', 'range': [3025, 3031], 'children': []}, {'type': 'ObjectExpression', 'name': 'data', 'range': [3034, 3065], 'children': []}, {'type': 'Identifier', 'name': 'AGENT_NODE_INCLUDE', 'range': [3069, 3071], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if', 'range': [3076, 3086], 'children': [{'type': 'UnaryExpression', 'name': 'not', 'range': [3077, 3077], 'children': []}, {'type': 'Identifier', 'name': 'node', 'range': [3078, 3078], 'children': []}, {'type': 'ThrowStatement', 'name': 'raise', 'range': [3081, 3086], 'children': [{'type': 'NewExpression', 'name': 'ValueError', 'range': [3082, 3082], 'children': []}, {'type': 'TemplateLiteral', 'name': 'f', 'range': [3084, 3085], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [3088, 3094], 'children': [{'type': 'MemberExpression', 'name': 'NodeModel.from_db', 'range': [3089, 3091], 'children': []}, {'type': 'Identifier', 'name': 'node', 'range': [3093, 3093], 'children': []}]}]}]}]}
2025-01-08 10:29:27,563 - INFO - Completed main AST analysis flow
2025-01-08 10:29:27,564 - INFO - Successfully processed chunk
2025-01-08 10:29:28,575 - INFO - Step 4 result: {'type': 'Program', 'name': '', 'range': [144, 265], 'children': [{'type': 'ClassDecl', 'name': 'Link', 'range': [144, 172], 'children': [{'type': 'PropertyDecl', 'name': 'source_id', 'range': [151, 153], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [153, 153], 'children': []}]}, {'type': 'PropertyDecl', 'name': 'sink_id', 'range': [155, 157], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [157, 157], 'children': []}]}, {'type': 'PropertyDecl', 'name': 'source_name', 'range': [159, 161], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [161, 161], 'children': []}]}, {'type': 'PropertyDecl', 'name': 'sink_name', 'range': [163, 165], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [165, 165], 'children': []}]}, {'type': 'PropertyDecl', 'name': 'is_static', 'range': [167, 171], 'children': [{'type': 'TypeAnnotation', 'name': 'bool', 'range': [169, 169], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [170, 170], 'children': [{'type': 'Literal', 'name': 'False', 'range': [171, 171], 'children': []}]}]}]}, {'type': 'FunctionDecl', 'name': 'from_db', 'range': [174, 233], 'children': [{'type': 'Parameter', 'name': 'link', 'range': [180, 182], 'children': [{'type': 'TypeAnnotation', 'name': 'AgentNodeLink', 'range': [182, 182], 'children': []}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [186, 232], 'children': [{'type': 'CallExpression', 'name': 'Link', 'range': [187, 232], 'children': [{'type': 'Argument', 'name': 'id', 'range': [190, 194], 'children': [{'type': 'MemberExpression', 'name': 'link.id', 'range': [192, 194], 'children': []}]}, {'type': 'Argument', 'name': 'source_name', 'range': [197, 201], 'children': [{'type': 'MemberExpression', 'name': 'link.sourceName', 'range': [199, 201], 'children': []}]}, {'type': 'Argument', 'name': 'source_id', 'range': [204, 208], 'children': [{'type': 'MemberExpression', 'name': 'link.agentNodeSourceId', 'range': [206, 208], 'children': []}]}, {'type': 'Argument', 'name': 'sink_name', 'range': [211, 215], 'children': [{'type': 'MemberExpression', 'name': 'link.sinkName', 'range': [213, 215], 'children': []}]}, {'type': 'Argument', 'name': 'sink_id', 'range': [218, 222], 'children': [{'type': 'MemberExpression', 'name': 'link.agentNodeSinkId', 'range': [220, 222], 'children': []}]}, {'type': 'Argument', 'name': 'is_static', 'range': [225, 229], 'children': [{'type': 'MemberExpression', 'name': 'link.isStatic', 'range': [227, 229], 'children': []}]}]}]}]}, {'type': 'FunctionDecl', 'name': '__hash__', 'range': [235, 263], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [238, 238], 'children': []}, {'type': 'ReturnStatement', 'name': 'return', 'range': [242, 262], 'children': [{'type': 'CallExpression', 'name': 'hash', 'range': [243, 262], 'children': [{'type': 'Argument', 'name': 'tuple', 'range': [245, 261], 'children': [{'type': 'MemberExpression', 'name': 'self.source_id', 'range': [246, 248], 'children': []}, {'type': 'MemberExpression', 'name': 'self.sink_id', 'range': [250, 252], 'children': []}, {'type': 'MemberExpression', 'name': 'self.source_name', 'range': [254, 256], 'children': []}, {'type': 'MemberExpression', 'name': 'self.sink_name', 'range': [258, 260], 'children': []}]}]}]}]}]}
2025-01-08 10:29:28,575 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:29:29,900 - INFO - Step 3 result: {'type': 'Program', 'name': '', 'range': [0, 143], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 2], 'children': [{'type': 'ImportClause', 'name': 'asyncio', 'range': [0, 1], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [3, 5], 'children': [{'type': 'ImportClause', 'name': 'logging', 'range': [3, 4], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [6, 8], 'children': [{'type': 'ImportClause', 'name': 'uuid', 'range': [6, 7], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [9, 13], 'children': [{'type': 'ImportClause', 'name': 'defaultdict', 'range': [11, 12], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [14, 20], 'children': [{'type': 'ImportClause', 'name': 'datetime', 'range': [16, 17], 'children': []}, {'type': 'ImportClause', 'name': 'timezone', 'range': [19, 20], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [21, 31], 'children': [{'type': 'ImportClause', 'name': 'Any', 'range': [23, 24], 'children': []}, {'type': 'ImportClause', 'name': 'Literal', 'range': [26, 27], 'children': []}, {'type': 'ImportClause', 'name': 'Optional', 'range': [28, 29], 'children': []}, {'type': 'ImportClause', 'name': 'Type', 'range': [30, 31], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [33, 35], 'children': [{'type': 'ImportClause', 'name': 'prisma', 'range': [33, 34], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [36, 48], 'children': [{'type': 'ImportClause', 'name': 'AgentGraph', 'range': [40, 41], 'children': []}, {'type': 'ImportClause', 'name': 'AgentGraphExecution', 'range': [43, 44], 'children': []}, {'type': 'ImportClause', 'name': 'AgentNode', 'range': [45, 46], 'children': []}, {'type': 'ImportClause', 'name': 'AgentNodeLink', 'range': [47, 48], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [49, 55], 'children': [{'type': 'ImportClause', 'name': 'AgentGraphWhereInput', 'range': [53, 54], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [56, 62], 'children': [{'type': 'ImportClause', 'name': 'computed_field', 'range': [60, 61], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [64, 72], 'children': [{'type': 'ImportClause', 'name': 'AgentExecutorBlock', 'range': [70, 71], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [73, 83], 'children': [{'type': 'ImportClause', 'name': 'AgentInputBlock', 'range': [79, 80], 'children': []}, {'type': 'ImportClause', 'name': 'AgentOutputBlock', 'range': [82, 83], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [84, 90], 'children': [{'type': 'ImportClause', 'name': 'json', 'range': [88, 89], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [92, 103], 'children': [{'type': 'ImportClause', 'name': 'BlockInput', 'range': [95, 96], 'children': []}, {'type': 'ImportClause', 'name': 'BlockType', 'range': [98, 99], 'children': []}, {'type': 'ImportClause', 'name': 'get_block', 'range': [100, 101], 'children': []}, {'type': 'ImportClause', 'name': 'get_blocks', 'range': [102, 103], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [104, 111], 'children': [{'type': 'ImportClause', 'name': 'BaseDbModel', 'range': [107, 108], 'children': []}, {'type': 'ImportClause', 'name': 'transaction', 'range': [110, 111], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [112, 117], 'children': [{'type': 'ImportClause', 'name': 'ExecutionStatus', 'range': [115, 116], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [118, 125], 'children': [{'type': 'ImportClause', 'name': 'AGENT_GRAPH_INCLUDE', 'range': [121, 122], 'children': []}, {'type': 'ImportClause', 'name': 'AGENT_NODE_INCLUDE', 'range': [124, 125], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [126, 131], 'children': [{'type': 'ImportClause', 'name': 'Webhook', 'range': [129, 130], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'logger', 'range': [133, 141], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [134, 141], 'children': [{'type': 'CallExpression', 'name': 'getLogger', 'range': [135, 140], 'children': [{'type': 'Identifier', 'name': '__name__', 'range': [138, 139], 'children': []}]}]}]}]}
2025-01-08 10:29:29,900 - INFO - Starting Step 4: AST normalization
2025-01-08 10:29:34,198 - INFO - Step 3 result: {'type': 'Program', 'name': 'get_graph', 'range': [3383, 3556], 'children': [{'type': 'FunctionDeclaration', 'name': 'get_graph', 'range': [3383, 3556], 'children': [{'type': 'AsyncKeyword', 'name': 'async', 'range': [3383, 3387], 'children': []}, {'type': 'DefKeyword', 'name': 'def', 'range': [3384, 3387], 'children': []}, {'type': 'FunctionName', 'name': 'get_graph', 'range': [3385, 3394], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [3386, 3425], 'children': [{'type': 'Parameter', 'name': 'graph_id', 'range': [3388, 3391], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [3389, 3391], 'children': []}]}, {'type': 'Parameter', 'name': 'version', 'range': [3393, 3399], 'children': [{'type': 'TypeAnnotation', 'name': 'int | None', 'range': [3394, 3399], 'children': []}, {'type': 'DefaultValue', 'name': 'None', 'range': [3398, 3399], 'children': []}]}, {'type': 'Parameter', 'name': 'template', 'range': [3402, 3406], 'children': [{'type': 'TypeAnnotation', 'name': 'bool', 'range': [3403, 3406], 'children': []}, {'type': 'DefaultValue', 'name': 'False', 'range': [3405, 3406], 'children': []}]}, {'type': 'Parameter', 'name': 'user_id', 'range': [3409, 3415], 'children': [{'type': 'TypeAnnotation', 'name': 'str | None', 'range': [3410, 3415], 'children': []}, {'type': 'DefaultValue', 'name': 'None', 'range': [3414, 3415], 'children': []}]}, {'type': 'Parameter', 'name': 'for_export', 'range': [3418, 3422], 'children': [{'type': 'TypeAnnotation', 'name': 'bool', 'range': [3419, 3422], 'children': []}, {'type': 'DefaultValue', 'name': 'False', 'range': [3421, 3422], 'children': []}]}]}, {'type': 'ReturnType', 'name': 'GraphModel | None', 'range': [3426, 3431], 'children': []}, {'type': 'FunctionBody', 'name': 'body', 'range': [3432, 3556], 'children': [{'type': 'Docstring', 'name': 'docstring', 'range': [3433, 3435], 'children': []}, {'type': 'VariableDeclaration', 'name': 'where_clause', 'range': [3437, 3448], 'children': [{'type': 'TypeAnnotation', 'name': 'AgentGraphWhereInput', 'range': [3438, 3441], 'children': []}, {'type': 'ObjectLiteral', 'name': 'initializer', 'range': [3441, 3448], 'children': [{'type': 'Property', 'name': 'id', 'range': [3443, 3446], 'children': [{'type': 'Identifier', 'name': 'graph_id', 'range': [3445, 3446], 'children': []}]}]}]}, {'type': 'IfStatement', 'name': 'if', 'range': [3450, 3463], 'children': [{'type': 'Condition', 'name': 'version is not None', 'range': [3451, 3455], 'children': []}, {'type': 'Block', 'name': 'then', 'range': [3456, 3463], 'children': [{'type': 'ExpressionStatement', 'name': 'where_clause["version"] = version', 'range': [3457, 3462], 'children': []}]}]}, {'type': 'ElifStatement', 'name': 'elif', 'range': [3464, 3475], 'children': [{'type': 'Condition', 'name': 'not template', 'range': [3465, 3467], 'children': []}, {'type': 'Block', 'name': 'then', 'range': [3468, 3475], 'children': [{'type': 'ExpressionStatement', 'name': 'where_clause["isActive"] = True', 'range': [3469, 3474], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if', 'range': [3491, 3507], 'children': [{'type': 'Condition', 'name': 'user_id is not None and not template', 'range': [3492, 3499], 'children': []}, {'type': 'Block', 'name': 'then', 'range': [3500, 3507], 'children': [{'type': 'ExpressionStatement', 'name': 'where_clause["userId"] = user_id', 'range': [3501, 3506], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'graph', 'range': [3509, 3541], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [3511, 3541], 'children': [{'type': 'CallExpression', 'name': 'AgentGraph.prisma().find_first', 'range': [3512, 3540], 'children': [{'type': 'Arguments', 'name': 'arguments', 'range': [3519, 3540], 'children': [{'type': 'NamedArgument', 'name': 'where', 'range': [3521, 3524], 'children': [{'type': 'Identifier', 'name': 'where_clause', 'range': [3523, 3524], 'children': []}]}, {'type': 'NamedArgument', 'name': 'include', 'range': [3526, 3529], 'children': [{'type': 'Identifier', 'name': 'AGENT_GRAPH_INCLUDE', 'range': [3528, 3529], 'children': []}]}, {'type': 'NamedArgument', 'name': 'order', 'range': [3531, 3538], 'children': [{'type': 'ObjectLiteral', 'name': 'initializer', 'range': [3533, 3537], 'children': [{'type': 'Property', 'name': 'version', 'range': [3534, 3536], 'children': [{'type': 'StringLiteral', 'name': 'desc', 'range': [3536, 3536], 'children': []}]}]}]}]}]}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [3542, 3555], 'children': [{'type': 'ConditionalExpression', 'name': 'GraphModel.from_db(graph, for_export) if graph else None', 'range': [3543, 3554], 'children': [{'type': 'CallExpression', 'name': 'GraphModel.from_db', 'range': [3543, 3550], 'children': [{'type': 'Arguments', 'name': 'arguments', 'range': [3546, 3550], 'children': [{'type': 'Identifier', 'name': 'graph', 'range': [3547, 3548], 'children': []}, {'type': 'Identifier', 'name': 'for_export', 'range': [3549, 3550], 'children': []}]}]}, {'type': 'Identifier', 'name': 'graph', 'range': [3552, 3553], 'children': []}, {'type': 'NullLiteral', 'name': 'None', 'range': [3554, 3554], 'children': []}]}]}]}]}]}
2025-01-08 10:29:34,198 - INFO - Starting Step 4: AST normalization
2025-01-08 10:29:34,891 - INFO - Step 3 result: {'type': 'Program', 'name': 'delete_graph', 'range': [3801, 3858], 'children': [{'type': 'FunctionDeclaration', 'name': 'delete_graph', 'range': [3801, 3858], 'children': [{'type': 'Keyword', 'value': 'async', 'range': [3801, 3801]}, {'type': 'Keyword', 'value': 'def', 'range': [3802, 3802]}, {'type': 'Identifier', 'value': 'delete_graph', 'range': [3803, 3803]}, {'type': 'ParameterList', 'range': [3804, 3812], 'children': [{'type': 'Parameter', 'name': 'graph_id', 'range': [3805, 3807], 'children': [{'type': 'Identifier', 'value': 'graph_id', 'range': [3805, 3805]}, {'type': 'TypeAnnotation', 'value': 'str', 'range': [3807, 3807]}]}, {'type': 'Parameter', 'name': 'user_id', 'range': [3809, 3811], 'children': [{'type': 'Identifier', 'value': 'user_id', 'range': [3809, 3809]}, {'type': 'TypeAnnotation', 'value': 'str', 'range': [3811, 3811]}]}]}, {'type': 'ReturnType', 'range': [3813, 3815], 'children': [{'type': 'TypeAnnotation', 'value': 'int', 'range': [3815, 3815]}]}, {'type': 'BlockStatement', 'range': [3817, 3858], 'children': [{'type': 'VariableDeclaration', 'name': 'entries_count', 'range': [3818, 3842], 'children': [{'type': 'Identifier', 'value': 'entries_count', 'range': [3818, 3818]}, {'type': 'AwaitExpression', 'range': [3820, 3842], 'children': [{'type': 'Keyword', 'value': 'await', 'range': [3820, 3820]}, {'type': 'CallExpression', 'range': [3821, 3842], 'children': [{'type': 'MemberExpression', 'range': [3821, 3827], 'children': [{'type': 'Identifier', 'value': 'AgentGraph', 'range': [3821, 3821]}, {'type': 'Identifier', 'value': 'prisma', 'range': [3823, 3823]}, {'type': 'Identifier', 'value': 'delete_many', 'range': [3827, 3827]}]}, {'type': 'ArgumentList', 'range': [3828, 3842], 'children': [{'type': 'ObjectExpression', 'range': [3832, 3840], 'children': [{'type': 'Property', 'name': 'id', 'range': [3833, 3835], 'children': [{'type': 'String', 'value': '"id"', 'range': [3833, 3833]}, {'type': 'Identifier', 'value': 'graph_id', 'range': [3835, 3835]}]}, {'type': 'Property', 'name': 'userId', 'range': [3837, 3839], 'children': [{'type': 'String', 'value': '"userId"', 'range': [3837, 3837]}, {'type': 'Identifier', 'value': 'user_id', 'range': [3839, 3839]}]}]}]}]}]}]}, {'type': 'IfStatement', 'range': [3844, 3855], 'children': [{'type': 'Keyword', 'value': 'if', 'range': [3844, 3844]}, {'type': 'Identifier', 'value': 'entries_count', 'range': [3845, 3845]}, {'type': 'BlockStatement', 'range': [3847, 3855], 'children': [{'type': 'ExpressionStatement', 'range': [3848, 3854], 'children': [{'type': 'CallExpression', 'range': [3848, 3854], 'children': [{'type': 'MemberExpression', 'range': [3848, 3850], 'children': [{'type': 'Identifier', 'value': 'logger', 'range': [3848, 3848]}, {'type': 'Identifier', 'value': 'info', 'range': [3850, 3850]}]}, {'type': 'ArgumentList', 'range': [3851, 3854], 'children': [{'type': 'String', 'value': 'f"Deleted {entries_count} graph entries for Graph #{graph_id}"', 'range': [3852, 3853]}]}]}]}]}]}, {'type': 'ReturnStatement', 'range': [3856, 3858], 'children': [{'type': 'Keyword', 'value': 'return', 'range': [3856, 3856]}, {'type': 'Identifier', 'value': 'entries_count', 'range': [3857, 3857]}]}]}]}]}
2025-01-08 10:29:34,891 - INFO - Starting Step 4: AST normalization
2025-01-08 10:29:37,352 - INFO - Step 3 result: {'type': 'Program', 'name': 'set_graph_active_version', 'range': [3557, 3713], 'children': [{'type': 'FunctionDeclaration', 'name': 'set_graph_active_version', 'range': [3557, 3576], 'children': [{'type': 'Keyword', 'name': 'async', 'range': [3557, 3561], 'children': []}, {'type': 'Keyword', 'name': 'def', 'range': [3558, 3561], 'children': []}, {'type': 'Identifier', 'name': 'set_graph_active_version', 'range': [3559, 3583], 'children': []}, {'type': 'ParameterList', 'name': '', 'range': [3560, 3572], 'children': [{'type': 'Parameter', 'name': 'graph_id', 'range': [3561, 3567], 'children': [{'type': 'Identifier', 'name': 'graph_id', 'range': [3561, 3567], 'children': []}, {'type': 'TypeAnnotation', 'name': 'str', 'range': [3562, 3567], 'children': []}]}, {'type': 'Parameter', 'name': 'version', 'range': [3565, 3571], 'children': [{'type': 'Identifier', 'name': 'version', 'range': [3565, 3571], 'children': []}, {'type': 'TypeAnnotation', 'name': 'int', 'range': [3566, 3571], 'children': []}]}, {'type': 'Parameter', 'name': 'user_id', 'range': [3569, 3575], 'children': [{'type': 'Identifier', 'name': 'user_id', 'range': [3569, 3575], 'children': []}, {'type': 'TypeAnnotation', 'name': 'str', 'range': [3570, 3575], 'children': []}]}]}, {'type': 'ReturnType', 'name': 'None', 'range': [3573, 3576], 'children': []}]}, {'type': 'Comment', 'name': '# Activate the requested version if it exists and is owned by the user.', 'range': [3578, 3592], 'children': []}, {'type': 'VariableDeclaration', 'name': 'updated_count', 'range': [3594, 3603], 'children': [{'type': 'Identifier', 'name': 'updated_count', 'range': [3594, 3603], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [3595, 3603], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [3596, 3603], 'children': [{'type': 'CallExpression', 'name': 'AgentGraph.prisma().update_many', 'range': [3597, 3637], 'children': [{'type': 'MemberExpression', 'name': 'AgentGraph.prisma', 'range': [3597, 3600], 'children': [{'type': 'Identifier', 'name': 'AgentGraph', 'range': [3597, 3600], 'children': []}, {'type': 'Identifier', 'name': 'prisma', 'range': [3598, 3600], 'children': []}]}, {'type': 'CallExpression', 'name': 'update_many', 'range': [3603, 3637], 'children': [{'type': 'ObjectExpression', 'name': 'data', 'range': [3608, 3612], 'children': [{'type': 'Property', 'name': 'isActive', 'range': [3609, 3611], 'children': [{'type': 'Literal', 'name': 'True', 'range': [3610, 3611], 'children': []}]}]}, {'type': 'ObjectExpression', 'name': 'where', 'range': [3617, 3634], 'children': [{'type': 'Property', 'name': 'id', 'range': [3619, 3621], 'children': [{'type': 'Identifier', 'name': 'graph_id', 'range': [3620, 3621], 'children': []}]}, {'type': 'Property', 'name': 'version', 'range': [3624, 3626], 'children': [{'type': 'Identifier', 'name': 'version', 'range': [3625, 3626], 'children': []}]}, {'type': 'Property', 'name': 'userId', 'range': [3629, 3631], 'children': [{'type': 'Identifier', 'name': 'user_id', 'range': [3630, 3631], 'children': []}]}]}]}]}]}]}]}, {'type': 'IfStatement', 'name': 'if', 'range': [3639, 3652], 'children': [{'type': 'BinaryExpression', 'name': '==', 'range': [3641, 3643], 'children': [{'type': 'Identifier', 'name': 'updated_count', 'range': [3640, 3643], 'children': []}, {'type': 'Literal', 'name': '0', 'range': [3642, 3643], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [3644, 3652], 'children': [{'type': 'ThrowStatement', 'name': 'raise', 'range': [3646, 3651], 'children': [{'type': 'NewExpression', 'name': 'Exception', 'range': [3647, 3651], 'children': [{'type': 'Literal', 'name': 'f"Graph #{graph_id} v{version} not found or not owned by user"', 'range': [3649, 3651], 'children': []}]}]}]}]}, {'type': 'Comment', 'name': '# Deactivate all other versions.', 'range': [3654, 3659], 'children': []}, {'type': 'ExpressionStatement', 'name': 'await', 'range': [3661, 3712], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [3661, 3712], 'children': [{'type': 'CallExpression', 'name': 'AgentGraph.prisma().update_many', 'range': [3662, 3711], 'children': [{'type': 'MemberExpression', 'name': 'AgentGraph.prisma', 'range': [3662, 3665], 'children': [{'type': 'Identifier', 'name': 'AgentGraph', 'range': [3662, 3665], 'children': []}, {'type': 'Identifier', 'name': 'prisma', 'range': [3663, 3665], 'children': []}]}, {'type': 'CallExpression', 'name': 'update_many', 'range': [3668, 3711], 'children': [{'type': 'ObjectExpression', 'name': 'data', 'range': [3673, 3677], 'children': [{'type': 'Property', 'name': 'isActive', 'range': [3674, 3676], 'children': [{'type': 'Literal', 'name': 'False', 'range': [3675, 3676], 'children': []}]}]}, {'type': 'ObjectExpression', 'name': 'where', 'range': [3682, 3708], 'children': [{'type': 'Property', 'name': 'id', 'range': [3684, 3686], 'children': [{'type': 'Identifier', 'name': 'graph_id', 'range': [3685, 3686], 'children': []}]}, {'type': 'Property', 'name': 'version', 'range': [3689, 3695], 'children': [{'type': 'ObjectExpression', 'name': 'not', 'range': [3692, 3694], 'children': [{'type': 'Identifier', 'name': 'version', 'range': [3693, 3694], 'children': []}]}]}, {'type': 'Property', 'name': 'userId', 'range': [3698, 3700], 'children': [{'type': 'Identifier', 'name': 'user_id', 'range': [3699, 3700], 'children': []}]}, {'type': 'Property', 'name': 'isActive', 'range': [3703, 3705], 'children': [{'type': 'Literal', 'name': 'True', 'range': [3704, 3705], 'children': []}]}]}]}]}]}]}]}
2025-01-08 10:29:37,352 - INFO - Starting Step 4: AST normalization
2025-01-08 10:29:46,839 - INFO - Step 2 result: {'type': 'Program', 'name': 'Graph', 'range': [904, 1322], 'children': [{'type': 'ClassDeclaration', 'name': 'Graph', 'range': [904, 956], 'children': [{'type': 'VariableDeclaration', 'name': 'version', 'range': [911, 915], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [913, 913], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [914, 914], 'children': [{'type': 'Literal', 'name': '1', 'range': [915, 915], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'is_active', 'range': [917, 921], 'children': [{'type': 'TypeAnnotation', 'name': 'bool', 'range': [919, 919], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [920, 920], 'children': [{'type': 'Literal', 'name': 'True', 'range': [921, 921], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'is_template', 'range': [923, 927], 'children': [{'type': 'TypeAnnotation', 'name': 'bool', 'range': [925, 925], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [926, 926], 'children': [{'type': 'Literal', 'name': 'False', 'range': [927, 927], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'name', 'range': [929, 931], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [931, 931], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'description', 'range': [933, 935], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [935, 935], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'nodes', 'range': [937, 945], 'children': [{'type': 'TypeAnnotation', 'name': 'list', 'range': [939, 939], 'children': [{'type': 'TypeArgument', 'name': 'Node', 'range': [941, 941], 'children': []}]}, {'type': 'Assignment', 'name': '=', 'range': [943, 943], 'children': [{'type': 'ListLiteral', 'name': '[]', 'range': [944, 945], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'links', 'range': [947, 955], 'children': [{'type': 'TypeAnnotation', 'name': 'list', 'range': [949, 949], 'children': [{'type': 'TypeArgument', 'name': 'Link', 'range': [951, 951], 'children': []}]}, {'type': 'Assignment', 'name': '=', 'range': [953, 953], 'children': [{'type': 'ListLiteral', 'name': '[]', 'range': [954, 955], 'children': []}]}]}]}, {'type': 'FunctionDeclaration', 'name': 'input_schema', 'range': [964, 1037], 'children': [{'type': 'Decorator', 'name': '@computed_field', 'range': [958, 959], 'children': []}, {'type': 'Decorator', 'name': '@property', 'range': [961, 962], 'children': []}, {'type': 'Parameter', 'name': 'self', 'range': [967, 967], 'children': []}, {'type': 'ReturnType', 'name': 'dict', 'range': [971, 971], 'children': [{'type': 'TypeArgument', 'name': 'str', 'range': [973, 973], 'children': []}, {'type': 'TypeArgument', 'name': 'Any', 'range': [975, 975], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [978, 1037], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [979, 979], 'children': [{'type': 'CallExpression', 'name': '_generate_schema', 'range': [982, 1036], 'children': [{'type': 'Argument', 'name': 'AgentInputBlock.Input', 'range': [985, 987], 'children': []}, {'type': 'Argument', 'name': 'ListComprehension', 'range': [990, 1033], 'children': [{'type': 'Identifier', 'name': 'node', 'range': [992, 992], 'children': []}, {'type': 'MemberExpression', 'name': 'input_default', 'range': [993, 994], 'children': []}, {'type': 'ForStatement', 'name': 'for', 'range': [996, 1002], 'children': [{'type': 'Identifier', 'name': 'node', 'range': [997, 997], 'children': []}, {'type': 'Identifier', 'name': 'self.nodes', 'range': [999, 1001], 'children': []}]}, {'type': 'IfStatement', 'name': 'if', 'range': [1003, 1032], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [1007, 1007], 'children': [{'type': 'CallExpression', 'name': 'get_block', 'range': [1008, 1013], 'children': [{'type': 'Argument', 'name': 'node.block_id', 'range': [1010, 1012], 'children': []}]}]}, {'type': 'LogicalExpression', 'name': 'and', 'range': [1016, 1016], 'children': [{'type': 'MemberExpression', 'name': 'block_type', 'range': [1018, 1019], 'children': []}, {'type': 'BinaryExpression', 'name': '==', 'range': [1020, 1021], 'children': [{'type': 'Identifier', 'name': 'BlockType.INPUT', 'range': [1022, 1024], 'children': []}]}]}, {'type': 'LogicalExpression', 'name': 'and', 'range': [1026, 1026], 'children': [{'type': 'Literal', 'name': '"name"', 'range': [1027, 1027], 'children': []}, {'type': 'MemberExpression', 'name': 'input_default', 'range': [1029, 1031], 'children': []}]}]}]}]}]}]}]}, {'type': 'FunctionDeclaration', 'name': 'output_schema', 'range': [1045, 1118], 'children': [{'type': 'Decorator', 'name': '@computed_field', 'range': [1039, 1040], 'children': []}, {'type': 'Decorator', 'name': '@property', 'range': [1042, 1043], 'children': []}, {'type': 'Parameter', 'name': 'self', 'range': [1048, 1048], 'children': []}, {'type': 'ReturnType', 'name': 'dict', 'range': [1052, 1052], 'children': [{'type': 'TypeArgument', 'name': 'str', 'range': [1054, 1054], 'children': []}, {'type': 'TypeArgument', 'name': 'Any', 'range': [1056, 1056], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [1059, 1118], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [1060, 1060], 'children': [{'type': 'CallExpression', 'name': '_generate_schema', 'range': [1063, 1117], 'children': [{'type': 'Argument', 'name': 'AgentOutputBlock.Input', 'range': [1066, 1068], 'children': []}, {'type': 'Argument', 'name': 'ListComprehension', 'range': [1071, 1114], 'children': [{'type': 'Identifier', 'name': 'node', 'range': [1073, 1073], 'children': []}, {'type': 'MemberExpression', 'name': 'input_default', 'range': [1074, 1075], 'children': []}, {'type': 'ForStatement', 'name': 'for', 'range': [1077, 1083], 'children': [{'type': 'Identifier', 'name': 'node', 'range': [1078, 1078], 'children': []}, {'type': 'Identifier', 'name': 'self.nodes', 'range': [1080, 1082], 'children': []}]}, {'type': 'IfStatement', 'name': 'if', 'range': [1084, 1113], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [1088, 1088], 'children': [{'type': 'CallExpression', 'name': 'get_block', 'range': [1089, 1094], 'children': [{'type': 'Argument', 'name': 'node.block_id', 'range': [1091, 1093], 'children': []}]}]}, {'type': 'LogicalExpression', 'name': 'and', 'range': [1097, 1097], 'children': [{'type': 'MemberExpression', 'name': 'block_type', 'range': [1099, 1100], 'children': []}, {'type': 'BinaryExpression', 'name': '==', 'range': [1101, 1102], 'children': [{'type': 'Identifier', 'name': 'BlockType.OUTPUT', 'range': [1103, 1105], 'children': []}]}]}, {'type': 'LogicalExpression', 'name': 'and', 'range': [1107, 1107], 'children': [{'type': 'Literal', 'name': '"name"', 'range': [1108, 1108], 'children': []}, {'type': 'MemberExpression', 'name': 'input_default', 'range': [1110, 1112], 'children': []}]}]}]}]}]}]}]}, {'type': 'FunctionDeclaration', 'name': '_generate_schema', 'range': [1123, 1320], 'children': [{'type': 'Decorator', 'name': '@staticmethod', 'range': [1120, 1121], 'children': []}, {'type': 'Parameter', 'name': 'type_class', 'range': [1127, 1127], 'children': [{'type': 'TypeAnnotation', 'name': 'Type', 'range': [1129, 1129], 'children': [{'type': 'TypeArgument', 'name': 'AgentInputBlock.Input', 'range': [1131, 1133], 'children': []}, {'type': 'TypeArgument', 'name': 'AgentOutputBlock.Input', 'range': [1136, 1138], 'children': []}]}]}, {'type': 'Parameter', 'name': 'data', 'range': [1144, 1144], 'children': [{'type': 'TypeAnnotation', 'name': 'list', 'range': [1146, 1146], 'children': [{'type': 'TypeArgument', 'name': 'dict', 'range': [1148, 1148], 'children': []}]}]}, {'type': 'ReturnType', 'name': 'dict', 'range': [1155, 1155], 'children': [{'type': 'TypeArgument', 'name': 'str', 'range': [1157, 1157], 'children': []}, {'type': 'TypeArgument', 'name': 'Any', 'range': [1159, 1159], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [1162, 1320], 'children': [{'type': 'VariableDeclaration', 'name': 'props', 'range': [1163, 1165], 'children': [{'type': 'Assignment', 'name': '=', 'range': [1164, 1164], 'children': [{'type': 'ListLiteral', 'name': '[]', 'range': [1165, 1165], 'children': []}]}]}, {'type': 'ForStatement', 'name': 'for', 'range': [1168, 1172], 'children': [{'type': 'Identifier', 'name': 'p', 'range': [1169, 1169], 'children': []}, {'type': 'Identifier', 'name': 'data', 'range': [1171, 1171], 'children': []}]}, {'type': 'TryStatement', 'name': 'try', 'range': [1174, 1202], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [1176, 1188], 'children': [{'type': 'ExpressionStatement', 'name': '', 'range': [1177, 1187], 'children': [{'type': 'CallExpression', 'name': 'append', 'range': [1179, 1187], 'children': [{'type': 'Argument', 'name': 'type_class', 'range': [1181, 1181], 'children': []}, {'type': 'Argument', 'name': 'p', 'range': [1185, 1185], 'children': []}]}]}]}, {'type': 'CatchClause', 'name': 'except', 'range': [1189, 1202], 'children': [{'type': 'Identifier', 'name': 'Exception', 'range': [1190, 1190], 'children': []}, {'type': 'Identifier', 'name': 'e', 'range': [1192, 1192], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [1194, 1202], 'children': [{'type': 'ExpressionStatement', 'name': '', 'range': [1195, 1201], 'children': [{'type': 'CallExpression', 'name': 'warning', 'range': [1197, 1201], 'children': [{'type': 'Argument', 'name': 'f"Invalid {type_class}: {p}, {e}"', 'range': [1199, 1200], 'children': []}]}]}]}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [1204, 1204], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [1205, 1319], 'children': [{'type': 'Property', 'name': 'type', 'range': [1207, 1207], 'children': [{'type': 'Literal', 'name': '"object"', 'range': [1209, 1209], 'children': []}]}, {'type': 'Property', 'name': 'properties', 'range': [1212, 1212], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [1214, 1297], 'children': [{'type': 'Property', 'name': 'p.name', 'range': [1216, 1218], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [1220, 1290], 'children': [{'type': 'Property', 'name': 'secret', 'range': [1222, 1222], 'children': [{'type': 'MemberExpression', 'name': 'p.secret', 'range': [1224, 1226], 'children': []}]}, {'type': 'Property', 'name': 'advanced', 'range': [1229, 1229], 'children': [{'type': 'MemberExpression', 'name': 'p.advanced', 'range': [1231, 1233], 'children': []}]}, {'type': 'Property', 'name': 'title', 'range': [1236, 1236], 'children': [{'type': 'LogicalExpression', 'name': 'or', 'range': [1241, 1241], 'children': [{'type': 'MemberExpression', 'name': 'p.title', 'range': [1238, 1240], 'children': []}, {'type': 'MemberExpression', 'name': 'p.name', 'range': [1243, 1244], 'children': []}]}]}, {'type': 'SpreadElement', 'name': '...', 'range': [1247, 1248], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [1250, 1264], 'children': [{'type': 'Property', 'name': 'description', 'range': [1251, 1251], 'children': [{'type': 'MemberExpression', 'name': 'p.description', 'range': [1253, 1255], 'children': []}]}]}]}, {'type': 'SpreadElement', 'name': '...', 'range': [1267, 1268], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [1270, 1287], 'children': [{'type': 'Property', 'name': 'default', 'range': [1271, 1271], 'children': [{'type': 'MemberExpression', 'name': 'p.value', 'range': [1273, 1275], 'children': []}]}]}]}]}]}]}]}, {'type': 'Property', 'name': 'required', 'range': [1300, 1300], 'children': [{'type': 'ArrayExpression', 'name': '', 'range': [1302, 1316], 'children': [{'type': 'MemberExpression', 'name': 'p.name', 'range': [1303, 1305], 'children': []}]}]}]}]}]}]}]}
2025-01-08 10:29:46,839 - INFO - Starting Step 3: AST simplification
2025-01-08 10:29:48,433 - INFO - Step 4 result: {'type': 'Program', 'name': 'get_graphs', 'range': [3097, 3261], 'children': [{'type': 'FunctionDecl', 'name': 'get_graphs', 'range': [3097, 3261], 'children': [{'type': 'AsyncKeyword', 'name': 'async', 'range': [3097, 3102], 'children': []}, {'type': 'DefKeyword', 'name': 'def', 'range': [3098, 3101], 'children': []}, {'type': 'FunctionName', 'name': 'get_graphs', 'range': [3099, 3108], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [3100, 3121], 'children': [{'type': 'Parameter', 'name': 'user_id', 'range': [3102, 3105], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [3104, 3107], 'children': []}]}, {'type': 'Parameter', 'name': 'filter_by', 'range': [3107, 3119], 'children': [{'type': 'TypeAnnotation', 'name': 'Literal', 'range': [3109, 3114], 'children': []}, {'type': 'DefaultValue', 'name': '"active"', 'range': [3118, 3121], 'children': []}]}]}, {'type': 'ReturnType', 'name': 'list[GraphModel]', 'range': [3124, 3127], 'children': []}, {'type': 'FunctionBody', 'name': 'body', 'range': [3129, 3261], 'children': [{'type': 'Docstring', 'name': 'docstring', 'range': [3130, 3132], 'children': []}, {'type': 'VariableDecl', 'name': 'where_clause', 'range': [3134, 3142], 'children': [{'type': 'TypeAnnotation', 'name': 'AgentGraphWhereInput', 'range': [3136, 3141], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [3137, 3142], 'children': []}]}, {'type': 'IfStatement', 'name': 'if', 'range': [3145, 3158], 'children': [{'type': 'Condition', 'name': 'filter_by == "active"', 'range': [3146, 3149], 'children': []}, {'type': 'Body', 'name': 'body', 'range': [3151, 3158], 'children': [{'type': 'Assignment', 'name': 'where_clause["isActive"] = True', 'range': [3152, 3157], 'children': []}]}]}, {'type': 'ElifStatement', 'name': 'elif', 'range': [3159, 3172], 'children': [{'type': 'Condition', 'name': 'filter_by == "template"', 'range': [3160, 3163], 'children': []}, {'type': 'Body', 'name': 'body', 'range': [3165, 3172], 'children': [{'type': 'Assignment', 'name': 'where_clause["isTemplate"] = True', 'range': [3166, 3171], 'children': []}]}]}, {'type': 'VariableDecl', 'name': 'graphs', 'range': [3174, 3184], 'children': [{'type': 'Assignment', 'name': '=', 'range': [3175, 3184], 'children': []}]}, {'type': 'AwaitExpression', 'name': 'await', 'range': [3176, 3184], 'children': [{'type': 'CallExpression', 'name': 'AgentGraph.prisma().find_many', 'range': [3177, 3184], 'children': [{'type': 'Arguments', 'name': 'arguments', 'range': [3180, 3184], 'children': []}]}]}, {'type': 'VariableDecl', 'name': 'graph_models', 'range': [3215, 3219], 'children': [{'type': 'Assignment', 'name': '=', 'range': [3216, 3219], 'children': []}]}, {'type': 'ForStatement', 'name': 'for', 'range': [3220, 3256], 'children': [{'type': 'Initialization', 'name': 'graph in graphs', 'range': [3221, 3224], 'children': []}, {'type': 'Body', 'name': 'body', 'range': [3225, 3256], 'children': [{'type': 'TryStatement', 'name': 'try', 'range': [3226, 3256], 'children': [{'type': 'Body', 'name': 'body', 'range': [3228, 3240], 'children': [{'type': 'CallExpression', 'name': 'graph_models.append', 'range': [3229, 3240], 'children': [{'type': 'Arguments', 'name': 'arguments', 'range': [3232, 3240], 'children': []}]}]}, {'type': 'CatchClause', 'name': 'except', 'range': [3241, 3256], 'children': [{'type': 'Parameter', 'name': 'Exception as e', 'range': [3242, 3245], 'children': []}, {'type': 'Body', 'name': 'body', 'range': [3246, 3256], 'children': [{'type': 'CallExpression', 'name': 'logger.error', 'range': [3247, 3254], 'children': [{'type': 'Arguments', 'name': 'arguments', 'range': [3250, 3254], 'children': []}]}, {'type': 'ContinueStatement', 'name': 'continue', 'range': [3255, 3256], 'children': []}]}]}]}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [3258, 3261], 'children': [{'type': 'Argument', 'name': 'graph_models', 'range': [3259, 3261], 'children': []}]}]}]}]}
2025-01-08 10:29:48,433 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:29:54,792 - INFO - Step 5 result: {'type': 'Program', 'name': '', 'range': [144, 265], 'children': [{'type': 'ClassDecl', 'name': 'Link', 'range': [144, 172], 'children': [{'type': 'PropertyDecl', 'name': 'source_id', 'range': [151, 153], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [153, 153], 'children': []}]}, {'type': 'PropertyDecl', 'name': 'sink_id', 'range': [155, 157], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [157, 157], 'children': []}]}, {'type': 'PropertyDecl', 'name': 'source_name', 'range': [159, 161], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [161, 161], 'children': []}]}, {'type': 'PropertyDecl', 'name': 'sink_name', 'range': [163, 165], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [165, 165], 'children': []}]}, {'type': 'PropertyDecl', 'name': 'is_static', 'range': [167, 171], 'children': [{'type': 'TypeAnnotation', 'name': 'bool', 'range': [169, 169], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [170, 170], 'children': [{'type': 'Literal', 'name': 'False', 'range': [171, 171], 'children': []}]}]}]}, {'type': 'FunctionDecl', 'name': 'from_db', 'range': [174, 233], 'children': [{'type': 'Parameter', 'name': 'link', 'range': [180, 182], 'children': [{'type': 'TypeAnnotation', 'name': 'AgentNodeLink', 'range': [182, 182], 'children': []}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [186, 232], 'children': [{'type': 'CallExpression', 'name': 'Link', 'range': [187, 232], 'children': [{'type': 'Argument', 'name': 'id', 'range': [190, 194], 'children': [{'type': 'MemberExpression', 'name': 'link.id', 'range': [192, 194], 'children': []}]}, {'type': 'Argument', 'name': 'source_name', 'range': [197, 201], 'children': [{'type': 'MemberExpression', 'name': 'link.sourceName', 'range': [199, 201], 'children': []}]}, {'type': 'Argument', 'name': 'source_id', 'range': [204, 208], 'children': [{'type': 'MemberExpression', 'name': 'link.agentNodeSourceId', 'range': [206, 208], 'children': []}]}, {'type': 'Argument', 'name': 'sink_name', 'range': [211, 215], 'children': [{'type': 'MemberExpression', 'name': 'link.sinkName', 'range': [213, 215], 'children': []}]}, {'type': 'Argument', 'name': 'sink_id', 'range': [218, 222], 'children': [{'type': 'MemberExpression', 'name': 'link.agentNodeSinkId', 'range': [220, 222], 'children': []}]}, {'type': 'Argument', 'name': 'is_static', 'range': [225, 229], 'children': [{'type': 'MemberExpression', 'name': 'link.isStatic', 'range': [227, 229], 'children': []}]}]}]}]}, {'type': 'FunctionDecl', 'name': '__hash__', 'range': [235, 263], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [238, 238], 'children': []}, {'type': 'ReturnStatement', 'name': 'return', 'range': [242, 262], 'children': [{'type': 'CallExpression', 'name': 'hash', 'range': [243, 262], 'children': [{'type': 'Argument', 'name': 'tuple', 'range': [245, 261], 'children': [{'type': 'MemberExpression', 'name': 'self.source_id', 'range': [246, 248], 'children': []}, {'type': 'MemberExpression', 'name': 'self.sink_id', 'range': [250, 252], 'children': []}, {'type': 'MemberExpression', 'name': 'self.source_name', 'range': [254, 256], 'children': []}, {'type': 'MemberExpression', 'name': 'self.sink_name', 'range': [258, 260], 'children': []}]}]}]}]}]}
2025-01-08 10:29:54,792 - INFO - Completed main AST analysis flow
2025-01-08 10:29:54,794 - INFO - Successfully processed chunk
2025-01-08 10:30:02,387 - INFO - Step 4 result: {'type': 'Program', 'name': 'delete_graph', 'range': [3801, 3858], 'children': [{'type': 'FunctionDecl', 'name': 'delete_graph', 'range': [3801, 3858], 'children': [{'type': 'Keyword', 'value': 'async', 'range': [3801, 3801]}, {'type': 'Keyword', 'value': 'def', 'range': [3802, 3802]}, {'type': 'Identifier', 'value': 'delete_graph', 'range': [3803, 3803]}, {'type': 'ParameterList', 'range': [3804, 3812], 'children': [{'type': 'Parameter', 'name': 'graph_id', 'range': [3805, 3807], 'children': [{'type': 'Identifier', 'value': 'graph_id', 'range': [3805, 3805]}, {'type': 'TypeAnnotation', 'value': 'str', 'range': [3807, 3807]}]}, {'type': 'Parameter', 'name': 'user_id', 'range': [3809, 3811], 'children': [{'type': 'Identifier', 'value': 'user_id', 'range': [3809, 3809]}, {'type': 'TypeAnnotation', 'value': 'str', 'range': [3811, 3811]}]}]}, {'type': 'ReturnType', 'range': [3813, 3815], 'children': [{'type': 'TypeAnnotation', 'value': 'int', 'range': [3815, 3815]}]}, {'type': 'BlockStatement', 'range': [3817, 3858], 'children': [{'type': 'VariableDeclaration', 'name': 'entries_count', 'range': [3818, 3842], 'children': [{'type': 'Identifier', 'value': 'entries_count', 'range': [3818, 3818]}, {'type': 'AwaitExpression', 'range': [3820, 3842], 'children': [{'type': 'Keyword', 'value': 'await', 'range': [3820, 3820]}, {'type': 'CallExpression', 'range': [3821, 3842], 'children': [{'type': 'MemberExpression', 'range': [3821, 3827], 'children': [{'type': 'Identifier', 'value': 'AgentGraph', 'range': [3821, 3821]}, {'type': 'Identifier', 'value': 'prisma', 'range': [3823, 3823]}, {'type': 'Identifier', 'value': 'delete_many', 'range': [3827, 3827]}]}, {'type': 'ArgumentList', 'range': [3828, 3842], 'children': [{'type': 'ObjectExpression', 'range': [3832, 3840], 'children': [{'type': 'Property', 'name': 'id', 'range': [3833, 3835], 'children': [{'type': 'Literal', 'value': '"id"', 'range': [3833, 3833]}, {'type': 'Identifier', 'value': 'graph_id', 'range': [3835, 3835]}]}, {'type': 'Property', 'name': 'userId', 'range': [3837, 3839], 'children': [{'type': 'Literal', 'value': '"userId"', 'range': [3837, 3837]}, {'type': 'Identifier', 'value': 'user_id', 'range': [3839, 3839]}]}]}]}]}]}]}, {'type': 'IfStatement', 'range': [3844, 3855], 'children': [{'type': 'Keyword', 'value': 'if', 'range': [3844, 3844]}, {'type': 'Identifier', 'value': 'entries_count', 'range': [3845, 3845]}, {'type': 'BlockStatement', 'range': [3847, 3855], 'children': [{'type': 'ExpressionStatement', 'range': [3848, 3854], 'children': [{'type': 'CallExpression', 'range': [3848, 3854], 'children': [{'type': 'MemberExpression', 'range': [3848, 3850], 'children': [{'type': 'Identifier', 'value': 'logger', 'range': [3848, 3848]}, {'type': 'Identifier', 'value': 'info', 'range': [3850, 3850]}]}, {'type': 'ArgumentList', 'range': [3851, 3854], 'children': [{'type': 'Literal', 'value': 'f"Deleted {entries_count} graph entries for Graph #{graph_id}"', 'range': [3852, 3853]}]}]}]}]}]}, {'type': 'ReturnStatement', 'range': [3856, 3858], 'children': [{'type': 'Keyword', 'value': 'return', 'range': [3856, 3856]}, {'type': 'Identifier', 'value': 'entries_count', 'range': [3857, 3857]}]}]}]}]}
2025-01-08 10:30:02,387 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:30:04,544 - INFO - Step 4 result: {'type': 'Program', 'name': '', 'range': [0, 143], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 2], 'children': [{'type': 'ImportClause', 'name': 'asyncio', 'range': [0, 1], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [3, 5], 'children': [{'type': 'ImportClause', 'name': 'logging', 'range': [3, 4], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [6, 8], 'children': [{'type': 'ImportClause', 'name': 'uuid', 'range': [6, 7], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [9, 13], 'children': [{'type': 'ImportClause', 'name': 'defaultdict', 'range': [11, 12], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [14, 20], 'children': [{'type': 'ImportClause', 'name': 'datetime', 'range': [16, 17], 'children': []}, {'type': 'ImportClause', 'name': 'timezone', 'range': [19, 20], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [21, 31], 'children': [{'type': 'ImportClause', 'name': 'Any', 'range': [23, 24], 'children': []}, {'type': 'ImportClause', 'name': 'Literal', 'range': [26, 27], 'children': []}, {'type': 'ImportClause', 'name': 'Optional', 'range': [28, 29], 'children': []}, {'type': 'ImportClause', 'name': 'Type', 'range': [30, 31], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [33, 35], 'children': [{'type': 'ImportClause', 'name': 'prisma', 'range': [33, 34], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [36, 48], 'children': [{'type': 'ImportClause', 'name': 'AgentGraph', 'range': [40, 41], 'children': []}, {'type': 'ImportClause', 'name': 'AgentGraphExecution', 'range': [43, 44], 'children': []}, {'type': 'ImportClause', 'name': 'AgentNode', 'range': [45, 46], 'children': []}, {'type': 'ImportClause', 'name': 'AgentNodeLink', 'range': [47, 48], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [49, 55], 'children': [{'type': 'ImportClause', 'name': 'AgentGraphWhereInput', 'range': [53, 54], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [56, 62], 'children': [{'type': 'ImportClause', 'name': 'computed_field', 'range': [60, 61], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [64, 72], 'children': [{'type': 'ImportClause', 'name': 'AgentExecutorBlock', 'range': [70, 71], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [73, 83], 'children': [{'type': 'ImportClause', 'name': 'AgentInputBlock', 'range': [79, 80], 'children': []}, {'type': 'ImportClause', 'name': 'AgentOutputBlock', 'range': [82, 83], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [84, 90], 'children': [{'type': 'ImportClause', 'name': 'json', 'range': [88, 89], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [92, 103], 'children': [{'type': 'ImportClause', 'name': 'BlockInput', 'range': [95, 96], 'children': []}, {'type': 'ImportClause', 'name': 'BlockType', 'range': [98, 99], 'children': []}, {'type': 'ImportClause', 'name': 'get_block', 'range': [100, 101], 'children': []}, {'type': 'ImportClause', 'name': 'get_blocks', 'range': [102, 103], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [104, 111], 'children': [{'type': 'ImportClause', 'name': 'BaseDbModel', 'range': [107, 108], 'children': []}, {'type': 'ImportClause', 'name': 'transaction', 'range': [110, 111], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [112, 117], 'children': [{'type': 'ImportClause', 'name': 'ExecutionStatus', 'range': [115, 116], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [118, 125], 'children': [{'type': 'ImportClause', 'name': 'AGENT_GRAPH_INCLUDE', 'range': [121, 122], 'children': []}, {'type': 'ImportClause', 'name': 'AGENT_NODE_INCLUDE', 'range': [124, 125], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [126, 131], 'children': [{'type': 'ImportClause', 'name': 'Webhook', 'range': [129, 130], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'logger', 'range': [133, 141], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [134, 141], 'children': [{'type': 'CallExpression', 'name': 'getLogger', 'range': [135, 140], 'children': [{'type': 'Identifier', 'name': '__name__', 'range': [138, 139], 'children': []}]}]}]}]}
2025-01-08 10:30:04,545 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:30:15,837 - INFO - Step 4 result: {'type': 'Program', 'name': 'get_graph', 'range': [3383, 3556], 'children': [{'type': 'FunctionDecl', 'name': 'get_graph', 'range': [3383, 3556], 'children': [{'type': 'AsyncKeyword', 'name': 'async', 'range': [3383, 3387], 'children': []}, {'type': 'DefKeyword', 'name': 'def', 'range': [3384, 3387], 'children': []}, {'type': 'FunctionName', 'name': 'get_graph', 'range': [3385, 3394], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [3386, 3425], 'children': [{'type': 'Parameter', 'name': 'graph_id', 'range': [3388, 3391], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [3389, 3391], 'children': []}]}, {'type': 'Parameter', 'name': 'version', 'range': [3393, 3399], 'children': [{'type': 'TypeAnnotation', 'name': 'int | None', 'range': [3394, 3399], 'children': []}, {'type': 'DefaultValue', 'name': 'None', 'range': [3398, 3399], 'children': []}]}, {'type': 'Parameter', 'name': 'template', 'range': [3402, 3406], 'children': [{'type': 'TypeAnnotation', 'name': 'bool', 'range': [3403, 3406], 'children': []}, {'type': 'DefaultValue', 'name': 'False', 'range': [3405, 3406], 'children': []}]}, {'type': 'Parameter', 'name': 'user_id', 'range': [3409, 3415], 'children': [{'type': 'TypeAnnotation', 'name': 'str | None', 'range': [3410, 3415], 'children': []}, {'type': 'DefaultValue', 'name': 'None', 'range': [3414, 3415], 'children': []}]}, {'type': 'Parameter', 'name': 'for_export', 'range': [3418, 3422], 'children': [{'type': 'TypeAnnotation', 'name': 'bool', 'range': [3419, 3422], 'children': []}, {'type': 'DefaultValue', 'name': 'False', 'range': [3421, 3422], 'children': []}]}]}, {'type': 'ReturnType', 'name': 'GraphModel | None', 'range': [3426, 3431], 'children': []}, {'type': 'FunctionBody', 'name': 'body', 'range': [3432, 3556], 'children': [{'type': 'Docstring', 'name': 'docstring', 'range': [3433, 3435], 'children': []}, {'type': 'VariableDecl', 'name': 'where_clause', 'range': [3437, 3448], 'children': [{'type': 'TypeAnnotation', 'name': 'AgentGraphWhereInput', 'range': [3438, 3441], 'children': []}, {'type': 'ObjectLiteral', 'name': 'initializer', 'range': [3441, 3448], 'children': [{'type': 'Property', 'name': 'id', 'range': [3443, 3446], 'children': [{'type': 'Identifier', 'name': 'graph_id', 'range': [3445, 3446], 'children': []}]}]}]}, {'type': 'IfStatement', 'name': 'if', 'range': [3450, 3463], 'children': [{'type': 'Condition', 'name': 'version is not None', 'range': [3451, 3455], 'children': []}, {'type': 'Block', 'name': 'then', 'range': [3456, 3463], 'children': [{'type': 'ExpressionStatement', 'name': 'where_clause["version"] = version', 'range': [3457, 3462], 'children': []}]}]}, {'type': 'ElifStatement', 'name': 'elif', 'range': [3464, 3475], 'children': [{'type': 'Condition', 'name': 'not template', 'range': [3465, 3467], 'children': []}, {'type': 'Block', 'name': 'then', 'range': [3468, 3475], 'children': [{'type': 'ExpressionStatement', 'name': 'where_clause["isActive"] = True', 'range': [3469, 3474], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if', 'range': [3491, 3507], 'children': [{'type': 'Condition', 'name': 'user_id is not None and not template', 'range': [3492, 3499], 'children': []}, {'type': 'Block', 'name': 'then', 'range': [3500, 3507], 'children': [{'type': 'ExpressionStatement', 'name': 'where_clause["userId"] = user_id', 'range': [3501, 3506], 'children': []}]}]}, {'type': 'VariableDecl', 'name': 'graph', 'range': [3509, 3541], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [3511, 3541], 'children': [{'type': 'CallExpression', 'name': 'AgentGraph.prisma().find_first', 'range': [3512, 3540], 'children': [{'type': 'Arguments', 'name': 'arguments', 'range': [3519, 3540], 'children': [{'type': 'NamedArgument', 'name': 'where', 'range': [3521, 3524], 'children': [{'type': 'Identifier', 'name': 'where_clause', 'range': [3523, 3524], 'children': []}]}, {'type': 'NamedArgument', 'name': 'include', 'range': [3526, 3529], 'children': [{'type': 'Identifier', 'name': 'AGENT_GRAPH_INCLUDE', 'range': [3528, 3529], 'children': []}]}, {'type': 'NamedArgument', 'name': 'order', 'range': [3531, 3538], 'children': [{'type': 'ObjectLiteral', 'name': 'initializer', 'range': [3533, 3537], 'children': [{'type': 'Property', 'name': 'version', 'range': [3534, 3536], 'children': [{'type': 'StringLiteral', 'name': 'desc', 'range': [3536, 3536], 'children': []}]}]}]}]}]}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [3542, 3555], 'children': [{'type': 'ConditionalExpression', 'name': 'GraphModel.from_db(graph, for_export) if graph else None', 'range': [3543, 3554], 'children': [{'type': 'CallExpression', 'name': 'GraphModel.from_db', 'range': [3543, 3550], 'children': [{'type': 'Arguments', 'name': 'arguments', 'range': [3546, 3550], 'children': [{'type': 'Identifier', 'name': 'graph', 'range': [3547, 3548], 'children': []}, {'type': 'Identifier', 'name': 'for_export', 'range': [3549, 3550], 'children': []}]}]}, {'type': 'Identifier', 'name': 'graph', 'range': [3552, 3553], 'children': []}, {'type': 'NullLiteral', 'name': 'None', 'range': [3554, 3554], 'children': []}]}]}]}]}]}
2025-01-08 10:30:15,838 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:30:20,708 - INFO - Step 3 result: {'type': 'Program', 'name': 'GraphExecution', 'range': [682, 902], 'children': [{'type': 'ClassDeclaration', 'name': 'GraphExecution', 'range': [682, 720], 'children': [{'type': 'PropertyDeclaration', 'name': 'execution_id', 'range': [689, 691], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [691, 691], 'children': []}]}, {'type': 'PropertyDeclaration', 'name': 'started_at', 'range': [693, 695], 'children': [{'type': 'TypeAnnotation', 'name': 'datetime', 'range': [695, 695], 'children': []}]}, {'type': 'PropertyDeclaration', 'name': 'ended_at', 'range': [697, 699], 'children': [{'type': 'TypeAnnotation', 'name': 'datetime', 'range': [699, 699], 'children': []}]}, {'type': 'PropertyDeclaration', 'name': 'duration', 'range': [701, 703], 'children': [{'type': 'TypeAnnotation', 'name': 'float', 'range': [703, 703], 'children': []}]}, {'type': 'PropertyDeclaration', 'name': 'total_run_time', 'range': [705, 707], 'children': [{'type': 'TypeAnnotation', 'name': 'float', 'range': [707, 707], 'children': []}]}, {'type': 'PropertyDeclaration', 'name': 'status', 'range': [709, 711], 'children': [{'type': 'TypeAnnotation', 'name': 'ExecutionStatus', 'range': [711, 711], 'children': []}]}, {'type': 'PropertyDeclaration', 'name': 'graph_id', 'range': [713, 715], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [715, 715], 'children': []}]}, {'type': 'PropertyDeclaration', 'name': 'graph_version', 'range': [717, 719], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [719, 719], 'children': []}]}]}, {'type': 'MethodDeclaration', 'name': 'from_db', 'range': [722, 901], 'children': [{'type': 'Parameter', 'name': 'execution', 'range': [728, 730], 'children': [{'type': 'TypeAnnotation', 'name': 'AgentGraphExecution', 'range': [730, 730], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [733, 901], 'children': [{'type': 'VariableDeclaration', 'name': 'now', 'range': [734, 743], 'children': [{'type': 'CallExpression', 'name': 'datetime.now', 'range': [736, 743], 'children': [{'type': 'MemberExpression', 'name': 'datetime.now', 'range': [736, 738], 'children': []}, {'type': 'ArgumentList', 'name': '', 'range': [739, 743], 'children': [{'type': 'MemberExpression', 'name': 'timezone.utc', 'range': [740, 742], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'start_time', 'range': [745, 754], 'children': [{'type': 'BinaryExpression', 'name': 'or', 'range': [747, 754], 'children': [{'type': 'MemberExpression', 'name': 'execution.startedAt', 'range': [747, 749], 'children': []}, {'type': 'MemberExpression', 'name': 'execution.createdAt', 'range': [751, 753], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'end_time', 'range': [756, 762], 'children': [{'type': 'BinaryExpression', 'name': 'or', 'range': [758, 762], 'children': [{'type': 'MemberExpression', 'name': 'execution.updatedAt', 'range': [758, 760], 'children': []}, {'type': 'Identifier', 'name': 'now', 'range': [761, 761], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'duration', 'range': [764, 774], 'children': [{'type': 'CallExpression', 'name': 'total_seconds', 'range': [765, 774], 'children': [{'type': 'BinaryExpression', 'name': '-', 'range': [766, 768], 'children': [{'type': 'Identifier', 'name': 'end_time', 'range': [766, 766], 'children': []}, {'type': 'Identifier', 'name': 'start_time', 'range': [768, 768], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'total_run_time', 'range': [776, 778], 'children': [{'type': 'Identifier', 'name': 'duration', 'range': [777, 777], 'children': []}]}, {'type': 'TryStatement', 'name': '', 'range': [780, 813], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [782, 804], 'children': [{'type': 'VariableDeclaration', 'name': 'stats', 'range': [783, 803], 'children': [{'type': 'CallExpression', 'name': 'json.loads', 'range': [785, 803], 'children': [{'type': 'MemberExpression', 'name': 'json.loads', 'range': [785, 787], 'children': []}, {'type': 'ArgumentList', 'name': '', 'range': [788, 803], 'children': [{'type': 'BinaryExpression', 'name': 'or', 'range': [789, 793], 'children': [{'type': 'MemberExpression', 'name': 'execution.stats', 'range': [789, 791], 'children': []}, {'type': 'StringLiteral', 'name': '"{}"', 'range': [793, 793], 'children': []}]}, {'type': 'KeywordArgument', 'name': 'target_type', 'range': [795, 802], 'children': [{'type': 'TypeAnnotation', 'name': 'dict[str, Any]', 'range': [797, 802], 'children': []}]}]}]}]}]}, {'type': 'CatchClause', 'name': 'ValueError', 'range': [805, 813], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [808, 813], 'children': [{'type': 'VariableDeclaration', 'name': 'stats', 'range': [809, 812], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [811, 812], 'children': []}]}]}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [815, 825], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [816, 824], 'children': [{'type': 'Identifier', 'name': 'duration', 'range': [816, 816], 'children': []}, {'type': 'CallExpression', 'name': 'stats.get', 'range': [817, 824], 'children': [{'type': 'MemberExpression', 'name': 'stats.get', 'range': [817, 819], 'children': []}, {'type': 'ArgumentList', 'name': '', 'range': [820, 824], 'children': [{'type': 'StringLiteral', 'name': '"walltime"', 'range': [821, 821], 'children': []}, {'type': 'Identifier', 'name': 'duration', 'range': [823, 823], 'children': []}]}]}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [826, 836], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [827, 835], 'children': [{'type': 'Identifier', 'name': 'total_run_time', 'range': [827, 827], 'children': []}, {'type': 'CallExpression', 'name': 'stats.get', 'range': [828, 835], 'children': [{'type': 'MemberExpression', 'name': 'stats.get', 'range': [828, 830], 'children': []}, {'type': 'ArgumentList', 'name': '', 'range': [831, 835], 'children': [{'type': 'StringLiteral', 'name': '"nodes_walltime"', 'range': [832, 832], 'children': []}, {'type': 'Identifier', 'name': 'total_run_time', 'range': [834, 834], 'children': []}]}]}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [838, 901], 'children': [{'type': 'NewExpression', 'name': 'GraphExecution', 'range': [839, 900], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [840, 900], 'children': [{'type': 'KeywordArgument', 'name': 'id', 'range': [842, 847], 'children': [{'type': 'MemberExpression', 'name': 'execution.id', 'range': [844, 846], 'children': []}]}, {'type': 'KeywordArgument', 'name': 'execution_id', 'range': [849, 854], 'children': [{'type': 'MemberExpression', 'name': 'execution.id', 'range': [852, 854], 'children': []}]}, {'type': 'KeywordArgument', 'name': 'started_at', 'range': [856, 859], 'children': [{'type': 'Identifier', 'name': 'start_time', 'range': [858, 858], 'children': []}]}, {'type': 'KeywordArgument', 'name': 'ended_at', 'range': [861, 864], 'children': [{'type': 'Identifier', 'name': 'end_time', 'range': [863, 863], 'children': []}]}, {'type': 'KeywordArgument', 'name': 'duration', 'range': [866, 869], 'children': [{'type': 'Identifier', 'name': 'duration', 'range': [868, 868], 'children': []}]}, {'type': 'KeywordArgument', 'name': 'total_run_time', 'range': [871, 874], 'children': [{'type': 'Identifier', 'name': 'total_run_time', 'range': [873, 873], 'children': []}]}, {'type': 'KeywordArgument', 'name': 'status', 'range': [876, 884], 'children': [{'type': 'CallExpression', 'name': 'ExecutionStatus', 'range': [878, 884], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [879, 884], 'children': [{'type': 'MemberExpression', 'name': 'execution.executionStatus', 'range': [880, 882], 'children': []}]}]}]}, {'type': 'KeywordArgument', 'name': 'graph_id', 'range': [886, 891], 'children': [{'type': 'MemberExpression', 'name': 'execution.agentGraphId', 'range': [888, 890], 'children': []}]}, {'type': 'KeywordArgument', 'name': 'graph_version', 'range': [893, 898], 'children': [{'type': 'MemberExpression', 'name': 'execution.agentGraphVersion', 'range': [895, 897], 'children': []}]}]}]}]}]}]}]}
2025-01-08 10:30:20,709 - INFO - Starting Step 4: AST normalization
2025-01-08 10:30:21,119 - INFO - Step 5 result: {'type': 'Program', 'name': 'get_graphs', 'range': [3097, 3261], 'children': [{'type': 'FunctionDecl', 'name': 'get_graphs', 'range': [3097, 3261], 'children': [{'type': 'AsyncKeyword', 'name': 'async', 'range': [3097, 3102], 'children': []}, {'type': 'DefKeyword', 'name': 'def', 'range': [3098, 3101], 'children': []}, {'type': 'FunctionName', 'name': 'get_graphs', 'range': [3099, 3108], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [3100, 3121], 'children': [{'type': 'Parameter', 'name': 'user_id', 'range': [3102, 3105], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [3104, 3107], 'children': []}]}, {'type': 'Parameter', 'name': 'filter_by', 'range': [3107, 3119], 'children': [{'type': 'TypeAnnotation', 'name': 'Literal', 'range': [3109, 3114], 'children': []}, {'type': 'DefaultValue', 'name': '"active"', 'range': [3118, 3121], 'children': []}]}]}, {'type': 'ReturnType', 'name': 'list[GraphModel]', 'range': [3124, 3127], 'children': []}, {'type': 'FunctionBody', 'name': 'body', 'range': [3129, 3261], 'children': [{'type': 'Docstring', 'name': 'docstring', 'range': [3130, 3132], 'children': []}, {'type': 'VariableDecl', 'name': 'where_clause', 'range': [3134, 3142], 'children': [{'type': 'TypeAnnotation', 'name': 'AgentGraphWhereInput', 'range': [3136, 3141], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [3137, 3142], 'children': []}]}, {'type': 'IfStatement', 'name': 'if', 'range': [3145, 3158], 'children': [{'type': 'Condition', 'name': 'filter_by == "active"', 'range': [3146, 3149], 'children': []}, {'type': 'Body', 'name': 'body', 'range': [3151, 3158], 'children': [{'type': 'Assignment', 'name': 'where_clause["isActive"] = True', 'range': [3152, 3157], 'children': []}]}]}, {'type': 'ElifStatement', 'name': 'elif', 'range': [3159, 3172], 'children': [{'type': 'Condition', 'name': 'filter_by == "template"', 'range': [3160, 3163], 'children': []}, {'type': 'Body', 'name': 'body', 'range': [3165, 3172], 'children': [{'type': 'Assignment', 'name': 'where_clause["isTemplate"] = True', 'range': [3166, 3171], 'children': []}]}]}, {'type': 'VariableDecl', 'name': 'graphs', 'range': [3174, 3184], 'children': [{'type': 'Assignment', 'name': '=', 'range': [3175, 3184], 'children': []}]}, {'type': 'AwaitExpression', 'name': 'await', 'range': [3176, 3184], 'children': [{'type': 'CallExpression', 'name': 'AgentGraph.prisma().find_many', 'range': [3177, 3184], 'children': [{'type': 'Arguments', 'name': 'arguments', 'range': [3180, 3184], 'children': []}]}]}, {'type': 'VariableDecl', 'name': 'graph_models', 'range': [3215, 3219], 'children': [{'type': 'Assignment', 'name': '=', 'range': [3216, 3219], 'children': []}]}, {'type': 'ForStatement', 'name': 'for', 'range': [3220, 3256], 'children': [{'type': 'Initialization', 'name': 'graph in graphs', 'range': [3221, 3224], 'children': []}, {'type': 'Body', 'name': 'body', 'range': [3225, 3256], 'children': [{'type': 'TryStatement', 'name': 'try', 'range': [3226, 3256], 'children': [{'type': 'Body', 'name': 'body', 'range': [3228, 3240], 'children': [{'type': 'CallExpression', 'name': 'graph_models.append', 'range': [3229, 3240], 'children': [{'type': 'Arguments', 'name': 'arguments', 'range': [3232, 3240], 'children': []}]}]}, {'type': 'CatchClause', 'name': 'except', 'range': [3241, 3256], 'children': [{'type': 'Parameter', 'name': 'Exception as e', 'range': [3242, 3245], 'children': []}, {'type': 'Body', 'name': 'body', 'range': [3246, 3256], 'children': [{'type': 'CallExpression', 'name': 'logger.error', 'range': [3247, 3254], 'children': [{'type': 'Arguments', 'name': 'arguments', 'range': [3250, 3254], 'children': []}]}, {'type': 'ContinueStatement', 'name': 'continue', 'range': [3255, 3256], 'children': []}]}]}]}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [3258, 3261], 'children': [{'type': 'Argument', 'name': 'graph_models', 'range': [3259, 3261], 'children': []}]}]}]}]}
2025-01-08 10:30:21,119 - INFO - Completed main AST analysis flow
2025-01-08 10:30:21,121 - INFO - Successfully processed chunk
2025-01-08 10:30:21,582 - INFO - Step 4 result: {'type': 'Program', 'name': 'set_graph_active_version', 'range': [3557, 3713], 'children': [{'type': 'FunctionDecl', 'name': 'set_graph_active_version', 'range': [3557, 3576], 'children': [{'type': 'Keyword', 'name': 'async', 'range': [3557, 3561], 'children': []}, {'type': 'Keyword', 'name': 'def', 'range': [3558, 3561], 'children': []}, {'type': 'Identifier', 'name': 'set_graph_active_version', 'range': [3559, 3583], 'children': []}, {'type': 'ParameterList', 'name': '', 'range': [3560, 3572], 'children': [{'type': 'Parameter', 'name': 'graph_id', 'range': [3561, 3567], 'children': [{'type': 'Identifier', 'name': 'graph_id', 'range': [3561, 3567], 'children': []}, {'type': 'TypeAnnotation', 'name': 'str', 'range': [3562, 3567], 'children': []}]}, {'type': 'Parameter', 'name': 'version', 'range': [3565, 3571], 'children': [{'type': 'Identifier', 'name': 'version', 'range': [3565, 3571], 'children': []}, {'type': 'TypeAnnotation', 'name': 'int', 'range': [3566, 3571], 'children': []}]}, {'type': 'Parameter', 'name': 'user_id', 'range': [3569, 3575], 'children': [{'type': 'Identifier', 'name': 'user_id', 'range': [3569, 3575], 'children': []}, {'type': 'TypeAnnotation', 'name': 'str', 'range': [3570, 3575], 'children': []}]}]}, {'type': 'ReturnType', 'name': 'None', 'range': [3573, 3576], 'children': []}]}, {'type': 'Comment', 'name': '# Activate the requested version if it exists and is owned by the user.', 'range': [3578, 3592], 'children': []}, {'type': 'VariableDecl', 'name': 'updated_count', 'range': [3594, 3603], 'children': [{'type': 'Identifier', 'name': 'updated_count', 'range': [3594, 3603], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [3595, 3603], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [3596, 3603], 'children': [{'type': 'CallExpression', 'name': 'AgentGraph.prisma().update_many', 'range': [3597, 3637], 'children': [{'type': 'MemberExpression', 'name': 'AgentGraph.prisma', 'range': [3597, 3600], 'children': [{'type': 'Identifier', 'name': 'AgentGraph', 'range': [3597, 3600], 'children': []}, {'type': 'Identifier', 'name': 'prisma', 'range': [3598, 3600], 'children': []}]}, {'type': 'CallExpression', 'name': 'update_many', 'range': [3603, 3637], 'children': [{'type': 'ObjectExpression', 'name': 'data', 'range': [3608, 3612], 'children': [{'type': 'Property', 'name': 'isActive', 'range': [3609, 3611], 'children': [{'type': 'Literal', 'name': 'True', 'range': [3610, 3611], 'children': []}]}]}, {'type': 'ObjectExpression', 'name': 'where', 'range': [3617, 3634], 'children': [{'type': 'Property', 'name': 'id', 'range': [3619, 3621], 'children': [{'type': 'Identifier', 'name': 'graph_id', 'range': [3620, 3621], 'children': []}]}, {'type': 'Property', 'name': 'version', 'range': [3624, 3626], 'children': [{'type': 'Identifier', 'name': 'version', 'range': [3625, 3626], 'children': []}]}, {'type': 'Property', 'name': 'userId', 'range': [3629, 3631], 'children': [{'type': 'Identifier', 'name': 'user_id', 'range': [3630, 3631], 'children': []}]}]}]}]}]}]}]}, {'type': 'IfStatement', 'name': 'if', 'range': [3639, 3652], 'children': [{'type': 'BinaryExpression', 'name': '==', 'range': [3641, 3643], 'children': [{'type': 'Identifier', 'name': 'updated_count', 'range': [3640, 3643], 'children': []}, {'type': 'Literal', 'name': '0', 'range': [3642, 3643], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [3644, 3652], 'children': [{'type': 'ThrowStatement', 'name': 'raise', 'range': [3646, 3651], 'children': [{'type': 'NewExpression', 'name': 'Exception', 'range': [3647, 3651], 'children': [{'type': 'Literal', 'name': 'f"Graph #{graph_id} v{version} not found or not owned by user"', 'range': [3649, 3651], 'children': []}]}]}]}]}, {'type': 'Comment', 'name': '# Deactivate all other versions.', 'range': [3654, 3659], 'children': []}, {'type': 'ExpressionStatement', 'name': 'await', 'range': [3661, 3712], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [3661, 3712], 'children': [{'type': 'CallExpression', 'name': 'AgentGraph.prisma().update_many', 'range': [3662, 3711], 'children': [{'type': 'MemberExpression', 'name': 'AgentGraph.prisma', 'range': [3662, 3665], 'children': [{'type': 'Identifier', 'name': 'AgentGraph', 'range': [3662, 3665], 'children': []}, {'type': 'Identifier', 'name': 'prisma', 'range': [3663, 3665], 'children': []}]}, {'type': 'CallExpression', 'name': 'update_many', 'range': [3668, 3711], 'children': [{'type': 'ObjectExpression', 'name': 'data', 'range': [3673, 3677], 'children': [{'type': 'Property', 'name': 'isActive', 'range': [3674, 3676], 'children': [{'type': 'Literal', 'name': 'False', 'range': [3675, 3676], 'children': []}]}]}, {'type': 'ObjectExpression', 'name': 'where', 'range': [3682, 3708], 'children': [{'type': 'Property', 'name': 'id', 'range': [3684, 3686], 'children': [{'type': 'Identifier', 'name': 'graph_id', 'range': [3685, 3686], 'children': []}]}, {'type': 'Property', 'name': 'version', 'range': [3689, 3695], 'children': [{'type': 'ObjectExpression', 'name': 'not', 'range': [3692, 3694], 'children': [{'type': 'Identifier', 'name': 'version', 'range': [3693, 3694], 'children': []}]}]}, {'type': 'Property', 'name': 'userId', 'range': [3698, 3700], 'children': [{'type': 'Identifier', 'name': 'user_id', 'range': [3699, 3700], 'children': []}]}, {'type': 'Property', 'name': 'isActive', 'range': [3703, 3705], 'children': [{'type': 'Literal', 'name': 'True', 'range': [3704, 3705], 'children': []}]}]}]}]}]}]}]}
2025-01-08 10:30:21,582 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:30:23,841 - ERROR - Failed to parse Step 2 result
2025-01-08 10:30:23,841 - INFO - Starting Step 3: AST simplification
2025-01-08 10:30:30,291 - INFO - Step 5 result: {'type': 'Program', 'name': 'delete_graph', 'range': [3801, 3858], 'children': [{'type': 'FunctionDecl', 'name': 'delete_graph', 'range': [3801, 3858], 'children': [{'type': 'Keyword', 'value': 'async', 'range': [3801, 3801]}, {'type': 'Keyword', 'value': 'def', 'range': [3802, 3802]}, {'type': 'Identifier', 'value': 'delete_graph', 'range': [3803, 3803]}, {'type': 'ParameterList', 'range': [3804, 3812], 'children': [{'type': 'Parameter', 'name': 'graph_id', 'range': [3805, 3807], 'children': [{'type': 'Identifier', 'value': 'graph_id', 'range': [3805, 3805]}, {'type': 'TypeAnnotation', 'value': 'str', 'range': [3807, 3807]}]}, {'type': 'Parameter', 'name': 'user_id', 'range': [3809, 3811], 'children': [{'type': 'Identifier', 'value': 'user_id', 'range': [3809, 3809]}, {'type': 'TypeAnnotation', 'value': 'str', 'range': [3811, 3811]}]}]}, {'type': 'ReturnType', 'range': [3813, 3815], 'children': [{'type': 'TypeAnnotation', 'value': 'int', 'range': [3815, 3815]}]}, {'type': 'BlockStatement', 'range': [3817, 3858], 'children': [{'type': 'VariableDeclaration', 'name': 'entries_count', 'range': [3818, 3842], 'children': [{'type': 'Identifier', 'value': 'entries_count', 'range': [3818, 3818]}, {'type': 'AwaitExpression', 'range': [3820, 3842], 'children': [{'type': 'Keyword', 'value': 'await', 'range': [3820, 3820]}, {'type': 'CallExpression', 'range': [3821, 3842], 'children': [{'type': 'MemberExpression', 'range': [3821, 3827], 'children': [{'type': 'Identifier', 'value': 'AgentGraph', 'range': [3821, 3821]}, {'type': 'Identifier', 'value': 'prisma', 'range': [3823, 3823]}, {'type': 'Identifier', 'value': 'delete_many', 'range': [3827, 3827]}]}, {'type': 'ArgumentList', 'range': [3828, 3842], 'children': [{'type': 'ObjectExpression', 'range': [3832, 3840], 'children': [{'type': 'Property', 'name': 'id', 'range': [3833, 3835], 'children': [{'type': 'Literal', 'value': '"id"', 'range': [3833, 3833]}, {'type': 'Identifier', 'value': 'graph_id', 'range': [3835, 3835]}]}, {'type': 'Property', 'name': 'userId', 'range': [3837, 3839], 'children': [{'type': 'Literal', 'value': '"userId"', 'range': [3837, 3837]}, {'type': 'Identifier', 'value': 'user_id', 'range': [3839, 3839]}]}]}]}]}]}]}, {'type': 'IfStatement', 'range': [3844, 3855], 'children': [{'type': 'Keyword', 'value': 'if', 'range': [3844, 3844]}, {'type': 'Identifier', 'value': 'entries_count', 'range': [3845, 3845]}, {'type': 'BlockStatement', 'range': [3847, 3855], 'children': [{'type': 'ExpressionStatement', 'range': [3848, 3854], 'children': [{'type': 'CallExpression', 'range': [3848, 3854], 'children': [{'type': 'MemberExpression', 'range': [3848, 3850], 'children': [{'type': 'Identifier', 'value': 'logger', 'range': [3848, 3848]}, {'type': 'Identifier', 'value': 'info', 'range': [3850, 3850]}]}, {'type': 'ArgumentList', 'range': [3851, 3854], 'children': [{'type': 'Literal', 'value': 'f"Deleted {entries_count} graph entries for Graph #{graph_id}"', 'range': [3852, 3853]}]}]}]}]}]}, {'type': 'ReturnStatement', 'range': [3856, 3858], 'children': [{'type': 'Keyword', 'value': 'return', 'range': [3856, 3856]}, {'type': 'Identifier', 'value': 'entries_count', 'range': [3857, 3857]}]}]}]}]}
2025-01-08 10:30:30,291 - INFO - Completed main AST analysis flow
2025-01-08 10:30:30,293 - INFO - Successfully processed chunk
2025-01-08 10:30:35,552 - ERROR - Failed to parse Step 2 result
2025-01-08 10:30:35,552 - INFO - Starting Step 3: AST simplification
2025-01-08 10:30:36,822 - INFO - Step 3 result: {'type': 'Program', 'name': 'NodeModel', 'range': [335, 661], 'children': [{'type': 'ClassDeclaration', 'name': 'NodeModel', 'range': [335, 359], 'children': [{'type': 'PropertyDeclaration', 'name': 'graph_id', 'range': [342, 344], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [344, 344], 'children': []}]}, {'type': 'PropertyDeclaration', 'name': 'graph_version', 'range': [346, 348], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [348, 348], 'children': []}]}, {'type': 'PropertyDeclaration', 'name': 'webhook', 'range': [351, 358], 'children': [{'type': 'TypeAnnotation', 'name': 'Optional[Webhook]', 'range': [353, 356], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [357, 358], 'children': [{'type': 'Literal', 'name': 'None', 'range': [358, 358], 'children': []}]}]}]}, {'type': 'FunctionDeclaration', 'name': 'from_db', 'range': [364, 537], 'children': [{'type': 'Parameter', 'name': 'node', 'range': [367, 369], 'children': [{'type': 'TypeAnnotation', 'name': 'AgentNode', 'range': [369, 369], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [372, 537], 'children': [{'type': 'IfStatement', 'name': '', 'range': [373, 386], 'children': [{'type': 'UnaryExpression', 'name': 'not', 'range': [374, 375], 'children': [{'type': 'MemberExpression', 'name': 'node.AgentBlock', 'range': [375, 377], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [379, 386], 'children': [{'type': 'ThrowStatement', 'name': 'raise', 'range': [380, 385], 'children': [{'type': 'NewExpression', 'name': 'ValueError', 'range': [381, 385], 'children': [{'type': 'TemplateLiteral', 'name': 'f"Invalid node {node.id}, invalid AgentBlock."', 'range': [383, 384], 'children': []}]}]}]}]}, {'type': 'VariableDeclaration', 'name': 'obj', 'range': [387, 489], 'children': [{'type': 'Assignment', 'name': '=', 'range': [388, 389], 'children': [{'type': 'NewExpression', 'name': 'NodeModel', 'range': [389, 489], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [390, 489], 'children': [{'type': 'AssignmentExpression', 'name': 'id=', 'range': [392, 397], 'children': [{'type': 'MemberExpression', 'name': 'node.id', 'range': [394, 396], 'children': []}]}, {'type': 'AssignmentExpression', 'name': 'block_id=', 'range': [399, 406], 'children': [{'type': 'MemberExpression', 'name': 'node.AgentBlock.id', 'range': [401, 405], 'children': []}]}, {'type': 'AssignmentExpression', 'name': 'input_default=', 'range': [408, 426], 'children': [{'type': 'CallExpression', 'name': 'json.loads', 'range': [410, 426], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [413, 426], 'children': [{'type': 'MemberExpression', 'name': 'node.constantInput', 'range': [414, 416], 'children': []}, {'type': 'AssignmentExpression', 'name': 'target_type=', 'range': [418, 425], 'children': [{'type': 'TypeAnnotation', 'name': 'dict[str, Any]', 'range': [420, 425], 'children': []}]}]}]}]}, {'type': 'AssignmentExpression', 'name': 'metadata=', 'range': [429, 447], 'children': [{'type': 'CallExpression', 'name': 'json.loads', 'range': [431, 447], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [434, 447], 'children': [{'type': 'MemberExpression', 'name': 'node.metadata', 'range': [435, 437], 'children': []}, {'type': 'AssignmentExpression', 'name': 'target_type=', 'range': [439, 446], 'children': [{'type': 'TypeAnnotation', 'name': 'dict[str, Any]', 'range': [441, 446], 'children': []}]}]}]}]}, {'type': 'AssignmentExpression', 'name': 'graph_id=', 'range': [450, 455], 'children': [{'type': 'MemberExpression', 'name': 'node.agentGraphId', 'range': [452, 454], 'children': []}]}, {'type': 'AssignmentExpression', 'name': 'graph_version=', 'range': [457, 462], 'children': [{'type': 'MemberExpression', 'name': 'node.agentGraphVersion', 'range': [459, 461], 'children': []}]}, {'type': 'AssignmentExpression', 'name': 'webhook_id=', 'range': [464, 469], 'children': [{'type': 'MemberExpression', 'name': 'node.webhookId', 'range': [466, 468], 'children': []}]}, {'type': 'AssignmentExpression', 'name': 'webhook=', 'range': [471, 487], 'children': [{'type': 'ConditionalExpression', 'name': 'if', 'range': [473, 486], 'children': [{'type': 'CallExpression', 'name': 'Webhook.from_db', 'range': [473, 480], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [476, 480], 'children': [{'type': 'MemberExpression', 'name': 'node.Webhook', 'range': [477, 479], 'children': []}]}]}, {'type': 'Literal', 'name': 'None', 'range': [486, 486], 'children': []}]}]}]}]}]}]}, {'type': 'AssignmentExpression', 'name': 'obj.input_links=', 'range': [491, 512], 'children': [{'type': 'ArrayExpression', 'name': '', 'range': [495, 511], 'children': [{'type': 'CallExpression', 'name': 'Link.from_db', 'range': [496, 501], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [498, 501], 'children': [{'type': 'Identifier', 'name': 'link', 'range': [500, 500], 'children': []}]}]}]}]}, {'type': 'AssignmentExpression', 'name': 'obj.output_links=', 'range': [513, 534], 'children': [{'type': 'ArrayExpression', 'name': '', 'range': [517, 533], 'children': [{'type': 'CallExpression', 'name': 'Link.from_db', 'range': [518, 523], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [520, 523], 'children': [{'type': 'Identifier', 'name': 'link', 'range': [522, 522], 'children': []}]}]}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [535, 536], 'children': [{'type': 'Identifier', 'name': 'obj', 'range': [536, 536], 'children': []}]}]}]}, {'type': 'FunctionDeclaration', 'name': 'is_triggered_by_event_type', 'range': [539, 659], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [542, 542], 'children': []}, {'type': 'Parameter', 'name': 'event_type', 'range': [544, 546], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [546, 546], 'children': []}]}, {'type': 'TypeAnnotation', 'name': '-> bool', 'range': [548, 550], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [552, 659], 'children': [{'type': 'IfStatement', 'name': '', 'range': [553, 574], 'children': [{'type': 'UnaryExpression', 'name': 'not', 'range': [554, 555], 'children': [{'type': 'AssignmentExpression', 'name': 'block=', 'range': [556, 565], 'children': [{'type': 'CallExpression', 'name': 'get_block', 'range': [559, 564], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [561, 564], 'children': [{'type': 'MemberExpression', 'name': 'self.block_id', 'range': [562, 563], 'children': []}]}]}]}]}, {'type': 'BlockStatement', 'name': '', 'range': [567, 574], 'children': [{'type': 'ThrowStatement', 'name': 'raise', 'range': [568, 573], 'children': [{'type': 'NewExpression', 'name': 'ValueError', 'range': [569, 573], 'children': [{'type': 'TemplateLiteral', 'name': 'f"Block #{self.block_id} not found for node #{self.id}"', 'range': [571, 572], 'children': []}]}]}]}]}, {'type': 'IfStatement', 'name': '', 'range': [575, 587], 'children': [{'type': 'UnaryExpression', 'name': 'not', 'range': [576, 577], 'children': [{'type': 'MemberExpression', 'name': 'block.webhook_config', 'range': [577, 579], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [581, 587], 'children': [{'type': 'ThrowStatement', 'name': 'raise', 'range': [582, 586], 'children': [{'type': 'NewExpression', 'name': 'TypeError', 'range': [583, 586], 'children': [{'type': 'Literal', 'name': '"This method can\'t be used on non-webhook blocks"', 'range': [585, 585], 'children': []}]}]}]}]}, {'type': 'IfStatement', 'name': '', 'range': [588, 599], 'children': [{'type': 'UnaryExpression', 'name': 'not', 'range': [589, 590], 'children': [{'type': 'MemberExpression', 'name': 'block.webhook_config.event_filter_input', 'range': [590, 594], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [596, 599], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [597, 598], 'children': [{'type': 'Literal', 'name': 'True', 'range': [598, 598], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'event_filter', 'range': [600, 614], 'children': [{'type': 'Assignment', 'name': '=', 'range': [601, 602], 'children': [{'type': 'CallExpression', 'name': 'self.input_default.get', 'range': [602, 613], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [606, 613], 'children': [{'type': 'MemberExpression', 'name': 'block.webhook_config.event_filter_input', 'range': [608, 612], 'children': []}]}]}]}]}, {'type': 'IfStatement', 'name': '', 'range': [615, 626], 'children': [{'type': 'UnaryExpression', 'name': 'not', 'range': [616, 617], 'children': [{'type': 'Identifier', 'name': 'event_filter', 'range': [617, 617], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [619, 626], 'children': [{'type': 'ThrowStatement', 'name': 'raise', 'range': [620, 625], 'children': [{'type': 'NewExpression', 'name': 'ValueError', 'range': [621, 625], 'children': [{'type': 'TemplateLiteral', 'name': 'f"Event filter is not configured on node #{self.id}"', 'range': [623, 624], 'children': []}]}]}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [627, 658], 'children': [{'type': 'BinaryExpression', 'name': 'in', 'range': [628, 630], 'children': [{'type': 'Identifier', 'name': 'event_type', 'range': [628, 628], 'children': []}, {'type': 'ArrayExpression', 'name': '', 'range': [630, 658], 'children': [{'type': 'CallExpression', 'name': 'block.webhook_config.event_format.format', 'range': [632, 644], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [638, 644], 'children': [{'type': 'AssignmentExpression', 'name': 'event=', 'range': [640, 642], 'children': [{'type': 'Identifier', 'name': 'k', 'range': [642, 642], 'children': []}]}]}]}]}]}]}]}]}]}
2025-01-08 10:30:36,822 - INFO - Starting Step 4: AST normalization
2025-01-08 10:30:39,788 - INFO - Step 3 result: {'type': 'Program', 'name': '__create_graph', 'range': [3936, 4192], 'children': [{'type': 'FunctionDeclaration', 'name': '__create_graph', 'range': [3936, 4192], 'children': [{'type': 'FunctionSignature', 'name': '__create_graph', 'range': [3936, 3950], 'children': [{'type': 'Keyword', 'name': 'async', 'range': [3936, 3941], 'children': []}, {'type': 'Keyword', 'name': 'def', 'range': [3937, 3940], 'children': []}, {'type': 'Identifier', 'name': '__create_graph', 'range': [3938, 3950], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [3939, 3949], 'children': [{'type': 'Parameter', 'name': 'tx', 'range': [3940, 3942], 'children': []}, {'type': 'Parameter', 'name': 'graph', 'range': [3942, 3948], 'children': [{'type': 'TypeAnnotation', 'name': 'Graph', 'range': [3944, 3948], 'children': []}]}, {'type': 'Parameter', 'name': 'user_id', 'range': [3946, 3952], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [3948, 3952], 'children': []}]}]}]}, {'type': 'BlockStatement', 'name': 'body', 'range': [3951, 4192], 'children': [{'type': 'ExpressionStatement', 'name': 'await AgentGraph.prisma(tx).create(data)', 'range': [3952, 4017], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [3952, 3957], 'children': [{'type': 'CallExpression', 'name': 'AgentGraph.prisma(tx).create', 'range': [3953, 4016], 'children': [{'type': 'MemberExpression', 'name': 'AgentGraph.prisma', 'range': [3953, 3965], 'children': [{'type': 'Identifier', 'name': 'AgentGraph', 'range': [3953, 3962], 'children': []}, {'type': 'Identifier', 'name': 'prisma', 'range': [3963, 3969], 'children': []}]}, {'type': 'CallExpression', 'name': 'prisma(tx)', 'range': [3966, 3974], 'children': [{'type': 'Identifier', 'name': 'tx', 'range': [3967, 3969], 'children': []}]}, {'type': 'MemberExpression', 'name': 'create', 'range': [3975, 3981], 'children': []}, {'type': 'ObjectExpression', 'name': 'data', 'range': [3982, 4014], 'children': [{'type': 'Property', 'name': 'id', 'range': [3987, 3993], 'children': [{'type': 'Identifier', 'name': 'graph.id', 'range': [3989, 3993], 'children': []}]}, {'type': 'Property', 'name': 'version', 'range': [3994, 4000], 'children': [{'type': 'Identifier', 'name': 'graph.version', 'range': [3996, 4000], 'children': []}]}, {'type': 'Property', 'name': 'name', 'range': [4001, 4007], 'children': [{'type': 'Identifier', 'name': 'graph.name', 'range': [4003, 4007], 'children': []}]}, {'type': 'Property', 'name': 'description', 'range': [4008, 4014], 'children': [{'type': 'Identifier', 'name': 'graph.description', 'range': [4010, 4014], 'children': []}]}, {'type': 'Property', 'name': 'isTemplate', 'range': [4015, 4021], 'children': [{'type': 'Identifier', 'name': 'graph.is_template', 'range': [4017, 4021], 'children': []}]}, {'type': 'Property', 'name': 'isActive', 'range': [4022, 4028], 'children': [{'type': 'Identifier', 'name': 'graph.is_active', 'range': [4024, 4028], 'children': []}]}, {'type': 'Property', 'name': 'userId', 'range': [4029, 4035], 'children': [{'type': 'Identifier', 'name': 'user_id', 'range': [4031, 4035], 'children': []}]}]}]}]}]}, {'type': 'ExpressionStatement', 'name': 'await asyncio.gather(*[AgentNode.prisma(tx).create({...}) for node in graph.nodes])', 'range': [4019, 4106], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [4019, 4024], 'children': [{'type': 'CallExpression', 'name': 'asyncio.gather', 'range': [4025, 4105], 'children': [{'type': 'MemberExpression', 'name': 'asyncio.gather', 'range': [4025, 4039], 'children': [{'type': 'Identifier', 'name': 'asyncio', 'range': [4025, 4031], 'children': []}, {'type': 'Identifier', 'name': 'gather', 'range': [4032, 4038], 'children': []}]}, {'type': 'SpreadElement', 'name': '*', 'range': [4040, 4041], 'children': [{'type': 'ArrayExpression', 'name': '[...]', 'range': [4042, 4103], 'children': [{'type': 'CallExpression', 'name': 'AgentNode.prisma(tx).create', 'range': [4044, 4094], 'children': [{'type': 'MemberExpression', 'name': 'AgentNode.prisma', 'range': [4044, 4056], 'children': [{'type': 'Identifier', 'name': 'AgentNode', 'range': [4044, 4052], 'children': []}, {'type': 'Identifier', 'name': 'prisma', 'range': [4053, 4059], 'children': []}]}, {'type': 'CallExpression', 'name': 'prisma(tx)', 'range': [4060, 4068], 'children': [{'type': 'Identifier', 'name': 'tx', 'range': [4061, 4063], 'children': []}]}, {'type': 'MemberExpression', 'name': 'create', 'range': [4069, 4075], 'children': []}, {'type': 'ObjectExpression', 'name': '{...}', 'range': [4076, 4092], 'children': [{'type': 'Property', 'name': 'id', 'range': [4080, 4086], 'children': [{'type': 'Identifier', 'name': 'node.id', 'range': [4082, 4086], 'children': []}]}, {'type': 'Property', 'name': 'agentBlockId', 'range': [4087, 4093], 'children': [{'type': 'Identifier', 'name': 'node.block_id', 'range': [4089, 4093], 'children': []}]}, {'type': 'Property', 'name': 'agentGraphId', 'range': [4094, 4100], 'children': [{'type': 'Identifier', 'name': 'graph.id', 'range': [4096, 4100], 'children': []}]}, {'type': 'Property', 'name': 'agentGraphVersion', 'range': [4101, 4107], 'children': [{'type': 'Identifier', 'name': 'graph.version', 'range': [4103, 4107], 'children': []}]}, {'type': 'Property', 'name': 'constantInput', 'range': [4108, 4114], 'children': [{'type': 'CallExpression', 'name': 'json.dumps(node.input_default)', 'range': [4110, 4126], 'children': [{'type': 'MemberExpression', 'name': 'json.dumps', 'range': [4110, 4119], 'children': [{'type': 'Identifier', 'name': 'json', 'range': [4110, 4114], 'children': []}, {'type': 'Identifier', 'name': 'dumps', 'range': [4115, 4119], 'children': []}]}, {'type': 'CallExpression', 'name': 'node.input_default', 'range': [4120, 4126], 'children': [{'type': 'Identifier', 'name': 'node', 'range': [4120, 4124], 'children': []}, {'type': 'Identifier', 'name': 'input_default', 'range': [4125, 4126], 'children': []}]}]}]}, {'type': 'Property', 'name': 'metadata', 'range': [4127, 4133], 'children': [{'type': 'CallExpression', 'name': 'json.dumps(node.metadata)', 'range': [4129, 4145], 'children': [{'type': 'MemberExpression', 'name': 'json.dumps', 'range': [4129, 4138], 'children': [{'type': 'Identifier', 'name': 'json', 'range': [4129, 4133], 'children': []}, {'type': 'Identifier', 'name': 'dumps', 'range': [4134, 4138], 'children': []}]}, {'type': 'CallExpression', 'name': 'node.metadata', 'range': [4139, 4145], 'children': [{'type': 'Identifier', 'name': 'node', 'range': [4139, 4143], 'children': []}, {'type': 'Identifier', 'name': 'metadata', 'range': [4144, 4145], 'children': []}]}]}]}]}]}]}]}]}]}]}, {'type': 'ExpressionStatement', 'name': 'await asyncio.gather(*[AgentNodeLink.prisma(tx).create({...}) for link in graph.links])', 'range': [4108, 4190], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [4108, 4113], 'children': [{'type': 'CallExpression', 'name': 'asyncio.gather', 'range': [4114, 4189], 'children': [{'type': 'MemberExpression', 'name': 'asyncio.gather', 'range': [4114, 4128], 'children': [{'type': 'Identifier', 'name': 'asyncio', 'range': [4114, 4120], 'children': []}, {'type': 'Identifier', 'name': 'gather', 'range': [4121, 4127], 'children': []}]}, {'type': 'SpreadElement', 'name': '*', 'range': [4129, 4130], 'children': [{'type': 'ArrayExpression', 'name': '[...]', 'range': [4131, 4187], 'children': [{'type': 'CallExpression', 'name': 'AgentNodeLink.prisma(tx).create', 'range': [4133, 4178], 'children': [{'type': 'MemberExpression', 'name': 'AgentNodeLink.prisma', 'range': [4133, 4145], 'children': [{'type': 'Identifier', 'name': 'AgentNodeLink', 'range': [4133, 4145], 'children': []}, {'type': 'Identifier', 'name': 'prisma', 'range': [4146, 4152], 'children': []}]}, {'type': 'CallExpression', 'name': 'prisma(tx)', 'range': [4153, 4161], 'children': [{'type': 'Identifier', 'name': 'tx', 'range': [4154, 4156], 'children': []}]}, {'type': 'MemberExpression', 'name': 'create', 'range': [4162, 4168], 'children': []}, {'type': 'ObjectExpression', 'name': '{...}', 'range': [4169, 4176], 'children': [{'type': 'Property', 'name': 'id', 'range': [4170, 4176], 'children': [{'type': 'CallExpression', 'name': 'str(uuid.uuid4())', 'range': [4172, 4184], 'children': [{'type': 'CallExpression', 'name': 'uuid.uuid4()', 'range': [4176, 4184], 'children': [{'type': 'MemberExpression', 'name': 'uuid.uuid4', 'range': [4176, 4184], 'children': [{'type': 'Identifier', 'name': 'uuid', 'range': [4176, 4180], 'children': []}, {'type': 'Identifier', 'name': 'uuid4', 'range': [4181, 4185], 'children': []}]}]}]}]}, {'type': 'Property', 'name': 'sourceName', 'range': [4185, 4191], 'children': [{'type': 'Identifier', 'name': 'link.source_name', 'range': [4187, 4191], 'children': []}]}, {'type': 'Property', 'name': 'sinkName', 'range': [4192, 4198], 'children': [{'type': 'Identifier', 'name': 'link.sink_name', 'range': [4194, 4198], 'children': []}]}, {'type': 'Property', 'name': 'agentNodeSourceId', 'range': [4199, 4205], 'children': [{'type': 'Identifier', 'name': 'link.source_id', 'range': [4201, 4205], 'children': []}]}, {'type': 'Property', 'name': 'agentNodeSinkId', 'range': [4206, 4212], 'children': [{'type': 'Identifier', 'name': 'link.sink_id', 'range': [4208, 4212], 'children': []}]}, {'type': 'Property', 'name': 'isStatic', 'range': [4213, 4219], 'children': [{'type': 'Identifier', 'name': 'link.is_static', 'range': [4215, 4219], 'children': []}]}]}]}]}]}]}]}]}]}]}]}
2025-01-08 10:30:39,789 - INFO - Starting Step 4: AST normalization
2025-01-08 10:30:40,307 - INFO - Step 5 result: {'type': 'Program', 'name': '', 'range': [0, 143], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 2], 'children': [{'type': 'ImportClause', 'name': 'asyncio', 'range': [0, 1], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [3, 5], 'children': [{'type': 'ImportClause', 'name': 'logging', 'range': [3, 4], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [6, 8], 'children': [{'type': 'ImportClause', 'name': 'uuid', 'range': [6, 7], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [9, 13], 'children': [{'type': 'ImportClause', 'name': 'defaultdict', 'range': [11, 12], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [14, 20], 'children': [{'type': 'ImportClause', 'name': 'datetime', 'range': [16, 17], 'children': []}, {'type': 'ImportClause', 'name': 'timezone', 'range': [19, 20], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [21, 31], 'children': [{'type': 'ImportClause', 'name': 'Any', 'range': [23, 24], 'children': []}, {'type': 'ImportClause', 'name': 'Literal', 'range': [26, 27], 'children': []}, {'type': 'ImportClause', 'name': 'Optional', 'range': [28, 29], 'children': []}, {'type': 'ImportClause', 'name': 'Type', 'range': [30, 31], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [33, 35], 'children': [{'type': 'ImportClause', 'name': 'prisma', 'range': [33, 34], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [36, 48], 'children': [{'type': 'ImportClause', 'name': 'AgentGraph', 'range': [40, 41], 'children': []}, {'type': 'ImportClause', 'name': 'AgentGraphExecution', 'range': [43, 44], 'children': []}, {'type': 'ImportClause', 'name': 'AgentNode', 'range': [45, 46], 'children': []}, {'type': 'ImportClause', 'name': 'AgentNodeLink', 'range': [47, 48], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [49, 55], 'children': [{'type': 'ImportClause', 'name': 'AgentGraphWhereInput', 'range': [53, 54], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [56, 62], 'children': [{'type': 'ImportClause', 'name': 'computed_field', 'range': [60, 61], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [64, 72], 'children': [{'type': 'ImportClause', 'name': 'AgentExecutorBlock', 'range': [70, 71], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [73, 83], 'children': [{'type': 'ImportClause', 'name': 'AgentInputBlock', 'range': [79, 80], 'children': []}, {'type': 'ImportClause', 'name': 'AgentOutputBlock', 'range': [82, 83], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [84, 90], 'children': [{'type': 'ImportClause', 'name': 'json', 'range': [88, 89], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [92, 103], 'children': [{'type': 'ImportClause', 'name': 'BlockInput', 'range': [95, 96], 'children': []}, {'type': 'ImportClause', 'name': 'BlockType', 'range': [98, 99], 'children': []}, {'type': 'ImportClause', 'name': 'get_block', 'range': [100, 101], 'children': []}, {'type': 'ImportClause', 'name': 'get_blocks', 'range': [102, 103], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [104, 111], 'children': [{'type': 'ImportClause', 'name': 'BaseDbModel', 'range': [107, 108], 'children': []}, {'type': 'ImportClause', 'name': 'transaction', 'range': [110, 111], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [112, 117], 'children': [{'type': 'ImportClause', 'name': 'ExecutionStatus', 'range': [115, 116], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [118, 125], 'children': [{'type': 'ImportClause', 'name': 'AGENT_GRAPH_INCLUDE', 'range': [121, 122], 'children': []}, {'type': 'ImportClause', 'name': 'AGENT_NODE_INCLUDE', 'range': [124, 125], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [126, 131], 'children': [{'type': 'ImportClause', 'name': 'Webhook', 'range': [129, 130], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'logger', 'range': [133, 141], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [134, 141], 'children': [{'type': 'CallExpression', 'name': 'getLogger', 'range': [135, 140], 'children': [{'type': 'Identifier', 'name': '__name__', 'range': [138, 139], 'children': []}]}]}]}]}
2025-01-08 10:30:40,308 - INFO - Completed main AST analysis flow
2025-01-08 10:30:40,310 - INFO - Successfully processed chunk
2025-01-08 10:30:58,314 - INFO - Step 5 result: {'type': 'Program', 'name': 'get_graph', 'range': [3383, 3556], 'children': [{'type': 'FunctionDecl', 'name': 'get_graph', 'range': [3383, 3556], 'children': [{'type': 'AsyncKeyword', 'name': 'async', 'range': [3383, 3387], 'children': []}, {'type': 'DefKeyword', 'name': 'def', 'range': [3384, 3387], 'children': []}, {'type': 'FunctionName', 'name': 'get_graph', 'range': [3385, 3394], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [3386, 3425], 'children': [{'type': 'Parameter', 'name': 'graph_id', 'range': [3388, 3391], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [3389, 3391], 'children': []}]}, {'type': 'Parameter', 'name': 'version', 'range': [3393, 3399], 'children': [{'type': 'TypeAnnotation', 'name': 'int | None', 'range': [3394, 3399], 'children': []}, {'type': 'DefaultValue', 'name': 'None', 'range': [3398, 3399], 'children': []}]}, {'type': 'Parameter', 'name': 'template', 'range': [3402, 3406], 'children': [{'type': 'TypeAnnotation', 'name': 'bool', 'range': [3403, 3406], 'children': []}, {'type': 'DefaultValue', 'name': 'False', 'range': [3405, 3406], 'children': []}]}, {'type': 'Parameter', 'name': 'user_id', 'range': [3409, 3415], 'children': [{'type': 'TypeAnnotation', 'name': 'str | None', 'range': [3410, 3415], 'children': []}, {'type': 'DefaultValue', 'name': 'None', 'range': [3414, 3415], 'children': []}]}, {'type': 'Parameter', 'name': 'for_export', 'range': [3418, 3422], 'children': [{'type': 'TypeAnnotation', 'name': 'bool', 'range': [3419, 3422], 'children': []}, {'type': 'DefaultValue', 'name': 'False', 'range': [3421, 3422], 'children': []}]}]}, {'type': 'ReturnType', 'name': 'GraphModel | None', 'range': [3426, 3431], 'children': []}, {'type': 'FunctionBody', 'name': 'body', 'range': [3432, 3556], 'children': [{'type': 'Docstring', 'name': 'docstring', 'range': [3433, 3435], 'children': []}, {'type': 'VariableDecl', 'name': 'where_clause', 'range': [3437, 3448], 'children': [{'type': 'TypeAnnotation', 'name': 'AgentGraphWhereInput', 'range': [3438, 3441], 'children': []}, {'type': 'ObjectLiteral', 'name': 'initializer', 'range': [3441, 3448], 'children': [{'type': 'Property', 'name': 'id', 'range': [3443, 3446], 'children': [{'type': 'Identifier', 'name': 'graph_id', 'range': [3445, 3446], 'children': []}]}]}]}, {'type': 'IfStatement', 'name': 'if', 'range': [3450, 3463], 'children': [{'type': 'Condition', 'name': 'version is not None', 'range': [3451, 3455], 'children': []}, {'type': 'Block', 'name': 'then', 'range': [3456, 3463], 'children': [{'type': 'ExpressionStatement', 'name': 'where_clause["version"] = version', 'range': [3457, 3462], 'children': []}]}]}, {'type': 'ElifStatement', 'name': 'elif', 'range': [3464, 3475], 'children': [{'type': 'Condition', 'name': 'not template', 'range': [3465, 3467], 'children': []}, {'type': 'Block', 'name': 'then', 'range': [3468, 3475], 'children': [{'type': 'ExpressionStatement', 'name': 'where_clause["isActive"] = True', 'range': [3469, 3474], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if', 'range': [3491, 3507], 'children': [{'type': 'Condition', 'name': 'user_id is not None and not template', 'range': [3492, 3499], 'children': []}, {'type': 'Block', 'name': 'then', 'range': [3500, 3507], 'children': [{'type': 'ExpressionStatement', 'name': 'where_clause["userId"] = user_id', 'range': [3501, 3506], 'children': []}]}]}, {'type': 'VariableDecl', 'name': 'graph', 'range': [3509, 3541], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [3511, 3541], 'children': [{'type': 'CallExpression', 'name': 'AgentGraph.prisma().find_first', 'range': [3512, 3540], 'children': [{'type': 'Arguments', 'name': 'arguments', 'range': [3519, 3540], 'children': [{'type': 'NamedArgument', 'name': 'where', 'range': [3521, 3524], 'children': [{'type': 'Identifier', 'name': 'where_clause', 'range': [3523, 3524], 'children': []}]}, {'type': 'NamedArgument', 'name': 'include', 'range': [3526, 3529], 'children': [{'type': 'Identifier', 'name': 'AGENT_GRAPH_INCLUDE', 'range': [3528, 3529], 'children': []}]}, {'type': 'NamedArgument', 'name': 'order', 'range': [3531, 3538], 'children': [{'type': 'ObjectLiteral', 'name': 'initializer', 'range': [3533, 3537], 'children': [{'type': 'Property', 'name': 'version', 'range': [3534, 3536], 'children': [{'type': 'StringLiteral', 'name': 'desc', 'range': [3536, 3536], 'children': []}]}]}]}]}]}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [3542, 3555], 'children': [{'type': 'ConditionalExpression', 'name': 'GraphModel.from_db(graph, for_export) if graph else None', 'range': [3543, 3554], 'children': [{'type': 'CallExpression', 'name': 'GraphModel.from_db', 'range': [3543, 3550], 'children': [{'type': 'Arguments', 'name': 'arguments', 'range': [3546, 3550], 'children': [{'type': 'Identifier', 'name': 'graph', 'range': [3547, 3548], 'children': []}, {'type': 'Identifier', 'name': 'for_export', 'range': [3549, 3550], 'children': []}]}]}, {'type': 'Identifier', 'name': 'graph', 'range': [3552, 3553], 'children': []}, {'type': 'NullLiteral', 'name': 'None', 'range': [3554, 3554], 'children': []}]}]}]}]}]}
2025-01-08 10:30:58,314 - INFO - Completed main AST analysis flow
2025-01-08 10:30:58,315 - INFO - Successfully processed chunk
2025-01-08 10:31:06,691 - INFO - Step 5 result: {'type': 'Program', 'name': 'set_graph_active_version', 'range': [3557, 3713], 'children': [{'type': 'FunctionDecl', 'name': 'set_graph_active_version', 'range': [3557, 3576], 'children': [{'type': 'Keyword', 'name': 'async', 'range': [3557, 3561], 'children': []}, {'type': 'Keyword', 'name': 'def', 'range': [3558, 3561], 'children': []}, {'type': 'Identifier', 'name': 'set_graph_active_version', 'range': [3559, 3583], 'children': []}, {'type': 'ParameterList', 'name': '', 'range': [3560, 3572], 'children': [{'type': 'Parameter', 'name': 'graph_id', 'range': [3561, 3567], 'children': [{'type': 'Identifier', 'name': 'graph_id', 'range': [3561, 3567], 'children': []}, {'type': 'TypeAnnotation', 'name': 'str', 'range': [3562, 3567], 'children': []}]}, {'type': 'Parameter', 'name': 'version', 'range': [3565, 3571], 'children': [{'type': 'Identifier', 'name': 'version', 'range': [3565, 3571], 'children': []}, {'type': 'TypeAnnotation', 'name': 'int', 'range': [3566, 3571], 'children': []}]}, {'type': 'Parameter', 'name': 'user_id', 'range': [3569, 3575], 'children': [{'type': 'Identifier', 'name': 'user_id', 'range': [3569, 3575], 'children': []}, {'type': 'TypeAnnotation', 'name': 'str', 'range': [3570, 3575], 'children': []}]}]}, {'type': 'ReturnType', 'name': 'None', 'range': [3573, 3576], 'children': []}]}, {'type': 'Comment', 'name': '# Activate the requested version if it exists and is owned by the user.', 'range': [3578, 3592], 'children': []}, {'type': 'VariableDecl', 'name': 'updated_count', 'range': [3594, 3603], 'children': [{'type': 'Identifier', 'name': 'updated_count', 'range': [3594, 3603], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [3595, 3603], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [3596, 3603], 'children': [{'type': 'CallExpression', 'name': 'AgentGraph.prisma().update_many', 'range': [3597, 3637], 'children': [{'type': 'MemberExpression', 'name': 'AgentGraph.prisma', 'range': [3597, 3600], 'children': [{'type': 'Identifier', 'name': 'AgentGraph', 'range': [3597, 3600], 'children': []}, {'type': 'Identifier', 'name': 'prisma', 'range': [3598, 3600], 'children': []}]}, {'type': 'CallExpression', 'name': 'update_many', 'range': [3603, 3637], 'children': [{'type': 'ObjectExpression', 'name': 'data', 'range': [3608, 3612], 'children': [{'type': 'Property', 'name': 'isActive', 'range': [3609, 3611], 'children': [{'type': 'Literal', 'name': 'True', 'range': [3610, 3611], 'children': []}]}]}, {'type': 'ObjectExpression', 'name': 'where', 'range': [3617, 3634], 'children': [{'type': 'Property', 'name': 'id', 'range': [3619, 3621], 'children': [{'type': 'Identifier', 'name': 'graph_id', 'range': [3620, 3621], 'children': []}]}, {'type': 'Property', 'name': 'version', 'range': [3624, 3626], 'children': [{'type': 'Identifier', 'name': 'version', 'range': [3625, 3626], 'children': []}]}, {'type': 'Property', 'name': 'userId', 'range': [3629, 3631], 'children': [{'type': 'Identifier', 'name': 'user_id', 'range': [3630, 3631], 'children': []}]}]}]}]}]}]}]}, {'type': 'IfStatement', 'name': 'if', 'range': [3639, 3652], 'children': [{'type': 'BinaryExpression', 'name': '==', 'range': [3641, 3643], 'children': [{'type': 'Identifier', 'name': 'updated_count', 'range': [3640, 3643], 'children': []}, {'type': 'Literal', 'name': '0', 'range': [3642, 3643], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [3644, 3652], 'children': [{'type': 'ThrowStatement', 'name': 'raise', 'range': [3646, 3651], 'children': [{'type': 'NewExpression', 'name': 'Exception', 'range': [3647, 3651], 'children': [{'type': 'Literal', 'name': 'f"Graph #{graph_id} v{version} not found or not owned by user"', 'range': [3649, 3651], 'children': []}]}]}]}]}, {'type': 'Comment', 'name': '# Deactivate all other versions.', 'range': [3654, 3659], 'children': []}, {'type': 'ExpressionStatement', 'name': 'await', 'range': [3661, 3712], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [3661, 3712], 'children': [{'type': 'CallExpression', 'name': 'AgentGraph.prisma().update_many', 'range': [3662, 3711], 'children': [{'type': 'MemberExpression', 'name': 'AgentGraph.prisma', 'range': [3662, 3665], 'children': [{'type': 'Identifier', 'name': 'AgentGraph', 'range': [3662, 3665], 'children': []}, {'type': 'Identifier', 'name': 'prisma', 'range': [3663, 3665], 'children': []}]}, {'type': 'CallExpression', 'name': 'update_many', 'range': [3668, 3711], 'children': [{'type': 'ObjectExpression', 'name': 'data', 'range': [3673, 3677], 'children': [{'type': 'Property', 'name': 'isActive', 'range': [3674, 3676], 'children': [{'type': 'Literal', 'name': 'False', 'range': [3675, 3676], 'children': []}]}]}, {'type': 'ObjectExpression', 'name': 'where', 'range': [3682, 3708], 'children': [{'type': 'Property', 'name': 'id', 'range': [3684, 3686], 'children': [{'type': 'Identifier', 'name': 'graph_id', 'range': [3685, 3686], 'children': []}]}, {'type': 'Property', 'name': 'version', 'range': [3689, 3695], 'children': [{'type': 'ObjectExpression', 'name': 'not', 'range': [3692, 3694], 'children': [{'type': 'Identifier', 'name': 'version', 'range': [3693, 3694], 'children': []}]}]}, {'type': 'Property', 'name': 'userId', 'range': [3698, 3700], 'children': [{'type': 'Identifier', 'name': 'user_id', 'range': [3699, 3700], 'children': []}]}, {'type': 'Property', 'name': 'isActive', 'range': [3703, 3705], 'children': [{'type': 'Literal', 'name': 'True', 'range': [3704, 3705], 'children': []}]}]}]}]}]}]}]}
2025-01-08 10:31:06,692 - INFO - Completed main AST analysis flow
2025-01-08 10:31:06,693 - INFO - Successfully processed chunk
2025-01-08 10:31:21,901 - INFO - Step 3 result: {'type': 'Program', 'name': 'Graph', 'range': [904, 1322], 'children': [{'type': 'ClassDeclaration', 'name': 'Graph', 'range': [904, 956], 'children': [{'type': 'VariableDeclaration', 'name': 'version', 'range': [911, 915], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [913, 913], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [914, 914], 'children': [{'type': 'Literal', 'name': '1', 'range': [915, 915], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'is_active', 'range': [917, 921], 'children': [{'type': 'TypeAnnotation', 'name': 'bool', 'range': [919, 919], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [920, 920], 'children': [{'type': 'Literal', 'name': 'True', 'range': [921, 921], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'is_template', 'range': [923, 927], 'children': [{'type': 'TypeAnnotation', 'name': 'bool', 'range': [925, 925], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [926, 926], 'children': [{'type': 'Literal', 'name': 'False', 'range': [927, 927], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'name', 'range': [929, 931], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [931, 931], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'description', 'range': [933, 935], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [935, 935], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'nodes', 'range': [937, 945], 'children': [{'type': 'TypeAnnotation', 'name': 'list', 'range': [939, 939], 'children': [{'type': 'TypeArgument', 'name': 'Node', 'range': [941, 941], 'children': []}]}, {'type': 'Assignment', 'name': '=', 'range': [943, 943], 'children': [{'type': 'ListLiteral', 'name': '[]', 'range': [944, 945], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'links', 'range': [947, 955], 'children': [{'type': 'TypeAnnotation', 'name': 'list', 'range': [949, 949], 'children': [{'type': 'TypeArgument', 'name': 'Link', 'range': [951, 951], 'children': []}]}, {'type': 'Assignment', 'name': '=', 'range': [953, 953], 'children': [{'type': 'ListLiteral', 'name': '[]', 'range': [954, 955], 'children': []}]}]}]}, {'type': 'FunctionDeclaration', 'name': 'input_schema', 'range': [964, 1037], 'children': [{'type': 'Decorator', 'name': '@computed_field', 'range': [958, 959], 'children': []}, {'type': 'Decorator', 'name': '@property', 'range': [961, 962], 'children': []}, {'type': 'Parameter', 'name': 'self', 'range': [967, 967], 'children': []}, {'type': 'ReturnType', 'name': 'dict', 'range': [971, 971], 'children': [{'type': 'TypeArgument', 'name': 'str', 'range': [973, 973], 'children': []}, {'type': 'TypeArgument', 'name': 'Any', 'range': [975, 975], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [978, 1037], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [979, 979], 'children': [{'type': 'CallExpression', 'name': '_generate_schema', 'range': [982, 1036], 'children': [{'type': 'Argument', 'name': 'AgentInputBlock.Input', 'range': [985, 987], 'children': []}, {'type': 'Argument', 'name': 'ListComprehension', 'range': [990, 1033], 'children': [{'type': 'Identifier', 'name': 'node', 'range': [992, 992], 'children': []}, {'type': 'MemberExpression', 'name': 'input_default', 'range': [993, 994], 'children': []}, {'type': 'ForStatement', 'name': 'for', 'range': [996, 1002], 'children': [{'type': 'Identifier', 'name': 'node', 'range': [997, 997], 'children': []}, {'type': 'Identifier', 'name': 'self.nodes', 'range': [999, 1001], 'children': []}]}, {'type': 'IfStatement', 'name': 'if', 'range': [1003, 1032], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [1007, 1007], 'children': [{'type': 'CallExpression', 'name': 'get_block', 'range': [1008, 1013], 'children': [{'type': 'Argument', 'name': 'node.block_id', 'range': [1010, 1012], 'children': []}]}]}, {'type': 'LogicalExpression', 'name': 'and', 'range': [1016, 1016], 'children': [{'type': 'MemberExpression', 'name': 'block_type', 'range': [1018, 1019], 'children': []}, {'type': 'BinaryExpression', 'name': '==', 'range': [1020, 1021], 'children': [{'type': 'Identifier', 'name': 'BlockType.INPUT', 'range': [1022, 1024], 'children': []}]}]}, {'type': 'LogicalExpression', 'name': 'and', 'range': [1026, 1026], 'children': [{'type': 'Literal', 'name': '"name"', 'range': [1027, 1027], 'children': []}, {'type': 'MemberExpression', 'name': 'input_default', 'range': [1029, 1031], 'children': []}]}]}]}]}]}]}]}, {'type': 'FunctionDeclaration', 'name': 'output_schema', 'range': [1045, 1118], 'children': [{'type': 'Decorator', 'name': '@computed_field', 'range': [1039, 1040], 'children': []}, {'type': 'Decorator', 'name': '@property', 'range': [1042, 1043], 'children': []}, {'type': 'Parameter', 'name': 'self', 'range': [1048, 1048], 'children': []}, {'type': 'ReturnType', 'name': 'dict', 'range': [1052, 1052], 'children': [{'type': 'TypeArgument', 'name': 'str', 'range': [1054, 1054], 'children': []}, {'type': 'TypeArgument', 'name': 'Any', 'range': [1056, 1056], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [1059, 1118], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [1060, 1060], 'children': [{'type': 'CallExpression', 'name': '_generate_schema', 'range': [1063, 1117], 'children': [{'type': 'Argument', 'name': 'AgentOutputBlock.Input', 'range': [1066, 1068], 'children': []}, {'type': 'Argument', 'name': 'ListComprehension', 'range': [1071, 1114], 'children': [{'type': 'Identifier', 'name': 'node', 'range': [1073, 1073], 'children': []}, {'type': 'MemberExpression', 'name': 'input_default', 'range': [1074, 1075], 'children': []}, {'type': 'ForStatement', 'name': 'for', 'range': [1077, 1083], 'children': [{'type': 'Identifier', 'name': 'node', 'range': [1078, 1078], 'children': []}, {'type': 'Identifier', 'name': 'self.nodes', 'range': [1080, 1082], 'children': []}]}, {'type': 'IfStatement', 'name': 'if', 'range': [1084, 1113], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [1088, 1088], 'children': [{'type': 'CallExpression', 'name': 'get_block', 'range': [1089, 1094], 'children': [{'type': 'Argument', 'name': 'node.block_id', 'range': [1091, 1093], 'children': []}]}]}, {'type': 'LogicalExpression', 'name': 'and', 'range': [1097, 1097], 'children': [{'type': 'MemberExpression', 'name': 'block_type', 'range': [1099, 1100], 'children': []}, {'type': 'BinaryExpression', 'name': '==', 'range': [1101, 1102], 'children': [{'type': 'Identifier', 'name': 'BlockType.OUTPUT', 'range': [1103, 1105], 'children': []}]}]}, {'type': 'LogicalExpression', 'name': 'and', 'range': [1107, 1107], 'children': [{'type': 'Literal', 'name': '"name"', 'range': [1108, 1108], 'children': []}, {'type': 'MemberExpression', 'name': 'input_default', 'range': [1110, 1112], 'children': []}]}]}]}]}]}]}]}, {'type': 'FunctionDeclaration', 'name': '_generate_schema', 'range': [1123, 1320], 'children': [{'type': 'Decorator', 'name': '@staticmethod', 'range': [1120, 1121], 'children': []}, {'type': 'Parameter', 'name': 'type_class', 'range': [1127, 1127], 'children': [{'type': 'TypeAnnotation', 'name': 'Type', 'range': [1129, 1129], 'children': [{'type': 'TypeArgument', 'name': 'AgentInputBlock.Input', 'range': [1131, 1133], 'children': []}, {'type': 'TypeArgument', 'name': 'AgentOutputBlock.Input', 'range': [1136, 1138], 'children': []}]}]}, {'type': 'Parameter', 'name': 'data', 'range': [1144, 1144], 'children': [{'type': 'TypeAnnotation', 'name': 'list', 'range': [1146, 1146], 'children': [{'type': 'TypeArgument', 'name': 'dict', 'range': [1148, 1148], 'children': []}]}]}, {'type': 'ReturnType', 'name': 'dict', 'range': [1155, 1155], 'children': [{'type': 'TypeArgument', 'name': 'str', 'range': [1157, 1157], 'children': []}, {'type': 'TypeArgument', 'name': 'Any', 'range': [1159, 1159], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [1162, 1320], 'children': [{'type': 'VariableDeclaration', 'name': 'props', 'range': [1163, 1165], 'children': [{'type': 'Assignment', 'name': '=', 'range': [1164, 1164], 'children': [{'type': 'ListLiteral', 'name': '[]', 'range': [1165, 1165], 'children': []}]}]}, {'type': 'ForStatement', 'name': 'for', 'range': [1168, 1172], 'children': [{'type': 'Identifier', 'name': 'p', 'range': [1169, 1169], 'children': []}, {'type': 'Identifier', 'name': 'data', 'range': [1171, 1171], 'children': []}]}, {'type': 'TryStatement', 'name': 'try', 'range': [1174, 1202], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [1176, 1188], 'children': [{'type': 'ExpressionStatement', 'name': '', 'range': [1177, 1187], 'children': [{'type': 'CallExpression', 'name': 'append', 'range': [1179, 1187], 'children': [{'type': 'Argument', 'name': 'type_class', 'range': [1181, 1181], 'children': []}, {'type': 'Argument', 'name': 'p', 'range': [1185, 1185], 'children': []}]}]}]}, {'type': 'CatchClause', 'name': 'except', 'range': [1189, 1202], 'children': [{'type': 'Identifier', 'name': 'Exception', 'range': [1190, 1190], 'children': []}, {'type': 'Identifier', 'name': 'e', 'range': [1192, 1192], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [1194, 1202], 'children': [{'type': 'ExpressionStatement', 'name': '', 'range': [1195, 1201], 'children': [{'type': 'CallExpression', 'name': 'warning', 'range': [1197, 1201], 'children': [{'type': 'Argument', 'name': 'f"Invalid {type_class}: {p}, {e}"', 'range': [1199, 1200], 'children': []}]}]}]}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [1204, 1204], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [1205, 1319], 'children': [{'type': 'Property', 'name': 'type', 'range': [1207, 1207], 'children': [{'type': 'Literal', 'name': '"object"', 'range': [1209, 1209], 'children': []}]}, {'type': 'Property', 'name': 'properties', 'range': [1212, 1212], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [1214, 1297], 'children': [{'type': 'Property', 'name': 'p.name', 'range': [1216, 1218], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [1220, 1290], 'children': [{'type': 'Property', 'name': 'secret', 'range': [1222, 1222], 'children': [{'type': 'MemberExpression', 'name': 'p.secret', 'range': [1224, 1226], 'children': []}]}, {'type': 'Property', 'name': 'advanced', 'range': [1229, 1229], 'children': [{'type': 'MemberExpression', 'name': 'p.advanced', 'range': [1231, 1233], 'children': []}]}, {'type': 'Property', 'name': 'title', 'range': [1236, 1236], 'children': [{'type': 'LogicalExpression', 'name': 'or', 'range': [1241, 1241], 'children': [{'type': 'MemberExpression', 'name': 'p.title', 'range': [1238, 1240], 'children': []}, {'type': 'MemberExpression', 'name': 'p.name', 'range': [1243, 1244], 'children': []}]}]}, {'type': 'SpreadElement', 'name': '...', 'range': [1247, 1248], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [1250, 1264], 'children': [{'type': 'Property', 'name': 'description', 'range': [1251, 1251], 'children': [{'type': 'MemberExpression', 'name': 'p.description', 'range': [1253, 1255], 'children': []}]}]}]}, {'type': 'SpreadElement', 'name': '...', 'range': [1267, 1268], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [1270, 1287], 'children': [{'type': 'Property', 'name': 'default', 'range': [1271, 1271], 'children': [{'type': 'MemberExpression', 'name': 'p.value', 'range': [1273, 1275], 'children': []}]}]}]}]}]}]}]}, {'type': 'Property', 'name': 'required', 'range': [1300, 1300], 'children': [{'type': 'ArrayExpression', 'name': '', 'range': [1302, 1316], 'children': [{'type': 'MemberExpression', 'name': 'p.name', 'range': [1303, 1305], 'children': []}]}]}]}]}]}]}]}
2025-01-08 10:31:21,901 - INFO - Starting Step 4: AST normalization
2025-01-08 10:31:23,719 - INFO - Step 4 result: {'type': 'Program', 'name': 'GraphExecution', 'range': [682, 902], 'children': [{'type': 'ClassDecl', 'name': 'GraphExecution', 'range': [682, 720], 'children': [{'type': 'PropertyDecl', 'name': 'execution_id', 'range': [689, 691], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [691, 691], 'children': []}]}, {'type': 'PropertyDecl', 'name': 'started_at', 'range': [693, 695], 'children': [{'type': 'TypeAnnotation', 'name': 'datetime', 'range': [695, 695], 'children': []}]}, {'type': 'PropertyDecl', 'name': 'ended_at', 'range': [697, 699], 'children': [{'type': 'TypeAnnotation', 'name': 'datetime', 'range': [699, 699], 'children': []}]}, {'type': 'PropertyDecl', 'name': 'duration', 'range': [701, 703], 'children': [{'type': 'TypeAnnotation', 'name': 'float', 'range': [703, 703], 'children': []}]}, {'type': 'PropertyDecl', 'name': 'total_run_time', 'range': [705, 707], 'children': [{'type': 'TypeAnnotation', 'name': 'float', 'range': [707, 707], 'children': []}]}, {'type': 'PropertyDecl', 'name': 'status', 'range': [709, 711], 'children': [{'type': 'TypeAnnotation', 'name': 'ExecutionStatus', 'range': [711, 711], 'children': []}]}, {'type': 'PropertyDecl', 'name': 'graph_id', 'range': [713, 715], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [715, 715], 'children': []}]}, {'type': 'PropertyDecl', 'name': 'graph_version', 'range': [717, 719], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [719, 719], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'from_db', 'range': [722, 901], 'children': [{'type': 'Parameter', 'name': 'execution', 'range': [728, 730], 'children': [{'type': 'TypeAnnotation', 'name': 'AgentGraphExecution', 'range': [730, 730], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [733, 901], 'children': [{'type': 'VariableDecl', 'name': 'now', 'range': [734, 743], 'children': [{'type': 'CallExpression', 'name': 'datetime.now', 'range': [736, 743], 'children': [{'type': 'MemberExpression', 'name': 'datetime.now', 'range': [736, 738], 'children': []}, {'type': 'ArgumentList', 'name': '', 'range': [739, 743], 'children': [{'type': 'MemberExpression', 'name': 'timezone.utc', 'range': [740, 742], 'children': []}]}]}]}, {'type': 'VariableDecl', 'name': 'start_time', 'range': [745, 754], 'children': [{'type': 'BinaryExpression', 'name': 'or', 'range': [747, 754], 'children': [{'type': 'MemberExpression', 'name': 'execution.startedAt', 'range': [747, 749], 'children': []}, {'type': 'MemberExpression', 'name': 'execution.createdAt', 'range': [751, 753], 'children': []}]}]}, {'type': 'VariableDecl', 'name': 'end_time', 'range': [756, 762], 'children': [{'type': 'BinaryExpression', 'name': 'or', 'range': [758, 762], 'children': [{'type': 'MemberExpression', 'name': 'execution.updatedAt', 'range': [758, 760], 'children': []}, {'type': 'Identifier', 'name': 'now', 'range': [761, 761], 'children': []}]}]}, {'type': 'VariableDecl', 'name': 'duration', 'range': [764, 774], 'children': [{'type': 'CallExpression', 'name': 'total_seconds', 'range': [765, 774], 'children': [{'type': 'BinaryExpression', 'name': '-', 'range': [766, 768], 'children': [{'type': 'Identifier', 'name': 'end_time', 'range': [766, 766], 'children': []}, {'type': 'Identifier', 'name': 'start_time', 'range': [768, 768], 'children': []}]}]}]}, {'type': 'VariableDecl', 'name': 'total_run_time', 'range': [776, 778], 'children': [{'type': 'Identifier', 'name': 'duration', 'range': [777, 777], 'children': []}]}, {'type': 'TryStatement', 'name': '', 'range': [780, 813], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [782, 804], 'children': [{'type': 'VariableDecl', 'name': 'stats', 'range': [783, 803], 'children': [{'type': 'CallExpression', 'name': 'json.loads', 'range': [785, 803], 'children': [{'type': 'MemberExpression', 'name': 'json.loads', 'range': [785, 787], 'children': []}, {'type': 'ArgumentList', 'name': '', 'range': [788, 803], 'children': [{'type': 'BinaryExpression', 'name': 'or', 'range': [789, 793], 'children': [{'type': 'MemberExpression', 'name': 'execution.stats', 'range': [789, 791], 'children': []}, {'type': 'StringLiteral', 'name': '"{}"', 'range': [793, 793], 'children': []}]}, {'type': 'KeywordArgument', 'name': 'target_type', 'range': [795, 802], 'children': [{'type': 'TypeAnnotation', 'name': 'dict[str, Any]', 'range': [797, 802], 'children': []}]}]}]}]}]}, {'type': 'CatchClause', 'name': 'ValueError', 'range': [805, 813], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [808, 813], 'children': [{'type': 'VariableDecl', 'name': 'stats', 'range': [809, 812], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [811, 812], 'children': []}]}]}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [815, 825], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [816, 824], 'children': [{'type': 'Identifier', 'name': 'duration', 'range': [816, 816], 'children': []}, {'type': 'CallExpression', 'name': 'stats.get', 'range': [817, 824], 'children': [{'type': 'MemberExpression', 'name': 'stats.get', 'range': [817, 819], 'children': []}, {'type': 'ArgumentList', 'name': '', 'range': [820, 824], 'children': [{'type': 'StringLiteral', 'name': '"walltime"', 'range': [821, 821], 'children': []}, {'type': 'Identifier', 'name': 'duration', 'range': [823, 823], 'children': []}]}]}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [826, 836], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [827, 835], 'children': [{'type': 'Identifier', 'name': 'total_run_time', 'range': [827, 827], 'children': []}, {'type': 'CallExpression', 'name': 'stats.get', 'range': [828, 835], 'children': [{'type': 'MemberExpression', 'name': 'stats.get', 'range': [828, 830], 'children': []}, {'type': 'ArgumentList', 'name': '', 'range': [831, 835], 'children': [{'type': 'StringLiteral', 'name': '"nodes_walltime"', 'range': [832, 832], 'children': []}, {'type': 'Identifier', 'name': 'total_run_time', 'range': [834, 834], 'children': []}]}]}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [838, 901], 'children': [{'type': 'NewExpression', 'name': 'GraphExecution', 'range': [839, 900], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [840, 900], 'children': [{'type': 'KeywordArgument', 'name': 'id', 'range': [842, 847], 'children': [{'type': 'MemberExpression', 'name': 'execution.id', 'range': [844, 846], 'children': []}]}, {'type': 'KeywordArgument', 'name': 'execution_id', 'range': [849, 854], 'children': [{'type': 'MemberExpression', 'name': 'execution.id', 'range': [852, 854], 'children': []}]}, {'type': 'KeywordArgument', 'name': 'started_at', 'range': [856, 859], 'children': [{'type': 'Identifier', 'name': 'start_time', 'range': [858, 858], 'children': []}]}, {'type': 'KeywordArgument', 'name': 'ended_at', 'range': [861, 864], 'children': [{'type': 'Identifier', 'name': 'end_time', 'range': [863, 863], 'children': []}]}, {'type': 'KeywordArgument', 'name': 'duration', 'range': [866, 869], 'children': [{'type': 'Identifier', 'name': 'duration', 'range': [868, 868], 'children': []}]}, {'type': 'KeywordArgument', 'name': 'total_run_time', 'range': [871, 874], 'children': [{'type': 'Identifier', 'name': 'total_run_time', 'range': [873, 873], 'children': []}]}, {'type': 'KeywordArgument', 'name': 'status', 'range': [876, 884], 'children': [{'type': 'CallExpression', 'name': 'ExecutionStatus', 'range': [878, 884], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [879, 884], 'children': [{'type': 'MemberExpression', 'name': 'execution.executionStatus', 'range': [880, 882], 'children': []}]}]}]}, {'type': 'KeywordArgument', 'name': 'graph_id', 'range': [886, 891], 'children': [{'type': 'MemberExpression', 'name': 'execution.agentGraphId', 'range': [888, 890], 'children': []}]}, {'type': 'KeywordArgument', 'name': 'graph_version', 'range': [893, 898], 'children': [{'type': 'MemberExpression', 'name': 'execution.agentGraphVersion', 'range': [895, 897], 'children': []}]}]}]}]}]}]}]}
2025-01-08 10:31:23,719 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:31:53,348 - INFO - Step 4 result: {'type': 'Program', 'name': 'NodeModel', 'range': [335, 661], 'children': [{'type': 'ClassDecl', 'name': 'NodeModel', 'range': [335, 359], 'children': [{'type': 'PropertyDecl', 'name': 'graph_id', 'range': [342, 344], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [344, 344], 'children': []}]}, {'type': 'PropertyDecl', 'name': 'graph_version', 'range': [346, 348], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [348, 348], 'children': []}]}, {'type': 'PropertyDecl', 'name': 'webhook', 'range': [351, 358], 'children': [{'type': 'TypeAnnotation', 'name': 'Optional[Webhook]', 'range': [353, 356], 'children': []}, {'type': 'AssignmentExpression', 'name': '=', 'range': [357, 358], 'children': [{'type': 'Literal', 'name': 'None', 'range': [358, 358], 'children': []}]}]}]}, {'type': 'FunctionDecl', 'name': 'from_db', 'range': [364, 537], 'children': [{'type': 'Parameter', 'name': 'node', 'range': [367, 369], 'children': [{'type': 'TypeAnnotation', 'name': 'AgentNode', 'range': [369, 369], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [372, 537], 'children': [{'type': 'IfStatement', 'name': '', 'range': [373, 386], 'children': [{'type': 'UnaryExpression', 'name': 'not', 'range': [374, 375], 'children': [{'type': 'MemberExpression', 'name': 'node.AgentBlock', 'range': [375, 377], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [379, 386], 'children': [{'type': 'ThrowStatement', 'name': 'raise', 'range': [380, 385], 'children': [{'type': 'NewExpression', 'name': 'ValueError', 'range': [381, 385], 'children': [{'type': 'TemplateLiteral', 'name': 'f"Invalid node {node.id}, invalid AgentBlock."', 'range': [383, 384], 'children': []}]}]}]}]}, {'type': 'VariableDecl', 'name': 'obj', 'range': [387, 489], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [388, 389], 'children': [{'type': 'NewExpression', 'name': 'NodeModel', 'range': [389, 489], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [390, 489], 'children': [{'type': 'AssignmentExpression', 'name': 'id=', 'range': [392, 397], 'children': [{'type': 'MemberExpression', 'name': 'node.id', 'range': [394, 396], 'children': []}]}, {'type': 'AssignmentExpression', 'name': 'block_id=', 'range': [399, 406], 'children': [{'type': 'MemberExpression', 'name': 'node.AgentBlock.id', 'range': [401, 405], 'children': []}]}, {'type': 'AssignmentExpression', 'name': 'input_default=', 'range': [408, 426], 'children': [{'type': 'CallExpression', 'name': 'json.loads', 'range': [410, 426], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [413, 426], 'children': [{'type': 'MemberExpression', 'name': 'node.constantInput', 'range': [414, 416], 'children': []}, {'type': 'AssignmentExpression', 'name': 'target_type=', 'range': [418, 425], 'children': [{'type': 'TypeAnnotation', 'name': 'dict[str, Any]', 'range': [420, 425], 'children': []}]}]}]}]}, {'type': 'AssignmentExpression', 'name': 'metadata=', 'range': [429, 447], 'children': [{'type': 'CallExpression', 'name': 'json.loads', 'range': [431, 447], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [434, 447], 'children': [{'type': 'MemberExpression', 'name': 'node.metadata', 'range': [435, 437], 'children': []}, {'type': 'AssignmentExpression', 'name': 'target_type=', 'range': [439, 446], 'children': [{'type': 'TypeAnnotation', 'name': 'dict[str, Any]', 'range': [441, 446], 'children': []}]}]}]}]}, {'type': 'AssignmentExpression', 'name': 'graph_id=', 'range': [450, 455], 'children': [{'type': 'MemberExpression', 'name': 'node.agentGraphId', 'range': [452, 454], 'children': []}]}, {'type': 'AssignmentExpression', 'name': 'graph_version=', 'range': [457, 462], 'children': [{'type': 'MemberExpression', 'name': 'node.agentGraphVersion', 'range': [459, 461], 'children': []}]}, {'type': 'AssignmentExpression', 'name': 'webhook_id=', 'range': [464, 469], 'children': [{'type': 'MemberExpression', 'name': 'node.webhookId', 'range': [466, 468], 'children': []}]}, {'type': 'AssignmentExpression', 'name': 'webhook=', 'range': [471, 487], 'children': [{'type': 'ConditionalExpression', 'name': 'if', 'range': [473, 486], 'children': [{'type': 'CallExpression', 'name': 'Webhook.from_db', 'range': [473, 480], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [476, 480], 'children': [{'type': 'MemberExpression', 'name': 'node.Webhook', 'range': [477, 479], 'children': []}]}]}, {'type': 'Literal', 'name': 'None', 'range': [486, 486], 'children': []}]}]}]}]}]}]}, {'type': 'AssignmentExpression', 'name': 'obj.input_links=', 'range': [491, 512], 'children': [{'type': 'ArrayExpression', 'name': '', 'range': [495, 511], 'children': [{'type': 'CallExpression', 'name': 'Link.from_db', 'range': [496, 501], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [498, 501], 'children': [{'type': 'Identifier', 'name': 'link', 'range': [500, 500], 'children': []}]}]}]}]}, {'type': 'AssignmentExpression', 'name': 'obj.output_links=', 'range': [513, 534], 'children': [{'type': 'ArrayExpression', 'name': '', 'range': [517, 533], 'children': [{'type': 'CallExpression', 'name': 'Link.from_db', 'range': [518, 523], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [520, 523], 'children': [{'type': 'Identifier', 'name': 'link', 'range': [522, 522], 'children': []}]}]}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [535, 536], 'children': [{'type': 'Identifier', 'name': 'obj', 'range': [536, 536], 'children': []}]}]}]}, {'type': 'FunctionDecl', 'name': 'is_triggered_by_event_type', 'range': [539, 659], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [542, 542], 'children': []}, {'type': 'Parameter', 'name': 'event_type', 'range': [544, 546], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [546, 546], 'children': []}]}, {'type': 'TypeAnnotation', 'name': '-> bool', 'range': [548, 550], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [552, 659], 'children': [{'type': 'IfStatement', 'name': '', 'range': [553, 574], 'children': [{'type': 'UnaryExpression', 'name': 'not', 'range': [554, 555], 'children': [{'type': 'AssignmentExpression', 'name': 'block=', 'range': [556, 565], 'children': [{'type': 'CallExpression', 'name': 'get_block', 'range': [559, 564], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [561, 564], 'children': [{'type': 'MemberExpression', 'name': 'self.block_id', 'range': [562, 563], 'children': []}]}]}]}]}, {'type': 'BlockStatement', 'name': '', 'range': [567, 574], 'children': [{'type': 'ThrowStatement', 'name': 'raise', 'range': [568, 573], 'children': [{'type': 'NewExpression', 'name': 'ValueError', 'range': [569, 573], 'children': [{'type': 'TemplateLiteral', 'name': 'f"Block #{self.block_id} not found for node #{self.id}"', 'range': [571, 572], 'children': []}]}]}]}]}, {'type': 'IfStatement', 'name': '', 'range': [575, 587], 'children': [{'type': 'UnaryExpression', 'name': 'not', 'range': [576, 577], 'children': [{'type': 'MemberExpression', 'name': 'block.webhook_config', 'range': [577, 579], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [581, 587], 'children': [{'type': 'ThrowStatement', 'name': 'raise', 'range': [582, 586], 'children': [{'type': 'NewExpression', 'name': 'TypeError', 'range': [583, 586], 'children': [{'type': 'Literal', 'name': '"This method can\'t be used on non-webhook blocks"', 'range': [585, 585], 'children': []}]}]}]}]}, {'type': 'IfStatement', 'name': '', 'range': [588, 599], 'children': [{'type': 'UnaryExpression', 'name': 'not', 'range': [589, 590], 'children': [{'type': 'MemberExpression', 'name': 'block.webhook_config.event_filter_input', 'range': [590, 594], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [596, 599], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [597, 598], 'children': [{'type': 'Literal', 'name': 'True', 'range': [598, 598], 'children': []}]}]}]}, {'type': 'VariableDecl', 'name': 'event_filter', 'range': [600, 614], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [601, 602], 'children': [{'type': 'CallExpression', 'name': 'self.input_default.get', 'range': [602, 613], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [606, 613], 'children': [{'type': 'MemberExpression', 'name': 'block.webhook_config.event_filter_input', 'range': [608, 612], 'children': []}]}]}]}]}, {'type': 'IfStatement', 'name': '', 'range': [615, 626], 'children': [{'type': 'UnaryExpression', 'name': 'not', 'range': [616, 617], 'children': [{'type': 'Identifier', 'name': 'event_filter', 'range': [617, 617], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [619, 626], 'children': [{'type': 'ThrowStatement', 'name': 'raise', 'range': [620, 625], 'children': [{'type': 'NewExpression', 'name': 'ValueError', 'range': [621, 625], 'children': [{'type': 'TemplateLiteral', 'name': 'f"Event filter is not configured on node #{self.id}"', 'range': [623, 624], 'children': []}]}]}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [627, 658], 'children': [{'type': 'BinaryExpression', 'name': 'in', 'range': [628, 630], 'children': [{'type': 'Identifier', 'name': 'event_type', 'range': [628, 628], 'children': []}, {'type': 'ArrayExpression', 'name': '', 'range': [630, 658], 'children': [{'type': 'CallExpression', 'name': 'block.webhook_config.event_format.format', 'range': [632, 644], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [638, 644], 'children': [{'type': 'AssignmentExpression', 'name': 'event=', 'range': [640, 642], 'children': [{'type': 'Identifier', 'name': 'k', 'range': [642, 642], 'children': []}]}]}]}]}]}]}]}]}]}
2025-01-08 10:31:53,348 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:31:56,756 - INFO - Step 4 result: {'type': 'Program', 'name': '__create_graph', 'range': [3936, 4192], 'children': [{'type': 'FunctionDecl', 'name': '__create_graph', 'range': [3936, 4192], 'children': [{'type': 'FunctionSignature', 'name': '__create_graph', 'range': [3936, 3950], 'children': [{'type': 'Keyword', 'name': 'async', 'range': [3936, 3941], 'children': []}, {'type': 'Keyword', 'name': 'def', 'range': [3937, 3940], 'children': []}, {'type': 'Identifier', 'name': '__create_graph', 'range': [3938, 3950], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [3939, 3949], 'children': [{'type': 'Parameter', 'name': 'tx', 'range': [3940, 3942], 'children': []}, {'type': 'Parameter', 'name': 'graph', 'range': [3942, 3948], 'children': [{'type': 'TypeAnnotation', 'name': 'Graph', 'range': [3944, 3948], 'children': []}]}, {'type': 'Parameter', 'name': 'user_id', 'range': [3946, 3952], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [3948, 3952], 'children': []}]}]}]}, {'type': 'BlockStatement', 'name': 'body', 'range': [3951, 4192], 'children': [{'type': 'ExpressionStatement', 'name': 'await AgentGraph.prisma(tx).create(data)', 'range': [3952, 4017], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [3952, 3957], 'children': [{'type': 'CallExpression', 'name': 'AgentGraph.prisma(tx).create', 'range': [3953, 4016], 'children': [{'type': 'MemberExpression', 'name': 'AgentGraph.prisma', 'range': [3953, 3965], 'children': [{'type': 'Identifier', 'name': 'AgentGraph', 'range': [3953, 3962], 'children': []}, {'type': 'Identifier', 'name': 'prisma', 'range': [3963, 3969], 'children': []}]}, {'type': 'CallExpression', 'name': 'prisma(tx)', 'range': [3966, 3974], 'children': [{'type': 'Identifier', 'name': 'tx', 'range': [3967, 3969], 'children': []}]}, {'type': 'MemberExpression', 'name': 'create', 'range': [3975, 3981], 'children': []}, {'type': 'ObjectExpression', 'name': 'data', 'range': [3982, 4014], 'children': [{'type': 'Property', 'name': 'id', 'range': [3987, 3993], 'children': [{'type': 'Identifier', 'name': 'graph.id', 'range': [3989, 3993], 'children': []}]}, {'type': 'Property', 'name': 'version', 'range': [3994, 4000], 'children': [{'type': 'Identifier', 'name': 'graph.version', 'range': [3996, 4000], 'children': []}]}, {'type': 'Property', 'name': 'name', 'range': [4001, 4007], 'children': [{'type': 'Identifier', 'name': 'graph.name', 'range': [4003, 4007], 'children': []}]}, {'type': 'Property', 'name': 'description', 'range': [4008, 4014], 'children': [{'type': 'Identifier', 'name': 'graph.description', 'range': [4010, 4014], 'children': []}]}, {'type': 'Property', 'name': 'isTemplate', 'range': [4015, 4021], 'children': [{'type': 'Identifier', 'name': 'graph.is_template', 'range': [4017, 4021], 'children': []}]}, {'type': 'Property', 'name': 'isActive', 'range': [4022, 4028], 'children': [{'type': 'Identifier', 'name': 'graph.is_active', 'range': [4024, 4028], 'children': []}]}, {'type': 'Property', 'name': 'userId', 'range': [4029, 4035], 'children': [{'type': 'Identifier', 'name': 'user_id', 'range': [4031, 4035], 'children': []}]}]}]}]}]}, {'type': 'ExpressionStatement', 'name': 'await asyncio.gather(*[AgentNode.prisma(tx).create({...}) for node in graph.nodes])', 'range': [4019, 4106], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [4019, 4024], 'children': [{'type': 'CallExpression', 'name': 'asyncio.gather', 'range': [4025, 4105], 'children': [{'type': 'MemberExpression', 'name': 'asyncio.gather', 'range': [4025, 4039], 'children': [{'type': 'Identifier', 'name': 'asyncio', 'range': [4025, 4031], 'children': []}, {'type': 'Identifier', 'name': 'gather', 'range': [4032, 4038], 'children': []}]}, {'type': 'SpreadElement', 'name': '*', 'range': [4040, 4041], 'children': [{'type': 'ArrayExpression', 'name': '[...]', 'range': [4042, 4103], 'children': [{'type': 'CallExpression', 'name': 'AgentNode.prisma(tx).create', 'range': [4044, 4094], 'children': [{'type': 'MemberExpression', 'name': 'AgentNode.prisma', 'range': [4044, 4056], 'children': [{'type': 'Identifier', 'name': 'AgentNode', 'range': [4044, 4052], 'children': []}, {'type': 'Identifier', 'name': 'prisma', 'range': [4053, 4059], 'children': []}]}, {'type': 'CallExpression', 'name': 'prisma(tx)', 'range': [4060, 4068], 'children': [{'type': 'Identifier', 'name': 'tx', 'range': [4061, 4063], 'children': []}]}, {'type': 'MemberExpression', 'name': 'create', 'range': [4069, 4075], 'children': []}, {'type': 'ObjectExpression', 'name': '{...}', 'range': [4076, 4092], 'children': [{'type': 'Property', 'name': 'id', 'range': [4080, 4086], 'children': [{'type': 'Identifier', 'name': 'node.id', 'range': [4082, 4086], 'children': []}]}, {'type': 'Property', 'name': 'agentBlockId', 'range': [4087, 4093], 'children': [{'type': 'Identifier', 'name': 'node.block_id', 'range': [4089, 4093], 'children': []}]}, {'type': 'Property', 'name': 'agentGraphId', 'range': [4094, 4100], 'children': [{'type': 'Identifier', 'name': 'graph.id', 'range': [4096, 4100], 'children': []}]}, {'type': 'Property', 'name': 'agentGraphVersion', 'range': [4101, 4107], 'children': [{'type': 'Identifier', 'name': 'graph.version', 'range': [4103, 4107], 'children': []}]}, {'type': 'Property', 'name': 'constantInput', 'range': [4108, 4114], 'children': [{'type': 'CallExpression', 'name': 'json.dumps(node.input_default)', 'range': [4110, 4126], 'children': [{'type': 'MemberExpression', 'name': 'json.dumps', 'range': [4110, 4119], 'children': [{'type': 'Identifier', 'name': 'json', 'range': [4110, 4114], 'children': []}, {'type': 'Identifier', 'name': 'dumps', 'range': [4115, 4119], 'children': []}]}, {'type': 'CallExpression', 'name': 'node.input_default', 'range': [4120, 4126], 'children': [{'type': 'Identifier', 'name': 'node', 'range': [4120, 4124], 'children': []}, {'type': 'Identifier', 'name': 'input_default', 'range': [4125, 4126], 'children': []}]}]}]}, {'type': 'Property', 'name': 'metadata', 'range': [4127, 4133], 'children': [{'type': 'CallExpression', 'name': 'json.dumps(node.metadata)', 'range': [4129, 4145], 'children': [{'type': 'MemberExpression', 'name': 'json.dumps', 'range': [4129, 4138], 'children': [{'type': 'Identifier', 'name': 'json', 'range': [4129, 4133], 'children': []}, {'type': 'Identifier', 'name': 'dumps', 'range': [4134, 4138], 'children': []}]}, {'type': 'CallExpression', 'name': 'node.metadata', 'range': [4139, 4145], 'children': [{'type': 'Identifier', 'name': 'node', 'range': [4139, 4143], 'children': []}, {'type': 'Identifier', 'name': 'metadata', 'range': [4144, 4145], 'children': []}]}]}]}]}]}]}]}]}]}]}, {'type': 'ExpressionStatement', 'name': 'await asyncio.gather(*[AgentNodeLink.prisma(tx).create({...}) for link in graph.links])', 'range': [4108, 4190], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [4108, 4113], 'children': [{'type': 'CallExpression', 'name': 'asyncio.gather', 'range': [4114, 4189], 'children': [{'type': 'MemberExpression', 'name': 'asyncio.gather', 'range': [4114, 4128], 'children': [{'type': 'Identifier', 'name': 'asyncio', 'range': [4114, 4120], 'children': []}, {'type': 'Identifier', 'name': 'gather', 'range': [4121, 4127], 'children': []}]}, {'type': 'SpreadElement', 'name': '*', 'range': [4129, 4130], 'children': [{'type': 'ArrayExpression', 'name': '[...]', 'range': [4131, 4187], 'children': [{'type': 'CallExpression', 'name': 'AgentNodeLink.prisma(tx).create', 'range': [4133, 4178], 'children': [{'type': 'MemberExpression', 'name': 'AgentNodeLink.prisma', 'range': [4133, 4145], 'children': [{'type': 'Identifier', 'name': 'AgentNodeLink', 'range': [4133, 4145], 'children': []}, {'type': 'Identifier', 'name': 'prisma', 'range': [4146, 4152], 'children': []}]}, {'type': 'CallExpression', 'name': 'prisma(tx)', 'range': [4153, 4161], 'children': [{'type': 'Identifier', 'name': 'tx', 'range': [4154, 4156], 'children': []}]}, {'type': 'MemberExpression', 'name': 'create', 'range': [4162, 4168], 'children': []}, {'type': 'ObjectExpression', 'name': '{...}', 'range': [4169, 4176], 'children': [{'type': 'Property', 'name': 'id', 'range': [4170, 4176], 'children': [{'type': 'CallExpression', 'name': 'str(uuid.uuid4())', 'range': [4172, 4184], 'children': [{'type': 'CallExpression', 'name': 'uuid.uuid4()', 'range': [4176, 4184], 'children': [{'type': 'MemberExpression', 'name': 'uuid.uuid4', 'range': [4176, 4184], 'children': [{'type': 'Identifier', 'name': 'uuid', 'range': [4176, 4180], 'children': []}, {'type': 'Identifier', 'name': 'uuid4', 'range': [4181, 4185], 'children': []}]}]}]}]}, {'type': 'Property', 'name': 'sourceName', 'range': [4185, 4191], 'children': [{'type': 'Identifier', 'name': 'link.source_name', 'range': [4187, 4191], 'children': []}]}, {'type': 'Property', 'name': 'sinkName', 'range': [4192, 4198], 'children': [{'type': 'Identifier', 'name': 'link.sink_name', 'range': [4194, 4198], 'children': []}]}, {'type': 'Property', 'name': 'agentNodeSourceId', 'range': [4199, 4205], 'children': [{'type': 'Identifier', 'name': 'link.source_id', 'range': [4201, 4205], 'children': []}]}, {'type': 'Property', 'name': 'agentNodeSinkId', 'range': [4206, 4212], 'children': [{'type': 'Identifier', 'name': 'link.sink_id', 'range': [4208, 4212], 'children': []}]}, {'type': 'Property', 'name': 'isStatic', 'range': [4213, 4219], 'children': [{'type': 'Identifier', 'name': 'link.is_static', 'range': [4215, 4219], 'children': []}]}]}]}]}]}]}]}]}]}]}]}
2025-01-08 10:31:56,757 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:32:25,941 - INFO - Step 5 result: {'type': 'Program', 'name': 'GraphExecution', 'range': [682, 902], 'children': [{'type': 'ClassDecl', 'name': 'GraphExecution', 'range': [682, 720], 'children': [{'type': 'PropertyDecl', 'name': 'execution_id', 'range': [689, 691], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [691, 691], 'children': []}]}, {'type': 'PropertyDecl', 'name': 'started_at', 'range': [693, 695], 'children': [{'type': 'TypeAnnotation', 'name': 'datetime', 'range': [695, 695], 'children': []}]}, {'type': 'PropertyDecl', 'name': 'ended_at', 'range': [697, 699], 'children': [{'type': 'TypeAnnotation', 'name': 'datetime', 'range': [699, 699], 'children': []}]}, {'type': 'PropertyDecl', 'name': 'duration', 'range': [701, 703], 'children': [{'type': 'TypeAnnotation', 'name': 'float', 'range': [703, 703], 'children': []}]}, {'type': 'PropertyDecl', 'name': 'total_run_time', 'range': [705, 707], 'children': [{'type': 'TypeAnnotation', 'name': 'float', 'range': [707, 707], 'children': []}]}, {'type': 'PropertyDecl', 'name': 'status', 'range': [709, 711], 'children': [{'type': 'TypeAnnotation', 'name': 'ExecutionStatus', 'range': [711, 711], 'children': []}]}, {'type': 'PropertyDecl', 'name': 'graph_id', 'range': [713, 715], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [715, 715], 'children': []}]}, {'type': 'PropertyDecl', 'name': 'graph_version', 'range': [717, 719], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [719, 719], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'from_db', 'range': [722, 901], 'children': [{'type': 'Parameter', 'name': 'execution', 'range': [728, 730], 'children': [{'type': 'TypeAnnotation', 'name': 'AgentGraphExecution', 'range': [730, 730], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [733, 901], 'children': [{'type': 'VariableDecl', 'name': 'now', 'range': [734, 743], 'children': [{'type': 'CallExpression', 'name': 'datetime.now', 'range': [736, 743], 'children': [{'type': 'MemberExpression', 'name': 'datetime.now', 'range': [736, 738], 'children': []}, {'type': 'ArgumentList', 'name': '', 'range': [739, 743], 'children': [{'type': 'MemberExpression', 'name': 'timezone.utc', 'range': [740, 742], 'children': []}]}]}]}, {'type': 'VariableDecl', 'name': 'start_time', 'range': [745, 754], 'children': [{'type': 'BinaryExpression', 'name': 'or', 'range': [747, 754], 'children': [{'type': 'MemberExpression', 'name': 'execution.startedAt', 'range': [747, 749], 'children': []}, {'type': 'MemberExpression', 'name': 'execution.createdAt', 'range': [751, 753], 'children': []}]}]}, {'type': 'VariableDecl', 'name': 'end_time', 'range': [756, 762], 'children': [{'type': 'BinaryExpression', 'name': 'or', 'range': [758, 762], 'children': [{'type': 'MemberExpression', 'name': 'execution.updatedAt', 'range': [758, 760], 'children': []}, {'type': 'Identifier', 'name': 'now', 'range': [761, 761], 'children': []}]}]}, {'type': 'VariableDecl', 'name': 'duration', 'range': [764, 774], 'children': [{'type': 'CallExpression', 'name': 'total_seconds', 'range': [765, 774], 'children': [{'type': 'BinaryExpression', 'name': '-', 'range': [766, 768], 'children': [{'type': 'Identifier', 'name': 'end_time', 'range': [766, 766], 'children': []}, {'type': 'Identifier', 'name': 'start_time', 'range': [768, 768], 'children': []}]}]}]}, {'type': 'VariableDecl', 'name': 'total_run_time', 'range': [776, 778], 'children': [{'type': 'Identifier', 'name': 'duration', 'range': [777, 777], 'children': []}]}, {'type': 'TryStatement', 'name': '', 'range': [780, 813], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [782, 804], 'children': [{'type': 'VariableDecl', 'name': 'stats', 'range': [783, 803], 'children': [{'type': 'CallExpression', 'name': 'json.loads', 'range': [785, 803], 'children': [{'type': 'MemberExpression', 'name': 'json.loads', 'range': [785, 787], 'children': []}, {'type': 'ArgumentList', 'name': '', 'range': [788, 803], 'children': [{'type': 'BinaryExpression', 'name': 'or', 'range': [789, 793], 'children': [{'type': 'MemberExpression', 'name': 'execution.stats', 'range': [789, 791], 'children': []}, {'type': 'StringLiteral', 'name': '"{}"', 'range': [793, 793], 'children': []}]}, {'type': 'KeywordArgument', 'name': 'target_type', 'range': [795, 802], 'children': [{'type': 'TypeAnnotation', 'name': 'dict[str, Any]', 'range': [797, 802], 'children': []}]}]}]}]}]}, {'type': 'CatchClause', 'name': 'ValueError', 'range': [805, 813], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [808, 813], 'children': [{'type': 'VariableDecl', 'name': 'stats', 'range': [809, 812], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [811, 812], 'children': []}]}]}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [815, 825], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [816, 824], 'children': [{'type': 'Identifier', 'name': 'duration', 'range': [816, 816], 'children': []}, {'type': 'CallExpression', 'name': 'stats.get', 'range': [817, 824], 'children': [{'type': 'MemberExpression', 'name': 'stats.get', 'range': [817, 819], 'children': []}, {'type': 'ArgumentList', 'name': '', 'range': [820, 824], 'children': [{'type': 'StringLiteral', 'name': '"walltime"', 'range': [821, 821], 'children': []}, {'type': 'Identifier', 'name': 'duration', 'range': [823, 823], 'children': []}]}]}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [826, 836], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [827, 835], 'children': [{'type': 'Identifier', 'name': 'total_run_time', 'range': [827, 827], 'children': []}, {'type': 'CallExpression', 'name': 'stats.get', 'range': [828, 835], 'children': [{'type': 'MemberExpression', 'name': 'stats.get', 'range': [828, 830], 'children': []}, {'type': 'ArgumentList', 'name': '', 'range': [831, 835], 'children': [{'type': 'StringLiteral', 'name': '"nodes_walltime"', 'range': [832, 832], 'children': []}, {'type': 'Identifier', 'name': 'total_run_time', 'range': [834, 834], 'children': []}]}]}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [838, 901], 'children': [{'type': 'NewExpression', 'name': 'GraphExecution', 'range': [839, 900], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [840, 900], 'children': [{'type': 'KeywordArgument', 'name': 'id', 'range': [842, 847], 'children': [{'type': 'MemberExpression', 'name': 'execution.id', 'range': [844, 846], 'children': []}]}, {'type': 'KeywordArgument', 'name': 'execution_id', 'range': [849, 854], 'children': [{'type': 'MemberExpression', 'name': 'execution.id', 'range': [852, 854], 'children': []}]}, {'type': 'KeywordArgument', 'name': 'started_at', 'range': [856, 859], 'children': [{'type': 'Identifier', 'name': 'start_time', 'range': [858, 858], 'children': []}]}, {'type': 'KeywordArgument', 'name': 'ended_at', 'range': [861, 864], 'children': [{'type': 'Identifier', 'name': 'end_time', 'range': [863, 863], 'children': []}]}, {'type': 'KeywordArgument', 'name': 'duration', 'range': [866, 869], 'children': [{'type': 'Identifier', 'name': 'duration', 'range': [868, 868], 'children': []}]}, {'type': 'KeywordArgument', 'name': 'total_run_time', 'range': [871, 874], 'children': [{'type': 'Identifier', 'name': 'total_run_time', 'range': [873, 873], 'children': []}]}, {'type': 'KeywordArgument', 'name': 'status', 'range': [876, 884], 'children': [{'type': 'CallExpression', 'name': 'ExecutionStatus', 'range': [878, 884], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [879, 884], 'children': [{'type': 'MemberExpression', 'name': 'execution.executionStatus', 'range': [880, 882], 'children': []}]}]}]}, {'type': 'KeywordArgument', 'name': 'graph_id', 'range': [886, 891], 'children': [{'type': 'MemberExpression', 'name': 'execution.agentGraphId', 'range': [888, 890], 'children': []}]}, {'type': 'KeywordArgument', 'name': 'graph_version', 'range': [893, 898], 'children': [{'type': 'MemberExpression', 'name': 'execution.agentGraphVersion', 'range': [895, 897], 'children': []}]}]}]}]}]}]}]}
2025-01-08 10:32:25,941 - INFO - Completed main AST analysis flow
2025-01-08 10:32:25,944 - INFO - Successfully processed chunk
2025-01-08 10:32:30,152 - INFO - Step 3 result: {'type': 'Module', 'children': [{'type': 'AsyncFunctionDef', 'name': 'fix_llm_provider_credentials', 'range': [4347, 4717], 'children': [{'type': 'arguments', 'range': [4350, 4351], 'children': []}, {'type': 'Expr', 'range': [4354, 4356], 'children': [{'type': 'Str', 'value': 'Fix node credentials with provider `llm`', 'range': [4355, 4355]}]}, {'type': 'ImportFrom', 'module': 'backend.integrations.credentials_store', 'names': [{'name': 'IntegrationCredentialsStore', 'asname': None}], 'range': [4358, 4365]}, {'type': 'ImportFrom', 'module': '.user', 'names': [{'name': 'get_user_integrations', 'asname': None}], 'range': [4368, 4372]}, {'type': 'Assign', 'targets': [{'type': 'Name', 'id': 'store', 'range': [4375, 4375]}], 'value': {'type': 'Call', 'func': {'type': 'Name', 'id': 'IntegrationCredentialsStore', 'range': [4377, 4377]}, 'args': [], 'keywords': [], 'range': [4377, 4379]}, 'range': [4375, 4379]}, {'type': 'Assign', 'targets': [{'type': 'Name', 'id': 'broken_nodes', 'range': [4382, 4382]}], 'value': {'type': 'Await', 'value': {'type': 'Call', 'func': {'type': 'Attribute', 'value': {'type': 'Call', 'func': {'type': 'Attribute', 'value': {'type': 'Name', 'id': 'prisma', 'range': [4385, 4385]}, 'attr': 'get_client', 'range': [4385, 4387]}, 'args': [], 'keywords': [], 'range': [4385, 4389]}, 'attr': 'query_raw', 'range': [4385, 4391]}, 'args': [{'type': 'Str', 'value': ' \n         SELECT    graph."userId"       user_id, \n                   node.id              node_id, \n                   node."constantInput" node_preset_input \n         FROM      platform."AgentNode"  node \n         LEFT JOIN platform."AgentGraph" graph \n         ON        node."agentGraphId" = graph.id \n         WHERE     node."constantInput"::jsonb->\'credentials\'->>\'provider\' = \'llm\' \n         ORDER BY  graph."userId"; \n         ', 'range': [4394, 4409]}], 'keywords': [], 'range': [4385, 4412]}, 'range': [4385, 4412]}, 'range': [4382, 4412]}, {'type': 'Expr', 'range': [4414, 4420], 'children': [{'type': 'Call', 'func': {'type': 'Attribute', 'value': {'type': 'Name', 'id': 'logger', 'range': [4414, 4414]}, 'attr': 'info', 'range': [4414, 4416]}, 'args': [{'type': 'JoinedStr', 'values': [{'type': 'Str', 'value': 'Fixing LLM credential inputs on ', 'range': [4418, 4418]}, {'type': 'FormattedValue', 'value': {'type': 'Call', 'func': {'type': 'Name', 'id': 'len', 'range': [4418, 4418]}, 'args': [{'type': 'Name', 'id': 'broken_nodes', 'range': [4418, 4418]}], 'keywords': [], 'range': [4418, 4418]}, 'conversion': -1, 'format_spec': None, 'range': [4418, 4418]}, {'type': 'Str', 'value': ' nodes', 'range': [4418, 4418]}], 'range': [4418, 4419]}], 'keywords': [], 'range': [4414, 4420]}]}, {'type': 'Assign', 'targets': [{'type': 'Name', 'id': 'user_id', 'range': [4423, 4423]}], 'value': {'type': 'Str', 'value': '', 'range': [4427, 4427]}, 'range': [4423, 4428]}, {'type': 'Assign', 'targets': [{'type': 'Name', 'id': 'user_integrations', 'range': [4429, 4429]}], 'value': {'type': 'NameConstant', 'value': None, 'range': [4431, 4431]}, 'range': [4429, 4432]}, {'type': 'For', 'target': {'type': 'Name', 'id': 'node', 'range': [4434, 4434]}, 'iter': {'type': 'Name', 'id': 'broken_nodes', 'range': [4436, 4436]}, 'body': [{'type': 'If', 'test': {'type': 'Compare', 'left': {'type': 'Subscript', 'value': {'type': 'Name', 'id': 'node', 'range': [4440, 4440]}, 'slice': {'type': 'Str', 'value': 'user_id', 'range': [4442, 4442]}, 'range': [4440, 4443]}, 'ops': [{'type': 'NotEq', 'range': [4444, 4445]}], 'comparators': [{'type': 'Name', 'id': 'user_id', 'range': [4446, 4446]}], 'range': [4440, 4446]}, 'body': [{'type': 'Assign', 'targets': [{'type': 'Name', 'id': 'user_id', 'range': [4459, 4459]}], 'value': {'type': 'Subscript', 'value': {'type': 'Name', 'id': 'node', 'range': [4461, 4461]}, 'slice': {'type': 'Str', 'value': 'user_id', 'range': [4463, 4463]}, 'range': [4461, 4464]}, 'range': [4459, 4465]}, {'type': 'Assign', 'targets': [{'type': 'Name', 'id': 'user_integrations', 'range': [4466, 4466]}], 'value': {'type': 'Await', 'value': {'type': 'Call', 'func': {'type': 'Name', 'id': 'get_user_integrations', 'range': [4468, 4468]}, 'args': [{'type': 'Name', 'id': 'user_id', 'range': [4471, 4471]}], 'keywords': [], 'range': [4468, 4472]}, 'range': [4468, 4472]}, 'range': [4466, 4473]}], 'orelse': [{'type': 'If', 'test': {'type': 'UnaryOp', 'op': {'type': 'Not', 'range': [4475, 4475]}, 'operand': {'type': 'Name', 'id': 'user_integrations', 'range': [4476, 4476]}, 'range': [4475, 4476]}, 'body': [{'type': 'Raise', 'exc': {'type': 'Call', 'func': {'type': 'Name', 'id': 'RuntimeError', 'range': [4479, 4479]}, 'args': [{'type': 'JoinedStr', 'values': [{'type': 'Str', 'value': 'Impossible state while processing node ', 'range': [4482, 4482]}, {'type': 'FormattedValue', 'value': {'type': 'Name', 'id': 'node', 'range': [4482, 4482]}, 'conversion': -1, 'format_spec': None, 'range': [4482, 4482]}], 'range': [4482, 4483]}], 'keywords': [], 'range': [4479, 4484]}, 'cause': None, 'range': [4479, 4485]}], 'orelse': [], 'range': [4475, 4485]}], 'range': [4439, 4485]}, {'type': 'Assign', 'targets': [{'type': 'Name', 'id': 'node_id', 'range': [4487, 4487]}], 'value': {'type': 'Subscript', 'value': {'type': 'Name', 'id': 'node', 'range': [4491, 4491]}, 'slice': {'type': 'Str', 'value': 'node_id', 'range': [4493, 4493]}, 'range': [4491, 4494]}, 'range': [4487, 4495]}, {'type': 'Assign', 'targets': [{'type': 'Name', 'id': 'node_preset_input', 'range': [4496, 4496]}], 'value': {'type': 'Call', 'func': {'type': 'Attribute', 'value': {'type': 'Name', 'id': 'json', 'range': [4500, 4500]}, 'attr': 'loads', 'range': [4500, 4502]}, 'args': [{'type': 'Subscript', 'value': {'type': 'Name', 'id': 'node', 'range': [4504, 4504]}, 'slice': {'type': 'Str', 'value': 'node_preset_input', 'range': [4506, 4506]}, 'range': [4504, 4507]}], 'keywords': [], 'range': [4500, 4508]}, 'range': [4496, 4509]}, {'type': 'Assign', 'targets': [{'type': 'Name', 'id': 'credentials_meta', 'range': [4510, 4510]}], 'value': {'type': 'Subscript', 'value': {'type': 'Name', 'id': 'node_preset_input', 'range': [4514, 4514]}, 'slice': {'type': 'Str', 'value': 'credentials', 'range': [4516, 4516]}, 'range': [4514, 4517]}, 'range': [4510, 4518]}, {'type': 'Assign', 'targets': [{'type': 'Name', 'id': 'credentials', 'range': [4520, 4520]}], 'value': {'type': 'Call', 'func': {'type': 'Name', 'id': 'next', 'range': [4522, 4522]}, 'args': [{'type': 'GeneratorExp', 'elt': {'type': 'Name', 'id': 'c', 'range': [4527, 4527]}, 'generators': [{'type': 'comprehension', 'target': {'type': 'Name', 'id': 'c', 'range': [4530, 4530]}, 'iter': {'type': 'Attribute', 'value': {'type': 'Name', 'id': 'user_integrations', 'range': [4532, 4532]}, 'attr': 'credentials', 'range': [4532, 4534]}, 'ifs': [{'type': 'Compare', 'left': {'type': 'Attribute', 'value': {'type': 'Name', 'id': 'c', 'range': [4537, 4537]}, 'attr': 'id', 'range': [4537, 4539]}, 'ops': [{'type': 'Eq', 'range': [4540, 4541]}], 'comparators': [{'type': 'Subscript', 'value': {'type': 'Name', 'id': 'credentials_meta', 'range': [4542, 4542]}, 'slice': {'type': 'Str', 'value': 'id', 'range': [4544, 4544]}, 'range': [4542, 4545]}], 'range': [4537, 4545]}], 'range': [4530, 4545]}], 'range': [4525, 4547]}, {'type': 'NameConstant', 'value': None, 'range': [4550, 4550]}], 'keywords': [], 'range': [4522, 4553]}, 'range': [4520, 4554]}, {'type': 'If', 'test': {'type': 'UnaryOp', 'op': {'type': 'Not', 'range': [4556, 4556]}, 'operand': {'type': 'Name', 'id': 'credentials', 'range': [4557, 4557]}, 'range': [4556, 4557]}, 'body': [{'type': 'Continue', 'range': [4560, 4560]}], 'orelse': [], 'range': [4556, 4561]}, {'type': 'If', 'test': {'type': 'Compare', 'left': {'type': 'Attribute', 'value': {'type': 'Name', 'id': 'credentials', 'range': [4563, 4563]}, 'attr': 'type', 'range': [4563, 4565]}, 'ops': [{'type': 'NotEq', 'range': [4566, 4567]}], 'comparators': [{'type': 'Str', 'value': 'api_key', 'range': [4568, 4568]}], 'range': [4563, 4568]}, 'body': [{'type': 'Expr', 'range': [4571, 4582], 'children': [{'type': 'Call', 'func': {'type': 'Attribute', 'value': {'type': 'Name', 'id': 'logger', 'range': [4571, 4571]}, 'attr': 'warning', 'range': [4571, 4573]}, 'args': [{'type': 'JoinedStr', 'values': [{'type': 'Str', 'value': 'User ', 'range': [4576, 4576]}, {'type': 'FormattedValue', 'value': {'type': 'Name', 'id': 'user_id', 'range': [4576, 4576]}, 'conversion': -1, 'format_spec': None, 'range': [4576, 4576]}, {'type': 'Str', 'value': ' credentials ', 'range': [4576, 4576]}, {'type': 'FormattedValue', 'value': {'type': 'Attribute', 'value': {'type': 'Name', 'id': 'credentials', 'range': [4576, 4576]}, 'attr': 'id', 'range': [4576, 4576]}, 'conversion': -1, 'format_spec': None, 'range': [4576, 4576]}, {'type': 'Str', 'value': " with provider 'llm' ", 'range': [4576, 4576]}, {'type': 'Str', 'value': "has invalid type '", 'range': [4579, 4579]}, {'type': 'FormattedValue', 'value': {'type': 'Attribute', 'value': {'type': 'Name', 'id': 'credentials', 'range': [4579, 4579]}, 'attr': 'type', 'range': [4579, 4579]}, 'conversion': -1, 'format_spec': None, 'range': [4579, 4579]}, {'type': 'Str', 'value': "'", 'range': [4579, 4579]}], 'range': [4576, 4580]}], 'keywords': [], 'range': [4571, 4582]}]}, {'type': 'Continue', 'range': [4584, 4584]}], 'orelse': [], 'range': [4563, 4585]}, {'type': 'Assign', 'targets': [{'type': 'Name', 'id': 'api_key', 'range': [4587, 4587]}], 'value': {'type': 'Call', 'func': {'type': 'Attribute', 'value': {'type': 'Attribute', 'value': {'type': 'Name', 'id': 'credentials', 'range': [4589, 4589]}, 'attr': 'api_key', 'range': [4589, 4591]}, 'attr': 'get_secret_value', 'range': [4589, 4593]}, 'args': [], 'keywords': [], 'range': [4589, 4595]}, 'range': [4587, 4596]}, {'type': 'If', 'test': {'type': 'Call', 'func': {'type': 'Attribute', 'value': {'type': 'Name', 'id': 'api_key', 'range': [4598, 4598]}, 'attr': 'startswith', 'range': [4598, 4600]}, 'args': [{'type': 'Str', 'value': 'sk-ant-api03-', 'range': [4602, 4602]}], 'keywords': [], 'range': [4598, 4603]}, 'body': [{'type': 'Assign', 'targets': [{'type': 'Attribute', 'value': {'type': 'Name', 'id': 'credentials', 'range': [4606, 4606]}, 'attr': 'provider', 'range': [4606, 4608]}], 'value': {'type': 'Subscript', 'value': {'type': 'Name', 'id': 'credentials_meta', 'range': [4610, 4610]}, 'slice': {'type': 'Str', 'value': 'provider', 'range': [4612, 4612]}, 'range': [4610, 4613]}, 'range': [4606, 4614]}, {'type': 'Assign', 'targets': [{'type': 'Subscript', 'value': {'type': 'Name', 'id': 'credentials_meta', 'range': [4610, 4610]}, 'slice': {'type': 'Str', 'value': 'provider', 'range': [4612, 4612]}, 'range': [4610, 4613]}], 'value': {'type': 'Str', 'value': 'anthropic', 'range': [4615, 4615]}, 'range': [4610, 4616]}], 'orelse': [{'type': 'If', 'test': {'type': 'Call', 'func': {'type': 'Attribute', 'value': {'type': 'Name', 'id': 'api_key', 'range': [4618, 4618]}, 'attr': 'startswith', 'range': [4618, 4620]}, 'args': [{'type': 'Str', 'value': 'sk-', 'range': [4622, 4622]}], 'keywords': [], 'range': [4618, 4623]}, 'body': [{'type': 'Assign', 'targets': [{'type': 'Attribute', 'value': {'type': 'Name', 'id': 'credentials', 'range': [4626, 4626]}, 'attr': 'provider', 'range': [4626, 4628]}], 'value': {'type': 'Subscript', 'value': {'type': 'Name', 'id': 'credentials_meta', 'range': [4630, 4630]}, 'slice': {'type': 'Str', 'value': 'provider', 'range': [4632, 4632]}, 'range': [4630, 4633]}, 'range': [4626, 4634]}, {'type': 'Assign', 'targets': [{'type': 'Subscript', 'value': {'type': 'Name', 'id': 'credentials_meta', 'range': [4630, 4630]}, 'slice': {'type': 'Str', 'value': 'provider', 'range': [4632, 4632]}, 'range': [4630, 4633]}], 'value': {'type': 'Str', 'value': 'openai', 'range': [4635, 4635]}, 'range': [4630, 4636]}], 'orelse': [{'type': 'If', 'test': {'type': 'Call', 'func': {'type': 'Attribute', 'value': {'type': 'Name', 'id': 'api_key', 'range': [4638, 4638]}, 'attr': 'startswith', 'range': [4638, 4640]}, 'args': [{'type': 'Str', 'value': 'gsk_', 'range': [4642, 4642]}], 'keywords': [], 'range': [4638, 4643]}, 'body': [{'type': 'Assign', 'targets': [{'type': 'Attribute', 'value': {'type': 'Name', 'id': 'credentials', 'range': [4646, 4646]}, 'attr': 'provider', 'range': [4646, 4648]}], 'value': {'type': 'Subscript', 'value': {'type': 'Name', 'id': 'credentials_meta', 'range': [4650, 4650]}, 'slice': {'type': 'Str', 'value': 'provider', 'range': [4652, 4652]}, 'range': [4650, 4653]}, 'range': [4646, 4654]}, {'type': 'Assign', 'targets': [{'type': 'Subscript', 'value': {'type': 'Name', 'id': 'credentials_meta', 'range': [4650, 4650]}, 'slice': {'type': 'Str', 'value': 'provider', 'range': [4652, 4652]}, 'range': [4650, 4653]}], 'value': {'type': 'Str', 'value': 'groq', 'range': [4655, 4655]}, 'range': [4650, 4656]}], 'orelse': [{'type': 'Expr', 'range': [4660, 4669], 'children': [{'type': 'Call', 'func': {'type': 'Attribute', 'value': {'type': 'Name', 'id': 'logger', 'range': [4660, 4660]}, 'attr': 'warning', 'range': [4660, 4662]}, 'args': [{'type': 'JoinedStr', 'values': [{'type': 'Str', 'value': 'Could not identify provider from key prefix ', 'range': [4665, 4665]}, {'type': 'FormattedValue', 'value': {'type': 'Subscript', 'value': {'type': 'Name', 'id': 'api_key', 'range': [4665, 4665]}, 'slice': {'type': 'Slice', 'lower': {'type': 'Num', 'n': 0, 'range': [4665, 4665]}, 'upper': {'type': 'Num', 'n': 13, 'range': [4665, 4665]}, 'step': None, 'range': [4665, 4665]}, 'range': [4665, 4665]}, 'conversion': -1, 'format_spec': None, 'range': [4665, 4665]}, {'type': 'Str', 'value': '*****', 'range': [4665, 4665]}], 'range': [4665, 4666]}], 'keywords': [], 'range': [4660, 4669]}]}, {'type': 'Continue', 'range': [4670, 4670]}], 'range': [4638, 4671]}], 'range': [4618, 4671]}], 'range': [4598, 4671]}, {'type': 'Expr', 'range': [4673, 4681], 'children': [{'type': 'Call', 'func': {'type': 'Attribute', 'value': {'type': 'Name', 'id': 'store', 'range': [4673, 4673]}, 'attr': 'update_creds', 'range': [4673, 4675]}, 'args': [{'type': 'Name', 'id': 'user_id', 'range': [4677, 4677]}, {'type': 'Name', 'id': 'credentials', 'range': [4679, 4679]}], 'keywords': [], 'range': [4673, 4680]}]}, {'type': 'Expr', 'range': [4682, 4716], 'children': [{'type': 'Await', 'value': {'type': 'Call', 'func': {'type': 'Attribute', 'value': {'type': 'Call', 'func': {'type': 'Attribute', 'value': {'type': 'Name', 'id': 'AgentNode', 'range': [4683, 4683]}, 'attr': 'prisma', 'range': [4683, 4685]}, 'args': [], 'keywords': [], 'range': [4683, 4687]}, 'attr': 'update', 'range': [4683, 4689]}, 'args': [{'type': 'keyword', 'arg': 'where', 'value': {'type': 'Dict', 'keys': [{'type': 'Str', 'value': 'id', 'range': [4695, 4695]}], 'values': [{'type': 'Name', 'id': 'node_id', 'range': [4697, 4697]}], 'range': [4694, 4698]}, 'range': [4692, 4698]}, {'type': 'keyword', 'arg': 'data', 'value': {'type': 'Dict', 'keys': [{'type': 'Str', 'value': 'constantInput', 'range': [4704, 4704]}], 'values': [{'type': 'Call', 'func': {'type': 'Attribute', 'value': {'type': 'Name', 'id': 'json', 'range': [4706, 4706]}, 'attr': 'dumps', 'range': [4706, 4708]}, 'args': [{'type': 'Name', 'id': 'node_preset_input', 'range': [4710, 4710]}], 'keywords': [], 'range': [4706, 4711]}], 'range': [4703, 4712]}, 'range': [4701, 4712]}], 'keywords': [], 'range': [4683, 4715]}, 'range': [4682, 4716]}]}], 'range': [4433, 4717]}]}]}
2025-01-08 10:32:30,152 - INFO - Starting Step 4: AST normalization
2025-01-08 10:32:39,789 - INFO - Step 3 result: {'type': 'Program', 'children': [{'type': 'ClassDeclaration', 'name': 'GraphModel', 'range': [1323, 2894], 'children': [{'type': 'ClassBody', 'children': [{'type': 'PropertyDefinition', 'name': 'user_id', 'range': [1330, 1332], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1332, 1332]}]}, {'type': 'PropertyDefinition', 'name': 'nodes', 'range': [1334, 1342], 'children': [{'type': 'TypeAnnotation', 'name': 'list', 'range': [1336, 1336], 'children': [{'type': 'TypeParameter', 'name': 'NodeModel', 'range': [1338, 1338]}]}]}, {'type': 'MethodDefinition', 'name': 'starting_nodes', 'range': [1352, 1445], 'children': [{'type': 'ReturnTypeAnnotation', 'name': 'list', 'range': [1359, 1359], 'children': [{'type': 'TypeParameter', 'name': 'Node', 'range': [1361, 1361]}]}, {'type': 'BlockStatement', 'children': [{'type': 'VariableDeclaration', 'name': 'outbound_nodes', 'range': [1365, 1377], 'children': [{'type': 'ObjectExpression', 'children': [{'type': 'Property', 'name': 'sink_id', 'range': [1368, 1370], 'children': [{'type': 'Identifier', 'name': 'link', 'range': [1368, 1368]}]}]}]}, {'type': 'VariableDeclaration', 'name': 'input_nodes', 'range': [1379, 1416], 'children': [{'type': 'ObjectExpression', 'children': [{'type': 'Property', 'name': 'id', 'range': [1383, 1385], 'children': [{'type': 'Identifier', 'name': 'v', 'range': [1383, 1383]}]}]}]}, {'type': 'ReturnStatement', 'range': [1418, 1444], 'children': [{'type': 'ArrayExpression', 'children': [{'type': 'Identifier', 'name': 'node', 'range': [1421, 1421]}]}]}]}]}, {'type': 'MethodDefinition', 'name': 'reassign_ids', 'range': [1447, 1634], 'children': [{'type': 'Parameter', 'name': 'user_id', 'range': [1452, 1454], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1454, 1454]}]}, {'type': 'Parameter', 'name': 'reassign_graph_id', 'range': [1456, 1460], 'children': [{'type': 'TypeAnnotation', 'name': 'bool', 'range': [1458, 1458]}]}, {'type': 'BlockStatement', 'children': [{'type': 'VariableDeclaration', 'name': 'id_map', 'range': [1474, 1495], 'children': [{'type': 'ObjectExpression', 'children': [{'type': 'Property', 'name': 'id', 'range': [1477, 1479], 'children': [{'type': 'Identifier', 'name': 'node', 'range': [1477, 1477]}]}]}]}, {'type': 'IfStatement', 'range': [1497, 1513], 'children': [{'type': 'AssignmentExpression', 'name': 'id', 'range': [1501, 1512], 'children': [{'type': 'Identifier', 'name': 'self', 'range': [1501, 1501]}, {'type': 'CallExpression', 'name': 'uuid4', 'range': [1505, 1511], 'children': [{'type': 'Identifier', 'name': 'uuid', 'range': [1505, 1505]}]}]}]}, {'type': 'ForStatement', 'range': [1520, 1538], 'children': [{'type': 'AssignmentExpression', 'name': 'id', 'range': [1528, 1537], 'children': [{'type': 'Identifier', 'name': 'node', 'range': [1528, 1528]}, {'type': 'Identifier', 'name': 'id_map', 'range': [1532, 1532]}]}]}, {'type': 'ForStatement', 'range': [1545, 1574], 'children': [{'type': 'AssignmentExpression', 'name': 'source_id', 'range': [1553, 1562], 'children': [{'type': 'Identifier', 'name': 'link', 'range': [1553, 1553]}, {'type': 'Identifier', 'name': 'id_map', 'range': [1557, 1557]}]}, {'type': 'AssignmentExpression', 'name': 'sink_id', 'range': [1564, 1573], 'children': [{'type': 'Identifier', 'name': 'link', 'range': [1564, 1564]}, {'type': 'Identifier', 'name': 'id_map', 'range': [1568, 1568]}]}]}, {'type': 'ForStatement', 'range': [1584, 1615], 'children': [{'type': 'IfStatement', 'range': [1592, 1605], 'children': [{'type': 'AssignmentExpression', 'name': 'input_default', 'range': [1607, 1614], 'children': [{'type': 'Identifier', 'name': 'node', 'range': [1607, 1607]}, {'type': 'Identifier', 'name': 'user_id', 'range': [1611, 1611]}]}]}]}, {'type': 'ExpressionStatement', 'range': [1629, 1633], 'children': [{'type': 'CallExpression', 'name': 'validate_graph', 'range': [1629, 1633], 'children': [{'type': 'Identifier', 'name': 'self', 'range': [1629, 1629]}]}]}]}]}, {'type': 'MethodDefinition', 'name': 'validate_graph', 'range': [1636, 2138], 'children': [{'type': 'Parameter', 'name': 'for_run', 'range': [1641, 1645], 'children': [{'type': 'TypeAnnotation', 'name': 'bool', 'range': [1643, 1643]}]}, {'type': 'BlockStatement', 'children': [{'type': 'FunctionDeclaration', 'name': 'sanitize', 'range': [1649, 1682], 'children': [{'type': 'Parameter', 'name': 'name', 'range': [1652, 1652]}, {'type': 'BlockStatement', 'children': [{'type': 'ReturnStatement', 'range': [1656, 1681], 'children': [{'type': 'CallExpression', 'name': 'split', 'range': [1657, 1660], 'children': [{'type': 'Identifier', 'name': 'name', 'range': [1657, 1657]}]}, {'type': 'CallExpression', 'name': 'split', 'range': [1666, 1669], 'children': [{'type': 'Identifier', 'name': 'name', 'range': [1666, 1666]}]}, {'type': 'CallExpression', 'name': 'split', 'range': [1675, 1678], 'children': [{'type': 'Identifier', 'name': 'name', 'range': [1675, 1675]}]}]}]}]}, {'type': 'VariableDeclaration', 'name': 'input_links', 'range': [1684, 1690], 'children': [{'type': 'CallExpression', 'name': 'defaultdict', 'range': [1684, 1690], 'children': [{'type': 'Identifier', 'name': 'list', 'range': [1688, 1688]}]}]}, {'type': 'ForStatement', 'range': [1691, 1710], 'children': [{'type': 'ExpressionStatement', 'range': [1699, 1709], 'children': [{'type': 'CallExpression', 'name': 'append', 'range': [1705, 1709], 'children': [{'type': 'Identifier', 'name': 'link', 'range': [1705, 1705]}]}]}]}, {'type': 'ForStatement', 'range': [1726, 1906], 'children': [{'type': 'VariableDeclaration', 'name': 'block', 'range': [1734, 1741], 'children': [{'type': 'CallExpression', 'name': 'get_block', 'range': [1736, 1741], 'children': [{'type': 'Identifier', 'name': 'node', 'range': [1736, 1736]}]}]}, {'type': 'IfStatement', 'range': [1743, 1755], 'children': [{'type': 'ThrowStatement', 'range': [1749, 1754], 'children': [{'type': 'NewExpression', 'name': 'ValueError', 'range': [1749, 1754], 'children': [{'type': 'TemplateLiteral', 'range': [1752, 1754]}]}]}]}, {'type': 'VariableDeclaration', 'name': 'provided_inputs', 'range': [1757, 1799], 'children': [{'type': 'CallExpression', 'name': 'set', 'range': [1759, 1799], 'children': [{'type': 'ArrayExpression', 'children': [{'type': 'CallExpression', 'name': 'sanitize', 'range': [1763, 1765], 'children': [{'type': 'Identifier', 'name': 'name', 'range': [1763, 1763]}]}]}, {'type': 'ArrayExpression', 'children': [{'type': 'CallExpression', 'name': 'sanitize', 'range': [1777, 1782], 'children': [{'type': 'Identifier', 'name': 'link', 'range': [1777, 1777]}]}]}]}]}, {'type': 'ForStatement', 'range': [1801, 1895], 'children': [{'type': 'IfStatement', 'range': [1813, 1894], 'children': [{'type': 'ThrowStatement', 'range': [1898, 1905], 'children': [{'type': 'NewExpression', 'name': 'ValueError', 'range': [1898, 1905], 'children': [{'type': 'TemplateLiteral', 'range': [1903, 1905]}]}]}]}]}]}, {'type': 'VariableDeclaration', 'name': 'input_schema', 'range': [1908, 1924], 'children': [{'type': 'MemberExpression', 'name': 'model_fields', 'range': [1920, 1924], 'children': [{'type': 'Identifier', 'name': 'input_schema', 'range': [1918, 1918]}]}]}, {'type': 'VariableDeclaration', 'name': 'required_fields', 'range': [1925, 1934], 'children': [{'type': 'CallExpression', 'name': 'get_required_fields', 'range': [1930, 1934], 'children': [{'type': 'Identifier', 'name': 'input_schema', 'range': [1928, 1928]}]}]}, {'type': 'FunctionDeclaration', 'name': 'has_value', 'range': [1936, 2005], 'children': [{'type': 'Parameter', 'name': 'name', 'range': [1939, 1939]}, {'type': 'BlockStatement', 'children': [{'type': 'ReturnStatement', 'range': [1943, 2004], 'children': [{'type': 'LogicalExpression', 'operator': 'or', 'range': [1945, 2003], 'children': [{'type': 'LogicalExpression', 'operator': 'and', 'range': [1945, 1987], 'children': [{'type': 'BinaryExpression', 'operator': '!=', 'range': [1950, 1950], 'children': [{'type': 'Identifier', 'name': 'node', 'range': [1946, 1946]}]}, {'type': 'BinaryExpression', 'operator': 'in', 'range': [1952, 1954], 'children': [{'type': 'Identifier', 'name': 'name', 'range': [1952, 1952]}, {'type': 'Identifier', 'name': 'input_default', 'range': [1954, 1954]}]}, {'type': 'BinaryExpression', 'operator': '!=', 'range': [1965, 1967], 'children': [{'type': 'Identifier', 'name': 'input_default', 'range': [1960, 1960]}]}, {'type': 'CallExpression', 'name': 'strip', 'range': [1980, 1981], 'children': [{'type': 'Identifier', 'name': 'str', 'range': [1971, 1971]}]}]}, {'type': 'LogicalExpression', 'operator': 'and', 'range': [1989, 2003], 'children': [{'type': 'BinaryExpression', 'operator': 'in', 'range': [1991, 1993], 'children': [{'type': 'Identifier', 'name': 'name', 'range': [1991, 1991]}, {'type': 'Identifier', 'name': 'input_schema', 'range': [1993, 1993]}]}, {'type': 'BinaryExpression', 'operator': '!=', 'range': [2001, 2003], 'children': [{'type': 'Identifier', 'name': 'default', 'range': [1999, 1999]}]}]}]}]}]}]}, {'type': 'ForStatement', 'range': [2012, 2137], 'children': [{'type': 'VariableDeclaration', 'name': 'field_name', 'range': [2013, 2015]}, {'type': 'VariableDeclaration', 'name': 'field_info', 'range': [2017, 2019]}, {'type': 'IfStatement', 'range': [2058, 2067], 'children': [{'type': 'ContinueStatement', 'range': [2066, 2066]}]}, {'type': 'VariableDeclaration', 'name': 'field_has_value', 'range': [2079, 2085], 'children': [{'type': 'CallExpression', 'name': 'has_value', 'range': [2081, 2085], 'children': [{'type': 'Identifier', 'name': 'field_name', 'range': [2083, 2083]}]}]}, {'type': 'VariableDeclaration', 'name': 'field_is_required', 'range': [2086, 2091], 'children': [{'type': 'BinaryExpression', 'operator': 'in', 'range': [2088, 2091], 'children': [{'type': 'Identifier', 'name': 'field_name', 'range': [2088, 2088]}, {'type': 'Identifier', 'name': 'required_fields', 'range': [2090, 2090]}]}]}, {'type': 'VariableDeclaration', 'name': 'missing_deps', 'range': [2104, 2119], 'children': [{'type': 'ArrayExpression', 'children': [{'type': 'Identifier', 'name': 'dep', 'range': [2107, 2107]}]}]}, {'type': 'IfStatement', 'range': [2120, 2137], 'children': [{'type': 'ThrowStatement', 'range': [2130, 2136], 'children': [{'type': 'NewExpression', 'name': 'ValueError', 'range': [2130, 2136], 'children': [{'type': 'TemplateLiteral', 'range': [2134, 2136]}]}]}]}]}]}]}, {'type': 'MethodDefinition', 'name': 'from_db', 'range': [2504, 2662], 'children': [{'type': 'Parameter', 'name': 'graph', 'range': [2510, 2512], 'children': [{'type': 'TypeAnnotation', 'name': 'AgentGraph', 'range': [2512, 2512]}]}, {'type': 'Parameter', 'name': 'for_export', 'range': [2514, 2518], 'children': [{'type': 'TypeAnnotation', 'name': 'bool', 'range': [2516, 2516]}]}, {'type': 'BlockStatement', 'children': [{'type': 'ReturnStatement', 'range': [2522, 2661], 'children': [{'type': 'NewExpression', 'name': 'GraphModel', 'range': [2523, 2661], 'children': [{'type': 'ObjectExpression', 'children': [{'type': 'Property', 'name': 'id', 'range': [2526, 2531], 'children': [{'type': 'Identifier', 'name': 'graph', 'range': [2526, 2526]}]}, {'type': 'Property', 'name': 'user_id', 'range': [2533, 2538], 'children': [{'type': 'Identifier', 'name': 'graph', 'range': [2533, 2533]}]}, {'type': 'Property', 'name': 'version', 'range': [2540, 2545], 'children': [{'type': 'Identifier', 'name': 'graph', 'range': [2540, 2540]}]}, {'type': 'Property', 'name': 'is_active', 'range': [2547, 2552], 'children': [{'type': 'Identifier', 'name': 'graph', 'range': [2547, 2547]}]}, {'type': 'Property', 'name': 'is_template', 'range': [2554, 2559], 'children': [{'type': 'Identifier', 'name': 'graph', 'range': [2554, 2554]}]}, {'type': 'Property', 'name': 'name', 'range': [2561, 2566], 'children': [{'type': 'Identifier', 'name': 'graph', 'range': [2561, 2561]}]}, {'type': 'Property', 'name': 'description', 'range': [2570, 2575], 'children': [{'type': 'Identifier', 'name': 'graph', 'range': [2570, 2570]}]}, {'type': 'Property', 'name': 'nodes', 'range': [2579, 2607], 'children': [{'type': 'ArrayExpression', 'children': [{'type': 'CallExpression', 'name': 'from_db', 'range': [2583, 2595], 'children': [{'type': 'Identifier', 'name': 'NodeModel', 'range': [2583, 2583]}]}]}]}, {'type': 'Property', 'name': 'links', 'range': [2610, 2657], 'children': [{'type': 'CallExpression', 'name': 'list', 'range': [2612, 2657], 'children': [{'type': 'ObjectExpression', 'children': [{'type': 'CallExpression', 'name': 'from_db', 'range': [2617, 2623], 'children': [{'type': 'Identifier', 'name': 'Link', 'range': [2617, 2617]}]}]}]}]}]}]}]}]}]}, {'type': 'MethodDefinition', 'name': '_process_node', 'range': [2663, 2762], 'children': [{'type': 'Parameter', 'name': 'node', 'range': [2669, 2671], 'children': [{'type': 'TypeAnnotation', 'name': 'AgentNode', 'range': [2671, 2671]}]}, {'type': 'Parameter', 'name': 'for_export', 'range': [2673, 2676]}, {'type': 'BlockStatement', 'children': [{'type': 'IfStatement', 'range': [2682, 2758], 'children': [{'type': 'ExpressionStatement', 'range': [2693, 2740], 'children': [{'type': 'AssignmentExpression', 'name': 'constantInput', 'range': [2699, 2739], 'children': [{'type': 'Identifier', 'name': 'node', 'range': [2699, 2699]}, {'type': 'CallExpression', 'name': 'dumps', 'range': [2734, 2739], 'children': [{'type': 'Identifier', 'name': 'constant_input', 'range': [2734, 2734]}]}]}]}, {'type': 'ExpressionStatement', 'range': [2747, 2757], 'children': [{'type': 'AssignmentExpression', 'name': 'webhookId', 'range': [2747, 2757], 'children': [{'type': 'Identifier', 'name': 'node', 'range': [2747, 2747]}]}]}]}, {'type': 'ReturnStatement', 'range': [2760, 2761], 'children': [{'type': 'Identifier', 'name': 'node', 'range': [2760, 2760]}]}]}]}, {'type': 'MethodDefinition', 'name': '_hide_node_input_credentials', 'range': [2764, 2892], 'children': [{'type': 'Parameter', 'name': 'input_data', 'range': [2770, 2772], 'children': [{'type': 'TypeAnnotation', 'name': 'dict', 'range': [2772, 2772], 'children': [{'type': 'TypeParameter', 'name': 'str', 'range': [2774, 2774]}, {'type': 'TypeParameter', 'name': 'Any', 'range': [2776, 2776]}]}]}, {'type': 'BlockStatement', 'children': [{'type': 'VariableDeclaration', 'name': 'sensitive_keys', 'range': [2789, 2802], 'children': [{'type': 'ArrayExpression', 'children': [{'type': 'Literal', 'value': 'credentials', 'range': [2792, 2792]}, {'type': 'Literal', 'value': 'api_key', 'range': [2794, 2794]}, {'type': 'Literal', 'value': 'password', 'range': [2796, 2796]}, {'type': 'Literal', 'value': 'token', 'range': [2798, 2798]}, {'type': 'Literal', 'value': 'secret', 'range': [2800, 2800]}]}]}, {'type': 'VariableDeclaration', 'name': 'result', 'range': [2803, 2807]}, {'type': 'ForStatement', 'range': [2808, 2889], 'children': [{'type': 'VariableDeclaration', 'name': 'key', 'range': [2809, 2811]}, {'type': 'VariableDeclaration', 'name': 'value', 'range': [2813, 2815]}, {'type': 'IfStatement', 'range': [2820, 2878], 'children': [{'type': 'ExpressionStatement', 'range': [2829, 2839], 'children': [{'type': 'AssignmentExpression', 'name': 'key', 'range': [2830, 2839], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [2830, 2830]}, {'type': 'CallExpression', 'name': '_hide_node_input_credentials', 'range': [2834, 2839], 'children': [{'type': 'Identifier', 'name': 'value', 'range': [2836, 2836]}]}]}]}, {'type': 'IfStatement', 'range': [2842, 2877], 'children': [{'type': 'ContinueStatement', 'range': [2878, 2878]}]}, {'type': 'ExpressionStatement', 'range': [2880, 2888], 'children': [{'type': 'AssignmentExpression', 'name': 'key', 'range': [2881, 2888], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [2881, 2881]}, {'type': 'Identifier', 'name': 'value', 'range': [2885, 2885]}]}]}]}]}, {'type': 'ReturnStatement', 'range': [2890, 2891], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [2890, 2890]}]}]}]}]}]}]}
2025-01-08 10:32:39,789 - INFO - Starting Step 4: AST normalization
2025-01-08 10:32:52,793 - INFO - Step 4 result: {'type': 'Program', 'name': 'Graph', 'range': [904, 1322], 'children': [{'type': 'ClassDecl', 'name': 'Graph', 'range': [904, 956], 'children': [{'type': 'VariableDecl', 'name': 'version', 'range': [911, 915], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [913, 913], 'children': []}, {'type': 'AssignmentExpression', 'name': '=', 'range': [914, 914], 'children': [{'type': 'Literal', 'name': '1', 'range': [915, 915], 'children': []}]}]}, {'type': 'VariableDecl', 'name': 'is_active', 'range': [917, 921], 'children': [{'type': 'TypeAnnotation', 'name': 'bool', 'range': [919, 919], 'children': []}, {'type': 'AssignmentExpression', 'name': '=', 'range': [920, 920], 'children': [{'type': 'Literal', 'name': 'True', 'range': [921, 921], 'children': []}]}]}, {'type': 'VariableDecl', 'name': 'is_template', 'range': [923, 927], 'children': [{'type': 'TypeAnnotation', 'name': 'bool', 'range': [925, 925], 'children': []}, {'type': 'AssignmentExpression', 'name': '=', 'range': [926, 926], 'children': [{'type': 'Literal', 'name': 'False', 'range': [927, 927], 'children': []}]}]}, {'type': 'VariableDecl', 'name': 'name', 'range': [929, 931], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [931, 931], 'children': []}]}, {'type': 'VariableDecl', 'name': 'description', 'range': [933, 935], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [935, 935], 'children': []}]}, {'type': 'VariableDecl', 'name': 'nodes', 'range': [937, 945], 'children': [{'type': 'TypeAnnotation', 'name': 'list', 'range': [939, 939], 'children': [{'type': 'TypeArgument', 'name': 'Node', 'range': [941, 941], 'children': []}]}, {'type': 'AssignmentExpression', 'name': '=', 'range': [943, 943], 'children': [{'type': 'ArrayExpression', 'name': '[]', 'range': [944, 945], 'children': []}]}]}, {'type': 'VariableDecl', 'name': 'links', 'range': [947, 955], 'children': [{'type': 'TypeAnnotation', 'name': 'list', 'range': [949, 949], 'children': [{'type': 'TypeArgument', 'name': 'Link', 'range': [951, 951], 'children': []}]}, {'type': 'AssignmentExpression', 'name': '=', 'range': [953, 953], 'children': [{'type': 'ArrayExpression', 'name': '[]', 'range': [954, 955], 'children': []}]}]}]}, {'type': 'FunctionDecl', 'name': 'input_schema', 'range': [964, 1037], 'children': [{'type': 'Decorator', 'name': '@computed_field', 'range': [958, 959], 'children': []}, {'type': 'Decorator', 'name': '@property', 'range': [961, 962], 'children': []}, {'type': 'Parameter', 'name': 'self', 'range': [967, 967], 'children': []}, {'type': 'ReturnType', 'name': 'dict', 'range': [971, 971], 'children': [{'type': 'TypeArgument', 'name': 'str', 'range': [973, 973], 'children': []}, {'type': 'TypeArgument', 'name': 'Any', 'range': [975, 975], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [978, 1037], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [979, 979], 'children': [{'type': 'CallExpression', 'name': '_generate_schema', 'range': [982, 1036], 'children': [{'type': 'Argument', 'name': 'AgentInputBlock.Input', 'range': [985, 987], 'children': []}, {'type': 'Argument', 'name': 'ListComprehension', 'range': [990, 1033], 'children': [{'type': 'Identifier', 'name': 'node', 'range': [992, 992], 'children': []}, {'type': 'MemberExpression', 'name': 'input_default', 'range': [993, 994], 'children': []}, {'type': 'ForStatement', 'name': 'for', 'range': [996, 1002], 'children': [{'type': 'Identifier', 'name': 'node', 'range': [997, 997], 'children': []}, {'type': 'Identifier', 'name': 'self.nodes', 'range': [999, 1001], 'children': []}]}, {'type': 'IfStatement', 'name': 'if', 'range': [1003, 1032], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [1007, 1007], 'children': [{'type': 'CallExpression', 'name': 'get_block', 'range': [1008, 1013], 'children': [{'type': 'Argument', 'name': 'node.block_id', 'range': [1010, 1012], 'children': []}]}]}, {'type': 'LogicalExpression', 'name': 'and', 'range': [1016, 1016], 'children': [{'type': 'MemberExpression', 'name': 'block_type', 'range': [1018, 1019], 'children': []}, {'type': 'BinaryExpression', 'name': '==', 'range': [1020, 1021], 'children': [{'type': 'Identifier', 'name': 'BlockType.INPUT', 'range': [1022, 1024], 'children': []}]}]}, {'type': 'LogicalExpression', 'name': 'and', 'range': [1026, 1026], 'children': [{'type': 'Literal', 'name': '"name"', 'range': [1027, 1027], 'children': []}, {'type': 'MemberExpression', 'name': 'input_default', 'range': [1029, 1031], 'children': []}]}]}]}]}]}]}]}, {'type': 'FunctionDecl', 'name': 'output_schema', 'range': [1045, 1118], 'children': [{'type': 'Decorator', 'name': '@computed_field', 'range': [1039, 1040], 'children': []}, {'type': 'Decorator', 'name': '@property', 'range': [1042, 1043], 'children': []}, {'type': 'Parameter', 'name': 'self', 'range': [1048, 1048], 'children': []}, {'type': 'ReturnType', 'name': 'dict', 'range': [1052, 1052], 'children': [{'type': 'TypeArgument', 'name': 'str', 'range': [1054, 1054], 'children': []}, {'type': 'TypeArgument', 'name': 'Any', 'range': [1056, 1056], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [1059, 1118], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [1060, 1060], 'children': [{'type': 'CallExpression', 'name': '_generate_schema', 'range': [1063, 1117], 'children': [{'type': 'Argument', 'name': 'AgentOutputBlock.Input', 'range': [1066, 1068], 'children': []}, {'type': 'Argument', 'name': 'ListComprehension', 'range': [1071, 1114], 'children': [{'type': 'Identifier', 'name': 'node', 'range': [1073, 1073], 'children': []}, {'type': 'MemberExpression', 'name': 'input_default', 'range': [1074, 1075], 'children': []}, {'type': 'ForStatement', 'name': 'for', 'range': [1077, 1083], 'children': [{'type': 'Identifier', 'name': 'node', 'range': [1078, 1078], 'children': []}, {'type': 'Identifier', 'name': 'self.nodes', 'range': [1080, 1082], 'children': []}]}, {'type': 'IfStatement', 'name': 'if', 'range': [1084, 1113], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [1088, 1088], 'children': [{'type': 'CallExpression', 'name': 'get_block', 'range': [1089, 1094], 'children': [{'type': 'Argument', 'name': 'node.block_id', 'range': [1091, 1093], 'children': []}]}]}, {'type': 'LogicalExpression', 'name': 'and', 'range': [1097, 1097], 'children': [{'type': 'MemberExpression', 'name': 'block_type', 'range': [1099, 1100], 'children': []}, {'type': 'BinaryExpression', 'name': '==', 'range': [1101, 1102], 'children': [{'type': 'Identifier', 'name': 'BlockType.OUTPUT', 'range': [1103, 1105], 'children': []}]}]}, {'type': 'LogicalExpression', 'name': 'and', 'range': [1107, 1107], 'children': [{'type': 'Literal', 'name': '"name"', 'range': [1108, 1108], 'children': []}, {'type': 'MemberExpression', 'name': 'input_default', 'range': [1110, 1112], 'children': []}]}]}]}]}]}]}]}, {'type': 'FunctionDecl', 'name': '_generate_schema', 'range': [1123, 1320], 'children': [{'type': 'Decorator', 'name': '@staticmethod', 'range': [1120, 1121], 'children': []}, {'type': 'Parameter', 'name': 'type_class', 'range': [1127, 1127], 'children': [{'type': 'TypeAnnotation', 'name': 'Type', 'range': [1129, 1129], 'children': [{'type': 'TypeArgument', 'name': 'AgentInputBlock.Input', 'range': [1131, 1133], 'children': []}, {'type': 'TypeArgument', 'name': 'AgentOutputBlock.Input', 'range': [1136, 1138], 'children': []}]}]}, {'type': 'Parameter', 'name': 'data', 'range': [1144, 1144], 'children': [{'type': 'TypeAnnotation', 'name': 'list', 'range': [1146, 1146], 'children': [{'type': 'TypeArgument', 'name': 'dict', 'range': [1148, 1148], 'children': []}]}]}, {'type': 'ReturnType', 'name': 'dict', 'range': [1155, 1155], 'children': [{'type': 'TypeArgument', 'name': 'str', 'range': [1157, 1157], 'children': []}, {'type': 'TypeArgument', 'name': 'Any', 'range': [1159, 1159], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [1162, 1320], 'children': [{'type': 'VariableDecl', 'name': 'props', 'range': [1163, 1165], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [1164, 1164], 'children': [{'type': 'ArrayExpression', 'name': '[]', 'range': [1165, 1165], 'children': []}]}]}, {'type': 'ForStatement', 'name': 'for', 'range': [1168, 1172], 'children': [{'type': 'Identifier', 'name': 'p', 'range': [1169, 1169], 'children': []}, {'type': 'Identifier', 'name': 'data', 'range': [1171, 1171], 'children': []}]}, {'type': 'TryStatement', 'name': 'try', 'range': [1174, 1202], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [1176, 1188], 'children': [{'type': 'ExpressionStatement', 'name': '', 'range': [1177, 1187], 'children': [{'type': 'CallExpression', 'name': 'append', 'range': [1179, 1187], 'children': [{'type': 'Argument', 'name': 'type_class', 'range': [1181, 1181], 'children': []}, {'type': 'Argument', 'name': 'p', 'range': [1185, 1185], 'children': []}]}]}]}, {'type': 'CatchClause', 'name': 'except', 'range': [1189, 1202], 'children': [{'type': 'Identifier', 'name': 'Exception', 'range': [1190, 1190], 'children': []}, {'type': 'Identifier', 'name': 'e', 'range': [1192, 1192], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [1194, 1202], 'children': [{'type': 'ExpressionStatement', 'name': '', 'range': [1195, 1201], 'children': [{'type': 'CallExpression', 'name': 'warning', 'range': [1197, 1201], 'children': [{'type': 'Argument', 'name': 'f"Invalid {type_class}: {p}, {e}"', 'range': [1199, 1200], 'children': []}]}]}]}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [1204, 1204], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [1205, 1319], 'children': [{'type': 'Property', 'name': 'type', 'range': [1207, 1207], 'children': [{'type': 'Literal', 'name': '"object"', 'range': [1209, 1209], 'children': []}]}, {'type': 'Property', 'name': 'properties', 'range': [1212, 1212], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [1214, 1297], 'children': [{'type': 'Property', 'name': 'p.name', 'range': [1216, 1218], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [1220, 1290], 'children': [{'type': 'Property', 'name': 'secret', 'range': [1222, 1222], 'children': [{'type': 'MemberExpression', 'name': 'p.secret', 'range': [1224, 1226], 'children': []}]}, {'type': 'Property', 'name': 'advanced', 'range': [1229, 1229], 'children': [{'type': 'MemberExpression', 'name': 'p.advanced', 'range': [1231, 1233], 'children': []}]}, {'type': 'Property', 'name': 'title', 'range': [1236, 1236], 'children': [{'type': 'LogicalExpression', 'name': 'or', 'range': [1241, 1241], 'children': [{'type': 'MemberExpression', 'name': 'p.title', 'range': [1238, 1240], 'children': []}, {'type': 'MemberExpression', 'name': 'p.name', 'range': [1243, 1244], 'children': []}]}]}, {'type': 'SpreadElement', 'name': '...', 'range': [1247, 1248], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [1250, 1264], 'children': [{'type': 'Property', 'name': 'description', 'range': [1251, 1251], 'children': [{'type': 'MemberExpression', 'name': 'p.description', 'range': [1253, 1255], 'children': []}]}]}]}, {'type': 'SpreadElement', 'name': '...', 'range': [1267, 1268], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [1270, 1287], 'children': [{'type': 'Property', 'name': 'default', 'range': [1271, 1271], 'children': [{'type': 'MemberExpression', 'name': 'p.value', 'range': [1273, 1275], 'children': []}]}]}]}]}]}]}]}, {'type': 'Property', 'name': 'required', 'range': [1300, 1300], 'children': [{'type': 'ArrayExpression', 'name': '', 'range': [1302, 1316], 'children': [{'type': 'MemberExpression', 'name': 'p.name', 'range': [1303, 1305], 'children': []}]}]}]}]}]}]}]}
2025-01-08 10:32:52,793 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:33:08,428 - INFO - Step 5 result: {'type': 'Program', 'name': 'NodeModel', 'range': [335, 661], 'children': [{'type': 'ClassDecl', 'name': 'NodeModel', 'range': [335, 359], 'children': [{'type': 'PropertyDecl', 'name': 'graph_id', 'range': [342, 344], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [344, 344], 'children': []}]}, {'type': 'PropertyDecl', 'name': 'graph_version', 'range': [346, 348], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [348, 348], 'children': []}]}, {'type': 'PropertyDecl', 'name': 'webhook', 'range': [351, 358], 'children': [{'type': 'TypeAnnotation', 'name': 'Optional[Webhook]', 'range': [353, 356], 'children': []}, {'type': 'AssignmentExpression', 'name': '=', 'range': [357, 358], 'children': [{'type': 'Literal', 'name': 'None', 'range': [358, 358], 'children': []}]}]}]}, {'type': 'FunctionDecl', 'name': 'from_db', 'range': [364, 537], 'children': [{'type': 'Parameter', 'name': 'node', 'range': [367, 369], 'children': [{'type': 'TypeAnnotation', 'name': 'AgentNode', 'range': [369, 369], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [372, 537], 'children': [{'type': 'IfStatement', 'name': '', 'range': [373, 386], 'children': [{'type': 'UnaryExpression', 'name': 'not', 'range': [374, 375], 'children': [{'type': 'MemberExpression', 'name': 'node.AgentBlock', 'range': [375, 377], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [379, 386], 'children': [{'type': 'ThrowStatement', 'name': 'raise', 'range': [380, 385], 'children': [{'type': 'NewExpression', 'name': 'ValueError', 'range': [381, 385], 'children': [{'type': 'TemplateLiteral', 'name': 'f"Invalid node {node.id}, invalid AgentBlock."', 'range': [383, 384], 'children': []}]}]}]}]}, {'type': 'VariableDecl', 'name': 'obj', 'range': [387, 489], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [388, 389], 'children': [{'type': 'NewExpression', 'name': 'NodeModel', 'range': [389, 489], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [390, 489], 'children': [{'type': 'AssignmentExpression', 'name': 'id=', 'range': [392, 397], 'children': [{'type': 'MemberExpression', 'name': 'node.id', 'range': [394, 396], 'children': []}]}, {'type': 'AssignmentExpression', 'name': 'block_id=', 'range': [399, 406], 'children': [{'type': 'MemberExpression', 'name': 'node.AgentBlock.id', 'range': [401, 405], 'children': []}]}, {'type': 'AssignmentExpression', 'name': 'input_default=', 'range': [408, 426], 'children': [{'type': 'CallExpression', 'name': 'json.loads', 'range': [410, 426], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [413, 426], 'children': [{'type': 'MemberExpression', 'name': 'node.constantInput', 'range': [414, 416], 'children': []}, {'type': 'AssignmentExpression', 'name': 'target_type=', 'range': [418, 425], 'children': [{'type': 'TypeAnnotation', 'name': 'dict[str, Any]', 'range': [420, 425], 'children': []}]}]}]}]}, {'type': 'AssignmentExpression', 'name': 'metadata=', 'range': [429, 447], 'children': [{'type': 'CallExpression', 'name': 'json.loads', 'range': [431, 447], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [434, 447], 'children': [{'type': 'MemberExpression', 'name': 'node.metadata', 'range': [435, 437], 'children': []}, {'type': 'AssignmentExpression', 'name': 'target_type=', 'range': [439, 446], 'children': [{'type': 'TypeAnnotation', 'name': 'dict[str, Any]', 'range': [441, 446], 'children': []}]}]}]}]}, {'type': 'AssignmentExpression', 'name': 'graph_id=', 'range': [450, 455], 'children': [{'type': 'MemberExpression', 'name': 'node.agentGraphId', 'range': [452, 454], 'children': []}]}, {'type': 'AssignmentExpression', 'name': 'graph_version=', 'range': [457, 462], 'children': [{'type': 'MemberExpression', 'name': 'node.agentGraphVersion', 'range': [459, 461], 'children': []}]}, {'type': 'AssignmentExpression', 'name': 'webhook_id=', 'range': [464, 469], 'children': [{'type': 'MemberExpression', 'name': 'node.webhookId', 'range': [466, 468], 'children': []}]}, {'type': 'AssignmentExpression', 'name': 'webhook=', 'range': [471, 487], 'children': [{'type': 'ConditionalExpression', 'name': 'if', 'range': [473, 486], 'children': [{'type': 'CallExpression', 'name': 'Webhook.from_db', 'range': [473, 480], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [476, 480], 'children': [{'type': 'MemberExpression', 'name': 'node.Webhook', 'range': [477, 479], 'children': []}]}]}, {'type': 'Literal', 'name': 'None', 'range': [486, 486], 'children': []}]}]}]}]}]}]}, {'type': 'AssignmentExpression', 'name': 'obj.input_links=', 'range': [491, 512], 'children': [{'type': 'ArrayExpression', 'name': '', 'range': [495, 511], 'children': [{'type': 'CallExpression', 'name': 'Link.from_db', 'range': [496, 501], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [498, 501], 'children': [{'type': 'Identifier', 'name': 'link', 'range': [500, 500], 'children': []}]}]}]}]}, {'type': 'AssignmentExpression', 'name': 'obj.output_links=', 'range': [513, 534], 'children': [{'type': 'ArrayExpression', 'name': '', 'range': [517, 533], 'children': [{'type': 'CallExpression', 'name': 'Link.from_db', 'range': [518, 523], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [520, 523], 'children': [{'type': 'Identifier', 'name': 'link', 'range': [522, 522], 'children': []}]}]}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [535, 536], 'children': [{'type': 'Identifier', 'name': 'obj', 'range': [536, 536], 'children': []}]}]}]}, {'type': 'FunctionDecl', 'name': 'is_triggered_by_event_type', 'range': [539, 659], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [542, 542], 'children': []}, {'type': 'Parameter', 'name': 'event_type', 'range': [544, 546], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [546, 546], 'children': []}]}, {'type': 'TypeAnnotation', 'name': '-> bool', 'range': [548, 550], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [552, 659], 'children': [{'type': 'IfStatement', 'name': '', 'range': [553, 574], 'children': [{'type': 'UnaryExpression', 'name': 'not', 'range': [554, 555], 'children': [{'type': 'AssignmentExpression', 'name': 'block=', 'range': [556, 565], 'children': [{'type': 'CallExpression', 'name': 'get_block', 'range': [559, 564], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [561, 564], 'children': [{'type': 'MemberExpression', 'name': 'self.block_id', 'range': [562, 563], 'children': []}]}]}]}]}, {'type': 'BlockStatement', 'name': '', 'range': [567, 574], 'children': [{'type': 'ThrowStatement', 'name': 'raise', 'range': [568, 573], 'children': [{'type': 'NewExpression', 'name': 'ValueError', 'range': [569, 573], 'children': [{'type': 'TemplateLiteral', 'name': 'f"Block #{self.block_id} not found for node #{self.id}"', 'range': [571, 572], 'children': []}]}]}]}]}, {'type': 'IfStatement', 'name': '', 'range': [575, 587], 'children': [{'type': 'UnaryExpression', 'name': 'not', 'range': [576, 577], 'children': [{'type': 'MemberExpression', 'name': 'block.webhook_config', 'range': [577, 579], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [581, 587], 'children': [{'type': 'ThrowStatement', 'name': 'raise', 'range': [582, 586], 'children': [{'type': 'NewExpression', 'name': 'TypeError', 'range': [583, 586], 'children': [{'type': 'Literal', 'name': '"This method can\'t be used on non-webhook blocks"', 'range': [585, 585], 'children': []}]}]}]}]}, {'type': 'IfStatement', 'name': '', 'range': [588, 599], 'children': [{'type': 'UnaryExpression', 'name': 'not', 'range': [589, 590], 'children': [{'type': 'MemberExpression', 'name': 'block.webhook_config.event_filter_input', 'range': [590, 594], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [596, 599], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [597, 598], 'children': [{'type': 'Literal', 'name': 'True', 'range': [598, 598], 'children': []}]}]}]}, {'type': 'VariableDecl', 'name': 'event_filter', 'range': [600, 614], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [601, 602], 'children': [{'type': 'CallExpression', 'name': 'self.input_default.get', 'range': [602, 613], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [606, 613], 'children': [{'type': 'MemberExpression', 'name': 'block.webhook_config.event_filter_input', 'range': [608, 612], 'children': []}]}]}]}]}, {'type': 'IfStatement', 'name': '', 'range': [615, 626], 'children': [{'type': 'UnaryExpression', 'name': 'not', 'range': [616, 617], 'children': [{'type': 'Identifier', 'name': 'event_filter', 'range': [617, 617], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [619, 626], 'children': [{'type': 'ThrowStatement', 'name': 'raise', 'range': [620, 625], 'children': [{'type': 'NewExpression', 'name': 'ValueError', 'range': [621, 625], 'children': [{'type': 'TemplateLiteral', 'name': 'f"Event filter is not configured on node #{self.id}"', 'range': [623, 624], 'children': []}]}]}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [627, 658], 'children': [{'type': 'BinaryExpression', 'name': 'in', 'range': [628, 630], 'children': [{'type': 'Identifier', 'name': 'event_type', 'range': [628, 628], 'children': []}, {'type': 'ArrayExpression', 'name': '', 'range': [630, 658], 'children': [{'type': 'CallExpression', 'name': 'block.webhook_config.event_format.format', 'range': [632, 644], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [638, 644], 'children': [{'type': 'AssignmentExpression', 'name': 'event=', 'range': [640, 642], 'children': [{'type': 'Identifier', 'name': 'k', 'range': [642, 642], 'children': []}]}]}]}]}]}]}]}]}]}
2025-01-08 10:33:08,428 - INFO - Completed main AST analysis flow
2025-01-08 10:33:08,430 - INFO - Successfully processed chunk
2025-01-08 10:33:09,177 - INFO - Step 5 result: {'type': 'Program', 'name': '__create_graph', 'range': [3936, 4192], 'children': [{'type': 'FunctionDecl', 'name': '__create_graph', 'range': [3936, 4192], 'children': [{'type': 'FunctionSignature', 'name': '__create_graph', 'range': [3936, 3950], 'children': [{'type': 'Keyword', 'name': 'async', 'range': [3936, 3941], 'children': []}, {'type': 'Keyword', 'name': 'def', 'range': [3937, 3940], 'children': []}, {'type': 'Identifier', 'name': '__create_graph', 'range': [3938, 3950], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [3939, 3949], 'children': [{'type': 'Parameter', 'name': 'tx', 'range': [3940, 3942], 'children': []}, {'type': 'Parameter', 'name': 'graph', 'range': [3942, 3948], 'children': [{'type': 'TypeAnnotation', 'name': 'Graph', 'range': [3944, 3948], 'children': []}]}, {'type': 'Parameter', 'name': 'user_id', 'range': [3946, 3952], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [3948, 3952], 'children': []}]}]}]}, {'type': 'BlockStatement', 'name': 'body', 'range': [3951, 4192], 'children': [{'type': 'ExpressionStatement', 'name': 'await AgentGraph.prisma(tx).create(data)', 'range': [3952, 4017], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [3952, 3957], 'children': [{'type': 'CallExpression', 'name': 'AgentGraph.prisma(tx).create', 'range': [3953, 4016], 'children': [{'type': 'MemberExpression', 'name': 'AgentGraph.prisma', 'range': [3953, 3965], 'children': [{'type': 'Identifier', 'name': 'AgentGraph', 'range': [3953, 3962], 'children': []}, {'type': 'Identifier', 'name': 'prisma', 'range': [3963, 3969], 'children': []}]}, {'type': 'CallExpression', 'name': 'prisma(tx)', 'range': [3966, 3974], 'children': [{'type': 'Identifier', 'name': 'tx', 'range': [3967, 3969], 'children': []}]}, {'type': 'MemberExpression', 'name': 'create', 'range': [3975, 3981], 'children': []}, {'type': 'ObjectExpression', 'name': 'data', 'range': [3982, 4014], 'children': [{'type': 'Property', 'name': 'id', 'range': [3987, 3993], 'children': [{'type': 'Identifier', 'name': 'graph.id', 'range': [3989, 3993], 'children': []}]}, {'type': 'Property', 'name': 'version', 'range': [3994, 4000], 'children': [{'type': 'Identifier', 'name': 'graph.version', 'range': [3996, 4000], 'children': []}]}, {'type': 'Property', 'name': 'name', 'range': [4001, 4007], 'children': [{'type': 'Identifier', 'name': 'graph.name', 'range': [4003, 4007], 'children': []}]}, {'type': 'Property', 'name': 'description', 'range': [4008, 4014], 'children': [{'type': 'Identifier', 'name': 'graph.description', 'range': [4010, 4014], 'children': []}]}, {'type': 'Property', 'name': 'isTemplate', 'range': [4015, 4021], 'children': [{'type': 'Identifier', 'name': 'graph.is_template', 'range': [4017, 4021], 'children': []}]}, {'type': 'Property', 'name': 'isActive', 'range': [4022, 4028], 'children': [{'type': 'Identifier', 'name': 'graph.is_active', 'range': [4024, 4028], 'children': []}]}, {'type': 'Property', 'name': 'userId', 'range': [4029, 4035], 'children': [{'type': 'Identifier', 'name': 'user_id', 'range': [4031, 4035], 'children': []}]}]}]}]}]}, {'type': 'ExpressionStatement', 'name': 'await asyncio.gather(*[AgentNode.prisma(tx).create({...}) for node in graph.nodes])', 'range': [4019, 4106], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [4019, 4024], 'children': [{'type': 'CallExpression', 'name': 'asyncio.gather', 'range': [4025, 4105], 'children': [{'type': 'MemberExpression', 'name': 'asyncio.gather', 'range': [4025, 4039], 'children': [{'type': 'Identifier', 'name': 'asyncio', 'range': [4025, 4031], 'children': []}, {'type': 'Identifier', 'name': 'gather', 'range': [4032, 4038], 'children': []}]}, {'type': 'SpreadElement', 'name': '*', 'range': [4040, 4041], 'children': [{'type': 'ArrayExpression', 'name': '[...]', 'range': [4042, 4103], 'children': [{'type': 'CallExpression', 'name': 'AgentNode.prisma(tx).create', 'range': [4044, 4094], 'children': [{'type': 'MemberExpression', 'name': 'AgentNode.prisma', 'range': [4044, 4056], 'children': [{'type': 'Identifier', 'name': 'AgentNode', 'range': [4044, 4052], 'children': []}, {'type': 'Identifier', 'name': 'prisma', 'range': [4053, 4059], 'children': []}]}, {'type': 'CallExpression', 'name': 'prisma(tx)', 'range': [4060, 4068], 'children': [{'type': 'Identifier', 'name': 'tx', 'range': [4061, 4063], 'children': []}]}, {'type': 'MemberExpression', 'name': 'create', 'range': [4069, 4075], 'children': []}, {'type': 'ObjectExpression', 'name': '{...}', 'range': [4076, 4092], 'children': [{'type': 'Property', 'name': 'id', 'range': [4080, 4086], 'children': [{'type': 'Identifier', 'name': 'node.id', 'range': [4082, 4086], 'children': []}]}, {'type': 'Property', 'name': 'agentBlockId', 'range': [4087, 4093], 'children': [{'type': 'Identifier', 'name': 'node.block_id', 'range': [4089, 4093], 'children': []}]}, {'type': 'Property', 'name': 'agentGraphId', 'range': [4094, 4100], 'children': [{'type': 'Identifier', 'name': 'graph.id', 'range': [4096, 4100], 'children': []}]}, {'type': 'Property', 'name': 'agentGraphVersion', 'range': [4101, 4107], 'children': [{'type': 'Identifier', 'name': 'graph.version', 'range': [4103, 4107], 'children': []}]}, {'type': 'Property', 'name': 'constantInput', 'range': [4108, 4114], 'children': [{'type': 'CallExpression', 'name': 'json.dumps(node.input_default)', 'range': [4110, 4126], 'children': [{'type': 'MemberExpression', 'name': 'json.dumps', 'range': [4110, 4119], 'children': [{'type': 'Identifier', 'name': 'json', 'range': [4110, 4114], 'children': []}, {'type': 'Identifier', 'name': 'dumps', 'range': [4115, 4119], 'children': []}]}, {'type': 'CallExpression', 'name': 'node.input_default', 'range': [4120, 4126], 'children': [{'type': 'Identifier', 'name': 'node', 'range': [4120, 4124], 'children': []}, {'type': 'Identifier', 'name': 'input_default', 'range': [4125, 4126], 'children': []}]}]}]}, {'type': 'Property', 'name': 'metadata', 'range': [4127, 4133], 'children': [{'type': 'CallExpression', 'name': 'json.dumps(node.metadata)', 'range': [4129, 4145], 'children': [{'type': 'MemberExpression', 'name': 'json.dumps', 'range': [4129, 4138], 'children': [{'type': 'Identifier', 'name': 'json', 'range': [4129, 4133], 'children': []}, {'type': 'Identifier', 'name': 'dumps', 'range': [4134, 4138], 'children': []}]}, {'type': 'CallExpression', 'name': 'node.metadata', 'range': [4139, 4145], 'children': [{'type': 'Identifier', 'name': 'node', 'range': [4139, 4143], 'children': []}, {'type': 'Identifier', 'name': 'metadata', 'range': [4144, 4145], 'children': []}]}]}]}]}]}]}]}]}]}]}, {'type': 'ExpressionStatement', 'name': 'await asyncio.gather(*[AgentNodeLink.prisma(tx).create({...}) for link in graph.links])', 'range': [4108, 4190], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [4108, 4113], 'children': [{'type': 'CallExpression', 'name': 'asyncio.gather', 'range': [4114, 4189], 'children': [{'type': 'MemberExpression', 'name': 'asyncio.gather', 'range': [4114, 4128], 'children': [{'type': 'Identifier', 'name': 'asyncio', 'range': [4114, 4120], 'children': []}, {'type': 'Identifier', 'name': 'gather', 'range': [4121, 4127], 'children': []}]}, {'type': 'SpreadElement', 'name': '*', 'range': [4129, 4130], 'children': [{'type': 'ArrayExpression', 'name': '[...]', 'range': [4131, 4187], 'children': [{'type': 'CallExpression', 'name': 'AgentNodeLink.prisma(tx).create', 'range': [4133, 4178], 'children': [{'type': 'MemberExpression', 'name': 'AgentNodeLink.prisma', 'range': [4133, 4145], 'children': [{'type': 'Identifier', 'name': 'AgentNodeLink', 'range': [4133, 4145], 'children': []}, {'type': 'Identifier', 'name': 'prisma', 'range': [4146, 4152], 'children': []}]}, {'type': 'CallExpression', 'name': 'prisma(tx)', 'range': [4153, 4161], 'children': [{'type': 'Identifier', 'name': 'tx', 'range': [4154, 4156], 'children': []}]}, {'type': 'MemberExpression', 'name': 'create', 'range': [4162, 4168], 'children': []}, {'type': 'ObjectExpression', 'name': '{...}', 'range': [4169, 4176], 'children': [{'type': 'Property', 'name': 'id', 'range': [4170, 4176], 'children': [{'type': 'CallExpression', 'name': 'str(uuid.uuid4())', 'range': [4172, 4184], 'children': [{'type': 'CallExpression', 'name': 'uuid.uuid4()', 'range': [4176, 4184], 'children': [{'type': 'MemberExpression', 'name': 'uuid.uuid4', 'range': [4176, 4184], 'children': [{'type': 'Identifier', 'name': 'uuid', 'range': [4176, 4180], 'children': []}, {'type': 'Identifier', 'name': 'uuid4', 'range': [4181, 4185], 'children': []}]}]}]}]}, {'type': 'Property', 'name': 'sourceName', 'range': [4185, 4191], 'children': [{'type': 'Identifier', 'name': 'link.source_name', 'range': [4187, 4191], 'children': []}]}, {'type': 'Property', 'name': 'sinkName', 'range': [4192, 4198], 'children': [{'type': 'Identifier', 'name': 'link.sink_name', 'range': [4194, 4198], 'children': []}]}, {'type': 'Property', 'name': 'agentNodeSourceId', 'range': [4199, 4205], 'children': [{'type': 'Identifier', 'name': 'link.source_id', 'range': [4201, 4205], 'children': []}]}, {'type': 'Property', 'name': 'agentNodeSinkId', 'range': [4206, 4212], 'children': [{'type': 'Identifier', 'name': 'link.sink_id', 'range': [4208, 4212], 'children': []}]}, {'type': 'Property', 'name': 'isStatic', 'range': [4213, 4219], 'children': [{'type': 'Identifier', 'name': 'link.is_static', 'range': [4215, 4219], 'children': []}]}]}]}]}]}]}]}]}]}]}]}
2025-01-08 10:33:09,177 - INFO - Completed main AST analysis flow
2025-01-08 10:33:09,180 - INFO - Successfully processed chunk
2025-01-08 10:34:26,138 - INFO - Step 5 result: {'type': 'Program', 'name': 'Graph', 'range': [904, 1322], 'children': [{'type': 'ClassDecl', 'name': 'Graph', 'range': [904, 956], 'children': [{'type': 'VariableDecl', 'name': 'version', 'range': [911, 915], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [913, 913], 'children': []}, {'type': 'AssignmentExpression', 'name': '=', 'range': [914, 914], 'children': [{'type': 'Literal', 'name': '1', 'range': [915, 915], 'children': []}]}]}, {'type': 'VariableDecl', 'name': 'is_active', 'range': [917, 921], 'children': [{'type': 'TypeAnnotation', 'name': 'bool', 'range': [919, 919], 'children': []}, {'type': 'AssignmentExpression', 'name': '=', 'range': [920, 920], 'children': [{'type': 'Literal', 'name': 'True', 'range': [921, 921], 'children': []}]}]}, {'type': 'VariableDecl', 'name': 'is_template', 'range': [923, 927], 'children': [{'type': 'TypeAnnotation', 'name': 'bool', 'range': [925, 925], 'children': []}, {'type': 'AssignmentExpression', 'name': '=', 'range': [926, 926], 'children': [{'type': 'Literal', 'name': 'False', 'range': [927, 927], 'children': []}]}]}, {'type': 'VariableDecl', 'name': 'name', 'range': [929, 931], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [931, 931], 'children': []}]}, {'type': 'VariableDecl', 'name': 'description', 'range': [933, 935], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [935, 935], 'children': []}]}, {'type': 'VariableDecl', 'name': 'nodes', 'range': [937, 945], 'children': [{'type': 'TypeAnnotation', 'name': 'list', 'range': [939, 939], 'children': [{'type': 'TypeArgument', 'name': 'Node', 'range': [941, 941], 'children': []}]}, {'type': 'AssignmentExpression', 'name': '=', 'range': [943, 943], 'children': [{'type': 'ArrayExpression', 'name': '[]', 'range': [944, 945], 'children': []}]}]}, {'type': 'VariableDecl', 'name': 'links', 'range': [947, 955], 'children': [{'type': 'TypeAnnotation', 'name': 'list', 'range': [949, 949], 'children': [{'type': 'TypeArgument', 'name': 'Link', 'range': [951, 951], 'children': []}]}, {'type': 'AssignmentExpression', 'name': '=', 'range': [953, 953], 'children': [{'type': 'ArrayExpression', 'name': '[]', 'range': [954, 955], 'children': []}]}]}]}, {'type': 'FunctionDecl', 'name': 'input_schema', 'range': [964, 1037], 'children': [{'type': 'Decorator', 'name': '@computed_field', 'range': [958, 959], 'children': []}, {'type': 'Decorator', 'name': '@property', 'range': [961, 962], 'children': []}, {'type': 'Parameter', 'name': 'self', 'range': [967, 967], 'children': []}, {'type': 'ReturnType', 'name': 'dict', 'range': [971, 971], 'children': [{'type': 'TypeArgument', 'name': 'str', 'range': [973, 973], 'children': []}, {'type': 'TypeArgument', 'name': 'Any', 'range': [975, 975], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [978, 1037], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [979, 979], 'children': [{'type': 'CallExpression', 'name': '_generate_schema', 'range': [982, 1036], 'children': [{'type': 'Argument', 'name': 'AgentInputBlock.Input', 'range': [985, 987], 'children': []}, {'type': 'Argument', 'name': 'ListComprehension', 'range': [990, 1033], 'children': [{'type': 'Identifier', 'name': 'node', 'range': [992, 992], 'children': []}, {'type': 'MemberExpression', 'name': 'input_default', 'range': [993, 994], 'children': []}, {'type': 'ForStatement', 'name': 'for', 'range': [996, 1002], 'children': [{'type': 'Identifier', 'name': 'node', 'range': [997, 997], 'children': []}, {'type': 'Identifier', 'name': 'self.nodes', 'range': [999, 1001], 'children': []}]}, {'type': 'IfStatement', 'name': 'if', 'range': [1003, 1032], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [1007, 1007], 'children': [{'type': 'CallExpression', 'name': 'get_block', 'range': [1008, 1013], 'children': [{'type': 'Argument', 'name': 'node.block_id', 'range': [1010, 1012], 'children': []}]}]}, {'type': 'LogicalExpression', 'name': 'and', 'range': [1016, 1016], 'children': [{'type': 'MemberExpression', 'name': 'block_type', 'range': [1018, 1019], 'children': []}, {'type': 'BinaryExpression', 'name': '==', 'range': [1020, 1021], 'children': [{'type': 'Identifier', 'name': 'BlockType.INPUT', 'range': [1022, 1024], 'children': []}]}]}, {'type': 'LogicalExpression', 'name': 'and', 'range': [1026, 1026], 'children': [{'type': 'Literal', 'name': '"name"', 'range': [1027, 1027], 'children': []}, {'type': 'MemberExpression', 'name': 'input_default', 'range': [1029, 1031], 'children': []}]}]}]}]}]}]}]}, {'type': 'FunctionDecl', 'name': 'output_schema', 'range': [1045, 1118], 'children': [{'type': 'Decorator', 'name': '@computed_field', 'range': [1039, 1040], 'children': []}, {'type': 'Decorator', 'name': '@property', 'range': [1042, 1043], 'children': []}, {'type': 'Parameter', 'name': 'self', 'range': [1048, 1048], 'children': []}, {'type': 'ReturnType', 'name': 'dict', 'range': [1052, 1052], 'children': [{'type': 'TypeArgument', 'name': 'str', 'range': [1054, 1054], 'children': []}, {'type': 'TypeArgument', 'name': 'Any', 'range': [1056, 1056], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [1059, 1118], 'children': [{'type': 'ReturnStatement', 'name': 'return', 'range': [1060, 1060], 'children': [{'type': 'CallExpression', 'name': '_generate_schema', 'range': [1063, 1117], 'children': [{'type': 'Argument', 'name': 'AgentOutputBlock.Input', 'range': [1066, 1068], 'children': []}, {'type': 'Argument', 'name': 'ListComprehension', 'range': [1071, 1114], 'children': [{'type': 'Identifier', 'name': 'node', 'range': [1073, 1073], 'children': []}, {'type': 'MemberExpression', 'name': 'input_default', 'range': [1074, 1075], 'children': []}, {'type': 'ForStatement', 'name': 'for', 'range': [1077, 1083], 'children': [{'type': 'Identifier', 'name': 'node', 'range': [1078, 1078], 'children': []}, {'type': 'Identifier', 'name': 'self.nodes', 'range': [1080, 1082], 'children': []}]}, {'type': 'IfStatement', 'name': 'if', 'range': [1084, 1113], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [1088, 1088], 'children': [{'type': 'CallExpression', 'name': 'get_block', 'range': [1089, 1094], 'children': [{'type': 'Argument', 'name': 'node.block_id', 'range': [1091, 1093], 'children': []}]}]}, {'type': 'LogicalExpression', 'name': 'and', 'range': [1097, 1097], 'children': [{'type': 'MemberExpression', 'name': 'block_type', 'range': [1099, 1100], 'children': []}, {'type': 'BinaryExpression', 'name': '==', 'range': [1101, 1102], 'children': [{'type': 'Identifier', 'name': 'BlockType.OUTPUT', 'range': [1103, 1105], 'children': []}]}]}, {'type': 'LogicalExpression', 'name': 'and', 'range': [1107, 1107], 'children': [{'type': 'Literal', 'name': '"name"', 'range': [1108, 1108], 'children': []}, {'type': 'MemberExpression', 'name': 'input_default', 'range': [1110, 1112], 'children': []}]}]}]}]}]}]}]}, {'type': 'FunctionDecl', 'name': '_generate_schema', 'range': [1123, 1320], 'children': [{'type': 'Decorator', 'name': '@staticmethod', 'range': [1120, 1121], 'children': []}, {'type': 'Parameter', 'name': 'type_class', 'range': [1127, 1127], 'children': [{'type': 'TypeAnnotation', 'name': 'Type', 'range': [1129, 1129], 'children': [{'type': 'TypeArgument', 'name': 'AgentInputBlock.Input', 'range': [1131, 1133], 'children': []}, {'type': 'TypeArgument', 'name': 'AgentOutputBlock.Input', 'range': [1136, 1138], 'children': []}]}]}, {'type': 'Parameter', 'name': 'data', 'range': [1144, 1144], 'children': [{'type': 'TypeAnnotation', 'name': 'list', 'range': [1146, 1146], 'children': [{'type': 'TypeArgument', 'name': 'dict', 'range': [1148, 1148], 'children': []}]}]}, {'type': 'ReturnType', 'name': 'dict', 'range': [1155, 1155], 'children': [{'type': 'TypeArgument', 'name': 'str', 'range': [1157, 1157], 'children': []}, {'type': 'TypeArgument', 'name': 'Any', 'range': [1159, 1159], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [1162, 1320], 'children': [{'type': 'VariableDecl', 'name': 'props', 'range': [1163, 1165], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [1164, 1164], 'children': [{'type': 'ArrayExpression', 'name': '[]', 'range': [1165, 1165], 'children': []}]}]}, {'type': 'ForStatement', 'name': 'for', 'range': [1168, 1172], 'children': [{'type': 'Identifier', 'name': 'p', 'range': [1169, 1169], 'children': []}, {'type': 'Identifier', 'name': 'data', 'range': [1171, 1171], 'children': []}]}, {'type': 'TryStatement', 'name': 'try', 'range': [1174, 1202], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [1176, 1188], 'children': [{'type': 'ExpressionStatement', 'name': '', 'range': [1177, 1187], 'children': [{'type': 'CallExpression', 'name': 'append', 'range': [1179, 1187], 'children': [{'type': 'Argument', 'name': 'type_class', 'range': [1181, 1181], 'children': []}, {'type': 'Argument', 'name': 'p', 'range': [1185, 1185], 'children': []}]}]}]}, {'type': 'CatchClause', 'name': 'except', 'range': [1189, 1202], 'children': [{'type': 'Identifier', 'name': 'Exception', 'range': [1190, 1190], 'children': []}, {'type': 'Identifier', 'name': 'e', 'range': [1192, 1192], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [1194, 1202], 'children': [{'type': 'ExpressionStatement', 'name': '', 'range': [1195, 1201], 'children': [{'type': 'CallExpression', 'name': 'warning', 'range': [1197, 1201], 'children': [{'type': 'Argument', 'name': 'f"Invalid {type_class}: {p}, {e}"', 'range': [1199, 1200], 'children': []}]}]}]}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [1204, 1204], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [1205, 1319], 'children': [{'type': 'Property', 'name': 'type', 'range': [1207, 1207], 'children': [{'type': 'Literal', 'name': '"object"', 'range': [1209, 1209], 'children': []}]}, {'type': 'Property', 'name': 'properties', 'range': [1212, 1212], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [1214, 1297], 'children': [{'type': 'Property', 'name': 'p.name', 'range': [1216, 1218], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [1220, 1290], 'children': [{'type': 'Property', 'name': 'secret', 'range': [1222, 1222], 'children': [{'type': 'MemberExpression', 'name': 'p.secret', 'range': [1224, 1226], 'children': []}]}, {'type': 'Property', 'name': 'advanced', 'range': [1229, 1229], 'children': [{'type': 'MemberExpression', 'name': 'p.advanced', 'range': [1231, 1233], 'children': []}]}, {'type': 'Property', 'name': 'title', 'range': [1236, 1236], 'children': [{'type': 'LogicalExpression', 'name': 'or', 'range': [1241, 1241], 'children': [{'type': 'MemberExpression', 'name': 'p.title', 'range': [1238, 1240], 'children': []}, {'type': 'MemberExpression', 'name': 'p.name', 'range': [1243, 1244], 'children': []}]}]}, {'type': 'SpreadElement', 'name': '...', 'range': [1247, 1248], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [1250, 1264], 'children': [{'type': 'Property', 'name': 'description', 'range': [1251, 1251], 'children': [{'type': 'MemberExpression', 'name': 'p.description', 'range': [1253, 1255], 'children': []}]}]}]}, {'type': 'SpreadElement', 'name': '...', 'range': [1267, 1268], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [1270, 1287], 'children': [{'type': 'Property', 'name': 'default', 'range': [1271, 1271], 'children': [{'type': 'MemberExpression', 'name': 'p.value', 'range': [1273, 1275], 'children': []}]}]}]}]}]}]}]}, {'type': 'Property', 'name': 'required', 'range': [1300, 1300], 'children': [{'type': 'ArrayExpression', 'name': '', 'range': [1302, 1316], 'children': [{'type': 'MemberExpression', 'name': 'p.name', 'range': [1303, 1305], 'children': []}]}]}]}]}]}]}]}
2025-01-08 10:34:26,139 - INFO - Completed main AST analysis flow
2025-01-08 10:34:26,140 - INFO - Successfully processed chunk
2025-01-08 10:34:43,008 - ERROR - Failed to parse Step 4 result
2025-01-08 10:34:43,008 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:34:44,624 - INFO - Step 5 result: {'type': 'Program', 'name': 'MainOrSomething', 'range': [0, 200], 'children': []}
2025-01-08 10:34:44,625 - INFO - Completed main AST analysis flow
2025-01-08 10:34:44,627 - INFO - Successfully processed chunk
2025-01-08 10:34:49,811 - INFO - Step 4 result: {'type': 'Program', 'children': [{'type': 'ClassDecl', 'name': 'GraphModel', 'range': [1323, 2894], 'children': [{'type': 'ClassBody', 'children': [{'type': 'PropertyDefinition', 'name': 'user_id', 'range': [1330, 1332], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1332, 1332]}]}, {'type': 'PropertyDefinition', 'name': 'nodes', 'range': [1334, 1342], 'children': [{'type': 'TypeAnnotation', 'name': 'list', 'range': [1336, 1336], 'children': [{'type': 'TypeParameter', 'name': 'NodeModel', 'range': [1338, 1338]}]}]}, {'type': 'MethodDefinition', 'name': 'starting_nodes', 'range': [1352, 1445], 'children': [{'type': 'ReturnTypeAnnotation', 'name': 'list', 'range': [1359, 1359], 'children': [{'type': 'TypeParameter', 'name': 'Node', 'range': [1361, 1361]}]}, {'type': 'BlockStatement', 'children': [{'type': 'VariableDeclaration', 'name': 'outbound_nodes', 'range': [1365, 1377], 'children': [{'type': 'ObjectExpression', 'children': [{'type': 'Property', 'name': 'sink_id', 'range': [1368, 1370], 'children': [{'type': 'Identifier', 'name': 'link', 'range': [1368, 1368]}]}]}]}, {'type': 'VariableDeclaration', 'name': 'input_nodes', 'range': [1379, 1416], 'children': [{'type': 'ObjectExpression', 'children': [{'type': 'Property', 'name': 'id', 'range': [1383, 1385], 'children': [{'type': 'Identifier', 'name': 'v', 'range': [1383, 1383]}]}]}]}, {'type': 'ReturnStatement', 'range': [1418, 1444], 'children': [{'type': 'ArrayExpression', 'children': [{'type': 'Identifier', 'name': 'node', 'range': [1421, 1421]}]}]}]}]}, {'type': 'MethodDefinition', 'name': 'reassign_ids', 'range': [1447, 1634], 'children': [{'type': 'Parameter', 'name': 'user_id', 'range': [1452, 1454], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [1454, 1454]}]}, {'type': 'Parameter', 'name': 'reassign_graph_id', 'range': [1456, 1460], 'children': [{'type': 'TypeAnnotation', 'name': 'bool', 'range': [1458, 1458]}]}, {'type': 'BlockStatement', 'children': [{'type': 'VariableDeclaration', 'name': 'id_map', 'range': [1474, 1495], 'children': [{'type': 'ObjectExpression', 'children': [{'type': 'Property', 'name': 'id', 'range': [1477, 1479], 'children': [{'type': 'Identifier', 'name': 'node', 'range': [1477, 1477]}]}]}]}, {'type': 'IfStatement', 'range': [1497, 1513], 'children': [{'type': 'AssignmentExpression', 'name': 'id', 'range': [1501, 1512], 'children': [{'type': 'Identifier', 'name': 'self', 'range': [1501, 1501]}, {'type': 'CallExpression', 'name': 'uuid4', 'range': [1505, 1511], 'children': [{'type': 'Identifier', 'name': 'uuid', 'range': [1505, 1505]}]}]}]}, {'type': 'ForStatement', 'range': [1520, 1538], 'children': [{'type': 'AssignmentExpression', 'name': 'id', 'range': [1528, 1537], 'children': [{'type': 'Identifier', 'name': 'node', 'range': [1528, 1528]}, {'type': 'Identifier', 'name': 'id_map', 'range': [1532, 1532]}]}]}, {'type': 'ForStatement', 'range': [1545, 1574], 'children': [{'type': 'AssignmentExpression', 'name': 'source_id', 'range': [1553, 1562], 'children': [{'type': 'Identifier', 'name': 'link', 'range': [1553, 1553]}, {'type': 'Identifier', 'name': 'id_map', 'range': [1557, 1557]}]}, {'type': 'AssignmentExpression', 'name': 'sink_id', 'range': [1564, 1573], 'children': [{'type': 'Identifier', 'name': 'link', 'range': [1564, 1564]}, {'type': 'Identifier', 'name': 'id_map', 'range': [1568, 1568]}]}]}, {'type': 'ForStatement', 'range': [1584, 1615], 'children': [{'type': 'IfStatement', 'range': [1592, 1605], 'children': [{'type': 'AssignmentExpression', 'name': 'input_default', 'range': [1607, 1614], 'children': [{'type': 'Identifier', 'name': 'node', 'range': [1607, 1607]}, {'type': 'Identifier', 'name': 'user_id', 'range': [1611, 1611]}]}]}]}, {'type': 'ExpressionStatement', 'range': [1629, 1633], 'children': [{'type': 'CallExpression', 'name': 'validate_graph', 'range': [1629, 1633], 'children': [{'type': 'Identifier', 'name': 'self', 'range': [1629, 1629]}]}]}]}]}, {'type': 'MethodDefinition', 'name': 'validate_graph', 'range': [1636, 2138], 'children': [{'type': 'Parameter', 'name': 'for_run', 'range': [1641, 1645], 'children': [{'type': 'TypeAnnotation', 'name': 'bool', 'range': [1643, 1643]}]}, {'type': 'BlockStatement', 'children': [{'type': 'FunctionDecl', 'name': 'sanitize', 'range': [1649, 1682], 'children': [{'type': 'Parameter', 'name': 'name', 'range': [1652, 1652]}, {'type': 'BlockStatement', 'children': [{'type': 'ReturnStatement', 'range': [1656, 1681], 'children': [{'type': 'CallExpression', 'name': 'split', 'range': [1657, 1660], 'children': [{'type': 'Identifier', 'name': 'name', 'range': [1657, 1657]}]}, {'type': 'CallExpression', 'name': 'split', 'range': [1666, 1669], 'children': [{'type': 'Identifier', 'name': 'name', 'range': [1666, 1666]}]}, {'type': 'CallExpression', 'name': 'split', 'range': [1675, 1678], 'children': [{'type': 'Identifier', 'name': 'name', 'range': [1675, 1675]}]}]}]}]}, {'type': 'VariableDeclaration', 'name': 'input_links', 'range': [1684, 1690], 'children': [{'type': 'CallExpression', 'name': 'defaultdict', 'range': [1684, 1690], 'children': [{'type': 'Identifier', 'name': 'list', 'range': [1688, 1688]}]}]}, {'type': 'ForStatement', 'range': [1691, 1710], 'children': [{'type': 'ExpressionStatement', 'range': [1699, 1709], 'children': [{'type': 'CallExpression', 'name': 'append', 'range': [1705, 1709], 'children': [{'type': 'Identifier', 'name': 'link', 'range': [1705, 1705]}]}]}]}, {'type': 'ForStatement', 'range': [1726, 1906], 'children': [{'type': 'VariableDeclaration', 'name': 'block', 'range': [1734, 1741], 'children': [{'type': 'CallExpression', 'name': 'get_block', 'range': [1736, 1741], 'children': [{'type': 'Identifier', 'name': 'node', 'range': [1736, 1736]}]}]}, {'type': 'IfStatement', 'range': [1743, 1755], 'children': [{'type': 'ThrowStatement', 'range': [1749, 1754], 'children': [{'type': 'NewExpression', 'name': 'ValueError', 'range': [1749, 1754], 'children': [{'type': 'TemplateLiteral', 'range': [1752, 1754]}]}]}]}, {'type': 'VariableDeclaration', 'name': 'provided_inputs', 'range': [1757, 1799], 'children': [{'type': 'CallExpression', 'name': 'set', 'range': [1759, 1799], 'children': [{'type': 'ArrayExpression', 'children': [{'type': 'CallExpression', 'name': 'sanitize', 'range': [1763, 1765], 'children': [{'type': 'Identifier', 'name': 'name', 'range': [1763, 1763]}]}]}, {'type': 'ArrayExpression', 'children': [{'type': 'CallExpression', 'name': 'sanitize', 'range': [1777, 1782], 'children': [{'type': 'Identifier', 'name': 'link', 'range': [1777, 1777]}]}]}]}]}, {'type': 'ForStatement', 'range': [1801, 1895], 'children': [{'type': 'IfStatement', 'range': [1813, 1894], 'children': [{'type': 'ThrowStatement', 'range': [1898, 1905], 'children': [{'type': 'NewExpression', 'name': 'ValueError', 'range': [1898, 1905], 'children': [{'type': 'TemplateLiteral', 'range': [1903, 1905]}]}]}]}]}]}, {'type': 'VariableDeclaration', 'name': 'input_schema', 'range': [1908, 1924], 'children': [{'type': 'MemberExpression', 'name': 'model_fields', 'range': [1920, 1924], 'children': [{'type': 'Identifier', 'name': 'input_schema', 'range': [1918, 1918]}]}]}, {'type': 'VariableDeclaration', 'name': 'required_fields', 'range': [1925, 1934], 'children': [{'type': 'CallExpression', 'name': 'get_required_fields', 'range': [1930, 1934], 'children': [{'type': 'Identifier', 'name': 'input_schema', 'range': [1928, 1928]}]}]}, {'type': 'FunctionDecl', 'name': 'has_value', 'range': [1936, 2005], 'children': [{'type': 'Parameter', 'name': 'name', 'range': [1939, 1939]}, {'type': 'BlockStatement', 'children': [{'type': 'ReturnStatement', 'range': [1943, 2004], 'children': [{'type': 'LogicalExpression', 'operator': 'or', 'range': [1945, 2003], 'children': [{'type': 'LogicalExpression', 'operator': 'and', 'range': [1945, 1987], 'children': [{'type': 'BinaryExpression', 'operator': '!=', 'range': [1950, 1950], 'children': [{'type': 'Identifier', 'name': 'node', 'range': [1946, 1946]}]}, {'type': 'BinaryExpression', 'operator': 'in', 'range': [1952, 1954], 'children': [{'type': 'Identifier', 'name': 'name', 'range': [1952, 1952]}, {'type': 'Identifier', 'name': 'input_default', 'range': [1954, 1954]}]}, {'type': 'BinaryExpression', 'operator': '!=', 'range': [1965, 1967], 'children': [{'type': 'Identifier', 'name': 'input_default', 'range': [1960, 1960]}]}, {'type': 'CallExpression', 'name': 'strip', 'range': [1980, 1981], 'children': [{'type': 'Identifier', 'name': 'str', 'range': [1971, 1971]}]}]}, {'type': 'LogicalExpression', 'operator': 'and', 'range': [1989, 2003], 'children': [{'type': 'BinaryExpression', 'operator': 'in', 'range': [1991, 1993], 'children': [{'type': 'Identifier', 'name': 'name', 'range': [1991, 1991]}, {'type': 'Identifier', 'name': 'input_schema', 'range': [1993, 1993]}]}, {'type': 'BinaryExpression', 'operator': '!=', 'range': [2001, 2003], 'children': [{'type': 'Identifier', 'name': 'default', 'range': [1999, 1999]}]}]}]}]}]}]}, {'type': 'ForStatement', 'range': [2012, 2137], 'children': [{'type': 'VariableDeclaration', 'name': 'field_name', 'range': [2013, 2015]}, {'type': 'VariableDeclaration', 'name': 'field_info', 'range': [2017, 2019]}, {'type': 'IfStatement', 'range': [2058, 2067], 'children': [{'type': 'ContinueStatement', 'range': [2066, 2066]}]}, {'type': 'VariableDeclaration', 'name': 'field_has_value', 'range': [2079, 2085], 'children': [{'type': 'CallExpression', 'name': 'has_value', 'range': [2081, 2085], 'children': [{'type': 'Identifier', 'name': 'field_name', 'range': [2083, 2083]}]}]}, {'type': 'VariableDeclaration', 'name': 'field_is_required', 'range': [2086, 2091], 'children': [{'type': 'BinaryExpression', 'operator': 'in', 'range': [2088, 2091], 'children': [{'type': 'Identifier', 'name': 'field_name', 'range': [2088, 2088]}, {'type': 'Identifier', 'name': 'required_fields', 'range': [2090, 2090]}]}]}, {'type': 'VariableDeclaration', 'name': 'missing_deps', 'range': [2104, 2119], 'children': [{'type': 'ArrayExpression', 'children': [{'type': 'Identifier', 'name': 'dep', 'range': [2107, 2107]}]}]}, {'type': 'IfStatement', 'range': [2120, 2137], 'children': [{'type': 'ThrowStatement', 'range': [2130, 2136], 'children': [{'type': 'NewExpression', 'name': 'ValueError', 'range': [2130, 2136], 'children': [{'type': 'TemplateLiteral', 'range': [2134, 2136]}]}]}]}]}]}]}, {'type': 'MethodDefinition', 'name': 'from_db', 'range': [2504, 2662], 'children': [{'type': 'Parameter', 'name': 'graph', 'range': [2510, 2512], 'children': [{'type': 'TypeAnnotation', 'name': 'AgentGraph', 'range': [2512, 2512]}]}, {'type': 'Parameter', 'name': 'for_export', 'range': [2514, 2518], 'children': [{'type': 'TypeAnnotation', 'name': 'bool', 'range': [2516, 2516]}]}, {'type': 'BlockStatement', 'children': [{'type': 'ReturnStatement', 'range': [2522, 2661], 'children': [{'type': 'NewExpression', 'name': 'GraphModel', 'range': [2523, 2661], 'children': [{'type': 'ObjectExpression', 'children': [{'type': 'Property', 'name': 'id', 'range': [2526, 2531], 'children': [{'type': 'Identifier', 'name': 'graph', 'range': [2526, 2526]}]}, {'type': 'Property', 'name': 'user_id', 'range': [2533, 2538], 'children': [{'type': 'Identifier', 'name': 'graph', 'range': [2533, 2533]}]}, {'type': 'Property', 'name': 'version', 'range': [2540, 2545], 'children': [{'type': 'Identifier', 'name': 'graph', 'range': [2540, 2540]}]}, {'type': 'Property', 'name': 'is_active', 'range': [2547, 2552], 'children': [{'type': 'Identifier', 'name': 'graph', 'range': [2547, 2547]}]}, {'type': 'Property', 'name': 'is_template', 'range': [2554, 2559], 'children': [{'type': 'Identifier', 'name': 'graph', 'range': [2554, 2554]}]}, {'type': 'Property', 'name': 'name', 'range': [2561, 2566], 'children': [{'type': 'Identifier', 'name': 'graph', 'range': [2561, 2561]}]}, {'type': 'Property', 'name': 'description', 'range': [2570, 2575], 'children': [{'type': 'Identifier', 'name': 'graph', 'range': [2570, 2570]}]}, {'type': 'Property', 'name': 'nodes', 'range': [2579, 2607], 'children': [{'type': 'ArrayExpression', 'children': [{'type': 'CallExpression', 'name': 'from_db', 'range': [2583, 2595], 'children': [{'type': 'Identifier', 'name': 'NodeModel', 'range': [2583, 2583]}]}]}]}, {'type': 'Property', 'name': 'links', 'range': [2610, 2657], 'children': [{'type': 'CallExpression', 'name': 'list', 'range': [2612, 2657], 'children': [{'type': 'ObjectExpression', 'children': [{'type': 'CallExpression', 'name': 'from_db', 'range': [2617, 2623], 'children': [{'type': 'Identifier', 'name': 'Link', 'range': [2617, 2617]}]}]}]}]}]}]}]}]}]}, {'type': 'MethodDefinition', 'name': '_process_node', 'range': [2663, 2762], 'children': [{'type': 'Parameter', 'name': 'node', 'range': [2669, 2671], 'children': [{'type': 'TypeAnnotation', 'name': 'AgentNode', 'range': [2671, 2671]}]}, {'type': 'Parameter', 'name': 'for_export', 'range': [2673, 2676]}, {'type': 'BlockStatement', 'children': [{'type': 'IfStatement', 'range': [2682, 2758], 'children': [{'type': 'ExpressionStatement', 'range': [2693, 2740], 'children': [{'type': 'AssignmentExpression', 'name': 'constantInput', 'range': [2699, 2739], 'children': [{'type': 'Identifier', 'name': 'node', 'range': [2699, 2699]}, {'type': 'CallExpression', 'name': 'dumps', 'range': [2734, 2739], 'children': [{'type': 'Identifier', 'name': 'constant_input', 'range': [2734, 2734]}]}]}]}, {'type': 'ExpressionStatement', 'range': [2747, 2757], 'children': [{'type': 'AssignmentExpression', 'name': 'webhookId', 'range': [2747, 2757], 'children': [{'type': 'Identifier', 'name': 'node', 'range': [2747, 2747]}]}]}]}, {'type': 'ReturnStatement', 'range': [2760, 2761], 'children': [{'type': 'Identifier', 'name': 'node', 'range': [2760, 2760]}]}]}]}, {'type': 'MethodDefinition', 'name': '_hide_node_input_credentials', 'range': [2764, 2892], 'children': [{'type': 'Parameter', 'name': 'input_data', 'range': [2770, 2772], 'children': [{'type': 'TypeAnnotation', 'name': 'dict', 'range': [2772, 2772], 'children': [{'type': 'TypeParameter', 'name': 'str', 'range': [2774, 2774]}, {'type': 'TypeParameter', 'name': 'Any', 'range': [2776, 2776]}]}]}, {'type': 'BlockStatement', 'children': [{'type': 'VariableDeclaration', 'name': 'sensitive_keys', 'range': [2789, 2802], 'children': [{'type': 'ArrayExpression', 'children': [{'type': 'Literal', 'value': 'credentials', 'range': [2792, 2792]}, {'type': 'Literal', 'value': 'api_key', 'range': [2794, 2794]}, {'type': 'Literal', 'value': 'password', 'range': [2796, 2796]}, {'type': 'Literal', 'value': 'token', 'range': [2798, 2798]}, {'type': 'Literal', 'value': 'secret', 'range': [2800, 2800]}]}]}, {'type': 'VariableDeclaration', 'name': 'result', 'range': [2803, 2807]}, {'type': 'ForStatement', 'range': [2808, 2889], 'children': [{'type': 'VariableDeclaration', 'name': 'key', 'range': [2809, 2811]}, {'type': 'VariableDeclaration', 'name': 'value', 'range': [2813, 2815]}, {'type': 'IfStatement', 'range': [2820, 2878], 'children': [{'type': 'ExpressionStatement', 'range': [2829, 2839], 'children': [{'type': 'AssignmentExpression', 'name': 'key', 'range': [2830, 2839], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [2830, 2830]}, {'type': 'CallExpression', 'name': '_hide_node_input_credentials', 'range': [2834, 2839], 'children': [{'type': 'Identifier', 'name': 'value', 'range': [2836, 2836]}]}]}]}, {'type': 'IfStatement', 'range': [2842, 2877], 'children': [{'type': 'ContinueStatement', 'range': [2878, 2878]}]}, {'type': 'ExpressionStatement', 'range': [2880, 2888], 'children': [{'type': 'AssignmentExpression', 'name': 'key', 'range': [2881, 2888], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [2881, 2881]}, {'type': 'Identifier', 'name': 'value', 'range': [2885, 2885]}]}]}]}]}, {'type': 'ReturnStatement', 'range': [2890, 2891], 'children': [{'type': 'Identifier', 'name': 'result', 'range': [2890, 2890]}]}]}]}]}]}]}
2025-01-08 10:34:49,811 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:36:56,313 - ERROR - Failed to parse Step 5 result
2025-01-08 10:36:56,314 - INFO - Completed main AST analysis flow
2025-01-08 10:36:56,315 - INFO - Successfully processed chunk
2025-01-08 10:36:56,647 - INFO - Starting code generation from AST
2025-01-08 10:36:57,257 - ERROR - Error in get_code_from_ast: Error code: 400 - {'error': {'message': "This model's maximum context length is 65536 tokens. However, you requested 72781 tokens (64589 in the messages, 8192 in the completion). Please reduce the length of the messages or completion.", 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_request_error'}}
2025-01-08 10:36:57,258 - INFO - Starting static code similarity comparison
2025-01-08 10:36:57,273 - INFO - Static similarity result: {'final_score': 20.1, 'length_similarity': 0.0, 'token_similarity': 0.0, 'structure_similarity': 0.0, 'function_similarity': 100, 'complexity_similarity': 1.01, 'variable_similarity': 100}
