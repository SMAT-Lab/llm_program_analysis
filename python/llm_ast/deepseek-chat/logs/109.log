2025-01-08 10:03:00,354 - INFO - Processing sample 109
2025-01-08 10:03:00,354 - INFO - Starting Step 0: Splitting code into top-level declarations
2025-01-08 10:03:06,030 - INFO - Successfully split code into 8 top-level declarations
2025-01-08 10:03:06,032 - INFO - Processing chunk #0 (size=175 chars, start_index=0)
2025-01-08 10:03:06,033 - INFO - Processing chunk with 175 chars starting at index 0
2025-01-08 10:03:06,033 - INFO - Starting main AST analysis flow
2025-01-08 10:03:06,033 - INFO - Tokenized code into 57 tokens
2025-01-08 10:03:06,033 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:03:06,038 - INFO - Processing chunk #1 (size=865 chars, start_index=57)
2025-01-08 10:03:06,038 - INFO - Processing chunk with 865 chars starting at index 57
2025-01-08 10:03:06,038 - INFO - Starting main AST analysis flow
2025-01-08 10:03:06,038 - INFO - Tokenized code into 57 tokens
2025-01-08 10:03:06,038 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:03:06,040 - INFO - Processing chunk #2 (size=2 chars, start_index=114)
2025-01-08 10:03:06,040 - INFO - Processing chunk with 2 chars starting at index 114
2025-01-08 10:03:06,040 - INFO - Starting main AST analysis flow
2025-01-08 10:03:06,040 - INFO - Tokenized code into 2 tokens
2025-01-08 10:03:06,040 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:03:06,042 - INFO - Processing chunk #3 (size=977 chars, start_index=116)
2025-01-08 10:03:06,042 - INFO - Processing chunk with 977 chars starting at index 116
2025-01-08 10:03:06,042 - INFO - Starting main AST analysis flow
2025-01-08 10:03:06,042 - INFO - Tokenized code into 82 tokens
2025-01-08 10:03:06,043 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:03:06,044 - INFO - Processing chunk #4 (size=2 chars, start_index=198)
2025-01-08 10:03:06,044 - INFO - Processing chunk with 2 chars starting at index 198
2025-01-08 10:03:06,044 - INFO - Starting main AST analysis flow
2025-01-08 10:03:06,044 - INFO - Tokenized code into 2 tokens
2025-01-08 10:03:06,044 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:03:06,050 - INFO - Processing chunk #5 (size=1311 chars, start_index=200)
2025-01-08 10:03:06,050 - INFO - Processing chunk with 1311 chars starting at index 200
2025-01-08 10:03:06,050 - INFO - Starting main AST analysis flow
2025-01-08 10:03:06,050 - INFO - Tokenized code into 161 tokens
2025-01-08 10:03:06,051 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:03:06,061 - INFO - Processing chunk #6 (size=2 chars, start_index=361)
2025-01-08 10:03:06,061 - INFO - Processing chunk with 2 chars starting at index 361
2025-01-08 10:03:06,061 - INFO - Starting main AST analysis flow
2025-01-08 10:03:06,061 - INFO - Tokenized code into 2 tokens
2025-01-08 10:03:06,065 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:03:06,067 - INFO - Processing chunk #7 (size=70 chars, start_index=363)
2025-01-08 10:03:06,067 - INFO - Processing chunk with 70 chars starting at index 363
2025-01-08 10:03:06,067 - INFO - Starting main AST analysis flow
2025-01-08 10:03:06,067 - INFO - Tokenized code into 18 tokens
2025-01-08 10:03:06,067 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:03:07,866 - INFO - Step 1 result: {'error': 'No top-level declarations found in the provided token list.'}
2025-01-08 10:03:07,867 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:03:08,200 - INFO - Step 1 result: {'type': 'Program', 'name': 'logical_left_shift', 'range': [57, 113], 'children': []}
2025-01-08 10:03:08,200 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:03:08,230 - INFO - Step 1 result: {'type': 'Program', 'name': 'arithmetic_right_shift', 'range': [200, 360], 'children': []}
2025-01-08 10:03:08,230 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:03:08,295 - INFO - Step 1 result: {'type': 'Program', 'name': 'logical_right_shift', 'range': [116, 197], 'children': []}
2025-01-08 10:03:08,295 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:03:08,305 - INFO - Step 1 result: {'error': "Insufficient token data provided for AST analysis. The token list does not contain enough information to identify any top-level declarations in the 'cangjie' code."}
2025-01-08 10:03:08,306 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:03:08,430 - INFO - Step 1 result: {'error': "Insufficient data to identify top-level declarations. The provided token list does not contain any tokens that can be identified as part of a top-level declaration in the 'cangjie' programming language."}
2025-01-08 10:03:08,430 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:03:08,458 - INFO - Step 1 result: {'error': "Insufficient data to identify top-level declarations. The provided token list does not contain any tokens that can be identified as part of a top-level declaration in the 'cangjie' programming language."}
2025-01-08 10:03:08,458 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:03:09,738 - INFO - Step 2 result: {'error': 'No top-level declarations found in the provided token list.'}
2025-01-08 10:03:09,738 - INFO - Starting Step 3: AST simplification
2025-01-08 10:03:10,114 - INFO - Step 2 result: {'error': "Insufficient token data provided for AST analysis. The token list does not contain enough information to identify any top-level declarations or to parse inner content in the 'cangjie' code."}
2025-01-08 10:03:10,114 - INFO - Starting Step 3: AST simplification
2025-01-08 10:03:10,424 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [363, 380], 'children': [{'type': 'IfStatement', 'name': '', 'range': [363, 369], 'children': []}, {'type': 'ImportStatement', 'name': 'doctest', 'range': [370, 372], 'children': []}, {'type': 'ExpressionStatement', 'name': '', 'range': [374, 379], 'children': [{'type': 'CallExpression', 'name': 'testmod', 'range': [374, 378], 'children': []}]}]}
2025-01-08 10:03:10,424 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:03:10,481 - INFO - Step 2 result: {'error': "Insufficient data to identify top-level declarations. The provided token list does not contain any tokens that can be identified as part of a top-level declaration in the 'cangjie' programming language."}
2025-01-08 10:03:10,481 - INFO - Starting Step 3: AST simplification
2025-01-08 10:03:10,486 - INFO - Step 2 result: {'error': "Insufficient data to identify top-level declarations. The provided token list does not contain any tokens that can be identified as part of a top-level declaration in the 'cangjie' programming language."}
2025-01-08 10:03:10,486 - INFO - Starting Step 3: AST simplification
2025-01-08 10:03:12,100 - INFO - Step 3 result: {'error': "Insufficient token data provided for AST analysis. The token list does not contain enough information to identify any top-level declarations or to parse inner content in the 'cangjie' code."}
2025-01-08 10:03:12,101 - INFO - Starting Step 4: AST normalization
2025-01-08 10:03:12,571 - INFO - Step 3 result: {'error': "Insufficient data to identify top-level declarations. The provided token list does not contain any tokens that can be identified as part of a top-level declaration in the 'cangjie' programming language."}
2025-01-08 10:03:12,571 - INFO - Starting Step 4: AST normalization
2025-01-08 10:03:12,605 - INFO - Step 3 result: {'error': "Insufficient data to identify top-level declarations. The provided token list does not contain any tokens that can be identified as part of a top-level declaration in the 'cangjie' programming language."}
2025-01-08 10:03:12,605 - INFO - Starting Step 4: AST normalization
2025-01-08 10:03:13,891 - INFO - Step 4 result: {'type': 'Program', 'name': 'cangjie', 'range': [0, 0], 'children': []}
2025-01-08 10:03:13,891 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:03:14,277 - INFO - Step 3 result: {'refined_ast': [{'type': 'comment', 'name': 'Information on binary shifts', 'range': [0, 6], 'children': []}, {'type': 'url', 'name': 'https://docs.python.org/3/library/stdtypes.html#bitwise-operations-on-integer-types', 'range': [7, 35], 'children': []}, {'type': 'comment', 'name': 'https://www.interviewcake.com/concept/java/bit-shift', 'range': [36, 54], 'children': []}, {'type': 'whitespace', 'name': 'newlines', 'range': [55, 56], 'children': []}]}
2025-01-08 10:03:14,277 - INFO - Starting Step 4: AST normalization
2025-01-08 10:03:14,421 - INFO - Step 4 result: {'type': 'Program', 'name': 'Unknown', 'range': [0, 0], 'children': []}
2025-01-08 10:03:14,421 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:03:14,455 - INFO - Step 4 result: {'type': 'Program', 'name': 'Unknown', 'range': [0, 0], 'children': []}
2025-01-08 10:03:14,455 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:03:15,742 - INFO - Step 5 result: {'type': 'Program', 'name': 'cangjie', 'range': [0, 0], 'children': []}
2025-01-08 10:03:15,742 - INFO - Completed main AST analysis flow
2025-01-08 10:03:15,742 - INFO - Successfully processed chunk
2025-01-08 10:03:16,176 - INFO - Step 5 result: {'type': 'Program', 'name': 'Unknown', 'range': [0, 0], 'children': []}
2025-01-08 10:03:16,176 - INFO - Completed main AST analysis flow
2025-01-08 10:03:16,176 - INFO - Successfully processed chunk
2025-01-08 10:03:16,185 - INFO - Step 5 result: {'type': 'Program', 'name': 'Unknown', 'range': [0, 0], 'children': []}
2025-01-08 10:03:16,186 - INFO - Completed main AST analysis flow
2025-01-08 10:03:16,186 - INFO - Successfully processed chunk
2025-01-08 10:03:19,066 - INFO - Step 4 result: {'refined_ast': [{'type': 'Comment', 'name': 'Information on binary shifts', 'range': [0, 6], 'children': []}, {'type': 'Url', 'name': 'https://docs.python.org/3/library/stdtypes.html#bitwise-operations-on-integer-types', 'range': [7, 35], 'children': []}, {'type': 'Comment', 'name': 'https://www.interviewcake.com/concept/java/bit-shift', 'range': [36, 54], 'children': []}, {'type': 'Whitespace', 'name': 'newlines', 'range': [55, 56], 'children': []}]}
2025-01-08 10:03:19,066 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:03:21,025 - INFO - Step 2 result: {'type': 'Program', 'name': 'logical_right_shift', 'range': [116, 197], 'children': [{'type': 'FunctionDeclaration', 'name': 'logical_right_shift', 'range': [116, 197], 'children': [{'type': 'Parameters', 'name': 'parameters', 'range': [118, 126], 'children': [{'type': 'Parameter', 'name': 'number', 'range': [119, 121], 'children': []}, {'type': 'Parameter', 'name': 'shift_amount', 'range': [123, 125], 'children': []}]}, {'type': 'ReturnType', 'name': 'return_type', 'range': [127, 129], 'children': []}, {'type': 'Docstring', 'name': 'docstring', 'range': [132, 134], 'children': []}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [136, 150], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [137, 143], 'children': []}, {'type': 'RaiseStatement', 'name': 'raise_statement', 'range': [146, 150], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'binary_number', 'range': [153, 165], 'children': []}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [167, 179], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [168, 175], 'children': []}, {'type': 'ReturnStatement', 'name': 'return_statement', 'range': [177, 179], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'shifted_binary_number', 'range': [180, 191], 'children': []}, {'type': 'ReturnStatement', 'name': 'return_statement', 'range': [193, 197], 'children': []}]}]}
2025-01-08 10:03:21,025 - INFO - Starting Step 3: AST simplification
2025-01-08 10:03:21,193 - INFO - Step 2 result: {'nodes': [{'type': 'IfStatement', 'name': '', 'range': [363, 369], 'children': [{'type': 'Condition', 'name': '', 'range': [363, 368], 'children': [{'type': 'BinaryExpression', 'name': '', 'range': [364, 367], 'children': [{'type': 'Identifier', 'name': '__name__', 'range': [364, 364], 'children': []}, {'type': 'Operator', 'name': '==', 'range': [365, 366], 'children': []}, {'type': 'StringLiteral', 'name': '"__main__"', 'range': [367, 367], 'children': []}]}]}]}, {'type': 'ImportStatement', 'name': 'doctest', 'range': [370, 372], 'children': [{'type': 'Identifier', 'name': 'doctest', 'range': [371, 371], 'children': []}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [374, 379], 'children': [{'type': 'CallExpression', 'name': 'testmod', 'range': [374, 378], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [374, 376], 'children': [{'type': 'Identifier', 'name': 'doctest', 'range': [374, 374], 'children': []}, {'type': 'Operator', 'name': '.', 'range': [375, 375], 'children': []}, {'type': 'Identifier', 'name': 'testmod', 'range': [376, 376], 'children': []}]}, {'type': 'Arguments', 'name': '', 'range': [377, 378], 'children': []}]}]}]}
2025-01-08 10:03:21,193 - INFO - Starting Step 3: AST simplification
2025-01-08 10:03:24,654 - INFO - Step 5 result: {'type': 'Program', 'name': 'CombinedProgram', 'range': [0, 56], 'children': [{'type': 'Comment', 'name': 'Information on binary shifts', 'range': [0, 6], 'children': []}, {'type': 'Url', 'name': 'https://docs.python.org/3/library/stdtypes.html#bitwise-operations-on-integer-types', 'range': [7, 35], 'children': []}, {'type': 'Comment', 'name': 'https://www.interviewcake.com/concept/java/bit-shift', 'range': [36, 54], 'children': []}, {'type': 'Whitespace', 'name': 'newlines', 'range': [55, 56], 'children': []}]}
2025-01-08 10:03:24,655 - INFO - Completed main AST analysis flow
2025-01-08 10:03:24,655 - INFO - Successfully processed chunk
2025-01-08 10:03:28,163 - INFO - Step 2 result: {'type': 'Program', 'name': 'arithmetic_right_shift', 'range': [200, 360], 'children': [{'type': 'FunctionDeclaration', 'name': 'arithmetic_right_shift', 'range': [200, 360], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [202, 210], 'children': [{'type': 'Parameter', 'name': 'number', 'range': [203, 205], 'children': []}, {'type': 'Parameter', 'name': 'shift_amount', 'range': [207, 209], 'children': []}]}, {'type': 'ReturnType', 'name': 'return_type', 'range': [211, 213], 'children': []}, {'type': 'Docstring', 'name': 'docstring', 'range': [216, 218], 'children': []}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [220, 254], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [221, 224], 'children': []}, {'type': 'Block', 'name': 'then_block', 'range': [225, 254], 'children': [{'type': 'Assignment', 'name': 'assignment', 'range': [234, 253], 'children': [{'type': 'Variable', 'name': 'binary_number', 'range': [234, 234], 'children': []}, {'type': 'Expression', 'name': 'expression', 'range': [235, 253], 'children': []}]}]}]}, {'type': 'ElseStatement', 'name': 'else_statement', 'range': [255, 309], 'children': [{'type': 'Block', 'name': 'else_block', 'range': [256, 309], 'children': [{'type': 'Assignment', 'name': 'assignment', 'range': [268, 287], 'children': [{'type': 'Variable', 'name': 'binary_number', 'range': [268, 268], 'children': []}, {'type': 'Expression', 'name': 'expression', 'range': [269, 287], 'children': []}]}, {'type': 'Assignment', 'name': 'assignment', 'range': [289, 308], 'children': [{'type': 'Variable', 'name': 'binary_number', 'range': [289, 289], 'children': []}, {'type': 'Expression', 'name': 'expression', 'range': [290, 308], 'children': []}]}]}]}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [311, 333], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [312, 319], 'children': []}, {'type': 'Block', 'name': 'then_block', 'range': [320, 333], 'children': [{'type': 'ReturnStatement', 'name': 'return_statement', 'range': [321, 333], 'children': [{'type': 'Expression', 'name': 'expression', 'range': [322, 333], 'children': []}]}]}]}, {'type': 'ReturnStatement', 'name': 'return_statement', 'range': [334, 359], 'children': [{'type': 'Expression', 'name': 'expression', 'range': [335, 359], 'children': []}]}]}]}
2025-01-08 10:03:28,163 - INFO - Starting Step 3: AST simplification
2025-01-08 10:03:28,205 - INFO - Step 2 result: {'type': 'Program', 'name': 'logical_left_shift', 'range': [57, 113], 'children': [{'type': 'FunctionDeclaration', 'name': 'logical_left_shift', 'range': [57, 113], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [59, 67], 'children': [{'type': 'Parameter', 'name': 'number', 'range': [60, 62], 'children': []}, {'type': 'Parameter', 'name': 'shift_amount', 'range': [64, 66], 'children': []}]}, {'type': 'ReturnType', 'name': 'str', 'range': [68, 70], 'children': []}, {'type': 'Docstring', 'name': 'docstring', 'range': [73, 75], 'children': []}, {'type': 'IfStatement', 'name': 'if', 'range': [77, 92], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [78, 84], 'children': [{'type': 'BinaryExpression', 'name': '<', 'range': [79, 80], 'children': [{'type': 'Identifier', 'name': 'number', 'range': [78, 78], 'children': []}, {'type': 'Literal', 'name': '0', 'range': [80, 80], 'children': []}]}, {'type': 'BinaryExpression', 'name': '<', 'range': [83, 84], 'children': [{'type': 'Identifier', 'name': 'shift_amount', 'range': [82, 82], 'children': []}, {'type': 'Literal', 'name': '0', 'range': [84, 84], 'children': []}]}]}, {'type': 'Block', 'name': 'block', 'range': [85, 92], 'children': [{'type': 'RaiseStatement', 'name': 'raise', 'range': [87, 91], 'children': [{'type': 'CallExpression', 'name': 'ValueError', 'range': [88, 91], 'children': [{'type': 'Literal', 'name': '"both inputs must be positive integers"', 'range': [90, 90], 'children': []}]}]}]}]}, {'type': 'AssignmentExpression', 'name': 'binary_number', 'range': [94, 110], 'children': [{'type': 'CallExpression', 'name': 'str', 'range': [96, 102], 'children': [{'type': 'CallExpression', 'name': 'bin', 'range': [98, 101], 'children': [{'type': 'Identifier', 'name': 'number', 'range': [100, 100], 'children': []}]}]}, {'type': 'BinaryExpression', 'name': '+=', 'range': [105, 109], 'children': [{'type': 'Literal', 'name': '"0"', 'range': [107, 107], 'children': []}, {'type': 'Identifier', 'name': 'shift_amount', 'range': [109, 109], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [111, 113], 'children': [{'type': 'Identifier', 'name': 'binary_number', 'range': [112, 112], 'children': []}]}]}]}
2025-01-08 10:03:28,206 - INFO - Starting Step 3: AST simplification
2025-01-08 10:03:32,550 - INFO - Step 3 result: {'nodes': [{'type': 'IfStatement', 'name': '', 'range': [363, 369], 'children': [{'type': 'Condition', 'name': '', 'range': [363, 368], 'children': [{'type': 'BinaryExpression', 'name': '', 'range': [364, 367], 'children': [{'type': 'Identifier', 'name': '__name__', 'range': [364, 364], 'children': []}, {'type': 'Operator', 'name': '==', 'range': [365, 366], 'children': []}, {'type': 'StringLiteral', 'name': '"__main__"', 'range': [367, 367], 'children': []}]}]}]}, {'type': 'ImportStatement', 'name': 'doctest', 'range': [370, 372], 'children': [{'type': 'Identifier', 'name': 'doctest', 'range': [371, 371], 'children': []}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [374, 379], 'children': [{'type': 'CallExpression', 'name': 'testmod', 'range': [374, 378], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [374, 376], 'children': [{'type': 'Identifier', 'name': 'doctest', 'range': [374, 374], 'children': []}, {'type': 'Identifier', 'name': 'testmod', 'range': [376, 376], 'children': []}]}]}]}]}
2025-01-08 10:03:32,550 - INFO - Starting Step 4: AST normalization
2025-01-08 10:03:34,475 - INFO - Step 3 result: {'type': 'Program', 'name': 'logical_right_shift', 'range': [116, 197], 'children': [{'type': 'FunctionDeclaration', 'name': 'logical_right_shift', 'range': [116, 197], 'children': [{'type': 'Parameters', 'name': 'parameters', 'range': [118, 126], 'children': [{'type': 'Parameter', 'name': 'number', 'range': [119, 121], 'children': []}, {'type': 'Parameter', 'name': 'shift_amount', 'range': [123, 125], 'children': []}]}, {'type': 'ReturnType', 'name': 'return_type', 'range': [127, 129], 'children': []}, {'type': 'Docstring', 'name': 'docstring', 'range': [132, 134], 'children': []}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [136, 150], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [137, 143], 'children': []}, {'type': 'RaiseStatement', 'name': 'raise_statement', 'range': [146, 150], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'binary_number', 'range': [153, 165], 'children': []}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [167, 179], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [168, 175], 'children': []}, {'type': 'ReturnStatement', 'name': 'return_statement', 'range': [177, 179], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'shifted_binary_number', 'range': [180, 191], 'children': []}, {'type': 'ReturnStatement', 'name': 'return_statement', 'range': [193, 197], 'children': []}]}]}
2025-01-08 10:03:34,475 - INFO - Starting Step 4: AST normalization
2025-01-08 10:03:43,126 - INFO - Step 4 result: {'nodes': [{'type': 'IfStatement', 'name': '', 'range': [363, 369], 'children': [{'type': 'Condition', 'name': '', 'range': [363, 368], 'children': [{'type': 'BinaryExpression', 'name': '', 'range': [364, 367], 'children': [{'type': 'Identifier', 'name': '__name__', 'range': [364, 364], 'children': []}, {'type': 'Operator', 'name': '==', 'range': [365, 366], 'children': []}, {'type': 'StringLiteral', 'name': '"__main__"', 'range': [367, 367], 'children': []}]}]}]}, {'type': 'ImportStatement', 'name': 'doctest', 'range': [370, 372], 'children': [{'type': 'Identifier', 'name': 'doctest', 'range': [371, 371], 'children': []}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [374, 379], 'children': [{'type': 'CallExpression', 'name': 'testmod', 'range': [374, 378], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [374, 376], 'children': [{'type': 'Identifier', 'name': 'doctest', 'range': [374, 374], 'children': []}, {'type': 'Identifier', 'name': 'testmod', 'range': [376, 376], 'children': []}]}]}]}]}
2025-01-08 10:03:43,126 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:03:47,419 - INFO - Step 4 result: {'type': 'Program', 'name': 'logical_right_shift', 'range': [116, 197], 'children': [{'type': 'FunctionDecl', 'name': 'logical_right_shift', 'range': [116, 197], 'children': [{'type': 'Parameters', 'name': 'parameters', 'range': [118, 126], 'children': [{'type': 'Parameter', 'name': 'number', 'range': [119, 121], 'children': []}, {'type': 'Parameter', 'name': 'shift_amount', 'range': [123, 125], 'children': []}]}, {'type': 'ReturnType', 'name': 'return_type', 'range': [127, 129], 'children': []}, {'type': 'Docstring', 'name': 'docstring', 'range': [132, 134], 'children': []}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [136, 150], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [137, 143], 'children': []}, {'type': 'RaiseStatement', 'name': 'raise_statement', 'range': [146, 150], 'children': []}]}, {'type': 'VariableDecl', 'name': 'binary_number', 'range': [153, 165], 'children': []}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [167, 179], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [168, 175], 'children': []}, {'type': 'ReturnStatement', 'name': 'return_statement', 'range': [177, 179], 'children': []}]}, {'type': 'VariableDecl', 'name': 'shifted_binary_number', 'range': [180, 191], 'children': []}, {'type': 'ReturnStatement', 'name': 'return_statement', 'range': [193, 197], 'children': []}]}]}
2025-01-08 10:03:47,419 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:03:48,921 - INFO - Step 3 result: {'type': 'Program', 'name': 'logical_left_shift', 'range': [57, 113], 'children': [{'type': 'FunctionDeclaration', 'name': 'logical_left_shift', 'range': [57, 113], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [59, 67], 'children': [{'type': 'Parameter', 'name': 'number', 'range': [60, 62], 'children': []}, {'type': 'Parameter', 'name': 'shift_amount', 'range': [64, 66], 'children': []}]}, {'type': 'ReturnType', 'name': 'str', 'range': [68, 70], 'children': []}, {'type': 'Docstring', 'name': 'docstring', 'range': [73, 75], 'children': []}, {'type': 'IfStatement', 'name': 'if', 'range': [77, 92], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [78, 84], 'children': [{'type': 'BinaryExpression', 'name': '<', 'range': [79, 80], 'children': [{'type': 'Identifier', 'name': 'number', 'range': [78, 78], 'children': []}, {'type': 'Literal', 'name': '0', 'range': [80, 80], 'children': []}]}, {'type': 'BinaryExpression', 'name': '<', 'range': [83, 84], 'children': [{'type': 'Identifier', 'name': 'shift_amount', 'range': [82, 82], 'children': []}, {'type': 'Literal', 'name': '0', 'range': [84, 84], 'children': []}]}]}, {'type': 'Block', 'name': 'block', 'range': [85, 92], 'children': [{'type': 'RaiseStatement', 'name': 'raise', 'range': [87, 91], 'children': [{'type': 'CallExpression', 'name': 'ValueError', 'range': [88, 91], 'children': [{'type': 'Literal', 'name': '"both inputs must be positive integers"', 'range': [90, 90], 'children': []}]}]}]}]}, {'type': 'AssignmentExpression', 'name': 'binary_number', 'range': [94, 110], 'children': [{'type': 'CallExpression', 'name': 'str', 'range': [96, 102], 'children': [{'type': 'CallExpression', 'name': 'bin', 'range': [98, 101], 'children': [{'type': 'Identifier', 'name': 'number', 'range': [100, 100], 'children': []}]}]}, {'type': 'BinaryExpression', 'name': '+=', 'range': [105, 109], 'children': [{'type': 'Literal', 'name': '"0"', 'range': [107, 107], 'children': []}, {'type': 'Identifier', 'name': 'shift_amount', 'range': [109, 109], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [111, 113], 'children': [{'type': 'Identifier', 'name': 'binary_number', 'range': [112, 112], 'children': []}]}]}]}
2025-01-08 10:03:48,921 - INFO - Starting Step 4: AST normalization
2025-01-08 10:03:49,610 - INFO - Step 3 result: {'type': 'Program', 'name': 'arithmetic_right_shift', 'range': [200, 360], 'children': [{'type': 'FunctionDeclaration', 'name': 'arithmetic_right_shift', 'range': [200, 360], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [202, 210], 'children': [{'type': 'Parameter', 'name': 'number', 'range': [203, 205], 'children': []}, {'type': 'Parameter', 'name': 'shift_amount', 'range': [207, 209], 'children': []}]}, {'type': 'ReturnType', 'name': 'return_type', 'range': [211, 213], 'children': []}, {'type': 'Docstring', 'name': 'docstring', 'range': [216, 218], 'children': []}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [220, 254], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [221, 224], 'children': []}, {'type': 'Block', 'name': 'then_block', 'range': [225, 254], 'children': [{'type': 'Assignment', 'name': 'assignment', 'range': [234, 253], 'children': [{'type': 'Variable', 'name': 'binary_number', 'range': [234, 234], 'children': []}, {'type': 'Expression', 'name': 'expression', 'range': [235, 253], 'children': []}]}]}]}, {'type': 'ElseStatement', 'name': 'else_statement', 'range': [255, 309], 'children': [{'type': 'Block', 'name': 'else_block', 'range': [256, 309], 'children': [{'type': 'Assignment', 'name': 'assignment', 'range': [268, 287], 'children': [{'type': 'Variable', 'name': 'binary_number', 'range': [268, 268], 'children': []}, {'type': 'Expression', 'name': 'expression', 'range': [269, 287], 'children': []}]}, {'type': 'Assignment', 'name': 'assignment', 'range': [289, 308], 'children': [{'type': 'Variable', 'name': 'binary_number', 'range': [289, 289], 'children': []}, {'type': 'Expression', 'name': 'expression', 'range': [290, 308], 'children': []}]}]}]}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [311, 333], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [312, 319], 'children': []}, {'type': 'Block', 'name': 'then_block', 'range': [320, 333], 'children': [{'type': 'ReturnStatement', 'name': 'return_statement', 'range': [321, 333], 'children': [{'type': 'Expression', 'name': 'expression', 'range': [322, 333], 'children': []}]}]}]}, {'type': 'ReturnStatement', 'name': 'return_statement', 'range': [334, 359], 'children': [{'type': 'Expression', 'name': 'expression', 'range': [335, 359], 'children': []}]}]}]}
2025-01-08 10:03:49,610 - INFO - Starting Step 4: AST normalization
2025-01-08 10:03:53,833 - INFO - Step 5 result: {'nodes': [{'type': 'Program', 'name': 'MainOrSomething', 'range': [363, 379], 'children': [{'type': 'IfStatement', 'name': '', 'range': [363, 369], 'children': [{'type': 'Condition', 'name': '', 'range': [363, 368], 'children': [{'type': 'BinaryExpression', 'name': '', 'range': [364, 367], 'children': [{'type': 'Identifier', 'name': '__name__', 'range': [364, 364], 'children': []}, {'type': 'Operator', 'name': '==', 'range': [365, 366], 'children': []}, {'type': 'StringLiteral', 'name': '"__main__"', 'range': [367, 367], 'children': []}]}]}]}, {'type': 'ImportStatement', 'name': 'doctest', 'range': [370, 372], 'children': [{'type': 'Identifier', 'name': 'doctest', 'range': [371, 371], 'children': []}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [374, 379], 'children': [{'type': 'CallExpression', 'name': 'testmod', 'range': [374, 378], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [374, 376], 'children': [{'type': 'Identifier', 'name': 'doctest', 'range': [374, 374], 'children': []}, {'type': 'Identifier', 'name': 'testmod', 'range': [376, 376], 'children': []}]}]}]}]}]}
2025-01-08 10:03:53,834 - INFO - Completed main AST analysis flow
2025-01-08 10:03:53,834 - INFO - Successfully processed chunk
2025-01-08 10:03:59,459 - INFO - Step 5 result: {'type': 'Program', 'name': 'logical_right_shift', 'range': [116, 197], 'children': [{'type': 'FunctionDecl', 'name': 'logical_right_shift', 'range': [116, 197], 'children': [{'type': 'Parameters', 'name': 'parameters', 'range': [118, 126], 'children': [{'type': 'Parameter', 'name': 'number', 'range': [119, 121], 'children': []}, {'type': 'Parameter', 'name': 'shift_amount', 'range': [123, 125], 'children': []}]}, {'type': 'ReturnType', 'name': 'return_type', 'range': [127, 129], 'children': []}, {'type': 'Docstring', 'name': 'docstring', 'range': [132, 134], 'children': []}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [136, 150], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [137, 143], 'children': []}, {'type': 'RaiseStatement', 'name': 'raise_statement', 'range': [146, 150], 'children': []}]}, {'type': 'VariableDecl', 'name': 'binary_number', 'range': [153, 165], 'children': []}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [167, 179], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [168, 175], 'children': []}, {'type': 'ReturnStatement', 'name': 'return_statement', 'range': [177, 179], 'children': []}]}, {'type': 'VariableDecl', 'name': 'shifted_binary_number', 'range': [180, 191], 'children': []}, {'type': 'ReturnStatement', 'name': 'return_statement', 'range': [193, 197], 'children': []}]}]}
2025-01-08 10:03:59,459 - INFO - Completed main AST analysis flow
2025-01-08 10:03:59,460 - INFO - Successfully processed chunk
2025-01-08 10:04:10,205 - INFO - Step 4 result: {'type': 'Program', 'name': 'logical_left_shift', 'range': [57, 113], 'children': [{'type': 'FunctionDecl', 'name': 'logical_left_shift', 'range': [57, 113], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [59, 67], 'children': [{'type': 'Parameter', 'name': 'number', 'range': [60, 62], 'children': []}, {'type': 'Parameter', 'name': 'shift_amount', 'range': [64, 66], 'children': []}]}, {'type': 'ReturnType', 'name': 'str', 'range': [68, 70], 'children': []}, {'type': 'Docstring', 'name': 'docstring', 'range': [73, 75], 'children': []}, {'type': 'IfStatement', 'name': 'if', 'range': [77, 92], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [78, 84], 'children': [{'type': 'BinaryExpression', 'name': '<', 'range': [79, 80], 'children': [{'type': 'Identifier', 'name': 'number', 'range': [78, 78], 'children': []}, {'type': 'Literal', 'name': '0', 'range': [80, 80], 'children': []}]}, {'type': 'BinaryExpression', 'name': '<', 'range': [83, 84], 'children': [{'type': 'Identifier', 'name': 'shift_amount', 'range': [82, 82], 'children': []}, {'type': 'Literal', 'name': '0', 'range': [84, 84], 'children': []}]}]}, {'type': 'Block', 'name': 'block', 'range': [85, 92], 'children': [{'type': 'RaiseStatement', 'name': 'raise', 'range': [87, 91], 'children': [{'type': 'CallExpression', 'name': 'ValueError', 'range': [88, 91], 'children': [{'type': 'Literal', 'name': '"both inputs must be positive integers"', 'range': [90, 90], 'children': []}]}]}]}]}, {'type': 'AssignmentExpression', 'name': 'binary_number', 'range': [94, 110], 'children': [{'type': 'CallExpression', 'name': 'str', 'range': [96, 102], 'children': [{'type': 'CallExpression', 'name': 'bin', 'range': [98, 101], 'children': [{'type': 'Identifier', 'name': 'number', 'range': [100, 100], 'children': []}]}]}, {'type': 'BinaryExpression', 'name': '+=', 'range': [105, 109], 'children': [{'type': 'Literal', 'name': '"0"', 'range': [107, 107], 'children': []}, {'type': 'Identifier', 'name': 'shift_amount', 'range': [109, 109], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [111, 113], 'children': [{'type': 'Identifier', 'name': 'binary_number', 'range': [112, 112], 'children': []}]}]}]}
2025-01-08 10:04:10,206 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:04:11,016 - INFO - Step 4 result: {'type': 'Program', 'name': 'arithmetic_right_shift', 'range': [200, 360], 'children': [{'type': 'FunctionDecl', 'name': 'arithmetic_right_shift', 'range': [200, 360], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [202, 210], 'children': [{'type': 'Parameter', 'name': 'number', 'range': [203, 205], 'children': []}, {'type': 'Parameter', 'name': 'shift_amount', 'range': [207, 209], 'children': []}]}, {'type': 'ReturnType', 'name': 'return_type', 'range': [211, 213], 'children': []}, {'type': 'Docstring', 'name': 'docstring', 'range': [216, 218], 'children': []}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [220, 254], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [221, 224], 'children': []}, {'type': 'Block', 'name': 'then_block', 'range': [225, 254], 'children': [{'type': 'Assignment', 'name': 'assignment', 'range': [234, 253], 'children': [{'type': 'Identifier', 'name': 'binary_number', 'range': [234, 234], 'children': []}, {'type': 'Expression', 'name': 'expression', 'range': [235, 253], 'children': []}]}]}]}, {'type': 'ElseStatement', 'name': 'else_statement', 'range': [255, 309], 'children': [{'type': 'Block', 'name': 'else_block', 'range': [256, 309], 'children': [{'type': 'Assignment', 'name': 'assignment', 'range': [268, 287], 'children': [{'type': 'Identifier', 'name': 'binary_number', 'range': [268, 268], 'children': []}, {'type': 'Expression', 'name': 'expression', 'range': [269, 287], 'children': []}]}, {'type': 'Assignment', 'name': 'assignment', 'range': [289, 308], 'children': [{'type': 'Identifier', 'name': 'binary_number', 'range': [289, 289], 'children': []}, {'type': 'Expression', 'name': 'expression', 'range': [290, 308], 'children': []}]}]}]}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [311, 333], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [312, 319], 'children': []}, {'type': 'Block', 'name': 'then_block', 'range': [320, 333], 'children': [{'type': 'ReturnStatement', 'name': 'return_statement', 'range': [321, 333], 'children': [{'type': 'Expression', 'name': 'expression', 'range': [322, 333], 'children': []}]}]}]}, {'type': 'ReturnStatement', 'name': 'return_statement', 'range': [334, 359], 'children': [{'type': 'Expression', 'name': 'expression', 'range': [335, 359], 'children': []}]}]}]}
2025-01-08 10:04:11,016 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:04:30,921 - INFO - Step 5 result: {'type': 'Program', 'name': 'logical_left_shift', 'range': [57, 113], 'children': [{'type': 'FunctionDecl', 'name': 'logical_left_shift', 'range': [57, 113], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [59, 67], 'children': [{'type': 'Parameter', 'name': 'number', 'range': [60, 62], 'children': []}, {'type': 'Parameter', 'name': 'shift_amount', 'range': [64, 66], 'children': []}]}, {'type': 'ReturnType', 'name': 'str', 'range': [68, 70], 'children': []}, {'type': 'Docstring', 'name': 'docstring', 'range': [73, 75], 'children': []}, {'type': 'IfStatement', 'name': 'if', 'range': [77, 92], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [78, 84], 'children': [{'type': 'BinaryExpression', 'name': '<', 'range': [79, 80], 'children': [{'type': 'Identifier', 'name': 'number', 'range': [78, 78], 'children': []}, {'type': 'Literal', 'name': '0', 'range': [80, 80], 'children': []}]}, {'type': 'BinaryExpression', 'name': '<', 'range': [83, 84], 'children': [{'type': 'Identifier', 'name': 'shift_amount', 'range': [82, 82], 'children': []}, {'type': 'Literal', 'name': '0', 'range': [84, 84], 'children': []}]}]}, {'type': 'Block', 'name': 'block', 'range': [85, 92], 'children': [{'type': 'RaiseStatement', 'name': 'raise', 'range': [87, 91], 'children': [{'type': 'CallExpression', 'name': 'ValueError', 'range': [88, 91], 'children': [{'type': 'Literal', 'name': '"both inputs must be positive integers"', 'range': [90, 90], 'children': []}]}]}]}]}, {'type': 'AssignmentExpression', 'name': 'binary_number', 'range': [94, 110], 'children': [{'type': 'CallExpression', 'name': 'str', 'range': [96, 102], 'children': [{'type': 'CallExpression', 'name': 'bin', 'range': [98, 101], 'children': [{'type': 'Identifier', 'name': 'number', 'range': [100, 100], 'children': []}]}]}, {'type': 'BinaryExpression', 'name': '+=', 'range': [105, 109], 'children': [{'type': 'Literal', 'name': '"0"', 'range': [107, 107], 'children': []}, {'type': 'Identifier', 'name': 'shift_amount', 'range': [109, 109], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [111, 113], 'children': [{'type': 'Identifier', 'name': 'binary_number', 'range': [112, 112], 'children': []}]}]}]}
2025-01-08 10:04:30,921 - INFO - Completed main AST analysis flow
2025-01-08 10:04:30,921 - INFO - Successfully processed chunk
2025-01-08 10:04:32,269 - INFO - Step 5 result: {'type': 'Program', 'name': 'arithmetic_right_shift', 'range': [200, 360], 'children': [{'type': 'FunctionDecl', 'name': 'arithmetic_right_shift', 'range': [200, 360], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [202, 210], 'children': [{'type': 'Parameter', 'name': 'number', 'range': [203, 205], 'children': []}, {'type': 'Parameter', 'name': 'shift_amount', 'range': [207, 209], 'children': []}]}, {'type': 'ReturnType', 'name': 'return_type', 'range': [211, 213], 'children': []}, {'type': 'Docstring', 'name': 'docstring', 'range': [216, 218], 'children': []}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [220, 254], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [221, 224], 'children': []}, {'type': 'Block', 'name': 'then_block', 'range': [225, 254], 'children': [{'type': 'Assignment', 'name': 'assignment', 'range': [234, 253], 'children': [{'type': 'Identifier', 'name': 'binary_number', 'range': [234, 234], 'children': []}, {'type': 'Expression', 'name': 'expression', 'range': [235, 253], 'children': []}]}]}]}, {'type': 'ElseStatement', 'name': 'else_statement', 'range': [255, 309], 'children': [{'type': 'Block', 'name': 'else_block', 'range': [256, 309], 'children': [{'type': 'Assignment', 'name': 'assignment', 'range': [268, 287], 'children': [{'type': 'Identifier', 'name': 'binary_number', 'range': [268, 268], 'children': []}, {'type': 'Expression', 'name': 'expression', 'range': [269, 287], 'children': []}]}, {'type': 'Assignment', 'name': 'assignment', 'range': [289, 308], 'children': [{'type': 'Identifier', 'name': 'binary_number', 'range': [289, 289], 'children': []}, {'type': 'Expression', 'name': 'expression', 'range': [290, 308], 'children': []}]}]}]}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [311, 333], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [312, 319], 'children': []}, {'type': 'Block', 'name': 'then_block', 'range': [320, 333], 'children': [{'type': 'ReturnStatement', 'name': 'return_statement', 'range': [321, 333], 'children': [{'type': 'Expression', 'name': 'expression', 'range': [322, 333], 'children': []}]}]}]}, {'type': 'ReturnStatement', 'name': 'return_statement', 'range': [334, 359], 'children': [{'type': 'Expression', 'name': 'expression', 'range': [335, 359], 'children': []}]}]}]}
2025-01-08 10:04:32,269 - INFO - Completed main AST analysis flow
2025-01-08 10:04:32,270 - INFO - Successfully processed chunk
2025-01-08 10:04:32,290 - INFO - Starting code generation from AST
2025-01-08 10:04:51,560 - INFO - Successfully generated code from AST
2025-01-08 10:04:51,560 - INFO - Starting static code similarity comparison
2025-01-08 10:04:51,573 - INFO - Static similarity result: {'final_score': 60.36, 'length_similarity': 56.92, 'token_similarity': 20.63, 'structure_similarity': 96.81, 'function_similarity': 100, 'complexity_similarity': 14.29, 'variable_similarity': 100}
