2025-01-08 10:27:27,768 - INFO - Processing sample 180
2025-01-08 10:27:27,768 - INFO - Starting Step 0: Splitting code into top-level declarations
2025-01-08 10:27:37,505 - INFO - Successfully split code into 9 top-level declarations
2025-01-08 10:27:38,742 - INFO - Processing chunk #0 (size=394 chars, start_index=0)
2025-01-08 10:27:38,742 - INFO - Processing chunk with 394 chars starting at index 0
2025-01-08 10:27:38,746 - INFO - Starting main AST analysis flow
2025-01-08 10:27:38,767 - INFO - Tokenized code into 80 tokens
2025-01-08 10:27:38,801 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:38,781 - INFO - Processing chunk #1 (size=679 chars, start_index=80)
2025-01-08 10:27:38,965 - INFO - Processing chunk with 679 chars starting at index 80
2025-01-08 10:27:38,966 - INFO - Starting main AST analysis flow
2025-01-08 10:27:39,013 - INFO - Tokenized code into 144 tokens
2025-01-08 10:27:39,013 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:40,946 - INFO - Processing chunk #2 (size=177 chars, start_index=224)
2025-01-08 10:27:41,027 - INFO - Processing chunk with 177 chars starting at index 224
2025-01-08 10:27:41,032 - INFO - Starting main AST analysis flow
2025-01-08 10:27:41,057 - INFO - Processing chunk #3 (size=388 chars, start_index=270)
2025-01-08 10:27:41,204 - INFO - Processing chunk with 388 chars starting at index 270
2025-01-08 10:27:41,103 - INFO - Processing chunk #4 (size=251 chars, start_index=347)
2025-01-08 10:27:41,068 - INFO - Tokenized code into 46 tokens
2025-01-08 10:27:41,209 - INFO - Starting main AST analysis flow
2025-01-08 10:27:41,224 - INFO - Processing chunk with 251 chars starting at index 347
2025-01-08 10:27:41,254 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:41,282 - INFO - Tokenized code into 77 tokens
2025-01-08 10:27:41,305 - INFO - Starting main AST analysis flow
2025-01-08 10:27:41,345 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:41,352 - INFO - Tokenized code into 56 tokens
2025-01-08 10:27:41,366 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:41,985 - INFO - Processing chunk #5 (size=195 chars, start_index=403)
2025-01-08 10:27:41,988 - INFO - Processing chunk with 195 chars starting at index 403
2025-01-08 10:27:41,988 - INFO - Starting main AST analysis flow
2025-01-08 10:27:41,988 - INFO - Tokenized code into 51 tokens
2025-01-08 10:27:41,988 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:41,990 - INFO - Processing chunk #6 (size=400 chars, start_index=454)
2025-01-08 10:27:41,990 - INFO - Processing chunk with 400 chars starting at index 454
2025-01-08 10:27:41,990 - INFO - Starting main AST analysis flow
2025-01-08 10:27:41,991 - INFO - Tokenized code into 73 tokens
2025-01-08 10:27:41,991 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:41,994 - INFO - Processing chunk #7 (size=252 chars, start_index=527)
2025-01-08 10:27:41,996 - INFO - Processing chunk with 252 chars starting at index 527
2025-01-08 10:27:41,996 - INFO - Starting main AST analysis flow
2025-01-08 10:27:41,996 - INFO - Tokenized code into 59 tokens
2025-01-08 10:27:41,996 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:42,003 - INFO - Processing chunk #8 (size=1585 chars, start_index=586)
2025-01-08 10:27:42,006 - INFO - Processing chunk with 1585 chars starting at index 586
2025-01-08 10:27:42,008 - INFO - Starting main AST analysis flow
2025-01-08 10:27:42,008 - INFO - Tokenized code into 265 tokens
2025-01-08 10:27:42,013 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:45,923 - INFO - Step 1 result: {'type': 'Program', 'name': 'get_or_create_user', 'range': [80, 223], 'children': []}
2025-01-08 10:27:45,924 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:27:49,736 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [0, 79], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 2], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [3, 9], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [11, 19], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [20, 24], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [25, 29], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [30, 36], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [38, 46], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [47, 59], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [60, 68], 'children': []}, {'type': 'VariableDeclaration', 'name': 'logger', 'range': [70, 78], 'children': []}]}
2025-01-08 10:27:50,044 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:27:50,517 - INFO - Step 1 result: {'type': 'Program', 'name': 'get_user_metadata', 'range': [347, 402], 'children': []}
2025-01-08 10:27:50,520 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:27:51,553 - INFO - Step 1 result: {'type': 'Program', 'name': 'migrate_and_encrypt_user_integrations', 'range': [586, 850], 'children': []}
2025-01-08 10:27:51,580 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:27:51,700 - INFO - Step 1 result: {'type': 'Program', 'name': 'update_user_metadata', 'range': [403, 453], 'children': []}
2025-01-08 10:27:51,700 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:27:51,766 - INFO - Step 1 result: {'type': 'Program', 'name': 'get_user_integrations', 'range': [454, 526], 'children': []}
2025-01-08 10:27:51,767 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:27:52,159 - INFO - Step 1 result: {'type': 'Program', 'name': 'update_user_integrations', 'range': [527, 585], 'children': []}
2025-01-08 10:27:52,160 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:27:52,182 - INFO - Step 1 result: {'type': 'Program', 'name': 'create_default_user', 'range': [270, 346], 'children': []}
2025-01-08 10:27:52,182 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:27:58,400 - INFO - Step 1 result: {'type': 'Program', 'name': 'get_user_by_id', 'range': [224, 269], 'children': []}
2025-01-08 10:27:58,435 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:15,269 - INFO - Step 2 result: {'type': 'Program', 'name': 'update_user_integrations', 'range': [527, 585], 'children': [{'type': 'FunctionDeclaration', 'name': 'update_user_integrations', 'range': [527, 585], 'children': [{'type': 'Keyword', 'name': 'async', 'range': [527, 531], 'children': []}, {'type': 'Keyword', 'name': 'def', 'range': [528, 531], 'children': []}, {'type': 'Identifier', 'name': 'update_user_integrations', 'range': [529, 553], 'children': []}, {'type': 'ParameterList', 'name': '', 'range': [530, 538], 'children': [{'type': 'Parameter', 'name': 'user_id', 'range': [531, 537], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [533, 536], 'children': []}]}, {'type': 'Parameter', 'name': 'data', 'range': [535, 537], 'children': [{'type': 'TypeAnnotation', 'name': 'UserIntegrations', 'range': [537, 537], 'children': []}]}]}, {'type': 'BlockStatement', 'name': '', 'range': [539, 585], 'children': [{'type': 'VariableDeclaration', 'name': 'encrypted_data', 'range': [541, 554], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [542, 554], 'children': [{'type': 'CallExpression', 'name': 'JSONCryptor.encrypt', 'range': [543, 554], 'children': [{'type': 'CallExpression', 'name': 'data.model_dump', 'range': [549, 553], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': 'await', 'range': [556, 584], 'children': [{'type': 'CallExpression', 'name': 'User.prisma.update', 'range': [557, 584], 'children': [{'type': 'ObjectExpression', 'name': 'where', 'range': [566, 572], 'children': [{'type': 'Property', 'name': 'id', 'range': [569, 571], 'children': [{'type': 'Identifier', 'name': 'user_id', 'range': [571, 571], 'children': []}]}]}, {'type': 'ObjectExpression', 'name': 'data', 'range': [575, 581], 'children': [{'type': 'Property', 'name': 'integrations', 'range': [578, 580], 'children': [{'type': 'Identifier', 'name': 'encrypted_data', 'range': [580, 580], 'children': []}]}]}]}]}]}]}]}
2025-01-08 10:28:15,469 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:16,261 - INFO - Step 2 result: {'nodes': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 2], 'children': [{'type': 'ImportSpecifier', 'name': 'logging', 'range': [1, 1], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [3, 9], 'children': [{'type': 'ImportSpecifier', 'name': 'Optional', 'range': [6, 6], 'children': []}, {'type': 'ImportSpecifier', 'name': 'cast', 'range': [8, 8], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [11, 19], 'children': [{'type': 'ImportSpecifier', 'name': 'DEFAULT_USER_ID', 'range': [18, 18], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [20, 24], 'children': [{'type': 'ImportSpecifier', 'name': 'HTTPException', 'range': [23, 23], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [25, 29], 'children': [{'type': 'ImportSpecifier', 'name': 'Json', 'range': [28, 28], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [30, 36], 'children': [{'type': 'ImportSpecifier', 'name': 'User', 'range': [35, 35], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [38, 46], 'children': [{'type': 'ImportSpecifier', 'name': 'prisma', 'range': [45, 45], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [47, 59], 'children': [{'type': 'ImportSpecifier', 'name': 'UserIntegrations', 'range': [54, 54], 'children': []}, {'type': 'ImportSpecifier', 'name': 'UserMetadata', 'range': [56, 56], 'children': []}, {'type': 'ImportSpecifier', 'name': 'UserMetadataRaw', 'range': [58, 58], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [60, 68], 'children': [{'type': 'ImportSpecifier', 'name': 'JSONCryptor', 'range': [67, 67], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'logger', 'range': [70, 78], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [71, 77], 'children': [{'type': 'CallExpression', 'name': 'getLogger', 'range': [74, 77], 'children': [{'type': 'Identifier', 'name': '__name__', 'range': [76, 76], 'children': []}]}]}]}]}
2025-01-08 10:28:16,261 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:18,440 - INFO - Step 2 result: {'type': 'Program', 'name': 'get_user_integrations', 'range': [454, 526], 'children': [{'type': 'FunctionDeclaration', 'name': 'get_user_integrations', 'range': [454, 526], 'children': [{'type': 'AsyncKeyword', 'name': 'async', 'range': [454, 454], 'children': []}, {'type': 'DefKeyword', 'name': 'def', 'range': [455, 455], 'children': []}, {'type': 'FunctionName', 'name': 'get_user_integrations', 'range': [456, 456], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [457, 461], 'children': [{'type': 'Parameter', 'name': 'user_id', 'range': [458, 458], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [460, 460], 'children': []}]}]}, {'type': 'ReturnType', 'name': 'UserIntegrations', 'range': [462, 464], 'children': []}, {'type': 'FunctionBody', 'name': 'body', 'range': [466, 526], 'children': [{'type': 'VariableDeclaration', 'name': 'user', 'range': [467, 488], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [469, 469], 'children': [{'type': 'CallExpression', 'name': 'User.prisma().find_unique_or_raise', 'range': [470, 488], 'children': [{'type': 'Argument', 'name': 'where', 'range': [479, 485], 'children': [{'type': 'ObjectLiteral', 'name': '{"id": user_id}', 'range': [481, 485], 'children': []}]}]}]}]}, {'type': 'VariableDeclaration', 'name': 'encrypted_integrations', 'range': [491, 496], 'children': [{'type': 'MemberExpression', 'name': 'user.integrations', 'range': [493, 495], 'children': []}]}, {'type': 'IfStatement', 'name': 'if', 'range': [497, 506], 'children': [{'type': 'Condition', 'name': 'not encrypted_integrations', 'range': [498, 499], 'children': []}, {'type': 'BlockStatement', 'name': 'then', 'range': [501, 506], 'children': [{'type': 'ReturnStatement', 'name': 'return UserIntegrations()', 'range': [502, 505], 'children': []}]}]}, {'type': 'ElseStatement', 'name': 'else', 'range': [507, 526], 'children': [{'type': 'BlockStatement', 'name': 'else', 'range': [509, 526], 'children': [{'type': 'ReturnStatement', 'name': 'return UserIntegrations.model_validate(JSONCryptor().decrypt(encrypted_integrations))', 'range': [510, 525], 'children': [{'type': 'CallExpression', 'name': 'UserIntegrations.model_validate', 'range': [511, 525], 'children': [{'type': 'CallExpression', 'name': 'JSONCryptor().decrypt', 'range': [516, 523], 'children': [{'type': 'Argument', 'name': 'encrypted_integrations', 'range': [522, 522], 'children': []}]}]}]}]}]}]}]}]}
2025-01-08 10:28:18,440 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:21,506 - INFO - Step 2 result: {'type': 'Program', 'name': 'get_user_metadata', 'range': [347, 402], 'children': [{'type': 'FunctionDeclaration', 'name': 'get_user_metadata', 'range': [347, 402], 'children': [{'type': 'AsyncKeyword', 'name': 'async', 'range': [347, 351], 'children': []}, {'type': 'DefKeyword', 'name': 'def', 'range': [348, 351], 'children': []}, {'type': 'FunctionName', 'name': 'get_user_metadata', 'range': [349, 366], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [350, 354], 'children': [{'type': 'Parameter', 'name': 'user_id', 'range': [351, 357], 'children': [{'type': 'ParameterName', 'name': 'user_id', 'range': [351, 357], 'children': []}, {'type': 'TypeAnnotation', 'name': 'str', 'range': [352, 355], 'children': []}]}]}, {'type': 'ReturnType', 'name': 'UserMetadata', 'range': [355, 363], 'children': []}, {'type': 'FunctionBody', 'name': 'body', 'range': [358, 402], 'children': [{'type': 'VariableDeclaration', 'name': 'user', 'range': [360, 381], 'children': [{'type': 'VariableName', 'name': 'user', 'range': [360, 364], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [361, 362], 'children': []}, {'type': 'AwaitExpression', 'name': 'await', 'range': [362, 367], 'children': [{'type': 'CallExpression', 'name': 'User.prisma().find_unique_or_raise', 'range': [363, 381], 'children': [{'type': 'MemberExpression', 'name': 'User.prisma', 'range': [363, 371], 'children': []}, {'type': 'CallExpression', 'name': 'find_unique_or_raise', 'range': [369, 381], 'children': [{'type': 'ArgumentList', 'name': 'arguments', 'range': [370, 380], 'children': [{'type': 'ObjectExpression', 'name': 'where', 'range': [372, 378], 'children': [{'type': 'Property', 'name': 'id', 'range': [375, 377], 'children': [{'type': 'Key', 'name': 'id', 'range': [375, 377], 'children': []}, {'type': 'Value', 'name': 'user_id', 'range': [377, 377], 'children': []}]}]}]}]}]}]}]}, {'type': 'VariableDeclaration', 'name': 'metadata', 'range': [384, 393], 'children': [{'type': 'VariableName', 'name': 'metadata', 'range': [384, 392], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [385, 386], 'children': []}, {'type': 'CastExpression', 'name': 'cast', 'range': [386, 393], 'children': [{'type': 'Type', 'name': 'UserMetadataRaw', 'range': [388, 402], 'children': []}, {'type': 'Value', 'name': 'user.metadata', 'range': [390, 393], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [395, 402], 'children': [{'type': 'CallExpression', 'name': 'UserMetadata.model_validate', 'range': [396, 402], 'children': [{'type': 'MemberExpression', 'name': 'UserMetadata.model_validate', 'range': [396, 402], 'children': []}, {'type': 'ArgumentList', 'name': 'arguments', 'range': [399, 401], 'children': [{'type': 'Identifier', 'name': 'metadata', 'range': [400, 401], 'children': []}]}]}]}]}]}]}
2025-01-08 10:28:21,506 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:33,287 - INFO - Step 2 result: {'type': 'Program', 'name': 'get_user_by_id', 'range': [224, 269], 'children': [{'type': 'FunctionDeclaration', 'name': 'get_user_by_id', 'range': [224, 269], 'children': [{'type': 'AsyncKeyword', 'name': 'async', 'range': [224, 224], 'children': []}, {'type': 'DefKeyword', 'name': 'def', 'range': [225, 225], 'children': []}, {'type': 'FunctionName', 'name': 'get_user_by_id', 'range': [226, 226], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [227, 231], 'children': [{'type': 'Parameter', 'name': 'user_id', 'range': [228, 228], 'children': []}, {'type': 'TypeAnnotation', 'name': 'str', 'range': [230, 230], 'children': []}]}, {'type': 'ReturnTypeAnnotation', 'name': 'Optional[User]', 'range': [232, 237], 'children': [{'type': 'OptionalKeyword', 'name': 'Optional', 'range': [234, 234], 'children': []}, {'type': 'TypeName', 'name': 'User', 'range': [236, 236], 'children': []}]}, {'type': 'FunctionBody', 'name': 'body', 'range': [239, 269], 'children': [{'type': 'VariableDeclaration', 'name': 'user', 'range': [240, 256], 'children': [{'type': 'Assignment', 'name': '=', 'range': [241, 241], 'children': []}, {'type': 'AwaitExpression', 'name': 'await', 'range': [242, 242], 'children': []}, {'type': 'MemberExpression', 'name': 'prisma.user.find_unique', 'range': [243, 247], 'children': [{'type': 'ObjectName', 'name': 'prisma', 'range': [243, 243], 'children': []}, {'type': 'PropertyAccess', 'name': '.', 'range': [244, 244], 'children': []}, {'type': 'ObjectName', 'name': 'user', 'range': [245, 245], 'children': []}, {'type': 'PropertyAccess', 'name': '.', 'range': [246, 246], 'children': []}, {'type': 'MethodName', 'name': 'find_unique', 'range': [247, 247], 'children': []}]}, {'type': 'ArgumentList', 'name': 'arguments', 'range': [248, 256], 'children': [{'type': 'ObjectLiteral', 'name': 'where', 'range': [249, 255], 'children': [{'type': 'Property', 'name': 'id', 'range': [252, 252], 'children': []}, {'type': 'Value', 'name': 'user_id', 'range': [254, 254], 'children': []}]}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [258, 268], 'children': [{'type': 'ConditionalExpression', 'name': 'if', 'range': [265, 268], 'children': [{'type': 'Condition', 'name': 'user', 'range': [266, 266], 'children': []}, {'type': 'Consequent', 'name': 'User.model_validate(user)', 'range': [259, 264], 'children': [{'type': 'MemberExpression', 'name': 'User.model_validate', 'range': [259, 261], 'children': [{'type': 'ObjectName', 'name': 'User', 'range': [259, 259], 'children': []}, {'type': 'PropertyAccess', 'name': '.', 'range': [260, 260], 'children': []}, {'type': 'MethodName', 'name': 'model_validate', 'range': [261, 261], 'children': []}]}, {'type': 'ArgumentList', 'name': 'arguments', 'range': [262, 264], 'children': [{'type': 'Value', 'name': 'user', 'range': [263, 263], 'children': []}]}]}, {'type': 'Alternate', 'name': 'None', 'range': [268, 268], 'children': []}]}]}]}]}]}
2025-01-08 10:28:33,288 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:35,238 - INFO - Step 2 result: {'type': 'Program', 'name': 'update_user_metadata', 'range': [403, 453], 'children': [{'type': 'FunctionDeclaration', 'name': 'update_user_metadata', 'range': [403, 453], 'children': [{'type': 'Keyword', 'name': 'async', 'range': [403, 403], 'children': []}, {'type': 'Keyword', 'name': 'def', 'range': [404, 404], 'children': []}, {'type': 'Identifier', 'name': 'update_user_metadata', 'range': [405, 405], 'children': []}, {'type': 'Punctuator', 'name': '(', 'range': [406, 406], 'children': []}, {'type': 'Parameter', 'name': 'user_id', 'range': [407, 407], 'children': [{'type': 'Identifier', 'name': 'user_id', 'range': [407, 407], 'children': []}, {'type': 'Punctuator', 'name': ':', 'range': [408, 408], 'children': []}, {'type': 'TypeAnnotation', 'name': 'str', 'range': [409, 409], 'children': []}]}, {'type': 'Punctuator', 'name': ',', 'range': [410, 410], 'children': []}, {'type': 'Parameter', 'name': 'metadata', 'range': [411, 411], 'children': [{'type': 'Identifier', 'name': 'metadata', 'range': [411, 411], 'children': []}, {'type': 'Punctuator', 'name': ':', 'range': [412, 412], 'children': []}, {'type': 'TypeAnnotation', 'name': 'UserMetadata', 'range': [413, 413], 'children': []}]}, {'type': 'Punctuator', 'name': ')', 'range': [414, 414], 'children': []}, {'type': 'Punctuator', 'name': ':', 'range': [415, 415], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [416, 453], 'children': [{'type': 'Keyword', 'name': 'await', 'range': [417, 417], 'children': []}, {'type': 'MemberExpression', 'name': 'User.prisma', 'range': [418, 420], 'children': [{'type': 'Identifier', 'name': 'User', 'range': [418, 418], 'children': []}, {'type': 'Punctuator', 'name': '.', 'range': [419, 419], 'children': []}, {'type': 'Identifier', 'name': 'prisma', 'range': [420, 420], 'children': []}]}, {'type': 'CallExpression', 'name': '', 'range': [421, 452], 'children': [{'type': 'Punctuator', 'name': '(', 'range': [421, 421], 'children': []}, {'type': 'Punctuator', 'name': ')', 'range': [422, 422], 'children': []}, {'type': 'Punctuator', 'name': '.', 'range': [423, 423], 'children': []}, {'type': 'Identifier', 'name': 'update', 'range': [424, 424], 'children': []}, {'type': 'Punctuator', 'name': '(', 'range': [425, 425], 'children': []}, {'type': 'ObjectExpression', 'name': '', 'range': [426, 449], 'children': [{'type': 'Property', 'name': 'where', 'range': [427, 433], 'children': [{'type': 'Identifier', 'name': 'where', 'range': [427, 427], 'children': []}, {'type': 'Punctuator', 'name': '=', 'range': [428, 428], 'children': []}, {'type': 'ObjectExpression', 'name': '', 'range': [429, 433], 'children': [{'type': 'Property', 'name': 'id', 'range': [430, 432], 'children': [{'type': 'Literal', 'name': '"id"', 'range': [430, 430], 'children': []}, {'type': 'Punctuator', 'name': ':', 'range': [431, 431], 'children': []}, {'type': 'Identifier', 'name': 'user_id', 'range': [432, 432], 'children': []}]}]}]}, {'type': 'Punctuator', 'name': ',', 'range': [434, 434], 'children': []}, {'type': 'Property', 'name': 'data', 'range': [435, 449], 'children': [{'type': 'Identifier', 'name': 'data', 'range': [435, 435], 'children': []}, {'type': 'Punctuator', 'name': '=', 'range': [436, 436], 'children': []}, {'type': 'ObjectExpression', 'name': '', 'range': [437, 449], 'children': [{'type': 'Property', 'name': 'metadata', 'range': [438, 448], 'children': [{'type': 'Literal', 'name': '"metadata"', 'range': [438, 438], 'children': []}, {'type': 'Punctuator', 'name': ':', 'range': [439, 439], 'children': []}, {'type': 'CallExpression', 'name': 'Json', 'range': [440, 448], 'children': [{'type': 'Identifier', 'name': 'Json', 'range': [440, 440], 'children': []}, {'type': 'Punctuator', 'name': '(', 'range': [441, 441], 'children': []}, {'type': 'MemberExpression', 'name': 'metadata.model_dump', 'range': [442, 445], 'children': [{'type': 'Identifier', 'name': 'metadata', 'range': [442, 442], 'children': []}, {'type': 'Punctuator', 'name': '.', 'range': [443, 443], 'children': []}, {'type': 'Identifier', 'name': 'model_dump', 'range': [444, 444], 'children': []}]}, {'type': 'Punctuator', 'name': '(', 'range': [445, 445], 'children': []}, {'type': 'Punctuator', 'name': ')', 'range': [446, 446], 'children': []}, {'type': 'Punctuator', 'name': ')', 'range': [447, 447], 'children': []}]}]}]}]}]}, {'type': 'Punctuator', 'name': ')', 'range': [450, 450], 'children': []}]}]}]}]}
2025-01-08 10:28:35,239 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:35,740 - INFO - Step 3 result: {'type': 'Program', 'name': 'update_user_integrations', 'range': [527, 585], 'children': [{'type': 'FunctionDeclaration', 'name': 'update_user_integrations', 'range': [527, 585], 'children': [{'type': 'Keyword', 'name': 'async', 'range': [527, 531], 'children': []}, {'type': 'Keyword', 'name': 'def', 'range': [528, 531], 'children': []}, {'type': 'Identifier', 'name': 'update_user_integrations', 'range': [529, 553], 'children': []}, {'type': 'ParameterList', 'name': '', 'range': [530, 538], 'children': [{'type': 'Parameter', 'name': 'user_id', 'range': [531, 537], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [533, 536], 'children': []}]}, {'type': 'Parameter', 'name': 'data', 'range': [535, 537], 'children': [{'type': 'TypeAnnotation', 'name': 'UserIntegrations', 'range': [537, 537], 'children': []}]}]}, {'type': 'BlockStatement', 'name': '', 'range': [539, 585], 'children': [{'type': 'VariableDeclaration', 'name': 'encrypted_data', 'range': [541, 554], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [542, 554], 'children': [{'type': 'CallExpression', 'name': 'JSONCryptor.encrypt', 'range': [543, 554], 'children': [{'type': 'CallExpression', 'name': 'data.model_dump', 'range': [549, 553], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': 'await', 'range': [556, 584], 'children': [{'type': 'CallExpression', 'name': 'User.prisma.update', 'range': [557, 584], 'children': [{'type': 'ObjectExpression', 'name': 'where', 'range': [566, 572], 'children': [{'type': 'Property', 'name': 'id', 'range': [569, 571], 'children': [{'type': 'Identifier', 'name': 'user_id', 'range': [571, 571], 'children': []}]}]}, {'type': 'ObjectExpression', 'name': 'data', 'range': [575, 581], 'children': [{'type': 'Property', 'name': 'integrations', 'range': [578, 580], 'children': [{'type': 'Identifier', 'name': 'encrypted_data', 'range': [580, 580], 'children': []}]}]}]}]}]}]}]}
2025-01-08 10:28:35,740 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:36,481 - INFO - Step 3 result: {'nodes': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 2], 'children': [{'type': 'ImportSpecifier', 'name': 'logging', 'range': [1, 1], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [3, 9], 'children': [{'type': 'ImportSpecifier', 'name': 'Optional', 'range': [6, 6], 'children': []}, {'type': 'ImportSpecifier', 'name': 'cast', 'range': [8, 8], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [11, 19], 'children': [{'type': 'ImportSpecifier', 'name': 'DEFAULT_USER_ID', 'range': [18, 18], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [20, 24], 'children': [{'type': 'ImportSpecifier', 'name': 'HTTPException', 'range': [23, 23], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [25, 29], 'children': [{'type': 'ImportSpecifier', 'name': 'Json', 'range': [28, 28], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [30, 36], 'children': [{'type': 'ImportSpecifier', 'name': 'User', 'range': [35, 35], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [38, 46], 'children': [{'type': 'ImportSpecifier', 'name': 'prisma', 'range': [45, 45], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [47, 59], 'children': [{'type': 'ImportSpecifier', 'name': 'UserIntegrations', 'range': [54, 54], 'children': []}, {'type': 'ImportSpecifier', 'name': 'UserMetadata', 'range': [56, 56], 'children': []}, {'type': 'ImportSpecifier', 'name': 'UserMetadataRaw', 'range': [58, 58], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [60, 68], 'children': [{'type': 'ImportSpecifier', 'name': 'JSONCryptor', 'range': [67, 67], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'logger', 'range': [70, 78], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [71, 77], 'children': [{'type': 'CallExpression', 'name': 'getLogger', 'range': [74, 77], 'children': [{'type': 'Identifier', 'name': '__name__', 'range': [76, 76], 'children': []}]}]}]}]}
2025-01-08 10:28:36,481 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:40,696 - INFO - Step 3 result: {'type': 'Program', 'name': 'get_user_integrations', 'range': [454, 526], 'children': [{'type': 'FunctionDeclaration', 'name': 'get_user_integrations', 'range': [454, 526], 'children': [{'type': 'AsyncKeyword', 'name': 'async', 'range': [454, 454], 'children': []}, {'type': 'DefKeyword', 'name': 'def', 'range': [455, 455], 'children': []}, {'type': 'FunctionName', 'name': 'get_user_integrations', 'range': [456, 456], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [457, 461], 'children': [{'type': 'Parameter', 'name': 'user_id', 'range': [458, 458], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [460, 460], 'children': []}]}]}, {'type': 'ReturnType', 'name': 'UserIntegrations', 'range': [462, 464], 'children': []}, {'type': 'FunctionBody', 'name': 'body', 'range': [466, 526], 'children': [{'type': 'VariableDeclaration', 'name': 'user', 'range': [467, 488], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [469, 469], 'children': [{'type': 'CallExpression', 'name': 'User.prisma().find_unique_or_raise', 'range': [470, 488], 'children': [{'type': 'Argument', 'name': 'where', 'range': [479, 485], 'children': [{'type': 'ObjectLiteral', 'name': '{"id": user_id}', 'range': [481, 485], 'children': []}]}]}]}]}, {'type': 'VariableDeclaration', 'name': 'encrypted_integrations', 'range': [491, 496], 'children': [{'type': 'MemberExpression', 'name': 'user.integrations', 'range': [493, 495], 'children': []}]}, {'type': 'IfStatement', 'name': 'if', 'range': [497, 506], 'children': [{'type': 'Condition', 'name': 'not encrypted_integrations', 'range': [498, 499], 'children': []}, {'type': 'BlockStatement', 'name': 'then', 'range': [501, 506], 'children': [{'type': 'ReturnStatement', 'name': 'return UserIntegrations()', 'range': [502, 505], 'children': []}]}]}, {'type': 'ElseStatement', 'name': 'else', 'range': [507, 526], 'children': [{'type': 'BlockStatement', 'name': 'else', 'range': [509, 526], 'children': [{'type': 'ReturnStatement', 'name': 'return UserIntegrations.model_validate(JSONCryptor().decrypt(encrypted_integrations))', 'range': [510, 525], 'children': [{'type': 'CallExpression', 'name': 'UserIntegrations.model_validate', 'range': [511, 525], 'children': [{'type': 'CallExpression', 'name': 'JSONCryptor().decrypt', 'range': [516, 523], 'children': [{'type': 'Argument', 'name': 'encrypted_integrations', 'range': [522, 522], 'children': []}]}]}]}]}]}]}]}]}
2025-01-08 10:28:40,697 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:43,798 - INFO - Step 2 result: {'type': 'Program', 'name': 'create_default_user', 'range': [270, 346], 'children': [{'type': 'FunctionDeclaration', 'name': 'create_default_user', 'range': [270, 346], 'children': [{'type': 'AsyncKeyword', 'name': 'async', 'range': [270, 270], 'children': []}, {'type': 'DefKeyword', 'name': 'def', 'range': [271, 271], 'children': []}, {'type': 'FunctionName', 'name': 'create_default_user', 'range': [272, 272], 'children': []}, {'type': 'ParameterList', 'name': '()', 'range': [273, 274], 'children': []}, {'type': 'ReturnType', 'name': '-> Optional[User]', 'range': [275, 280], 'children': [{'type': 'OptionalKeyword', 'name': 'Optional', 'range': [277, 277], 'children': []}, {'type': 'UserType', 'name': 'User', 'range': [279, 279], 'children': []}]}, {'type': 'FunctionBody', 'name': '', 'range': [282, 346], 'children': [{'type': 'VariableDeclaration', 'name': 'user = await prisma.user.find_unique(where={"id": DEFAULT_USER_ID})', 'range': [283, 299], 'children': [{'type': 'VariableName', 'name': 'user', 'range': [283, 283], 'children': []}, {'type': 'AssignmentOperator', 'name': '=', 'range': [284, 284], 'children': []}, {'type': 'AwaitExpression', 'name': 'await prisma.user.find_unique(where={"id": DEFAULT_USER_ID})', 'range': [285, 299], 'children': [{'type': 'AwaitKeyword', 'name': 'await', 'range': [285, 285], 'children': []}, {'type': 'FunctionCall', 'name': 'prisma.user.find_unique(where={"id": DEFAULT_USER_ID})', 'range': [286, 299], 'children': [{'type': 'ObjectName', 'name': 'prisma', 'range': [286, 286], 'children': []}, {'type': 'PropertyAccess', 'name': 'user', 'range': [288, 288], 'children': []}, {'type': 'PropertyAccess', 'name': 'find_unique', 'range': [290, 290], 'children': []}, {'type': 'ArgumentList', 'name': '(where={"id": DEFAULT_USER_ID})', 'range': [291, 299], 'children': [{'type': 'NamedArgument', 'name': 'where={"id": DEFAULT_USER_ID}', 'range': [292, 298], 'children': [{'type': 'ArgumentName', 'name': 'where', 'range': [292, 292], 'children': []}, {'type': 'AssignmentOperator', 'name': '=', 'range': [293, 293], 'children': []}, {'type': 'ObjectLiteral', 'name': '{"id": DEFAULT_USER_ID}', 'range': [294, 298], 'children': [{'type': 'Property', 'name': '"id": DEFAULT_USER_ID', 'range': [295, 297], 'children': [{'type': 'PropertyName', 'name': '"id"', 'range': [295, 295], 'children': []}, {'type': 'PropertyValue', 'name': 'DEFAULT_USER_ID', 'range': [297, 297], 'children': []}]}]}]}]}]}]}]}, {'type': 'IfStatement', 'name': 'if not user:', 'range': [301, 305], 'children': [{'type': 'IfKeyword', 'name': 'if', 'range': [301, 301], 'children': []}, {'type': 'NotKeyword', 'name': 'not', 'range': [302, 302], 'children': []}, {'type': 'Condition', 'name': 'user', 'range': [303, 303], 'children': []}]}, {'type': 'Block', 'name': '', 'range': [306, 338], 'children': [{'type': 'VariableDeclaration', 'name': 'user = await prisma.user.create(data={"id": DEFAULT_USER_ID, "email": "default@example.com", "name": "Default User"})', 'range': [306, 337], 'children': [{'type': 'VariableName', 'name': 'user', 'range': [306, 306], 'children': []}, {'type': 'AssignmentOperator', 'name': '=', 'range': [307, 307], 'children': []}, {'type': 'AwaitExpression', 'name': 'await prisma.user.create(data={"id": DEFAULT_USER_ID, "email": "default@example.com", "name": "Default User"})', 'range': [308, 337], 'children': [{'type': 'AwaitKeyword', 'name': 'await', 'range': [308, 308], 'children': []}, {'type': 'FunctionCall', 'name': 'prisma.user.create(data={"id": DEFAULT_USER_ID, "email": "default@example.com", "name": "Default User"})', 'range': [309, 337], 'children': [{'type': 'ObjectName', 'name': 'prisma', 'range': [309, 309], 'children': []}, {'type': 'PropertyAccess', 'name': 'user', 'range': [311, 311], 'children': []}, {'type': 'PropertyAccess', 'name': 'create', 'range': [313, 313], 'children': []}, {'type': 'ArgumentList', 'name': '(data={"id": DEFAULT_USER_ID, "email": "default@example.com", "name": "Default User"})', 'range': [314, 337], 'children': [{'type': 'NamedArgument', 'name': 'data={"id": DEFAULT_USER_ID, "email": "default@example.com", "name": "Default User"}', 'range': [316, 335], 'children': [{'type': 'ArgumentName', 'name': 'data', 'range': [316, 316], 'children': []}, {'type': 'AssignmentOperator', 'name': '=', 'range': [317, 317], 'children': []}, {'type': 'ObjectLiteral', 'name': '{"id": DEFAULT_USER_ID, "email": "default@example.com", "name": "Default User"}', 'range': [318, 335], 'children': [{'type': 'Property', 'name': '"id": DEFAULT_USER_ID', 'range': [320, 322], 'children': [{'type': 'PropertyName', 'name': '"id"', 'range': [320, 320], 'children': []}, {'type': 'PropertyValue', 'name': 'DEFAULT_USER_ID', 'range': [322, 322], 'children': []}]}, {'type': 'Property', 'name': '"email": "default@example.com"', 'range': [325, 327], 'children': [{'type': 'PropertyName', 'name': '"email"', 'range': [325, 325], 'children': []}, {'type': 'PropertyValue', 'name': '"default@example.com"', 'range': [327, 327], 'children': []}]}, {'type': 'Property', 'name': '"name": "Default User"', 'range': [330, 332], 'children': [{'type': 'PropertyName', 'name': '"name"', 'range': [330, 330], 'children': []}, {'type': 'PropertyValue', 'name': '"Default User"', 'range': [332, 332], 'children': []}]}]}]}]}]}]}]}]}, {'type': 'ReturnStatement', 'name': 'return User.model_validate(user)', 'range': [339, 345], 'children': [{'type': 'ReturnKeyword', 'name': 'return', 'range': [339, 339], 'children': []}, {'type': 'FunctionCall', 'name': 'User.model_validate(user)', 'range': [340, 345], 'children': [{'type': 'ObjectName', 'name': 'User', 'range': [340, 340], 'children': []}, {'type': 'PropertyAccess', 'name': 'model_validate', 'range': [342, 342], 'children': []}, {'type': 'ArgumentList', 'name': '(user)', 'range': [343, 345], 'children': [{'type': 'Argument', 'name': 'user', 'range': [344, 344], 'children': []}]}]}]}]}]}]}
2025-01-08 10:28:43,798 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:45,942 - INFO - Step 3 result: {'type': 'Program', 'name': 'get_user_metadata', 'range': [347, 402], 'children': [{'type': 'FunctionDeclaration', 'name': 'get_user_metadata', 'range': [347, 402], 'children': [{'type': 'AsyncKeyword', 'name': 'async', 'range': [347, 351], 'children': []}, {'type': 'DefKeyword', 'name': 'def', 'range': [348, 351], 'children': []}, {'type': 'FunctionName', 'name': 'get_user_metadata', 'range': [349, 366], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [350, 354], 'children': [{'type': 'Parameter', 'name': 'user_id', 'range': [351, 357], 'children': [{'type': 'ParameterName', 'name': 'user_id', 'range': [351, 357], 'children': []}, {'type': 'TypeAnnotation', 'name': 'str', 'range': [352, 355], 'children': []}]}]}, {'type': 'ReturnType', 'name': 'UserMetadata', 'range': [355, 363], 'children': []}, {'type': 'FunctionBody', 'name': 'body', 'range': [358, 402], 'children': [{'type': 'VariableDeclaration', 'name': 'user', 'range': [360, 381], 'children': [{'type': 'VariableName', 'name': 'user', 'range': [360, 364], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [361, 362], 'children': []}, {'type': 'AwaitExpression', 'name': 'await', 'range': [362, 367], 'children': [{'type': 'CallExpression', 'name': 'User.prisma().find_unique_or_raise', 'range': [363, 381], 'children': [{'type': 'MemberExpression', 'name': 'User.prisma', 'range': [363, 371], 'children': []}, {'type': 'CallExpression', 'name': 'find_unique_or_raise', 'range': [369, 381], 'children': [{'type': 'ArgumentList', 'name': 'arguments', 'range': [370, 380], 'children': [{'type': 'ObjectExpression', 'name': 'where', 'range': [372, 378], 'children': [{'type': 'Property', 'name': 'id', 'range': [375, 377], 'children': [{'type': 'Key', 'name': 'id', 'range': [375, 377], 'children': []}, {'type': 'Value', 'name': 'user_id', 'range': [377, 377], 'children': []}]}]}]}]}]}]}]}, {'type': 'VariableDeclaration', 'name': 'metadata', 'range': [384, 393], 'children': [{'type': 'VariableName', 'name': 'metadata', 'range': [384, 392], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [385, 386], 'children': []}, {'type': 'CastExpression', 'name': 'cast', 'range': [386, 393], 'children': [{'type': 'Type', 'name': 'UserMetadataRaw', 'range': [388, 402], 'children': []}, {'type': 'Value', 'name': 'user.metadata', 'range': [390, 393], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [395, 402], 'children': [{'type': 'CallExpression', 'name': 'UserMetadata.model_validate', 'range': [396, 402], 'children': [{'type': 'MemberExpression', 'name': 'UserMetadata.model_validate', 'range': [396, 402], 'children': []}, {'type': 'ArgumentList', 'name': 'arguments', 'range': [399, 401], 'children': [{'type': 'Identifier', 'name': 'metadata', 'range': [400, 401], 'children': []}]}]}]}]}]}]}
2025-01-08 10:28:45,942 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:53,203 - INFO - Step 4 result: {'type': 'Program', 'name': 'update_user_integrations', 'range': [527, 585], 'children': [{'type': 'FunctionDecl', 'name': 'update_user_integrations', 'range': [527, 585], 'children': [{'type': 'Keyword', 'name': 'async', 'range': [527, 531], 'children': []}, {'type': 'Keyword', 'name': 'def', 'range': [528, 531], 'children': []}, {'type': 'Identifier', 'name': 'update_user_integrations', 'range': [529, 553], 'children': []}, {'type': 'ParameterList', 'name': '', 'range': [530, 538], 'children': [{'type': 'Parameter', 'name': 'user_id', 'range': [531, 537], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [533, 536], 'children': []}]}, {'type': 'Parameter', 'name': 'data', 'range': [535, 537], 'children': [{'type': 'TypeAnnotation', 'name': 'UserIntegrations', 'range': [537, 537], 'children': []}]}]}, {'type': 'BlockStatement', 'name': '', 'range': [539, 585], 'children': [{'type': 'VariableDecl', 'name': 'encrypted_data', 'range': [541, 554], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [542, 554], 'children': [{'type': 'CallExpression', 'name': 'JSONCryptor.encrypt', 'range': [543, 554], 'children': [{'type': 'CallExpression', 'name': 'data.model_dump', 'range': [549, 553], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': 'await', 'range': [556, 584], 'children': [{'type': 'CallExpression', 'name': 'User.prisma.update', 'range': [557, 584], 'children': [{'type': 'ObjectExpression', 'name': 'where', 'range': [566, 572], 'children': [{'type': 'Property', 'name': 'id', 'range': [569, 571], 'children': [{'type': 'Identifier', 'name': 'user_id', 'range': [571, 571], 'children': []}]}]}, {'type': 'ObjectExpression', 'name': 'data', 'range': [575, 581], 'children': [{'type': 'Property', 'name': 'integrations', 'range': [578, 580], 'children': [{'type': 'Identifier', 'name': 'encrypted_data', 'range': [580, 580], 'children': []}]}]}]}]}]}]}]}
2025-01-08 10:28:53,204 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:28:53,934 - INFO - Step 4 result: {'nodes': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 2], 'children': [{'type': 'ImportSpecifier', 'name': 'logging', 'range': [1, 1], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [3, 9], 'children': [{'type': 'ImportSpecifier', 'name': 'Optional', 'range': [6, 6], 'children': []}, {'type': 'ImportSpecifier', 'name': 'cast', 'range': [8, 8], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [11, 19], 'children': [{'type': 'ImportSpecifier', 'name': 'DEFAULT_USER_ID', 'range': [18, 18], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [20, 24], 'children': [{'type': 'ImportSpecifier', 'name': 'HTTPException', 'range': [23, 23], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [25, 29], 'children': [{'type': 'ImportSpecifier', 'name': 'Json', 'range': [28, 28], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [30, 36], 'children': [{'type': 'ImportSpecifier', 'name': 'User', 'range': [35, 35], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [38, 46], 'children': [{'type': 'ImportSpecifier', 'name': 'prisma', 'range': [45, 45], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [47, 59], 'children': [{'type': 'ImportSpecifier', 'name': 'UserIntegrations', 'range': [54, 54], 'children': []}, {'type': 'ImportSpecifier', 'name': 'UserMetadata', 'range': [56, 56], 'children': []}, {'type': 'ImportSpecifier', 'name': 'UserMetadataRaw', 'range': [58, 58], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [60, 68], 'children': [{'type': 'ImportSpecifier', 'name': 'JSONCryptor', 'range': [67, 67], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'logger', 'range': [70, 78], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [71, 77], 'children': [{'type': 'CallExpression', 'name': 'getLogger', 'range': [74, 77], 'children': [{'type': 'Identifier', 'name': '__name__', 'range': [76, 76], 'children': []}]}]}]}]}
2025-01-08 10:28:53,938 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:28:56,823 - INFO - Step 3 result: {'type': 'Program', 'name': 'get_user_by_id', 'range': [224, 269], 'children': [{'type': 'FunctionDeclaration', 'name': 'get_user_by_id', 'range': [224, 269], 'children': [{'type': 'AsyncKeyword', 'name': 'async', 'range': [224, 224], 'children': []}, {'type': 'DefKeyword', 'name': 'def', 'range': [225, 225], 'children': []}, {'type': 'FunctionName', 'name': 'get_user_by_id', 'range': [226, 226], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [227, 231], 'children': [{'type': 'Parameter', 'name': 'user_id', 'range': [228, 228], 'children': []}, {'type': 'TypeAnnotation', 'name': 'str', 'range': [230, 230], 'children': []}]}, {'type': 'ReturnTypeAnnotation', 'name': 'Optional[User]', 'range': [232, 237], 'children': [{'type': 'OptionalKeyword', 'name': 'Optional', 'range': [234, 234], 'children': []}, {'type': 'TypeName', 'name': 'User', 'range': [236, 236], 'children': []}]}, {'type': 'FunctionBody', 'name': 'body', 'range': [239, 269], 'children': [{'type': 'VariableDeclaration', 'name': 'user', 'range': [240, 256], 'children': [{'type': 'Assignment', 'name': '=', 'range': [241, 241], 'children': []}, {'type': 'AwaitExpression', 'name': 'await', 'range': [242, 242], 'children': []}, {'type': 'MemberExpression', 'name': 'prisma.user.find_unique', 'range': [243, 247], 'children': [{'type': 'ObjectName', 'name': 'prisma', 'range': [243, 243], 'children': []}, {'type': 'ObjectName', 'name': 'user', 'range': [245, 245], 'children': []}, {'type': 'MethodName', 'name': 'find_unique', 'range': [247, 247], 'children': []}]}, {'type': 'ArgumentList', 'name': 'arguments', 'range': [248, 256], 'children': [{'type': 'ObjectLiteral', 'name': 'where', 'range': [249, 255], 'children': [{'type': 'Property', 'name': 'id', 'range': [252, 252], 'children': []}, {'type': 'Value', 'name': 'user_id', 'range': [254, 254], 'children': []}]}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [258, 268], 'children': [{'type': 'ConditionalExpression', 'name': 'if', 'range': [265, 268], 'children': [{'type': 'Condition', 'name': 'user', 'range': [266, 266], 'children': []}, {'type': 'Consequent', 'name': 'User.model_validate(user)', 'range': [259, 264], 'children': [{'type': 'MemberExpression', 'name': 'User.model_validate', 'range': [259, 261], 'children': [{'type': 'ObjectName', 'name': 'User', 'range': [259, 259], 'children': []}, {'type': 'MethodName', 'name': 'model_validate', 'range': [261, 261], 'children': []}]}, {'type': 'ArgumentList', 'name': 'arguments', 'range': [262, 264], 'children': [{'type': 'Value', 'name': 'user', 'range': [263, 263], 'children': []}]}]}, {'type': 'Alternate', 'name': 'None', 'range': [268, 268], 'children': []}]}]}]}]}]}
2025-01-08 10:28:56,823 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:58,323 - INFO - Step 3 result: {'type': 'Program', 'name': 'update_user_metadata', 'range': [403, 453], 'children': [{'type': 'FunctionDeclaration', 'name': 'update_user_metadata', 'range': [403, 453], 'children': [{'type': 'Keyword', 'name': 'async', 'range': [403, 403], 'children': []}, {'type': 'Keyword', 'name': 'def', 'range': [404, 404], 'children': []}, {'type': 'Identifier', 'name': 'update_user_metadata', 'range': [405, 405], 'children': []}, {'type': 'Parameter', 'name': 'user_id', 'range': [407, 409], 'children': [{'type': 'Identifier', 'name': 'user_id', 'range': [407, 407], 'children': []}, {'type': 'TypeAnnotation', 'name': 'str', 'range': [409, 409], 'children': []}]}, {'type': 'Parameter', 'name': 'metadata', 'range': [411, 413], 'children': [{'type': 'Identifier', 'name': 'metadata', 'range': [411, 411], 'children': []}, {'type': 'TypeAnnotation', 'name': 'UserMetadata', 'range': [413, 413], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [416, 453], 'children': [{'type': 'Keyword', 'name': 'await', 'range': [417, 417], 'children': []}, {'type': 'MemberExpression', 'name': 'User.prisma', 'range': [418, 420], 'children': [{'type': 'Identifier', 'name': 'User', 'range': [418, 418], 'children': []}, {'type': 'Identifier', 'name': 'prisma', 'range': [420, 420], 'children': []}]}, {'type': 'CallExpression', 'name': '', 'range': [421, 452], 'children': [{'type': 'Identifier', 'name': 'update', 'range': [424, 424], 'children': []}, {'type': 'ObjectExpression', 'name': '', 'range': [426, 449], 'children': [{'type': 'Property', 'name': 'where', 'range': [427, 433], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [429, 433], 'children': [{'type': 'Property', 'name': 'id', 'range': [430, 432], 'children': [{'type': 'Literal', 'name': '"id"', 'range': [430, 430], 'children': []}, {'type': 'Identifier', 'name': 'user_id', 'range': [432, 432], 'children': []}]}]}]}, {'type': 'Property', 'name': 'data', 'range': [435, 449], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [437, 449], 'children': [{'type': 'Property', 'name': 'metadata', 'range': [438, 448], 'children': [{'type': 'Literal', 'name': '"metadata"', 'range': [438, 438], 'children': []}, {'type': 'CallExpression', 'name': 'Json', 'range': [440, 448], 'children': [{'type': 'Identifier', 'name': 'Json', 'range': [440, 440], 'children': []}, {'type': 'MemberExpression', 'name': 'metadata.model_dump', 'range': [442, 445], 'children': [{'type': 'Identifier', 'name': 'metadata', 'range': [442, 442], 'children': []}, {'type': 'Identifier', 'name': 'model_dump', 'range': [444, 444], 'children': []}]}]}]}]}]}]}]}]}]}]}
2025-01-08 10:28:58,323 - INFO - Starting Step 4: AST normalization
2025-01-08 10:29:00,578 - INFO - Step 4 result: {'type': 'Program', 'name': 'get_user_integrations', 'range': [454, 526], 'children': [{'type': 'FunctionDecl', 'name': 'get_user_integrations', 'range': [454, 526], 'children': [{'type': 'AsyncKeyword', 'name': 'async', 'range': [454, 454], 'children': []}, {'type': 'DefKeyword', 'name': 'def', 'range': [455, 455], 'children': []}, {'type': 'Identifier', 'name': 'get_user_integrations', 'range': [456, 456], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [457, 461], 'children': [{'type': 'Parameter', 'name': 'user_id', 'range': [458, 458], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [460, 460], 'children': []}]}]}, {'type': 'ReturnType', 'name': 'UserIntegrations', 'range': [462, 464], 'children': []}, {'type': 'BlockStatement', 'name': 'body', 'range': [466, 526], 'children': [{'type': 'VariableDecl', 'name': 'user', 'range': [467, 488], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [469, 469], 'children': [{'type': 'CallExpression', 'name': 'User.prisma().find_unique_or_raise', 'range': [470, 488], 'children': [{'type': 'Argument', 'name': 'where', 'range': [479, 485], 'children': [{'type': 'ObjectLiteral', 'name': '{"id": user_id}', 'range': [481, 485], 'children': []}]}]}]}]}, {'type': 'VariableDecl', 'name': 'encrypted_integrations', 'range': [491, 496], 'children': [{'type': 'MemberExpression', 'name': 'user.integrations', 'range': [493, 495], 'children': []}]}, {'type': 'IfStatement', 'name': 'if', 'range': [497, 506], 'children': [{'type': 'Condition', 'name': 'not encrypted_integrations', 'range': [498, 499], 'children': []}, {'type': 'BlockStatement', 'name': 'then', 'range': [501, 506], 'children': [{'type': 'ReturnStatement', 'name': 'return UserIntegrations()', 'range': [502, 505], 'children': []}]}]}, {'type': 'ElseStatement', 'name': 'else', 'range': [507, 526], 'children': [{'type': 'BlockStatement', 'name': 'else', 'range': [509, 526], 'children': [{'type': 'ReturnStatement', 'name': 'return UserIntegrations.model_validate(JSONCryptor().decrypt(encrypted_integrations))', 'range': [510, 525], 'children': [{'type': 'CallExpression', 'name': 'UserIntegrations.model_validate', 'range': [511, 525], 'children': [{'type': 'CallExpression', 'name': 'JSONCryptor().decrypt', 'range': [516, 523], 'children': [{'type': 'Argument', 'name': 'encrypted_integrations', 'range': [522, 522], 'children': []}]}]}]}]}]}]}]}]}
2025-01-08 10:29:00,578 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:29:01,691 - INFO - Step 2 result: {'type': 'Program', 'name': 'get_or_create_user', 'range': [80, 223], 'children': [{'type': 'FunctionDeclaration', 'name': 'get_or_create_user', 'range': [80, 223], 'children': [{'type': 'FunctionSignature', 'name': 'get_or_create_user', 'range': [80, 91], 'children': [{'type': 'Keyword', 'name': 'async', 'range': [80, 85], 'children': []}, {'type': 'Keyword', 'name': 'def', 'range': [81, 84], 'children': []}, {'type': 'Identifier', 'name': 'get_or_create_user', 'range': [82, 100], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [83, 87], 'children': [{'type': 'Parameter', 'name': 'user_data', 'range': [84, 86], 'children': [{'type': 'TypeAnnotation', 'name': 'dict', 'range': [86, 90], 'children': []}]}]}, {'type': 'ReturnType', 'name': 'User', 'range': [88, 91], 'children': []}]}, {'type': 'FunctionBody', 'name': 'body', 'range': [92, 223], 'children': [{'type': 'VariableDeclaration', 'name': 'user_id', 'range': [93, 101], 'children': [{'type': 'Assignment', 'name': '=', 'range': [94, 95], 'children': [{'type': 'MemberExpression', 'name': 'user_data.get', 'range': [95, 100], 'children': [{'type': 'Identifier', 'name': 'user_data', 'range': [95, 103], 'children': []}, {'type': 'PropertyAccess', 'name': '.', 'range': [96, 97], 'children': []}, {'type': 'Identifier', 'name': 'get', 'range': [97, 100], 'children': []}]}, {'type': 'StringLiteral', 'name': '"sub"', 'range': [99, 103], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if', 'range': [102, 118], 'children': [{'type': 'Condition', 'name': 'not user_id', 'range': [103, 105], 'children': [{'type': 'UnaryExpression', 'name': 'not', 'range': [103, 106], 'children': [{'type': 'Identifier', 'name': 'user_id', 'range': [104, 108], 'children': []}]}]}, {'type': 'Block', 'name': 'block', 'range': [106, 118], 'children': [{'type': 'RaiseStatement', 'name': 'raise', 'range': [107, 118], 'children': [{'type': 'Identifier', 'name': 'HTTPException', 'range': [108, 121], 'children': []}, {'type': 'ArgumentList', 'name': 'arguments', 'range': [109, 117], 'children': [{'type': 'KeywordArgument', 'name': 'status_code', 'range': [110, 112], 'children': [{'type': 'NumericLiteral', 'name': '401', 'range': [111, 114], 'children': []}]}, {'type': 'KeywordArgument', 'name': 'detail', 'range': [114, 116], 'children': [{'type': 'StringLiteral', 'name': '"User ID not found in token"', 'range': [115, 117], 'children': []}]}]}]}]}]}, {'type': 'VariableDeclaration', 'name': 'user_email', 'range': [120, 128], 'children': [{'type': 'Assignment', 'name': '=', 'range': [121, 122], 'children': [{'type': 'MemberExpression', 'name': 'user_data.get', 'range': [122, 127], 'children': [{'type': 'Identifier', 'name': 'user_data', 'range': [122, 130], 'children': []}, {'type': 'PropertyAccess', 'name': '.', 'range': [123, 124], 'children': []}, {'type': 'Identifier', 'name': 'get', 'range': [124, 127], 'children': []}]}, {'type': 'StringLiteral', 'name': '"email"', 'range': [126, 130], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if', 'range': [129, 145], 'children': [{'type': 'Condition', 'name': 'not user_email', 'range': [130, 132], 'children': [{'type': 'UnaryExpression', 'name': 'not', 'range': [130, 133], 'children': [{'type': 'Identifier', 'name': 'user_email', 'range': [131, 135], 'children': []}]}]}, {'type': 'Block', 'name': 'block', 'range': [132, 145], 'children': [{'type': 'RaiseStatement', 'name': 'raise', 'range': [134, 145], 'children': [{'type': 'Identifier', 'name': 'HTTPException', 'range': [135, 148], 'children': []}, {'type': 'ArgumentList', 'name': 'arguments', 'range': [136, 144], 'children': [{'type': 'KeywordArgument', 'name': 'status_code', 'range': [137, 139], 'children': [{'type': 'NumericLiteral', 'name': '401', 'range': [138, 141], 'children': []}]}, {'type': 'KeywordArgument', 'name': 'detail', 'range': [141, 143], 'children': [{'type': 'StringLiteral', 'name': '"Email not found in token"', 'range': [142, 144], 'children': []}]}]}]}]}]}, {'type': 'VariableDeclaration', 'name': 'user', 'range': [147, 164], 'children': [{'type': 'Assignment', 'name': '=', 'range': [148, 149], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [149, 154], 'children': [{'type': 'MemberExpression', 'name': 'prisma.user.find_unique', 'range': [150, 163], 'children': [{'type': 'Identifier', 'name': 'prisma', 'range': [150, 156], 'children': []}, {'type': 'PropertyAccess', 'name': '.', 'range': [151, 152], 'children': []}, {'type': 'Identifier', 'name': 'user', 'range': [152, 156], 'children': []}, {'type': 'PropertyAccess', 'name': '.', 'range': [153, 154], 'children': []}, {'type': 'Identifier', 'name': 'find_unique', 'range': [154, 165], 'children': []}]}, {'type': 'ArgumentList', 'name': 'arguments', 'range': [155, 163], 'children': [{'type': 'KeywordArgument', 'name': 'where', 'range': [156, 158], 'children': [{'type': 'ObjectLiteral', 'name': 'object', 'range': [158, 162], 'children': [{'type': 'Property', 'name': 'id', 'range': [159, 161], 'children': [{'type': 'Identifier', 'name': 'user_id', 'range': [161, 167], 'children': []}]}]}]}]}]}]}]}, {'type': 'IfStatement', 'name': 'if', 'range': [165, 215], 'children': [{'type': 'Condition', 'name': 'not user', 'range': [166, 168], 'children': [{'type': 'UnaryExpression', 'name': 'not', 'range': [166, 169], 'children': [{'type': 'Identifier', 'name': 'user', 'range': [167, 171], 'children': []}]}]}, {'type': 'Block', 'name': 'block', 'range': [168, 215], 'children': [{'type': 'VariableDeclaration', 'name': 'user', 'range': [170, 215], 'children': [{'type': 'Assignment', 'name': '=', 'range': [171, 172], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [172, 177], 'children': [{'type': 'MemberExpression', 'name': 'prisma.user.create', 'range': [173, 214], 'children': [{'type': 'Identifier', 'name': 'prisma', 'range': [173, 179], 'children': []}, {'type': 'PropertyAccess', 'name': '.', 'range': [174, 175], 'children': []}, {'type': 'Identifier', 'name': 'user', 'range': [175, 179], 'children': []}, {'type': 'PropertyAccess', 'name': '.', 'range': [176, 177], 'children': []}, {'type': 'Identifier', 'name': 'create', 'range': [177, 183], 'children': []}]}, {'type': 'ArgumentList', 'name': 'arguments', 'range': [178, 214], 'children': [{'type': 'KeywordArgument', 'name': 'data', 'range': [180, 182], 'children': [{'type': 'ObjectLiteral', 'name': 'object', 'range': [182, 212], 'children': [{'type': 'Property', 'name': 'id', 'range': [184, 186], 'children': [{'type': 'Identifier', 'name': 'user_id', 'range': [186, 192], 'children': []}]}, {'type': 'Property', 'name': 'email', 'range': [189, 191], 'children': [{'type': 'Identifier', 'name': 'user_email', 'range': [191, 201], 'children': []}]}, {'type': 'Property', 'name': 'name', 'range': [194, 210], 'children': [{'type': 'MemberExpression', 'name': 'user_data.get', 'range': [196, 209], 'children': [{'type': 'Identifier', 'name': 'user_data', 'range': [196, 204], 'children': []}, {'type': 'PropertyAccess', 'name': '.', 'range': [197, 198], 'children': []}, {'type': 'Identifier', 'name': 'get', 'range': [198, 201], 'children': []}]}, {'type': 'ArgumentList', 'name': 'arguments', 'range': [199, 209], 'children': [{'type': 'StringLiteral', 'name': '"user_metadata"', 'range': [200, 214], 'children': []}, {'type': 'ObjectLiteral', 'name': 'object', 'range': [202, 204], 'children': []}]}, {'type': 'PropertyAccess', 'name': '.', 'range': [205, 206], 'children': []}, {'type': 'Identifier', 'name': 'get', 'range': [206, 209], 'children': []}, {'type': 'ArgumentList', 'name': 'arguments', 'range': [207, 209], 'children': [{'type': 'StringLiteral', 'name': '"name"', 'range': [208, 210], 'children': []}]}]}]}]}]}]}]}]}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [216, 223], 'children': [{'type': 'MemberExpression', 'name': 'User.model_validate', 'range': [217, 222], 'children': [{'type': 'Identifier', 'name': 'User', 'range': [217, 221], 'children': []}, {'type': 'PropertyAccess', 'name': '.', 'range': [218, 219], 'children': []}, {'type': 'Identifier', 'name': 'model_validate', 'range': [219, 233], 'children': []}]}, {'type': 'ArgumentList', 'name': 'arguments', 'range': [220, 222], 'children': [{'type': 'Identifier', 'name': 'user', 'range': [221, 225], 'children': []}]}]}]}]}]}
2025-01-08 10:29:01,691 - INFO - Starting Step 3: AST simplification
2025-01-08 10:29:08,782 - INFO - Step 4 result: {'type': 'Program', 'name': 'get_user_metadata', 'range': [347, 402], 'children': [{'type': 'FunctionDecl', 'name': 'get_user_metadata', 'range': [347, 402], 'children': [{'type': 'AsyncKeyword', 'name': 'async', 'range': [347, 351], 'children': []}, {'type': 'DefKeyword', 'name': 'def', 'range': [348, 351], 'children': []}, {'type': 'FunctionName', 'name': 'get_user_metadata', 'range': [349, 366], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [350, 354], 'children': [{'type': 'Parameter', 'name': 'user_id', 'range': [351, 357], 'children': [{'type': 'ParameterName', 'name': 'user_id', 'range': [351, 357], 'children': []}, {'type': 'TypeAnnotation', 'name': 'str', 'range': [352, 355], 'children': []}]}]}, {'type': 'ReturnType', 'name': 'UserMetadata', 'range': [355, 363], 'children': []}, {'type': 'FunctionBody', 'name': 'body', 'range': [358, 402], 'children': [{'type': 'VariableDecl', 'name': 'user', 'range': [360, 381], 'children': [{'type': 'VariableName', 'name': 'user', 'range': [360, 364], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [361, 362], 'children': []}, {'type': 'AwaitExpression', 'name': 'await', 'range': [362, 367], 'children': [{'type': 'CallExpression', 'name': 'User.prisma().find_unique_or_raise', 'range': [363, 381], 'children': [{'type': 'MemberExpression', 'name': 'User.prisma', 'range': [363, 371], 'children': []}, {'type': 'CallExpression', 'name': 'find_unique_or_raise', 'range': [369, 381], 'children': [{'type': 'ArgumentList', 'name': 'arguments', 'range': [370, 380], 'children': [{'type': 'ObjectExpression', 'name': 'where', 'range': [372, 378], 'children': [{'type': 'Property', 'name': 'id', 'range': [375, 377], 'children': [{'type': 'Key', 'name': 'id', 'range': [375, 377], 'children': []}, {'type': 'Value', 'name': 'user_id', 'range': [377, 377], 'children': []}]}]}]}]}]}]}]}, {'type': 'VariableDecl', 'name': 'metadata', 'range': [384, 393], 'children': [{'type': 'VariableName', 'name': 'metadata', 'range': [384, 392], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [385, 386], 'children': []}, {'type': 'CastExpression', 'name': 'cast', 'range': [386, 393], 'children': [{'type': 'Type', 'name': 'UserMetadataRaw', 'range': [388, 402], 'children': []}, {'type': 'Value', 'name': 'user.metadata', 'range': [390, 393], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [395, 402], 'children': [{'type': 'CallExpression', 'name': 'UserMetadata.model_validate', 'range': [396, 402], 'children': [{'type': 'MemberExpression', 'name': 'UserMetadata.model_validate', 'range': [396, 402], 'children': []}, {'type': 'ArgumentList', 'name': 'arguments', 'range': [399, 401], 'children': [{'type': 'Identifier', 'name': 'metadata', 'range': [400, 401], 'children': []}]}]}]}]}]}]}
2025-01-08 10:29:08,782 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:29:09,285 - INFO - Step 5 result: {'type': 'Program', 'name': 'update_user_integrations', 'range': [527, 585], 'children': [{'type': 'FunctionDecl', 'name': 'update_user_integrations', 'range': [527, 585], 'children': [{'type': 'Keyword', 'name': 'async', 'range': [527, 531], 'children': []}, {'type': 'Keyword', 'name': 'def', 'range': [528, 531], 'children': []}, {'type': 'Identifier', 'name': 'update_user_integrations', 'range': [529, 553], 'children': []}, {'type': 'ParameterList', 'name': '', 'range': [530, 538], 'children': [{'type': 'Parameter', 'name': 'user_id', 'range': [531, 537], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [533, 536], 'children': []}]}, {'type': 'Parameter', 'name': 'data', 'range': [535, 537], 'children': [{'type': 'TypeAnnotation', 'name': 'UserIntegrations', 'range': [537, 537], 'children': []}]}]}, {'type': 'BlockStatement', 'name': '', 'range': [539, 585], 'children': [{'type': 'VariableDecl', 'name': 'encrypted_data', 'range': [541, 554], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [542, 554], 'children': [{'type': 'CallExpression', 'name': 'JSONCryptor.encrypt', 'range': [543, 554], 'children': [{'type': 'CallExpression', 'name': 'data.model_dump', 'range': [549, 553], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': 'await', 'range': [556, 584], 'children': [{'type': 'CallExpression', 'name': 'User.prisma.update', 'range': [557, 584], 'children': [{'type': 'ObjectExpression', 'name': 'where', 'range': [566, 572], 'children': [{'type': 'Property', 'name': 'id', 'range': [569, 571], 'children': [{'type': 'Identifier', 'name': 'user_id', 'range': [571, 571], 'children': []}]}]}, {'type': 'ObjectExpression', 'name': 'data', 'range': [575, 581], 'children': [{'type': 'Property', 'name': 'integrations', 'range': [578, 580], 'children': [{'type': 'Identifier', 'name': 'encrypted_data', 'range': [580, 580], 'children': []}]}]}]}]}]}]}]}
2025-01-08 10:29:09,286 - INFO - Completed main AST analysis flow
2025-01-08 10:29:09,286 - INFO - Successfully processed chunk
2025-01-08 10:29:11,673 - INFO - Step 5 result: {'nodes': [{'type': 'Program', 'name': 'MainOrSomething', 'range': [0, 78], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 2], 'children': [{'type': 'ImportSpecifier', 'name': 'logging', 'range': [1, 1], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [3, 9], 'children': [{'type': 'ImportSpecifier', 'name': 'Optional', 'range': [6, 6], 'children': []}, {'type': 'ImportSpecifier', 'name': 'cast', 'range': [8, 8], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [11, 19], 'children': [{'type': 'ImportSpecifier', 'name': 'DEFAULT_USER_ID', 'range': [18, 18], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [20, 24], 'children': [{'type': 'ImportSpecifier', 'name': 'HTTPException', 'range': [23, 23], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [25, 29], 'children': [{'type': 'ImportSpecifier', 'name': 'Json', 'range': [28, 28], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [30, 36], 'children': [{'type': 'ImportSpecifier', 'name': 'User', 'range': [35, 35], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [38, 46], 'children': [{'type': 'ImportSpecifier', 'name': 'prisma', 'range': [45, 45], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [47, 59], 'children': [{'type': 'ImportSpecifier', 'name': 'UserIntegrations', 'range': [54, 54], 'children': []}, {'type': 'ImportSpecifier', 'name': 'UserMetadata', 'range': [56, 56], 'children': []}, {'type': 'ImportSpecifier', 'name': 'UserMetadataRaw', 'range': [58, 58], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [60, 68], 'children': [{'type': 'ImportSpecifier', 'name': 'JSONCryptor', 'range': [67, 67], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'logger', 'range': [70, 78], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [71, 77], 'children': [{'type': 'CallExpression', 'name': 'getLogger', 'range': [74, 77], 'children': [{'type': 'Identifier', 'name': '__name__', 'range': [76, 76], 'children': []}]}]}]}]}]}
2025-01-08 10:29:11,674 - INFO - Completed main AST analysis flow
2025-01-08 10:29:11,674 - INFO - Successfully processed chunk
2025-01-08 10:29:20,066 - INFO - Step 5 result: {'type': 'Program', 'name': 'get_user_integrations', 'range': [454, 526], 'children': [{'type': 'FunctionDecl', 'name': 'get_user_integrations', 'range': [454, 526], 'children': [{'type': 'AsyncKeyword', 'name': 'async', 'range': [454, 454], 'children': []}, {'type': 'DefKeyword', 'name': 'def', 'range': [455, 455], 'children': []}, {'type': 'Identifier', 'name': 'get_user_integrations', 'range': [456, 456], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [457, 461], 'children': [{'type': 'Parameter', 'name': 'user_id', 'range': [458, 458], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [460, 460], 'children': []}]}]}, {'type': 'ReturnType', 'name': 'UserIntegrations', 'range': [462, 464], 'children': []}, {'type': 'BlockStatement', 'name': 'body', 'range': [466, 526], 'children': [{'type': 'VariableDecl', 'name': 'user', 'range': [467, 488], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [469, 469], 'children': [{'type': 'CallExpression', 'name': 'User.prisma().find_unique_or_raise', 'range': [470, 488], 'children': [{'type': 'Argument', 'name': 'where', 'range': [479, 485], 'children': [{'type': 'ObjectLiteral', 'name': '{"id": user_id}', 'range': [481, 485], 'children': []}]}]}]}]}, {'type': 'VariableDecl', 'name': 'encrypted_integrations', 'range': [491, 496], 'children': [{'type': 'MemberExpression', 'name': 'user.integrations', 'range': [493, 495], 'children': []}]}, {'type': 'IfStatement', 'name': 'if', 'range': [497, 506], 'children': [{'type': 'Condition', 'name': 'not encrypted_integrations', 'range': [498, 499], 'children': []}, {'type': 'BlockStatement', 'name': 'then', 'range': [501, 506], 'children': [{'type': 'ReturnStatement', 'name': 'return UserIntegrations()', 'range': [502, 505], 'children': []}]}]}, {'type': 'ElseStatement', 'name': 'else', 'range': [507, 526], 'children': [{'type': 'BlockStatement', 'name': 'else', 'range': [509, 526], 'children': [{'type': 'ReturnStatement', 'name': 'return UserIntegrations.model_validate(JSONCryptor().decrypt(encrypted_integrations))', 'range': [510, 525], 'children': [{'type': 'CallExpression', 'name': 'UserIntegrations.model_validate', 'range': [511, 525], 'children': [{'type': 'CallExpression', 'name': 'JSONCryptor().decrypt', 'range': [516, 523], 'children': [{'type': 'Argument', 'name': 'encrypted_integrations', 'range': [522, 522], 'children': []}]}]}]}]}]}]}]}]}
2025-01-08 10:29:20,066 - INFO - Completed main AST analysis flow
2025-01-08 10:29:20,067 - INFO - Successfully processed chunk
2025-01-08 10:29:20,761 - INFO - Step 4 result: {'type': 'Program', 'name': 'get_user_by_id', 'range': [224, 269], 'children': [{'type': 'FunctionDecl', 'name': 'get_user_by_id', 'range': [224, 269], 'children': [{'type': 'AsyncKeyword', 'name': 'async', 'range': [224, 224], 'children': []}, {'type': 'DefKeyword', 'name': 'def', 'range': [225, 225], 'children': []}, {'type': 'Identifier', 'name': 'get_user_by_id', 'range': [226, 226], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [227, 231], 'children': [{'type': 'Parameter', 'name': 'user_id', 'range': [228, 228], 'children': []}, {'type': 'TypeAnnotation', 'name': 'str', 'range': [230, 230], 'children': []}]}, {'type': 'ReturnTypeAnnotation', 'name': 'Optional[User]', 'range': [232, 237], 'children': [{'type': 'OptionalKeyword', 'name': 'Optional', 'range': [234, 234], 'children': []}, {'type': 'Identifier', 'name': 'User', 'range': [236, 236], 'children': []}]}, {'type': 'BlockStatement', 'name': 'body', 'range': [239, 269], 'children': [{'type': 'VariableDeclaration', 'name': 'user', 'range': [240, 256], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [241, 241], 'children': []}, {'type': 'AwaitExpression', 'name': 'await', 'range': [242, 242], 'children': []}, {'type': 'CallExpression', 'name': 'prisma.user.find_unique', 'range': [243, 247], 'children': [{'type': 'MemberExpression', 'name': 'prisma.user.find_unique', 'range': [243, 247], 'children': [{'type': 'Identifier', 'name': 'prisma', 'range': [243, 243], 'children': []}, {'type': 'Identifier', 'name': 'user', 'range': [245, 245], 'children': []}, {'type': 'Identifier', 'name': 'find_unique', 'range': [247, 247], 'children': []}]}]}, {'type': 'ArgumentList', 'name': 'arguments', 'range': [248, 256], 'children': [{'type': 'ObjectExpression', 'name': 'where', 'range': [249, 255], 'children': [{'type': 'Property', 'name': 'id', 'range': [252, 252], 'children': []}, {'type': 'Identifier', 'name': 'user_id', 'range': [254, 254], 'children': []}]}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [258, 268], 'children': [{'type': 'IfStatement', 'name': 'if', 'range': [265, 268], 'children': [{'type': 'Condition', 'name': 'user', 'range': [266, 266], 'children': []}, {'type': 'BlockStatement', 'name': 'Consequent', 'range': [259, 264], 'children': [{'type': 'CallExpression', 'name': 'User.model_validate', 'range': [259, 261], 'children': [{'type': 'MemberExpression', 'name': 'User.model_validate', 'range': [259, 261], 'children': [{'type': 'Identifier', 'name': 'User', 'range': [259, 259], 'children': []}, {'type': 'Identifier', 'name': 'model_validate', 'range': [261, 261], 'children': []}]}]}, {'type': 'ArgumentList', 'name': 'arguments', 'range': [262, 264], 'children': [{'type': 'Identifier', 'name': 'user', 'range': [263, 263], 'children': []}]}]}, {'type': 'BlockStatement', 'name': 'Alternate', 'range': [268, 268], 'children': [{'type': 'Identifier', 'name': 'None', 'range': [268, 268], 'children': []}]}]}]}]}]}]}
2025-01-08 10:29:20,762 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:29:21,279 - INFO - Step 4 result: {'type': 'Program', 'name': 'update_user_metadata', 'range': [403, 453], 'children': [{'type': 'FunctionDecl', 'name': 'update_user_metadata', 'range': [403, 453], 'children': [{'type': 'Keyword', 'name': 'async', 'range': [403, 403], 'children': []}, {'type': 'Keyword', 'name': 'def', 'range': [404, 404], 'children': []}, {'type': 'Identifier', 'name': 'update_user_metadata', 'range': [405, 405], 'children': []}, {'type': 'Parameter', 'name': 'user_id', 'range': [407, 409], 'children': [{'type': 'Identifier', 'name': 'user_id', 'range': [407, 407], 'children': []}, {'type': 'TypeAnnotation', 'name': 'str', 'range': [409, 409], 'children': []}]}, {'type': 'Parameter', 'name': 'metadata', 'range': [411, 413], 'children': [{'type': 'Identifier', 'name': 'metadata', 'range': [411, 411], 'children': []}, {'type': 'TypeAnnotation', 'name': 'UserMetadata', 'range': [413, 413], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [416, 453], 'children': [{'type': 'Keyword', 'name': 'await', 'range': [417, 417], 'children': []}, {'type': 'MemberExpression', 'name': 'User.prisma', 'range': [418, 420], 'children': [{'type': 'Identifier', 'name': 'User', 'range': [418, 418], 'children': []}, {'type': 'Identifier', 'name': 'prisma', 'range': [420, 420], 'children': []}]}, {'type': 'CallExpression', 'name': '', 'range': [421, 452], 'children': [{'type': 'Identifier', 'name': 'update', 'range': [424, 424], 'children': []}, {'type': 'ObjectExpression', 'name': '', 'range': [426, 449], 'children': [{'type': 'Property', 'name': 'where', 'range': [427, 433], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [429, 433], 'children': [{'type': 'Property', 'name': 'id', 'range': [430, 432], 'children': [{'type': 'Literal', 'name': '"id"', 'range': [430, 430], 'children': []}, {'type': 'Identifier', 'name': 'user_id', 'range': [432, 432], 'children': []}]}]}]}, {'type': 'Property', 'name': 'data', 'range': [435, 449], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [437, 449], 'children': [{'type': 'Property', 'name': 'metadata', 'range': [438, 448], 'children': [{'type': 'Literal', 'name': '"metadata"', 'range': [438, 438], 'children': []}, {'type': 'CallExpression', 'name': 'Json', 'range': [440, 448], 'children': [{'type': 'Identifier', 'name': 'Json', 'range': [440, 440], 'children': []}, {'type': 'MemberExpression', 'name': 'metadata.model_dump', 'range': [442, 445], 'children': [{'type': 'Identifier', 'name': 'metadata', 'range': [442, 442], 'children': []}, {'type': 'Identifier', 'name': 'model_dump', 'range': [444, 444], 'children': []}]}]}]}]}]}]}]}]}]}]}
2025-01-08 10:29:21,280 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:29:29,202 - INFO - Step 3 result: {'type': 'Program', 'name': 'create_default_user', 'range': [270, 346], 'children': [{'type': 'FunctionDeclaration', 'name': 'create_default_user', 'range': [270, 346], 'children': [{'type': 'AsyncKeyword', 'name': 'async', 'range': [270, 270], 'children': []}, {'type': 'DefKeyword', 'name': 'def', 'range': [271, 271], 'children': []}, {'type': 'FunctionName', 'name': 'create_default_user', 'range': [272, 272], 'children': []}, {'type': 'ParameterList', 'name': '()', 'range': [273, 274], 'children': []}, {'type': 'ReturnType', 'name': '-> Optional[User]', 'range': [275, 280], 'children': [{'type': 'OptionalKeyword', 'name': 'Optional', 'range': [277, 277], 'children': []}, {'type': 'UserType', 'name': 'User', 'range': [279, 279], 'children': []}]}, {'type': 'FunctionBody', 'name': '', 'range': [282, 346], 'children': [{'type': 'VariableDeclaration', 'name': 'user = await prisma.user.find_unique(where={"id": DEFAULT_USER_ID})', 'range': [283, 299], 'children': [{'type': 'VariableName', 'name': 'user', 'range': [283, 283], 'children': []}, {'type': 'AssignmentOperator', 'name': '=', 'range': [284, 284], 'children': []}, {'type': 'AwaitExpression', 'name': 'await prisma.user.find_unique(where={"id": DEFAULT_USER_ID})', 'range': [285, 299], 'children': [{'type': 'AwaitKeyword', 'name': 'await', 'range': [285, 285], 'children': []}, {'type': 'FunctionCall', 'name': 'prisma.user.find_unique(where={"id": DEFAULT_USER_ID})', 'range': [286, 299], 'children': [{'type': 'ObjectName', 'name': 'prisma', 'range': [286, 286], 'children': []}, {'type': 'PropertyAccess', 'name': 'user', 'range': [288, 288], 'children': []}, {'type': 'PropertyAccess', 'name': 'find_unique', 'range': [290, 290], 'children': []}, {'type': 'ArgumentList', 'name': '(where={"id": DEFAULT_USER_ID})', 'range': [291, 299], 'children': [{'type': 'NamedArgument', 'name': 'where={"id": DEFAULT_USER_ID}', 'range': [292, 298], 'children': [{'type': 'ArgumentName', 'name': 'where', 'range': [292, 292], 'children': []}, {'type': 'AssignmentOperator', 'name': '=', 'range': [293, 293], 'children': []}, {'type': 'ObjectLiteral', 'name': '{"id": DEFAULT_USER_ID}', 'range': [294, 298], 'children': [{'type': 'Property', 'name': '"id": DEFAULT_USER_ID', 'range': [295, 297], 'children': [{'type': 'PropertyName', 'name': '"id"', 'range': [295, 295], 'children': []}, {'type': 'PropertyValue', 'name': 'DEFAULT_USER_ID', 'range': [297, 297], 'children': []}]}]}]}]}]}]}]}, {'type': 'IfStatement', 'name': 'if not user:', 'range': [301, 305], 'children': [{'type': 'IfKeyword', 'name': 'if', 'range': [301, 301], 'children': []}, {'type': 'NotKeyword', 'name': 'not', 'range': [302, 302], 'children': []}, {'type': 'Condition', 'name': 'user', 'range': [303, 303], 'children': []}]}, {'type': 'Block', 'name': '', 'range': [306, 338], 'children': [{'type': 'VariableDeclaration', 'name': 'user = await prisma.user.create(data={"id": DEFAULT_USER_ID, "email": "default@example.com", "name": "Default User"})', 'range': [306, 337], 'children': [{'type': 'VariableName', 'name': 'user', 'range': [306, 306], 'children': []}, {'type': 'AssignmentOperator', 'name': '=', 'range': [307, 307], 'children': []}, {'type': 'AwaitExpression', 'name': 'await prisma.user.create(data={"id": DEFAULT_USER_ID, "email": "default@example.com", "name": "Default User"})', 'range': [308, 337], 'children': [{'type': 'AwaitKeyword', 'name': 'await', 'range': [308, 308], 'children': []}, {'type': 'FunctionCall', 'name': 'prisma.user.create(data={"id": DEFAULT_USER_ID, "email": "default@example.com", "name": "Default User"})', 'range': [309, 337], 'children': [{'type': 'ObjectName', 'name': 'prisma', 'range': [309, 309], 'children': []}, {'type': 'PropertyAccess', 'name': 'user', 'range': [311, 311], 'children': []}, {'type': 'PropertyAccess', 'name': 'create', 'range': [313, 313], 'children': []}, {'type': 'ArgumentList', 'name': '(data={"id": DEFAULT_USER_ID, "email": "default@example.com", "name": "Default User"})', 'range': [314, 337], 'children': [{'type': 'NamedArgument', 'name': 'data={"id": DEFAULT_USER_ID, "email": "default@example.com", "name": "Default User"}', 'range': [316, 335], 'children': [{'type': 'ArgumentName', 'name': 'data', 'range': [316, 316], 'children': []}, {'type': 'AssignmentOperator', 'name': '=', 'range': [317, 317], 'children': []}, {'type': 'ObjectLiteral', 'name': '{"id": DEFAULT_USER_ID, "email": "default@example.com", "name": "Default User"}', 'range': [318, 335], 'children': [{'type': 'Property', 'name': '"id": DEFAULT_USER_ID', 'range': [320, 322], 'children': [{'type': 'PropertyName', 'name': '"id"', 'range': [320, 320], 'children': []}, {'type': 'PropertyValue', 'name': 'DEFAULT_USER_ID', 'range': [322, 322], 'children': []}]}, {'type': 'Property', 'name': '"email": "default@example.com"', 'range': [325, 327], 'children': [{'type': 'PropertyName', 'name': '"email"', 'range': [325, 325], 'children': []}, {'type': 'PropertyValue', 'name': '"default@example.com"', 'range': [327, 327], 'children': []}]}, {'type': 'Property', 'name': '"name": "Default User"', 'range': [330, 332], 'children': [{'type': 'PropertyName', 'name': '"name"', 'range': [330, 330], 'children': []}, {'type': 'PropertyValue', 'name': '"Default User"', 'range': [332, 332], 'children': []}]}]}]}]}]}]}]}]}, {'type': 'ReturnStatement', 'name': 'return User.model_validate(user)', 'range': [339, 345], 'children': [{'type': 'ReturnKeyword', 'name': 'return', 'range': [339, 339], 'children': []}, {'type': 'FunctionCall', 'name': 'User.model_validate(user)', 'range': [340, 345], 'children': [{'type': 'ObjectName', 'name': 'User', 'range': [340, 340], 'children': []}, {'type': 'PropertyAccess', 'name': 'model_validate', 'range': [342, 342], 'children': []}, {'type': 'ArgumentList', 'name': '(user)', 'range': [343, 345], 'children': [{'type': 'Argument', 'name': 'user', 'range': [344, 344], 'children': []}]}]}]}]}]}]}
2025-01-08 10:29:29,203 - INFO - Starting Step 4: AST normalization
2025-01-08 10:29:31,623 - INFO - Step 5 result: {'type': 'Program', 'name': 'get_user_metadata', 'range': [347, 402], 'children': [{'type': 'FunctionDecl', 'name': 'get_user_metadata', 'range': [347, 402], 'children': [{'type': 'AsyncKeyword', 'name': 'async', 'range': [347, 351], 'children': []}, {'type': 'DefKeyword', 'name': 'def', 'range': [348, 351], 'children': []}, {'type': 'FunctionName', 'name': 'get_user_metadata', 'range': [349, 366], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [350, 354], 'children': [{'type': 'Parameter', 'name': 'user_id', 'range': [351, 357], 'children': [{'type': 'ParameterName', 'name': 'user_id', 'range': [351, 357], 'children': []}, {'type': 'TypeAnnotation', 'name': 'str', 'range': [352, 355], 'children': []}]}]}, {'type': 'ReturnType', 'name': 'UserMetadata', 'range': [355, 363], 'children': []}, {'type': 'FunctionBody', 'name': 'body', 'range': [358, 402], 'children': [{'type': 'VariableDecl', 'name': 'user', 'range': [360, 381], 'children': [{'type': 'VariableName', 'name': 'user', 'range': [360, 364], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [361, 362], 'children': []}, {'type': 'AwaitExpression', 'name': 'await', 'range': [362, 367], 'children': [{'type': 'CallExpression', 'name': 'User.prisma().find_unique_or_raise', 'range': [363, 381], 'children': [{'type': 'MemberExpression', 'name': 'User.prisma', 'range': [363, 371], 'children': []}, {'type': 'CallExpression', 'name': 'find_unique_or_raise', 'range': [369, 381], 'children': [{'type': 'ArgumentList', 'name': 'arguments', 'range': [370, 380], 'children': [{'type': 'ObjectExpression', 'name': 'where', 'range': [372, 378], 'children': [{'type': 'Property', 'name': 'id', 'range': [375, 377], 'children': [{'type': 'Key', 'name': 'id', 'range': [375, 377], 'children': []}, {'type': 'Value', 'name': 'user_id', 'range': [377, 377], 'children': []}]}]}]}]}]}]}]}, {'type': 'VariableDecl', 'name': 'metadata', 'range': [384, 393], 'children': [{'type': 'VariableName', 'name': 'metadata', 'range': [384, 392], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [385, 386], 'children': []}, {'type': 'CastExpression', 'name': 'cast', 'range': [386, 393], 'children': [{'type': 'Type', 'name': 'UserMetadataRaw', 'range': [388, 402], 'children': []}, {'type': 'Value', 'name': 'user.metadata', 'range': [390, 393], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [395, 402], 'children': [{'type': 'CallExpression', 'name': 'UserMetadata.model_validate', 'range': [396, 402], 'children': [{'type': 'MemberExpression', 'name': 'UserMetadata.model_validate', 'range': [396, 402], 'children': []}, {'type': 'ArgumentList', 'name': 'arguments', 'range': [399, 401], 'children': [{'type': 'Identifier', 'name': 'metadata', 'range': [400, 401], 'children': []}]}]}]}]}]}]}
2025-01-08 10:29:31,623 - INFO - Completed main AST analysis flow
2025-01-08 10:29:31,624 - INFO - Successfully processed chunk
2025-01-08 10:29:44,208 - INFO - Step 5 result: {'type': 'Program', 'name': 'update_user_metadata', 'range': [403, 453], 'children': [{'type': 'FunctionDecl', 'name': 'update_user_metadata', 'range': [403, 453], 'children': [{'type': 'Keyword', 'name': 'async', 'range': [403, 403], 'children': []}, {'type': 'Keyword', 'name': 'def', 'range': [404, 404], 'children': []}, {'type': 'Identifier', 'name': 'update_user_metadata', 'range': [405, 405], 'children': []}, {'type': 'Parameter', 'name': 'user_id', 'range': [407, 409], 'children': [{'type': 'Identifier', 'name': 'user_id', 'range': [407, 407], 'children': []}, {'type': 'TypeAnnotation', 'name': 'str', 'range': [409, 409], 'children': []}]}, {'type': 'Parameter', 'name': 'metadata', 'range': [411, 413], 'children': [{'type': 'Identifier', 'name': 'metadata', 'range': [411, 411], 'children': []}, {'type': 'TypeAnnotation', 'name': 'UserMetadata', 'range': [413, 413], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [416, 453], 'children': [{'type': 'Keyword', 'name': 'await', 'range': [417, 417], 'children': []}, {'type': 'MemberExpression', 'name': 'User.prisma', 'range': [418, 420], 'children': [{'type': 'Identifier', 'name': 'User', 'range': [418, 418], 'children': []}, {'type': 'Identifier', 'name': 'prisma', 'range': [420, 420], 'children': []}]}, {'type': 'CallExpression', 'name': '', 'range': [421, 452], 'children': [{'type': 'Identifier', 'name': 'update', 'range': [424, 424], 'children': []}, {'type': 'ObjectExpression', 'name': '', 'range': [426, 449], 'children': [{'type': 'Property', 'name': 'where', 'range': [427, 433], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [429, 433], 'children': [{'type': 'Property', 'name': 'id', 'range': [430, 432], 'children': [{'type': 'Literal', 'name': '"id"', 'range': [430, 430], 'children': []}, {'type': 'Identifier', 'name': 'user_id', 'range': [432, 432], 'children': []}]}]}]}, {'type': 'Property', 'name': 'data', 'range': [435, 449], 'children': [{'type': 'ObjectExpression', 'name': '', 'range': [437, 449], 'children': [{'type': 'Property', 'name': 'metadata', 'range': [438, 448], 'children': [{'type': 'Literal', 'name': '"metadata"', 'range': [438, 438], 'children': []}, {'type': 'CallExpression', 'name': 'Json', 'range': [440, 448], 'children': [{'type': 'Identifier', 'name': 'Json', 'range': [440, 440], 'children': []}, {'type': 'MemberExpression', 'name': 'metadata.model_dump', 'range': [442, 445], 'children': [{'type': 'Identifier', 'name': 'metadata', 'range': [442, 442], 'children': []}, {'type': 'Identifier', 'name': 'model_dump', 'range': [444, 444], 'children': []}]}]}]}]}]}]}]}]}]}]}
2025-01-08 10:29:44,208 - INFO - Completed main AST analysis flow
2025-01-08 10:29:44,209 - INFO - Successfully processed chunk
2025-01-08 10:29:44,250 - INFO - Step 5 result: {'type': 'Program', 'name': 'get_user_by_id', 'range': [224, 269], 'children': [{'type': 'FunctionDecl', 'name': 'get_user_by_id', 'range': [224, 269], 'children': [{'type': 'AsyncKeyword', 'name': 'async', 'range': [224, 224], 'children': []}, {'type': 'DefKeyword', 'name': 'def', 'range': [225, 225], 'children': []}, {'type': 'Identifier', 'name': 'get_user_by_id', 'range': [226, 226], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [227, 231], 'children': [{'type': 'Parameter', 'name': 'user_id', 'range': [228, 228], 'children': []}, {'type': 'TypeAnnotation', 'name': 'str', 'range': [230, 230], 'children': []}]}, {'type': 'ReturnTypeAnnotation', 'name': 'Optional[User]', 'range': [232, 237], 'children': [{'type': 'OptionalKeyword', 'name': 'Optional', 'range': [234, 234], 'children': []}, {'type': 'Identifier', 'name': 'User', 'range': [236, 236], 'children': []}]}, {'type': 'BlockStatement', 'name': 'body', 'range': [239, 269], 'children': [{'type': 'VariableDeclaration', 'name': 'user', 'range': [240, 256], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [241, 241], 'children': []}, {'type': 'AwaitExpression', 'name': 'await', 'range': [242, 242], 'children': []}, {'type': 'CallExpression', 'name': 'prisma.user.find_unique', 'range': [243, 247], 'children': [{'type': 'MemberExpression', 'name': 'prisma.user.find_unique', 'range': [243, 247], 'children': [{'type': 'Identifier', 'name': 'prisma', 'range': [243, 243], 'children': []}, {'type': 'Identifier', 'name': 'user', 'range': [245, 245], 'children': []}, {'type': 'Identifier', 'name': 'find_unique', 'range': [247, 247], 'children': []}]}]}, {'type': 'ArgumentList', 'name': 'arguments', 'range': [248, 256], 'children': [{'type': 'ObjectExpression', 'name': 'where', 'range': [249, 255], 'children': [{'type': 'Property', 'name': 'id', 'range': [252, 252], 'children': []}, {'type': 'Identifier', 'name': 'user_id', 'range': [254, 254], 'children': []}]}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [258, 268], 'children': [{'type': 'IfStatement', 'name': 'if', 'range': [265, 268], 'children': [{'type': 'Condition', 'name': 'user', 'range': [266, 266], 'children': []}, {'type': 'BlockStatement', 'name': 'Consequent', 'range': [259, 264], 'children': [{'type': 'CallExpression', 'name': 'User.model_validate', 'range': [259, 261], 'children': [{'type': 'MemberExpression', 'name': 'User.model_validate', 'range': [259, 261], 'children': [{'type': 'Identifier', 'name': 'User', 'range': [259, 259], 'children': []}, {'type': 'Identifier', 'name': 'model_validate', 'range': [261, 261], 'children': []}]}]}, {'type': 'ArgumentList', 'name': 'arguments', 'range': [262, 264], 'children': [{'type': 'Identifier', 'name': 'user', 'range': [263, 263], 'children': []}]}]}, {'type': 'BlockStatement', 'name': 'Alternate', 'range': [268, 268], 'children': [{'type': 'Identifier', 'name': 'None', 'range': [268, 268], 'children': []}]}]}]}]}]}]}
2025-01-08 10:29:44,251 - INFO - Completed main AST analysis flow
2025-01-08 10:29:44,252 - INFO - Successfully processed chunk
2025-01-08 10:30:08,971 - INFO - Step 3 result: {'type': 'Program', 'name': 'get_or_create_user', 'range': [80, 223], 'children': [{'type': 'FunctionDeclaration', 'name': 'get_or_create_user', 'range': [80, 223], 'children': [{'type': 'FunctionSignature', 'name': 'get_or_create_user', 'range': [80, 91], 'children': [{'type': 'Keyword', 'name': 'async', 'range': [80, 85], 'children': []}, {'type': 'Keyword', 'name': 'def', 'range': [81, 84], 'children': []}, {'type': 'Identifier', 'name': 'get_or_create_user', 'range': [82, 100], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [83, 87], 'children': [{'type': 'Parameter', 'name': 'user_data', 'range': [84, 86], 'children': [{'type': 'TypeAnnotation', 'name': 'dict', 'range': [86, 90], 'children': []}]}]}, {'type': 'ReturnType', 'name': 'User', 'range': [88, 91], 'children': []}]}, {'type': 'FunctionBody', 'name': 'body', 'range': [92, 223], 'children': [{'type': 'VariableDeclaration', 'name': 'user_id', 'range': [93, 101], 'children': [{'type': 'Assignment', 'name': '=', 'range': [94, 95], 'children': [{'type': 'MemberExpression', 'name': 'user_data.get', 'range': [95, 100], 'children': [{'type': 'Identifier', 'name': 'user_data', 'range': [95, 103], 'children': []}, {'type': 'PropertyAccess', 'name': '.', 'range': [96, 97], 'children': []}, {'type': 'Identifier', 'name': 'get', 'range': [97, 100], 'children': []}]}, {'type': 'StringLiteral', 'name': '"sub"', 'range': [99, 103], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if', 'range': [102, 118], 'children': [{'type': 'Condition', 'name': 'not user_id', 'range': [103, 105], 'children': [{'type': 'UnaryExpression', 'name': 'not', 'range': [103, 106], 'children': [{'type': 'Identifier', 'name': 'user_id', 'range': [104, 108], 'children': []}]}]}, {'type': 'Block', 'name': 'block', 'range': [106, 118], 'children': [{'type': 'RaiseStatement', 'name': 'raise', 'range': [107, 118], 'children': [{'type': 'Identifier', 'name': 'HTTPException', 'range': [108, 121], 'children': []}, {'type': 'ArgumentList', 'name': 'arguments', 'range': [109, 117], 'children': [{'type': 'KeywordArgument', 'name': 'status_code', 'range': [110, 112], 'children': [{'type': 'NumericLiteral', 'name': '401', 'range': [111, 114], 'children': []}]}, {'type': 'KeywordArgument', 'name': 'detail', 'range': [114, 116], 'children': [{'type': 'StringLiteral', 'name': '"User ID not found in token"', 'range': [115, 117], 'children': []}]}]}]}]}]}, {'type': 'VariableDeclaration', 'name': 'user_email', 'range': [120, 128], 'children': [{'type': 'Assignment', 'name': '=', 'range': [121, 122], 'children': [{'type': 'MemberExpression', 'name': 'user_data.get', 'range': [122, 127], 'children': [{'type': 'Identifier', 'name': 'user_data', 'range': [122, 130], 'children': []}, {'type': 'PropertyAccess', 'name': '.', 'range': [123, 124], 'children': []}, {'type': 'Identifier', 'name': 'get', 'range': [124, 127], 'children': []}]}, {'type': 'StringLiteral', 'name': '"email"', 'range': [126, 130], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if', 'range': [129, 145], 'children': [{'type': 'Condition', 'name': 'not user_email', 'range': [130, 132], 'children': [{'type': 'UnaryExpression', 'name': 'not', 'range': [130, 133], 'children': [{'type': 'Identifier', 'name': 'user_email', 'range': [131, 135], 'children': []}]}]}, {'type': 'Block', 'name': 'block', 'range': [132, 145], 'children': [{'type': 'RaiseStatement', 'name': 'raise', 'range': [134, 145], 'children': [{'type': 'Identifier', 'name': 'HTTPException', 'range': [135, 148], 'children': []}, {'type': 'ArgumentList', 'name': 'arguments', 'range': [136, 144], 'children': [{'type': 'KeywordArgument', 'name': 'status_code', 'range': [137, 139], 'children': [{'type': 'NumericLiteral', 'name': '401', 'range': [138, 141], 'children': []}]}, {'type': 'KeywordArgument', 'name': 'detail', 'range': [141, 143], 'children': [{'type': 'StringLiteral', 'name': '"Email not found in token"', 'range': [142, 144], 'children': []}]}]}]}]}]}, {'type': 'VariableDeclaration', 'name': 'user', 'range': [147, 164], 'children': [{'type': 'Assignment', 'name': '=', 'range': [148, 149], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [149, 154], 'children': [{'type': 'MemberExpression', 'name': 'prisma.user.find_unique', 'range': [150, 163], 'children': [{'type': 'Identifier', 'name': 'prisma', 'range': [150, 156], 'children': []}, {'type': 'PropertyAccess', 'name': '.', 'range': [151, 152], 'children': []}, {'type': 'Identifier', 'name': 'user', 'range': [152, 156], 'children': []}, {'type': 'PropertyAccess', 'name': '.', 'range': [153, 154], 'children': []}, {'type': 'Identifier', 'name': 'find_unique', 'range': [154, 165], 'children': []}]}, {'type': 'ArgumentList', 'name': 'arguments', 'range': [155, 163], 'children': [{'type': 'KeywordArgument', 'name': 'where', 'range': [156, 158], 'children': [{'type': 'ObjectLiteral', 'name': 'object', 'range': [158, 162], 'children': [{'type': 'Property', 'name': 'id', 'range': [159, 161], 'children': [{'type': 'Identifier', 'name': 'user_id', 'range': [161, 167], 'children': []}]}]}]}]}]}]}]}, {'type': 'IfStatement', 'name': 'if', 'range': [165, 215], 'children': [{'type': 'Condition', 'name': 'not user', 'range': [166, 168], 'children': [{'type': 'UnaryExpression', 'name': 'not', 'range': [166, 169], 'children': [{'type': 'Identifier', 'name': 'user', 'range': [167, 171], 'children': []}]}]}, {'type': 'Block', 'name': 'block', 'range': [168, 215], 'children': [{'type': 'VariableDeclaration', 'name': 'user', 'range': [170, 215], 'children': [{'type': 'Assignment', 'name': '=', 'range': [171, 172], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [172, 177], 'children': [{'type': 'MemberExpression', 'name': 'prisma.user.create', 'range': [173, 214], 'children': [{'type': 'Identifier', 'name': 'prisma', 'range': [173, 179], 'children': []}, {'type': 'PropertyAccess', 'name': '.', 'range': [174, 175], 'children': []}, {'type': 'Identifier', 'name': 'user', 'range': [175, 179], 'children': []}, {'type': 'PropertyAccess', 'name': '.', 'range': [176, 177], 'children': []}, {'type': 'Identifier', 'name': 'create', 'range': [177, 183], 'children': []}]}, {'type': 'ArgumentList', 'name': 'arguments', 'range': [178, 214], 'children': [{'type': 'KeywordArgument', 'name': 'data', 'range': [180, 182], 'children': [{'type': 'ObjectLiteral', 'name': 'object', 'range': [182, 212], 'children': [{'type': 'Property', 'name': 'id', 'range': [184, 186], 'children': [{'type': 'Identifier', 'name': 'user_id', 'range': [186, 192], 'children': []}]}, {'type': 'Property', 'name': 'email', 'range': [189, 191], 'children': [{'type': 'Identifier', 'name': 'user_email', 'range': [191, 201], 'children': []}]}, {'type': 'Property', 'name': 'name', 'range': [194, 210], 'children': [{'type': 'MemberExpression', 'name': 'user_data.get', 'range': [196, 209], 'children': [{'type': 'Identifier', 'name': 'user_data', 'range': [196, 204], 'children': []}, {'type': 'PropertyAccess', 'name': '.', 'range': [197, 198], 'children': []}, {'type': 'Identifier', 'name': 'get', 'range': [198, 201], 'children': []}]}, {'type': 'ArgumentList', 'name': 'arguments', 'range': [199, 209], 'children': [{'type': 'StringLiteral', 'name': '"user_metadata"', 'range': [200, 214], 'children': []}, {'type': 'ObjectLiteral', 'name': 'object', 'range': [202, 204], 'children': []}]}, {'type': 'PropertyAccess', 'name': '.', 'range': [205, 206], 'children': []}, {'type': 'Identifier', 'name': 'get', 'range': [206, 209], 'children': []}, {'type': 'ArgumentList', 'name': 'arguments', 'range': [207, 209], 'children': [{'type': 'StringLiteral', 'name': '"name"', 'range': [208, 210], 'children': []}]}]}]}]}]}]}]}]}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [216, 223], 'children': [{'type': 'MemberExpression', 'name': 'User.model_validate', 'range': [217, 222], 'children': [{'type': 'Identifier', 'name': 'User', 'range': [217, 221], 'children': []}, {'type': 'PropertyAccess', 'name': '.', 'range': [218, 219], 'children': []}, {'type': 'Identifier', 'name': 'model_validate', 'range': [219, 233], 'children': []}]}, {'type': 'ArgumentList', 'name': 'arguments', 'range': [220, 222], 'children': [{'type': 'Identifier', 'name': 'user', 'range': [221, 225], 'children': []}]}]}]}]}]}
2025-01-08 10:30:08,971 - INFO - Starting Step 4: AST normalization
2025-01-08 10:30:13,285 - INFO - Step 4 result: {'type': 'Program', 'name': 'create_default_user', 'range': [270, 346], 'children': [{'type': 'FunctionDecl', 'name': 'create_default_user', 'range': [270, 346], 'children': [{'type': 'AsyncKeyword', 'name': 'async', 'range': [270, 270], 'children': []}, {'type': 'DefKeyword', 'name': 'def', 'range': [271, 271], 'children': []}, {'type': 'Identifier', 'name': 'create_default_user', 'range': [272, 272], 'children': []}, {'type': 'ParameterList', 'name': '()', 'range': [273, 274], 'children': []}, {'type': 'ReturnType', 'name': '-> Optional[User]', 'range': [275, 280], 'children': [{'type': 'OptionalKeyword', 'name': 'Optional', 'range': [277, 277], 'children': []}, {'type': 'Identifier', 'name': 'User', 'range': [279, 279], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [282, 346], 'children': [{'type': 'VariableDecl', 'name': 'user = await prisma.user.find_unique(where={"id": DEFAULT_USER_ID})', 'range': [283, 299], 'children': [{'type': 'Identifier', 'name': 'user', 'range': [283, 283], 'children': []}, {'type': 'AssignmentOperator', 'name': '=', 'range': [284, 284], 'children': []}, {'type': 'AwaitExpression', 'name': 'await prisma.user.find_unique(where={"id": DEFAULT_USER_ID})', 'range': [285, 299], 'children': [{'type': 'AwaitKeyword', 'name': 'await', 'range': [285, 285], 'children': []}, {'type': 'CallExpression', 'name': 'prisma.user.find_unique(where={"id": DEFAULT_USER_ID})', 'range': [286, 299], 'children': [{'type': 'Identifier', 'name': 'prisma', 'range': [286, 286], 'children': []}, {'type': 'MemberExpression', 'name': 'user', 'range': [288, 288], 'children': []}, {'type': 'MemberExpression', 'name': 'find_unique', 'range': [290, 290], 'children': []}, {'type': 'ArgumentList', 'name': '(where={"id": DEFAULT_USER_ID})', 'range': [291, 299], 'children': [{'type': 'NamedArgument', 'name': 'where={"id": DEFAULT_USER_ID}', 'range': [292, 298], 'children': [{'type': 'Identifier', 'name': 'where', 'range': [292, 292], 'children': []}, {'type': 'AssignmentOperator', 'name': '=', 'range': [293, 293], 'children': []}, {'type': 'ObjectExpression', 'name': '{"id": DEFAULT_USER_ID}', 'range': [294, 298], 'children': [{'type': 'Property', 'name': '"id": DEFAULT_USER_ID', 'range': [295, 297], 'children': [{'type': 'Literal', 'name': '"id"', 'range': [295, 295], 'children': []}, {'type': 'Identifier', 'name': 'DEFAULT_USER_ID', 'range': [297, 297], 'children': []}]}]}]}]}]}]}]}, {'type': 'IfStatement', 'name': 'if not user:', 'range': [301, 305], 'children': [{'type': 'IfKeyword', 'name': 'if', 'range': [301, 301], 'children': []}, {'type': 'NotKeyword', 'name': 'not', 'range': [302, 302], 'children': []}, {'type': 'Identifier', 'name': 'user', 'range': [303, 303], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [306, 338], 'children': [{'type': 'VariableDecl', 'name': 'user = await prisma.user.create(data={"id": DEFAULT_USER_ID, "email": "default@example.com", "name": "Default User"})', 'range': [306, 337], 'children': [{'type': 'Identifier', 'name': 'user', 'range': [306, 306], 'children': []}, {'type': 'AssignmentOperator', 'name': '=', 'range': [307, 307], 'children': []}, {'type': 'AwaitExpression', 'name': 'await prisma.user.create(data={"id": DEFAULT_USER_ID, "email": "default@example.com", "name": "Default User"})', 'range': [308, 337], 'children': [{'type': 'AwaitKeyword', 'name': 'await', 'range': [308, 308], 'children': []}, {'type': 'CallExpression', 'name': 'prisma.user.create(data={"id": DEFAULT_USER_ID, "email": "default@example.com", "name": "Default User"})', 'range': [309, 337], 'children': [{'type': 'Identifier', 'name': 'prisma', 'range': [309, 309], 'children': []}, {'type': 'MemberExpression', 'name': 'user', 'range': [311, 311], 'children': []}, {'type': 'MemberExpression', 'name': 'create', 'range': [313, 313], 'children': []}, {'type': 'ArgumentList', 'name': '(data={"id": DEFAULT_USER_ID, "email": "default@example.com", "name": "Default User"})', 'range': [314, 337], 'children': [{'type': 'NamedArgument', 'name': 'data={"id": DEFAULT_USER_ID, "email": "default@example.com", "name": "Default User"}', 'range': [316, 335], 'children': [{'type': 'Identifier', 'name': 'data', 'range': [316, 316], 'children': []}, {'type': 'AssignmentOperator', 'name': '=', 'range': [317, 317], 'children': []}, {'type': 'ObjectExpression', 'name': '{"id": DEFAULT_USER_ID, "email": "default@example.com", "name": "Default User"}', 'range': [318, 335], 'children': [{'type': 'Property', 'name': '"id": DEFAULT_USER_ID', 'range': [320, 322], 'children': [{'type': 'Literal', 'name': '"id"', 'range': [320, 320], 'children': []}, {'type': 'Identifier', 'name': 'DEFAULT_USER_ID', 'range': [322, 322], 'children': []}]}, {'type': 'Property', 'name': '"email": "default@example.com"', 'range': [325, 327], 'children': [{'type': 'Literal', 'name': '"email"', 'range': [325, 325], 'children': []}, {'type': 'Literal', 'name': '"default@example.com"', 'range': [327, 327], 'children': []}]}, {'type': 'Property', 'name': '"name": "Default User"', 'range': [330, 332], 'children': [{'type': 'Literal', 'name': '"name"', 'range': [330, 330], 'children': []}, {'type': 'Literal', 'name': '"Default User"', 'range': [332, 332], 'children': []}]}]}]}]}]}]}]}]}, {'type': 'ReturnStatement', 'name': 'return User.model_validate(user)', 'range': [339, 345], 'children': [{'type': 'ReturnKeyword', 'name': 'return', 'range': [339, 339], 'children': []}, {'type': 'CallExpression', 'name': 'User.model_validate(user)', 'range': [340, 345], 'children': [{'type': 'Identifier', 'name': 'User', 'range': [340, 340], 'children': []}, {'type': 'MemberExpression', 'name': 'model_validate', 'range': [342, 342], 'children': []}, {'type': 'ArgumentList', 'name': '(user)', 'range': [343, 345], 'children': [{'type': 'Identifier', 'name': 'user', 'range': [344, 344], 'children': []}]}]}]}]}]}]}
2025-01-08 10:30:13,286 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:30:14,164 - ERROR - Failed to parse Step 2 result
2025-01-08 10:30:14,164 - INFO - Starting Step 3: AST simplification
2025-01-08 10:30:58,561 - INFO - Step 5 result: {'type': 'Program', 'name': 'create_default_user', 'range': [270, 346], 'children': [{'type': 'FunctionDecl', 'name': 'create_default_user', 'range': [270, 346], 'children': [{'type': 'AsyncKeyword', 'name': 'async', 'range': [270, 270], 'children': []}, {'type': 'DefKeyword', 'name': 'def', 'range': [271, 271], 'children': []}, {'type': 'Identifier', 'name': 'create_default_user', 'range': [272, 272], 'children': []}, {'type': 'ParameterList', 'name': '()', 'range': [273, 274], 'children': []}, {'type': 'ReturnType', 'name': '-> Optional[User]', 'range': [275, 280], 'children': [{'type': 'OptionalKeyword', 'name': 'Optional', 'range': [277, 277], 'children': []}, {'type': 'Identifier', 'name': 'User', 'range': [279, 279], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [282, 346], 'children': [{'type': 'VariableDecl', 'name': 'user = await prisma.user.find_unique(where={"id": DEFAULT_USER_ID})', 'range': [283, 299], 'children': [{'type': 'Identifier', 'name': 'user', 'range': [283, 283], 'children': []}, {'type': 'AssignmentOperator', 'name': '=', 'range': [284, 284], 'children': []}, {'type': 'AwaitExpression', 'name': 'await prisma.user.find_unique(where={"id": DEFAULT_USER_ID})', 'range': [285, 299], 'children': [{'type': 'AwaitKeyword', 'name': 'await', 'range': [285, 285], 'children': []}, {'type': 'CallExpression', 'name': 'prisma.user.find_unique(where={"id": DEFAULT_USER_ID})', 'range': [286, 299], 'children': [{'type': 'Identifier', 'name': 'prisma', 'range': [286, 286], 'children': []}, {'type': 'MemberExpression', 'name': 'user', 'range': [288, 288], 'children': []}, {'type': 'MemberExpression', 'name': 'find_unique', 'range': [290, 290], 'children': []}, {'type': 'ArgumentList', 'name': '(where={"id": DEFAULT_USER_ID})', 'range': [291, 299], 'children': [{'type': 'NamedArgument', 'name': 'where={"id": DEFAULT_USER_ID}', 'range': [292, 298], 'children': [{'type': 'Identifier', 'name': 'where', 'range': [292, 292], 'children': []}, {'type': 'AssignmentOperator', 'name': '=', 'range': [293, 293], 'children': []}, {'type': 'ObjectExpression', 'name': '{"id": DEFAULT_USER_ID}', 'range': [294, 298], 'children': [{'type': 'Property', 'name': '"id": DEFAULT_USER_ID', 'range': [295, 297], 'children': [{'type': 'Literal', 'name': '"id"', 'range': [295, 295], 'children': []}, {'type': 'Identifier', 'name': 'DEFAULT_USER_ID', 'range': [297, 297], 'children': []}]}]}]}]}]}]}]}, {'type': 'IfStatement', 'name': 'if not user:', 'range': [301, 305], 'children': [{'type': 'IfKeyword', 'name': 'if', 'range': [301, 301], 'children': []}, {'type': 'NotKeyword', 'name': 'not', 'range': [302, 302], 'children': []}, {'type': 'Identifier', 'name': 'user', 'range': [303, 303], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [306, 338], 'children': [{'type': 'VariableDecl', 'name': 'user = await prisma.user.create(data={"id": DEFAULT_USER_ID, "email": "default@example.com", "name": "Default User"})', 'range': [306, 337], 'children': [{'type': 'Identifier', 'name': 'user', 'range': [306, 306], 'children': []}, {'type': 'AssignmentOperator', 'name': '=', 'range': [307, 307], 'children': []}, {'type': 'AwaitExpression', 'name': 'await prisma.user.create(data={"id": DEFAULT_USER_ID, "email": "default@example.com", "name": "Default User"})', 'range': [308, 337], 'children': [{'type': 'AwaitKeyword', 'name': 'await', 'range': [308, 308], 'children': []}, {'type': 'CallExpression', 'name': 'prisma.user.create(data={"id": DEFAULT_USER_ID, "email": "default@example.com", "name": "Default User"})', 'range': [309, 337], 'children': [{'type': 'Identifier', 'name': 'prisma', 'range': [309, 309], 'children': []}, {'type': 'MemberExpression', 'name': 'user', 'range': [311, 311], 'children': []}, {'type': 'MemberExpression', 'name': 'create', 'range': [313, 313], 'children': []}, {'type': 'ArgumentList', 'name': '(data={"id": DEFAULT_USER_ID, "email": "default@example.com", "name": "Default User"})', 'range': [314, 337], 'children': [{'type': 'NamedArgument', 'name': 'data={"id": DEFAULT_USER_ID, "email": "default@example.com", "name": "Default User"}', 'range': [316, 335], 'children': [{'type': 'Identifier', 'name': 'data', 'range': [316, 316], 'children': []}, {'type': 'AssignmentOperator', 'name': '=', 'range': [317, 317], 'children': []}, {'type': 'ObjectExpression', 'name': '{"id": DEFAULT_USER_ID, "email": "default@example.com", "name": "Default User"}', 'range': [318, 335], 'children': [{'type': 'Property', 'name': '"id": DEFAULT_USER_ID', 'range': [320, 322], 'children': [{'type': 'Literal', 'name': '"id"', 'range': [320, 320], 'children': []}, {'type': 'Identifier', 'name': 'DEFAULT_USER_ID', 'range': [322, 322], 'children': []}]}, {'type': 'Property', 'name': '"email": "default@example.com"', 'range': [325, 327], 'children': [{'type': 'Literal', 'name': '"email"', 'range': [325, 325], 'children': []}, {'type': 'Literal', 'name': '"default@example.com"', 'range': [327, 327], 'children': []}]}, {'type': 'Property', 'name': '"name": "Default User"', 'range': [330, 332], 'children': [{'type': 'Literal', 'name': '"name"', 'range': [330, 330], 'children': []}, {'type': 'Literal', 'name': '"Default User"', 'range': [332, 332], 'children': []}]}]}]}]}]}]}]}]}, {'type': 'ReturnStatement', 'name': 'return User.model_validate(user)', 'range': [339, 345], 'children': [{'type': 'ReturnKeyword', 'name': 'return', 'range': [339, 339], 'children': []}, {'type': 'CallExpression', 'name': 'User.model_validate(user)', 'range': [340, 345], 'children': [{'type': 'Identifier', 'name': 'User', 'range': [340, 340], 'children': []}, {'type': 'MemberExpression', 'name': 'model_validate', 'range': [342, 342], 'children': []}, {'type': 'ArgumentList', 'name': '(user)', 'range': [343, 345], 'children': [{'type': 'Identifier', 'name': 'user', 'range': [344, 344], 'children': []}]}]}]}]}]}]}
2025-01-08 10:30:58,562 - INFO - Completed main AST analysis flow
2025-01-08 10:30:58,567 - INFO - Successfully processed chunk
2025-01-08 10:31:16,032 - INFO - Step 4 result: {'type': 'Program', 'name': 'get_or_create_user', 'range': [80, 223], 'children': [{'type': 'FunctionDecl', 'name': 'get_or_create_user', 'range': [80, 223], 'children': [{'type': 'FunctionSignature', 'name': 'get_or_create_user', 'range': [80, 91], 'children': [{'type': 'Keyword', 'name': 'async', 'range': [80, 85], 'children': []}, {'type': 'Keyword', 'name': 'def', 'range': [81, 84], 'children': []}, {'type': 'Identifier', 'name': 'get_or_create_user', 'range': [82, 100], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [83, 87], 'children': [{'type': 'Parameter', 'name': 'user_data', 'range': [84, 86], 'children': [{'type': 'TypeAnnotation', 'name': 'dict', 'range': [86, 90], 'children': []}]}]}, {'type': 'ReturnType', 'name': 'User', 'range': [88, 91], 'children': []}]}, {'type': 'FunctionBody', 'name': 'body', 'range': [92, 223], 'children': [{'type': 'VariableDecl', 'name': 'user_id', 'range': [93, 101], 'children': [{'type': 'Assignment', 'name': '=', 'range': [94, 95], 'children': [{'type': 'CallExpression', 'name': 'user_data.get', 'range': [95, 100], 'children': [{'type': 'Identifier', 'name': 'user_data', 'range': [95, 103], 'children': []}, {'type': 'PropertyAccess', 'name': '.', 'range': [96, 97], 'children': []}, {'type': 'Identifier', 'name': 'get', 'range': [97, 100], 'children': []}]}, {'type': 'Literal', 'name': '"sub"', 'range': [99, 103], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if', 'range': [102, 118], 'children': [{'type': 'Condition', 'name': 'not user_id', 'range': [103, 105], 'children': [{'type': 'UnaryExpression', 'name': 'not', 'range': [103, 106], 'children': [{'type': 'Identifier', 'name': 'user_id', 'range': [104, 108], 'children': []}]}]}, {'type': 'Block', 'name': 'block', 'range': [106, 118], 'children': [{'type': 'RaiseStatement', 'name': 'raise', 'range': [107, 118], 'children': [{'type': 'Identifier', 'name': 'HTTPException', 'range': [108, 121], 'children': []}, {'type': 'ArgumentList', 'name': 'arguments', 'range': [109, 117], 'children': [{'type': 'KeywordArgument', 'name': 'status_code', 'range': [110, 112], 'children': [{'type': 'Literal', 'name': '401', 'range': [111, 114], 'children': []}]}, {'type': 'KeywordArgument', 'name': 'detail', 'range': [114, 116], 'children': [{'type': 'Literal', 'name': '"User ID not found in token"', 'range': [115, 117], 'children': []}]}]}]}]}]}, {'type': 'VariableDecl', 'name': 'user_email', 'range': [120, 128], 'children': [{'type': 'Assignment', 'name': '=', 'range': [121, 122], 'children': [{'type': 'CallExpression', 'name': 'user_data.get', 'range': [122, 127], 'children': [{'type': 'Identifier', 'name': 'user_data', 'range': [122, 130], 'children': []}, {'type': 'PropertyAccess', 'name': '.', 'range': [123, 124], 'children': []}, {'type': 'Identifier', 'name': 'get', 'range': [124, 127], 'children': []}]}, {'type': 'Literal', 'name': '"email"', 'range': [126, 130], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if', 'range': [129, 145], 'children': [{'type': 'Condition', 'name': 'not user_email', 'range': [130, 132], 'children': [{'type': 'UnaryExpression', 'name': 'not', 'range': [130, 133], 'children': [{'type': 'Identifier', 'name': 'user_email', 'range': [131, 135], 'children': []}]}]}, {'type': 'Block', 'name': 'block', 'range': [132, 145], 'children': [{'type': 'RaiseStatement', 'name': 'raise', 'range': [134, 145], 'children': [{'type': 'Identifier', 'name': 'HTTPException', 'range': [135, 148], 'children': []}, {'type': 'ArgumentList', 'name': 'arguments', 'range': [136, 144], 'children': [{'type': 'KeywordArgument', 'name': 'status_code', 'range': [137, 139], 'children': [{'type': 'Literal', 'name': '401', 'range': [138, 141], 'children': []}]}, {'type': 'KeywordArgument', 'name': 'detail', 'range': [141, 143], 'children': [{'type': 'Literal', 'name': '"Email not found in token"', 'range': [142, 144], 'children': []}]}]}]}]}]}, {'type': 'VariableDecl', 'name': 'user', 'range': [147, 164], 'children': [{'type': 'Assignment', 'name': '=', 'range': [148, 149], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [149, 154], 'children': [{'type': 'CallExpression', 'name': 'prisma.user.find_unique', 'range': [150, 163], 'children': [{'type': 'Identifier', 'name': 'prisma', 'range': [150, 156], 'children': []}, {'type': 'PropertyAccess', 'name': '.', 'range': [151, 152], 'children': []}, {'type': 'Identifier', 'name': 'user', 'range': [152, 156], 'children': []}, {'type': 'PropertyAccess', 'name': '.', 'range': [153, 154], 'children': []}, {'type': 'Identifier', 'name': 'find_unique', 'range': [154, 165], 'children': []}]}, {'type': 'ArgumentList', 'name': 'arguments', 'range': [155, 163], 'children': [{'type': 'KeywordArgument', 'name': 'where', 'range': [156, 158], 'children': [{'type': 'ObjectLiteral', 'name': 'object', 'range': [158, 162], 'children': [{'type': 'Property', 'name': 'id', 'range': [159, 161], 'children': [{'type': 'Identifier', 'name': 'user_id', 'range': [161, 167], 'children': []}]}]}]}]}]}]}]}, {'type': 'IfStatement', 'name': 'if', 'range': [165, 215], 'children': [{'type': 'Condition', 'name': 'not user', 'range': [166, 168], 'children': [{'type': 'UnaryExpression', 'name': 'not', 'range': [166, 169], 'children': [{'type': 'Identifier', 'name': 'user', 'range': [167, 171], 'children': []}]}]}, {'type': 'Block', 'name': 'block', 'range': [168, 215], 'children': [{'type': 'VariableDecl', 'name': 'user', 'range': [170, 215], 'children': [{'type': 'Assignment', 'name': '=', 'range': [171, 172], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [172, 177], 'children': [{'type': 'CallExpression', 'name': 'prisma.user.create', 'range': [173, 214], 'children': [{'type': 'Identifier', 'name': 'prisma', 'range': [173, 179], 'children': []}, {'type': 'PropertyAccess', 'name': '.', 'range': [174, 175], 'children': []}, {'type': 'Identifier', 'name': 'user', 'range': [175, 179], 'children': []}, {'type': 'PropertyAccess', 'name': '.', 'range': [176, 177], 'children': []}, {'type': 'Identifier', 'name': 'create', 'range': [177, 183], 'children': []}]}, {'type': 'ArgumentList', 'name': 'arguments', 'range': [178, 214], 'children': [{'type': 'KeywordArgument', 'name': 'data', 'range': [180, 182], 'children': [{'type': 'ObjectLiteral', 'name': 'object', 'range': [182, 212], 'children': [{'type': 'Property', 'name': 'id', 'range': [184, 186], 'children': [{'type': 'Identifier', 'name': 'user_id', 'range': [186, 192], 'children': []}]}, {'type': 'Property', 'name': 'email', 'range': [189, 191], 'children': [{'type': 'Identifier', 'name': 'user_email', 'range': [191, 201], 'children': []}]}, {'type': 'Property', 'name': 'name', 'range': [194, 210], 'children': [{'type': 'CallExpression', 'name': 'user_data.get', 'range': [196, 209], 'children': [{'type': 'Identifier', 'name': 'user_data', 'range': [196, 204], 'children': []}, {'type': 'PropertyAccess', 'name': '.', 'range': [197, 198], 'children': []}, {'type': 'Identifier', 'name': 'get', 'range': [198, 201], 'children': []}]}, {'type': 'ArgumentList', 'name': 'arguments', 'range': [199, 209], 'children': [{'type': 'Literal', 'name': '"user_metadata"', 'range': [200, 214], 'children': []}, {'type': 'ObjectLiteral', 'name': 'object', 'range': [202, 204], 'children': []}]}, {'type': 'PropertyAccess', 'name': '.', 'range': [205, 206], 'children': []}, {'type': 'Identifier', 'name': 'get', 'range': [206, 209], 'children': []}, {'type': 'ArgumentList', 'name': 'arguments', 'range': [207, 209], 'children': [{'type': 'Literal', 'name': '"name"', 'range': [208, 210], 'children': []}]}]}]}]}]}]}]}]}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [216, 223], 'children': [{'type': 'CallExpression', 'name': 'User.model_validate', 'range': [217, 222], 'children': [{'type': 'Identifier', 'name': 'User', 'range': [217, 221], 'children': []}, {'type': 'PropertyAccess', 'name': '.', 'range': [218, 219], 'children': []}, {'type': 'Identifier', 'name': 'model_validate', 'range': [219, 233], 'children': []}]}, {'type': 'ArgumentList', 'name': 'arguments', 'range': [220, 222], 'children': [{'type': 'Identifier', 'name': 'user', 'range': [221, 225], 'children': []}]}]}]}]}]}
2025-01-08 10:31:16,033 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:31:43,350 - INFO - Step 3 result: {'type': 'FunctionDef', 'name': 'migrate_and_encrypt_user_integrations', 'range': [586, 850], 'children': [{'type': 'AsyncKeyword', 'name': 'async', 'range': [586, 586]}, {'type': 'DefKeyword', 'name': 'def', 'range': [587, 587]}, {'type': 'FunctionName', 'name': 'migrate_and_encrypt_user_integrations', 'range': [588, 588]}, {'type': 'Parameters', 'name': 'parameters', 'range': [589, 590], 'children': []}, {'type': 'Colon', 'name': ':', 'range': [591, 591]}, {'type': 'Docstring', 'name': 'docstring', 'range': [593, 595], 'children': [{'type': 'StringLiteral', 'name': '"Migrate integration credentials and OAuth states from metadata to integrations column."', 'range': [594, 594]}]}, {'type': 'Statement', 'name': 'assignment', 'range': [597, 653], 'children': [{'type': 'Identifier', 'name': 'users', 'range': [597, 597]}, {'type': 'AssignmentOperator', 'name': '=', 'range': [598, 598]}, {'type': 'AwaitKeyword', 'name': 'await', 'range': [599, 599]}, {'type': 'Identifier', 'name': 'User', 'range': [600, 600]}, {'type': 'Dot', 'name': '.', 'range': [601, 601]}, {'type': 'Identifier', 'name': 'prisma', 'range': [602, 602]}, {'type': 'Call', 'name': 'call', 'range': [603, 604], 'children': []}, {'type': 'Dot', 'name': '.', 'range': [605, 605]}, {'type': 'Identifier', 'name': 'find_many', 'range': [606, 606]}, {'type': 'Call', 'name': 'call', 'range': [607, 653], 'children': [{'type': 'KeywordArgument', 'name': 'where', 'range': [609, 651], 'children': [{'type': 'Dictionary', 'name': 'dictionary', 'range': [611, 651], 'children': [{'type': 'KeyValuePair', 'name': 'key_value_pair', 'range': [613, 645], 'children': [{'type': 'StringLiteral', 'name': '"metadata"', 'range': [613, 613]}, {'type': 'Colon', 'name': ':', 'range': [614, 614]}, {'type': 'Dictionary', 'name': 'dictionary', 'range': [615, 645], 'children': [{'type': 'KeyValuePair', 'name': 'key_value_pair', 'range': [617, 634], 'children': [{'type': 'StringLiteral', 'name': '"path"', 'range': [617, 617]}, {'type': 'Colon', 'name': ':', 'range': [618, 618]}, {'type': 'List', 'name': 'list', 'range': [619, 621], 'children': [{'type': 'StringLiteral', 'name': '"integration_credentials"', 'range': [620, 620]}]}]}, {'type': 'KeyValuePair', 'name': 'key_value_pair', 'range': [624, 633], 'children': [{'type': 'StringLiteral', 'name': '"not"', 'range': [624, 624]}, {'type': 'Colon', 'name': ':', 'range': [625, 625]}, {'type': 'Call', 'name': 'call', 'range': [626, 633], 'children': [{'type': 'Identifier', 'name': 'Json', 'range': [626, 626]}, {'type': 'Dictionary', 'name': 'dictionary', 'range': [628, 632], 'children': [{'type': 'KeyValuePair', 'name': 'key_value_pair', 'range': [629, 631], 'children': [{'type': 'StringLiteral', 'name': '"a"', 'range': [629, 629]}, {'type': 'Colon', 'name': ':', 'range': [630, 630]}, {'type': 'StringLiteral', 'name': '"yolo"', 'range': [631, 631]}]}]}]}]}]}]}]}]}]}]}, {'type': 'Statement', 'name': 'logging', 'range': [655, 661], 'children': [{'type': 'Identifier', 'name': 'logger', 'range': [655, 655]}, {'type': 'Dot', 'name': '.', 'range': [656, 656]}, {'type': 'Identifier', 'name': 'info', 'range': [657, 657]}, {'type': 'Call', 'name': 'call', 'range': [658, 661], 'children': [{'type': 'FormattedStringLiteral', 'name': 'f"Migrating integration credentials for {len(users)} users"', 'range': [660, 660]}]}]}, {'type': 'ForLoop', 'name': 'for_loop', 'range': [664, 850], 'children': [{'type': 'ForKeyword', 'name': 'for', 'range': [664, 664]}, {'type': 'Identifier', 'name': 'user', 'range': [665, 665]}, {'type': 'InKeyword', 'name': 'in', 'range': [666, 666]}, {'type': 'Identifier', 'name': 'users', 'range': [667, 667]}, {'type': 'Colon', 'name': ':', 'range': [668, 668]}, {'type': 'Statement', 'name': 'assignment', 'range': [670, 679], 'children': [{'type': 'Identifier', 'name': 'raw_metadata', 'range': [670, 670]}, {'type': 'AssignmentOperator', 'name': '=', 'range': [671, 671]}, {'type': 'Identifier', 'name': 'cast', 'range': [672, 672]}, {'type': 'Call', 'name': 'call', 'range': [673, 679], 'children': [{'type': 'Identifier', 'name': 'UserMetadataRaw', 'range': [674, 674]}, {'type': 'Comma', 'name': ',', 'range': [675, 675]}, {'type': 'Identifier', 'name': 'user', 'range': [676, 676]}, {'type': 'Dot', 'name': '.', 'range': [677, 677]}, {'type': 'Identifier', 'name': 'metadata', 'range': [678, 678]}]}]}, {'type': 'Statement', 'name': 'assignment', 'range': [681, 688], 'children': [{'type': 'Identifier', 'name': 'metadata', 'range': [681, 681]}, {'type': 'AssignmentOperator', 'name': '=', 'range': [682, 682]}, {'type': 'Identifier', 'name': 'UserMetadata', 'range': [683, 683]}, {'type': 'Dot', 'name': '.', 'range': [684, 684]}, {'type': 'Identifier', 'name': 'model_validate', 'range': [685, 685]}, {'type': 'Call', 'name': 'call', 'range': [686, 688], 'children': [{'type': 'Identifier', 'name': 'raw_metadata', 'range': [687, 687]}]}]}, {'type': 'Statement', 'name': 'assignment', 'range': [697, 707], 'children': [{'type': 'Identifier', 'name': 'integrations', 'range': [697, 697]}, {'type': 'AssignmentOperator', 'name': '=', 'range': [698, 698]}, {'type': 'AwaitKeyword', 'name': 'await', 'range': [699, 699]}, {'type': 'Identifier', 'name': 'get_user_integrations', 'range': [700, 700]}, {'type': 'Call', 'name': 'call', 'range': [701, 707], 'children': [{'type': 'KeywordArgument', 'name': 'user_id', 'range': [702, 706], 'children': [{'type': 'Identifier', 'name': 'user', 'range': [704, 704]}, {'type': 'Dot', 'name': '.', 'range': [705, 705]}, {'type': 'Identifier', 'name': 'id', 'range': [706, 706]}]}]}]}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [722, 740], 'children': [{'type': 'IfKeyword', 'name': 'if', 'range': [722, 722]}, {'type': 'Identifier', 'name': 'metadata', 'range': [723, 723]}, {'type': 'Dot', 'name': '.', 'range': [724, 724]}, {'type': 'Identifier', 'name': 'integration_credentials', 'range': [725, 725]}, {'type': 'AndKeyword', 'name': 'and', 'range': [726, 726]}, {'type': 'NotKeyword', 'name': 'not', 'range': [727, 727]}, {'type': 'Identifier', 'name': 'integrations', 'range': [728, 728]}, {'type': 'Dot', 'name': '.', 'range': [729, 729]}, {'type': 'Identifier', 'name': 'credentials', 'range': [730, 730]}, {'type': 'Colon', 'name': ':', 'range': [731, 731]}, {'type': 'Statement', 'name': 'assignment', 'range': [733, 740], 'children': [{'type': 'Identifier', 'name': 'integrations', 'range': [733, 733]}, {'type': 'Dot', 'name': '.', 'range': [734, 734]}, {'type': 'Identifier', 'name': 'credentials', 'range': [735, 735]}, {'type': 'AssignmentOperator', 'name': '=', 'range': [736, 736]}, {'type': 'Identifier', 'name': 'metadata', 'range': [737, 737]}, {'type': 'Dot', 'name': '.', 'range': [738, 738]}, {'type': 'Identifier', 'name': 'integration_credentials', 'range': [739, 739]}]}]}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [741, 754], 'children': [{'type': 'IfKeyword', 'name': 'if', 'range': [741, 741]}, {'type': 'Identifier', 'name': 'metadata', 'range': [742, 742]}, {'type': 'Dot', 'name': '.', 'range': [743, 743]}, {'type': 'Identifier', 'name': 'integration_oauth_states', 'range': [744, 744]}, {'type': 'Colon', 'name': ':', 'range': [745, 745]}, {'type': 'Statement', 'name': 'assignment', 'range': [747, 754], 'children': [{'type': 'Identifier', 'name': 'integrations', 'range': [747, 747]}, {'type': 'Dot', 'name': '.', 'range': [748, 748]}, {'type': 'Identifier', 'name': 'oauth_states', 'range': [749, 749]}, {'type': 'AssignmentOperator', 'name': '=', 'range': [750, 750]}, {'type': 'Identifier', 'name': 'metadata', 'range': [751, 751]}, {'type': 'Dot', 'name': '.', 'range': [752, 752]}, {'type': 'Identifier', 'name': 'integration_oauth_states', 'range': [753, 753]}]}]}, {'type': 'Statement', 'name': 'await', 'range': [762, 774], 'children': [{'type': 'AwaitKeyword', 'name': 'await', 'range': [762, 762]}, {'type': 'Identifier', 'name': 'update_user_integrations', 'range': [763, 763]}, {'type': 'Call', 'name': 'call', 'range': [764, 774], 'children': [{'type': 'KeywordArgument', 'name': 'user_id', 'range': [765, 769], 'children': [{'type': 'Identifier', 'name': 'user', 'range': [767, 767]}, {'type': 'Dot', 'name': '.', 'range': [768, 768]}, {'type': 'Identifier', 'name': 'id', 'range': [769, 769]}]}, {'type': 'KeywordArgument', 'name': 'data', 'range': [771, 773], 'children': [{'type': 'Identifier', 'name': 'integrations', 'range': [773, 773]}]}]}]}, {'type': 'Statement', 'name': 'assignment', 'range': [782, 796], 'children': [{'type': 'Identifier', 'name': 'raw_metadata', 'range': [782, 782]}, {'type': 'AssignmentOperator', 'name': '=', 'range': [783, 783]}, {'type': 'Identifier', 'name': 'dict', 'range': [784, 784]}, {'type': 'Call', 'name': 'call', 'range': [785, 787], 'children': [{'type': 'Identifier', 'name': 'raw_metadata', 'range': [786, 786]}]}]}, {'type': 'Statement', 'name': 'method_call', 'range': [789, 796], 'children': [{'type': 'Identifier', 'name': 'raw_metadata', 'range': [789, 789]}, {'type': 'Dot', 'name': '.', 'range': [790, 790]}, {'type': 'Identifier', 'name': 'pop', 'range': [791, 791]}, {'type': 'Call', 'name': 'call', 'range': [792, 796], 'children': [{'type': 'StringLiteral', 'name': '"integration_credentials"', 'range': [793, 793]}, {'type': 'Comma', 'name': ',', 'range': [794, 794]}, {'type': 'Identifier', 'name': 'None', 'range': [795, 795]}]}]}, {'type': 'Statement', 'name': 'method_call', 'range': [798, 805], 'children': [{'type': 'Identifier', 'name': 'raw_metadata', 'range': [798, 798]}, {'type': 'Dot', 'name': '.', 'range': [799, 799]}, {'type': 'Identifier', 'name': 'pop', 'range': [800, 800]}, {'type': 'Call', 'name': 'call', 'range': [801, 805], 'children': [{'type': 'StringLiteral', 'name': '"integration_oauth_states"', 'range': [802, 802]}, {'type': 'Comma', 'name': ',', 'range': [803, 803]}, {'type': 'Identifier', 'name': 'None', 'range': [804, 804]}]}]}, {'type': 'Statement', 'name': 'await', 'range': [815, 848], 'children': [{'type': 'AwaitKeyword', 'name': 'await', 'range': [815, 815]}, {'type': 'Identifier', 'name': 'User', 'range': [816, 816]}, {'type': 'Dot', 'name': '.', 'range': [817, 817]}, {'type': 'Identifier', 'name': 'prisma', 'range': [818, 818]}, {'type': 'Call', 'name': 'call', 'range': [819, 820], 'children': []}, {'type': 'Dot', 'name': '.', 'range': [821, 821]}, {'type': 'Identifier', 'name': 'update', 'range': [822, 822]}, {'type': 'Call', 'name': 'call', 'range': [823, 848], 'children': [{'type': 'KeywordArgument', 'name': 'where', 'range': [825, 833], 'children': [{'type': 'Dictionary', 'name': 'dictionary', 'range': [827, 833], 'children': [{'type': 'KeyValuePair', 'name': 'key_value_pair', 'range': [828, 832], 'children': [{'type': 'StringLiteral', 'name': '"id"', 'range': [828, 828]}, {'type': 'Colon', 'name': ':', 'range': [829, 829]}, {'type': 'Identifier', 'name': 'user', 'range': [830, 830]}, {'type': 'Dot', 'name': '.', 'range': [831, 831]}, {'type': 'Identifier', 'name': 'id', 'range': [832, 832]}]}]}]}, {'type': 'KeywordArgument', 'name': 'data', 'range': [836, 845], 'children': [{'type': 'Dictionary', 'name': 'dictionary', 'range': [838, 845], 'children': [{'type': 'KeyValuePair', 'name': 'key_value_pair', 'range': [839, 844], 'children': [{'type': 'StringLiteral', 'name': '"metadata"', 'range': [839, 839]}, {'type': 'Colon', 'name': ':', 'range': [840, 840]}, {'type': 'Call', 'name': 'call', 'range': [841, 844], 'children': [{'type': 'Identifier', 'name': 'Json', 'range': [841, 841]}, {'type': 'Identifier', 'name': 'raw_metadata', 'range': [843, 843]}]}]}]}]}]}]}]}]}
2025-01-08 10:31:43,350 - INFO - Starting Step 4: AST normalization
2025-01-08 10:32:22,696 - INFO - Step 5 result: {'type': 'Program', 'name': 'get_or_create_user', 'range': [80, 223], 'children': [{'type': 'FunctionDecl', 'name': 'get_or_create_user', 'range': [80, 223], 'children': [{'type': 'FunctionSignature', 'name': 'get_or_create_user', 'range': [80, 91], 'children': [{'type': 'Keyword', 'name': 'async', 'range': [80, 85], 'children': []}, {'type': 'Keyword', 'name': 'def', 'range': [81, 84], 'children': []}, {'type': 'Identifier', 'name': 'get_or_create_user', 'range': [82, 100], 'children': []}, {'type': 'ParameterList', 'name': 'parameters', 'range': [83, 87], 'children': [{'type': 'Parameter', 'name': 'user_data', 'range': [84, 86], 'children': [{'type': 'TypeAnnotation', 'name': 'dict', 'range': [86, 90], 'children': []}]}]}, {'type': 'ReturnType', 'name': 'User', 'range': [88, 91], 'children': []}]}, {'type': 'FunctionBody', 'name': 'body', 'range': [92, 223], 'children': [{'type': 'VariableDecl', 'name': 'user_id', 'range': [93, 101], 'children': [{'type': 'Assignment', 'name': '=', 'range': [94, 95], 'children': [{'type': 'CallExpression', 'name': 'user_data.get', 'range': [95, 100], 'children': [{'type': 'Identifier', 'name': 'user_data', 'range': [95, 103], 'children': []}, {'type': 'PropertyAccess', 'name': '.', 'range': [96, 97], 'children': []}, {'type': 'Identifier', 'name': 'get', 'range': [97, 100], 'children': []}]}, {'type': 'Literal', 'name': '"sub"', 'range': [99, 103], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if', 'range': [102, 118], 'children': [{'type': 'Condition', 'name': 'not user_id', 'range': [103, 105], 'children': [{'type': 'UnaryExpression', 'name': 'not', 'range': [103, 106], 'children': [{'type': 'Identifier', 'name': 'user_id', 'range': [104, 108], 'children': []}]}]}, {'type': 'Block', 'name': 'block', 'range': [106, 118], 'children': [{'type': 'RaiseStatement', 'name': 'raise', 'range': [107, 118], 'children': [{'type': 'Identifier', 'name': 'HTTPException', 'range': [108, 121], 'children': []}, {'type': 'ArgumentList', 'name': 'arguments', 'range': [109, 117], 'children': [{'type': 'KeywordArgument', 'name': 'status_code', 'range': [110, 112], 'children': [{'type': 'Literal', 'name': '401', 'range': [111, 114], 'children': []}]}, {'type': 'KeywordArgument', 'name': 'detail', 'range': [114, 116], 'children': [{'type': 'Literal', 'name': '"User ID not found in token"', 'range': [115, 117], 'children': []}]}]}]}]}]}, {'type': 'VariableDecl', 'name': 'user_email', 'range': [120, 128], 'children': [{'type': 'Assignment', 'name': '=', 'range': [121, 122], 'children': [{'type': 'CallExpression', 'name': 'user_data.get', 'range': [122, 127], 'children': [{'type': 'Identifier', 'name': 'user_data', 'range': [122, 130], 'children': []}, {'type': 'PropertyAccess', 'name': '.', 'range': [123, 124], 'children': []}, {'type': 'Identifier', 'name': 'get', 'range': [124, 127], 'children': []}]}, {'type': 'Literal', 'name': '"email"', 'range': [126, 130], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if', 'range': [129, 145], 'children': [{'type': 'Condition', 'name': 'not user_email', 'range': [130, 132], 'children': [{'type': 'UnaryExpression', 'name': 'not', 'range': [130, 133], 'children': [{'type': 'Identifier', 'name': 'user_email', 'range': [131, 135], 'children': []}]}]}, {'type': 'Block', 'name': 'block', 'range': [132, 145], 'children': [{'type': 'RaiseStatement', 'name': 'raise', 'range': [134, 145], 'children': [{'type': 'Identifier', 'name': 'HTTPException', 'range': [135, 148], 'children': []}, {'type': 'ArgumentList', 'name': 'arguments', 'range': [136, 144], 'children': [{'type': 'KeywordArgument', 'name': 'status_code', 'range': [137, 139], 'children': [{'type': 'Literal', 'name': '401', 'range': [138, 141], 'children': []}]}, {'type': 'KeywordArgument', 'name': 'detail', 'range': [141, 143], 'children': [{'type': 'Literal', 'name': '"Email not found in token"', 'range': [142, 144], 'children': []}]}]}]}]}]}, {'type': 'VariableDecl', 'name': 'user', 'range': [147, 164], 'children': [{'type': 'Assignment', 'name': '=', 'range': [148, 149], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [149, 154], 'children': [{'type': 'CallExpression', 'name': 'prisma.user.find_unique', 'range': [150, 163], 'children': [{'type': 'Identifier', 'name': 'prisma', 'range': [150, 156], 'children': []}, {'type': 'PropertyAccess', 'name': '.', 'range': [151, 152], 'children': []}, {'type': 'Identifier', 'name': 'user', 'range': [152, 156], 'children': []}, {'type': 'PropertyAccess', 'name': '.', 'range': [153, 154], 'children': []}, {'type': 'Identifier', 'name': 'find_unique', 'range': [154, 165], 'children': []}]}, {'type': 'ArgumentList', 'name': 'arguments', 'range': [155, 163], 'children': [{'type': 'KeywordArgument', 'name': 'where', 'range': [156, 158], 'children': [{'type': 'ObjectLiteral', 'name': 'object', 'range': [158, 162], 'children': [{'type': 'Property', 'name': 'id', 'range': [159, 161], 'children': [{'type': 'Identifier', 'name': 'user_id', 'range': [161, 167], 'children': []}]}]}]}]}]}]}]}, {'type': 'IfStatement', 'name': 'if', 'range': [165, 215], 'children': [{'type': 'Condition', 'name': 'not user', 'range': [166, 168], 'children': [{'type': 'UnaryExpression', 'name': 'not', 'range': [166, 169], 'children': [{'type': 'Identifier', 'name': 'user', 'range': [167, 171], 'children': []}]}]}, {'type': 'Block', 'name': 'block', 'range': [168, 215], 'children': [{'type': 'VariableDecl', 'name': 'user', 'range': [170, 215], 'children': [{'type': 'Assignment', 'name': '=', 'range': [171, 172], 'children': [{'type': 'AwaitExpression', 'name': 'await', 'range': [172, 177], 'children': [{'type': 'CallExpression', 'name': 'prisma.user.create', 'range': [173, 214], 'children': [{'type': 'Identifier', 'name': 'prisma', 'range': [173, 179], 'children': []}, {'type': 'PropertyAccess', 'name': '.', 'range': [174, 175], 'children': []}, {'type': 'Identifier', 'name': 'user', 'range': [175, 179], 'children': []}, {'type': 'PropertyAccess', 'name': '.', 'range': [176, 177], 'children': []}, {'type': 'Identifier', 'name': 'create', 'range': [177, 183], 'children': []}]}, {'type': 'ArgumentList', 'name': 'arguments', 'range': [178, 214], 'children': [{'type': 'KeywordArgument', 'name': 'data', 'range': [180, 182], 'children': [{'type': 'ObjectLiteral', 'name': 'object', 'range': [182, 212], 'children': [{'type': 'Property', 'name': 'id', 'range': [184, 186], 'children': [{'type': 'Identifier', 'name': 'user_id', 'range': [186, 192], 'children': []}]}, {'type': 'Property', 'name': 'email', 'range': [189, 191], 'children': [{'type': 'Identifier', 'name': 'user_email', 'range': [191, 201], 'children': []}]}, {'type': 'Property', 'name': 'name', 'range': [194, 210], 'children': [{'type': 'CallExpression', 'name': 'user_data.get', 'range': [196, 209], 'children': [{'type': 'Identifier', 'name': 'user_data', 'range': [196, 204], 'children': []}, {'type': 'PropertyAccess', 'name': '.', 'range': [197, 198], 'children': []}, {'type': 'Identifier', 'name': 'get', 'range': [198, 201], 'children': []}]}, {'type': 'ArgumentList', 'name': 'arguments', 'range': [199, 209], 'children': [{'type': 'Literal', 'name': '"user_metadata"', 'range': [200, 214], 'children': []}, {'type': 'ObjectLiteral', 'name': 'object', 'range': [202, 204], 'children': []}]}, {'type': 'PropertyAccess', 'name': '.', 'range': [205, 206], 'children': []}, {'type': 'Identifier', 'name': 'get', 'range': [206, 209], 'children': []}, {'type': 'ArgumentList', 'name': 'arguments', 'range': [207, 209], 'children': [{'type': 'Literal', 'name': '"name"', 'range': [208, 210], 'children': []}]}]}]}]}]}]}]}]}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [216, 223], 'children': [{'type': 'CallExpression', 'name': 'User.model_validate', 'range': [217, 222], 'children': [{'type': 'Identifier', 'name': 'User', 'range': [217, 221], 'children': []}, {'type': 'PropertyAccess', 'name': '.', 'range': [218, 219], 'children': []}, {'type': 'Identifier', 'name': 'model_validate', 'range': [219, 233], 'children': []}]}, {'type': 'ArgumentList', 'name': 'arguments', 'range': [220, 222], 'children': [{'type': 'Identifier', 'name': 'user', 'range': [221, 225], 'children': []}]}]}]}]}]}
2025-01-08 10:32:22,696 - INFO - Completed main AST analysis flow
2025-01-08 10:32:22,698 - INFO - Successfully processed chunk
2025-01-08 10:33:20,108 - INFO - Step 4 result: {'type': 'FunctionDecl', 'name': 'migrate_and_encrypt_user_integrations', 'range': [586, 850], 'children': [{'type': 'AsyncKeyword', 'name': 'async', 'range': [586, 586]}, {'type': 'DefKeyword', 'name': 'def', 'range': [587, 587]}, {'type': 'FunctionName', 'name': 'migrate_and_encrypt_user_integrations', 'range': [588, 588]}, {'type': 'Parameters', 'name': 'parameters', 'range': [589, 590], 'children': []}, {'type': 'Colon', 'name': ':', 'range': [591, 591]}, {'type': 'Docstring', 'name': 'docstring', 'range': [593, 595], 'children': [{'type': 'Literal', 'name': '"Migrate integration credentials and OAuth states from metadata to integrations column."', 'range': [594, 594]}]}, {'type': 'AssignmentExpression', 'name': 'assignment', 'range': [597, 653], 'children': [{'type': 'Identifier', 'name': 'users', 'range': [597, 597]}, {'type': 'AssignmentOperator', 'name': '=', 'range': [598, 598]}, {'type': 'AwaitKeyword', 'name': 'await', 'range': [599, 599]}, {'type': 'Identifier', 'name': 'User', 'range': [600, 600]}, {'type': 'Dot', 'name': '.', 'range': [601, 601]}, {'type': 'Identifier', 'name': 'prisma', 'range': [602, 602]}, {'type': 'CallExpression', 'name': 'call', 'range': [603, 604], 'children': []}, {'type': 'Dot', 'name': '.', 'range': [605, 605]}, {'type': 'Identifier', 'name': 'find_many', 'range': [606, 606]}, {'type': 'CallExpression', 'name': 'call', 'range': [607, 653], 'children': [{'type': 'KeywordArgument', 'name': 'where', 'range': [609, 651], 'children': [{'type': 'Dictionary', 'name': 'dictionary', 'range': [611, 651], 'children': [{'type': 'KeyValuePair', 'name': 'key_value_pair', 'range': [613, 645], 'children': [{'type': 'Literal', 'name': '"metadata"', 'range': [613, 613]}, {'type': 'Colon', 'name': ':', 'range': [614, 614]}, {'type': 'Dictionary', 'name': 'dictionary', 'range': [615, 645], 'children': [{'type': 'KeyValuePair', 'name': 'key_value_pair', 'range': [617, 634], 'children': [{'type': 'Literal', 'name': '"path"', 'range': [617, 617]}, {'type': 'Colon', 'name': ':', 'range': [618, 618]}, {'type': 'List', 'name': 'list', 'range': [619, 621], 'children': [{'type': 'Literal', 'name': '"integration_credentials"', 'range': [620, 620]}]}]}, {'type': 'KeyValuePair', 'name': 'key_value_pair', 'range': [624, 633], 'children': [{'type': 'Literal', 'name': '"not"', 'range': [624, 624]}, {'type': 'Colon', 'name': ':', 'range': [625, 625]}, {'type': 'CallExpression', 'name': 'call', 'range': [626, 633], 'children': [{'type': 'Identifier', 'name': 'Json', 'range': [626, 626]}, {'type': 'Dictionary', 'name': 'dictionary', 'range': [628, 632], 'children': [{'type': 'KeyValuePair', 'name': 'key_value_pair', 'range': [629, 631], 'children': [{'type': 'Literal', 'name': '"a"', 'range': [629, 629]}, {'type': 'Colon', 'name': ':', 'range': [630, 630]}, {'type': 'Literal', 'name': '"yolo"', 'range': [631, 631]}]}]}]}]}]}]}]}]}]}]}, {'type': 'ExpressionStatement', 'name': 'logging', 'range': [655, 661], 'children': [{'type': 'Identifier', 'name': 'logger', 'range': [655, 655]}, {'type': 'Dot', 'name': '.', 'range': [656, 656]}, {'type': 'Identifier', 'name': 'info', 'range': [657, 657]}, {'type': 'CallExpression', 'name': 'call', 'range': [658, 661], 'children': [{'type': 'Literal', 'name': 'f"Migrating integration credentials for {len(users)} users"', 'range': [660, 660]}]}]}, {'type': 'ForStatement', 'name': 'for_loop', 'range': [664, 850], 'children': [{'type': 'ForKeyword', 'name': 'for', 'range': [664, 664]}, {'type': 'Identifier', 'name': 'user', 'range': [665, 665]}, {'type': 'InKeyword', 'name': 'in', 'range': [666, 666]}, {'type': 'Identifier', 'name': 'users', 'range': [667, 667]}, {'type': 'Colon', 'name': ':', 'range': [668, 668]}, {'type': 'AssignmentExpression', 'name': 'assignment', 'range': [670, 679], 'children': [{'type': 'Identifier', 'name': 'raw_metadata', 'range': [670, 670]}, {'type': 'AssignmentOperator', 'name': '=', 'range': [671, 671]}, {'type': 'Identifier', 'name': 'cast', 'range': [672, 672]}, {'type': 'CallExpression', 'name': 'call', 'range': [673, 679], 'children': [{'type': 'Identifier', 'name': 'UserMetadataRaw', 'range': [674, 674]}, {'type': 'Comma', 'name': ',', 'range': [675, 675]}, {'type': 'Identifier', 'name': 'user', 'range': [676, 676]}, {'type': 'Dot', 'name': '.', 'range': [677, 677]}, {'type': 'Identifier', 'name': 'metadata', 'range': [678, 678]}]}]}, {'type': 'AssignmentExpression', 'name': 'assignment', 'range': [681, 688], 'children': [{'type': 'Identifier', 'name': 'metadata', 'range': [681, 681]}, {'type': 'AssignmentOperator', 'name': '=', 'range': [682, 682]}, {'type': 'Identifier', 'name': 'UserMetadata', 'range': [683, 683]}, {'type': 'Dot', 'name': '.', 'range': [684, 684]}, {'type': 'Identifier', 'name': 'model_validate', 'range': [685, 685]}, {'type': 'CallExpression', 'name': 'call', 'range': [686, 688], 'children': [{'type': 'Identifier', 'name': 'raw_metadata', 'range': [687, 687]}]}]}, {'type': 'AssignmentExpression', 'name': 'assignment', 'range': [697, 707], 'children': [{'type': 'Identifier', 'name': 'integrations', 'range': [697, 697]}, {'type': 'AssignmentOperator', 'name': '=', 'range': [698, 698]}, {'type': 'AwaitKeyword', 'name': 'await', 'range': [699, 699]}, {'type': 'Identifier', 'name': 'get_user_integrations', 'range': [700, 700]}, {'type': 'CallExpression', 'name': 'call', 'range': [701, 707], 'children': [{'type': 'KeywordArgument', 'name': 'user_id', 'range': [702, 706], 'children': [{'type': 'Identifier', 'name': 'user', 'range': [704, 704]}, {'type': 'Dot', 'name': '.', 'range': [705, 705]}, {'type': 'Identifier', 'name': 'id', 'range': [706, 706]}]}]}]}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [722, 740], 'children': [{'type': 'IfKeyword', 'name': 'if', 'range': [722, 722]}, {'type': 'Identifier', 'name': 'metadata', 'range': [723, 723]}, {'type': 'Dot', 'name': '.', 'range': [724, 724]}, {'type': 'Identifier', 'name': 'integration_credentials', 'range': [725, 725]}, {'type': 'AndKeyword', 'name': 'and', 'range': [726, 726]}, {'type': 'NotKeyword', 'name': 'not', 'range': [727, 727]}, {'type': 'Identifier', 'name': 'integrations', 'range': [728, 728]}, {'type': 'Dot', 'name': '.', 'range': [729, 729]}, {'type': 'Identifier', 'name': 'credentials', 'range': [730, 730]}, {'type': 'Colon', 'name': ':', 'range': [731, 731]}, {'type': 'AssignmentExpression', 'name': 'assignment', 'range': [733, 740], 'children': [{'type': 'Identifier', 'name': 'integrations', 'range': [733, 733]}, {'type': 'Dot', 'name': '.', 'range': [734, 734]}, {'type': 'Identifier', 'name': 'credentials', 'range': [735, 735]}, {'type': 'AssignmentOperator', 'name': '=', 'range': [736, 736]}, {'type': 'Identifier', 'name': 'metadata', 'range': [737, 737]}, {'type': 'Dot', 'name': '.', 'range': [738, 738]}, {'type': 'Identifier', 'name': 'integration_credentials', 'range': [739, 739]}]}]}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [741, 754], 'children': [{'type': 'IfKeyword', 'name': 'if', 'range': [741, 741]}, {'type': 'Identifier', 'name': 'metadata', 'range': [742, 742]}, {'type': 'Dot', 'name': '.', 'range': [743, 743]}, {'type': 'Identifier', 'name': 'integration_oauth_states', 'range': [744, 744]}, {'type': 'Colon', 'name': ':', 'range': [745, 745]}, {'type': 'AssignmentExpression', 'name': 'assignment', 'range': [747, 754], 'children': [{'type': 'Identifier', 'name': 'integrations', 'range': [747, 747]}, {'type': 'Dot', 'name': '.', 'range': [748, 748]}, {'type': 'Identifier', 'name': 'oauth_states', 'range': [749, 749]}, {'type': 'AssignmentOperator', 'name': '=', 'range': [750, 750]}, {'type': 'Identifier', 'name': 'metadata', 'range': [751, 751]}, {'type': 'Dot', 'name': '.', 'range': [752, 752]}, {'type': 'Identifier', 'name': 'integration_oauth_states', 'range': [753, 753]}]}]}, {'type': 'ExpressionStatement', 'name': 'await', 'range': [762, 774], 'children': [{'type': 'AwaitKeyword', 'name': 'await', 'range': [762, 762]}, {'type': 'Identifier', 'name': 'update_user_integrations', 'range': [763, 763]}, {'type': 'CallExpression', 'name': 'call', 'range': [764, 774], 'children': [{'type': 'KeywordArgument', 'name': 'user_id', 'range': [765, 769], 'children': [{'type': 'Identifier', 'name': 'user', 'range': [767, 767]}, {'type': 'Dot', 'name': '.', 'range': [768, 768]}, {'type': 'Identifier', 'name': 'id', 'range': [769, 769]}]}, {'type': 'KeywordArgument', 'name': 'data', 'range': [771, 773], 'children': [{'type': 'Identifier', 'name': 'integrations', 'range': [773, 773]}]}]}]}, {'type': 'AssignmentExpression', 'name': 'assignment', 'range': [782, 796], 'children': [{'type': 'Identifier', 'name': 'raw_metadata', 'range': [782, 782]}, {'type': 'AssignmentOperator', 'name': '=', 'range': [783, 783]}, {'type': 'Identifier', 'name': 'dict', 'range': [784, 784]}, {'type': 'CallExpression', 'name': 'call', 'range': [785, 787], 'children': [{'type': 'Identifier', 'name': 'raw_metadata', 'range': [786, 786]}]}]}, {'type': 'ExpressionStatement', 'name': 'method_call', 'range': [789, 796], 'children': [{'type': 'Identifier', 'name': 'raw_metadata', 'range': [789, 789]}, {'type': 'Dot', 'name': '.', 'range': [790, 790]}, {'type': 'Identifier', 'name': 'pop', 'range': [791, 791]}, {'type': 'CallExpression', 'name': 'call', 'range': [792, 796], 'children': [{'type': 'Literal', 'name': '"integration_credentials"', 'range': [793, 793]}, {'type': 'Comma', 'name': ',', 'range': [794, 794]}, {'type': 'Identifier', 'name': 'None', 'range': [795, 795]}]}]}, {'type': 'ExpressionStatement', 'name': 'method_call', 'range': [798, 805], 'children': [{'type': 'Identifier', 'name': 'raw_metadata', 'range': [798, 798]}, {'type': 'Dot', 'name': '.', 'range': [799, 799]}, {'type': 'Identifier', 'name': 'pop', 'range': [800, 800]}, {'type': 'CallExpression', 'name': 'call', 'range': [801, 805], 'children': [{'type': 'Literal', 'name': '"integration_oauth_states"', 'range': [802, 802]}, {'type': 'Comma', 'name': ',', 'range': [803, 803]}, {'type': 'Identifier', 'name': 'None', 'range': [804, 804]}]}]}, {'type': 'ExpressionStatement', 'name': 'await', 'range': [815, 848], 'children': [{'type': 'AwaitKeyword', 'name': 'await', 'range': [815, 815]}, {'type': 'Identifier', 'name': 'User', 'range': [816, 816]}, {'type': 'Dot', 'name': '.', 'range': [817, 817]}, {'type': 'Identifier', 'name': 'prisma', 'range': [818, 818]}, {'type': 'CallExpression', 'name': 'call', 'range': [819, 820], 'children': []}, {'type': 'Dot', 'name': '.', 'range': [821, 821]}, {'type': 'Identifier', 'name': 'update', 'range': [822, 822]}, {'type': 'CallExpression', 'name': 'call', 'range': [823, 848], 'children': [{'type': 'KeywordArgument', 'name': 'where', 'range': [825, 833], 'children': [{'type': 'Dictionary', 'name': 'dictionary', 'range': [827, 833], 'children': [{'type': 'KeyValuePair', 'name': 'key_value_pair', 'range': [828, 832], 'children': [{'type': 'Literal', 'name': '"id"', 'range': [828, 828]}, {'type': 'Colon', 'name': ':', 'range': [829, 829]}, {'type': 'Identifier', 'name': 'user', 'range': [830, 830]}, {'type': 'Dot', 'name': '.', 'range': [831, 831]}, {'type': 'Identifier', 'name': 'id', 'range': [832, 832]}]}]}]}, {'type': 'KeywordArgument', 'name': 'data', 'range': [836, 845], 'children': [{'type': 'Dictionary', 'name': 'dictionary', 'range': [838, 845], 'children': [{'type': 'KeyValuePair', 'name': 'key_value_pair', 'range': [839, 844], 'children': [{'type': 'Literal', 'name': '"metadata"', 'range': [839, 839]}, {'type': 'Colon', 'name': ':', 'range': [840, 840]}, {'type': 'CallExpression', 'name': 'call', 'range': [841, 844], 'children': [{'type': 'Identifier', 'name': 'Json', 'range': [841, 841]}, {'type': 'Identifier', 'name': 'raw_metadata', 'range': [843, 843]}]}]}]}]}]}]}]}]}
2025-01-08 10:33:20,108 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:34:55,283 - INFO - Step 5 result: {'type': 'Program', 'name': 'migrate_and_encrypt_user_integrations', 'range': [586, 850], 'children': [{'type': 'FunctionDecl', 'name': 'migrate_and_encrypt_user_integrations', 'range': [586, 850], 'children': [{'type': 'AsyncKeyword', 'name': 'async', 'range': [586, 586]}, {'type': 'DefKeyword', 'name': 'def', 'range': [587, 587]}, {'type': 'FunctionName', 'name': 'migrate_and_encrypt_user_integrations', 'range': [588, 588]}, {'type': 'Parameters', 'name': 'parameters', 'range': [589, 590], 'children': []}, {'type': 'Colon', 'name': ':', 'range': [591, 591]}, {'type': 'Docstring', 'name': 'docstring', 'range': [593, 595], 'children': [{'type': 'Literal', 'name': '"Migrate integration credentials and OAuth states from metadata to integrations column."', 'range': [594, 594]}]}, {'type': 'AssignmentExpression', 'name': 'assignment', 'range': [597, 653], 'children': [{'type': 'Identifier', 'name': 'users', 'range': [597, 597]}, {'type': 'AssignmentOperator', 'name': '=', 'range': [598, 598]}, {'type': 'AwaitKeyword', 'name': 'await', 'range': [599, 599]}, {'type': 'Identifier', 'name': 'User', 'range': [600, 600]}, {'type': 'Dot', 'name': '.', 'range': [601, 601]}, {'type': 'Identifier', 'name': 'prisma', 'range': [602, 602]}, {'type': 'CallExpression', 'name': 'call', 'range': [603, 604], 'children': []}, {'type': 'Dot', 'name': '.', 'range': [605, 605]}, {'type': 'Identifier', 'name': 'find_many', 'range': [606, 606]}, {'type': 'CallExpression', 'name': 'call', 'range': [607, 653], 'children': [{'type': 'KeywordArgument', 'name': 'where', 'range': [609, 651], 'children': [{'type': 'Dictionary', 'name': 'dictionary', 'range': [611, 651], 'children': [{'type': 'KeyValuePair', 'name': 'key_value_pair', 'range': [613, 645], 'children': [{'type': 'Literal', 'name': '"metadata"', 'range': [613, 613]}, {'type': 'Colon', 'name': ':', 'range': [614, 614]}, {'type': 'Dictionary', 'name': 'dictionary', 'range': [615, 645], 'children': [{'type': 'KeyValuePair', 'name': 'key_value_pair', 'range': [617, 634], 'children': [{'type': 'Literal', 'name': '"path"', 'range': [617, 617]}, {'type': 'Colon', 'name': ':', 'range': [618, 618]}, {'type': 'List', 'name': 'list', 'range': [619, 621], 'children': [{'type': 'Literal', 'name': '"integration_credentials"', 'range': [620, 620]}]}]}, {'type': 'KeyValuePair', 'name': 'key_value_pair', 'range': [624, 633], 'children': [{'type': 'Literal', 'name': '"not"', 'range': [624, 624]}, {'type': 'Colon', 'name': ':', 'range': [625, 625]}, {'type': 'CallExpression', 'name': 'call', 'range': [626, 633], 'children': [{'type': 'Identifier', 'name': 'Json', 'range': [626, 626]}, {'type': 'Dictionary', 'name': 'dictionary', 'range': [628, 632], 'children': [{'type': 'KeyValuePair', 'name': 'key_value_pair', 'range': [629, 631], 'children': [{'type': 'Literal', 'name': '"a"', 'range': [629, 629]}, {'type': 'Colon', 'name': ':', 'range': [630, 630]}, {'type': 'Literal', 'name': '"yolo"', 'range': [631, 631]}]}]}]}]}]}]}]}]}]}]}, {'type': 'ExpressionStatement', 'name': 'logging', 'range': [655, 661], 'children': [{'type': 'Identifier', 'name': 'logger', 'range': [655, 655]}, {'type': 'Dot', 'name': '.', 'range': [656, 656]}, {'type': 'Identifier', 'name': 'info', 'range': [657, 657]}, {'type': 'CallExpression', 'name': 'call', 'range': [658, 661], 'children': [{'type': 'Literal', 'name': 'f"Migrating integration credentials for {len(users)} users"', 'range': [660, 660]}]}]}, {'type': 'ForStatement', 'name': 'for_loop', 'range': [664, 850], 'children': [{'type': 'ForKeyword', 'name': 'for', 'range': [664, 664]}, {'type': 'Identifier', 'name': 'user', 'range': [665, 665]}, {'type': 'InKeyword', 'name': 'in', 'range': [666, 666]}, {'type': 'Identifier', 'name': 'users', 'range': [667, 667]}, {'type': 'Colon', 'name': ':', 'range': [668, 668]}, {'type': 'AssignmentExpression', 'name': 'assignment', 'range': [670, 679], 'children': [{'type': 'Identifier', 'name': 'raw_metadata', 'range': [670, 670]}, {'type': 'AssignmentOperator', 'name': '=', 'range': [671, 671]}, {'type': 'Identifier', 'name': 'cast', 'range': [672, 672]}, {'type': 'CallExpression', 'name': 'call', 'range': [673, 679], 'children': [{'type': 'Identifier', 'name': 'UserMetadataRaw', 'range': [674, 674]}, {'type': 'Comma', 'name': ',', 'range': [675, 675]}, {'type': 'Identifier', 'name': 'user', 'range': [676, 676]}, {'type': 'Dot', 'name': '.', 'range': [677, 677]}, {'type': 'Identifier', 'name': 'metadata', 'range': [678, 678]}]}]}, {'type': 'AssignmentExpression', 'name': 'assignment', 'range': [681, 688], 'children': [{'type': 'Identifier', 'name': 'metadata', 'range': [681, 681]}, {'type': 'AssignmentOperator', 'name': '=', 'range': [682, 682]}, {'type': 'Identifier', 'name': 'UserMetadata', 'range': [683, 683]}, {'type': 'Dot', 'name': '.', 'range': [684, 684]}, {'type': 'Identifier', 'name': 'model_validate', 'range': [685, 685]}, {'type': 'CallExpression', 'name': 'call', 'range': [686, 688], 'children': [{'type': 'Identifier', 'name': 'raw_metadata', 'range': [687, 687]}]}]}, {'type': 'AssignmentExpression', 'name': 'assignment', 'range': [697, 707], 'children': [{'type': 'Identifier', 'name': 'integrations', 'range': [697, 697]}, {'type': 'AssignmentOperator', 'name': '=', 'range': [698, 698]}, {'type': 'AwaitKeyword', 'name': 'await', 'range': [699, 699]}, {'type': 'Identifier', 'name': 'get_user_integrations', 'range': [700, 700]}, {'type': 'CallExpression', 'name': 'call', 'range': [701, 707], 'children': [{'type': 'KeywordArgument', 'name': 'user_id', 'range': [702, 706], 'children': [{'type': 'Identifier', 'name': 'user', 'range': [704, 704]}, {'type': 'Dot', 'name': '.', 'range': [705, 705]}, {'type': 'Identifier', 'name': 'id', 'range': [706, 706]}]}]}]}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [722, 740], 'children': [{'type': 'IfKeyword', 'name': 'if', 'range': [722, 722]}, {'type': 'Identifier', 'name': 'metadata', 'range': [723, 723]}, {'type': 'Dot', 'name': '.', 'range': [724, 724]}, {'type': 'Identifier', 'name': 'integration_credentials', 'range': [725, 725]}, {'type': 'AndKeyword', 'name': 'and', 'range': [726, 726]}, {'type': 'NotKeyword', 'name': 'not', 'range': [727, 727]}, {'type': 'Identifier', 'name': 'integrations', 'range': [728, 728]}, {'type': 'Dot', 'name': '.', 'range': [729, 729]}, {'type': 'Identifier', 'name': 'credentials', 'range': [730, 730]}, {'type': 'Colon', 'name': ':', 'range': [731, 731]}, {'type': 'AssignmentExpression', 'name': 'assignment', 'range': [733, 740], 'children': [{'type': 'Identifier', 'name': 'integrations', 'range': [733, 733]}, {'type': 'Dot', 'name': '.', 'range': [734, 734]}, {'type': 'Identifier', 'name': 'credentials', 'range': [735, 735]}, {'type': 'AssignmentOperator', 'name': '=', 'range': [736, 736]}, {'type': 'Identifier', 'name': 'metadata', 'range': [737, 737]}, {'type': 'Dot', 'name': '.', 'range': [738, 738]}, {'type': 'Identifier', 'name': 'integration_credentials', 'range': [739, 739]}]}]}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [741, 754], 'children': [{'type': 'IfKeyword', 'name': 'if', 'range': [741, 741]}, {'type': 'Identifier', 'name': 'metadata', 'range': [742, 742]}, {'type': 'Dot', 'name': '.', 'range': [743, 743]}, {'type': 'Identifier', 'name': 'integration_oauth_states', 'range': [744, 744]}, {'type': 'Colon', 'name': ':', 'range': [745, 745]}, {'type': 'AssignmentExpression', 'name': 'assignment', 'range': [747, 754], 'children': [{'type': 'Identifier', 'name': 'integrations', 'range': [747, 747]}, {'type': 'Dot', 'name': '.', 'range': [748, 748]}, {'type': 'Identifier', 'name': 'oauth_states', 'range': [749, 749]}, {'type': 'AssignmentOperator', 'name': '=', 'range': [750, 750]}, {'type': 'Identifier', 'name': 'metadata', 'range': [751, 751]}, {'type': 'Dot', 'name': '.', 'range': [752, 752]}, {'type': 'Identifier', 'name': 'integration_oauth_states', 'range': [753, 753]}]}]}, {'type': 'ExpressionStatement', 'name': 'await', 'range': [762, 774], 'children': [{'type': 'AwaitKeyword', 'name': 'await', 'range': [762, 762]}, {'type': 'Identifier', 'name': 'update_user_integrations', 'range': [763, 763]}, {'type': 'CallExpression', 'name': 'call', 'range': [764, 774], 'children': [{'type': 'KeywordArgument', 'name': 'user_id', 'range': [765, 769], 'children': [{'type': 'Identifier', 'name': 'user', 'range': [767, 767]}, {'type': 'Dot', 'name': '.', 'range': [768, 768]}, {'type': 'Identifier', 'name': 'id', 'range': [769, 769]}]}, {'type': 'KeywordArgument', 'name': 'data', 'range': [771, 773], 'children': [{'type': 'Identifier', 'name': 'integrations', 'range': [773, 773]}]}]}]}, {'type': 'AssignmentExpression', 'name': 'assignment', 'range': [782, 796], 'children': [{'type': 'Identifier', 'name': 'raw_metadata', 'range': [782, 782]}, {'type': 'AssignmentOperator', 'name': '=', 'range': [783, 783]}, {'type': 'Identifier', 'name': 'dict', 'range': [784, 784]}, {'type': 'CallExpression', 'name': 'call', 'range': [785, 787], 'children': [{'type': 'Identifier', 'name': 'raw_metadata', 'range': [786, 786]}]}]}, {'type': 'ExpressionStatement', 'name': 'method_call', 'range': [789, 796], 'children': [{'type': 'Identifier', 'name': 'raw_metadata', 'range': [789, 789]}, {'type': 'Dot', 'name': '.', 'range': [790, 790]}, {'type': 'Identifier', 'name': 'pop', 'range': [791, 791]}, {'type': 'CallExpression', 'name': 'call', 'range': [792, 796], 'children': [{'type': 'Literal', 'name': '"integration_credentials"', 'range': [793, 793]}, {'type': 'Comma', 'name': ',', 'range': [794, 794]}, {'type': 'Identifier', 'name': 'None', 'range': [795, 795]}]}]}, {'type': 'ExpressionStatement', 'name': 'method_call', 'range': [798, 805], 'children': [{'type': 'Identifier', 'name': 'raw_metadata', 'range': [798, 798]}, {'type': 'Dot', 'name': '.', 'range': [799, 799]}, {'type': 'Identifier', 'name': 'pop', 'range': [800, 800]}, {'type': 'CallExpression', 'name': 'call', 'range': [801, 805], 'children': [{'type': 'Literal', 'name': '"integration_oauth_states"', 'range': [802, 802]}, {'type': 'Comma', 'name': ',', 'range': [803, 803]}, {'type': 'Identifier', 'name': 'None', 'range': [804, 804]}]}]}, {'type': 'ExpressionStatement', 'name': 'await', 'range': [815, 848], 'children': [{'type': 'AwaitKeyword', 'name': 'await', 'range': [815, 815]}, {'type': 'Identifier', 'name': 'User', 'range': [816, 816]}, {'type': 'Dot', 'name': '.', 'range': [817, 817]}, {'type': 'Identifier', 'name': 'prisma', 'range': [818, 818]}, {'type': 'CallExpression', 'name': 'call', 'range': [819, 820], 'children': []}, {'type': 'Dot', 'name': '.', 'range': [821, 821]}, {'type': 'Identifier', 'name': 'update', 'range': [822, 822]}, {'type': 'CallExpression', 'name': 'call', 'range': [823, 848], 'children': [{'type': 'KeywordArgument', 'name': 'where', 'range': [825, 833], 'children': [{'type': 'Dictionary', 'name': 'dictionary', 'range': [827, 833], 'children': [{'type': 'KeyValuePair', 'name': 'key_value_pair', 'range': [828, 832], 'children': [{'type': 'Literal', 'name': '"id"', 'range': [828, 828]}, {'type': 'Colon', 'name': ':', 'range': [829, 829]}, {'type': 'Identifier', 'name': 'user', 'range': [830, 830]}, {'type': 'Dot', 'name': '.', 'range': [831, 831]}, {'type': 'Identifier', 'name': 'id', 'range': [832, 832]}]}]}]}, {'type': 'KeywordArgument', 'name': 'data', 'range': [836, 845], 'children': [{'type': 'Dictionary', 'name': 'dictionary', 'range': [838, 845], 'children': [{'type': 'KeyValuePair', 'name': 'key_value_pair', 'range': [839, 844], 'children': [{'type': 'Literal', 'name': '"metadata"', 'range': [839, 839]}, {'type': 'Colon', 'name': ':', 'range': [840, 840]}, {'type': 'CallExpression', 'name': 'call', 'range': [841, 844], 'children': [{'type': 'Identifier', 'name': 'Json', 'range': [841, 841]}, {'type': 'Identifier', 'name': 'raw_metadata', 'range': [843, 843]}]}]}]}]}]}]}]}]}]}
2025-01-08 10:34:55,283 - INFO - Completed main AST analysis flow
2025-01-08 10:34:55,285 - INFO - Successfully processed chunk
2025-01-08 10:34:55,349 - INFO - Starting code generation from AST
2025-01-08 10:35:16,446 - INFO - Successfully generated code from AST
2025-01-08 10:35:16,446 - INFO - Starting static code similarity comparison
2025-01-08 10:35:16,458 - INFO - Static similarity result: {'final_score': 89.31, 'length_similarity': 88.85, 'token_similarity': 84.06, 'structure_similarity': 86.14, 'function_similarity': 100, 'complexity_similarity': 92.31, 'variable_similarity': 100}
