2025-01-08 09:50:08,703 - INFO - Processing sample 79
2025-01-08 09:50:08,704 - INFO - Starting Step 0: Splitting code into top-level declarations
2025-01-08 09:50:11,919 - INFO - Successfully split code into 4 top-level declarations
2025-01-08 09:50:11,920 - INFO - Processing chunk #0 (size=73 chars, start_index=0)
2025-01-08 09:50:11,921 - INFO - Processing chunk with 73 chars starting at index 0
2025-01-08 09:50:11,921 - INFO - Starting main AST analysis flow
2025-01-08 09:50:11,921 - INFO - Tokenized code into 19 tokens
2025-01-08 09:50:11,921 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:50:11,922 - INFO - Processing chunk #1 (size=1266 chars, start_index=19)
2025-01-08 09:50:11,922 - INFO - Processing chunk with 1266 chars starting at index 19
2025-01-08 09:50:11,922 - INFO - Starting main AST analysis flow
2025-01-08 09:50:11,922 - INFO - Tokenized code into 124 tokens
2025-01-08 09:50:11,922 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:50:11,924 - INFO - Processing chunk #2 (size=2 chars, start_index=143)
2025-01-08 09:50:11,925 - INFO - Processing chunk with 2 chars starting at index 143
2025-01-08 09:50:11,925 - INFO - Starting main AST analysis flow
2025-01-08 09:50:11,925 - INFO - Tokenized code into 2 tokens
2025-01-08 09:50:11,925 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:50:11,947 - INFO - Processing chunk #3 (size=70 chars, start_index=145)
2025-01-08 09:50:11,947 - INFO - Processing chunk with 70 chars starting at index 145
2025-01-08 09:50:11,947 - INFO - Starting main AST analysis flow
2025-01-08 09:50:11,947 - INFO - Tokenized code into 18 tokens
2025-01-08 09:50:11,947 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:50:13,929 - INFO - Step 1 result: {'error': 'No top-level declarations found in the provided token list.'}
2025-01-08 09:50:13,929 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:50:14,182 - INFO - Step 1 result: {'type': 'Program', 'name': 'binary_and', 'range': [19, 142], 'children': []}
2025-01-08 09:50:14,182 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:50:14,577 - INFO - Step 1 result: {'error': "Insufficient data to identify top-level declarations. The provided token list does not contain any tokens that can be used to identify functions, classes, global variables, or any other top-level declarations in the 'cangjie' programming language."}
2025-01-08 09:50:14,577 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:50:15,842 - INFO - Step 2 result: {'error': 'No top-level declarations found in the provided token list.'}
2025-01-08 09:50:15,843 - INFO - Starting Step 3: AST simplification
2025-01-08 09:50:15,997 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [145, 162], 'children': [{'type': 'IfStatement', 'name': '', 'range': [145, 151], 'children': []}, {'type': 'ImportStatement', 'name': 'doctest', 'range': [152, 154], 'children': []}, {'type': 'ExpressionStatement', 'name': '', 'range': [156, 161], 'children': []}]}
2025-01-08 09:50:15,997 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:50:16,809 - INFO - Step 2 result: {'error': "Insufficient data to identify top-level declarations. The provided token list does not contain any tokens that can be used to identify functions, classes, global variables, or any other top-level declarations in the 'cangjie' programming language."}
2025-01-08 09:50:16,810 - INFO - Starting Step 3: AST simplification
2025-01-08 09:50:19,027 - INFO - Step 3 result: {'error': "Insufficient data to identify top-level declarations. The provided token list does not contain any tokens that can be used to identify functions, classes, global variables, or any other top-level declarations in the 'cangjie' programming language."}
2025-01-08 09:50:19,027 - INFO - Starting Step 4: AST normalization
2025-01-08 09:50:20,438 - INFO - Step 3 result: {'type': 'Program', 'name': 'Root', 'range': [0, 18], 'children': [{'type': 'URL', 'name': 'URL', 'range': [1, 15], 'children': [{'type': 'Protocol', 'name': 'https', 'range': [1, 1]}, {'type': 'Domain', 'name': 'www.tutorialspoint.com', 'range': [5, 9]}, {'type': 'Path', 'name': '/python3/bitwise_operators_example.htm', 'range': [10, 15]}]}]}
2025-01-08 09:50:20,438 - INFO - Starting Step 4: AST normalization
2025-01-08 09:50:20,750 - INFO - Step 4 result: {'type': 'Program', 'name': 'Unknown', 'range': [0, 0], 'children': []}
2025-01-08 09:50:20,750 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:50:22,505 - INFO - Step 5 result: {'type': 'Program', 'name': 'Unknown', 'range': [0, 0], 'children': []}
2025-01-08 09:50:22,506 - INFO - Completed main AST analysis flow
2025-01-08 09:50:22,506 - INFO - Successfully processed chunk
2025-01-08 09:50:24,898 - INFO - Step 4 result: {'type': 'Program', 'name': 'Root', 'range': [0, 18], 'children': [{'type': 'URL', 'name': 'URL', 'range': [1, 15], 'children': [{'type': 'Literal', 'name': 'https', 'range': [1, 1]}, {'type': 'Literal', 'name': 'www.tutorialspoint.com', 'range': [5, 9]}, {'type': 'Literal', 'name': '/python3/bitwise_operators_example.htm', 'range': [10, 15]}]}]}
2025-01-08 09:50:24,899 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:50:26,235 - INFO - Step 2 result: {'type': 'Program', 'name': '', 'range': [145, 162], 'children': [{'type': 'IfStatement', 'name': '', 'range': [145, 151], 'children': [{'type': 'Condition', 'name': '', 'range': [145, 150], 'children': [{'type': 'Identifier', 'name': '__name__', 'range': [146, 146], 'children': []}, {'type': 'Operator', 'name': '==', 'range': [147, 148], 'children': []}, {'type': 'StringLiteral', 'name': '__main__', 'range': [149, 149], 'children': []}]}]}, {'type': 'ImportStatement', 'name': 'doctest', 'range': [152, 154], 'children': [{'type': 'Module', 'name': 'doctest', 'range': [153, 153], 'children': []}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [156, 161], 'children': [{'type': 'CallExpression', 'name': '', 'range': [156, 160], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [156, 158], 'children': [{'type': 'Identifier', 'name': 'doctest', 'range': [156, 156], 'children': []}, {'type': 'Identifier', 'name': 'testmod', 'range': [158, 158], 'children': []}]}, {'type': 'Arguments', 'name': '', 'range': [159, 160], 'children': []}]}]}]}
2025-01-08 09:50:26,236 - INFO - Starting Step 3: AST simplification
2025-01-08 09:50:28,991 - INFO - Step 2 result: {'type': 'Program', 'name': 'binary_and', 'range': [19, 142], 'children': [{'type': 'FunctionDef', 'name': 'binary_and', 'range': [19, 142], 'children': [{'type': 'Parameters', 'name': 'parameters', 'range': [21, 29], 'children': [{'type': 'Parameter', 'name': 'a', 'range': [22, 24], 'children': []}, {'type': 'Parameter', 'name': 'b', 'range': [26, 28], 'children': []}]}, {'type': 'ReturnType', 'name': 'return_type', 'range': [30, 32], 'children': []}, {'type': 'Docstring', 'name': 'docstring', 'range': [35, 41], 'children': []}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [43, 58], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [44, 50], 'children': []}, {'type': 'RaiseStatement', 'name': 'raise_statement', 'range': [53, 57], 'children': []}]}, {'type': 'Assignment', 'name': 'a_binary_assignment', 'range': [60, 68], 'children': [{'type': 'FunctionCall', 'name': 'format_call', 'range': [62, 67], 'children': []}]}, {'type': 'Assignment', 'name': 'b_binary_assignment', 'range': [69, 77], 'children': [{'type': 'FunctionCall', 'name': 'format_call', 'range': [71, 76], 'children': []}]}, {'type': 'Assignment', 'name': 'max_len_assignment', 'range': [79, 93], 'children': [{'type': 'FunctionCall', 'name': 'max_call', 'range': [81, 92], 'children': []}]}, {'type': 'ReturnStatement', 'name': 'return_statement', 'range': [95, 142], 'children': [{'type': 'BinaryOperation', 'name': 'binary_operation', 'range': [96, 141], 'children': [{'type': 'StringLiteral', 'name': 'string_literal', 'range': [96, 98], 'children': []}, {'type': 'FunctionCall', 'name': 'join_call', 'range': [99, 141], 'children': []}]}]}]}]}
2025-01-08 09:50:28,992 - INFO - Starting Step 3: AST simplification
2025-01-08 09:50:29,224 - INFO - Step 5 result: {'type': 'Program', 'name': 'Root', 'range': [0, 18], 'children': [{'type': 'URL', 'name': 'URL', 'range': [1, 15], 'children': [{'type': 'Literal', 'name': 'https', 'range': [1, 1]}, {'type': 'Literal', 'name': 'www.tutorialspoint.com', 'range': [5, 9]}, {'type': 'Literal', 'name': '/python3/bitwise_operators_example.htm', 'range': [10, 15]}]}]}
2025-01-08 09:50:29,224 - INFO - Completed main AST analysis flow
2025-01-08 09:50:29,224 - INFO - Successfully processed chunk
2025-01-08 09:50:35,628 - INFO - Step 3 result: {'type': 'Program', 'name': '', 'range': [145, 162], 'children': [{'type': 'IfStatement', 'name': '', 'range': [145, 151], 'children': [{'type': 'Condition', 'name': '', 'range': [145, 150], 'children': [{'type': 'Identifier', 'name': '__name__', 'range': [146, 146], 'children': []}, {'type': 'Operator', 'name': '==', 'range': [147, 148], 'children': []}, {'type': 'StringLiteral', 'name': '__main__', 'range': [149, 149], 'children': []}]}]}, {'type': 'ImportStatement', 'name': 'doctest', 'range': [152, 154], 'children': [{'type': 'Module', 'name': 'doctest', 'range': [153, 153], 'children': []}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [156, 161], 'children': [{'type': 'CallExpression', 'name': '', 'range': [156, 160], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [156, 158], 'children': [{'type': 'Identifier', 'name': 'doctest', 'range': [156, 156], 'children': []}, {'type': 'Identifier', 'name': 'testmod', 'range': [158, 158], 'children': []}]}]}]}]}
2025-01-08 09:50:35,628 - INFO - Starting Step 4: AST normalization
2025-01-08 09:50:44,053 - INFO - Step 3 result: {'type': 'Program', 'name': 'binary_and', 'range': [19, 142], 'children': [{'type': 'FunctionDef', 'name': 'binary_and', 'range': [19, 142], 'children': [{'type': 'Parameters', 'name': 'parameters', 'range': [21, 29], 'children': [{'type': 'Parameter', 'name': 'a', 'range': [22, 24], 'children': []}, {'type': 'Parameter', 'name': 'b', 'range': [26, 28], 'children': []}]}, {'type': 'ReturnType', 'name': 'return_type', 'range': [30, 32], 'children': []}, {'type': 'Docstring', 'name': 'docstring', 'range': [35, 41], 'children': []}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [43, 58], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [44, 50], 'children': []}, {'type': 'RaiseStatement', 'name': 'raise_statement', 'range': [53, 57], 'children': []}]}, {'type': 'Assignment', 'name': 'a_binary_assignment', 'range': [60, 68], 'children': [{'type': 'FunctionCall', 'name': 'format_call', 'range': [62, 67], 'children': []}]}, {'type': 'Assignment', 'name': 'b_binary_assignment', 'range': [69, 77], 'children': [{'type': 'FunctionCall', 'name': 'format_call', 'range': [71, 76], 'children': []}]}, {'type': 'Assignment', 'name': 'max_len_assignment', 'range': [79, 93], 'children': [{'type': 'FunctionCall', 'name': 'max_call', 'range': [81, 92], 'children': []}]}, {'type': 'ReturnStatement', 'name': 'return_statement', 'range': [95, 142], 'children': [{'type': 'BinaryOperation', 'name': 'binary_operation', 'range': [96, 141], 'children': [{'type': 'StringLiteral', 'name': 'string_literal', 'range': [96, 98], 'children': []}, {'type': 'FunctionCall', 'name': 'join_call', 'range': [99, 141], 'children': []}]}]}]}]}
2025-01-08 09:50:44,053 - INFO - Starting Step 4: AST normalization
2025-01-08 09:50:45,449 - INFO - Step 4 result: {'type': 'Program', 'name': '', 'range': [145, 162], 'children': [{'type': 'IfStatement', 'name': '', 'range': [145, 151], 'children': [{'type': 'BinaryExpression', 'name': '', 'range': [145, 150], 'children': [{'type': 'Identifier', 'name': '__name__', 'range': [146, 146], 'children': []}, {'type': 'Operator', 'name': '==', 'range': [147, 148], 'children': []}, {'type': 'StringLiteral', 'name': '__main__', 'range': [149, 149], 'children': []}]}]}, {'type': 'ImportStatement', 'name': 'doctest', 'range': [152, 154], 'children': [{'type': 'Module', 'name': 'doctest', 'range': [153, 153], 'children': []}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [156, 161], 'children': [{'type': 'CallExpression', 'name': '', 'range': [156, 160], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [156, 158], 'children': [{'type': 'Identifier', 'name': 'doctest', 'range': [156, 156], 'children': []}, {'type': 'Identifier', 'name': 'testmod', 'range': [158, 158], 'children': []}]}]}]}]}
2025-01-08 09:50:45,449 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:50:55,089 - INFO - Step 5 result: {'type': 'Program', 'name': '', 'range': [145, 162], 'children': [{'type': 'IfStatement', 'name': '', 'range': [145, 151], 'children': [{'type': 'BinaryExpression', 'name': '', 'range': [145, 150], 'children': [{'type': 'Identifier', 'name': '__name__', 'range': [146, 146], 'children': []}, {'type': 'Operator', 'name': '==', 'range': [147, 148], 'children': []}, {'type': 'StringLiteral', 'name': '__main__', 'range': [149, 149], 'children': []}]}]}, {'type': 'ImportStatement', 'name': 'doctest', 'range': [152, 154], 'children': [{'type': 'Module', 'name': 'doctest', 'range': [153, 153], 'children': []}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [156, 161], 'children': [{'type': 'CallExpression', 'name': '', 'range': [156, 160], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [156, 158], 'children': [{'type': 'Identifier', 'name': 'doctest', 'range': [156, 156], 'children': []}, {'type': 'Identifier', 'name': 'testmod', 'range': [158, 158], 'children': []}]}]}]}]}
2025-01-08 09:50:55,089 - INFO - Completed main AST analysis flow
2025-01-08 09:50:55,089 - INFO - Successfully processed chunk
2025-01-08 09:50:58,436 - INFO - Step 4 result: {'type': 'Program', 'name': 'binary_and', 'range': [19, 142], 'children': [{'type': 'FunctionDecl', 'name': 'binary_and', 'range': [19, 142], 'children': [{'type': 'Parameters', 'name': 'parameters', 'range': [21, 29], 'children': [{'type': 'Parameter', 'name': 'a', 'range': [22, 24], 'children': []}, {'type': 'Parameter', 'name': 'b', 'range': [26, 28], 'children': []}]}, {'type': 'ReturnType', 'name': 'return_type', 'range': [30, 32], 'children': []}, {'type': 'Docstring', 'name': 'docstring', 'range': [35, 41], 'children': []}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [43, 58], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [44, 50], 'children': []}, {'type': 'RaiseStatement', 'name': 'raise_statement', 'range': [53, 57], 'children': []}]}, {'type': 'Assignment', 'name': 'a_binary_assignment', 'range': [60, 68], 'children': [{'type': 'CallExpression', 'name': 'format_call', 'range': [62, 67], 'children': []}]}, {'type': 'Assignment', 'name': 'b_binary_assignment', 'range': [69, 77], 'children': [{'type': 'CallExpression', 'name': 'format_call', 'range': [71, 76], 'children': []}]}, {'type': 'Assignment', 'name': 'max_len_assignment', 'range': [79, 93], 'children': [{'type': 'CallExpression', 'name': 'max_call', 'range': [81, 92], 'children': []}]}, {'type': 'ReturnStatement', 'name': 'return_statement', 'range': [95, 142], 'children': [{'type': 'BinaryExpression', 'name': 'binary_operation', 'range': [96, 141], 'children': [{'type': 'Literal', 'name': 'string_literal', 'range': [96, 98], 'children': []}, {'type': 'CallExpression', 'name': 'join_call', 'range': [99, 141], 'children': []}]}]}]}]}
2025-01-08 09:50:58,436 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:51:13,179 - INFO - Step 5 result: {'type': 'Program', 'name': 'binary_and', 'range': [19, 142], 'children': [{'type': 'FunctionDecl', 'name': 'binary_and', 'range': [19, 142], 'children': [{'type': 'Parameters', 'name': 'parameters', 'range': [21, 29], 'children': [{'type': 'Parameter', 'name': 'a', 'range': [22, 24], 'children': []}, {'type': 'Parameter', 'name': 'b', 'range': [26, 28], 'children': []}]}, {'type': 'ReturnType', 'name': 'return_type', 'range': [30, 32], 'children': []}, {'type': 'Docstring', 'name': 'docstring', 'range': [35, 41], 'children': []}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [43, 58], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [44, 50], 'children': []}, {'type': 'RaiseStatement', 'name': 'raise_statement', 'range': [53, 57], 'children': []}]}, {'type': 'Assignment', 'name': 'a_binary_assignment', 'range': [60, 68], 'children': [{'type': 'CallExpression', 'name': 'format_call', 'range': [62, 67], 'children': []}]}, {'type': 'Assignment', 'name': 'b_binary_assignment', 'range': [69, 77], 'children': [{'type': 'CallExpression', 'name': 'format_call', 'range': [71, 76], 'children': []}]}, {'type': 'Assignment', 'name': 'max_len_assignment', 'range': [79, 93], 'children': [{'type': 'CallExpression', 'name': 'max_call', 'range': [81, 92], 'children': []}]}, {'type': 'ReturnStatement', 'name': 'return_statement', 'range': [95, 142], 'children': [{'type': 'BinaryExpression', 'name': 'binary_operation', 'range': [96, 141], 'children': [{'type': 'Literal', 'name': 'string_literal', 'range': [96, 98], 'children': []}, {'type': 'CallExpression', 'name': 'join_call', 'range': [99, 141], 'children': []}]}]}]}]}
2025-01-08 09:51:13,179 - INFO - Completed main AST analysis flow
2025-01-08 09:51:13,180 - INFO - Successfully processed chunk
2025-01-08 09:51:13,188 - INFO - Starting code generation from AST
2025-01-08 09:51:22,648 - INFO - Successfully generated code from AST
2025-01-08 09:51:22,649 - INFO - Starting static code similarity comparison
2025-01-08 09:51:22,652 - INFO - Static similarity result: {'final_score': 62.42, 'length_similarity': 60.39, 'token_similarity': 23.16, 'structure_similarity': 97.67, 'function_similarity': 100, 'complexity_similarity': 20.0, 'variable_similarity': 100}
