2025-01-08 10:27:27,576 - INFO - Processing sample 171
2025-01-08 10:27:27,593 - INFO - Starting Step 0: Splitting code into top-level declarations
2025-01-08 10:27:39,219 - INFO - Successfully split code into 15 top-level declarations
2025-01-08 10:27:44,565 - INFO - Processing chunk #0 (size=430 chars, start_index=0)
2025-01-08 10:27:44,575 - INFO - Processing chunk with 430 chars starting at index 0
2025-01-08 10:27:44,575 - INFO - Starting main AST analysis flow
2025-01-08 10:27:44,683 - INFO - Tokenized code into 99 tokens
2025-01-08 10:27:44,704 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:49,924 - INFO - Processing chunk #1 (size=291 chars, start_index=99)
2025-01-08 10:27:49,954 - INFO - Processing chunk #2 (size=88 chars, start_index=163)
2025-01-08 10:27:49,970 - INFO - Processing chunk #3 (size=194 chars, start_index=191)
2025-01-08 10:27:49,974 - INFO - Processing chunk with 291 chars starting at index 99
2025-01-08 10:27:49,995 - INFO - Processing chunk #4 (size=631 chars, start_index=228)
2025-01-08 10:27:50,090 - INFO - Processing chunk with 88 chars starting at index 163
2025-01-08 10:27:50,100 - INFO - Processing chunk with 194 chars starting at index 191
2025-01-08 10:27:50,147 - INFO - Processing chunk #5 (size=819 chars, start_index=313)
2025-01-08 10:27:50,230 - INFO - Starting main AST analysis flow
2025-01-08 10:27:50,232 - INFO - Processing chunk #6 (size=338 chars, start_index=413)
2025-01-08 10:27:50,236 - INFO - Processing chunk #7 (size=248 chars, start_index=472)
2025-01-08 10:27:50,258 - INFO - Processing chunk with 631 chars starting at index 228
2025-01-08 10:27:50,259 - INFO - Processing chunk #8 (size=2670 chars, start_index=516)
2025-01-08 10:27:50,272 - INFO - Processing chunk #9 (size=75 chars, start_index=1052)
2025-01-08 10:27:50,273 - INFO - Starting main AST analysis flow
2025-01-08 10:27:50,285 - INFO - Starting main AST analysis flow
2025-01-08 10:27:50,286 - INFO - Processing chunk #10 (size=47 chars, start_index=1089)
2025-01-08 10:27:50,288 - INFO - Processing chunk with 819 chars starting at index 313
2025-01-08 10:27:50,321 - INFO - Starting main AST analysis flow
2025-01-08 10:27:50,291 - INFO - Processing chunk #11 (size=219 chars, start_index=1103)
2025-01-08 10:27:50,294 - INFO - Processing chunk #12 (size=875 chars, start_index=1143)
2025-01-08 10:27:50,295 - INFO - Processing chunk with 338 chars starting at index 413
2025-01-08 10:27:50,328 - INFO - Starting main AST analysis flow
2025-01-08 10:27:50,298 - INFO - Processing chunk #13 (size=62 chars, start_index=1303)
2025-01-08 10:27:50,299 - INFO - Starting main AST analysis flow
2025-01-08 10:27:50,299 - INFO - Processing chunk #14 (size=1509 chars, start_index=1324)
2025-01-08 10:27:50,301 - INFO - Processing chunk with 2670 chars starting at index 516
2025-01-08 10:27:50,307 - INFO - Processing chunk with 75 chars starting at index 1052
2025-01-08 10:27:50,308 - INFO - Tokenized code into 28 tokens
2025-01-08 10:27:50,316 - INFO - Tokenized code into 37 tokens
2025-01-08 10:27:50,320 - INFO - Processing chunk with 47 chars starting at index 1089
2025-01-08 10:27:50,290 - INFO - Tokenized code into 64 tokens
2025-01-08 10:27:50,322 - INFO - Tokenized code into 100 tokens
2025-01-08 10:27:50,327 - INFO - Processing chunk with 219 chars starting at index 1103
2025-01-08 10:27:50,327 - INFO - Processing chunk with 875 chars starting at index 1143
2025-01-08 10:27:50,298 - INFO - Processing chunk with 248 chars starting at index 472
2025-01-08 10:27:50,329 - INFO - Tokenized code into 59 tokens
2025-01-08 10:27:50,397 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:50,335 - INFO - Tokenized code into 85 tokens
2025-01-08 10:27:50,344 - INFO - Processing chunk with 1509 chars starting at index 1324
2025-01-08 10:27:50,348 - INFO - Starting main AST analysis flow
2025-01-08 10:27:50,353 - INFO - Starting main AST analysis flow
2025-01-08 10:27:50,355 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:50,370 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:50,373 - INFO - Starting main AST analysis flow
2025-01-08 10:27:50,375 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:50,378 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:50,381 - INFO - Starting main AST analysis flow
2025-01-08 10:27:50,382 - INFO - Starting main AST analysis flow
2025-01-08 10:27:50,388 - INFO - Starting main AST analysis flow
2025-01-08 10:27:50,332 - INFO - Processing chunk with 62 chars starting at index 1303
2025-01-08 10:27:50,402 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:50,406 - INFO - Starting main AST analysis flow
2025-01-08 10:27:50,407 - INFO - Tokenized code into 536 tokens
2025-01-08 10:27:50,409 - INFO - Tokenized code into 37 tokens
2025-01-08 10:27:50,432 - INFO - Tokenized code into 14 tokens
2025-01-08 10:27:50,441 - INFO - Tokenized code into 40 tokens
2025-01-08 10:27:50,455 - INFO - Tokenized code into 160 tokens
2025-01-08 10:27:50,464 - INFO - Tokenized code into 44 tokens
2025-01-08 10:27:50,467 - INFO - Starting main AST analysis flow
2025-01-08 10:27:50,476 - INFO - Tokenized code into 271 tokens
2025-01-08 10:27:50,489 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:50,497 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:50,501 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:50,504 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:50,506 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:50,510 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:50,515 - INFO - Tokenized code into 21 tokens
2025-01-08 10:27:50,525 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:50,590 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:59,357 - INFO - Step 1 result: {'type': 'Program', 'name': 'close_service_client', 'range': [1103, 1142], 'children': []}
2025-01-08 10:27:59,397 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:27:59,733 - INFO - Step 1 result: {'type': 'Program', 'name': 'PyroClient', 'range': [1089, 1102], 'children': []}
2025-01-08 10:27:59,734 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:27:59,825 - INFO - Step 1 result: {'type': 'Program', 'name': 'register_pydantic_serializers', 'range': [313, 412], 'children': []}
2025-01-08 10:27:59,825 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:00,740 - INFO - Step 1 result: {'type': 'Program', 'name': '_pydantic_models_from_type_annotation', 'range': [1324, 1594], 'children': []}
2025-01-08 10:28:00,744 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:00,766 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [1052, 1088], 'children': [{'type': 'TypeVarDeclaration', 'name': 'AS', 'range': [1076, 1085], 'children': []}]}
2025-01-08 10:28:00,834 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:01,504 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [99, 162], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [99, 103], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [104, 108], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [109, 115], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [116, 122], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [124, 132], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [133, 141], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [142, 150], 'children': []}, {'type': 'ImportDeclaration', 'name': '', 'range': [151, 161], 'children': []}]}
2025-01-08 10:28:01,504 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:02,249 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [163, 190], 'children': [{'type': 'VariableDeclaration', 'name': 'logger', 'range': [163, 170], 'children': []}, {'type': 'VariableDeclaration', 'name': 'T', 'range': [172, 177], 'children': []}, {'type': 'VariableDeclaration', 'name': 'C', 'range': [179, 188], 'children': []}]}
2025-01-08 10:28:02,249 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:02,254 - INFO - Step 1 result: {'type': 'Program', 'name': 'expose', 'range': [228, 312], 'children': [{'type': 'FunctionDeclaration', 'name': 'wrapper', 'range': [247, 292], 'children': []}, {'type': 'ExpressionStatement', 'name': '', 'range': [294, 298], 'children': []}, {'type': 'ReturnStatement', 'name': '', 'range': [300, 311], 'children': []}]}
2025-01-08 10:28:02,254 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:02,266 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [191, 227], 'children': [{'type': 'VariableDeclaration', 'name': 'config', 'range': [191, 195], 'children': []}, {'type': 'AssignmentExpression', 'name': 'pyro_host', 'range': [197, 201], 'children': []}, {'type': 'AssignmentExpression', 'name': 'pyro_config.MAX_RETRIES', 'range': [203, 209], 'children': []}, {'type': 'AssignmentExpression', 'name': 'pyro_config.COMMTIMEOUT', 'range': [215, 221], 'children': []}]}
2025-01-08 10:28:02,331 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:07,526 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [0, 98], 'children': [{'type': 'ImportDeclaration', 'name': 'asyncio', 'range': [0, 2], 'children': []}, {'type': 'ImportDeclaration', 'name': 'builtins', 'range': [3, 5], 'children': []}, {'type': 'ImportDeclaration', 'name': 'logging', 'range': [6, 8], 'children': []}, {'type': 'ImportDeclaration', 'name': 'os', 'range': [9, 11], 'children': []}, {'type': 'ImportDeclaration', 'name': 'threading', 'range': [12, 14], 'children': []}, {'type': 'ImportDeclaration', 'name': 'time', 'range': [15, 17], 'children': []}, {'type': 'ImportDeclaration', 'name': 'typing', 'range': [18, 20], 'children': []}, {'type': 'ImportDeclaration', 'name': 'ABC, abstractmethod', 'range': [21, 27], 'children': []}, {'type': 'ImportDeclaration', 'name': 'Enum', 'range': [28, 32], 'children': []}, {'type': 'ImportDeclaration', 'name': 'NoneType, UnionType', 'range': [33, 39], 'children': []}, {'type': 'ImportDeclaration', 'name': 'Annotated, Any, Awaitable, Callable, Coroutine, Dict, FrozenSet, Iterator, List, Set, Tuple, Type, TypeVar, Union, cast, get_args, get_origin', 'range': [40, 97], 'children': []}]}
2025-01-08 10:28:07,560 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [413, 471], 'children': [{'type': 'FunctionDeclaration', 'name': '_make_custom_serializer', 'range': [413, 470], 'children': [{'type': 'Parameter', 'name': 'model', 'range': [416, 421], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'custom_class_to_dict', 'range': [425, 465], 'children': [{'type': 'Parameter', 'name': 'obj', 'range': [428, 429], 'children': []}, {'type': 'VariableDeclaration', 'name': 'data', 'range': [432, 454], 'children': []}, {'type': 'ExpressionStatement', 'name': '', 'range': [456, 462], 'children': []}, {'type': 'ReturnStatement', 'name': '', 'range': [464, 465], 'children': []}]}, {'type': 'ReturnStatement', 'name': '', 'range': [468, 469], 'children': []}]}]}
2025-01-08 10:28:07,966 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [472, 515], 'children': [{'type': 'FunctionDeclaration', 'name': '_make_custom_deserializer', 'range': [472, 514], 'children': [{'type': 'Parameter', 'name': 'model', 'range': [475, 480], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'custom_dict_to_class', 'range': [484, 513], 'children': [{'type': 'Parameter', 'name': 'qualname', 'range': [487, 487], 'children': []}, {'type': 'Parameter', 'name': 'data', 'range': [489, 491], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [494, 510], 'children': [{'type': 'ExpressionStatement', 'name': '', 'range': [495, 501], 'children': []}, {'type': 'ReturnStatement', 'name': '', 'range': [503, 509], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [512, 513], 'children': []}]}]}
2025-01-08 10:28:08,057 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:08,249 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [1304, 1323], 'children': [{'type': 'VariableDeclaration', 'name': 'builtin_types', 'range': [1304, 1320], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [1305, 1320], 'children': [{'type': 'ArrayExpression', 'name': '', 'range': [1306, 1320], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [1307, 1315], 'children': [{'type': 'Identifier', 'name': 'vars', 'range': [1308, 1308], 'children': []}, {'type': 'CallExpression', 'name': '', 'range': [1309, 1315], 'children': [{'type': 'Identifier', 'name': 'builtins', 'range': [1310, 1310], 'children': []}]}]}, {'type': 'Identifier', 'name': 'NoneType', 'range': [1317, 1317], 'children': []}, {'type': 'Identifier', 'name': 'Enum', 'range': [1319, 1319], 'children': []}]}]}]}]}
2025-01-08 10:28:08,326 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:08,533 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:08,801 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:10,304 - INFO - Step 1 result: {'type': 'Program', 'name': 'AppService', 'range': [516, 1051], 'children': [{'type': 'ClassDeclaration', 'name': 'AppService', 'range': [516, 522], 'children': []}, {'type': 'VariableDeclaration', 'name': 'shared_event_loop', 'range': [525, 529], 'children': []}, {'type': 'VariableDeclaration', 'name': 'use_db', 'range': [531, 535], 'children': []}, {'type': 'VariableDeclaration', 'name': 'use_redis', 'range': [537, 541], 'children': []}, {'type': 'VariableDeclaration', 'name': 'use_supabase', 'range': [543, 547], 'children': []}, {'type': 'FunctionDeclaration', 'name': '__init__', 'range': [550, 562], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'get_port', 'range': [570, 580], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'get_host', 'range': [586, 610], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'run_service', 'range': [612, 632], 'children': []}, {'type': 'FunctionDeclaration', 'name': '__run_async', 'range': [634, 663], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'run_and_wait', 'range': [665, 701], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'run', 'range': [703, 786], 'children': []}, {'type': 'FunctionDeclaration', 'name': 'cleanup', 'range': [876, 928], 'children': []}, {'type': 'FunctionDeclaration', 'name': '__start_pyro', 'range': [937, 1034], 'children': []}, {'type': 'FunctionDeclaration', 'name': '__start_async_loop', 'range': [1035, 1050], 'children': []}]}
2025-01-08 10:28:10,304 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:11,510 - INFO - Step 2 result: {'type': 'Program', 'name': 'PyroClient', 'range': [1089, 1102], 'children': [{'type': 'ClassDeclaration', 'name': 'PyroClient', 'range': [1089, 1091], 'children': []}, {'type': 'VariableDeclaration', 'name': 'proxy', 'range': [1093, 1099], 'children': [{'type': 'TypeAnnotation', 'name': 'Pyro5.api.Proxy', 'range': [1095, 1099], 'children': []}]}]}
2025-01-08 10:28:11,511 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:12,987 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [1143, 1302], 'children': [{'type': 'FunctionDeclaration', 'name': 'get_service_client', 'range': [1143, 1301], 'children': [{'type': 'Parameter', 'name': 'service_type', 'range': [1146, 1151], 'children': []}, {'type': 'ReturnType', 'name': 'AS', 'range': [1153, 1155], 'children': []}, {'type': 'Assignment', 'name': 'service_name', 'range': [1158, 1162], 'children': []}, {'type': 'ClassDeclaration', 'name': 'DynamicClient', 'range': [1165, 1290], 'children': [{'type': 'Inheritance', 'name': 'PyroClient', 'range': [1167, 1169], 'children': []}, {'type': 'Decorator', 'name': 'conn_retry', 'range': [1172, 1179], 'children': []}, {'type': 'MethodDeclaration', 'name': '__init__', 'range': [1181, 1254], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1184, 1185], 'children': []}, {'type': 'Assignment', 'name': 'host', 'range': [1188, 1200], 'children': []}, {'type': 'Assignment', 'name': 'uri', 'range': [1202, 1205], 'children': []}, {'type': 'ExpressionStatement', 'name': '', 'range': [1207, 1213], 'children': []}, {'type': 'Assignment', 'name': 'self.proxy', 'range': [1215, 1226], 'children': []}, {'type': 'ExpressionStatement', 'name': '', 'range': [1228, 1238], 'children': []}, {'type': 'ExpressionStatement', 'name': '', 'range': [1239, 1246], 'children': []}, {'type': 'ExpressionStatement', 'name': '', 'range': [1247, 1253], 'children': []}]}, {'type': 'MethodDeclaration', 'name': '__getattr__', 'range': [1256, 1290], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1259, 1260], 'children': []}, {'type': 'Parameter', 'name': 'name', 'range': [1261, 1264], 'children': []}, {'type': 'ReturnType', 'name': 'Callable', 'range': [1265, 1274], 'children': []}, {'type': 'Assignment', 'name': 'res', 'range': [1277, 1286], 'children': []}, {'type': 'ReturnStatement', 'name': '', 'range': [1288, 1289], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [1292, 1300], 'children': []}]}]}
2025-01-08 10:28:12,987 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:28:14,727 - INFO - Step 2 result: {'type': 'Program', 'name': '', 'range': [1052, 1088], 'children': [{'type': 'TypeVarDeclaration', 'name': 'AS', 'range': [1076, 1085], 'children': [{'type': 'Assignment', 'name': '=', 'range': [1077, 1077], 'children': []}, {'type': 'TypeVar', 'name': 'TypeVar', 'range': [1078, 1085], 'children': [{'type': 'StringLiteral', 'name': '"AS"', 'range': [1080, 1080], 'children': []}, {'type': 'Keyword', 'name': 'bound', 'range': [1082, 1082], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [1083, 1083], 'children': []}, {'type': 'Identifier', 'name': 'AppService', 'range': [1084, 1084], 'children': []}]}]}]}
2025-01-08 10:28:14,742 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:20,580 - INFO - Step 3 result: {'type': 'Program', 'name': 'PyroClient', 'range': [1089, 1102], 'children': [{'type': 'ClassDeclaration', 'name': 'PyroClient', 'range': [1089, 1091], 'children': []}, {'type': 'VariableDeclaration', 'name': 'proxy', 'range': [1093, 1099], 'children': [{'type': 'TypeAnnotation', 'name': 'Pyro5.api.Proxy', 'range': [1095, 1099], 'children': []}]}]}
2025-01-08 10:28:20,580 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:20,855 - INFO - Step 2 result: {'type': 'Program', 'name': '', 'range': [163, 190], 'children': [{'type': 'VariableDeclaration', 'name': 'logger', 'range': [163, 170], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [164, 170], 'children': [{'type': 'MemberExpression', 'name': 'logging.getLogger', 'range': [165, 167], 'children': [{'type': 'Identifier', 'name': 'logging', 'range': [165, 165], 'children': []}, {'type': 'Identifier', 'name': 'getLogger', 'range': [167, 167], 'children': []}]}, {'type': 'CallExpression', 'name': '(', 'range': [168, 170], 'children': [{'type': 'Identifier', 'name': '__name__', 'range': [169, 169], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'T', 'range': [172, 177], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [173, 177], 'children': [{'type': 'CallExpression', 'name': 'TypeVar', 'range': [174, 177], 'children': [{'type': 'Literal', 'name': '"T"', 'range': [176, 176], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'C', 'range': [179, 188], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [180, 188], 'children': [{'type': 'CallExpression', 'name': 'TypeVar', 'range': [181, 188], 'children': [{'type': 'Literal', 'name': '"C"', 'range': [183, 183], 'children': []}, {'type': 'Keyword', 'name': 'bound', 'range': [185, 185], 'children': []}, {'type': 'Identifier', 'name': 'Callable', 'range': [187, 187], 'children': []}]}]}]}]}
2025-01-08 10:28:20,855 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:23,210 - INFO - Step 2 result: {'type': 'Program', 'name': '', 'range': [1304, 1323], 'children': [{'type': 'VariableDeclaration', 'name': 'builtin_types', 'range': [1304, 1320], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [1305, 1320], 'children': [{'type': 'ArrayExpression', 'name': '', 'range': [1306, 1320], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [1307, 1315], 'children': [{'type': 'Identifier', 'name': 'vars', 'range': [1308, 1308], 'children': []}, {'type': 'CallExpression', 'name': '', 'range': [1309, 1315], 'children': [{'type': 'Identifier', 'name': 'builtins', 'range': [1310, 1310], 'children': []}]}]}, {'type': 'Identifier', 'name': 'NoneType', 'range': [1317, 1317], 'children': []}, {'type': 'Identifier', 'name': 'Enum', 'range': [1319, 1319], 'children': []}]}]}]}]}
2025-01-08 10:28:23,211 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:23,377 - INFO - Step 3 result: {'type': 'Program', 'name': '', 'range': [1052, 1088], 'children': [{'type': 'TypeVarDeclaration', 'name': 'AS', 'range': [1076, 1085], 'children': [{'type': 'TypeVar', 'name': 'TypeVar', 'range': [1078, 1085], 'children': [{'type': 'StringLiteral', 'name': '"AS"', 'range': [1080, 1080], 'children': []}, {'type': 'Keyword', 'name': 'bound', 'range': [1082, 1082], 'children': []}, {'type': 'Identifier', 'name': 'AppService', 'range': [1084, 1084], 'children': []}]}]}]}
2025-01-08 10:28:23,377 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:25,011 - INFO - Step 2 result: {'type': 'Program', 'name': 'close_service_client', 'range': [1103, 1142], 'children': [{'type': 'FunctionDef', 'name': 'close_service_client', 'range': [1103, 1142], 'children': [{'type': 'Parameters', 'name': 'parameters', 'range': [1105, 1109], 'children': [{'type': 'Parameter', 'name': 'client', 'range': [1106, 1108], 'children': []}]}, {'type': 'ReturnType', 'name': 'return_type', 'range': [1110, 1112], 'children': []}, {'type': 'Block', 'name': 'block', 'range': [1114, 1142], 'children': [{'type': 'IfStatement', 'name': 'if_statement', 'range': [1115, 1131], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [1116, 1121], 'children': [{'type': 'FunctionCall', 'name': 'isinstance', 'range': [1116, 1121], 'children': [{'type': 'Arguments', 'name': 'arguments', 'range': [1117, 1121], 'children': [{'type': 'Variable', 'name': 'client', 'range': [1118, 1118], 'children': []}, {'type': 'Type', 'name': 'PyroClient', 'range': [1120, 1120], 'children': []}]}]}]}, {'type': 'Block', 'name': 'block', 'range': [1123, 1131], 'children': [{'type': 'ExpressionStatement', 'name': 'expression_statement', 'range': [1124, 1130], 'children': [{'type': 'FunctionCall', 'name': '_pyroRelease', 'range': [1128, 1130], 'children': [{'type': 'MemberAccess', 'name': 'proxy', 'range': [1125, 1127], 'children': [{'type': 'Variable', 'name': 'client', 'range': [1124, 1124], 'children': []}]}]}]}]}]}, {'type': 'ElseStatement', 'name': 'else_statement', 'range': [1132, 1141], 'children': [{'type': 'Block', 'name': 'block', 'range': [1134, 1141], 'children': [{'type': 'RaiseStatement', 'name': 'raise_statement', 'range': [1135, 1140], 'children': [{'type': 'FunctionCall', 'name': 'RuntimeError', 'range': [1136, 1140], 'children': [{'type': 'Arguments', 'name': 'arguments', 'range': [1137, 1140], 'children': [{'type': 'StringLiteral', 'name': 'error_message', 'range': [1139, 1139], 'children': []}]}]}]}]}]}]}]}]}
2025-01-08 10:28:25,011 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:25,050 - INFO - Step 2 result: {'nodes': [{'type': 'VariableDeclaration', 'name': 'config', 'range': [191, 195], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [192, 195], 'children': [{'type': 'CallExpression', 'name': 'Config', 'range': [193, 195], 'children': []}]}]}, {'type': 'AssignmentExpression', 'name': 'pyro_host', 'range': [197, 201], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [200, 201], 'children': [{'type': 'Identifier', 'name': 'config', 'range': [199, 199], 'children': []}, {'type': 'Identifier', 'name': 'pyro_host', 'range': [201, 201], 'children': []}]}]}, {'type': 'AssignmentExpression', 'name': 'pyro_config.MAX_RETRIES', 'range': [203, 209], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [204, 205], 'children': [{'type': 'Identifier', 'name': 'pyro_config', 'range': [203, 203], 'children': []}, {'type': 'Identifier', 'name': 'MAX_RETRIES', 'range': [205, 205], 'children': []}]}, {'type': 'AssignmentExpression', 'name': '=', 'range': [206, 209], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [208, 209], 'children': [{'type': 'Identifier', 'name': 'config', 'range': [207, 207], 'children': []}, {'type': 'Identifier', 'name': 'pyro_client_comm_retry', 'range': [209, 209], 'children': []}]}]}]}, {'type': 'AssignmentExpression', 'name': 'pyro_config.COMMTIMEOUT', 'range': [215, 221], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [216, 217], 'children': [{'type': 'Identifier', 'name': 'pyro_config', 'range': [215, 215], 'children': []}, {'type': 'Identifier', 'name': 'COMMTIMEOUT', 'range': [217, 217], 'children': []}]}, {'type': 'AssignmentExpression', 'name': '=', 'range': [218, 221], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [220, 221], 'children': [{'type': 'Identifier', 'name': 'config', 'range': [219, 219], 'children': []}, {'type': 'Identifier', 'name': 'pyro_client_comm_timeout', 'range': [221, 221], 'children': []}]}]}]}]}
2025-01-08 10:28:25,051 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:26,233 - INFO - Step 4 result: {'type': 'Program', 'name': 'PyroClient', 'range': [1089, 1102], 'children': [{'type': 'ClassDecl', 'name': 'PyroClient', 'range': [1089, 1091], 'children': []}, {'type': 'VariableDecl', 'name': 'proxy', 'range': [1093, 1099], 'children': [{'type': 'TypeAnnotation', 'name': 'Pyro5.api.Proxy', 'range': [1095, 1099], 'children': []}]}]}
2025-01-08 10:28:26,233 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:28:29,023 - INFO - Step 4 result: {'type': 'Program', 'name': '', 'range': [1052, 1088], 'children': [{'type': 'TypeAliasDeclaration', 'name': 'AS', 'range': [1076, 1085], 'children': [{'type': 'TypeParameter', 'name': 'TypeVar', 'range': [1078, 1085], 'children': [{'type': 'Literal', 'name': '"AS"', 'range': [1080, 1080], 'children': []}, {'type': 'Keyword', 'name': 'bound', 'range': [1082, 1082], 'children': []}, {'type': 'Identifier', 'name': 'AppService', 'range': [1084, 1084], 'children': []}]}]}]}
2025-01-08 10:28:29,023 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:28:29,826 - INFO - Step 2 result: {'type': 'Program', 'name': '', 'range': [472, 515], 'children': [{'type': 'FunctionDeclaration', 'name': '_make_custom_deserializer', 'range': [472, 514], 'children': [{'type': 'Parameter', 'name': 'model', 'range': [475, 480], 'children': [{'type': 'TypeAnnotation', 'name': '', 'range': [476, 480], 'children': [{'type': 'Type', 'name': 'Type', 'range': [477, 477], 'children': []}, {'type': 'GenericType', 'name': 'BaseModel', 'range': [479, 479], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'custom_dict_to_class', 'range': [484, 513], 'children': [{'type': 'Parameter', 'name': 'qualname', 'range': [487, 487], 'children': []}, {'type': 'Parameter', 'name': 'data', 'range': [489, 491], 'children': [{'type': 'TypeAnnotation', 'name': '', 'range': [490, 491], 'children': [{'type': 'Type', 'name': 'dict', 'range': [491, 491], 'children': []}]}]}, {'type': 'BlockStatement', 'name': '', 'range': [494, 510], 'children': [{'type': 'ExpressionStatement', 'name': '', 'range': [495, 501], 'children': [{'type': 'CallExpression', 'name': 'logger.debug', 'range': [495, 501], 'children': [{'type': 'Literal', 'name': '', 'range': [499, 500], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [503, 509], 'children': [{'type': 'CallExpression', 'name': 'model', 'range': [504, 509], 'children': [{'type': 'SpreadElement', 'name': '', 'range': [506, 508], 'children': []}]}]}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [512, 513], 'children': [{'type': 'Identifier', 'name': 'custom_dict_to_class', 'range': [513, 513], 'children': []}]}]}]}
2025-01-08 10:28:29,826 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:29,918 - INFO - Step 5 result: {'type': 'Program', 'name': 'PyroClient', 'range': [1089, 1102], 'children': [{'type': 'ClassDecl', 'name': 'PyroClient', 'range': [1089, 1091], 'children': []}, {'type': 'VariableDecl', 'name': 'proxy', 'range': [1093, 1099], 'children': [{'type': 'TypeAnnotation', 'name': 'Pyro5.api.Proxy', 'range': [1095, 1099], 'children': []}]}]}
2025-01-08 10:28:29,918 - INFO - Completed main AST analysis flow
2025-01-08 10:28:29,918 - INFO - Successfully processed chunk
2025-01-08 10:28:30,113 - INFO - Step 2 result: {'type': 'Program', 'name': 'expose', 'range': [228, 312], 'children': [{'type': 'FunctionDeclaration', 'name': 'wrapper', 'range': [247, 292], 'children': [{'type': 'ParameterList', 'name': '', 'range': [249, 256], 'children': [{'type': 'Parameter', 'name': 'args', 'range': [250, 251], 'children': []}, {'type': 'Parameter', 'name': 'kwargs', 'range': [254, 255], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [258, 292], 'children': [{'type': 'TryStatement', 'name': '', 'range': [259, 292], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [261, 272], 'children': [{'type': 'ReturnStatement', 'name': '', 'range': [262, 271], 'children': [{'type': 'CallExpression', 'name': 'func', 'range': [263, 270], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [264, 270], 'children': [{'type': 'Argument', 'name': 'args', 'range': [265, 266], 'children': []}, {'type': 'Argument', 'name': 'kwargs', 'range': [268, 269], 'children': []}]}]}]}]}, {'type': 'CatchClause', 'name': '', 'range': [273, 292], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [278, 292], 'children': [{'type': 'ExpressionStatement', 'name': '', 'range': [279, 283], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [279, 282], 'children': [{'type': 'Identifier', 'name': 'msg', 'range': [279, 280], 'children': []}, {'type': 'TemplateLiteral', 'name': '', 'range': [281, 282], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [284, 290], 'children': [{'type': 'CallExpression', 'name': 'logger.exception', 'range': [284, 289], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [287, 289], 'children': [{'type': 'Argument', 'name': 'msg', 'range': [288, 289], 'children': []}]}]}]}, {'type': 'RaiseStatement', 'name': '', 'range': [291, 292], 'children': []}]}]}]}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [294, 298], 'children': [{'type': 'CallExpression', 'name': 'register_pydantic_serializers', 'range': [294, 297], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [295, 297], 'children': [{'type': 'Argument', 'name': 'func', 'range': [296, 297], 'children': []}]}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [300, 311], 'children': [{'type': 'CallExpression', 'name': 'pyro.expose', 'range': [300, 306], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [304, 306], 'children': [{'type': 'Argument', 'name': 'wrapper', 'range': [305, 306], 'children': []}]}]}]}]}
2025-01-08 10:28:30,113 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:30,685 - INFO - Step 3 result: {'type': 'Program', 'name': '', 'range': [1304, 1323], 'children': [{'type': 'VariableDeclaration', 'name': 'builtin_types', 'range': [1304, 1320], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [1305, 1320], 'children': [{'type': 'ArrayExpression', 'name': '', 'range': [1306, 1320], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [1307, 1315], 'children': [{'type': 'Identifier', 'name': 'vars', 'range': [1308, 1308], 'children': []}, {'type': 'CallExpression', 'name': '', 'range': [1309, 1315], 'children': [{'type': 'Identifier', 'name': 'builtins', 'range': [1310, 1310], 'children': []}]}]}, {'type': 'Identifier', 'name': 'NoneType', 'range': [1317, 1317], 'children': []}, {'type': 'Identifier', 'name': 'Enum', 'range': [1319, 1319], 'children': []}]}]}]}]}
2025-01-08 10:28:30,685 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:33,438 - INFO - Step 2 result: {'type': 'Program', 'name': '', 'range': [99, 162], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [99, 103], 'children': [{'type': 'ImportSpecifier', 'name': 'Pyro5', 'range': [100, 100], 'children': []}, {'type': 'ImportSpecifier', 'name': 'api', 'range': [102, 102], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [104, 108], 'children': [{'type': 'ImportSpecifier', 'name': 'pydantic', 'range': [105, 105], 'children': []}, {'type': 'ImportSpecifier', 'name': 'BaseModel', 'range': [107, 107], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [109, 115], 'children': [{'type': 'ImportSpecifier', 'name': 'Pyro5', 'range': [110, 110], 'children': []}, {'type': 'ImportSpecifier', 'name': 'api', 'range': [112, 112], 'children': []}, {'type': 'ImportSpecifier', 'name': 'pyro', 'range': [114, 114], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [116, 122], 'children': [{'type': 'ImportSpecifier', 'name': 'Pyro5', 'range': [117, 117], 'children': []}, {'type': 'ImportSpecifier', 'name': 'config', 'range': [119, 119], 'children': []}, {'type': 'ImportSpecifier', 'name': 'pyro_config', 'range': [121, 121], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [124, 132], 'children': [{'type': 'ImportSpecifier', 'name': 'backend', 'range': [125, 125], 'children': []}, {'type': 'ImportSpecifier', 'name': 'data', 'range': [127, 127], 'children': []}, {'type': 'ImportSpecifier', 'name': 'db', 'range': [129, 129], 'children': []}, {'type': 'ImportSpecifier', 'name': 'redis', 'range': [131, 131], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [133, 141], 'children': [{'type': 'ImportSpecifier', 'name': 'backend', 'range': [134, 134], 'children': []}, {'type': 'ImportSpecifier', 'name': 'util', 'range': [136, 136], 'children': []}, {'type': 'ImportSpecifier', 'name': 'process', 'range': [138, 138], 'children': []}, {'type': 'ImportSpecifier', 'name': 'AppProcess', 'range': [140, 140], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [142, 150], 'children': [{'type': 'ImportSpecifier', 'name': 'backend', 'range': [143, 143], 'children': []}, {'type': 'ImportSpecifier', 'name': 'util', 'range': [145, 145], 'children': []}, {'type': 'ImportSpecifier', 'name': 'retry', 'range': [147, 147], 'children': []}, {'type': 'ImportSpecifier', 'name': 'conn_retry', 'range': [149, 149], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [151, 161], 'children': [{'type': 'ImportSpecifier', 'name': 'backend', 'range': [152, 152], 'children': []}, {'type': 'ImportSpecifier', 'name': 'util', 'range': [154, 154], 'children': []}, {'type': 'ImportSpecifier', 'name': 'settings', 'range': [156, 156], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Config', 'range': [158, 158], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Secrets', 'range': [160, 160], 'children': []}]}]}
2025-01-08 10:28:33,438 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:35,016 - INFO - Step 5 result: {'type': 'Program', 'name': '', 'range': [1052, 1088], 'children': [{'type': 'TypeAliasDeclaration', 'name': 'AS', 'range': [1076, 1085], 'children': [{'type': 'TypeParameter', 'name': 'TypeVar', 'range': [1078, 1085], 'children': [{'type': 'Literal', 'name': '"AS"', 'range': [1080, 1080], 'children': []}, {'type': 'Keyword', 'name': 'bound', 'range': [1082, 1082], 'children': []}, {'type': 'Identifier', 'name': 'AppService', 'range': [1084, 1084], 'children': []}]}]}]}
2025-01-08 10:28:35,020 - INFO - Completed main AST analysis flow
2025-01-08 10:28:35,020 - INFO - Successfully processed chunk
2025-01-08 10:28:35,370 - INFO - Step 3 result: {'type': 'Program', 'name': '', 'range': [163, 190], 'children': [{'type': 'VariableDeclaration', 'name': 'logger', 'range': [163, 170], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [164, 170], 'children': [{'type': 'MemberExpression', 'name': 'logging.getLogger', 'range': [165, 167], 'children': [{'type': 'Identifier', 'name': 'logging', 'range': [165, 165], 'children': []}, {'type': 'Identifier', 'name': 'getLogger', 'range': [167, 167], 'children': []}]}, {'type': 'CallExpression', 'name': '(', 'range': [168, 170], 'children': [{'type': 'Identifier', 'name': '__name__', 'range': [169, 169], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'T', 'range': [172, 177], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [173, 177], 'children': [{'type': 'CallExpression', 'name': 'TypeVar', 'range': [174, 177], 'children': [{'type': 'Literal', 'name': '"T"', 'range': [176, 176], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'C', 'range': [179, 188], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [180, 188], 'children': [{'type': 'CallExpression', 'name': 'TypeVar', 'range': [181, 188], 'children': [{'type': 'Literal', 'name': '"C"', 'range': [183, 183], 'children': []}, {'type': 'Keyword', 'name': 'bound', 'range': [185, 185], 'children': []}, {'type': 'Identifier', 'name': 'Callable', 'range': [187, 187], 'children': []}]}]}]}]}
2025-01-08 10:28:35,370 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:35,434 - INFO - Step 2 result: {'type': 'Program', 'name': '', 'range': [1143, 1302], 'children': [{'type': 'FunctionDeclaration', 'name': 'get_service_client', 'range': [1143, 1301], 'children': [{'type': 'Parameter', 'name': 'service_type', 'range': [1146, 1151], 'children': []}, {'type': 'ReturnType', 'name': 'AS', 'range': [1153, 1155], 'children': []}, {'type': 'Assignment', 'name': 'service_name', 'range': [1158, 1162], 'children': []}, {'type': 'ClassDeclaration', 'name': 'DynamicClient', 'range': [1165, 1290], 'children': [{'type': 'Inheritance', 'name': 'PyroClient', 'range': [1167, 1169], 'children': []}, {'type': 'Decorator', 'name': 'conn_retry', 'range': [1172, 1179], 'children': []}, {'type': 'MethodDeclaration', 'name': '__init__', 'range': [1181, 1254], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1184, 1185], 'children': []}, {'type': 'Assignment', 'name': 'host', 'range': [1188, 1200], 'children': []}, {'type': 'Assignment', 'name': 'uri', 'range': [1202, 1205], 'children': []}, {'type': 'ExpressionStatement', 'name': '', 'range': [1207, 1213], 'children': []}, {'type': 'Assignment', 'name': 'self.proxy', 'range': [1215, 1226], 'children': []}, {'type': 'ExpressionStatement', 'name': '', 'range': [1228, 1238], 'children': []}, {'type': 'ExpressionStatement', 'name': '', 'range': [1239, 1246], 'children': []}, {'type': 'ExpressionStatement', 'name': '', 'range': [1247, 1253], 'children': []}]}, {'type': 'MethodDeclaration', 'name': '__getattr__', 'range': [1256, 1290], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1259, 1260], 'children': []}, {'type': 'Parameter', 'name': 'name', 'range': [1261, 1264], 'children': []}, {'type': 'ReturnType', 'name': 'Callable', 'range': [1265, 1274], 'children': []}, {'type': 'Assignment', 'name': 'res', 'range': [1277, 1286], 'children': []}, {'type': 'ReturnStatement', 'name': '', 'range': [1288, 1289], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [1292, 1300], 'children': []}]}]}
2025-01-08 10:28:35,434 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:37,390 - INFO - Step 2 result: {'type': 'Program', 'name': '', 'range': [413, 471], 'children': [{'type': 'FunctionDeclaration', 'name': '_make_custom_serializer', 'range': [413, 470], 'children': [{'type': 'Parameter', 'name': 'model', 'range': [416, 421], 'children': [{'type': 'TypeAnnotation', 'name': '', 'range': [417, 421], 'children': [{'type': 'Type', 'name': 'Type', 'range': [418, 421], 'children': [{'type': 'GenericType', 'name': 'BaseModel', 'range': [419, 421], 'children': []}]}]}]}, {'type': 'FunctionDeclaration', 'name': 'custom_class_to_dict', 'range': [425, 465], 'children': [{'type': 'Parameter', 'name': 'obj', 'range': [428, 429], 'children': []}, {'type': 'VariableDeclaration', 'name': 'data', 'range': [432, 454], 'children': [{'type': 'ObjectLiteral', 'name': '', 'range': [434, 454], 'children': [{'type': 'Property', 'name': '__class__', 'range': [436, 443], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [438, 442], 'children': [{'type': 'Identifier', 'name': 'obj', 'range': [438, 438], 'children': []}, {'type': 'Identifier', 'name': '__class__', 'range': [440, 440], 'children': []}, {'type': 'Identifier', 'name': '__qualname__', 'range': [442, 442], 'children': []}]}]}, {'type': 'SpreadElement', 'name': '', 'range': [445, 452], 'children': [{'type': 'CallExpression', 'name': '', 'range': [447, 452], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [447, 449], 'children': [{'type': 'Identifier', 'name': 'obj', 'range': [447, 447], 'children': []}, {'type': 'Identifier', 'name': 'model_dump', 'range': [449, 449], 'children': []}]}]}]}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [456, 462], 'children': [{'type': 'CallExpression', 'name': '', 'range': [457, 462], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [457, 458], 'children': [{'type': 'Identifier', 'name': 'logger', 'range': [456, 456], 'children': []}, {'type': 'Identifier', 'name': 'debug', 'range': [458, 458], 'children': []}]}, {'type': 'TemplateLiteral', 'name': '', 'range': [459, 462], 'children': [{'type': 'TemplateElement', 'name': '', 'range': [460, 462], 'children': []}]}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [464, 465], 'children': [{'type': 'Identifier', 'name': 'data', 'range': [465, 465], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [468, 469], 'children': [{'type': 'Identifier', 'name': 'custom_class_to_dict', 'range': [469, 469], 'children': []}]}]}]}
2025-01-08 10:28:37,391 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:39,180 - INFO - Step 4 result: {'type': 'Program', 'name': '', 'range': [1304, 1323], 'children': [{'type': 'VariableDeclaration', 'name': 'builtin_types', 'range': [1304, 1320], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [1305, 1320], 'children': [{'type': 'ArrayExpression', 'name': '', 'range': [1306, 1320], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [1307, 1315], 'children': [{'type': 'Identifier', 'name': 'vars', 'range': [1308, 1308], 'children': []}, {'type': 'CallExpression', 'name': '', 'range': [1309, 1315], 'children': [{'type': 'Identifier', 'name': 'builtins', 'range': [1310, 1310], 'children': []}]}]}, {'type': 'Identifier', 'name': 'NoneType', 'range': [1317, 1317], 'children': []}, {'type': 'Identifier', 'name': 'Enum', 'range': [1319, 1319], 'children': []}]}]}]}]}
2025-01-08 10:28:39,181 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:28:41,720 - INFO - Step 3 result: {'type': 'Program', 'name': 'close_service_client', 'range': [1103, 1142], 'children': [{'type': 'FunctionDef', 'name': 'close_service_client', 'range': [1103, 1142], 'children': [{'type': 'Parameters', 'name': 'parameters', 'range': [1105, 1109], 'children': [{'type': 'Parameter', 'name': 'client', 'range': [1106, 1108], 'children': []}]}, {'type': 'ReturnType', 'name': 'return_type', 'range': [1110, 1112], 'children': []}, {'type': 'Block', 'name': 'block', 'range': [1114, 1142], 'children': [{'type': 'IfStatement', 'name': 'if_statement', 'range': [1115, 1131], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [1116, 1121], 'children': [{'type': 'FunctionCall', 'name': 'isinstance', 'range': [1116, 1121], 'children': [{'type': 'Arguments', 'name': 'arguments', 'range': [1117, 1121], 'children': [{'type': 'Variable', 'name': 'client', 'range': [1118, 1118], 'children': []}, {'type': 'Type', 'name': 'PyroClient', 'range': [1120, 1120], 'children': []}]}]}]}, {'type': 'Block', 'name': 'block', 'range': [1123, 1131], 'children': [{'type': 'ExpressionStatement', 'name': 'expression_statement', 'range': [1124, 1130], 'children': [{'type': 'FunctionCall', 'name': '_pyroRelease', 'range': [1128, 1130], 'children': [{'type': 'MemberAccess', 'name': 'proxy', 'range': [1125, 1127], 'children': [{'type': 'Variable', 'name': 'client', 'range': [1124, 1124], 'children': []}]}]}]}]}]}, {'type': 'ElseStatement', 'name': 'else_statement', 'range': [1132, 1141], 'children': [{'type': 'Block', 'name': 'block', 'range': [1134, 1141], 'children': [{'type': 'RaiseStatement', 'name': 'raise_statement', 'range': [1135, 1140], 'children': [{'type': 'FunctionCall', 'name': 'RuntimeError', 'range': [1136, 1140], 'children': [{'type': 'Arguments', 'name': 'arguments', 'range': [1137, 1140], 'children': [{'type': 'StringLiteral', 'name': 'error_message', 'range': [1139, 1139], 'children': []}]}]}]}]}]}]}]}]}
2025-01-08 10:28:41,720 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:42,284 - INFO - Step 3 result: {'nodes': [{'type': 'VariableDeclaration', 'name': 'config', 'range': [191, 195], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [192, 195], 'children': [{'type': 'CallExpression', 'name': 'Config', 'range': [193, 195], 'children': []}]}]}, {'type': 'AssignmentExpression', 'name': 'pyro_host', 'range': [197, 201], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [200, 201], 'children': [{'type': 'Identifier', 'name': 'config', 'range': [199, 199], 'children': []}, {'type': 'Identifier', 'name': 'pyro_host', 'range': [201, 201], 'children': []}]}]}, {'type': 'AssignmentExpression', 'name': 'pyro_config.MAX_RETRIES', 'range': [203, 209], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [204, 205], 'children': [{'type': 'Identifier', 'name': 'pyro_config', 'range': [203, 203], 'children': []}, {'type': 'Identifier', 'name': 'MAX_RETRIES', 'range': [205, 205], 'children': []}]}, {'type': 'AssignmentExpression', 'name': '=', 'range': [206, 209], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [208, 209], 'children': [{'type': 'Identifier', 'name': 'config', 'range': [207, 207], 'children': []}, {'type': 'Identifier', 'name': 'pyro_client_comm_retry', 'range': [209, 209], 'children': []}]}]}]}, {'type': 'AssignmentExpression', 'name': 'pyro_config.COMMTIMEOUT', 'range': [215, 221], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [216, 217], 'children': [{'type': 'Identifier', 'name': 'pyro_config', 'range': [215, 215], 'children': []}, {'type': 'Identifier', 'name': 'COMMTIMEOUT', 'range': [217, 217], 'children': []}]}, {'type': 'AssignmentExpression', 'name': '=', 'range': [218, 221], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [220, 221], 'children': [{'type': 'Identifier', 'name': 'config', 'range': [219, 219], 'children': []}, {'type': 'Identifier', 'name': 'pyro_client_comm_timeout', 'range': [221, 221], 'children': []}]}]}]}]}
2025-01-08 10:28:42,284 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:44,197 - INFO - Step 3 result: {'type': 'Program', 'name': '', 'range': [472, 515], 'children': [{'type': 'FunctionDeclaration', 'name': '_make_custom_deserializer', 'range': [472, 514], 'children': [{'type': 'Parameter', 'name': 'model', 'range': [475, 480], 'children': [{'type': 'TypeAnnotation', 'name': '', 'range': [476, 480], 'children': [{'type': 'Type', 'name': 'Type', 'range': [477, 477], 'children': []}, {'type': 'GenericType', 'name': 'BaseModel', 'range': [479, 479], 'children': []}]}]}, {'type': 'FunctionDeclaration', 'name': 'custom_dict_to_class', 'range': [484, 513], 'children': [{'type': 'Parameter', 'name': 'qualname', 'range': [487, 487], 'children': []}, {'type': 'Parameter', 'name': 'data', 'range': [489, 491], 'children': [{'type': 'TypeAnnotation', 'name': '', 'range': [490, 491], 'children': [{'type': 'Type', 'name': 'dict', 'range': [491, 491], 'children': []}]}]}, {'type': 'BlockStatement', 'name': '', 'range': [494, 510], 'children': [{'type': 'ExpressionStatement', 'name': '', 'range': [495, 501], 'children': [{'type': 'CallExpression', 'name': 'logger.debug', 'range': [495, 501], 'children': [{'type': 'Literal', 'name': '', 'range': [499, 500], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [503, 509], 'children': [{'type': 'CallExpression', 'name': 'model', 'range': [504, 509], 'children': [{'type': 'SpreadElement', 'name': '', 'range': [506, 508], 'children': []}]}]}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [512, 513], 'children': [{'type': 'Identifier', 'name': 'custom_dict_to_class', 'range': [513, 513], 'children': []}]}]}]}
2025-01-08 10:28:44,197 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:45,564 - INFO - Step 2 result: {'type': 'Program', 'name': '', 'range': [0, 98], 'children': [{'type': 'ImportDeclaration', 'name': 'asyncio', 'range': [0, 2], 'children': [{'type': 'ImportSpecifier', 'name': 'asyncio', 'range': [0, 2], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'builtins', 'range': [3, 5], 'children': [{'type': 'ImportSpecifier', 'name': 'builtins', 'range': [3, 5], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'logging', 'range': [6, 8], 'children': [{'type': 'ImportSpecifier', 'name': 'logging', 'range': [6, 8], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'os', 'range': [9, 11], 'children': [{'type': 'ImportSpecifier', 'name': 'os', 'range': [9, 11], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'threading', 'range': [12, 14], 'children': [{'type': 'ImportSpecifier', 'name': 'threading', 'range': [12, 14], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'time', 'range': [15, 17], 'children': [{'type': 'ImportSpecifier', 'name': 'time', 'range': [15, 17], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'typing', 'range': [18, 20], 'children': [{'type': 'ImportSpecifier', 'name': 'typing', 'range': [18, 20], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'ABC, abstractmethod', 'range': [21, 27], 'children': [{'type': 'ImportSpecifier', 'name': 'ABC', 'range': [21, 25], 'children': []}, {'type': 'ImportSpecifier', 'name': 'abstractmethod', 'range': [26, 27], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'Enum', 'range': [28, 32], 'children': [{'type': 'ImportSpecifier', 'name': 'Enum', 'range': [28, 32], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'NoneType, UnionType', 'range': [33, 39], 'children': [{'type': 'ImportSpecifier', 'name': 'NoneType', 'range': [33, 37], 'children': []}, {'type': 'ImportSpecifier', 'name': 'UnionType', 'range': [38, 39], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'Annotated, Any, Awaitable, Callable, Coroutine, Dict, FrozenSet, Iterator, List, Set, Tuple, Type, TypeVar, Union, cast, get_args, get_origin', 'range': [40, 97], 'children': [{'type': 'ImportSpecifier', 'name': 'Annotated', 'range': [40, 45], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Any', 'range': [46, 48], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Awaitable', 'range': [49, 51], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Callable', 'range': [52, 54], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Coroutine', 'range': [55, 57], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Dict', 'range': [58, 60], 'children': []}, {'type': 'ImportSpecifier', 'name': 'FrozenSet', 'range': [61, 63], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Iterator', 'range': [64, 66], 'children': []}, {'type': 'ImportSpecifier', 'name': 'List', 'range': [67, 69], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Set', 'range': [70, 72], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Tuple', 'range': [73, 75], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Type', 'range': [76, 78], 'children': []}, {'type': 'ImportSpecifier', 'name': 'TypeVar', 'range': [79, 81], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Union', 'range': [82, 84], 'children': []}, {'type': 'ImportSpecifier', 'name': 'cast', 'range': [85, 87], 'children': []}, {'type': 'ImportSpecifier', 'name': 'get_args', 'range': [88, 90], 'children': []}, {'type': 'ImportSpecifier', 'name': 'get_origin', 'range': [91, 93], 'children': []}]}]}
2025-01-08 10:28:45,564 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:47,226 - INFO - Step 5 result: {'type': 'Program', 'name': '', 'range': [1304, 1323], 'children': [{'type': 'VariableDeclaration', 'name': 'builtin_types', 'range': [1304, 1320], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [1305, 1320], 'children': [{'type': 'ArrayExpression', 'name': '', 'range': [1306, 1320], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [1307, 1315], 'children': [{'type': 'Identifier', 'name': 'vars', 'range': [1308, 1308], 'children': []}, {'type': 'CallExpression', 'name': '', 'range': [1309, 1315], 'children': [{'type': 'Identifier', 'name': 'builtins', 'range': [1310, 1310], 'children': []}]}]}, {'type': 'Identifier', 'name': 'NoneType', 'range': [1317, 1317], 'children': []}, {'type': 'Identifier', 'name': 'Enum', 'range': [1319, 1319], 'children': []}]}]}]}]}
2025-01-08 10:28:47,226 - INFO - Completed main AST analysis flow
2025-01-08 10:28:47,228 - INFO - Successfully processed chunk
2025-01-08 10:28:49,166 - INFO - Step 4 result: {'type': 'Program', 'name': '', 'range': [163, 190], 'children': [{'type': 'VariableDeclaration', 'name': 'logger', 'range': [163, 170], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [164, 170], 'children': [{'type': 'MemberExpression', 'name': 'logging.getLogger', 'range': [165, 167], 'children': [{'type': 'Identifier', 'name': 'logging', 'range': [165, 165], 'children': []}, {'type': 'Identifier', 'name': 'getLogger', 'range': [167, 167], 'children': []}]}, {'type': 'CallExpression', 'name': '(', 'range': [168, 170], 'children': [{'type': 'Identifier', 'name': '__name__', 'range': [169, 169], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'T', 'range': [172, 177], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [173, 177], 'children': [{'type': 'CallExpression', 'name': 'TypeVar', 'range': [174, 177], 'children': [{'type': 'Literal', 'name': '"T"', 'range': [176, 176], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'C', 'range': [179, 188], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [180, 188], 'children': [{'type': 'CallExpression', 'name': 'TypeVar', 'range': [181, 188], 'children': [{'type': 'Literal', 'name': '"C"', 'range': [183, 183], 'children': []}, {'type': 'Keyword', 'name': 'bound', 'range': [185, 185], 'children': []}, {'type': 'Identifier', 'name': 'Callable', 'range': [187, 187], 'children': []}]}]}]}]}
2025-01-08 10:28:49,166 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:28:52,951 - INFO - Step 3 result: {'type': 'Program', 'name': 'expose', 'range': [228, 312], 'children': [{'type': 'FunctionDeclaration', 'name': 'wrapper', 'range': [247, 292], 'children': [{'type': 'ParameterList', 'name': '', 'range': [249, 256], 'children': [{'type': 'Parameter', 'name': 'args', 'range': [250, 251], 'children': []}, {'type': 'Parameter', 'name': 'kwargs', 'range': [254, 255], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [258, 292], 'children': [{'type': 'TryStatement', 'name': '', 'range': [259, 292], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [261, 272], 'children': [{'type': 'ReturnStatement', 'name': '', 'range': [262, 271], 'children': [{'type': 'CallExpression', 'name': 'func', 'range': [263, 270], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [264, 270], 'children': [{'type': 'Argument', 'name': 'args', 'range': [265, 266], 'children': []}, {'type': 'Argument', 'name': 'kwargs', 'range': [268, 269], 'children': []}]}]}]}]}, {'type': 'CatchClause', 'name': '', 'range': [273, 292], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [278, 292], 'children': [{'type': 'ExpressionStatement', 'name': '', 'range': [279, 283], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [279, 282], 'children': [{'type': 'Identifier', 'name': 'msg', 'range': [279, 280], 'children': []}, {'type': 'TemplateLiteral', 'name': '', 'range': [281, 282], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [284, 290], 'children': [{'type': 'CallExpression', 'name': 'logger.exception', 'range': [284, 289], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [287, 289], 'children': [{'type': 'Argument', 'name': 'msg', 'range': [288, 289], 'children': []}]}]}]}, {'type': 'RaiseStatement', 'name': '', 'range': [291, 292], 'children': []}]}]}]}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [294, 298], 'children': [{'type': 'CallExpression', 'name': 'register_pydantic_serializers', 'range': [294, 297], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [295, 297], 'children': [{'type': 'Argument', 'name': 'func', 'range': [296, 297], 'children': []}]}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [300, 311], 'children': [{'type': 'CallExpression', 'name': 'pyro.expose', 'range': [300, 306], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [304, 306], 'children': [{'type': 'Argument', 'name': 'wrapper', 'range': [305, 306], 'children': []}]}]}]}]}
2025-01-08 10:28:52,951 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:53,276 - INFO - Step 3 result: {'type': 'Program', 'name': '', 'range': [1143, 1302], 'children': [{'type': 'FunctionDeclaration', 'name': 'get_service_client', 'range': [1143, 1301], 'children': [{'type': 'Parameter', 'name': 'service_type', 'range': [1146, 1151], 'children': []}, {'type': 'ReturnType', 'name': 'AS', 'range': [1153, 1155], 'children': []}, {'type': 'Assignment', 'name': 'service_name', 'range': [1158, 1162], 'children': []}, {'type': 'ClassDeclaration', 'name': 'DynamicClient', 'range': [1165, 1290], 'children': [{'type': 'Inheritance', 'name': 'PyroClient', 'range': [1167, 1169], 'children': []}, {'type': 'Decorator', 'name': 'conn_retry', 'range': [1172, 1179], 'children': []}, {'type': 'MethodDeclaration', 'name': '__init__', 'range': [1181, 1254], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1184, 1185], 'children': []}, {'type': 'Assignment', 'name': 'host', 'range': [1188, 1200], 'children': []}, {'type': 'Assignment', 'name': 'uri', 'range': [1202, 1205], 'children': []}, {'type': 'ExpressionStatement', 'name': '', 'range': [1207, 1213], 'children': []}, {'type': 'Assignment', 'name': 'self.proxy', 'range': [1215, 1226], 'children': []}, {'type': 'ExpressionStatement', 'name': '', 'range': [1239, 1246], 'children': []}, {'type': 'ExpressionStatement', 'name': '', 'range': [1247, 1253], 'children': []}]}, {'type': 'MethodDeclaration', 'name': '__getattr__', 'range': [1256, 1290], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1259, 1260], 'children': []}, {'type': 'Parameter', 'name': 'name', 'range': [1261, 1264], 'children': []}, {'type': 'ReturnType', 'name': 'Callable', 'range': [1265, 1274], 'children': []}, {'type': 'Assignment', 'name': 'res', 'range': [1277, 1286], 'children': []}, {'type': 'ReturnStatement', 'name': '', 'range': [1288, 1289], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [1292, 1300], 'children': []}]}]}
2025-01-08 10:28:53,276 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:57,913 - INFO - Step 4 result: {'type': 'Program', 'name': '', 'range': [472, 515], 'children': [{'type': 'FunctionDecl', 'name': '_make_custom_deserializer', 'range': [472, 514], 'children': [{'type': 'Parameter', 'name': 'model', 'range': [475, 480], 'children': [{'type': 'TypeAnnotation', 'name': '', 'range': [476, 480], 'children': [{'type': 'Type', 'name': 'Type', 'range': [477, 477], 'children': []}, {'type': 'GenericType', 'name': 'BaseModel', 'range': [479, 479], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'custom_dict_to_class', 'range': [484, 513], 'children': [{'type': 'Parameter', 'name': 'qualname', 'range': [487, 487], 'children': []}, {'type': 'Parameter', 'name': 'data', 'range': [489, 491], 'children': [{'type': 'TypeAnnotation', 'name': '', 'range': [490, 491], 'children': [{'type': 'Type', 'name': 'dict', 'range': [491, 491], 'children': []}]}]}, {'type': 'BlockStatement', 'name': '', 'range': [494, 510], 'children': [{'type': 'ExpressionStatement', 'name': '', 'range': [495, 501], 'children': [{'type': 'CallExpression', 'name': 'logger.debug', 'range': [495, 501], 'children': [{'type': 'Literal', 'name': '', 'range': [499, 500], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [503, 509], 'children': [{'type': 'CallExpression', 'name': 'model', 'range': [504, 509], 'children': [{'type': 'SpreadElement', 'name': '', 'range': [506, 508], 'children': []}]}]}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [512, 513], 'children': [{'type': 'Identifier', 'name': 'custom_dict_to_class', 'range': [513, 513], 'children': []}]}]}]}
2025-01-08 10:28:57,913 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:28:57,982 - INFO - Step 3 result: {'type': 'Program', 'name': '', 'range': [99, 162], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [99, 103], 'children': [{'type': 'ImportSpecifier', 'name': 'Pyro5', 'range': [100, 100], 'children': []}, {'type': 'ImportSpecifier', 'name': 'api', 'range': [102, 102], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [104, 108], 'children': [{'type': 'ImportSpecifier', 'name': 'pydantic', 'range': [105, 105], 'children': []}, {'type': 'ImportSpecifier', 'name': 'BaseModel', 'range': [107, 107], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [109, 115], 'children': [{'type': 'ImportSpecifier', 'name': 'Pyro5', 'range': [110, 110], 'children': []}, {'type': 'ImportSpecifier', 'name': 'api', 'range': [112, 112], 'children': []}, {'type': 'ImportSpecifier', 'name': 'pyro', 'range': [114, 114], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [116, 122], 'children': [{'type': 'ImportSpecifier', 'name': 'Pyro5', 'range': [117, 117], 'children': []}, {'type': 'ImportSpecifier', 'name': 'config', 'range': [119, 119], 'children': []}, {'type': 'ImportSpecifier', 'name': 'pyro_config', 'range': [121, 121], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [124, 132], 'children': [{'type': 'ImportSpecifier', 'name': 'backend', 'range': [125, 125], 'children': []}, {'type': 'ImportSpecifier', 'name': 'data', 'range': [127, 127], 'children': []}, {'type': 'ImportSpecifier', 'name': 'db', 'range': [129, 129], 'children': []}, {'type': 'ImportSpecifier', 'name': 'redis', 'range': [131, 131], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [133, 141], 'children': [{'type': 'ImportSpecifier', 'name': 'backend', 'range': [134, 134], 'children': []}, {'type': 'ImportSpecifier', 'name': 'util', 'range': [136, 136], 'children': []}, {'type': 'ImportSpecifier', 'name': 'process', 'range': [138, 138], 'children': []}, {'type': 'ImportSpecifier', 'name': 'AppProcess', 'range': [140, 140], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [142, 150], 'children': [{'type': 'ImportSpecifier', 'name': 'backend', 'range': [143, 143], 'children': []}, {'type': 'ImportSpecifier', 'name': 'util', 'range': [145, 145], 'children': []}, {'type': 'ImportSpecifier', 'name': 'retry', 'range': [147, 147], 'children': []}, {'type': 'ImportSpecifier', 'name': 'conn_retry', 'range': [149, 149], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [151, 161], 'children': [{'type': 'ImportSpecifier', 'name': 'backend', 'range': [152, 152], 'children': []}, {'type': 'ImportSpecifier', 'name': 'util', 'range': [154, 154], 'children': []}, {'type': 'ImportSpecifier', 'name': 'settings', 'range': [156, 156], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Config', 'range': [158, 158], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Secrets', 'range': [160, 160], 'children': []}]}]}
2025-01-08 10:28:57,982 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:58,106 - INFO - Step 3 result: {'type': 'Program', 'name': '', 'range': [413, 471], 'children': [{'type': 'FunctionDeclaration', 'name': '_make_custom_serializer', 'range': [413, 470], 'children': [{'type': 'Parameter', 'name': 'model', 'range': [416, 421], 'children': [{'type': 'TypeAnnotation', 'name': '', 'range': [417, 421], 'children': [{'type': 'Type', 'name': 'Type', 'range': [418, 421], 'children': [{'type': 'GenericType', 'name': 'BaseModel', 'range': [419, 421], 'children': []}]}]}]}, {'type': 'FunctionDeclaration', 'name': 'custom_class_to_dict', 'range': [425, 465], 'children': [{'type': 'Parameter', 'name': 'obj', 'range': [428, 429], 'children': []}, {'type': 'VariableDeclaration', 'name': 'data', 'range': [432, 454], 'children': [{'type': 'ObjectLiteral', 'name': '', 'range': [434, 454], 'children': [{'type': 'Property', 'name': '__class__', 'range': [436, 443], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [438, 442], 'children': [{'type': 'Identifier', 'name': 'obj', 'range': [438, 438], 'children': []}, {'type': 'Identifier', 'name': '__class__', 'range': [440, 440], 'children': []}, {'type': 'Identifier', 'name': '__qualname__', 'range': [442, 442], 'children': []}]}]}, {'type': 'SpreadElement', 'name': '', 'range': [445, 452], 'children': [{'type': 'CallExpression', 'name': '', 'range': [447, 452], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [447, 449], 'children': [{'type': 'Identifier', 'name': 'obj', 'range': [447, 447], 'children': []}, {'type': 'Identifier', 'name': 'model_dump', 'range': [449, 449], 'children': []}]}]}]}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [456, 462], 'children': [{'type': 'CallExpression', 'name': '', 'range': [457, 462], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [457, 458], 'children': [{'type': 'Identifier', 'name': 'logger', 'range': [456, 456], 'children': []}, {'type': 'Identifier', 'name': 'debug', 'range': [458, 458], 'children': []}]}, {'type': 'TemplateLiteral', 'name': '', 'range': [459, 462], 'children': [{'type': 'TemplateElement', 'name': '', 'range': [460, 462], 'children': []}]}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [464, 465], 'children': [{'type': 'Identifier', 'name': 'data', 'range': [465, 465], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [468, 469], 'children': [{'type': 'Identifier', 'name': 'custom_class_to_dict', 'range': [469, 469], 'children': []}]}]}]}
2025-01-08 10:28:58,106 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:58,552 - INFO - Step 2 result: {'type': 'Program', 'name': 'AppService', 'range': [516, 1051], 'children': [{'type': 'ClassDeclaration', 'name': 'AppService', 'range': [516, 522], 'children': [{'type': 'Inheritance', 'name': 'AppProcess, ABC', 'range': [518, 522], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'shared_event_loop', 'range': [525, 529], 'children': [{'type': 'TypeAnnotation', 'name': 'asyncio.AbstractEventLoop', 'range': [527, 529], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'use_db', 'range': [531, 535], 'children': [{'type': 'TypeAnnotation', 'name': 'bool', 'range': [533, 535], 'children': []}, {'type': 'Assignment', 'name': 'False', 'range': [535, 535], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'use_redis', 'range': [537, 541], 'children': [{'type': 'TypeAnnotation', 'name': 'bool', 'range': [539, 541], 'children': []}, {'type': 'Assignment', 'name': 'False', 'range': [541, 541], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'use_supabase', 'range': [543, 547], 'children': [{'type': 'TypeAnnotation', 'name': 'bool', 'range': [545, 547], 'children': []}, {'type': 'Assignment', 'name': 'False', 'range': [547, 547], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': '__init__', 'range': [550, 562], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [553, 553], 'children': []}, {'type': 'Assignment', 'name': 'self.uri = None', 'range': [557, 561], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': 'get_port', 'range': [570, 580], 'children': [{'type': 'Parameter', 'name': 'cls', 'range': [573, 573], 'children': []}, {'type': 'ReturnType', 'name': 'int', 'range': [577, 577], 'children': []}, {'type': 'Block', 'name': 'pass', 'range': [580, 580], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': 'get_host', 'range': [586, 610], 'children': [{'type': 'Parameter', 'name': 'cls', 'range': [589, 589], 'children': []}, {'type': 'ReturnType', 'name': 'str', 'range': [593, 593], 'children': []}, {'type': 'Block', 'name': 'return os.environ.get(f"{cls.service_name.upper()}_HOST", config.pyro_host)', 'range': [596, 610], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': 'run_service', 'range': [612, 632], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [615, 615], 'children': []}, {'type': 'ReturnType', 'name': 'None', 'range': [619, 619], 'children': []}, {'type': 'Block', 'name': 'while True: time.sleep(10)', 'range': [622, 632], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': '__run_async', 'range': [634, 663], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [637, 637], 'children': []}, {'type': 'Parameter', 'name': 'coro', 'range': [639, 639], 'children': [{'type': 'TypeAnnotation', 'name': 'Coroutine[Any, Any, T]', 'range': [641, 648], 'children': []}]}, {'type': 'Block', 'name': 'return asyncio.run_coroutine_threadsafe(coro, self.shared_event_loop)', 'range': [652, 663], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': 'run_and_wait', 'range': [665, 701], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [668, 668], 'children': []}, {'type': 'Parameter', 'name': 'coro', 'range': [670, 670], 'children': [{'type': 'TypeAnnotation', 'name': 'Coroutine[Any, Any, T]', 'range': [672, 679], 'children': []}]}, {'type': 'ReturnType', 'name': 'T', 'range': [683, 683], 'children': []}, {'type': 'Block', 'name': 'future = self.__run_async(coro) return future.result()', 'range': [686, 701], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': 'run', 'range': [703, 786], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [706, 706], 'children': []}, {'type': 'Block', 'name': 'self.shared_event_loop = asyncio.get_event_loop() if self.use_db: self.shared_event_loop.run_until_complete(db.connect()) if self.use_redis: redis.connect() if self.use_supabase: from supabase import create_client secrets = Secrets() self.supabase = create_client(secrets.supabase_url, secrets.supabase_service_role_key) async_thread = threading.Thread(target=self.__start_async_loop) async_thread.daemon = True async_thread.start() daemon_thread = threading.Thread(target=self.__start_pyro) daemon_thread.daemon = True daemon_thread.start() self.run_service()', 'range': [710, 786], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': 'cleanup', 'range': [876, 928], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [879, 879], 'children': []}, {'type': 'Block', 'name': 'if self.use_db: logger.info(f"[{self.__class__.__name__}] ⏳ Disconnecting DB...") self.run_and_wait(db.disconnect()) if self.use_redis: logger.info(f"[{self.__class__.__name__}] ⏳ Disconnecting Redis...") redis.disconnect()', 'range': [883, 928], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': '__start_pyro', 'range': [937, 1034], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [940, 940], 'children': []}, {'type': 'Block', 'name': 'maximum_connection_thread_count = max(Pyro5.config.THREADPOOL_SIZE, config.num_node_workers * config.num_graph_workers) Pyro5.config.THREADPOOL_SIZE = maximum_connection_thread_count daemon = Pyro5.api.Daemon(host=config.pyro_host, port=self.get_port()) self.uri = daemon.register(self, objectId=self.service_name) logger.info(f"[{self.service_name}] Connected to Pyro; URI = {self.uri}") daemon.requestLoop()', 'range': [944, 1034], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': '__start_async_loop', 'range': [1035, 1050], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1038, 1038], 'children': []}, {'type': 'Block', 'name': 'self.shared_event_loop.run_forever()', 'range': [1042, 1050], 'children': []}]}]}
2025-01-08 10:28:58,552 - INFO - Starting Step 3: AST simplification
2025-01-08 10:28:58,895 - INFO - Step 4 result: {'type': 'Program', 'name': 'close_service_client', 'range': [1103, 1142], 'children': [{'type': 'FunctionDecl', 'name': 'close_service_client', 'range': [1103, 1142], 'children': [{'type': 'Parameters', 'name': 'parameters', 'range': [1105, 1109], 'children': [{'type': 'Parameter', 'name': 'client', 'range': [1106, 1108], 'children': []}]}, {'type': 'ReturnType', 'name': 'return_type', 'range': [1110, 1112], 'children': []}, {'type': 'Block', 'name': 'block', 'range': [1114, 1142], 'children': [{'type': 'IfStatement', 'name': 'if_statement', 'range': [1115, 1131], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [1116, 1121], 'children': [{'type': 'CallExpression', 'name': 'isinstance', 'range': [1116, 1121], 'children': [{'type': 'Arguments', 'name': 'arguments', 'range': [1117, 1121], 'children': [{'type': 'Identifier', 'name': 'client', 'range': [1118, 1118], 'children': []}, {'type': 'Identifier', 'name': 'PyroClient', 'range': [1120, 1120], 'children': []}]}]}]}, {'type': 'Block', 'name': 'block', 'range': [1123, 1131], 'children': [{'type': 'ExpressionStatement', 'name': 'expression_statement', 'range': [1124, 1130], 'children': [{'type': 'CallExpression', 'name': '_pyroRelease', 'range': [1128, 1130], 'children': [{'type': 'MemberExpression', 'name': 'proxy', 'range': [1125, 1127], 'children': [{'type': 'Identifier', 'name': 'client', 'range': [1124, 1124], 'children': []}]}]}]}]}]}, {'type': 'ElseStatement', 'name': 'else_statement', 'range': [1132, 1141], 'children': [{'type': 'Block', 'name': 'block', 'range': [1134, 1141], 'children': [{'type': 'RaiseStatement', 'name': 'raise_statement', 'range': [1135, 1140], 'children': [{'type': 'CallExpression', 'name': 'RuntimeError', 'range': [1136, 1140], 'children': [{'type': 'Arguments', 'name': 'arguments', 'range': [1137, 1140], 'children': [{'type': 'Literal', 'name': 'error_message', 'range': [1139, 1139], 'children': []}]}]}]}]}]}]}]}]}
2025-01-08 10:28:58,895 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:28:59,021 - INFO - Step 4 result: {'nodes': [{'type': 'VariableDeclaration', 'name': 'config', 'range': [191, 195], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [192, 195], 'children': [{'type': 'CallExpression', 'name': 'Config', 'range': [193, 195], 'children': []}]}]}, {'type': 'AssignmentExpression', 'name': 'pyro_host', 'range': [197, 201], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [200, 201], 'children': [{'type': 'Identifier', 'name': 'config', 'range': [199, 199], 'children': []}, {'type': 'Identifier', 'name': 'pyro_host', 'range': [201, 201], 'children': []}]}]}, {'type': 'AssignmentExpression', 'name': 'pyro_config.MAX_RETRIES', 'range': [203, 209], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [204, 205], 'children': [{'type': 'Identifier', 'name': 'pyro_config', 'range': [203, 203], 'children': []}, {'type': 'Identifier', 'name': 'MAX_RETRIES', 'range': [205, 205], 'children': []}]}, {'type': 'AssignmentExpression', 'name': '=', 'range': [206, 209], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [208, 209], 'children': [{'type': 'Identifier', 'name': 'config', 'range': [207, 207], 'children': []}, {'type': 'Identifier', 'name': 'pyro_client_comm_retry', 'range': [209, 209], 'children': []}]}]}]}, {'type': 'AssignmentExpression', 'name': 'pyro_config.COMMTIMEOUT', 'range': [215, 221], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [216, 217], 'children': [{'type': 'Identifier', 'name': 'pyro_config', 'range': [215, 215], 'children': []}, {'type': 'Identifier', 'name': 'COMMTIMEOUT', 'range': [217, 217], 'children': []}]}, {'type': 'AssignmentExpression', 'name': '=', 'range': [218, 221], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [220, 221], 'children': [{'type': 'Identifier', 'name': 'config', 'range': [219, 219], 'children': []}, {'type': 'Identifier', 'name': 'pyro_client_comm_timeout', 'range': [221, 221], 'children': []}]}]}]}]}
2025-01-08 10:28:59,022 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:29:02,151 - INFO - Step 5 result: {'type': 'Program', 'name': 'MainOrSomething', 'range': [163, 188], 'children': [{'type': 'VariableDeclaration', 'name': 'logger', 'range': [163, 170], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [164, 170], 'children': [{'type': 'MemberExpression', 'name': 'logging.getLogger', 'range': [165, 167], 'children': [{'type': 'Identifier', 'name': 'logging', 'range': [165, 165], 'children': []}, {'type': 'Identifier', 'name': 'getLogger', 'range': [167, 167], 'children': []}]}, {'type': 'CallExpression', 'name': '(', 'range': [168, 170], 'children': [{'type': 'Identifier', 'name': '__name__', 'range': [169, 169], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'T', 'range': [172, 177], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [173, 177], 'children': [{'type': 'CallExpression', 'name': 'TypeVar', 'range': [174, 177], 'children': [{'type': 'Literal', 'name': '"T"', 'range': [176, 176], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'C', 'range': [179, 188], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [180, 188], 'children': [{'type': 'CallExpression', 'name': 'TypeVar', 'range': [181, 188], 'children': [{'type': 'Literal', 'name': '"C"', 'range': [183, 183], 'children': []}, {'type': 'Keyword', 'name': 'bound', 'range': [185, 185], 'children': []}, {'type': 'Identifier', 'name': 'Callable', 'range': [187, 187], 'children': []}]}]}]}]}
2025-01-08 10:29:02,151 - INFO - Completed main AST analysis flow
2025-01-08 10:29:02,151 - INFO - Successfully processed chunk
2025-01-08 10:29:05,628 - INFO - Step 2 result: {'type': 'Program', 'name': 'register_pydantic_serializers', 'range': [313, 412], 'children': [{'type': 'FunctionDeclaration', 'name': 'register_pydantic_serializers', 'range': [313, 412], 'children': [{'type': 'FunctionSignature', 'name': 'register_pydantic_serializers', 'range': [313, 320], 'children': [{'type': 'Keyword', 'name': 'def', 'range': [313, 313], 'children': []}, {'type': 'Identifier', 'name': 'register_pydantic_serializers', 'range': [314, 314], 'children': []}, {'type': 'ParameterList', 'name': '', 'range': [315, 319], 'children': [{'type': 'Parameter', 'name': 'func', 'range': [316, 316], 'children': []}, {'type': 'TypeAnnotation', 'name': '', 'range': [317, 318], 'children': [{'type': 'Keyword', 'name': ':', 'range': [317, 317], 'children': []}, {'type': 'Type', 'name': 'Callable', 'range': [318, 318], 'children': []}]}]}, {'type': 'Keyword', 'name': ':', 'range': [320, 320], 'children': []}]}, {'type': 'FunctionBody', 'name': '', 'range': [321, 412], 'children': [{'type': 'Docstring', 'name': '', 'range': [322, 324], 'children': [{'type': 'String', 'name': '"Register custom serializers and deserializers for annotated Pydantic models"', 'range': [323, 323], 'children': []}]}, {'type': 'ForLoop', 'name': '', 'range': [326, 382], 'children': [{'type': 'Keyword', 'name': 'for', 'range': [326, 326], 'children': []}, {'type': 'VariableDeclaration', 'name': '', 'range': [327, 329], 'children': [{'type': 'Identifier', 'name': 'name', 'range': [327, 327], 'children': []}, {'type': 'Identifier', 'name': 'annotation', 'range': [329, 329], 'children': []}]}, {'type': 'Keyword', 'name': 'in', 'range': [330, 330], 'children': []}, {'type': 'Expression', 'name': '', 'range': [331, 337], 'children': [{'type': 'Identifier', 'name': 'func', 'range': [331, 331], 'children': []}, {'type': 'MemberAccess', 'name': '', 'range': [332, 335], 'children': [{'type': 'Identifier', 'name': '__annotations__', 'range': [333, 333], 'children': []}, {'type': 'Identifier', 'name': 'items', 'range': [335, 335], 'children': []}]}, {'type': 'CallExpression', 'name': '', 'range': [336, 337], 'children': []}]}, {'type': 'Keyword', 'name': ':', 'range': [338, 338], 'children': []}, {'type': 'Block', 'name': '', 'range': [339, 382], 'children': [{'type': 'TryStatement', 'name': '', 'range': [340, 362], 'children': [{'type': 'Keyword', 'name': 'try', 'range': [340, 340], 'children': []}, {'type': 'Keyword', 'name': ':', 'range': [341, 341], 'children': []}, {'type': 'Block', 'name': '', 'range': [342, 349], 'children': [{'type': 'VariableDeclaration', 'name': '', 'range': [343, 345], 'children': [{'type': 'Identifier', 'name': 'pydantic_types', 'range': [343, 343], 'children': []}, {'type': 'Assignment', 'name': '', 'range': [344, 344], 'children': []}, {'type': 'CallExpression', 'name': '', 'range': [345, 349], 'children': [{'type': 'Identifier', 'name': '_pydantic_models_from_type_annotation', 'range': [345, 345], 'children': []}, {'type': 'ArgumentList', 'name': '', 'range': [346, 348], 'children': [{'type': 'Identifier', 'name': 'annotation', 'range': [347, 347], 'children': []}]}]}]}]}, {'type': 'CatchClause', 'name': '', 'range': [350, 362], 'children': [{'type': 'Keyword', 'name': 'except', 'range': [350, 350], 'children': []}, {'type': 'Identifier', 'name': 'Exception', 'range': [351, 351], 'children': []}, {'type': 'Keyword', 'name': 'as', 'range': [352, 352], 'children': []}, {'type': 'Identifier', 'name': 'e', 'range': [353, 353], 'children': []}, {'type': 'Keyword', 'name': ':', 'range': [354, 354], 'children': []}, {'type': 'Block', 'name': '', 'range': [355, 362], 'children': [{'type': 'ThrowStatement', 'name': '', 'range': [356, 361], 'children': [{'type': 'Keyword', 'name': 'raise', 'range': [356, 356], 'children': []}, {'type': 'NewExpression', 'name': '', 'range': [357, 361], 'children': [{'type': 'Identifier', 'name': 'TypeError', 'range': [357, 357], 'children': []}, {'type': 'ArgumentList', 'name': '', 'range': [358, 360], 'children': [{'type': 'String', 'name': '"Error while exposing {func.__name__}: {e.__str__()}"', 'range': [359, 359], 'children': []}]}]}]}]}]}]}, {'type': 'ForLoop', 'name': '', 'range': [364, 410], 'children': [{'type': 'Keyword', 'name': 'for', 'range': [364, 364], 'children': []}, {'type': 'VariableDeclaration', 'name': '', 'range': [365, 365], 'children': [{'type': 'Identifier', 'name': 'model', 'range': [365, 365], 'children': []}]}, {'type': 'Keyword', 'name': 'in', 'range': [366, 366], 'children': []}, {'type': 'Expression', 'name': '', 'range': [367, 367], 'children': [{'type': 'Identifier', 'name': 'pydantic_types', 'range': [367, 367], 'children': []}]}, {'type': 'Keyword', 'name': ':', 'range': [368, 368], 'children': []}, {'type': 'Block', 'name': '', 'range': [369, 410], 'children': [{'type': 'ExpressionStatement', 'name': '', 'range': [370, 381], 'children': [{'type': 'CallExpression', 'name': '', 'range': [370, 381], 'children': [{'type': 'MemberAccess', 'name': '', 'range': [370, 372], 'children': [{'type': 'Identifier', 'name': 'logger', 'range': [370, 370], 'children': []}, {'type': 'Identifier', 'name': 'debug', 'range': [372, 372], 'children': []}]}, {'type': 'ArgumentList', 'name': '', 'range': [373, 380], 'children': [{'type': 'String', 'name': '"Registering Pyro (de)serializers for {func.__name__} annotation "', 'range': [376, 376], 'children': []}, {'type': 'String', 'name': '"\'{name}\': {model.__qualname__}"', 'range': [379, 379], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [383, 394], 'children': [{'type': 'CallExpression', 'name': '', 'range': [383, 394], 'children': [{'type': 'MemberAccess', 'name': '', 'range': [383, 385], 'children': [{'type': 'Identifier', 'name': 'pyro', 'range': [383, 383], 'children': []}, {'type': 'Identifier', 'name': 'register_class_to_dict', 'range': [385, 385], 'children': []}]}, {'type': 'ArgumentList', 'name': '', 'range': [386, 393], 'children': [{'type': 'Identifier', 'name': 'model', 'range': [387, 387], 'children': []}, {'type': 'CallExpression', 'name': '', 'range': [389, 393], 'children': [{'type': 'Identifier', 'name': '_make_custom_serializer', 'range': [389, 389], 'children': []}, {'type': 'ArgumentList', 'name': '', 'range': [390, 392], 'children': [{'type': 'Identifier', 'name': 'model', 'range': [391, 391], 'children': []}]}]}]}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [395, 410], 'children': [{'type': 'CallExpression', 'name': '', 'range': [395, 410], 'children': [{'type': 'MemberAccess', 'name': '', 'range': [395, 397], 'children': [{'type': 'Identifier', 'name': 'pyro', 'range': [395, 395], 'children': []}, {'type': 'Identifier', 'name': 'register_dict_to_class', 'range': [397, 397], 'children': []}]}, {'type': 'ArgumentList', 'name': '', 'range': [398, 409], 'children': [{'type': 'MemberAccess', 'name': '', 'range': [400, 402], 'children': [{'type': 'Identifier', 'name': 'model', 'range': [400, 400], 'children': []}, {'type': 'Identifier', 'name': '__qualname__', 'range': [402, 402], 'children': []}]}, {'type': 'CallExpression', 'name': '', 'range': [404, 408], 'children': [{'type': 'Identifier', 'name': '_make_custom_deserializer', 'range': [404, 404], 'children': []}, {'type': 'ArgumentList', 'name': '', 'range': [405, 407], 'children': [{'type': 'Identifier', 'name': 'model', 'range': [406, 406], 'children': []}]}]}]}]}]}]}]}]}]}]}]}]}
2025-01-08 10:29:05,629 - INFO - Starting Step 3: AST simplification
2025-01-08 10:29:08,038 - INFO - Step 3 result: {'type': 'Program', 'name': '', 'range': [0, 98], 'children': [{'type': 'ImportDeclaration', 'name': 'asyncio', 'range': [0, 2], 'children': []}, {'type': 'ImportDeclaration', 'name': 'builtins', 'range': [3, 5], 'children': []}, {'type': 'ImportDeclaration', 'name': 'logging', 'range': [6, 8], 'children': []}, {'type': 'ImportDeclaration', 'name': 'os', 'range': [9, 11], 'children': []}, {'type': 'ImportDeclaration', 'name': 'threading', 'range': [12, 14], 'children': []}, {'type': 'ImportDeclaration', 'name': 'time', 'range': [15, 17], 'children': []}, {'type': 'ImportDeclaration', 'name': 'typing', 'range': [18, 20], 'children': []}, {'type': 'ImportDeclaration', 'name': 'ABC, abstractmethod', 'range': [21, 27], 'children': [{'type': 'ImportSpecifier', 'name': 'ABC', 'range': [21, 25], 'children': []}, {'type': 'ImportSpecifier', 'name': 'abstractmethod', 'range': [26, 27], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'Enum', 'range': [28, 32], 'children': []}, {'type': 'ImportDeclaration', 'name': 'NoneType, UnionType', 'range': [33, 39], 'children': [{'type': 'ImportSpecifier', 'name': 'NoneType', 'range': [33, 37], 'children': []}, {'type': 'ImportSpecifier', 'name': 'UnionType', 'range': [38, 39], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'Annotated, Any, Awaitable, Callable, Coroutine, Dict, FrozenSet, Iterator, List, Set, Tuple, Type, TypeVar, Union, cast, get_args, get_origin', 'range': [40, 97], 'children': [{'type': 'ImportSpecifier', 'name': 'Annotated', 'range': [40, 45], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Any', 'range': [46, 48], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Awaitable', 'range': [49, 51], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Callable', 'range': [52, 54], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Coroutine', 'range': [55, 57], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Dict', 'range': [58, 60], 'children': []}, {'type': 'ImportSpecifier', 'name': 'FrozenSet', 'range': [61, 63], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Iterator', 'range': [64, 66], 'children': []}, {'type': 'ImportSpecifier', 'name': 'List', 'range': [67, 69], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Set', 'range': [70, 72], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Tuple', 'range': [73, 75], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Type', 'range': [76, 78], 'children': []}, {'type': 'ImportSpecifier', 'name': 'TypeVar', 'range': [79, 81], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Union', 'range': [82, 84], 'children': []}, {'type': 'ImportSpecifier', 'name': 'cast', 'range': [85, 87], 'children': []}, {'type': 'ImportSpecifier', 'name': 'get_args', 'range': [88, 90], 'children': []}, {'type': 'ImportSpecifier', 'name': 'get_origin', 'range': [91, 93], 'children': []}]}]}
2025-01-08 10:29:08,038 - INFO - Starting Step 4: AST normalization
2025-01-08 10:29:10,243 - INFO - Step 4 result: {'type': 'Program', 'name': '', 'range': [1143, 1302], 'children': [{'type': 'FunctionDecl', 'name': 'get_service_client', 'range': [1143, 1301], 'children': [{'type': 'Parameter', 'name': 'service_type', 'range': [1146, 1151], 'children': []}, {'type': 'ReturnType', 'name': 'AS', 'range': [1153, 1155], 'children': []}, {'type': 'Assignment', 'name': 'service_name', 'range': [1158, 1162], 'children': []}, {'type': 'ClassDecl', 'name': 'DynamicClient', 'range': [1165, 1290], 'children': [{'type': 'Inheritance', 'name': 'PyroClient', 'range': [1167, 1169], 'children': []}, {'type': 'Decorator', 'name': 'conn_retry', 'range': [1172, 1179], 'children': []}, {'type': 'MethodDecl', 'name': '__init__', 'range': [1181, 1254], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1184, 1185], 'children': []}, {'type': 'Assignment', 'name': 'host', 'range': [1188, 1200], 'children': []}, {'type': 'Assignment', 'name': 'uri', 'range': [1202, 1205], 'children': []}, {'type': 'ExpressionStatement', 'name': '', 'range': [1207, 1213], 'children': []}, {'type': 'Assignment', 'name': 'self.proxy', 'range': [1215, 1226], 'children': []}, {'type': 'ExpressionStatement', 'name': '', 'range': [1239, 1246], 'children': []}, {'type': 'ExpressionStatement', 'name': '', 'range': [1247, 1253], 'children': []}]}, {'type': 'MethodDecl', 'name': '__getattr__', 'range': [1256, 1290], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1259, 1260], 'children': []}, {'type': 'Parameter', 'name': 'name', 'range': [1261, 1264], 'children': []}, {'type': 'ReturnType', 'name': 'Callable', 'range': [1265, 1274], 'children': []}, {'type': 'Assignment', 'name': 'res', 'range': [1277, 1286], 'children': []}, {'type': 'ReturnStatement', 'name': '', 'range': [1288, 1289], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [1292, 1300], 'children': []}]}]}
2025-01-08 10:29:10,243 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:29:11,072 - INFO - Step 5 result: {'type': 'Program', 'name': '', 'range': [472, 515], 'children': [{'type': 'FunctionDecl', 'name': '_make_custom_deserializer', 'range': [472, 514], 'children': [{'type': 'Parameter', 'name': 'model', 'range': [475, 480], 'children': [{'type': 'TypeAnnotation', 'name': '', 'range': [476, 480], 'children': [{'type': 'Type', 'name': 'Type', 'range': [477, 477], 'children': []}, {'type': 'GenericType', 'name': 'BaseModel', 'range': [479, 479], 'children': []}]}]}, {'type': 'FunctionDecl', 'name': 'custom_dict_to_class', 'range': [484, 513], 'children': [{'type': 'Parameter', 'name': 'qualname', 'range': [487, 487], 'children': []}, {'type': 'Parameter', 'name': 'data', 'range': [489, 491], 'children': [{'type': 'TypeAnnotation', 'name': '', 'range': [490, 491], 'children': [{'type': 'Type', 'name': 'dict', 'range': [491, 491], 'children': []}]}]}, {'type': 'BlockStatement', 'name': '', 'range': [494, 510], 'children': [{'type': 'ExpressionStatement', 'name': '', 'range': [495, 501], 'children': [{'type': 'CallExpression', 'name': 'logger.debug', 'range': [495, 501], 'children': [{'type': 'Literal', 'name': '', 'range': [499, 500], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [503, 509], 'children': [{'type': 'CallExpression', 'name': 'model', 'range': [504, 509], 'children': [{'type': 'SpreadElement', 'name': '', 'range': [506, 508], 'children': []}]}]}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [512, 513], 'children': [{'type': 'Identifier', 'name': 'custom_dict_to_class', 'range': [513, 513], 'children': []}]}]}]}
2025-01-08 10:29:11,072 - INFO - Completed main AST analysis flow
2025-01-08 10:29:11,072 - INFO - Successfully processed chunk
2025-01-08 10:29:13,203 - INFO - Step 4 result: {'type': 'Program', 'name': 'expose', 'range': [228, 312], 'children': [{'type': 'FunctionDecl', 'name': 'wrapper', 'range': [247, 292], 'children': [{'type': 'ParameterList', 'name': '', 'range': [249, 256], 'children': [{'type': 'Parameter', 'name': 'args', 'range': [250, 251], 'children': []}, {'type': 'Parameter', 'name': 'kwargs', 'range': [254, 255], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [258, 292], 'children': [{'type': 'TryStatement', 'name': '', 'range': [259, 292], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [261, 272], 'children': [{'type': 'ReturnStatement', 'name': '', 'range': [262, 271], 'children': [{'type': 'CallExpression', 'name': 'func', 'range': [263, 270], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [264, 270], 'children': [{'type': 'Argument', 'name': 'args', 'range': [265, 266], 'children': []}, {'type': 'Argument', 'name': 'kwargs', 'range': [268, 269], 'children': []}]}]}]}]}, {'type': 'CatchClause', 'name': '', 'range': [273, 292], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [278, 292], 'children': [{'type': 'ExpressionStatement', 'name': '', 'range': [279, 283], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [279, 282], 'children': [{'type': 'Identifier', 'name': 'msg', 'range': [279, 280], 'children': []}, {'type': 'TemplateLiteral', 'name': '', 'range': [281, 282], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [284, 290], 'children': [{'type': 'CallExpression', 'name': 'logger.exception', 'range': [284, 289], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [287, 289], 'children': [{'type': 'Argument', 'name': 'msg', 'range': [288, 289], 'children': []}]}]}]}, {'type': 'RaiseStatement', 'name': '', 'range': [291, 292], 'children': []}]}]}]}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [294, 298], 'children': [{'type': 'CallExpression', 'name': 'register_pydantic_serializers', 'range': [294, 297], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [295, 297], 'children': [{'type': 'Argument', 'name': 'func', 'range': [296, 297], 'children': []}]}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [300, 311], 'children': [{'type': 'CallExpression', 'name': 'pyro.expose', 'range': [300, 306], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [304, 306], 'children': [{'type': 'Argument', 'name': 'wrapper', 'range': [305, 306], 'children': []}]}]}]}]}
2025-01-08 10:29:13,203 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:29:16,523 - INFO - Step 5 result: {'nodes': [{'type': 'Program', 'name': 'MainProgram', 'range': [191, 221], 'children': [{'type': 'VariableDeclaration', 'name': 'config', 'range': [191, 195], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [192, 195], 'children': [{'type': 'CallExpression', 'name': 'Config', 'range': [193, 195], 'children': []}]}]}, {'type': 'AssignmentExpression', 'name': 'pyro_host', 'range': [197, 201], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [200, 201], 'children': [{'type': 'Identifier', 'name': 'config', 'range': [199, 199], 'children': []}, {'type': 'Identifier', 'name': 'pyro_host', 'range': [201, 201], 'children': []}]}]}, {'type': 'AssignmentExpression', 'name': 'pyro_config.MAX_RETRIES', 'range': [203, 209], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [204, 205], 'children': [{'type': 'Identifier', 'name': 'pyro_config', 'range': [203, 203], 'children': []}, {'type': 'Identifier', 'name': 'MAX_RETRIES', 'range': [205, 205], 'children': []}]}, {'type': 'AssignmentExpression', 'name': '=', 'range': [206, 209], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [208, 209], 'children': [{'type': 'Identifier', 'name': 'config', 'range': [207, 207], 'children': []}, {'type': 'Identifier', 'name': 'pyro_client_comm_retry', 'range': [209, 209], 'children': []}]}]}]}, {'type': 'AssignmentExpression', 'name': 'pyro_config.COMMTIMEOUT', 'range': [215, 221], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [216, 217], 'children': [{'type': 'Identifier', 'name': 'pyro_config', 'range': [215, 215], 'children': []}, {'type': 'Identifier', 'name': 'COMMTIMEOUT', 'range': [217, 217], 'children': []}]}, {'type': 'AssignmentExpression', 'name': '=', 'range': [218, 221], 'children': [{'type': 'MemberExpression', 'name': '.', 'range': [220, 221], 'children': [{'type': 'Identifier', 'name': 'config', 'range': [219, 219], 'children': []}, {'type': 'Identifier', 'name': 'pyro_client_comm_timeout', 'range': [221, 221], 'children': []}]}]}]}]}]}
2025-01-08 10:29:16,523 - INFO - Completed main AST analysis flow
2025-01-08 10:29:16,524 - INFO - Successfully processed chunk
2025-01-08 10:29:16,773 - INFO - Step 5 result: {'type': 'Program', 'name': 'close_service_client', 'range': [1103, 1142], 'children': [{'type': 'FunctionDecl', 'name': 'close_service_client', 'range': [1103, 1142], 'children': [{'type': 'Parameters', 'name': 'parameters', 'range': [1105, 1109], 'children': [{'type': 'Parameter', 'name': 'client', 'range': [1106, 1108], 'children': []}]}, {'type': 'ReturnType', 'name': 'return_type', 'range': [1110, 1112], 'children': []}, {'type': 'Block', 'name': 'block', 'range': [1114, 1142], 'children': [{'type': 'IfStatement', 'name': 'if_statement', 'range': [1115, 1131], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [1116, 1121], 'children': [{'type': 'CallExpression', 'name': 'isinstance', 'range': [1116, 1121], 'children': [{'type': 'Arguments', 'name': 'arguments', 'range': [1117, 1121], 'children': [{'type': 'Identifier', 'name': 'client', 'range': [1118, 1118], 'children': []}, {'type': 'Identifier', 'name': 'PyroClient', 'range': [1120, 1120], 'children': []}]}]}]}, {'type': 'Block', 'name': 'block', 'range': [1123, 1131], 'children': [{'type': 'ExpressionStatement', 'name': 'expression_statement', 'range': [1124, 1130], 'children': [{'type': 'CallExpression', 'name': '_pyroRelease', 'range': [1128, 1130], 'children': [{'type': 'MemberExpression', 'name': 'proxy', 'range': [1125, 1127], 'children': [{'type': 'Identifier', 'name': 'client', 'range': [1124, 1124], 'children': []}]}]}]}]}]}, {'type': 'ElseStatement', 'name': 'else_statement', 'range': [1132, 1141], 'children': [{'type': 'Block', 'name': 'block', 'range': [1134, 1141], 'children': [{'type': 'RaiseStatement', 'name': 'raise_statement', 'range': [1135, 1140], 'children': [{'type': 'CallExpression', 'name': 'RuntimeError', 'range': [1136, 1140], 'children': [{'type': 'Arguments', 'name': 'arguments', 'range': [1137, 1140], 'children': [{'type': 'Literal', 'name': 'error_message', 'range': [1139, 1139], 'children': []}]}]}]}]}]}]}]}]}
2025-01-08 10:29:16,773 - INFO - Completed main AST analysis flow
2025-01-08 10:29:16,773 - INFO - Successfully processed chunk
2025-01-08 10:29:19,723 - INFO - Step 4 result: {'type': 'Program', 'name': '', 'range': [413, 471], 'children': [{'type': 'FunctionDecl', 'name': '_make_custom_serializer', 'range': [413, 470], 'children': [{'type': 'Parameter', 'name': 'model', 'range': [416, 421], 'children': [{'type': 'TypeAnnotation', 'name': '', 'range': [417, 421], 'children': [{'type': 'Type', 'name': 'Type', 'range': [418, 421], 'children': [{'type': 'GenericType', 'name': 'BaseModel', 'range': [419, 421], 'children': []}]}]}]}, {'type': 'FunctionDecl', 'name': 'custom_class_to_dict', 'range': [425, 465], 'children': [{'type': 'Parameter', 'name': 'obj', 'range': [428, 429], 'children': []}, {'type': 'VariableDecl', 'name': 'data', 'range': [432, 454], 'children': [{'type': 'ObjectLiteral', 'name': '', 'range': [434, 454], 'children': [{'type': 'Property', 'name': '__class__', 'range': [436, 443], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [438, 442], 'children': [{'type': 'Identifier', 'name': 'obj', 'range': [438, 438], 'children': []}, {'type': 'Identifier', 'name': '__class__', 'range': [440, 440], 'children': []}, {'type': 'Identifier', 'name': '__qualname__', 'range': [442, 442], 'children': []}]}]}, {'type': 'SpreadElement', 'name': '', 'range': [445, 452], 'children': [{'type': 'CallExpression', 'name': '', 'range': [447, 452], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [447, 449], 'children': [{'type': 'Identifier', 'name': 'obj', 'range': [447, 447], 'children': []}, {'type': 'Identifier', 'name': 'model_dump', 'range': [449, 449], 'children': []}]}]}]}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [456, 462], 'children': [{'type': 'CallExpression', 'name': '', 'range': [457, 462], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [457, 458], 'children': [{'type': 'Identifier', 'name': 'logger', 'range': [456, 456], 'children': []}, {'type': 'Identifier', 'name': 'debug', 'range': [458, 458], 'children': []}]}, {'type': 'TemplateLiteral', 'name': '', 'range': [459, 462], 'children': [{'type': 'TemplateElement', 'name': '', 'range': [460, 462], 'children': []}]}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [464, 465], 'children': [{'type': 'Identifier', 'name': 'data', 'range': [465, 465], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [468, 469], 'children': [{'type': 'Identifier', 'name': 'custom_class_to_dict', 'range': [469, 469], 'children': []}]}]}]}
2025-01-08 10:29:19,723 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:29:22,772 - INFO - Step 4 result: {'type': 'Program', 'name': '', 'range': [99, 162], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [99, 103], 'children': [{'type': 'ImportSpecifier', 'name': 'Pyro5', 'range': [100, 100], 'children': []}, {'type': 'ImportSpecifier', 'name': 'api', 'range': [102, 102], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [104, 108], 'children': [{'type': 'ImportSpecifier', 'name': 'pydantic', 'range': [105, 105], 'children': []}, {'type': 'ImportSpecifier', 'name': 'BaseModel', 'range': [107, 107], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [109, 115], 'children': [{'type': 'ImportSpecifier', 'name': 'Pyro5', 'range': [110, 110], 'children': []}, {'type': 'ImportSpecifier', 'name': 'api', 'range': [112, 112], 'children': []}, {'type': 'ImportSpecifier', 'name': 'pyro', 'range': [114, 114], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [116, 122], 'children': [{'type': 'ImportSpecifier', 'name': 'Pyro5', 'range': [117, 117], 'children': []}, {'type': 'ImportSpecifier', 'name': 'config', 'range': [119, 119], 'children': []}, {'type': 'ImportSpecifier', 'name': 'pyro_config', 'range': [121, 121], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [124, 132], 'children': [{'type': 'ImportSpecifier', 'name': 'backend', 'range': [125, 125], 'children': []}, {'type': 'ImportSpecifier', 'name': 'data', 'range': [127, 127], 'children': []}, {'type': 'ImportSpecifier', 'name': 'db', 'range': [129, 129], 'children': []}, {'type': 'ImportSpecifier', 'name': 'redis', 'range': [131, 131], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [133, 141], 'children': [{'type': 'ImportSpecifier', 'name': 'backend', 'range': [134, 134], 'children': []}, {'type': 'ImportSpecifier', 'name': 'util', 'range': [136, 136], 'children': []}, {'type': 'ImportSpecifier', 'name': 'process', 'range': [138, 138], 'children': []}, {'type': 'ImportSpecifier', 'name': 'AppProcess', 'range': [140, 140], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [142, 150], 'children': [{'type': 'ImportSpecifier', 'name': 'backend', 'range': [143, 143], 'children': []}, {'type': 'ImportSpecifier', 'name': 'util', 'range': [145, 145], 'children': []}, {'type': 'ImportSpecifier', 'name': 'retry', 'range': [147, 147], 'children': []}, {'type': 'ImportSpecifier', 'name': 'conn_retry', 'range': [149, 149], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [151, 161], 'children': [{'type': 'ImportSpecifier', 'name': 'backend', 'range': [152, 152], 'children': []}, {'type': 'ImportSpecifier', 'name': 'util', 'range': [154, 154], 'children': []}, {'type': 'ImportSpecifier', 'name': 'settings', 'range': [156, 156], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Config', 'range': [158, 158], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Secrets', 'range': [160, 160], 'children': []}]}]}
2025-01-08 10:29:22,772 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:29:27,807 - INFO - Step 5 result: {'type': 'Program', 'name': '', 'range': [1143, 1302], 'children': [{'type': 'FunctionDecl', 'name': 'get_service_client', 'range': [1143, 1301], 'children': [{'type': 'Parameter', 'name': 'service_type', 'range': [1146, 1151], 'children': []}, {'type': 'ReturnType', 'name': 'AS', 'range': [1153, 1155], 'children': []}, {'type': 'Assignment', 'name': 'service_name', 'range': [1158, 1162], 'children': []}, {'type': 'ClassDecl', 'name': 'DynamicClient', 'range': [1165, 1290], 'children': [{'type': 'Inheritance', 'name': 'PyroClient', 'range': [1167, 1169], 'children': []}, {'type': 'Decorator', 'name': 'conn_retry', 'range': [1172, 1179], 'children': []}, {'type': 'MethodDecl', 'name': '__init__', 'range': [1181, 1254], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1184, 1185], 'children': []}, {'type': 'Assignment', 'name': 'host', 'range': [1188, 1200], 'children': []}, {'type': 'Assignment', 'name': 'uri', 'range': [1202, 1205], 'children': []}, {'type': 'ExpressionStatement', 'name': '', 'range': [1207, 1213], 'children': []}, {'type': 'Assignment', 'name': 'self.proxy', 'range': [1215, 1226], 'children': []}, {'type': 'ExpressionStatement', 'name': '', 'range': [1239, 1246], 'children': []}, {'type': 'ExpressionStatement', 'name': '', 'range': [1247, 1253], 'children': []}]}, {'type': 'MethodDecl', 'name': '__getattr__', 'range': [1256, 1290], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1259, 1260], 'children': []}, {'type': 'Parameter', 'name': 'name', 'range': [1261, 1264], 'children': []}, {'type': 'ReturnType', 'name': 'Callable', 'range': [1265, 1274], 'children': []}, {'type': 'Assignment', 'name': 'res', 'range': [1277, 1286], 'children': []}, {'type': 'ReturnStatement', 'name': '', 'range': [1288, 1289], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [1292, 1300], 'children': []}]}]}
2025-01-08 10:29:27,808 - INFO - Completed main AST analysis flow
2025-01-08 10:29:27,808 - INFO - Successfully processed chunk
2025-01-08 10:29:32,731 - INFO - Step 4 result: {'type': 'Program', 'name': '', 'range': [0, 98], 'children': [{'type': 'ImportDeclaration', 'name': 'asyncio', 'range': [0, 2], 'children': []}, {'type': 'ImportDeclaration', 'name': 'builtins', 'range': [3, 5], 'children': []}, {'type': 'ImportDeclaration', 'name': 'logging', 'range': [6, 8], 'children': []}, {'type': 'ImportDeclaration', 'name': 'os', 'range': [9, 11], 'children': []}, {'type': 'ImportDeclaration', 'name': 'threading', 'range': [12, 14], 'children': []}, {'type': 'ImportDeclaration', 'name': 'time', 'range': [15, 17], 'children': []}, {'type': 'ImportDeclaration', 'name': 'typing', 'range': [18, 20], 'children': []}, {'type': 'ImportDeclaration', 'name': 'ABC, abstractmethod', 'range': [21, 27], 'children': [{'type': 'ImportSpecifier', 'name': 'ABC', 'range': [21, 25], 'children': []}, {'type': 'ImportSpecifier', 'name': 'abstractmethod', 'range': [26, 27], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'Enum', 'range': [28, 32], 'children': []}, {'type': 'ImportDeclaration', 'name': 'NoneType, UnionType', 'range': [33, 39], 'children': [{'type': 'ImportSpecifier', 'name': 'NoneType', 'range': [33, 37], 'children': []}, {'type': 'ImportSpecifier', 'name': 'UnionType', 'range': [38, 39], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'Annotated, Any, Awaitable, Callable, Coroutine, Dict, FrozenSet, Iterator, List, Set, Tuple, Type, TypeVar, Union, cast, get_args, get_origin', 'range': [40, 97], 'children': [{'type': 'ImportSpecifier', 'name': 'Annotated', 'range': [40, 45], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Any', 'range': [46, 48], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Awaitable', 'range': [49, 51], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Callable', 'range': [52, 54], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Coroutine', 'range': [55, 57], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Dict', 'range': [58, 60], 'children': []}, {'type': 'ImportSpecifier', 'name': 'FrozenSet', 'range': [61, 63], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Iterator', 'range': [64, 66], 'children': []}, {'type': 'ImportSpecifier', 'name': 'List', 'range': [67, 69], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Set', 'range': [70, 72], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Tuple', 'range': [73, 75], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Type', 'range': [76, 78], 'children': []}, {'type': 'ImportSpecifier', 'name': 'TypeVar', 'range': [79, 81], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Union', 'range': [82, 84], 'children': []}, {'type': 'ImportSpecifier', 'name': 'cast', 'range': [85, 87], 'children': []}, {'type': 'ImportSpecifier', 'name': 'get_args', 'range': [88, 90], 'children': []}, {'type': 'ImportSpecifier', 'name': 'get_origin', 'range': [91, 93], 'children': []}]}]}
2025-01-08 10:29:32,731 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:29:34,383 - INFO - Step 2 result: {'type': 'Program', 'name': '_pydantic_models_from_type_annotation', 'range': [1324, 1594], 'children': [{'type': 'FunctionDef', 'name': '_pydantic_models_from_type_annotation', 'range': [1324, 1594], 'children': [{'type': 'Arguments', 'name': '', 'range': [1326, 1328], 'children': [{'type': 'Arg', 'name': 'annotation', 'range': [1327, 1327], 'children': []}]}, {'type': 'ReturnType', 'name': '', 'range': [1329, 1337], 'children': [{'type': 'Type', 'name': 'Iterator', 'range': [1331, 1331], 'children': []}, {'type': 'Type', 'name': 'type', 'range': [1333, 1333], 'children': []}, {'type': 'Type', 'name': 'BaseModel', 'range': [1335, 1335], 'children': []}]}, {'type': 'Comment', 'name': '', 'range': [1340, 1344], 'children': []}, {'type': 'If', 'name': '', 'range': [1345, 1360], 'children': [{'type': 'Condition', 'name': '', 'range': [1346, 1354], 'children': [{'type': 'Assignment', 'name': 'origin', 'range': [1347, 1353], 'children': [{'type': 'FunctionCall', 'name': 'get_origin', 'range': [1350, 1353], 'children': [{'type': 'Arg', 'name': 'annotation', 'range': [1352, 1352], 'children': []}]}]}, {'type': 'Comparison', 'name': '', 'range': [1355, 1358], 'children': [{'type': 'Variable', 'name': 'origin', 'range': [1356, 1356], 'children': []}, {'type': 'Type', 'name': 'Annotated', 'range': [1358, 1358], 'children': []}]}]}, {'type': 'Assignment', 'name': 'annotation', 'range': [1361, 1369], 'children': [{'type': 'FunctionCall', 'name': 'get_args', 'range': [1363, 1366], 'children': [{'type': 'Arg', 'name': 'annotation', 'range': [1365, 1365], 'children': []}]}, {'type': 'Index', 'name': '', 'range': [1367, 1369], 'children': [{'type': 'Number', 'name': '0', 'range': [1368, 1368], 'children': []}]}]}]}, {'type': 'Assignment', 'name': 'origin', 'range': [1372, 1378], 'children': [{'type': 'FunctionCall', 'name': 'get_origin', 'range': [1374, 1377], 'children': [{'type': 'Arg', 'name': 'annotation', 'range': [1376, 1376], 'children': []}]}]}, {'type': 'Assignment', 'name': 'args', 'range': [1379, 1385], 'children': [{'type': 'FunctionCall', 'name': 'get_args', 'range': [1381, 1384], 'children': [{'type': 'Arg', 'name': 'annotation', 'range': [1383, 1383], 'children': []}]}]}, {'type': 'If', 'name': '', 'range': [1387, 1424], 'children': [{'type': 'Condition', 'name': '', 'range': [1388, 1422], 'children': [{'type': 'Variable', 'name': 'origin', 'range': [1388, 1388], 'children': []}, {'type': 'In', 'name': '', 'range': [1389, 1422], 'children': [{'type': 'Tuple', 'name': '', 'range': [1390, 1422], 'children': [{'type': 'Type', 'name': 'Union', 'range': [1392, 1392], 'children': []}, {'type': 'Type', 'name': 'UnionType', 'range': [1395, 1395], 'children': []}, {'type': 'Type', 'name': 'list', 'range': [1398, 1398], 'children': []}, {'type': 'Type', 'name': 'List', 'range': [1401, 1401], 'children': []}, {'type': 'Type', 'name': 'tuple', 'range': [1404, 1404], 'children': []}, {'type': 'Type', 'name': 'Tuple', 'range': [1407, 1407], 'children': []}, {'type': 'Type', 'name': 'set', 'range': [1410, 1410], 'children': []}, {'type': 'Type', 'name': 'Set', 'range': [1413, 1413], 'children': []}, {'type': 'Type', 'name': 'frozenset', 'range': [1416, 1416], 'children': []}, {'type': 'Type', 'name': 'FrozenSet', 'range': [1419, 1419], 'children': []}]}]}]}, {'type': 'For', 'name': '', 'range': [1425, 1437], 'children': [{'type': 'Variable', 'name': 'arg', 'range': [1426, 1426], 'children': []}, {'type': 'In', 'name': '', 'range': [1427, 1428], 'children': [{'type': 'Variable', 'name': 'args', 'range': [1428, 1428], 'children': []}]}, {'type': 'YieldFrom', 'name': '', 'range': [1431, 1437], 'children': [{'type': 'FunctionCall', 'name': '_pydantic_models_from_type_annotation', 'range': [1433, 1436], 'children': [{'type': 'Arg', 'name': 'arg', 'range': [1435, 1435], 'children': []}]}]}]}]}, {'type': 'Elif', 'name': '', 'range': [1438, 1467], 'children': [{'type': 'Condition', 'name': '', 'range': [1439, 1445], 'children': [{'type': 'Variable', 'name': 'origin', 'range': [1439, 1439], 'children': []}, {'type': 'In', 'name': '', 'range': [1440, 1445], 'children': [{'type': 'Tuple', 'name': '', 'range': [1441, 1445], 'children': [{'type': 'Type', 'name': 'dict', 'range': [1442, 1442], 'children': []}, {'type': 'Type', 'name': 'Dict', 'range': [1444, 1444], 'children': []}]}]}]}, {'type': 'Assignment', 'name': '', 'range': [1448, 1453], 'children': [{'type': 'Variable', 'name': 'key_type', 'range': [1448, 1448], 'children': []}, {'type': 'Variable', 'name': 'value_type', 'range': [1450, 1450], 'children': []}, {'type': 'Variable', 'name': 'args', 'range': [1452, 1452], 'children': []}]}, {'type': 'YieldFrom', 'name': '', 'range': [1454, 1460], 'children': [{'type': 'FunctionCall', 'name': '_pydantic_models_from_type_annotation', 'range': [1456, 1459], 'children': [{'type': 'Arg', 'name': 'key_type', 'range': [1458, 1458], 'children': []}]}]}, {'type': 'YieldFrom', 'name': '', 'range': [1461, 1467], 'children': [{'type': 'FunctionCall', 'name': '_pydantic_models_from_type_annotation', 'range': [1463, 1466], 'children': [{'type': 'Arg', 'name': 'value_type', 'range': [1465, 1465], 'children': []}]}]}]}, {'type': 'Elif', 'name': '', 'range': [1468, 1503], 'children': [{'type': 'Condition', 'name': '', 'range': [1469, 1475], 'children': [{'type': 'Variable', 'name': 'origin', 'range': [1469, 1469], 'children': []}, {'type': 'In', 'name': '', 'range': [1470, 1475], 'children': [{'type': 'Tuple', 'name': '', 'range': [1471, 1475], 'children': [{'type': 'Type', 'name': 'Awaitable', 'range': [1472, 1472], 'children': []}, {'type': 'Type', 'name': 'Coroutine', 'range': [1474, 1474], 'children': []}]}]}]}, {'type': 'Comment', 'name': '', 'range': [1478, 1488], 'children': []}, {'type': 'Assignment', 'name': 'return_type', 'range': [1489, 1495], 'children': [{'type': 'Variable', 'name': 'args', 'range': [1491, 1491], 'children': []}, {'type': 'Index', 'name': '', 'range': [1492, 1495], 'children': [{'type': 'Number', 'name': '-1', 'range': [1493, 1494], 'children': []}]}]}, {'type': 'YieldFrom', 'name': '', 'range': [1497, 1503], 'children': [{'type': 'FunctionCall', 'name': '_pydantic_models_from_type_annotation', 'range': [1499, 1502], 'children': [{'type': 'Arg', 'name': 'return_type', 'range': [1501, 1501], 'children': []}]}]}]}, {'type': 'Else', 'name': '', 'range': [1504, 1594], 'children': [{'type': 'Assignment', 'name': 'annotype', 'range': [1507, 1516], 'children': [{'type': 'Variable', 'name': 'annotation', 'range': [1509, 1509], 'children': []}, {'type': 'If', 'name': '', 'range': [1510, 1515], 'children': [{'type': 'Condition', 'name': '', 'range': [1511, 1513], 'children': [{'type': 'Variable', 'name': 'origin', 'range': [1511, 1511], 'children': []}, {'type': 'Comparison', 'name': '', 'range': [1512, 1513], 'children': [{'type': 'Type', 'name': 'None', 'range': [1513, 1513], 'children': []}]}]}, {'type': 'Variable', 'name': 'origin', 'range': [1515, 1515], 'children': []}]}]}, {'type': 'Comment', 'name': '', 'range': [1518, 1524], 'children': []}, {'type': 'If', 'name': '', 'range': [1525, 1558], 'children': [{'type': 'Condition', 'name': '', 'range': [1526, 1557], 'children': [{'type': 'Variable', 'name': 'annotype', 'range': [1528, 1528], 'children': []}, {'type': 'Comparison', 'name': '', 'range': [1529, 1531], 'children': [{'type': 'Type', 'name': 'None', 'range': [1531, 1531], 'children': []}]}, {'type': 'And', 'name': '', 'range': [1533, 1556], 'children': [{'type': 'Not', 'name': '', 'range': [1534, 1535], 'children': [{'type': 'FunctionCall', 'name': 'hasattr', 'range': [1535, 1547], 'children': [{'type': 'Arg', 'name': 'typing', 'range': [1537, 1537], 'children': []}, {'type': 'Arg', 'name': 'getattr', 'range': [1539, 1546], 'children': [{'type': 'Arg', 'name': 'annotype', 'range': [1541, 1541], 'children': []}, {'type': 'String', 'name': '__name__', 'range': [1543, 1543], 'children': []}, {'type': 'String', 'name': '', 'range': [1545, 1545], 'children': []}]}]}]}, {'type': 'FunctionCall', 'name': 'isinstance', 'range': [1550, 1555], 'children': [{'type': 'Arg', 'name': 'annotype', 'range': [1552, 1552], 'children': []}, {'type': 'Arg', 'name': 'type', 'range': [1554, 1554], 'children': []}]}]}]}, {'type': 'If', 'name': '', 'range': [1560, 1571], 'children': [{'type': 'Condition', 'name': '', 'range': [1561, 1566], 'children': [{'type': 'FunctionCall', 'name': 'issubclass', 'range': [1561, 1566], 'children': [{'type': 'Arg', 'name': 'annotype', 'range': [1563, 1563], 'children': []}, {'type': 'Arg', 'name': 'BaseModel', 'range': [1565, 1565], 'children': []}]}]}, {'type': 'Yield', 'name': '', 'range': [1569, 1571], 'children': [{'type': 'Variable', 'name': 'annotype', 'range': [1570, 1570], 'children': []}]}]}, {'type': 'Elif', 'name': '', 'range': [1572, 1593], 'children': [{'type': 'Condition', 'name': '', 'range': [1573, 1584], 'children': [{'type': 'Variable', 'name': 'annotype', 'range': [1573, 1573], 'children': []}, {'type': 'NotIn', 'name': '', 'range': [1574, 1576], 'children': [{'type': 'Variable', 'name': 'builtin_types', 'range': [1576, 1576], 'children': []}]}, {'type': 'And', 'name': '', 'range': [1577, 1584], 'children': [{'type': 'Not', 'name': '', 'range': [1578, 1579], 'children': [{'type': 'FunctionCall', 'name': 'issubclass', 'range': [1579, 1584], 'children': [{'type': 'Arg', 'name': 'annotype', 'range': [1581, 1581], 'children': []}, {'type': 'Arg', 'name': 'Enum', 'range': [1583, 1583], 'children': []}]}]}]}]}, {'type': 'Raise', 'name': '', 'range': [1587, 1593], 'children': [{'type': 'FunctionCall', 'name': 'TypeError', 'range': [1588, 1592], 'children': [{'type': 'Arg', 'name': 'f', 'range': [1590, 1590], 'children': []}, {'type': 'String', 'name': 'Unsupported type encountered: {annotype}', 'range': [1591, 1591], 'children': []}]}]}]}]}]}]}]}
2025-01-08 10:29:34,384 - INFO - Starting Step 3: AST simplification
2025-01-08 10:29:34,603 - INFO - Step 5 result: {'type': 'Program', 'name': 'expose', 'range': [228, 312], 'children': [{'type': 'FunctionDecl', 'name': 'wrapper', 'range': [247, 292], 'children': [{'type': 'ParameterList', 'name': '', 'range': [249, 256], 'children': [{'type': 'Parameter', 'name': 'args', 'range': [250, 251], 'children': []}, {'type': 'Parameter', 'name': 'kwargs', 'range': [254, 255], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [258, 292], 'children': [{'type': 'TryStatement', 'name': '', 'range': [259, 292], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [261, 272], 'children': [{'type': 'ReturnStatement', 'name': '', 'range': [262, 271], 'children': [{'type': 'CallExpression', 'name': 'func', 'range': [263, 270], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [264, 270], 'children': [{'type': 'Argument', 'name': 'args', 'range': [265, 266], 'children': []}, {'type': 'Argument', 'name': 'kwargs', 'range': [268, 269], 'children': []}]}]}]}]}, {'type': 'CatchClause', 'name': '', 'range': [273, 292], 'children': [{'type': 'BlockStatement', 'name': '', 'range': [278, 292], 'children': [{'type': 'ExpressionStatement', 'name': '', 'range': [279, 283], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [279, 282], 'children': [{'type': 'Identifier', 'name': 'msg', 'range': [279, 280], 'children': []}, {'type': 'TemplateLiteral', 'name': '', 'range': [281, 282], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [284, 290], 'children': [{'type': 'CallExpression', 'name': 'logger.exception', 'range': [284, 289], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [287, 289], 'children': [{'type': 'Argument', 'name': 'msg', 'range': [288, 289], 'children': []}]}]}]}, {'type': 'RaiseStatement', 'name': '', 'range': [291, 292], 'children': []}]}]}]}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [294, 298], 'children': [{'type': 'CallExpression', 'name': 'register_pydantic_serializers', 'range': [294, 297], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [295, 297], 'children': [{'type': 'Argument', 'name': 'func', 'range': [296, 297], 'children': []}]}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [300, 311], 'children': [{'type': 'CallExpression', 'name': 'pyro.expose', 'range': [300, 306], 'children': [{'type': 'ArgumentList', 'name': '', 'range': [304, 306], 'children': [{'type': 'Argument', 'name': 'wrapper', 'range': [305, 306], 'children': []}]}]}]}]}
2025-01-08 10:29:34,603 - INFO - Completed main AST analysis flow
2025-01-08 10:29:34,604 - INFO - Successfully processed chunk
2025-01-08 10:29:40,024 - INFO - Step 5 result: {'type': 'Program', 'name': '', 'range': [413, 471], 'children': [{'type': 'FunctionDecl', 'name': '_make_custom_serializer', 'range': [413, 470], 'children': [{'type': 'Parameter', 'name': 'model', 'range': [416, 421], 'children': [{'type': 'TypeAnnotation', 'name': '', 'range': [417, 421], 'children': [{'type': 'Type', 'name': 'Type', 'range': [418, 421], 'children': [{'type': 'GenericType', 'name': 'BaseModel', 'range': [419, 421], 'children': []}]}]}]}, {'type': 'FunctionDecl', 'name': 'custom_class_to_dict', 'range': [425, 465], 'children': [{'type': 'Parameter', 'name': 'obj', 'range': [428, 429], 'children': []}, {'type': 'VariableDecl', 'name': 'data', 'range': [432, 454], 'children': [{'type': 'ObjectLiteral', 'name': '', 'range': [434, 454], 'children': [{'type': 'Property', 'name': '__class__', 'range': [436, 443], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [438, 442], 'children': [{'type': 'Identifier', 'name': 'obj', 'range': [438, 438], 'children': []}, {'type': 'Identifier', 'name': '__class__', 'range': [440, 440], 'children': []}, {'type': 'Identifier', 'name': '__qualname__', 'range': [442, 442], 'children': []}]}]}, {'type': 'SpreadElement', 'name': '', 'range': [445, 452], 'children': [{'type': 'CallExpression', 'name': '', 'range': [447, 452], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [447, 449], 'children': [{'type': 'Identifier', 'name': 'obj', 'range': [447, 447], 'children': []}, {'type': 'Identifier', 'name': 'model_dump', 'range': [449, 449], 'children': []}]}]}]}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [456, 462], 'children': [{'type': 'CallExpression', 'name': '', 'range': [457, 462], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [457, 458], 'children': [{'type': 'Identifier', 'name': 'logger', 'range': [456, 456], 'children': []}, {'type': 'Identifier', 'name': 'debug', 'range': [458, 458], 'children': []}]}, {'type': 'TemplateLiteral', 'name': '', 'range': [459, 462], 'children': [{'type': 'TemplateElement', 'name': '', 'range': [460, 462], 'children': []}]}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [464, 465], 'children': [{'type': 'Identifier', 'name': 'data', 'range': [465, 465], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [468, 469], 'children': [{'type': 'Identifier', 'name': 'custom_class_to_dict', 'range': [469, 469], 'children': []}]}]}]}
2025-01-08 10:29:40,024 - INFO - Completed main AST analysis flow
2025-01-08 10:29:40,025 - INFO - Successfully processed chunk
2025-01-08 10:29:40,041 - INFO - Step 3 result: {'type': 'Program', 'name': 'AppService', 'range': [516, 1051], 'children': [{'type': 'ClassDeclaration', 'name': 'AppService', 'range': [516, 522], 'children': [{'type': 'Inheritance', 'name': 'AppProcess ABC', 'range': [518, 522], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'shared_event_loop', 'range': [525, 529], 'children': [{'type': 'TypeAnnotation', 'name': 'asyncio AbstractEventLoop', 'range': [527, 529], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'use_db', 'range': [531, 535], 'children': [{'type': 'TypeAnnotation', 'name': 'bool', 'range': [533, 535], 'children': []}, {'type': 'Assignment', 'name': 'False', 'range': [535, 535], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'use_redis', 'range': [537, 541], 'children': [{'type': 'TypeAnnotation', 'name': 'bool', 'range': [539, 541], 'children': []}, {'type': 'Assignment', 'name': 'False', 'range': [541, 541], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'use_supabase', 'range': [543, 547], 'children': [{'type': 'TypeAnnotation', 'name': 'bool', 'range': [545, 547], 'children': []}, {'type': 'Assignment', 'name': 'False', 'range': [547, 547], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': '__init__', 'range': [550, 562], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [553, 553], 'children': []}, {'type': 'Assignment', 'name': 'self uri None', 'range': [557, 561], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': 'get_port', 'range': [570, 580], 'children': [{'type': 'Parameter', 'name': 'cls', 'range': [573, 573], 'children': []}, {'type': 'ReturnType', 'name': 'int', 'range': [577, 577], 'children': []}, {'type': 'Block', 'name': 'pass', 'range': [580, 580], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': 'get_host', 'range': [586, 610], 'children': [{'type': 'Parameter', 'name': 'cls', 'range': [589, 589], 'children': []}, {'type': 'ReturnType', 'name': 'str', 'range': [593, 593], 'children': []}, {'type': 'Block', 'name': 'return os environ get f cls service_name upper HOST config pyro_host', 'range': [596, 610], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': 'run_service', 'range': [612, 632], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [615, 615], 'children': []}, {'type': 'ReturnType', 'name': 'None', 'range': [619, 619], 'children': []}, {'type': 'Block', 'name': 'while True time sleep 10', 'range': [622, 632], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': '__run_async', 'range': [634, 663], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [637, 637], 'children': []}, {'type': 'Parameter', 'name': 'coro', 'range': [639, 639], 'children': [{'type': 'TypeAnnotation', 'name': 'Coroutine Any Any T', 'range': [641, 648], 'children': []}]}, {'type': 'Block', 'name': 'return asyncio run_coroutine_threadsafe coro self shared_event_loop', 'range': [652, 663], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': 'run_and_wait', 'range': [665, 701], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [668, 668], 'children': []}, {'type': 'Parameter', 'name': 'coro', 'range': [670, 670], 'children': [{'type': 'TypeAnnotation', 'name': 'Coroutine Any Any T', 'range': [672, 679], 'children': []}]}, {'type': 'ReturnType', 'name': 'T', 'range': [683, 683], 'children': []}, {'type': 'Block', 'name': 'future self __run_async coro return future result', 'range': [686, 701], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': 'run', 'range': [703, 786], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [706, 706], 'children': []}, {'type': 'Block', 'name': 'self shared_event_loop asyncio get_event_loop if self use_db self shared_event_loop run_until_complete db connect if self use_redis redis connect if self use_supabase from supabase import create_client secrets Secrets self supabase create_client secrets supabase_url secrets supabase_service_role_key async_thread threading Thread target self __start_async_loop async_thread daemon True async_thread start daemon_thread threading Thread target self __start_pyro daemon_thread daemon True daemon_thread start self run_service', 'range': [710, 786], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': 'cleanup', 'range': [876, 928], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [879, 879], 'children': []}, {'type': 'Block', 'name': 'if self use_db logger info f self __class__ __name__ ⏳ Disconnecting DB self run_and_wait db disconnect if self use_redis logger info f self __class__ __name__ ⏳ Disconnecting Redis redis disconnect', 'range': [883, 928], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': '__start_pyro', 'range': [937, 1034], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [940, 940], 'children': []}, {'type': 'Block', 'name': 'maximum_connection_thread_count max Pyro5 config THREADPOOL_SIZE config num_node_workers config num_graph_workers Pyro5 config THREADPOOL_SIZE maximum_connection_thread_count daemon Pyro5 api Daemon host config pyro_host port self get_port self uri daemon register self objectId self service_name logger info f self service_name Connected to Pyro URI self uri daemon requestLoop', 'range': [944, 1034], 'children': []}]}, {'type': 'FunctionDeclaration', 'name': '__start_async_loop', 'range': [1035, 1050], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1038, 1038], 'children': []}, {'type': 'Block', 'name': 'self shared_event_loop run_forever', 'range': [1042, 1050], 'children': []}]}]}
2025-01-08 10:29:40,041 - INFO - Starting Step 4: AST normalization
2025-01-08 10:29:46,015 - INFO - Step 5 result: {'type': 'Program', 'name': '', 'range': [99, 162], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [99, 103], 'children': [{'type': 'ImportSpecifier', 'name': 'Pyro5', 'range': [100, 100], 'children': []}, {'type': 'ImportSpecifier', 'name': 'api', 'range': [102, 102], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [104, 108], 'children': [{'type': 'ImportSpecifier', 'name': 'pydantic', 'range': [105, 105], 'children': []}, {'type': 'ImportSpecifier', 'name': 'BaseModel', 'range': [107, 107], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [109, 115], 'children': [{'type': 'ImportSpecifier', 'name': 'Pyro5', 'range': [110, 110], 'children': []}, {'type': 'ImportSpecifier', 'name': 'api', 'range': [112, 112], 'children': []}, {'type': 'ImportSpecifier', 'name': 'pyro', 'range': [114, 114], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [116, 122], 'children': [{'type': 'ImportSpecifier', 'name': 'Pyro5', 'range': [117, 117], 'children': []}, {'type': 'ImportSpecifier', 'name': 'config', 'range': [119, 119], 'children': []}, {'type': 'ImportSpecifier', 'name': 'pyro_config', 'range': [121, 121], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [124, 132], 'children': [{'type': 'ImportSpecifier', 'name': 'backend', 'range': [125, 125], 'children': []}, {'type': 'ImportSpecifier', 'name': 'data', 'range': [127, 127], 'children': []}, {'type': 'ImportSpecifier', 'name': 'db', 'range': [129, 129], 'children': []}, {'type': 'ImportSpecifier', 'name': 'redis', 'range': [131, 131], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [133, 141], 'children': [{'type': 'ImportSpecifier', 'name': 'backend', 'range': [134, 134], 'children': []}, {'type': 'ImportSpecifier', 'name': 'util', 'range': [136, 136], 'children': []}, {'type': 'ImportSpecifier', 'name': 'process', 'range': [138, 138], 'children': []}, {'type': 'ImportSpecifier', 'name': 'AppProcess', 'range': [140, 140], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [142, 150], 'children': [{'type': 'ImportSpecifier', 'name': 'backend', 'range': [143, 143], 'children': []}, {'type': 'ImportSpecifier', 'name': 'util', 'range': [145, 145], 'children': []}, {'type': 'ImportSpecifier', 'name': 'retry', 'range': [147, 147], 'children': []}, {'type': 'ImportSpecifier', 'name': 'conn_retry', 'range': [149, 149], 'children': []}]}, {'type': 'ImportDeclaration', 'name': '', 'range': [151, 161], 'children': [{'type': 'ImportSpecifier', 'name': 'backend', 'range': [152, 152], 'children': []}, {'type': 'ImportSpecifier', 'name': 'util', 'range': [154, 154], 'children': []}, {'type': 'ImportSpecifier', 'name': 'settings', 'range': [156, 156], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Config', 'range': [158, 158], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Secrets', 'range': [160, 160], 'children': []}]}]}
2025-01-08 10:29:46,015 - INFO - Completed main AST analysis flow
2025-01-08 10:29:46,017 - INFO - Successfully processed chunk
2025-01-08 10:29:54,854 - INFO - Step 5 result: {'type': 'Program', 'name': '', 'range': [0, 98], 'children': [{'type': 'ImportDeclaration', 'name': 'asyncio', 'range': [0, 2], 'children': []}, {'type': 'ImportDeclaration', 'name': 'builtins', 'range': [3, 5], 'children': []}, {'type': 'ImportDeclaration', 'name': 'logging', 'range': [6, 8], 'children': []}, {'type': 'ImportDeclaration', 'name': 'os', 'range': [9, 11], 'children': []}, {'type': 'ImportDeclaration', 'name': 'threading', 'range': [12, 14], 'children': []}, {'type': 'ImportDeclaration', 'name': 'time', 'range': [15, 17], 'children': []}, {'type': 'ImportDeclaration', 'name': 'typing', 'range': [18, 20], 'children': []}, {'type': 'ImportDeclaration', 'name': 'ABC, abstractmethod', 'range': [21, 27], 'children': [{'type': 'ImportSpecifier', 'name': 'ABC', 'range': [21, 25], 'children': []}, {'type': 'ImportSpecifier', 'name': 'abstractmethod', 'range': [26, 27], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'Enum', 'range': [28, 32], 'children': []}, {'type': 'ImportDeclaration', 'name': 'NoneType, UnionType', 'range': [33, 39], 'children': [{'type': 'ImportSpecifier', 'name': 'NoneType', 'range': [33, 37], 'children': []}, {'type': 'ImportSpecifier', 'name': 'UnionType', 'range': [38, 39], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'Annotated, Any, Awaitable, Callable, Coroutine, Dict, FrozenSet, Iterator, List, Set, Tuple, Type, TypeVar, Union, cast, get_args, get_origin', 'range': [40, 97], 'children': [{'type': 'ImportSpecifier', 'name': 'Annotated', 'range': [40, 45], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Any', 'range': [46, 48], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Awaitable', 'range': [49, 51], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Callable', 'range': [52, 54], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Coroutine', 'range': [55, 57], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Dict', 'range': [58, 60], 'children': []}, {'type': 'ImportSpecifier', 'name': 'FrozenSet', 'range': [61, 63], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Iterator', 'range': [64, 66], 'children': []}, {'type': 'ImportSpecifier', 'name': 'List', 'range': [67, 69], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Set', 'range': [70, 72], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Tuple', 'range': [73, 75], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Type', 'range': [76, 78], 'children': []}, {'type': 'ImportSpecifier', 'name': 'TypeVar', 'range': [79, 81], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Union', 'range': [82, 84], 'children': []}, {'type': 'ImportSpecifier', 'name': 'cast', 'range': [85, 87], 'children': []}, {'type': 'ImportSpecifier', 'name': 'get_args', 'range': [88, 90], 'children': []}, {'type': 'ImportSpecifier', 'name': 'get_origin', 'range': [91, 93], 'children': []}]}]}
2025-01-08 10:29:54,854 - INFO - Completed main AST analysis flow
2025-01-08 10:29:54,855 - INFO - Successfully processed chunk
2025-01-08 10:29:56,956 - INFO - Step 3 result: {'type': 'Program', 'name': 'register_pydantic_serializers', 'range': [313, 412], 'children': [{'type': 'FunctionDeclaration', 'name': 'register_pydantic_serializers', 'range': [313, 412], 'children': [{'type': 'FunctionSignature', 'name': 'register_pydantic_serializers', 'range': [313, 320], 'children': [{'type': 'Keyword', 'name': 'def', 'range': [313, 313], 'children': []}, {'type': 'Identifier', 'name': 'register_pydantic_serializers', 'range': [314, 314], 'children': []}, {'type': 'ParameterList', 'name': '', 'range': [315, 319], 'children': [{'type': 'Parameter', 'name': 'func', 'range': [316, 316], 'children': []}, {'type': 'TypeAnnotation', 'name': '', 'range': [317, 318], 'children': [{'type': 'Keyword', 'name': ':', 'range': [317, 317], 'children': []}, {'type': 'Type', 'name': 'Callable', 'range': [318, 318], 'children': []}]}]}]}, {'type': 'FunctionBody', 'name': '', 'range': [321, 412], 'children': [{'type': 'Docstring', 'name': '', 'range': [322, 324], 'children': [{'type': 'String', 'name': '"Register custom serializers and deserializers for annotated Pydantic models"', 'range': [323, 323], 'children': []}]}, {'type': 'ForLoop', 'name': '', 'range': [326, 382], 'children': [{'type': 'Keyword', 'name': 'for', 'range': [326, 326], 'children': []}, {'type': 'VariableDeclaration', 'name': '', 'range': [327, 329], 'children': [{'type': 'Identifier', 'name': 'name', 'range': [327, 327], 'children': []}, {'type': 'Identifier', 'name': 'annotation', 'range': [329, 329], 'children': []}]}, {'type': 'Keyword', 'name': 'in', 'range': [330, 330], 'children': []}, {'type': 'Expression', 'name': '', 'range': [331, 337], 'children': [{'type': 'Identifier', 'name': 'func', 'range': [331, 331], 'children': []}, {'type': 'MemberAccess', 'name': '', 'range': [332, 335], 'children': [{'type': 'Identifier', 'name': '__annotations__', 'range': [333, 333], 'children': []}, {'type': 'Identifier', 'name': 'items', 'range': [335, 335], 'children': []}]}]}, {'type': 'Block', 'name': '', 'range': [339, 382], 'children': [{'type': 'TryStatement', 'name': '', 'range': [340, 362], 'children': [{'type': 'Block', 'name': '', 'range': [342, 349], 'children': [{'type': 'VariableDeclaration', 'name': '', 'range': [343, 345], 'children': [{'type': 'Identifier', 'name': 'pydantic_types', 'range': [343, 343], 'children': []}, {'type': 'CallExpression', 'name': '', 'range': [345, 349], 'children': [{'type': 'Identifier', 'name': '_pydantic_models_from_type_annotation', 'range': [345, 345], 'children': []}, {'type': 'ArgumentList', 'name': '', 'range': [346, 348], 'children': [{'type': 'Identifier', 'name': 'annotation', 'range': [347, 347], 'children': []}]}]}]}]}, {'type': 'CatchClause', 'name': '', 'range': [350, 362], 'children': [{'type': 'Block', 'name': '', 'range': [355, 362], 'children': [{'type': 'ThrowStatement', 'name': '', 'range': [356, 361], 'children': [{'type': 'NewExpression', 'name': '', 'range': [357, 361], 'children': [{'type': 'Identifier', 'name': 'TypeError', 'range': [357, 357], 'children': []}, {'type': 'ArgumentList', 'name': '', 'range': [358, 360], 'children': [{'type': 'String', 'name': '"Error while exposing {func.__name__}: {e.__str__()}"', 'range': [359, 359], 'children': []}]}]}]}]}]}]}]}]}, {'type': 'ForLoop', 'name': '', 'range': [364, 410], 'children': [{'type': 'Keyword', 'name': 'for', 'range': [364, 364], 'children': []}, {'type': 'VariableDeclaration', 'name': '', 'range': [365, 365], 'children': [{'type': 'Identifier', 'name': 'model', 'range': [365, 365], 'children': []}]}, {'type': 'Keyword', 'name': 'in', 'range': [366, 366], 'children': []}, {'type': 'Expression', 'name': '', 'range': [367, 367], 'children': [{'type': 'Identifier', 'name': 'pydantic_types', 'range': [367, 367], 'children': []}]}, {'type': 'Block', 'name': '', 'range': [369, 410], 'children': [{'type': 'ExpressionStatement', 'name': '', 'range': [370, 381], 'children': [{'type': 'CallExpression', 'name': '', 'range': [370, 381], 'children': [{'type': 'MemberAccess', 'name': '', 'range': [370, 372], 'children': [{'type': 'Identifier', 'name': 'logger', 'range': [370, 370], 'children': []}, {'type': 'Identifier', 'name': 'debug', 'range': [372, 372], 'children': []}]}, {'type': 'ArgumentList', 'name': '', 'range': [373, 380], 'children': [{'type': 'String', 'name': '"Registering Pyro (de)serializers for {func.__name__} annotation "', 'range': [376, 376], 'children': []}, {'type': 'String', 'name': '"\'{name}\': {model.__qualname__}"', 'range': [379, 379], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [383, 394], 'children': [{'type': 'CallExpression', 'name': '', 'range': [383, 394], 'children': [{'type': 'MemberAccess', 'name': '', 'range': [383, 385], 'children': [{'type': 'Identifier', 'name': 'pyro', 'range': [383, 383], 'children': []}, {'type': 'Identifier', 'name': 'register_class_to_dict', 'range': [385, 385], 'children': []}]}, {'type': 'ArgumentList', 'name': '', 'range': [386, 393], 'children': [{'type': 'Identifier', 'name': 'model', 'range': [387, 387], 'children': []}, {'type': 'CallExpression', 'name': '', 'range': [389, 393], 'children': [{'type': 'Identifier', 'name': '_make_custom_serializer', 'range': [389, 389], 'children': []}, {'type': 'ArgumentList', 'name': '', 'range': [390, 392], 'children': [{'type': 'Identifier', 'name': 'model', 'range': [391, 391], 'children': []}]}]}]}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [395, 410], 'children': [{'type': 'CallExpression', 'name': '', 'range': [395, 410], 'children': [{'type': 'MemberAccess', 'name': '', 'range': [395, 397], 'children': [{'type': 'Identifier', 'name': 'pyro', 'range': [395, 395], 'children': []}, {'type': 'Identifier', 'name': 'register_dict_to_class', 'range': [397, 397], 'children': []}]}, {'type': 'ArgumentList', 'name': '', 'range': [398, 409], 'children': [{'type': 'MemberAccess', 'name': '', 'range': [400, 402], 'children': [{'type': 'Identifier', 'name': 'model', 'range': [400, 400], 'children': []}, {'type': 'Identifier', 'name': '__qualname__', 'range': [402, 402], 'children': []}]}, {'type': 'CallExpression', 'name': '', 'range': [404, 408], 'children': [{'type': 'Identifier', 'name': '_make_custom_deserializer', 'range': [404, 404], 'children': []}, {'type': 'ArgumentList', 'name': '', 'range': [405, 407], 'children': [{'type': 'Identifier', 'name': 'model', 'range': [406, 406], 'children': []}]}]}]}]}]}]}]}]}]}]}
2025-01-08 10:29:56,956 - INFO - Starting Step 4: AST normalization
2025-01-08 10:30:18,545 - INFO - Step 4 result: {'type': 'Program', 'name': 'AppService', 'range': [516, 1051], 'children': [{'type': 'ClassDecl', 'name': 'AppService', 'range': [516, 522], 'children': [{'type': 'Inheritance', 'name': 'AppProcess ABC', 'range': [518, 522], 'children': []}]}, {'type': 'VariableDecl', 'name': 'shared_event_loop', 'range': [525, 529], 'children': [{'type': 'TypeAnnotation', 'name': 'asyncio AbstractEventLoop', 'range': [527, 529], 'children': []}]}, {'type': 'VariableDecl', 'name': 'use_db', 'range': [531, 535], 'children': [{'type': 'TypeAnnotation', 'name': 'bool', 'range': [533, 535], 'children': []}, {'type': 'Assignment', 'name': 'False', 'range': [535, 535], 'children': []}]}, {'type': 'VariableDecl', 'name': 'use_redis', 'range': [537, 541], 'children': [{'type': 'TypeAnnotation', 'name': 'bool', 'range': [539, 541], 'children': []}, {'type': 'Assignment', 'name': 'False', 'range': [541, 541], 'children': []}]}, {'type': 'VariableDecl', 'name': 'use_supabase', 'range': [543, 547], 'children': [{'type': 'TypeAnnotation', 'name': 'bool', 'range': [545, 547], 'children': []}, {'type': 'Assignment', 'name': 'False', 'range': [547, 547], 'children': []}]}, {'type': 'FunctionDecl', 'name': '__init__', 'range': [550, 562], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [553, 553], 'children': []}, {'type': 'Assignment', 'name': 'self uri None', 'range': [557, 561], 'children': []}]}, {'type': 'FunctionDecl', 'name': 'get_port', 'range': [570, 580], 'children': [{'type': 'Parameter', 'name': 'cls', 'range': [573, 573], 'children': []}, {'type': 'ReturnType', 'name': 'int', 'range': [577, 577], 'children': []}, {'type': 'Block', 'name': 'pass', 'range': [580, 580], 'children': []}]}, {'type': 'FunctionDecl', 'name': 'get_host', 'range': [586, 610], 'children': [{'type': 'Parameter', 'name': 'cls', 'range': [589, 589], 'children': []}, {'type': 'ReturnType', 'name': 'str', 'range': [593, 593], 'children': []}, {'type': 'Block', 'name': 'return os environ get f cls service_name upper HOST config pyro_host', 'range': [596, 610], 'children': []}]}, {'type': 'FunctionDecl', 'name': 'run_service', 'range': [612, 632], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [615, 615], 'children': []}, {'type': 'ReturnType', 'name': 'None', 'range': [619, 619], 'children': []}, {'type': 'Block', 'name': 'while True time sleep 10', 'range': [622, 632], 'children': []}]}, {'type': 'FunctionDecl', 'name': '__run_async', 'range': [634, 663], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [637, 637], 'children': []}, {'type': 'Parameter', 'name': 'coro', 'range': [639, 639], 'children': [{'type': 'TypeAnnotation', 'name': 'Coroutine Any Any T', 'range': [641, 648], 'children': []}]}, {'type': 'Block', 'name': 'return asyncio run_coroutine_threadsafe coro self shared_event_loop', 'range': [652, 663], 'children': []}]}, {'type': 'FunctionDecl', 'name': 'run_and_wait', 'range': [665, 701], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [668, 668], 'children': []}, {'type': 'Parameter', 'name': 'coro', 'range': [670, 670], 'children': [{'type': 'TypeAnnotation', 'name': 'Coroutine Any Any T', 'range': [672, 679], 'children': []}]}, {'type': 'ReturnType', 'name': 'T', 'range': [683, 683], 'children': []}, {'type': 'Block', 'name': 'future self __run_async coro return future result', 'range': [686, 701], 'children': []}]}, {'type': 'FunctionDecl', 'name': 'run', 'range': [703, 786], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [706, 706], 'children': []}, {'type': 'Block', 'name': 'self shared_event_loop asyncio get_event_loop if self use_db self shared_event_loop run_until_complete db connect if self use_redis redis connect if self use_supabase from supabase import create_client secrets Secrets self supabase create_client secrets supabase_url secrets supabase_service_role_key async_thread threading Thread target self __start_async_loop async_thread daemon True async_thread start daemon_thread threading Thread target self __start_pyro daemon_thread daemon True daemon_thread start self run_service', 'range': [710, 786], 'children': []}]}, {'type': 'FunctionDecl', 'name': 'cleanup', 'range': [876, 928], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [879, 879], 'children': []}, {'type': 'Block', 'name': 'if self use_db logger info f self __class__ __name__ ⏳ Disconnecting DB self run_and_wait db disconnect if self use_redis logger info f self __class__ __name__ ⏳ Disconnecting Redis redis disconnect', 'range': [883, 928], 'children': []}]}, {'type': 'FunctionDecl', 'name': '__start_pyro', 'range': [937, 1034], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [940, 940], 'children': []}, {'type': 'Block', 'name': 'maximum_connection_thread_count max Pyro5 config THREADPOOL_SIZE config num_node_workers config num_graph_workers Pyro5 config THREADPOOL_SIZE maximum_connection_thread_count daemon Pyro5 api Daemon host config pyro_host port self get_port self uri daemon register self objectId self service_name logger info f self service_name Connected to Pyro URI self uri daemon requestLoop', 'range': [944, 1034], 'children': []}]}, {'type': 'FunctionDecl', 'name': '__start_async_loop', 'range': [1035, 1050], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1038, 1038], 'children': []}, {'type': 'Block', 'name': 'self shared_event_loop run_forever', 'range': [1042, 1050], 'children': []}]}]}
2025-01-08 10:30:18,545 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:30:49,557 - INFO - Step 4 result: {'type': 'Program', 'name': 'register_pydantic_serializers', 'range': [313, 412], 'children': [{'type': 'FunctionDecl', 'name': 'register_pydantic_serializers', 'range': [313, 412], 'children': [{'type': 'FunctionSignature', 'name': 'register_pydantic_serializers', 'range': [313, 320], 'children': [{'type': 'Keyword', 'name': 'def', 'range': [313, 313], 'children': []}, {'type': 'Identifier', 'name': 'register_pydantic_serializers', 'range': [314, 314], 'children': []}, {'type': 'ParameterList', 'name': '', 'range': [315, 319], 'children': [{'type': 'Parameter', 'name': 'func', 'range': [316, 316], 'children': []}, {'type': 'TypeAnnotation', 'name': '', 'range': [317, 318], 'children': [{'type': 'Keyword', 'name': ':', 'range': [317, 317], 'children': []}, {'type': 'Type', 'name': 'Callable', 'range': [318, 318], 'children': []}]}]}]}, {'type': 'FunctionBody', 'name': '', 'range': [321, 412], 'children': [{'type': 'Docstring', 'name': '', 'range': [322, 324], 'children': [{'type': 'Literal', 'name': '"Register custom serializers and deserializers for annotated Pydantic models"', 'range': [323, 323], 'children': []}]}, {'type': 'ForStatement', 'name': '', 'range': [326, 382], 'children': [{'type': 'Keyword', 'name': 'for', 'range': [326, 326], 'children': []}, {'type': 'VariableDeclaration', 'name': '', 'range': [327, 329], 'children': [{'type': 'Identifier', 'name': 'name', 'range': [327, 327], 'children': []}, {'type': 'Identifier', 'name': 'annotation', 'range': [329, 329], 'children': []}]}, {'type': 'Keyword', 'name': 'in', 'range': [330, 330], 'children': []}, {'type': 'CallExpression', 'name': '', 'range': [331, 337], 'children': [{'type': 'Identifier', 'name': 'func', 'range': [331, 331], 'children': []}, {'type': 'MemberAccess', 'name': '', 'range': [332, 335], 'children': [{'type': 'Identifier', 'name': '__annotations__', 'range': [333, 333], 'children': []}, {'type': 'Identifier', 'name': 'items', 'range': [335, 335], 'children': []}]}]}, {'type': 'Block', 'name': '', 'range': [339, 382], 'children': [{'type': 'TryStatement', 'name': '', 'range': [340, 362], 'children': [{'type': 'Block', 'name': '', 'range': [342, 349], 'children': [{'type': 'VariableDeclaration', 'name': '', 'range': [343, 345], 'children': [{'type': 'Identifier', 'name': 'pydantic_types', 'range': [343, 343], 'children': []}, {'type': 'CallExpression', 'name': '', 'range': [345, 349], 'children': [{'type': 'Identifier', 'name': '_pydantic_models_from_type_annotation', 'range': [345, 345], 'children': []}, {'type': 'ArgumentList', 'name': '', 'range': [346, 348], 'children': [{'type': 'Identifier', 'name': 'annotation', 'range': [347, 347], 'children': []}]}]}]}]}, {'type': 'CatchClause', 'name': '', 'range': [350, 362], 'children': [{'type': 'Block', 'name': '', 'range': [355, 362], 'children': [{'type': 'ThrowStatement', 'name': '', 'range': [356, 361], 'children': [{'type': 'NewExpression', 'name': '', 'range': [357, 361], 'children': [{'type': 'Identifier', 'name': 'TypeError', 'range': [357, 357], 'children': []}, {'type': 'ArgumentList', 'name': '', 'range': [358, 360], 'children': [{'type': 'Literal', 'name': '"Error while exposing {func.__name__}: {e.__str__()}"', 'range': [359, 359], 'children': []}]}]}]}]}]}]}]}]}, {'type': 'ForStatement', 'name': '', 'range': [364, 410], 'children': [{'type': 'Keyword', 'name': 'for', 'range': [364, 364], 'children': []}, {'type': 'VariableDeclaration', 'name': '', 'range': [365, 365], 'children': [{'type': 'Identifier', 'name': 'model', 'range': [365, 365], 'children': []}]}, {'type': 'Keyword', 'name': 'in', 'range': [366, 366], 'children': []}, {'type': 'Identifier', 'name': 'pydantic_types', 'range': [367, 367], 'children': []}, {'type': 'Block', 'name': '', 'range': [369, 410], 'children': [{'type': 'ExpressionStatement', 'name': '', 'range': [370, 381], 'children': [{'type': 'CallExpression', 'name': '', 'range': [370, 381], 'children': [{'type': 'MemberAccess', 'name': '', 'range': [370, 372], 'children': [{'type': 'Identifier', 'name': 'logger', 'range': [370, 370], 'children': []}, {'type': 'Identifier', 'name': 'debug', 'range': [372, 372], 'children': []}]}, {'type': 'ArgumentList', 'name': '', 'range': [373, 380], 'children': [{'type': 'Literal', 'name': '"Registering Pyro (de)serializers for {func.__name__} annotation "', 'range': [376, 376], 'children': []}, {'type': 'Literal', 'name': '"\'{name}\': {model.__qualname__}"', 'range': [379, 379], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [383, 394], 'children': [{'type': 'CallExpression', 'name': '', 'range': [383, 394], 'children': [{'type': 'MemberAccess', 'name': '', 'range': [383, 385], 'children': [{'type': 'Identifier', 'name': 'pyro', 'range': [383, 383], 'children': []}, {'type': 'Identifier', 'name': 'register_class_to_dict', 'range': [385, 385], 'children': []}]}, {'type': 'ArgumentList', 'name': '', 'range': [386, 393], 'children': [{'type': 'Identifier', 'name': 'model', 'range': [387, 387], 'children': []}, {'type': 'CallExpression', 'name': '', 'range': [389, 393], 'children': [{'type': 'Identifier', 'name': '_make_custom_serializer', 'range': [389, 389], 'children': []}, {'type': 'ArgumentList', 'name': '', 'range': [390, 392], 'children': [{'type': 'Identifier', 'name': 'model', 'range': [391, 391], 'children': []}]}]}]}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [395, 410], 'children': [{'type': 'CallExpression', 'name': '', 'range': [395, 410], 'children': [{'type': 'MemberAccess', 'name': '', 'range': [395, 397], 'children': [{'type': 'Identifier', 'name': 'pyro', 'range': [395, 395], 'children': []}, {'type': 'Identifier', 'name': 'register_dict_to_class', 'range': [397, 397], 'children': []}]}, {'type': 'ArgumentList', 'name': '', 'range': [398, 409], 'children': [{'type': 'MemberAccess', 'name': '', 'range': [400, 402], 'children': [{'type': 'Identifier', 'name': 'model', 'range': [400, 400], 'children': []}, {'type': 'Identifier', 'name': '__qualname__', 'range': [402, 402], 'children': []}]}, {'type': 'CallExpression', 'name': '', 'range': [404, 408], 'children': [{'type': 'Identifier', 'name': '_make_custom_deserializer', 'range': [404, 404], 'children': []}, {'type': 'ArgumentList', 'name': '', 'range': [405, 407], 'children': [{'type': 'Identifier', 'name': 'model', 'range': [406, 406], 'children': []}]}]}]}]}]}]}]}]}]}]}
2025-01-08 10:30:49,558 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:30:58,099 - INFO - Step 5 result: {'type': 'Program', 'name': 'AppService', 'range': [516, 1051], 'children': [{'type': 'ClassDecl', 'name': 'AppService', 'range': [516, 522], 'children': [{'type': 'Inheritance', 'name': 'AppProcess ABC', 'range': [518, 522], 'children': []}]}, {'type': 'VariableDecl', 'name': 'shared_event_loop', 'range': [525, 529], 'children': [{'type': 'TypeAnnotation', 'name': 'asyncio AbstractEventLoop', 'range': [527, 529], 'children': []}]}, {'type': 'VariableDecl', 'name': 'use_db', 'range': [531, 535], 'children': [{'type': 'TypeAnnotation', 'name': 'bool', 'range': [533, 535], 'children': []}, {'type': 'Assignment', 'name': 'False', 'range': [535, 535], 'children': []}]}, {'type': 'VariableDecl', 'name': 'use_redis', 'range': [537, 541], 'children': [{'type': 'TypeAnnotation', 'name': 'bool', 'range': [539, 541], 'children': []}, {'type': 'Assignment', 'name': 'False', 'range': [541, 541], 'children': []}]}, {'type': 'VariableDecl', 'name': 'use_supabase', 'range': [543, 547], 'children': [{'type': 'TypeAnnotation', 'name': 'bool', 'range': [545, 547], 'children': []}, {'type': 'Assignment', 'name': 'False', 'range': [547, 547], 'children': []}]}, {'type': 'FunctionDecl', 'name': '__init__', 'range': [550, 562], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [553, 553], 'children': []}, {'type': 'Assignment', 'name': 'self uri None', 'range': [557, 561], 'children': []}]}, {'type': 'FunctionDecl', 'name': 'get_port', 'range': [570, 580], 'children': [{'type': 'Parameter', 'name': 'cls', 'range': [573, 573], 'children': []}, {'type': 'ReturnType', 'name': 'int', 'range': [577, 577], 'children': []}, {'type': 'Block', 'name': 'pass', 'range': [580, 580], 'children': []}]}, {'type': 'FunctionDecl', 'name': 'get_host', 'range': [586, 610], 'children': [{'type': 'Parameter', 'name': 'cls', 'range': [589, 589], 'children': []}, {'type': 'ReturnType', 'name': 'str', 'range': [593, 593], 'children': []}, {'type': 'Block', 'name': 'return os environ get f cls service_name upper HOST config pyro_host', 'range': [596, 610], 'children': []}]}, {'type': 'FunctionDecl', 'name': 'run_service', 'range': [612, 632], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [615, 615], 'children': []}, {'type': 'ReturnType', 'name': 'None', 'range': [619, 619], 'children': []}, {'type': 'Block', 'name': 'while True time sleep 10', 'range': [622, 632], 'children': []}]}, {'type': 'FunctionDecl', 'name': '__run_async', 'range': [634, 663], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [637, 637], 'children': []}, {'type': 'Parameter', 'name': 'coro', 'range': [639, 639], 'children': [{'type': 'TypeAnnotation', 'name': 'Coroutine Any Any T', 'range': [641, 648], 'children': []}]}, {'type': 'Block', 'name': 'return asyncio run_coroutine_threadsafe coro self shared_event_loop', 'range': [652, 663], 'children': []}]}, {'type': 'FunctionDecl', 'name': 'run_and_wait', 'range': [665, 701], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [668, 668], 'children': []}, {'type': 'Parameter', 'name': 'coro', 'range': [670, 670], 'children': [{'type': 'TypeAnnotation', 'name': 'Coroutine Any Any T', 'range': [672, 679], 'children': []}]}, {'type': 'ReturnType', 'name': 'T', 'range': [683, 683], 'children': []}, {'type': 'Block', 'name': 'future self __run_async coro return future result', 'range': [686, 701], 'children': []}]}, {'type': 'FunctionDecl', 'name': 'run', 'range': [703, 786], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [706, 706], 'children': []}, {'type': 'Block', 'name': 'self shared_event_loop asyncio get_event_loop if self use_db self shared_event_loop run_until_complete db connect if self use_redis redis connect if self use_supabase from supabase import create_client secrets Secrets self supabase create_client secrets supabase_url secrets supabase_service_role_key async_thread threading Thread target self __start_async_loop async_thread daemon True async_thread start daemon_thread threading Thread target self __start_pyro daemon_thread daemon True daemon_thread start self run_service', 'range': [710, 786], 'children': []}]}, {'type': 'FunctionDecl', 'name': 'cleanup', 'range': [876, 928], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [879, 879], 'children': []}, {'type': 'Block', 'name': 'if self use_db logger info f self __class__ __name__ ⏳ Disconnecting DB self run_and_wait db disconnect if self use_redis logger info f self __class__ __name__ ⏳ Disconnecting Redis redis disconnect', 'range': [883, 928], 'children': []}]}, {'type': 'FunctionDecl', 'name': '__start_pyro', 'range': [937, 1034], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [940, 940], 'children': []}, {'type': 'Block', 'name': 'maximum_connection_thread_count max Pyro5 config THREADPOOL_SIZE config num_node_workers config num_graph_workers Pyro5 config THREADPOOL_SIZE maximum_connection_thread_count daemon Pyro5 api Daemon host config pyro_host port self get_port self uri daemon register self objectId self service_name logger info f self service_name Connected to Pyro URI self uri daemon requestLoop', 'range': [944, 1034], 'children': []}]}, {'type': 'FunctionDecl', 'name': '__start_async_loop', 'range': [1035, 1050], 'children': [{'type': 'Parameter', 'name': 'self', 'range': [1038, 1038], 'children': []}, {'type': 'Block', 'name': 'self shared_event_loop run_forever', 'range': [1042, 1050], 'children': []}]}]}
2025-01-08 10:30:58,099 - INFO - Completed main AST analysis flow
2025-01-08 10:30:58,101 - INFO - Successfully processed chunk
2025-01-08 10:30:58,288 - INFO - Step 3 result: {'type': 'Program', 'name': '_pydantic_models_from_type_annotation', 'range': [1324, 1594], 'children': [{'type': 'FunctionDef', 'name': '_pydantic_models_from_type_annotation', 'range': [1324, 1594], 'children': [{'type': 'Arguments', 'name': '', 'range': [1326, 1328], 'children': [{'type': 'Arg', 'name': 'annotation', 'range': [1327, 1327], 'children': []}]}, {'type': 'ReturnType', 'name': '', 'range': [1329, 1337], 'children': [{'type': 'Type', 'name': 'Iterator', 'range': [1331, 1331], 'children': []}, {'type': 'Type', 'name': 'type', 'range': [1333, 1333], 'children': []}, {'type': 'Type', 'name': 'BaseModel', 'range': [1335, 1335], 'children': []}]}, {'type': 'Comment', 'name': '', 'range': [1340, 1344], 'children': []}, {'type': 'If', 'name': '', 'range': [1345, 1360], 'children': [{'type': 'Condition', 'name': '', 'range': [1346, 1354], 'children': [{'type': 'Assignment', 'name': 'origin', 'range': [1347, 1353], 'children': [{'type': 'FunctionCall', 'name': 'get_origin', 'range': [1350, 1353], 'children': [{'type': 'Arg', 'name': 'annotation', 'range': [1352, 1352], 'children': []}]}]}, {'type': 'Comparison', 'name': '', 'range': [1355, 1358], 'children': [{'type': 'Variable', 'name': 'origin', 'range': [1356, 1356], 'children': []}, {'type': 'Type', 'name': 'Annotated', 'range': [1358, 1358], 'children': []}]}]}, {'type': 'Assignment', 'name': 'annotation', 'range': [1361, 1369], 'children': [{'type': 'FunctionCall', 'name': 'get_args', 'range': [1363, 1366], 'children': [{'type': 'Arg', 'name': 'annotation', 'range': [1365, 1365], 'children': []}]}, {'type': 'Index', 'name': '', 'range': [1367, 1369], 'children': [{'type': 'Number', 'name': '0', 'range': [1368, 1368], 'children': []}]}]}]}, {'type': 'Assignment', 'name': 'origin', 'range': [1372, 1378], 'children': [{'type': 'FunctionCall', 'name': 'get_origin', 'range': [1374, 1377], 'children': [{'type': 'Arg', 'name': 'annotation', 'range': [1376, 1376], 'children': []}]}]}, {'type': 'Assignment', 'name': 'args', 'range': [1379, 1385], 'children': [{'type': 'FunctionCall', 'name': 'get_args', 'range': [1381, 1384], 'children': [{'type': 'Arg', 'name': 'annotation', 'range': [1383, 1383], 'children': []}]}]}, {'type': 'If', 'name': '', 'range': [1387, 1424], 'children': [{'type': 'Condition', 'name': '', 'range': [1388, 1422], 'children': [{'type': 'Variable', 'name': 'origin', 'range': [1388, 1388], 'children': []}, {'type': 'In', 'name': '', 'range': [1389, 1422], 'children': [{'type': 'Tuple', 'name': '', 'range': [1390, 1422], 'children': [{'type': 'Type', 'name': 'Union', 'range': [1392, 1392], 'children': []}, {'type': 'Type', 'name': 'UnionType', 'range': [1395, 1395], 'children': []}, {'type': 'Type', 'name': 'list', 'range': [1398, 1398], 'children': []}, {'type': 'Type', 'name': 'List', 'range': [1401, 1401], 'children': []}, {'type': 'Type', 'name': 'tuple', 'range': [1404, 1404], 'children': []}, {'type': 'Type', 'name': 'Tuple', 'range': [1407, 1407], 'children': []}, {'type': 'Type', 'name': 'set', 'range': [1410, 1410], 'children': []}, {'type': 'Type', 'name': 'Set', 'range': [1413, 1413], 'children': []}, {'type': 'Type', 'name': 'frozenset', 'range': [1416, 1416], 'children': []}, {'type': 'Type', 'name': 'FrozenSet', 'range': [1419, 1419], 'children': []}]}]}]}, {'type': 'For', 'name': '', 'range': [1425, 1437], 'children': [{'type': 'Variable', 'name': 'arg', 'range': [1426, 1426], 'children': []}, {'type': 'In', 'name': '', 'range': [1427, 1428], 'children': [{'type': 'Variable', 'name': 'args', 'range': [1428, 1428], 'children': []}]}, {'type': 'YieldFrom', 'name': '', 'range': [1431, 1437], 'children': [{'type': 'FunctionCall', 'name': '_pydantic_models_from_type_annotation', 'range': [1433, 1436], 'children': [{'type': 'Arg', 'name': 'arg', 'range': [1435, 1435], 'children': []}]}]}]}]}, {'type': 'Elif', 'name': '', 'range': [1438, 1467], 'children': [{'type': 'Condition', 'name': '', 'range': [1439, 1445], 'children': [{'type': 'Variable', 'name': 'origin', 'range': [1439, 1439], 'children': []}, {'type': 'In', 'name': '', 'range': [1440, 1445], 'children': [{'type': 'Tuple', 'name': '', 'range': [1441, 1445], 'children': [{'type': 'Type', 'name': 'dict', 'range': [1442, 1442], 'children': []}, {'type': 'Type', 'name': 'Dict', 'range': [1444, 1444], 'children': []}]}]}]}, {'type': 'Assignment', 'name': '', 'range': [1448, 1453], 'children': [{'type': 'Variable', 'name': 'key_type', 'range': [1448, 1448], 'children': []}, {'type': 'Variable', 'name': 'value_type', 'range': [1450, 1450], 'children': []}, {'type': 'Variable', 'name': 'args', 'range': [1452, 1452], 'children': []}]}, {'type': 'YieldFrom', 'name': '', 'range': [1454, 1460], 'children': [{'type': 'FunctionCall', 'name': '_pydantic_models_from_type_annotation', 'range': [1456, 1459], 'children': [{'type': 'Arg', 'name': 'key_type', 'range': [1458, 1458], 'children': []}]}]}, {'type': 'YieldFrom', 'name': '', 'range': [1461, 1467], 'children': [{'type': 'FunctionCall', 'name': '_pydantic_models_from_type_annotation', 'range': [1463, 1466], 'children': [{'type': 'Arg', 'name': 'value_type', 'range': [1465, 1465], 'children': []}]}]}]}, {'type': 'Elif', 'name': '', 'range': [1468, 1503], 'children': [{'type': 'Condition', 'name': '', 'range': [1469, 1475], 'children': [{'type': 'Variable', 'name': 'origin', 'range': [1469, 1469], 'children': []}, {'type': 'In', 'name': '', 'range': [1470, 1475], 'children': [{'type': 'Tuple', 'name': '', 'range': [1471, 1475], 'children': [{'type': 'Type', 'name': 'Awaitable', 'range': [1472, 1472], 'children': []}, {'type': 'Type', 'name': 'Coroutine', 'range': [1474, 1474], 'children': []}]}]}]}, {'type': 'Comment', 'name': '', 'range': [1478, 1488], 'children': []}, {'type': 'Assignment', 'name': 'return_type', 'range': [1489, 1495], 'children': [{'type': 'Variable', 'name': 'args', 'range': [1491, 1491], 'children': []}, {'type': 'Index', 'name': '', 'range': [1492, 1495], 'children': [{'type': 'Number', 'name': '-1', 'range': [1493, 1494], 'children': []}]}]}, {'type': 'YieldFrom', 'name': '', 'range': [1497, 1503], 'children': [{'type': 'FunctionCall', 'name': '_pydantic_models_from_type_annotation', 'range': [1499, 1502], 'children': [{'type': 'Arg', 'name': 'return_type', 'range': [1501, 1501], 'children': []}]}]}]}, {'type': 'Else', 'name': '', 'range': [1504, 1594], 'children': [{'type': 'Assignment', 'name': 'annotype', 'range': [1507, 1516], 'children': [{'type': 'Variable', 'name': 'annotation', 'range': [1509, 1509], 'children': []}, {'type': 'If', 'name': '', 'range': [1510, 1515], 'children': [{'type': 'Condition', 'name': '', 'range': [1511, 1513], 'children': [{'type': 'Variable', 'name': 'origin', 'range': [1511, 1511], 'children': []}, {'type': 'Comparison', 'name': '', 'range': [1512, 1513], 'children': [{'type': 'Type', 'name': 'None', 'range': [1513, 1513], 'children': []}]}]}, {'type': 'Variable', 'name': 'origin', 'range': [1515, 1515], 'children': []}]}]}, {'type': 'Comment', 'name': '', 'range': [1518, 1524], 'children': []}, {'type': 'If', 'name': '', 'range': [1525, 1558], 'children': [{'type': 'Condition', 'name': '', 'range': [1526, 1557], 'children': [{'type': 'Variable', 'name': 'annotype', 'range': [1528, 1528], 'children': []}, {'type': 'Comparison', 'name': '', 'range': [1529, 1531], 'children': [{'type': 'Type', 'name': 'None', 'range': [1531, 1531], 'children': []}]}, {'type': 'And', 'name': '', 'range': [1533, 1556], 'children': [{'type': 'Not', 'name': '', 'range': [1534, 1535], 'children': [{'type': 'FunctionCall', 'name': 'hasattr', 'range': [1535, 1547], 'children': [{'type': 'Arg', 'name': 'typing', 'range': [1537, 1537], 'children': []}, {'type': 'Arg', 'name': 'getattr', 'range': [1539, 1546], 'children': [{'type': 'Arg', 'name': 'annotype', 'range': [1541, 1541], 'children': []}, {'type': 'String', 'name': '__name__', 'range': [1543, 1543], 'children': []}, {'type': 'String', 'name': '', 'range': [1545, 1545], 'children': []}]}]}]}, {'type': 'FunctionCall', 'name': 'isinstance', 'range': [1550, 1555], 'children': [{'type': 'Arg', 'name': 'annotype', 'range': [1552, 1552], 'children': []}, {'type': 'Arg', 'name': 'type', 'range': [1554, 1554], 'children': []}]}]}]}, {'type': 'If', 'name': '', 'range': [1560, 1571], 'children': [{'type': 'Condition', 'name': '', 'range': [1561, 1566], 'children': [{'type': 'FunctionCall', 'name': 'issubclass', 'range': [1561, 1566], 'children': [{'type': 'Arg', 'name': 'annotype', 'range': [1563, 1563], 'children': []}, {'type': 'Arg', 'name': 'BaseModel', 'range': [1565, 1565], 'children': []}]}]}, {'type': 'Yield', 'name': '', 'range': [1569, 1571], 'children': [{'type': 'Variable', 'name': 'annotype', 'range': [1570, 1570], 'children': []}]}]}, {'type': 'Elif', 'name': '', 'range': [1572, 1593], 'children': [{'type': 'Condition', 'name': '', 'range': [1573, 1584], 'children': [{'type': 'Variable', 'name': 'annotype', 'range': [1573, 1573], 'children': []}, {'type': 'NotIn', 'name': '', 'range': [1574, 1576], 'children': [{'type': 'Variable', 'name': 'builtin_types', 'range': [1576, 1576], 'children': []}]}, {'type': 'And', 'name': '', 'range': [1577, 1584], 'children': [{'type': 'Not', 'name': '', 'range': [1578, 1579], 'children': [{'type': 'FunctionCall', 'name': 'issubclass', 'range': [1579, 1584], 'children': [{'type': 'Arg', 'name': 'annotype', 'range': [1581, 1581], 'children': []}, {'type': 'Arg', 'name': 'Enum', 'range': [1583, 1583], 'children': []}]}]}]}]}, {'type': 'Raise', 'name': '', 'range': [1587, 1593], 'children': [{'type': 'FunctionCall', 'name': 'TypeError', 'range': [1588, 1592], 'children': [{'type': 'Arg', 'name': 'f', 'range': [1590, 1590], 'children': []}, {'type': 'String', 'name': 'Unsupported type encountered: {annotype}', 'range': [1591, 1591], 'children': []}]}]}]}]}]}]}]}
2025-01-08 10:30:58,289 - INFO - Starting Step 4: AST normalization
2025-01-08 10:31:42,246 - INFO - Step 5 result: {'type': 'Program', 'name': 'register_pydantic_serializers', 'range': [313, 412], 'children': [{'type': 'FunctionDecl', 'name': 'register_pydantic_serializers', 'range': [313, 412], 'children': [{'type': 'FunctionSignature', 'name': 'register_pydantic_serializers', 'range': [313, 320], 'children': [{'type': 'Keyword', 'name': 'def', 'range': [313, 313], 'children': []}, {'type': 'Identifier', 'name': 'register_pydantic_serializers', 'range': [314, 314], 'children': []}, {'type': 'ParameterList', 'name': '', 'range': [315, 319], 'children': [{'type': 'Parameter', 'name': 'func', 'range': [316, 316], 'children': []}, {'type': 'TypeAnnotation', 'name': '', 'range': [317, 318], 'children': [{'type': 'Keyword', 'name': ':', 'range': [317, 317], 'children': []}, {'type': 'Type', 'name': 'Callable', 'range': [318, 318], 'children': []}]}]}]}, {'type': 'FunctionBody', 'name': '', 'range': [321, 412], 'children': [{'type': 'Docstring', 'name': '', 'range': [322, 324], 'children': [{'type': 'Literal', 'name': '"Register custom serializers and deserializers for annotated Pydantic models"', 'range': [323, 323], 'children': []}]}, {'type': 'ForStatement', 'name': '', 'range': [326, 382], 'children': [{'type': 'Keyword', 'name': 'for', 'range': [326, 326], 'children': []}, {'type': 'VariableDeclaration', 'name': '', 'range': [327, 329], 'children': [{'type': 'Identifier', 'name': 'name', 'range': [327, 327], 'children': []}, {'type': 'Identifier', 'name': 'annotation', 'range': [329, 329], 'children': []}]}, {'type': 'Keyword', 'name': 'in', 'range': [330, 330], 'children': []}, {'type': 'CallExpression', 'name': '', 'range': [331, 337], 'children': [{'type': 'Identifier', 'name': 'func', 'range': [331, 331], 'children': []}, {'type': 'MemberAccess', 'name': '', 'range': [332, 335], 'children': [{'type': 'Identifier', 'name': '__annotations__', 'range': [333, 333], 'children': []}, {'type': 'Identifier', 'name': 'items', 'range': [335, 335], 'children': []}]}]}, {'type': 'Block', 'name': '', 'range': [339, 382], 'children': [{'type': 'TryStatement', 'name': '', 'range': [340, 362], 'children': [{'type': 'Block', 'name': '', 'range': [342, 349], 'children': [{'type': 'VariableDeclaration', 'name': '', 'range': [343, 345], 'children': [{'type': 'Identifier', 'name': 'pydantic_types', 'range': [343, 343], 'children': []}, {'type': 'CallExpression', 'name': '', 'range': [345, 349], 'children': [{'type': 'Identifier', 'name': '_pydantic_models_from_type_annotation', 'range': [345, 345], 'children': []}, {'type': 'ArgumentList', 'name': '', 'range': [346, 348], 'children': [{'type': 'Identifier', 'name': 'annotation', 'range': [347, 347], 'children': []}]}]}]}]}, {'type': 'CatchClause', 'name': '', 'range': [350, 362], 'children': [{'type': 'Block', 'name': '', 'range': [355, 362], 'children': [{'type': 'ThrowStatement', 'name': '', 'range': [356, 361], 'children': [{'type': 'NewExpression', 'name': '', 'range': [357, 361], 'children': [{'type': 'Identifier', 'name': 'TypeError', 'range': [357, 357], 'children': []}, {'type': 'ArgumentList', 'name': '', 'range': [358, 360], 'children': [{'type': 'Literal', 'name': '"Error while exposing {func.__name__}: {e.__str__()}"', 'range': [359, 359], 'children': []}]}]}]}]}]}]}]}]}, {'type': 'ForStatement', 'name': '', 'range': [364, 410], 'children': [{'type': 'Keyword', 'name': 'for', 'range': [364, 364], 'children': []}, {'type': 'VariableDeclaration', 'name': '', 'range': [365, 365], 'children': [{'type': 'Identifier', 'name': 'model', 'range': [365, 365], 'children': []}]}, {'type': 'Keyword', 'name': 'in', 'range': [366, 366], 'children': []}, {'type': 'Identifier', 'name': 'pydantic_types', 'range': [367, 367], 'children': []}, {'type': 'Block', 'name': '', 'range': [369, 410], 'children': [{'type': 'ExpressionStatement', 'name': '', 'range': [370, 381], 'children': [{'type': 'CallExpression', 'name': '', 'range': [370, 381], 'children': [{'type': 'MemberAccess', 'name': '', 'range': [370, 372], 'children': [{'type': 'Identifier', 'name': 'logger', 'range': [370, 370], 'children': []}, {'type': 'Identifier', 'name': 'debug', 'range': [372, 372], 'children': []}]}, {'type': 'ArgumentList', 'name': '', 'range': [373, 380], 'children': [{'type': 'Literal', 'name': '"Registering Pyro (de)serializers for {func.__name__} annotation "', 'range': [376, 376], 'children': []}, {'type': 'Literal', 'name': '"\'{name}\': {model.__qualname__}"', 'range': [379, 379], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [383, 394], 'children': [{'type': 'CallExpression', 'name': '', 'range': [383, 394], 'children': [{'type': 'MemberAccess', 'name': '', 'range': [383, 385], 'children': [{'type': 'Identifier', 'name': 'pyro', 'range': [383, 383], 'children': []}, {'type': 'Identifier', 'name': 'register_class_to_dict', 'range': [385, 385], 'children': []}]}, {'type': 'ArgumentList', 'name': '', 'range': [386, 393], 'children': [{'type': 'Identifier', 'name': 'model', 'range': [387, 387], 'children': []}, {'type': 'CallExpression', 'name': '', 'range': [389, 393], 'children': [{'type': 'Identifier', 'name': '_make_custom_serializer', 'range': [389, 389], 'children': []}, {'type': 'ArgumentList', 'name': '', 'range': [390, 392], 'children': [{'type': 'Identifier', 'name': 'model', 'range': [391, 391], 'children': []}]}]}]}]}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [395, 410], 'children': [{'type': 'CallExpression', 'name': '', 'range': [395, 410], 'children': [{'type': 'MemberAccess', 'name': '', 'range': [395, 397], 'children': [{'type': 'Identifier', 'name': 'pyro', 'range': [395, 395], 'children': []}, {'type': 'Identifier', 'name': 'register_dict_to_class', 'range': [397, 397], 'children': []}]}, {'type': 'ArgumentList', 'name': '', 'range': [398, 409], 'children': [{'type': 'MemberAccess', 'name': '', 'range': [400, 402], 'children': [{'type': 'Identifier', 'name': 'model', 'range': [400, 400], 'children': []}, {'type': 'Identifier', 'name': '__qualname__', 'range': [402, 402], 'children': []}]}, {'type': 'CallExpression', 'name': '', 'range': [404, 408], 'children': [{'type': 'Identifier', 'name': '_make_custom_deserializer', 'range': [404, 404], 'children': []}, {'type': 'ArgumentList', 'name': '', 'range': [405, 407], 'children': [{'type': 'Identifier', 'name': 'model', 'range': [406, 406], 'children': []}]}]}]}]}]}]}]}]}]}]}
2025-01-08 10:31:42,247 - INFO - Completed main AST analysis flow
2025-01-08 10:31:42,247 - INFO - Successfully processed chunk
2025-01-08 10:32:22,455 - INFO - Step 4 result: {'type': 'Program', 'name': '_pydantic_models_from_type_annotation', 'range': [1324, 1594], 'children': [{'type': 'FunctionDecl', 'name': '_pydantic_models_from_type_annotation', 'range': [1324, 1594], 'children': [{'type': 'Arguments', 'name': '', 'range': [1326, 1328], 'children': [{'type': 'Arg', 'name': 'annotation', 'range': [1327, 1327], 'children': []}]}, {'type': 'ReturnType', 'name': '', 'range': [1329, 1337], 'children': [{'type': 'Type', 'name': 'Iterator', 'range': [1331, 1331], 'children': []}, {'type': 'Type', 'name': 'type', 'range': [1333, 1333], 'children': []}, {'type': 'Type', 'name': 'BaseModel', 'range': [1335, 1335], 'children': []}]}, {'type': 'Comment', 'name': '', 'range': [1340, 1344], 'children': []}, {'type': 'IfStatement', 'name': '', 'range': [1345, 1360], 'children': [{'type': 'Condition', 'name': '', 'range': [1346, 1354], 'children': [{'type': 'AssignmentExpression', 'name': 'origin', 'range': [1347, 1353], 'children': [{'type': 'CallExpression', 'name': 'get_origin', 'range': [1350, 1353], 'children': [{'type': 'Identifier', 'name': 'annotation', 'range': [1352, 1352], 'children': []}]}]}, {'type': 'BinaryExpression', 'name': '', 'range': [1355, 1358], 'children': [{'type': 'Identifier', 'name': 'origin', 'range': [1356, 1356], 'children': []}, {'type': 'Type', 'name': 'Annotated', 'range': [1358, 1358], 'children': []}]}]}, {'type': 'AssignmentExpression', 'name': 'annotation', 'range': [1361, 1369], 'children': [{'type': 'CallExpression', 'name': 'get_args', 'range': [1363, 1366], 'children': [{'type': 'Identifier', 'name': 'annotation', 'range': [1365, 1365], 'children': []}]}, {'type': 'Index', 'name': '', 'range': [1367, 1369], 'children': [{'type': 'Literal', 'name': '0', 'range': [1368, 1368], 'children': []}]}]}]}, {'type': 'AssignmentExpression', 'name': 'origin', 'range': [1372, 1378], 'children': [{'type': 'CallExpression', 'name': 'get_origin', 'range': [1374, 1377], 'children': [{'type': 'Identifier', 'name': 'annotation', 'range': [1376, 1376], 'children': []}]}]}, {'type': 'AssignmentExpression', 'name': 'args', 'range': [1379, 1385], 'children': [{'type': 'CallExpression', 'name': 'get_args', 'range': [1381, 1384], 'children': [{'type': 'Identifier', 'name': 'annotation', 'range': [1383, 1383], 'children': []}]}]}, {'type': 'IfStatement', 'name': '', 'range': [1387, 1424], 'children': [{'type': 'Condition', 'name': '', 'range': [1388, 1422], 'children': [{'type': 'Identifier', 'name': 'origin', 'range': [1388, 1388], 'children': []}, {'type': 'In', 'name': '', 'range': [1389, 1422], 'children': [{'type': 'Tuple', 'name': '', 'range': [1390, 1422], 'children': [{'type': 'Type', 'name': 'Union', 'range': [1392, 1392], 'children': []}, {'type': 'Type', 'name': 'UnionType', 'range': [1395, 1395], 'children': []}, {'type': 'Type', 'name': 'list', 'range': [1398, 1398], 'children': []}, {'type': 'Type', 'name': 'List', 'range': [1401, 1401], 'children': []}, {'type': 'Type', 'name': 'tuple', 'range': [1404, 1404], 'children': []}, {'type': 'Type', 'name': 'Tuple', 'range': [1407, 1407], 'children': []}, {'type': 'Type', 'name': 'set', 'range': [1410, 1410], 'children': []}, {'type': 'Type', 'name': 'Set', 'range': [1413, 1413], 'children': []}, {'type': 'Type', 'name': 'frozenset', 'range': [1416, 1416], 'children': []}, {'type': 'Type', 'name': 'FrozenSet', 'range': [1419, 1419], 'children': []}]}]}]}, {'type': 'ForStatement', 'name': '', 'range': [1425, 1437], 'children': [{'type': 'Identifier', 'name': 'arg', 'range': [1426, 1426], 'children': []}, {'type': 'In', 'name': '', 'range': [1427, 1428], 'children': [{'type': 'Identifier', 'name': 'args', 'range': [1428, 1428], 'children': []}]}, {'type': 'YieldFrom', 'name': '', 'range': [1431, 1437], 'children': [{'type': 'CallExpression', 'name': '_pydantic_models_from_type_annotation', 'range': [1433, 1436], 'children': [{'type': 'Identifier', 'name': 'arg', 'range': [1435, 1435], 'children': []}]}]}]}]}, {'type': 'ElifStatement', 'name': '', 'range': [1438, 1467], 'children': [{'type': 'Condition', 'name': '', 'range': [1439, 1445], 'children': [{'type': 'Identifier', 'name': 'origin', 'range': [1439, 1439], 'children': []}, {'type': 'In', 'name': '', 'range': [1440, 1445], 'children': [{'type': 'Tuple', 'name': '', 'range': [1441, 1445], 'children': [{'type': 'Type', 'name': 'dict', 'range': [1442, 1442], 'children': []}, {'type': 'Type', 'name': 'Dict', 'range': [1444, 1444], 'children': []}]}]}]}, {'type': 'AssignmentExpression', 'name': '', 'range': [1448, 1453], 'children': [{'type': 'Identifier', 'name': 'key_type', 'range': [1448, 1448], 'children': []}, {'type': 'Identifier', 'name': 'value_type', 'range': [1450, 1450], 'children': []}, {'type': 'Identifier', 'name': 'args', 'range': [1452, 1452], 'children': []}]}, {'type': 'YieldFrom', 'name': '', 'range': [1454, 1460], 'children': [{'type': 'CallExpression', 'name': '_pydantic_models_from_type_annotation', 'range': [1456, 1459], 'children': [{'type': 'Identifier', 'name': 'key_type', 'range': [1458, 1458], 'children': []}]}]}, {'type': 'YieldFrom', 'name': '', 'range': [1461, 1467], 'children': [{'type': 'CallExpression', 'name': '_pydantic_models_from_type_annotation', 'range': [1463, 1466], 'children': [{'type': 'Identifier', 'name': 'value_type', 'range': [1465, 1465], 'children': []}]}]}]}, {'type': 'ElifStatement', 'name': '', 'range': [1468, 1503], 'children': [{'type': 'Condition', 'name': '', 'range': [1469, 1475], 'children': [{'type': 'Identifier', 'name': 'origin', 'range': [1469, 1469], 'children': []}, {'type': 'In', 'name': '', 'range': [1470, 1475], 'children': [{'type': 'Tuple', 'name': '', 'range': [1471, 1475], 'children': [{'type': 'Type', 'name': 'Awaitable', 'range': [1472, 1472], 'children': []}, {'type': 'Type', 'name': 'Coroutine', 'range': [1474, 1474], 'children': []}]}]}]}, {'type': 'Comment', 'name': '', 'range': [1478, 1488], 'children': []}, {'type': 'AssignmentExpression', 'name': 'return_type', 'range': [1489, 1495], 'children': [{'type': 'Identifier', 'name': 'args', 'range': [1491, 1491], 'children': []}, {'type': 'Index', 'name': '', 'range': [1492, 1495], 'children': [{'type': 'Literal', 'name': '-1', 'range': [1493, 1494], 'children': []}]}]}, {'type': 'YieldFrom', 'name': '', 'range': [1497, 1503], 'children': [{'type': 'CallExpression', 'name': '_pydantic_models_from_type_annotation', 'range': [1499, 1502], 'children': [{'type': 'Identifier', 'name': 'return_type', 'range': [1501, 1501], 'children': []}]}]}]}, {'type': 'ElseStatement', 'name': '', 'range': [1504, 1594], 'children': [{'type': 'AssignmentExpression', 'name': 'annotype', 'range': [1507, 1516], 'children': [{'type': 'Identifier', 'name': 'annotation', 'range': [1509, 1509], 'children': []}, {'type': 'IfStatement', 'name': '', 'range': [1510, 1515], 'children': [{'type': 'Condition', 'name': '', 'range': [1511, 1513], 'children': [{'type': 'Identifier', 'name': 'origin', 'range': [1511, 1511], 'children': []}, {'type': 'BinaryExpression', 'name': '', 'range': [1512, 1513], 'children': [{'type': 'Type', 'name': 'None', 'range': [1513, 1513], 'children': []}]}]}, {'type': 'Identifier', 'name': 'origin', 'range': [1515, 1515], 'children': []}]}]}, {'type': 'Comment', 'name': '', 'range': [1518, 1524], 'children': []}, {'type': 'IfStatement', 'name': '', 'range': [1525, 1558], 'children': [{'type': 'Condition', 'name': '', 'range': [1526, 1557], 'children': [{'type': 'Identifier', 'name': 'annotype', 'range': [1528, 1528], 'children': []}, {'type': 'BinaryExpression', 'name': '', 'range': [1529, 1531], 'children': [{'type': 'Type', 'name': 'None', 'range': [1531, 1531], 'children': []}]}, {'type': 'LogicalExpression', 'name': 'And', 'range': [1533, 1556], 'children': [{'type': 'UnaryExpression', 'name': 'Not', 'range': [1534, 1535], 'children': [{'type': 'CallExpression', 'name': 'hasattr', 'range': [1535, 1547], 'children': [{'type': 'Identifier', 'name': 'typing', 'range': [1537, 1537], 'children': []}, {'type': 'CallExpression', 'name': 'getattr', 'range': [1539, 1546], 'children': [{'type': 'Identifier', 'name': 'annotype', 'range': [1541, 1541], 'children': []}, {'type': 'Literal', 'name': '__name__', 'range': [1543, 1543], 'children': []}, {'type': 'Literal', 'name': '', 'range': [1545, 1545], 'children': []}]}]}]}, {'type': 'CallExpression', 'name': 'isinstance', 'range': [1550, 1555], 'children': [{'type': 'Identifier', 'name': 'annotype', 'range': [1552, 1552], 'children': []}, {'type': 'Identifier', 'name': 'type', 'range': [1554, 1554], 'children': []}]}]}]}, {'type': 'IfStatement', 'name': '', 'range': [1560, 1571], 'children': [{'type': 'Condition', 'name': '', 'range': [1561, 1566], 'children': [{'type': 'CallExpression', 'name': 'issubclass', 'range': [1561, 1566], 'children': [{'type': 'Identifier', 'name': 'annotype', 'range': [1563, 1563], 'children': []}, {'type': 'Identifier', 'name': 'BaseModel', 'range': [1565, 1565], 'children': []}]}]}, {'type': 'Yield', 'name': '', 'range': [1569, 1571], 'children': [{'type': 'Identifier', 'name': 'annotype', 'range': [1570, 1570], 'children': []}]}]}, {'type': 'ElifStatement', 'name': '', 'range': [1572, 1593], 'children': [{'type': 'Condition', 'name': '', 'range': [1573, 1584], 'children': [{'type': 'Identifier', 'name': 'annotype', 'range': [1573, 1573], 'children': []}, {'type': 'BinaryExpression', 'name': 'NotIn', 'range': [1574, 1576], 'children': [{'type': 'Identifier', 'name': 'builtin_types', 'range': [1576, 1576], 'children': []}]}, {'type': 'LogicalExpression', 'name': 'And', 'range': [1577, 1584], 'children': [{'type': 'UnaryExpression', 'name': 'Not', 'range': [1578, 1579], 'children': [{'type': 'CallExpression', 'name': 'issubclass', 'range': [1579, 1584], 'children': [{'type': 'Identifier', 'name': 'annotype', 'range': [1581, 1581], 'children': []}, {'type': 'Identifier', 'name': 'Enum', 'range': [1583, 1583], 'children': []}]}]}]}]}, {'type': 'Raise', 'name': '', 'range': [1587, 1593], 'children': [{'type': 'CallExpression', 'name': 'TypeError', 'range': [1588, 1592], 'children': [{'type': 'Identifier', 'name': 'f', 'range': [1590, 1590], 'children': []}, {'type': 'Literal', 'name': 'Unsupported type encountered: {annotype}', 'range': [1591, 1591], 'children': []}]}]}]}]}]}]}]}
2025-01-08 10:32:22,456 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:33:42,886 - INFO - Step 5 result: {'type': 'Program', 'name': '_pydantic_models_from_type_annotation', 'range': [1324, 1594], 'children': [{'type': 'FunctionDecl', 'name': '_pydantic_models_from_type_annotation', 'range': [1324, 1594], 'children': [{'type': 'Arguments', 'name': '', 'range': [1326, 1328], 'children': [{'type': 'Arg', 'name': 'annotation', 'range': [1327, 1327], 'children': []}]}, {'type': 'ReturnType', 'name': '', 'range': [1329, 1337], 'children': [{'type': 'Type', 'name': 'Iterator', 'range': [1331, 1331], 'children': []}, {'type': 'Type', 'name': 'type', 'range': [1333, 1333], 'children': []}, {'type': 'Type', 'name': 'BaseModel', 'range': [1335, 1335], 'children': []}]}, {'type': 'Comment', 'name': '', 'range': [1340, 1344], 'children': []}, {'type': 'IfStatement', 'name': '', 'range': [1345, 1360], 'children': [{'type': 'Condition', 'name': '', 'range': [1346, 1354], 'children': [{'type': 'AssignmentExpression', 'name': 'origin', 'range': [1347, 1353], 'children': [{'type': 'CallExpression', 'name': 'get_origin', 'range': [1350, 1353], 'children': [{'type': 'Identifier', 'name': 'annotation', 'range': [1352, 1352], 'children': []}]}]}, {'type': 'BinaryExpression', 'name': '', 'range': [1355, 1358], 'children': [{'type': 'Identifier', 'name': 'origin', 'range': [1356, 1356], 'children': []}, {'type': 'Type', 'name': 'Annotated', 'range': [1358, 1358], 'children': []}]}]}, {'type': 'AssignmentExpression', 'name': 'annotation', 'range': [1361, 1369], 'children': [{'type': 'CallExpression', 'name': 'get_args', 'range': [1363, 1366], 'children': [{'type': 'Identifier', 'name': 'annotation', 'range': [1365, 1365], 'children': []}]}, {'type': 'Index', 'name': '', 'range': [1367, 1369], 'children': [{'type': 'Literal', 'name': '0', 'range': [1368, 1368], 'children': []}]}]}]}, {'type': 'AssignmentExpression', 'name': 'origin', 'range': [1372, 1378], 'children': [{'type': 'CallExpression', 'name': 'get_origin', 'range': [1374, 1377], 'children': [{'type': 'Identifier', 'name': 'annotation', 'range': [1376, 1376], 'children': []}]}]}, {'type': 'AssignmentExpression', 'name': 'args', 'range': [1379, 1385], 'children': [{'type': 'CallExpression', 'name': 'get_args', 'range': [1381, 1384], 'children': [{'type': 'Identifier', 'name': 'annotation', 'range': [1383, 1383], 'children': []}]}]}, {'type': 'IfStatement', 'name': '', 'range': [1387, 1424], 'children': [{'type': 'Condition', 'name': '', 'range': [1388, 1422], 'children': [{'type': 'Identifier', 'name': 'origin', 'range': [1388, 1388], 'children': []}, {'type': 'In', 'name': '', 'range': [1389, 1422], 'children': [{'type': 'Tuple', 'name': '', 'range': [1390, 1422], 'children': [{'type': 'Type', 'name': 'Union', 'range': [1392, 1392], 'children': []}, {'type': 'Type', 'name': 'UnionType', 'range': [1395, 1395], 'children': []}, {'type': 'Type', 'name': 'list', 'range': [1398, 1398], 'children': []}, {'type': 'Type', 'name': 'List', 'range': [1401, 1401], 'children': []}, {'type': 'Type', 'name': 'tuple', 'range': [1404, 1404], 'children': []}, {'type': 'Type', 'name': 'Tuple', 'range': [1407, 1407], 'children': []}, {'type': 'Type', 'name': 'set', 'range': [1410, 1410], 'children': []}, {'type': 'Type', 'name': 'Set', 'range': [1413, 1413], 'children': []}, {'type': 'Type', 'name': 'frozenset', 'range': [1416, 1416], 'children': []}, {'type': 'Type', 'name': 'FrozenSet', 'range': [1419, 1419], 'children': []}]}]}]}, {'type': 'ForStatement', 'name': '', 'range': [1425, 1437], 'children': [{'type': 'Identifier', 'name': 'arg', 'range': [1426, 1426], 'children': []}, {'type': 'In', 'name': '', 'range': [1427, 1428], 'children': [{'type': 'Identifier', 'name': 'args', 'range': [1428, 1428], 'children': []}]}, {'type': 'YieldFrom', 'name': '', 'range': [1431, 1437], 'children': [{'type': 'CallExpression', 'name': '_pydantic_models_from_type_annotation', 'range': [1433, 1436], 'children': [{'type': 'Identifier', 'name': 'arg', 'range': [1435, 1435], 'children': []}]}]}]}]}, {'type': 'ElifStatement', 'name': '', 'range': [1438, 1467], 'children': [{'type': 'Condition', 'name': '', 'range': [1439, 1445], 'children': [{'type': 'Identifier', 'name': 'origin', 'range': [1439, 1439], 'children': []}, {'type': 'In', 'name': '', 'range': [1440, 1445], 'children': [{'type': 'Tuple', 'name': '', 'range': [1441, 1445], 'children': [{'type': 'Type', 'name': 'dict', 'range': [1442, 1442], 'children': []}, {'type': 'Type', 'name': 'Dict', 'range': [1444, 1444], 'children': []}]}]}]}, {'type': 'AssignmentExpression', 'name': '', 'range': [1448, 1453], 'children': [{'type': 'Identifier', 'name': 'key_type', 'range': [1448, 1448], 'children': []}, {'type': 'Identifier', 'name': 'value_type', 'range': [1450, 1450], 'children': []}, {'type': 'Identifier', 'name': 'args', 'range': [1452, 1452], 'children': []}]}, {'type': 'YieldFrom', 'name': '', 'range': [1454, 1460], 'children': [{'type': 'CallExpression', 'name': '_pydantic_models_from_type_annotation', 'range': [1456, 1459], 'children': [{'type': 'Identifier', 'name': 'key_type', 'range': [1458, 1458], 'children': []}]}]}, {'type': 'YieldFrom', 'name': '', 'range': [1461, 1467], 'children': [{'type': 'CallExpression', 'name': '_pydantic_models_from_type_annotation', 'range': [1463, 1466], 'children': [{'type': 'Identifier', 'name': 'value_type', 'range': [1465, 1465], 'children': []}]}]}]}, {'type': 'ElifStatement', 'name': '', 'range': [1468, 1503], 'children': [{'type': 'Condition', 'name': '', 'range': [1469, 1475], 'children': [{'type': 'Identifier', 'name': 'origin', 'range': [1469, 1469], 'children': []}, {'type': 'In', 'name': '', 'range': [1470, 1475], 'children': [{'type': 'Tuple', 'name': '', 'range': [1471, 1475], 'children': [{'type': 'Type', 'name': 'Awaitable', 'range': [1472, 1472], 'children': []}, {'type': 'Type', 'name': 'Coroutine', 'range': [1474, 1474], 'children': []}]}]}]}, {'type': 'Comment', 'name': '', 'range': [1478, 1488], 'children': []}, {'type': 'AssignmentExpression', 'name': 'return_type', 'range': [1489, 1495], 'children': [{'type': 'Identifier', 'name': 'args', 'range': [1491, 1491], 'children': []}, {'type': 'Index', 'name': '', 'range': [1492, 1495], 'children': [{'type': 'Literal', 'name': '-1', 'range': [1493, 1494], 'children': []}]}]}, {'type': 'YieldFrom', 'name': '', 'range': [1497, 1503], 'children': [{'type': 'CallExpression', 'name': '_pydantic_models_from_type_annotation', 'range': [1499, 1502], 'children': [{'type': 'Identifier', 'name': 'return_type', 'range': [1501, 1501], 'children': []}]}]}]}, {'type': 'ElseStatement', 'name': '', 'range': [1504, 1594], 'children': [{'type': 'AssignmentExpression', 'name': 'annotype', 'range': [1507, 1516], 'children': [{'type': 'Identifier', 'name': 'annotation', 'range': [1509, 1509], 'children': []}, {'type': 'IfStatement', 'name': '', 'range': [1510, 1515], 'children': [{'type': 'Condition', 'name': '', 'range': [1511, 1513], 'children': [{'type': 'Identifier', 'name': 'origin', 'range': [1511, 1511], 'children': []}, {'type': 'BinaryExpression', 'name': '', 'range': [1512, 1513], 'children': [{'type': 'Type', 'name': 'None', 'range': [1513, 1513], 'children': []}]}]}, {'type': 'Identifier', 'name': 'origin', 'range': [1515, 1515], 'children': []}]}]}, {'type': 'Comment', 'name': '', 'range': [1518, 1524], 'children': []}, {'type': 'IfStatement', 'name': '', 'range': [1525, 1558], 'children': [{'type': 'Condition', 'name': '', 'range': [1526, 1557], 'children': [{'type': 'Identifier', 'name': 'annotype', 'range': [1528, 1528], 'children': []}, {'type': 'BinaryExpression', 'name': '', 'range': [1529, 1531], 'children': [{'type': 'Type', 'name': 'None', 'range': [1531, 1531], 'children': []}]}, {'type': 'LogicalExpression', 'name': 'And', 'range': [1533, 1556], 'children': [{'type': 'UnaryExpression', 'name': 'Not', 'range': [1534, 1535], 'children': [{'type': 'CallExpression', 'name': 'hasattr', 'range': [1535, 1547], 'children': [{'type': 'Identifier', 'name': 'typing', 'range': [1537, 1537], 'children': []}, {'type': 'CallExpression', 'name': 'getattr', 'range': [1539, 1546], 'children': [{'type': 'Identifier', 'name': 'annotype', 'range': [1541, 1541], 'children': []}, {'type': 'Literal', 'name': '__name__', 'range': [1543, 1543], 'children': []}, {'type': 'Literal', 'name': '', 'range': [1545, 1545], 'children': []}]}]}]}, {'type': 'CallExpression', 'name': 'isinstance', 'range': [1550, 1555], 'children': [{'type': 'Identifier', 'name': 'annotype', 'range': [1552, 1552], 'children': []}, {'type': 'Identifier', 'name': 'type', 'range': [1554, 1554], 'children': []}]}]}]}, {'type': 'IfStatement', 'name': '', 'range': [1560, 1571], 'children': [{'type': 'Condition', 'name': '', 'range': [1561, 1566], 'children': [{'type': 'CallExpression', 'name': 'issubclass', 'range': [1561, 1566], 'children': [{'type': 'Identifier', 'name': 'annotype', 'range': [1563, 1563], 'children': []}, {'type': 'Identifier', 'name': 'BaseModel', 'range': [1565, 1565], 'children': []}]}]}, {'type': 'Yield', 'name': '', 'range': [1569, 1571], 'children': [{'type': 'Identifier', 'name': 'annotype', 'range': [1570, 1570], 'children': []}]}]}, {'type': 'ElifStatement', 'name': '', 'range': [1572, 1593], 'children': [{'type': 'Condition', 'name': '', 'range': [1573, 1584], 'children': [{'type': 'Identifier', 'name': 'annotype', 'range': [1573, 1573], 'children': []}, {'type': 'BinaryExpression', 'name': 'NotIn', 'range': [1574, 1576], 'children': [{'type': 'Identifier', 'name': 'builtin_types', 'range': [1576, 1576], 'children': []}]}, {'type': 'LogicalExpression', 'name': 'And', 'range': [1577, 1584], 'children': [{'type': 'UnaryExpression', 'name': 'Not', 'range': [1578, 1579], 'children': [{'type': 'CallExpression', 'name': 'issubclass', 'range': [1579, 1584], 'children': [{'type': 'Identifier', 'name': 'annotype', 'range': [1581, 1581], 'children': []}, {'type': 'Identifier', 'name': 'Enum', 'range': [1583, 1583], 'children': []}]}]}]}]}, {'type': 'Raise', 'name': '', 'range': [1587, 1593], 'children': [{'type': 'CallExpression', 'name': 'TypeError', 'range': [1588, 1592], 'children': [{'type': 'Identifier', 'name': 'f', 'range': [1590, 1590], 'children': []}, {'type': 'Literal', 'name': 'Unsupported type encountered: {annotype}', 'range': [1591, 1591], 'children': []}]}]}]}]}]}]}]}
2025-01-08 10:33:42,886 - INFO - Completed main AST analysis flow
2025-01-08 10:33:42,889 - INFO - Successfully processed chunk
2025-01-08 10:33:42,979 - INFO - Starting code generation from AST
2025-01-08 10:34:24,425 - INFO - Successfully generated code from AST
2025-01-08 10:34:24,425 - INFO - Starting static code similarity comparison
2025-01-08 10:34:24,462 - INFO - Static similarity result: {'final_score': 99.71, 'length_similarity': 99.59, 'token_similarity': 100.0, 'structure_similarity': 99.1, 'function_similarity': 100, 'complexity_similarity': 100.0, 'variable_similarity': 100}
