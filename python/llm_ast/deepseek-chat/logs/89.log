2025-01-08 09:52:36,198 - INFO - Processing sample 89
2025-01-08 09:52:36,198 - INFO - Starting Step 0: Splitting code into top-level declarations
2025-01-08 09:52:38,994 - INFO - Successfully split code into 3 top-level declarations
2025-01-08 09:52:38,996 - INFO - Processing chunk #0 (size=84 chars, start_index=0)
2025-01-08 09:52:38,997 - INFO - Processing chunk with 84 chars starting at index 0
2025-01-08 09:52:38,997 - INFO - Starting main AST analysis flow
2025-01-08 09:52:38,997 - INFO - Tokenized code into 27 tokens
2025-01-08 09:52:38,997 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:52:39,001 - INFO - Processing chunk #1 (size=966 chars, start_index=27)
2025-01-08 09:52:39,001 - INFO - Processing chunk with 966 chars starting at index 27
2025-01-08 09:52:39,001 - INFO - Starting main AST analysis flow
2025-01-08 09:52:39,002 - INFO - Tokenized code into 103 tokens
2025-01-08 09:52:39,002 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:52:39,007 - INFO - Processing chunk #2 (size=70 chars, start_index=130)
2025-01-08 09:52:39,007 - INFO - Processing chunk with 70 chars starting at index 130
2025-01-08 09:52:39,007 - INFO - Starting main AST analysis flow
2025-01-08 09:52:39,007 - INFO - Tokenized code into 18 tokens
2025-01-08 09:52:39,008 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:52:40,911 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [0, 26], 'children': []}
2025-01-08 09:52:40,912 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:52:41,150 - INFO - Step 1 result: {'type': 'Program', 'name': 'twos_complement', 'range': [27, 129], 'children': []}
2025-01-08 09:52:41,151 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:52:42,564 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [130, 147], 'children': [{'type': 'IfStatement', 'name': '', 'range': [130, 135], 'children': []}, {'type': 'ImportStatement', 'name': 'doctest', 'range': [137, 139], 'children': []}, {'type': 'ExpressionStatement', 'name': '', 'range': [141, 145], 'children': []}]}
2025-01-08 09:52:42,564 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:52:44,357 - INFO - Step 2 result: {'type': 'Program', 'name': '', 'range': [0, 26], 'children': [{'type': 'Comment', 'name': '', 'range': [0, 23], 'children': [{'type': 'Text', 'name': '', 'range': [1, 23], 'children': []}]}, {'type': 'Newline', 'name': '', 'range': [24, 26], 'children': []}]}
2025-01-08 09:52:44,357 - INFO - Starting Step 3: AST simplification
2025-01-08 09:52:50,847 - INFO - Step 3 result: {'type': 'Program', 'name': '', 'range': [0, 26], 'children': [{'type': 'Comment', 'name': '', 'range': [0, 23], 'children': [{'type': 'Text', 'name': '', 'range': [1, 23], 'children': [{'type': 'Identifier', 'name': 'Information', 'range': [1, 11], 'children': []}, {'type': 'Identifier', 'name': 'on', 'range': [12, 13], 'children': []}, {'type': 'Literal', 'name': '2', 'range': [14, 14], 'children': []}, {'type': 'Identifier', 'name': "'s", 'range': [15, 16], 'children': []}, {'type': 'Identifier', 'name': 'complement', 'range': [17, 26], 'children': []}]}]}, {'type': 'Newline', 'name': '', 'range': [24, 26], 'children': []}]}
2025-01-08 09:52:50,847 - INFO - Starting Step 4: AST normalization
2025-01-08 09:52:52,410 - INFO - Step 2 result: {'nodes': [{'type': 'IfStatement', 'name': '', 'range': [130, 135], 'children': [{'type': 'Condition', 'name': '', 'range': [131, 134], 'children': [{'type': 'Variable', 'name': '__name__', 'range': [131, 131], 'children': []}, {'type': 'Operator', 'name': '==', 'range': [132, 133], 'children': []}, {'type': 'StringLiteral', 'name': '"__main__"', 'range': [134, 134], 'children': []}]}]}, {'type': 'ImportStatement', 'name': 'doctest', 'range': [137, 139], 'children': [{'type': 'Module', 'name': 'doctest', 'range': [138, 138], 'children': []}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [141, 145], 'children': [{'type': 'CallExpression', 'name': '', 'range': [141, 145], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [141, 143], 'children': [{'type': 'Object', 'name': 'doctest', 'range': [141, 141], 'children': []}, {'type': 'Property', 'name': 'testmod', 'range': [143, 143], 'children': []}]}, {'type': 'Arguments', 'name': '', 'range': [144, 145], 'children': []}]}]}]}
2025-01-08 09:52:52,410 - INFO - Starting Step 3: AST simplification
2025-01-08 09:52:59,044 - INFO - Step 4 result: {'type': 'Program', 'name': '', 'range': [0, 26], 'children': [{'type': 'Comment', 'name': '', 'range': [0, 23], 'children': [{'type': 'Text', 'name': '', 'range': [1, 23], 'children': [{'type': 'Identifier', 'name': 'Information', 'range': [1, 11], 'children': []}, {'type': 'Identifier', 'name': 'on', 'range': [12, 13], 'children': []}, {'type': 'Literal', 'name': '2', 'range': [14, 14], 'children': []}, {'type': 'Identifier', 'name': "'s", 'range': [15, 16], 'children': []}, {'type': 'Identifier', 'name': 'complement', 'range': [17, 26], 'children': []}]}]}, {'type': 'Newline', 'name': '', 'range': [24, 26], 'children': []}]}
2025-01-08 09:52:59,044 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:53:01,630 - INFO - Step 3 result: {'nodes': [{'type': 'IfStatement', 'name': '', 'range': [130, 135], 'children': [{'type': 'Condition', 'name': '', 'range': [131, 134], 'children': [{'type': 'Variable', 'name': '__name__', 'range': [131, 131], 'children': []}, {'type': 'Operator', 'name': '==', 'range': [132, 133], 'children': []}, {'type': 'StringLiteral', 'name': '"__main__"', 'range': [134, 134], 'children': []}]}]}, {'type': 'ImportStatement', 'name': 'doctest', 'range': [137, 139], 'children': [{'type': 'Module', 'name': 'doctest', 'range': [138, 138], 'children': []}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [141, 145], 'children': [{'type': 'CallExpression', 'name': '', 'range': [141, 145], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [141, 143], 'children': [{'type': 'Object', 'name': 'doctest', 'range': [141, 141], 'children': []}, {'type': 'Property', 'name': 'testmod', 'range': [143, 143], 'children': []}]}]}]}]}
2025-01-08 09:53:01,630 - INFO - Starting Step 4: AST normalization
2025-01-08 09:53:06,063 - INFO - Step 5 result: {'type': 'Program', 'name': '', 'range': [0, 26], 'children': [{'type': 'Comment', 'name': '', 'range': [0, 23], 'children': [{'type': 'Text', 'name': '', 'range': [1, 23], 'children': [{'type': 'Identifier', 'name': 'Information', 'range': [1, 11], 'children': []}, {'type': 'Identifier', 'name': 'on', 'range': [12, 13], 'children': []}, {'type': 'Literal', 'name': '2', 'range': [14, 14], 'children': []}, {'type': 'Identifier', 'name': "'s", 'range': [15, 16], 'children': []}, {'type': 'Identifier', 'name': 'complement', 'range': [17, 26], 'children': []}]}]}, {'type': 'Newline', 'name': '', 'range': [24, 26], 'children': []}]}
2025-01-08 09:53:06,063 - INFO - Completed main AST analysis flow
2025-01-08 09:53:06,063 - INFO - Successfully processed chunk
2025-01-08 09:53:11,529 - INFO - Step 4 result: {'nodes': [{'type': 'IfStatement', 'name': '', 'range': [130, 135], 'children': [{'type': 'BinaryExpression', 'name': '', 'range': [131, 134], 'children': [{'type': 'Identifier', 'name': '__name__', 'range': [131, 131], 'children': []}, {'type': 'Operator', 'name': '==', 'range': [132, 133], 'children': []}, {'type': 'Literal', 'name': '"__main__"', 'range': [134, 134], 'children': []}]}]}, {'type': 'ImportStatement', 'name': 'doctest', 'range': [137, 139], 'children': [{'type': 'Module', 'name': 'doctest', 'range': [138, 138], 'children': []}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [141, 145], 'children': [{'type': 'CallExpression', 'name': '', 'range': [141, 145], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [141, 143], 'children': [{'type': 'Identifier', 'name': 'doctest', 'range': [141, 141], 'children': []}, {'type': 'Identifier', 'name': 'testmod', 'range': [143, 143], 'children': []}]}]}]}]}
2025-01-08 09:53:11,529 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:53:15,810 - INFO - Step 2 result: {'type': 'Program', 'name': 'twos_complement', 'range': [27, 129], 'children': [{'type': 'FunctionDeclaration', 'name': 'twos_complement', 'range': [27, 129], 'children': [{'type': 'Parameter', 'name': 'number', 'range': [30, 32], 'children': []}, {'type': 'ReturnType', 'name': 'str', 'range': [36, 36], 'children': []}, {'type': 'Docstring', 'name': '', 'range': [39, 41], 'children': []}, {'type': 'IfStatement', 'name': '', 'range': [43, 54], 'children': [{'type': 'Condition', 'name': '', 'range': [44, 46], 'children': []}, {'type': 'RaiseStatement', 'name': '', 'range': [49, 53], 'children': [{'type': 'ExceptionType', 'name': 'ValueError', 'range': [50, 50], 'children': []}, {'type': 'ExceptionMessage', 'name': '', 'range': [52, 52], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'binary_number_length', 'range': [55, 68], 'children': [{'type': 'Assignment', 'name': '', 'range': [56, 67], 'children': [{'type': 'FunctionCall', 'name': 'len', 'range': [57, 67], 'children': [{'type': 'FunctionCall', 'name': 'bin', 'range': [59, 66], 'children': [{'type': 'Argument', 'name': 'number', 'range': [61, 61], 'children': []}]}]}]}]}, {'type': 'VariableDeclaration', 'name': 'twos_complement_number', 'range': [69, 89], 'children': [{'type': 'Assignment', 'name': '', 'range': [70, 88], 'children': [{'type': 'FunctionCall', 'name': 'bin', 'range': [71, 88], 'children': [{'type': 'Argument', 'name': '', 'range': [73, 83], 'children': [{'type': 'FunctionCall', 'name': 'abs', 'range': [73, 76], 'children': [{'type': 'Argument', 'name': 'number', 'range': [75, 75], 'children': []}]}, {'type': 'BinaryOperation', 'name': '', 'range': [77, 83], 'children': [{'type': 'LeftOperand', 'name': '', 'range': [77, 77], 'children': []}, {'type': 'Operator', 'name': '-', 'range': [77, 77], 'children': []}, {'type': 'RightOperand', 'name': '', 'range': [78, 83], 'children': [{'type': 'Number', 'name': '1', 'range': [79, 79], 'children': []}, {'type': 'BinaryOperation', 'name': '', 'range': [80, 83], 'children': [{'type': 'LeftOperand', 'name': '', 'range': [80, 80], 'children': []}, {'type': 'Operator', 'name': '<<', 'range': [80, 81], 'children': []}, {'type': 'RightOperand', 'name': 'binary_number_length', 'range': [82, 82], 'children': []}]}]}]}]}]}]}]}, {'type': 'Assignment', 'name': 'twos_complement_number', 'range': [90, 124], 'children': [{'type': 'ConditionalExpression', 'name': '', 'range': [92, 123], 'children': [{'type': 'Condition', 'name': '', 'range': [115, 118], 'children': []}, {'type': 'TrueBranch', 'name': '', 'range': [94, 113], 'children': [{'type': 'StringConcatenation', 'name': '', 'range': [96, 111], 'children': [{'type': 'String', 'name': '1', 'range': [96, 96], 'children': []}, {'type': 'StringRepetition', 'name': '', 'range': [98, 108], 'children': [{'type': 'String', 'name': '0', 'range': [99, 99], 'children': []}, {'type': 'BinaryOperation', 'name': '', 'range': [101, 108], 'children': [{'type': 'LeftOperand', 'name': 'binary_number_length', 'range': [102, 102], 'children': []}, {'type': 'Operator', 'name': '-', 'range': [103, 103], 'children': []}, {'type': 'RightOperand', 'name': '', 'range': [104, 108], 'children': [{'type': 'FunctionCall', 'name': 'len', 'range': [104, 107], 'children': [{'type': 'Argument', 'name': 'twos_complement_number', 'range': [106, 106], 'children': []}]}]}]}]}, {'type': 'String', 'name': 'twos_complement_number', 'range': [111, 111], 'children': []}]}]}, {'type': 'FalseBranch', 'name': '', 'range': [121, 121], 'children': [{'type': 'String', 'name': '0', 'range': [121, 121], 'children': []}]}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [125, 129], 'children': [{'type': 'StringConcatenation', 'name': '', 'range': [126, 128], 'children': [{'type': 'String', 'name': '0b', 'range': [126, 126], 'children': []}, {'type': 'String', 'name': 'twos_complement_number', 'range': [128, 128], 'children': []}]}]}]}]}
2025-01-08 09:53:15,810 - INFO - Starting Step 3: AST simplification
2025-01-08 09:53:22,742 - INFO - Step 5 result: {'nodes': [{'type': 'Program', 'name': 'MainOrSomething', 'range': [130, 145], 'children': [{'type': 'IfStatement', 'name': '', 'range': [130, 135], 'children': [{'type': 'BinaryExpression', 'name': '', 'range': [131, 134], 'children': [{'type': 'Identifier', 'name': '__name__', 'range': [131, 131], 'children': []}, {'type': 'Operator', 'name': '==', 'range': [132, 133], 'children': []}, {'type': 'Literal', 'name': '"__main__"', 'range': [134, 134], 'children': []}]}]}, {'type': 'ImportStatement', 'name': 'doctest', 'range': [137, 139], 'children': [{'type': 'Module', 'name': 'doctest', 'range': [138, 138], 'children': []}]}, {'type': 'ExpressionStatement', 'name': '', 'range': [141, 145], 'children': [{'type': 'CallExpression', 'name': '', 'range': [141, 145], 'children': [{'type': 'MemberExpression', 'name': '', 'range': [141, 143], 'children': [{'type': 'Identifier', 'name': 'doctest', 'range': [141, 141], 'children': []}, {'type': 'Identifier', 'name': 'testmod', 'range': [143, 143], 'children': []}]}]}]}]}]}
2025-01-08 09:53:22,742 - INFO - Completed main AST analysis flow
2025-01-08 09:53:22,743 - INFO - Successfully processed chunk
2025-01-08 09:53:51,934 - INFO - Step 3 result: {'type': 'Program', 'name': 'twos_complement', 'range': [27, 129], 'children': [{'type': 'FunctionDeclaration', 'name': 'twos_complement', 'range': [27, 129], 'children': [{'type': 'Parameter', 'name': 'number', 'range': [30, 32], 'children': []}, {'type': 'ReturnType', 'name': 'str', 'range': [36, 36], 'children': []}, {'type': 'Docstring', 'name': '', 'range': [39, 41], 'children': []}, {'type': 'IfStatement', 'name': '', 'range': [43, 54], 'children': [{'type': 'Condition', 'name': '', 'range': [44, 46], 'children': []}, {'type': 'RaiseStatement', 'name': '', 'range': [49, 53], 'children': [{'type': 'ExceptionType', 'name': 'ValueError', 'range': [50, 50], 'children': []}, {'type': 'ExceptionMessage', 'name': '', 'range': [52, 52], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'binary_number_length', 'range': [55, 68], 'children': [{'type': 'Assignment', 'name': '', 'range': [56, 67], 'children': [{'type': 'FunctionCall', 'name': 'len', 'range': [57, 67], 'children': [{'type': 'FunctionCall', 'name': 'bin', 'range': [59, 66], 'children': [{'type': 'Argument', 'name': 'number', 'range': [61, 61], 'children': []}]}]}]}]}, {'type': 'VariableDeclaration', 'name': 'twos_complement_number', 'range': [69, 89], 'children': [{'type': 'Assignment', 'name': '', 'range': [70, 88], 'children': [{'type': 'FunctionCall', 'name': 'bin', 'range': [71, 88], 'children': [{'type': 'Argument', 'name': '', 'range': [73, 83], 'children': [{'type': 'FunctionCall', 'name': 'abs', 'range': [73, 76], 'children': [{'type': 'Argument', 'name': 'number', 'range': [75, 75], 'children': []}]}, {'type': 'BinaryOperation', 'name': '', 'range': [77, 83], 'children': [{'type': 'LeftOperand', 'name': '', 'range': [77, 77], 'children': []}, {'type': 'Operator', 'name': '-', 'range': [77, 77], 'children': []}, {'type': 'RightOperand', 'name': '', 'range': [78, 83], 'children': [{'type': 'Number', 'name': '1', 'range': [79, 79], 'children': []}, {'type': 'BinaryOperation', 'name': '', 'range': [80, 83], 'children': [{'type': 'LeftOperand', 'name': '', 'range': [80, 80], 'children': []}, {'type': 'Operator', 'name': '<<', 'range': [80, 81], 'children': []}, {'type': 'RightOperand', 'name': 'binary_number_length', 'range': [82, 82], 'children': []}]}]}]}]}]}]}]}, {'type': 'Assignment', 'name': 'twos_complement_number', 'range': [90, 124], 'children': [{'type': 'ConditionalExpression', 'name': '', 'range': [92, 123], 'children': [{'type': 'Condition', 'name': '', 'range': [115, 118], 'children': []}, {'type': 'TrueBranch', 'name': '', 'range': [94, 113], 'children': [{'type': 'StringConcatenation', 'name': '', 'range': [96, 111], 'children': [{'type': 'String', 'name': '1', 'range': [96, 96], 'children': []}, {'type': 'StringRepetition', 'name': '', 'range': [98, 108], 'children': [{'type': 'String', 'name': '0', 'range': [99, 99], 'children': []}, {'type': 'BinaryOperation', 'name': '', 'range': [101, 108], 'children': [{'type': 'LeftOperand', 'name': 'binary_number_length', 'range': [102, 102], 'children': []}, {'type': 'Operator', 'name': '-', 'range': [103, 103], 'children': []}, {'type': 'RightOperand', 'name': '', 'range': [104, 108], 'children': [{'type': 'FunctionCall', 'name': 'len', 'range': [104, 107], 'children': [{'type': 'Argument', 'name': 'twos_complement_number', 'range': [106, 106], 'children': []}]}]}]}]}, {'type': 'String', 'name': 'twos_complement_number', 'range': [111, 111], 'children': []}]}]}, {'type': 'FalseBranch', 'name': '', 'range': [121, 121], 'children': [{'type': 'String', 'name': '0', 'range': [121, 121], 'children': []}]}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [125, 129], 'children': [{'type': 'StringConcatenation', 'name': '', 'range': [126, 128], 'children': [{'type': 'String', 'name': '0b', 'range': [126, 126], 'children': []}, {'type': 'String', 'name': 'twos_complement_number', 'range': [128, 128], 'children': []}]}]}]}]}
2025-01-08 09:53:51,934 - INFO - Starting Step 4: AST normalization
2025-01-08 09:54:27,146 - INFO - Step 4 result: {'type': 'Program', 'name': 'twos_complement', 'range': [27, 129], 'children': [{'type': 'FunctionDecl', 'name': 'twos_complement', 'range': [27, 129], 'children': [{'type': 'Parameter', 'name': 'number', 'range': [30, 32], 'children': []}, {'type': 'ReturnType', 'name': 'str', 'range': [36, 36], 'children': []}, {'type': 'Docstring', 'name': '', 'range': [39, 41], 'children': []}, {'type': 'IfStatement', 'name': '', 'range': [43, 54], 'children': [{'type': 'Condition', 'name': '', 'range': [44, 46], 'children': []}, {'type': 'RaiseStatement', 'name': '', 'range': [49, 53], 'children': [{'type': 'ExceptionType', 'name': 'ValueError', 'range': [50, 50], 'children': []}, {'type': 'ExceptionMessage', 'name': '', 'range': [52, 52], 'children': []}]}]}, {'type': 'VariableDecl', 'name': 'binary_number_length', 'range': [55, 68], 'children': [{'type': 'Assignment', 'name': '', 'range': [56, 67], 'children': [{'type': 'CallExpression', 'name': 'len', 'range': [57, 67], 'children': [{'type': 'CallExpression', 'name': 'bin', 'range': [59, 66], 'children': [{'type': 'Argument', 'name': 'number', 'range': [61, 61], 'children': []}]}]}]}]}, {'type': 'VariableDecl', 'name': 'twos_complement_number', 'range': [69, 89], 'children': [{'type': 'Assignment', 'name': '', 'range': [70, 88], 'children': [{'type': 'CallExpression', 'name': 'bin', 'range': [71, 88], 'children': [{'type': 'Argument', 'name': '', 'range': [73, 83], 'children': [{'type': 'CallExpression', 'name': 'abs', 'range': [73, 76], 'children': [{'type': 'Argument', 'name': 'number', 'range': [75, 75], 'children': []}]}, {'type': 'BinaryExpression', 'name': '', 'range': [77, 83], 'children': [{'type': 'LeftOperand', 'name': '', 'range': [77, 77], 'children': []}, {'type': 'Operator', 'name': '-', 'range': [77, 77], 'children': []}, {'type': 'RightOperand', 'name': '', 'range': [78, 83], 'children': [{'type': 'Literal', 'name': '1', 'range': [79, 79], 'children': []}, {'type': 'BinaryExpression', 'name': '', 'range': [80, 83], 'children': [{'type': 'LeftOperand', 'name': '', 'range': [80, 80], 'children': []}, {'type': 'Operator', 'name': '<<', 'range': [80, 81], 'children': []}, {'type': 'RightOperand', 'name': 'binary_number_length', 'range': [82, 82], 'children': []}]}]}]}]}]}]}]}, {'type': 'Assignment', 'name': 'twos_complement_number', 'range': [90, 124], 'children': [{'type': 'ConditionalExpression', 'name': '', 'range': [92, 123], 'children': [{'type': 'Condition', 'name': '', 'range': [115, 118], 'children': []}, {'type': 'TrueBranch', 'name': '', 'range': [94, 113], 'children': [{'type': 'StringConcatenation', 'name': '', 'range': [96, 111], 'children': [{'type': 'Literal', 'name': '1', 'range': [96, 96], 'children': []}, {'type': 'StringRepetition', 'name': '', 'range': [98, 108], 'children': [{'type': 'Literal', 'name': '0', 'range': [99, 99], 'children': []}, {'type': 'BinaryExpression', 'name': '', 'range': [101, 108], 'children': [{'type': 'LeftOperand', 'name': 'binary_number_length', 'range': [102, 102], 'children': []}, {'type': 'Operator', 'name': '-', 'range': [103, 103], 'children': []}, {'type': 'RightOperand', 'name': '', 'range': [104, 108], 'children': [{'type': 'CallExpression', 'name': 'len', 'range': [104, 107], 'children': [{'type': 'Argument', 'name': 'twos_complement_number', 'range': [106, 106], 'children': []}]}]}]}]}, {'type': 'Identifier', 'name': 'twos_complement_number', 'range': [111, 111], 'children': []}]}]}, {'type': 'FalseBranch', 'name': '', 'range': [121, 121], 'children': [{'type': 'Literal', 'name': '0', 'range': [121, 121], 'children': []}]}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [125, 129], 'children': [{'type': 'StringConcatenation', 'name': '', 'range': [126, 128], 'children': [{'type': 'Literal', 'name': '0b', 'range': [126, 126], 'children': []}, {'type': 'Identifier', 'name': 'twos_complement_number', 'range': [128, 128], 'children': []}]}]}]}]}
2025-01-08 09:54:27,146 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:55:02,014 - INFO - Step 5 result: {'type': 'Program', 'name': 'twos_complement', 'range': [27, 129], 'children': [{'type': 'FunctionDecl', 'name': 'twos_complement', 'range': [27, 129], 'children': [{'type': 'Parameter', 'name': 'number', 'range': [30, 32], 'children': []}, {'type': 'ReturnType', 'name': 'str', 'range': [36, 36], 'children': []}, {'type': 'Docstring', 'name': '', 'range': [39, 41], 'children': []}, {'type': 'IfStatement', 'name': '', 'range': [43, 54], 'children': [{'type': 'Condition', 'name': '', 'range': [44, 46], 'children': []}, {'type': 'RaiseStatement', 'name': '', 'range': [49, 53], 'children': [{'type': 'ExceptionType', 'name': 'ValueError', 'range': [50, 50], 'children': []}, {'type': 'ExceptionMessage', 'name': '', 'range': [52, 52], 'children': []}]}]}, {'type': 'VariableDecl', 'name': 'binary_number_length', 'range': [55, 68], 'children': [{'type': 'Assignment', 'name': '', 'range': [56, 67], 'children': [{'type': 'CallExpression', 'name': 'len', 'range': [57, 67], 'children': [{'type': 'CallExpression', 'name': 'bin', 'range': [59, 66], 'children': [{'type': 'Argument', 'name': 'number', 'range': [61, 61], 'children': []}]}]}]}]}, {'type': 'VariableDecl', 'name': 'twos_complement_number', 'range': [69, 89], 'children': [{'type': 'Assignment', 'name': '', 'range': [70, 88], 'children': [{'type': 'CallExpression', 'name': 'bin', 'range': [71, 88], 'children': [{'type': 'Argument', 'name': '', 'range': [73, 83], 'children': [{'type': 'CallExpression', 'name': 'abs', 'range': [73, 76], 'children': [{'type': 'Argument', 'name': 'number', 'range': [75, 75], 'children': []}]}, {'type': 'BinaryExpression', 'name': '', 'range': [77, 83], 'children': [{'type': 'LeftOperand', 'name': '', 'range': [77, 77], 'children': []}, {'type': 'Operator', 'name': '-', 'range': [77, 77], 'children': []}, {'type': 'RightOperand', 'name': '', 'range': [78, 83], 'children': [{'type': 'Literal', 'name': '1', 'range': [79, 79], 'children': []}, {'type': 'BinaryExpression', 'name': '', 'range': [80, 83], 'children': [{'type': 'LeftOperand', 'name': '', 'range': [80, 80], 'children': []}, {'type': 'Operator', 'name': '<<', 'range': [80, 81], 'children': []}, {'type': 'RightOperand', 'name': 'binary_number_length', 'range': [82, 82], 'children': []}]}]}]}]}]}]}]}, {'type': 'Assignment', 'name': 'twos_complement_number', 'range': [90, 124], 'children': [{'type': 'ConditionalExpression', 'name': '', 'range': [92, 123], 'children': [{'type': 'Condition', 'name': '', 'range': [115, 118], 'children': []}, {'type': 'TrueBranch', 'name': '', 'range': [94, 113], 'children': [{'type': 'StringConcatenation', 'name': '', 'range': [96, 111], 'children': [{'type': 'Literal', 'name': '1', 'range': [96, 96], 'children': []}, {'type': 'StringRepetition', 'name': '', 'range': [98, 108], 'children': [{'type': 'Literal', 'name': '0', 'range': [99, 99], 'children': []}, {'type': 'BinaryExpression', 'name': '', 'range': [101, 108], 'children': [{'type': 'LeftOperand', 'name': 'binary_number_length', 'range': [102, 102], 'children': []}, {'type': 'Operator', 'name': '-', 'range': [103, 103], 'children': []}, {'type': 'RightOperand', 'name': '', 'range': [104, 108], 'children': [{'type': 'CallExpression', 'name': 'len', 'range': [104, 107], 'children': [{'type': 'Argument', 'name': 'twos_complement_number', 'range': [106, 106], 'children': []}]}]}]}]}, {'type': 'Identifier', 'name': 'twos_complement_number', 'range': [111, 111], 'children': []}]}]}, {'type': 'FalseBranch', 'name': '', 'range': [121, 121], 'children': [{'type': 'Literal', 'name': '0', 'range': [121, 121], 'children': []}]}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [125, 129], 'children': [{'type': 'StringConcatenation', 'name': '', 'range': [126, 128], 'children': [{'type': 'Literal', 'name': '0b', 'range': [126, 126], 'children': []}, {'type': 'Identifier', 'name': 'twos_complement_number', 'range': [128, 128], 'children': []}]}]}]}]}
2025-01-08 09:55:02,015 - INFO - Completed main AST analysis flow
2025-01-08 09:55:02,016 - INFO - Successfully processed chunk
2025-01-08 09:55:02,027 - INFO - Starting code generation from AST
2025-01-08 09:55:07,586 - INFO - Successfully generated code from AST
2025-01-08 09:55:07,586 - INFO - Starting static code similarity comparison
2025-01-08 09:55:07,589 - INFO - Static similarity result: {'final_score': 72.34, 'length_similarity': 66.98, 'token_similarity': 60.34, 'structure_similarity': 56.76, 'function_similarity': 100, 'complexity_similarity': 100.0, 'variable_similarity': 100}
