2025-01-08 09:26:17,130 - INFO - Processing sample 54
2025-01-08 09:26:17,130 - INFO - Starting Step 0: Splitting code into top-level declarations
2025-01-08 09:26:41,099 - INFO - Successfully split code into 13 top-level declarations
2025-01-08 09:26:41,103 - INFO - Processing chunk #0 (size=819 chars, start_index=0)
2025-01-08 09:26:41,103 - INFO - Processing chunk with 819 chars starting at index 0
2025-01-08 09:26:41,103 - INFO - Starting main AST analysis flow
2025-01-08 09:26:41,104 - INFO - Tokenized code into 201 tokens
2025-01-08 09:26:41,104 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:26:41,105 - INFO - Processing chunk #1 (size=124 chars, start_index=201)
2025-01-08 09:26:41,105 - INFO - Processing chunk with 124 chars starting at index 201
2025-01-08 09:26:41,106 - INFO - Starting main AST analysis flow
2025-01-08 09:26:41,106 - INFO - Tokenized code into 27 tokens
2025-01-08 09:26:41,106 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:26:41,107 - INFO - Processing chunk #2 (size=852 chars, start_index=228)
2025-01-08 09:26:41,107 - INFO - Processing chunk with 852 chars starting at index 228
2025-01-08 09:26:41,107 - INFO - Starting main AST analysis flow
2025-01-08 09:26:41,108 - INFO - Tokenized code into 183 tokens
2025-01-08 09:26:41,108 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:26:41,110 - INFO - Processing chunk #3 (size=473 chars, start_index=411)
2025-01-08 09:26:41,110 - INFO - Processing chunk with 473 chars starting at index 411
2025-01-08 09:26:41,110 - INFO - Starting main AST analysis flow
2025-01-08 09:26:41,110 - INFO - Tokenized code into 87 tokens
2025-01-08 09:26:41,110 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:26:41,112 - INFO - Processing chunk #4 (size=645 chars, start_index=498)
2025-01-08 09:26:41,112 - INFO - Processing chunk with 645 chars starting at index 498
2025-01-08 09:26:41,112 - INFO - Starting main AST analysis flow
2025-01-08 09:26:41,112 - INFO - Tokenized code into 124 tokens
2025-01-08 09:26:41,112 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:26:41,119 - INFO - Processing chunk #5 (size=757 chars, start_index=622)
2025-01-08 09:26:41,126 - INFO - Processing chunk with 757 chars starting at index 622
2025-01-08 09:26:41,126 - INFO - Starting main AST analysis flow
2025-01-08 09:26:41,127 - INFO - Tokenized code into 128 tokens
2025-01-08 09:26:41,127 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:26:41,140 - INFO - Processing chunk #6 (size=496 chars, start_index=750)
2025-01-08 09:26:41,149 - INFO - Processing chunk #7 (size=246 chars, start_index=858)
2025-01-08 09:26:41,149 - INFO - Processing chunk with 496 chars starting at index 750
2025-01-08 09:26:41,150 - INFO - Processing chunk #8 (size=244 chars, start_index=913)
2025-01-08 09:26:41,151 - INFO - Processing chunk #9 (size=669 chars, start_index=968)
2025-01-08 09:26:41,152 - INFO - Processing chunk with 246 chars starting at index 858
2025-01-08 09:26:41,153 - INFO - Processing chunk #10 (size=2578 chars, start_index=1103)
2025-01-08 09:26:41,153 - INFO - Starting main AST analysis flow
2025-01-08 09:26:41,154 - INFO - Processing chunk #11 (size=325 chars, start_index=1516)
2025-01-08 09:26:41,158 - INFO - Processing chunk with 244 chars starting at index 913
2025-01-08 09:26:41,159 - INFO - Processing chunk #12 (size=228 chars, start_index=1594)
2025-01-08 09:26:41,162 - INFO - Processing chunk with 669 chars starting at index 968
2025-01-08 09:26:41,163 - INFO - Starting main AST analysis flow
2025-01-08 09:26:41,163 - INFO - Processing chunk with 2578 chars starting at index 1103
2025-01-08 09:26:41,165 - INFO - Starting main AST analysis flow
2025-01-08 09:26:41,164 - INFO - Processing chunk with 325 chars starting at index 1516
2025-01-08 09:26:41,167 - INFO - Starting main AST analysis flow
2025-01-08 09:26:41,164 - INFO - Processing chunk with 228 chars starting at index 1594
2025-01-08 09:26:41,165 - INFO - Starting main AST analysis flow
2025-01-08 09:26:41,165 - INFO - Tokenized code into 55 tokens
2025-01-08 09:26:41,164 - INFO - Tokenized code into 108 tokens
2025-01-08 09:26:41,168 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:26:41,164 - INFO - Starting main AST analysis flow
2025-01-08 09:26:41,167 - INFO - Tokenized code into 78 tokens
2025-01-08 09:26:41,167 - INFO - Starting main AST analysis flow
2025-01-08 09:26:41,168 - INFO - Tokenized code into 135 tokens
2025-01-08 09:26:41,174 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:26:41,166 - INFO - Tokenized code into 413 tokens
2025-01-08 09:26:41,173 - INFO - Tokenized code into 55 tokens
2025-01-08 09:26:41,179 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:26:41,173 - INFO - Tokenized code into 53 tokens
2025-01-08 09:26:41,183 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:26:41,178 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:26:41,173 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:26:41,168 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 09:26:54,649 - INFO - Step 1 result: {'type': 'Program', 'name': 'check_title', 'range': [498, 619], 'children': []}
2025-01-08 09:26:54,649 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:26:55,165 - INFO - Step 1 result: {'type': 'Program', 'name': 'main', 'range': [1516, 1593], 'children': []}
2025-01-08 09:26:55,165 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:26:55,222 - INFO - Step 1 result: {'type': 'Program', 'name': 'check_file_format', 'range': [1103, 1515], 'children': []}
2025-01-08 09:26:55,223 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:26:55,516 - INFO - Step 1 result: {'type': 'Program', 'name': 'get_categories_content', 'range': [228, 410], 'children': []}
2025-01-08 09:26:55,516 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:26:55,946 - INFO - Step 1 result: {'type': 'Program', 'name': 'check_description', 'range': [622, 748], 'children': []}
2025-01-08 09:26:55,946 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:26:56,383 - INFO - Step 1 result: {'type': 'Program', 'name': 'check_auth', 'range': [750, 857], 'children': []}
2025-01-08 09:26:56,384 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:26:57,712 - INFO - Step 1 result: {'type': 'Program', 'name': 'check_cors', 'range': [913, 967], 'children': []}
2025-01-08 09:26:57,712 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:26:58,739 - INFO - Step 1 result: {'type': 'Program', 'name': 'check_entry', 'range': [968, 1102], 'children': []}
2025-01-08 09:26:58,739 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:26:59,488 - INFO - Step 1 result: {'type': 'Program', 'name': 'check_alphabetical_order', 'range': [411, 496], 'children': []}
2025-01-08 09:26:59,488 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:27:02,140 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [1594, 1646], 'children': [{'type': 'IfStatement', 'name': '', 'range': [1594, 1600], 'children': []}, {'type': 'VariableDeclaration', 'name': 'num_args', 'range': [1602, 1610], 'children': []}, {'type': 'IfStatement', 'name': '', 'range': [1612, 1629], 'children': []}, {'type': 'VariableDeclaration', 'name': 'filename', 'range': [1631, 1639], 'children': []}, {'type': 'FunctionCall', 'name': 'main', 'range': [1641, 1645], 'children': []}]}
2025-01-08 09:27:02,140 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:27:02,742 - INFO - Step 1 result: {'type': 'Program', 'name': 'error_message', 'range': [201, 227], 'children': [{'type': 'FunctionDeclaration', 'name': 'error_message', 'range': [201, 227], 'children': [{'type': 'Parameter', 'name': 'line_number', 'range': [204, 206], 'children': []}, {'type': 'Parameter', 'name': 'message', 'range': [208, 210], 'children': []}, {'type': 'ReturnType', 'name': 'str', 'range': [214, 214], 'children': []}, {'type': 'Body', 'name': '', 'range': [216, 226], 'children': [{'type': 'Assignment', 'name': 'line', 'range': [217, 221], 'children': []}, {'type': 'ReturnStatement', 'name': '', 'range': [223, 225], 'children': []}]}]}]}
2025-01-08 09:27:02,743 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:27:05,561 - INFO - Step 1 result: {'type': 'Program', 'name': 'check_https', 'range': [858, 912], 'children': [{'type': 'FunctionDeclaration', 'name': 'check_https', 'range': [858, 912], 'children': [{'type': 'Parameter', 'name': 'line_num', 'range': [861, 863]}, {'type': 'Parameter', 'name': 'https', 'range': [865, 867]}, {'type': 'ReturnType', 'name': 'List[str]', 'range': [871, 874]}, {'type': 'VariableDeclaration', 'name': 'err_msgs', 'range': [878, 881]}, {'type': 'IfStatement', 'range': [884, 907], 'children': [{'type': 'Condition', 'range': [885, 888]}, {'type': 'Block', 'range': [889, 907], 'children': [{'type': 'VariableDeclaration', 'name': 'err_msg', 'range': [891, 899]}, {'type': 'ExpressionStatement', 'range': [901, 906]}]}]}, {'type': 'ReturnStatement', 'range': [909, 910]}]}]}
2025-01-08 09:27:05,562 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:27:23,035 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [0, 200], 'children': [{'type': 'ImportDeclaration', 'name': 're', 'range': [14, 16], 'children': []}, {'type': 'ImportDeclaration', 'name': 'sys', 'range': [17, 19], 'children': []}, {'type': 'ImportDeclaration', 'name': 'punctuation', 'range': [20, 24], 'children': []}, {'type': 'ImportDeclaration', 'name': 'List, Tuple, Dict', 'range': [25, 33], 'children': []}, {'type': 'VariableDeclaration', 'name': 'punctuation', 'range': [57, 67], 'children': []}, {'type': 'VariableDeclaration', 'name': 'anchor', 'range': [69, 72], 'children': []}, {'type': 'VariableDeclaration', 'name': 'auth_keys', 'range': [73, 86], 'children': []}, {'type': 'VariableDeclaration', 'name': 'https_keys', 'range': [87, 94], 'children': []}, {'type': 'VariableDeclaration', 'name': 'cors_keys', 'range': [95, 104], 'children': []}, {'type': 'VariableDeclaration', 'name': 'index_title', 'range': [106, 109], 'children': []}, {'type': 'VariableDeclaration', 'name': 'index_desc', 'range': [110, 113], 'children': []}, {'type': 'VariableDeclaration', 'name': 'index_auth', 'range': [114, 117], 'children': []}, {'type': 'VariableDeclaration', 'name': 'index_https', 'range': [118, 121], 'children': []}, {'type': 'VariableDeclaration', 'name': 'index_cors', 'range': [122, 125], 'children': []}, {'type': 'VariableDeclaration', 'name': 'num_segments', 'range': [127, 130], 'children': []}, {'type': 'VariableDeclaration', 'name': 'min_entries_per_category', 'range': [131, 134], 'children': []}, {'type': 'VariableDeclaration', 'name': 'max_description_length', 'range': [135, 138], 'children': []}, {'type': 'VariableDeclaration', 'name': 'anchor_re', 'range': [140, 150], 'children': []}, {'type': 'VariableDeclaration', 'name': 'category_title_in_index_re', 'range': [151, 159], 'children': []}, {'type': 'VariableDeclaration', 'name': 'link_re', 'range': [160, 168], 'children': []}, {'type': 'TypeAliasDeclaration', 'name': 'APIList', 'range': [174, 180], 'children': []}, {'type': 'TypeAliasDeclaration', 'name': 'Categories', 'range': [181, 189], 'children': []}, {'type': 'TypeAliasDeclaration', 'name': 'CategoriesLineNumber', 'range': [190, 198], 'children': []}]}
2025-01-08 09:27:23,035 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 09:27:23,344 - INFO - Step 2 result: {'type': 'Program', 'name': 'check_cors', 'range': [913, 967], 'children': [{'type': 'FunctionDeclaration', 'name': 'check_cors', 'range': [913, 967], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [915, 923], 'children': [{'type': 'Parameter', 'name': 'line_num', 'range': [916, 918], 'children': []}, {'type': 'Parameter', 'name': 'cors', 'range': [920, 922], 'children': []}]}, {'type': 'ReturnType', 'name': 'return_type', 'range': [924, 929], 'children': [{'type': 'Type', 'name': 'List[str]', 'range': [926, 929], 'children': []}]}, {'type': 'Block', 'name': 'body', 'range': [931, 967], 'children': [{'type': 'VariableDeclaration', 'name': 'err_msgs', 'range': [933, 936], 'children': []}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [939, 962], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [940, 943], 'children': []}, {'type': 'Block', 'name': 'then', 'range': [945, 962], 'children': [{'type': 'VariableDeclaration', 'name': 'err_msg', 'range': [946, 954], 'children': []}, {'type': 'ExpressionStatement', 'name': 'append_err_msg', 'range': [956, 961], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return_statement', 'range': [964, 965], 'children': []}]}]}]}
2025-01-08 09:27:23,344 - INFO - Starting Step 3: AST simplification
2025-01-08 09:27:24,758 - INFO - Step 2 result: {'type': 'Program', 'name': 'check_title', 'range': [498, 619], 'children': [{'type': 'FunctionDeclaration', 'name': 'check_title', 'range': [498, 619], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [500, 508], 'children': [{'type': 'Parameter', 'name': 'line_num', 'range': [501, 503], 'children': []}, {'type': 'Parameter', 'name': 'raw_title', 'range': [505, 507], 'children': []}]}, {'type': 'ReturnType', 'name': 'return_type', 'range': [509, 514], 'children': [{'type': 'Type', 'name': 'List', 'range': [511, 514], 'children': []}]}, {'type': 'Block', 'name': 'body', 'range': [516, 619], 'children': [{'type': 'VariableDeclaration', 'name': 'err_msgs', 'range': [518, 521], 'children': []}, {'type': 'Assignment', 'name': 'title_match', 'range': [524, 531], 'children': []}, {'type': 'IfStatement', 'name': 'if_not_title_match', 'range': [544, 564], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [545, 546], 'children': []}, {'type': 'Block', 'name': 'then', 'range': [548, 564], 'children': [{'type': 'Assignment', 'name': 'err_msg', 'range': [549, 556], 'children': []}, {'type': 'MethodCall', 'name': 'append', 'range': [558, 563], 'children': []}]}]}, {'type': 'ElseStatement', 'name': 'else', 'range': [565, 615], 'children': [{'type': 'Block', 'name': 'else_block', 'range': [567, 615], 'children': [{'type': 'Assignment', 'name': 'title', 'range': [578, 585], 'children': []}, {'type': 'IfStatement', 'name': 'if_title_ends_with_API', 'range': [587, 615], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [588, 597], 'children': []}, {'type': 'Block', 'name': 'then', 'range': [599, 615], 'children': [{'type': 'Assignment', 'name': 'err_msg', 'range': [600, 607], 'children': []}, {'type': 'MethodCall', 'name': 'append', 'range': [609, 614], 'children': []}]}]}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [617, 618], 'children': []}]}]}]}
2025-01-08 09:27:24,758 - INFO - Starting Step 3: AST simplification
2025-01-08 09:27:26,732 - INFO - Step 2 result: {'type': 'Program', 'name': 'check_alphabetical_order', 'range': [411, 496], 'children': [{'type': 'FunctionDeclaration', 'name': 'check_alphabetical_order', 'range': [411, 427], 'children': [{'type': 'Parameter', 'name': 'lines', 'range': [414, 419], 'children': [{'type': 'TypeAnnotation', 'name': 'List[str]', 'range': [416, 419], 'children': []}]}, {'type': 'ReturnType', 'name': 'List[str]', 'range': [423, 426], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'err_msgs', 'range': [430, 433], 'children': []}, {'type': 'Assignment', 'name': 'categories, category_line_num', 'range': [436, 445], 'children': [{'type': 'FunctionCall', 'name': 'get_categories_content', 'range': [440, 445], 'children': [{'type': 'Argument', 'name': 'contents', 'range': [442, 444], 'children': []}]}]}, {'type': 'ForLoop', 'name': 'for category, api_list in categories.items()', 'range': [448, 492], 'children': [{'type': 'IfStatement', 'name': 'if sorted(api_list) != api_list', 'range': [460, 492], 'children': [{'type': 'FunctionCall', 'name': 'error_message', 'range': [472, 484], 'children': [{'type': 'Argument', 'name': 'category_line_num[category]', 'range': [475, 478], 'children': []}, {'type': 'Argument', 'name': "f'{category} category is not alphabetical order'", 'range': [481, 482], 'children': []}]}, {'type': 'MethodCall', 'name': 'err_msgs.append', 'range': [486, 491], 'children': [{'type': 'Argument', 'name': 'err_msg', 'range': [490, 490], 'children': []}]}]}]}, {'type': 'ReturnStatement', 'name': 'return err_msgs', 'range': [494, 495], 'children': []}]}
2025-01-08 09:27:26,732 - INFO - Starting Step 3: AST simplification
2025-01-08 09:27:27,260 - INFO - Step 2 result: {'type': 'Program', 'name': 'error_message', 'range': [201, 227], 'children': [{'type': 'FunctionDeclaration', 'name': 'error_message', 'range': [201, 227], 'children': [{'type': 'ParameterList', 'name': '', 'range': [203, 211], 'children': [{'type': 'Parameter', 'name': 'line_number', 'range': [204, 206], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [206, 206], 'children': []}]}, {'type': 'Parameter', 'name': 'message', 'range': [208, 210], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [210, 210], 'children': []}]}]}, {'type': 'ReturnType', 'name': 'str', 'range': [212, 214], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [214, 214], 'children': []}]}, {'type': 'Body', 'name': '', 'range': [216, 226], 'children': [{'type': 'Assignment', 'name': 'line', 'range': [217, 221], 'children': [{'type': 'Expression', 'name': 'line_number + 1', 'range': [219, 221], 'children': [{'type': 'BinaryExpression', 'name': '+', 'range': [220, 220], 'children': [{'type': 'Identifier', 'name': 'line_number', 'range': [219, 219], 'children': []}, {'type': 'Literal', 'name': '1', 'range': [221, 221], 'children': []}]}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [223, 225], 'children': [{'type': 'Expression', 'name': "f'(L{line:03d}) {message}'", 'range': [224, 225], 'children': [{'type': 'TemplateLiteral', 'name': '', 'range': [225, 225], 'children': []}]}]}]}]}]}
2025-01-08 09:27:27,260 - INFO - Starting Step 3: AST simplification
2025-01-08 09:27:29,851 - INFO - Step 2 result: {'type': 'Program', 'name': 'check_entry', 'range': [968, 1102], 'children': [{'type': 'FunctionDeclaration', 'name': 'check_entry', 'range': [968, 1102], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [970, 981], 'children': [{'type': 'Parameter', 'name': 'line_num', 'range': [971, 973], 'children': []}, {'type': 'Parameter', 'name': 'segments', 'range': [975, 980], 'children': []}]}, {'type': 'ReturnType', 'name': 'return_type', 'range': [982, 987], 'children': []}, {'type': 'Block', 'name': 'body', 'range': [989, 1102], 'children': [{'type': 'VariableDeclaration', 'name': 'raw_title', 'range': [991, 996], 'children': []}, {'type': 'VariableDeclaration', 'name': 'description', 'range': [998, 1003], 'children': []}, {'type': 'VariableDeclaration', 'name': 'auth', 'range': [1005, 1010], 'children': []}, {'type': 'VariableDeclaration', 'name': 'https', 'range': [1012, 1017], 'children': []}, {'type': 'VariableDeclaration', 'name': 'cors', 'range': [1019, 1024], 'children': []}, {'type': 'VariableDeclaration', 'name': 'title_err_msgs', 'range': [1027, 1034], 'children': []}, {'type': 'VariableDeclaration', 'name': 'desc_err_msgs', 'range': [1036, 1043], 'children': []}, {'type': 'VariableDeclaration', 'name': 'auth_err_msgs', 'range': [1045, 1052], 'children': []}, {'type': 'VariableDeclaration', 'name': 'https_err_msgs', 'range': [1054, 1061], 'children': []}, {'type': 'VariableDeclaration', 'name': 'cors_err_msgs', 'range': [1063, 1070], 'children': []}, {'type': 'VariableDeclaration', 'name': 'err_msgs', 'range': [1073, 1096], 'children': []}, {'type': 'ReturnStatement', 'name': 'return', 'range': [1099, 1100], 'children': []}]}]}]}
2025-01-08 09:27:29,851 - INFO - Starting Step 3: AST simplification
2025-01-08 09:27:33,279 - INFO - Step 2 result: {'type': 'Program', 'name': 'main', 'range': [1516, 1593], 'children': [{'type': 'FunctionDeclaration', 'name': 'main', 'range': [1516, 1593], 'children': [{'type': 'Parameter', 'name': 'filename', 'range': [1519, 1521], 'children': []}, {'type': 'ReturnType', 'name': 'None', 'range': [1525, 1525], 'children': []}, {'type': 'Block', 'name': '', 'range': [1527, 1593], 'children': [{'type': 'WithStatement', 'name': '', 'range': [1529, 1560], 'children': [{'type': 'CallExpression', 'name': 'open', 'range': [1530, 1541], 'children': [{'type': 'Argument', 'name': 'filename', 'range': [1532, 1532], 'children': []}, {'type': 'Argument', 'name': 'mode', 'range': [1534, 1536], 'children': []}, {'type': 'Argument', 'name': 'encoding', 'range': [1538, 1540], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'lines', 'range': [1546, 1559], 'children': [{'type': 'CallExpression', 'name': 'list', 'range': [1548, 1559], 'children': [{'type': 'GeneratorExpression', 'name': '', 'range': [1550, 1558], 'children': [{'type': 'CallExpression', 'name': 'rstrip', 'range': [1552, 1554], 'children': []}, {'type': 'Identifier', 'name': 'line', 'range': [1556, 1556], 'children': []}, {'type': 'Identifier', 'name': 'file', 'range': [1558, 1558], 'children': []}]}]}]}]}, {'type': 'VariableDeclaration', 'name': 'file_format_err_msgs', 'range': [1562, 1567], 'children': [{'type': 'CallExpression', 'name': 'check_file_format', 'range': [1564, 1567], 'children': [{'type': 'Argument', 'name': 'lines', 'range': [1566, 1566], 'children': []}]}]}, {'type': 'IfStatement', 'name': '', 'range': [1570, 1591], 'children': [{'type': 'Condition', 'name': 'file_format_err_msgs', 'range': [1571, 1571], 'children': []}, {'type': 'Block', 'name': '', 'range': [1573, 1591], 'children': [{'type': 'ForStatement', 'name': '', 'range': [1574, 1584], 'children': [{'type': 'VariableDeclaration', 'name': 'err_msg', 'range': [1575, 1575], 'children': []}, {'type': 'Identifier', 'name': 'file_format_err_msgs', 'range': [1577, 1577], 'children': []}, {'type': 'Block', 'name': '', 'range': [1579, 1584], 'children': [{'type': 'CallExpression', 'name': 'print', 'range': [1580, 1583], 'children': [{'type': 'Argument', 'name': 'err_msg', 'range': [1582, 1582], 'children': []}]}]}]}, {'type': 'CallExpression', 'name': 'sys.exit', 'range': [1585, 1590], 'children': [{'type': 'Argument', 'name': '1', 'range': [1589, 1589], 'children': []}]}]}]}]}]}]}
2025-01-08 09:27:33,279 - INFO - Starting Step 3: AST simplification
2025-01-08 09:27:34,878 - INFO - Step 2 result: {'type': 'Program', 'name': 'check_auth', 'range': [750, 857], 'children': [{'type': 'FunctionDeclaration', 'name': 'check_auth', 'range': [750, 857], 'children': [{'type': 'ParameterList', 'range': [752, 760], 'children': [{'type': 'Parameter', 'name': 'line_num', 'range': [753, 755], 'children': []}, {'type': 'Parameter', 'name': 'auth', 'range': [757, 759], 'children': []}]}, {'type': 'ReturnType', 'range': [761, 766], 'children': [{'type': 'Type', 'name': 'List', 'range': [763, 766], 'children': []}]}, {'type': 'Block', 'range': [768, 857], 'children': [{'type': 'VariableDeclaration', 'name': 'err_msgs', 'range': [770, 773], 'children': []}, {'type': 'VariableDeclaration', 'name': 'backtick', 'range': [776, 778], 'children': []}, {'type': 'IfStatement', 'range': [780, 820], 'children': [{'type': 'Condition', 'range': [781, 802], 'children': [{'type': 'BinaryExpression', 'operator': '!=', 'range': [781, 784], 'children': []}, {'type': 'LogicalExpression', 'operator': 'and', 'range': [785, 802], 'children': [{'type': 'UnaryExpression', 'operator': 'not', 'range': [787, 793], 'children': []}, {'type': 'UnaryExpression', 'operator': 'not', 'range': [795, 801], 'children': []}]}]}, {'type': 'Block', 'range': [804, 820], 'children': [{'type': 'VariableDeclaration', 'name': 'err_msg', 'range': [805, 812], 'children': []}, {'type': 'ExpressionStatement', 'range': [814, 819], 'children': []}]}]}, {'type': 'IfStatement', 'range': [822, 852], 'children': [{'type': 'Condition', 'range': [823, 833], 'children': [{'type': 'CallExpression', 'range': [824, 830], 'children': []}, {'type': 'BinaryExpression', 'operator': 'not in', 'range': [831, 833], 'children': []}]}, {'type': 'Block', 'range': [835, 852], 'children': [{'type': 'VariableDeclaration', 'name': 'err_msg', 'range': [836, 844], 'children': []}, {'type': 'ExpressionStatement', 'range': [846, 851], 'children': []}]}]}, {'type': 'ReturnStatement', 'range': [854, 855], 'children': []}]}]}]}
2025-01-08 09:27:34,878 - INFO - Starting Step 3: AST simplification
2025-01-08 09:27:38,281 - INFO - Step 2 result: {'type': 'Program', 'name': 'check_https', 'range': [858, 912], 'children': [{'type': 'FunctionDeclaration', 'name': 'check_https', 'range': [858, 912], 'children': [{'type': 'Parameter', 'name': 'line_num', 'range': [861, 863], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [863, 863]}]}, {'type': 'Parameter', 'name': 'https', 'range': [865, 867], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [867, 867]}]}, {'type': 'ReturnType', 'name': 'List[str]', 'range': [871, 874]}, {'type': 'VariableDeclaration', 'name': 'err_msgs', 'range': [878, 881], 'children': [{'type': 'ArrayLiteral', 'range': [880, 881]}]}, {'type': 'IfStatement', 'range': [884, 907], 'children': [{'type': 'Condition', 'range': [885, 888], 'children': [{'type': 'BinaryExpression', 'operator': 'not in', 'range': [885, 888], 'children': [{'type': 'Identifier', 'name': 'https', 'range': [885, 885]}, {'type': 'Identifier', 'name': 'https_keys', 'range': [888, 888]}]}]}, {'type': 'Block', 'range': [889, 907], 'children': [{'type': 'VariableDeclaration', 'name': 'err_msg', 'range': [891, 899], 'children': [{'type': 'CallExpression', 'name': 'error_message', 'range': [893, 899], 'children': [{'type': 'Identifier', 'name': 'line_num', 'range': [895, 895]}, {'type': 'TemplateLiteral', 'range': [897, 898], 'children': [{'type': 'Identifier', 'name': 'https', 'range': [898, 898]}]}]}]}, {'type': 'ExpressionStatement', 'range': [901, 906], 'children': [{'type': 'CallExpression', 'name': 'append', 'range': [903, 906], 'children': [{'type': 'Identifier', 'name': 'err_msg', 'range': [905, 905]}]}]}]}]}, {'type': 'ReturnStatement', 'range': [909, 910], 'children': [{'type': 'Identifier', 'name': 'err_msgs', 'range': [910, 910]}]}]}]}
2025-01-08 09:27:38,281 - INFO - Starting Step 3: AST simplification
2025-01-08 09:27:38,618 - INFO - Step 2 result: {'type': 'Program', 'name': 'get_categories_content', 'range': [228, 410], 'children': [{'type': 'FunctionDeclaration', 'name': 'get_categories_content', 'range': [228, 408], 'children': [{'type': 'Parameter', 'name': 'contents', 'range': [231, 236], 'children': []}, {'type': 'ReturnType', 'name': 'Tuple[Categories, CategoriesLineNumber]', 'range': [240, 245], 'children': []}, {'type': 'Block', 'name': '', 'range': [247, 408], 'children': [{'type': 'VariableDeclaration', 'name': 'categories', 'range': [249, 252], 'children': []}, {'type': 'VariableDeclaration', 'name': 'category_line_num', 'range': [254, 257], 'children': []}, {'type': 'ForLoop', 'name': '', 'range': [260, 333], 'children': [{'type': 'VariableDeclaration', 'name': 'line_num', 'range': [261, 261], 'children': []}, {'type': 'VariableDeclaration', 'name': 'line_content', 'range': [263, 263], 'children': []}, {'type': 'FunctionCall', 'name': 'enumerate', 'range': [265, 268], 'children': [{'type': 'Argument', 'name': 'contents', 'range': [267, 267], 'children': []}]}, {'type': 'IfStatement', 'name': '', 'range': [272, 313], 'children': [{'type': 'Condition', 'name': 'line_content.startswith(anchor)', 'range': [273, 278], 'children': []}, {'type': 'Block', 'name': '', 'range': [280, 313], 'children': [{'type': 'VariableDeclaration', 'name': 'category', 'range': [281, 295], 'children': []}, {'type': 'Assignment', 'name': 'categories[category] = []', 'range': [297, 304], 'children': []}, {'type': 'Assignment', 'name': 'category_line_num[category] = line_num', 'range': [305, 311], 'children': []}, {'type': 'ContinueStatement', 'name': '', 'range': [312, 312], 'children': []}]}]}, {'type': 'IfStatement', 'name': '', 'range': [315, 332], 'children': [{'type': 'Condition', 'name': "not line_content.startswith('|') or line_content.startswith('|---')", 'range': [316, 329], 'children': []}, {'type': 'Block', 'name': '', 'range': [331, 332], 'children': [{'type': 'ContinueStatement', 'name': '', 'range': [332, 332], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'raw_title', 'range': [335, 363], 'children': []}, {'type': 'FunctionCall', 'name': 'link_re.match', 'range': [366, 373], 'children': [{'type': 'Argument', 'name': 'raw_title', 'range': [372, 372], 'children': []}]}, {'type': 'IfStatement', 'name': '', 'range': [375, 401], 'children': [{'type': 'Condition', 'name': 'title_match', 'range': [376, 376], 'children': []}, {'type': 'Block', 'name': '', 'range': [378, 401], 'children': [{'type': 'VariableDeclaration', 'name': 'title', 'range': [379, 390], 'children': []}, {'type': 'FunctionCall', 'name': 'categories[category].append', 'range': [392, 400], 'children': [{'type': 'Argument', 'name': 'title', 'range': [399, 399], 'children': []}]}]}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [403, 408], 'children': [{'type': 'ReturnValue', 'name': '(categories, category_line_num)', 'range': [404, 407], 'children': []}]}]}]}]}
2025-01-08 09:27:38,618 - INFO - Starting Step 3: AST simplification
2025-01-08 09:27:38,853 - INFO - Step 2 result: {'type': 'Program', 'name': 'check_description', 'range': [622, 748], 'children': [{'type': 'FunctionDeclaration', 'name': 'check_description', 'range': [622, 748], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [624, 632], 'children': [{'type': 'Parameter', 'name': 'line_num', 'range': [625, 627], 'children': []}, {'type': 'Parameter', 'name': 'description', 'range': [629, 631], 'children': []}]}, {'type': 'ReturnType', 'name': 'return_type', 'range': [633, 638], 'children': [{'type': 'Type', 'name': 'List', 'range': [635, 638], 'children': []}]}, {'type': 'Block', 'name': 'body', 'range': [640, 748], 'children': [{'type': 'VariableDeclaration', 'name': 'err_msgs', 'range': [642, 645], 'children': []}, {'type': 'Assignment', 'name': 'first_char', 'range': [648, 653], 'children': []}, {'type': 'IfStatement', 'name': 'if_first_char_not_capitalized', 'range': [655, 681], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [656, 663], 'children': []}, {'type': 'Block', 'name': 'then', 'range': [665, 681], 'children': [{'type': 'Assignment', 'name': 'err_msg', 'range': [666, 673], 'children': []}, {'type': 'MethodCall', 'name': 'append', 'range': [675, 680], 'children': []}]}]}, {'type': 'Assignment', 'name': 'last_char', 'range': [683, 689], 'children': []}, {'type': 'IfStatement', 'name': 'if_last_char_in_punctuation', 'range': [691, 712], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [692, 694], 'children': []}, {'type': 'Block', 'name': 'then', 'range': [696, 712], 'children': [{'type': 'Assignment', 'name': 'err_msg', 'range': [697, 705], 'children': []}, {'type': 'MethodCall', 'name': 'append', 'range': [707, 711], 'children': []}]}]}, {'type': 'Assignment', 'name': 'desc_length', 'range': [715, 720], 'children': []}, {'type': 'IfStatement', 'name': 'if_desc_length_exceeds_max', 'range': [722, 743], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [723, 725], 'children': []}, {'type': 'Block', 'name': 'then', 'range': [727, 743], 'children': [{'type': 'Assignment', 'name': 'err_msg', 'range': [728, 736], 'children': []}, {'type': 'MethodCall', 'name': 'append', 'range': [738, 742], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [746, 747], 'children': []}]}]}]}
2025-01-08 09:27:38,853 - INFO - Starting Step 3: AST simplification
2025-01-08 09:27:41,732 - INFO - Step 2 result: {'nodes': [{'type': 'IfStatement', 'name': '', 'range': [1594, 1600], 'children': [{'type': 'Condition', 'name': '', 'range': [1594, 1599], 'children': [{'type': 'Identifier', 'name': '__name__', 'range': [1595, 1595], 'children': []}, {'type': 'Operator', 'name': '==', 'range': [1596, 1597], 'children': []}, {'type': 'StringLiteral', 'name': "'__main__'", 'range': [1598, 1598], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'num_args', 'range': [1602, 1610], 'children': [{'type': 'Assignment', 'name': '', 'range': [1602, 1609], 'children': [{'type': 'Identifier', 'name': 'num_args', 'range': [1602, 1602], 'children': []}, {'type': 'Operator', 'name': '=', 'range': [1603, 1603], 'children': []}, {'type': 'FunctionCall', 'name': 'len', 'range': [1604, 1609], 'children': [{'type': 'Identifier', 'name': 'sys.argv', 'range': [1606, 1608], 'children': []}]}]}]}, {'type': 'IfStatement', 'name': '', 'range': [1612, 1629], 'children': [{'type': 'Condition', 'name': '', 'range': [1612, 1616], 'children': [{'type': 'Identifier', 'name': 'num_args', 'range': [1613, 1613], 'children': []}, {'type': 'Operator', 'name': '<', 'range': [1614, 1614], 'children': []}, {'type': 'NumericLiteral', 'name': '2', 'range': [1615, 1615], 'children': []}]}, {'type': 'Block', 'name': '', 'range': [1617, 1629], 'children': [{'type': 'FunctionCall', 'name': 'print', 'range': [1618, 1622], 'children': [{'type': 'StringLiteral', 'name': "'No .md file passed (file should contain Markdown table syntax)'", 'range': [1620, 1620], 'children': []}]}, {'type': 'FunctionCall', 'name': 'sys.exit', 'range': [1623, 1629], 'children': [{'type': 'NumericLiteral', 'name': '1', 'range': [1627, 1627], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'filename', 'range': [1631, 1639], 'children': [{'type': 'Assignment', 'name': '', 'range': [1631, 1638], 'children': [{'type': 'Identifier', 'name': 'filename', 'range': [1631, 1631], 'children': []}, {'type': 'Operator', 'name': '=', 'range': [1632, 1632], 'children': []}, {'type': 'ArrayAccess', 'name': 'sys.argv[1]', 'range': [1633, 1638], 'children': [{'type': 'Identifier', 'name': 'sys.argv', 'range': [1633, 1635], 'children': []}, {'type': 'NumericLiteral', 'name': '1', 'range': [1637, 1637], 'children': []}]}]}]}, {'type': 'FunctionCall', 'name': 'main', 'range': [1641, 1645], 'children': [{'type': 'Identifier', 'name': 'filename', 'range': [1643, 1643], 'children': []}]}]}
2025-01-08 09:27:41,732 - INFO - Starting Step 3: AST simplification
2025-01-08 09:27:49,244 - INFO - Step 3 result: {'type': 'Program', 'name': 'check_cors', 'range': [913, 967], 'children': [{'type': 'FunctionDeclaration', 'name': 'check_cors', 'range': [913, 967], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [915, 923], 'children': [{'type': 'Parameter', 'name': 'line_num', 'range': [916, 918], 'children': []}, {'type': 'Parameter', 'name': 'cors', 'range': [920, 922], 'children': []}]}, {'type': 'ReturnType', 'name': 'return_type', 'range': [924, 929], 'children': [{'type': 'Type', 'name': 'List[str]', 'range': [926, 929], 'children': []}]}, {'type': 'Block', 'name': 'body', 'range': [931, 967], 'children': [{'type': 'VariableDeclaration', 'name': 'err_msgs', 'range': [933, 936], 'children': []}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [939, 962], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [940, 943], 'children': []}, {'type': 'Block', 'name': 'then', 'range': [945, 962], 'children': [{'type': 'VariableDeclaration', 'name': 'err_msg', 'range': [946, 954], 'children': []}, {'type': 'ExpressionStatement', 'name': 'append_err_msg', 'range': [956, 961], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return_statement', 'range': [964, 965], 'children': []}]}]}]}
2025-01-08 09:27:49,244 - INFO - Starting Step 4: AST normalization
2025-01-08 09:27:56,799 - INFO - Step 3 result: {'type': 'Program', 'name': 'check_alphabetical_order', 'range': [411, 496], 'children': [{'type': 'FunctionDeclaration', 'name': 'check_alphabetical_order', 'range': [411, 427], 'children': [{'type': 'Parameter', 'name': 'lines', 'range': [414, 419], 'children': [{'type': 'TypeAnnotation', 'name': 'List[str]', 'range': [416, 419], 'children': []}]}, {'type': 'ReturnType', 'name': 'List[str]', 'range': [423, 426], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'err_msgs', 'range': [430, 433], 'children': []}, {'type': 'Assignment', 'name': 'categories, category_line_num', 'range': [436, 445], 'children': [{'type': 'FunctionCall', 'name': 'get_categories_content', 'range': [440, 445], 'children': [{'type': 'Argument', 'name': 'contents', 'range': [442, 444], 'children': []}]}]}, {'type': 'ForLoop', 'name': 'for category, api_list in categories.items', 'range': [448, 492], 'children': [{'type': 'IfStatement', 'name': 'if sorted(api_list) != api_list', 'range': [460, 492], 'children': [{'type': 'FunctionCall', 'name': 'error_message', 'range': [472, 484], 'children': [{'type': 'Argument', 'name': 'category_line_num[category]', 'range': [475, 478], 'children': []}, {'type': 'Argument', 'name': "f'{category} category is not alphabetical order'", 'range': [481, 482], 'children': []}]}, {'type': 'MethodCall', 'name': 'err_msgs.append', 'range': [486, 491], 'children': [{'type': 'Argument', 'name': 'err_msg', 'range': [490, 490], 'children': []}]}]}]}, {'type': 'ReturnStatement', 'name': 'return err_msgs', 'range': [494, 495], 'children': []}]}
2025-01-08 09:27:56,799 - INFO - Starting Step 4: AST normalization
2025-01-08 09:27:57,223 - INFO - Step 3 result: {'type': 'Program', 'name': 'error_message', 'range': [201, 227], 'children': [{'type': 'FunctionDeclaration', 'name': 'error_message', 'range': [201, 227], 'children': [{'type': 'ParameterList', 'name': '', 'range': [203, 211], 'children': [{'type': 'Parameter', 'name': 'line_number', 'range': [204, 206], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [206, 206], 'children': []}]}, {'type': 'Parameter', 'name': 'message', 'range': [208, 210], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [210, 210], 'children': []}]}]}, {'type': 'ReturnType', 'name': 'str', 'range': [212, 214], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [214, 214], 'children': []}]}, {'type': 'Body', 'name': '', 'range': [216, 226], 'children': [{'type': 'Assignment', 'name': 'line', 'range': [217, 221], 'children': [{'type': 'Expression', 'name': 'line_number + 1', 'range': [219, 221], 'children': [{'type': 'BinaryExpression', 'name': '+', 'range': [220, 220], 'children': [{'type': 'Identifier', 'name': 'line_number', 'range': [219, 219], 'children': []}, {'type': 'Literal', 'name': '1', 'range': [221, 221], 'children': []}]}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [223, 225], 'children': [{'type': 'Expression', 'name': "f'(L{line:03d}) {message}'", 'range': [224, 225], 'children': [{'type': 'TemplateLiteral', 'name': '', 'range': [225, 225], 'children': []}]}]}]}]}]}
2025-01-08 09:27:57,223 - INFO - Starting Step 4: AST normalization
2025-01-08 09:28:00,396 - INFO - Step 3 result: {'type': 'Program', 'name': 'check_entry', 'range': [968, 1102], 'children': [{'type': 'FunctionDeclaration', 'name': 'check_entry', 'range': [968, 1102], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [970, 981], 'children': [{'type': 'Parameter', 'name': 'line_num', 'range': [971, 973], 'children': []}, {'type': 'Parameter', 'name': 'segments', 'range': [975, 980], 'children': []}]}, {'type': 'ReturnType', 'name': 'return_type', 'range': [982, 987], 'children': []}, {'type': 'Block', 'name': 'body', 'range': [989, 1102], 'children': [{'type': 'VariableDeclaration', 'name': 'raw_title', 'range': [991, 996], 'children': []}, {'type': 'VariableDeclaration', 'name': 'description', 'range': [998, 1003], 'children': []}, {'type': 'VariableDeclaration', 'name': 'auth', 'range': [1005, 1010], 'children': []}, {'type': 'VariableDeclaration', 'name': 'https', 'range': [1012, 1017], 'children': []}, {'type': 'VariableDeclaration', 'name': 'cors', 'range': [1019, 1024], 'children': []}, {'type': 'VariableDeclaration', 'name': 'title_err_msgs', 'range': [1027, 1034], 'children': []}, {'type': 'VariableDeclaration', 'name': 'desc_err_msgs', 'range': [1036, 1043], 'children': []}, {'type': 'VariableDeclaration', 'name': 'auth_err_msgs', 'range': [1045, 1052], 'children': []}, {'type': 'VariableDeclaration', 'name': 'https_err_msgs', 'range': [1054, 1061], 'children': []}, {'type': 'VariableDeclaration', 'name': 'cors_err_msgs', 'range': [1063, 1070], 'children': []}, {'type': 'VariableDeclaration', 'name': 'err_msgs', 'range': [1073, 1096], 'children': []}, {'type': 'ReturnStatement', 'name': 'return', 'range': [1099, 1100], 'children': []}]}]}]}
2025-01-08 09:28:00,397 - INFO - Starting Step 4: AST normalization
2025-01-08 09:28:03,265 - INFO - Step 3 result: {'type': 'Program', 'name': 'check_title', 'range': [498, 619], 'children': [{'type': 'FunctionDeclaration', 'name': 'check_title', 'range': [498, 619], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [500, 508], 'children': [{'type': 'Parameter', 'name': 'line_num', 'range': [501, 503], 'children': []}, {'type': 'Parameter', 'name': 'raw_title', 'range': [505, 507], 'children': []}]}, {'type': 'ReturnType', 'name': 'return_type', 'range': [509, 514], 'children': [{'type': 'Type', 'name': 'List', 'range': [511, 514], 'children': []}]}, {'type': 'Block', 'name': 'body', 'range': [516, 619], 'children': [{'type': 'VariableDeclaration', 'name': 'err_msgs', 'range': [518, 521], 'children': []}, {'type': 'Assignment', 'name': 'title_match', 'range': [524, 531], 'children': []}, {'type': 'IfStatement', 'name': 'if_not_title_match', 'range': [544, 564], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [545, 546], 'children': []}, {'type': 'Block', 'name': 'then', 'range': [548, 564], 'children': [{'type': 'Assignment', 'name': 'err_msg', 'range': [549, 556], 'children': []}, {'type': 'MethodCall', 'name': 'append', 'range': [558, 563], 'children': []}]}]}, {'type': 'ElseStatement', 'name': 'else', 'range': [565, 615], 'children': [{'type': 'Block', 'name': 'else_block', 'range': [567, 615], 'children': [{'type': 'Assignment', 'name': 'title', 'range': [578, 585], 'children': []}, {'type': 'IfStatement', 'name': 'if_title_ends_with_API', 'range': [587, 615], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [588, 597], 'children': []}, {'type': 'Block', 'name': 'then', 'range': [599, 615], 'children': [{'type': 'Assignment', 'name': 'err_msg', 'range': [600, 607], 'children': []}, {'type': 'MethodCall', 'name': 'append', 'range': [609, 614], 'children': []}]}]}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [617, 618], 'children': []}]}]}]}
2025-01-08 09:28:03,265 - INFO - Starting Step 4: AST normalization
2025-01-08 09:28:07,415 - INFO - Step 3 result: {'type': 'Program', 'name': 'check_auth', 'range': [750, 857], 'children': [{'type': 'FunctionDeclaration', 'name': 'check_auth', 'range': [750, 857], 'children': [{'type': 'ParameterList', 'range': [752, 760], 'children': [{'type': 'Parameter', 'name': 'line_num', 'range': [753, 755], 'children': []}, {'type': 'Parameter', 'name': 'auth', 'range': [757, 759], 'children': []}]}, {'type': 'ReturnType', 'range': [761, 766], 'children': [{'type': 'Type', 'name': 'List', 'range': [763, 766], 'children': []}]}, {'type': 'Block', 'range': [768, 857], 'children': [{'type': 'VariableDeclaration', 'name': 'err_msgs', 'range': [770, 773], 'children': []}, {'type': 'VariableDeclaration', 'name': 'backtick', 'range': [776, 778], 'children': []}, {'type': 'IfStatement', 'range': [780, 820], 'children': [{'type': 'Condition', 'range': [781, 802], 'children': [{'type': 'BinaryExpression', 'operator': '!=', 'range': [781, 784], 'children': []}, {'type': 'LogicalExpression', 'operator': 'and', 'range': [785, 802], 'children': [{'type': 'UnaryExpression', 'operator': 'not', 'range': [787, 793], 'children': []}, {'type': 'UnaryExpression', 'operator': 'not', 'range': [795, 801], 'children': []}]}]}, {'type': 'Block', 'range': [804, 820], 'children': [{'type': 'VariableDeclaration', 'name': 'err_msg', 'range': [805, 812], 'children': []}, {'type': 'ExpressionStatement', 'range': [814, 819], 'children': []}]}]}, {'type': 'IfStatement', 'range': [822, 852], 'children': [{'type': 'Condition', 'range': [823, 833], 'children': [{'type': 'CallExpression', 'range': [824, 830], 'children': []}, {'type': 'BinaryExpression', 'operator': 'not in', 'range': [831, 833], 'children': []}]}, {'type': 'Block', 'range': [835, 852], 'children': [{'type': 'VariableDeclaration', 'name': 'err_msg', 'range': [836, 844], 'children': []}, {'type': 'ExpressionStatement', 'range': [846, 851], 'children': []}]}]}, {'type': 'ReturnStatement', 'range': [854, 855], 'children': []}]}]}]}
2025-01-08 09:28:07,415 - INFO - Starting Step 4: AST normalization
2025-01-08 09:28:11,882 - INFO - Step 3 result: {'type': 'Program', 'name': 'main', 'range': [1516, 1593], 'children': [{'type': 'FunctionDeclaration', 'name': 'main', 'range': [1516, 1593], 'children': [{'type': 'Parameter', 'name': 'filename', 'range': [1519, 1521], 'children': []}, {'type': 'ReturnType', 'name': 'None', 'range': [1525, 1525], 'children': []}, {'type': 'Block', 'name': '', 'range': [1527, 1593], 'children': [{'type': 'WithStatement', 'name': '', 'range': [1529, 1560], 'children': [{'type': 'CallExpression', 'name': 'open', 'range': [1530, 1541], 'children': [{'type': 'Argument', 'name': 'filename', 'range': [1532, 1532], 'children': []}, {'type': 'Argument', 'name': 'mode', 'range': [1534, 1536], 'children': []}, {'type': 'Argument', 'name': 'encoding', 'range': [1538, 1540], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'lines', 'range': [1546, 1559], 'children': [{'type': 'CallExpression', 'name': 'list', 'range': [1548, 1559], 'children': [{'type': 'GeneratorExpression', 'name': '', 'range': [1550, 1558], 'children': [{'type': 'CallExpression', 'name': 'rstrip', 'range': [1552, 1554], 'children': []}, {'type': 'Identifier', 'name': 'line', 'range': [1556, 1556], 'children': []}, {'type': 'Identifier', 'name': 'file', 'range': [1558, 1558], 'children': []}]}]}]}]}, {'type': 'VariableDeclaration', 'name': 'file_format_err_msgs', 'range': [1562, 1567], 'children': [{'type': 'CallExpression', 'name': 'check_file_format', 'range': [1564, 1567], 'children': [{'type': 'Argument', 'name': 'lines', 'range': [1566, 1566], 'children': []}]}]}, {'type': 'IfStatement', 'name': '', 'range': [1570, 1591], 'children': [{'type': 'Condition', 'name': 'file_format_err_msgs', 'range': [1571, 1571], 'children': []}, {'type': 'Block', 'name': '', 'range': [1573, 1591], 'children': [{'type': 'ForStatement', 'name': '', 'range': [1574, 1584], 'children': [{'type': 'VariableDeclaration', 'name': 'err_msg', 'range': [1575, 1575], 'children': []}, {'type': 'Identifier', 'name': 'file_format_err_msgs', 'range': [1577, 1577], 'children': []}, {'type': 'Block', 'name': '', 'range': [1579, 1584], 'children': [{'type': 'CallExpression', 'name': 'print', 'range': [1580, 1583], 'children': [{'type': 'Argument', 'name': 'err_msg', 'range': [1582, 1582], 'children': []}]}]}]}, {'type': 'CallExpression', 'name': 'sys.exit', 'range': [1585, 1590], 'children': [{'type': 'Argument', 'name': '1', 'range': [1589, 1589], 'children': []}]}]}]}]}]}]}
2025-01-08 09:28:11,882 - INFO - Starting Step 4: AST normalization
2025-01-08 09:28:19,085 - INFO - Step 3 result: {'type': 'Program', 'name': 'check_https', 'range': [858, 912], 'children': [{'type': 'FunctionDeclaration', 'name': 'check_https', 'range': [858, 912], 'children': [{'type': 'Parameter', 'name': 'line_num', 'range': [861, 863], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [863, 863]}]}, {'type': 'Parameter', 'name': 'https', 'range': [865, 867], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [867, 867]}]}, {'type': 'ReturnType', 'name': 'List[str]', 'range': [871, 874]}, {'type': 'VariableDeclaration', 'name': 'err_msgs', 'range': [878, 881], 'children': [{'type': 'ArrayLiteral', 'range': [880, 881]}]}, {'type': 'IfStatement', 'range': [884, 907], 'children': [{'type': 'Condition', 'range': [885, 888], 'children': [{'type': 'BinaryExpression', 'operator': 'not in', 'range': [885, 888], 'children': [{'type': 'Identifier', 'name': 'https', 'range': [885, 885]}, {'type': 'Identifier', 'name': 'https_keys', 'range': [888, 888]}]}]}, {'type': 'Block', 'range': [889, 907], 'children': [{'type': 'VariableDeclaration', 'name': 'err_msg', 'range': [891, 899], 'children': [{'type': 'CallExpression', 'name': 'error_message', 'range': [893, 899], 'children': [{'type': 'Identifier', 'name': 'line_num', 'range': [895, 895]}, {'type': 'TemplateLiteral', 'range': [897, 898], 'children': [{'type': 'Identifier', 'name': 'https', 'range': [898, 898]}]}]}]}, {'type': 'ExpressionStatement', 'range': [901, 906], 'children': [{'type': 'CallExpression', 'name': 'append', 'range': [903, 906], 'children': [{'type': 'Identifier', 'name': 'err_msg', 'range': [905, 905]}]}]}]}]}, {'type': 'ReturnStatement', 'range': [909, 910], 'children': [{'type': 'Identifier', 'name': 'err_msgs', 'range': [910, 910]}]}]}]}
2025-01-08 09:28:19,086 - INFO - Starting Step 4: AST normalization
2025-01-08 09:28:22,274 - INFO - Step 4 result: {'type': 'Program', 'name': 'check_cors', 'range': [913, 967], 'children': [{'type': 'FunctionDecl', 'name': 'check_cors', 'range': [913, 967], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [915, 923], 'children': [{'type': 'Parameter', 'name': 'line_num', 'range': [916, 918], 'children': []}, {'type': 'Parameter', 'name': 'cors', 'range': [920, 922], 'children': []}]}, {'type': 'ReturnType', 'name': 'return_type', 'range': [924, 929], 'children': [{'type': 'Type', 'name': 'List[str]', 'range': [926, 929], 'children': []}]}, {'type': 'Block', 'name': 'body', 'range': [931, 967], 'children': [{'type': 'VariableDecl', 'name': 'err_msgs', 'range': [933, 936], 'children': []}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [939, 962], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [940, 943], 'children': []}, {'type': 'Block', 'name': 'then', 'range': [945, 962], 'children': [{'type': 'VariableDecl', 'name': 'err_msg', 'range': [946, 954], 'children': []}, {'type': 'ExpressionStatement', 'name': 'append_err_msg', 'range': [956, 961], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return_statement', 'range': [964, 965], 'children': []}]}]}]}
2025-01-08 09:28:22,274 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:28:23,198 - INFO - Step 4 result: {'type': 'Program', 'name': 'error_message', 'range': [201, 227], 'children': [{'type': 'FunctionDecl', 'name': 'error_message', 'range': [201, 227], 'children': [{'type': 'ParameterList', 'name': '', 'range': [203, 211], 'children': [{'type': 'Parameter', 'name': 'line_number', 'range': [204, 206], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [206, 206], 'children': []}]}, {'type': 'Parameter', 'name': 'message', 'range': [208, 210], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [210, 210], 'children': []}]}]}, {'type': 'ReturnType', 'name': 'str', 'range': [212, 214], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [214, 214], 'children': []}]}, {'type': 'Body', 'name': '', 'range': [216, 226], 'children': [{'type': 'Assignment', 'name': 'line', 'range': [217, 221], 'children': [{'type': 'BinaryExpression', 'name': '+', 'range': [219, 221], 'children': [{'type': 'Identifier', 'name': 'line_number', 'range': [219, 219], 'children': []}, {'type': 'Literal', 'name': '1', 'range': [221, 221], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [223, 225], 'children': [{'type': 'TemplateLiteral', 'name': "f'(L{line:03d}) {message}'", 'range': [224, 225], 'children': []}]}]}]}]}
2025-01-08 09:28:23,198 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:28:26,346 - INFO - Step 4 result: {'type': 'Program', 'name': 'check_alphabetical_order', 'range': [411, 496], 'children': [{'type': 'FunctionDecl', 'name': 'check_alphabetical_order', 'range': [411, 427], 'children': [{'type': 'Parameter', 'name': 'lines', 'range': [414, 419], 'children': [{'type': 'TypeAnnotation', 'name': 'List[str]', 'range': [416, 419], 'children': []}]}, {'type': 'ReturnType', 'name': 'List[str]', 'range': [423, 426], 'children': []}]}, {'type': 'VariableDecl', 'name': 'err_msgs', 'range': [430, 433], 'children': []}, {'type': 'Assignment', 'name': 'categories, category_line_num', 'range': [436, 445], 'children': [{'type': 'CallExpression', 'name': 'get_categories_content', 'range': [440, 445], 'children': [{'type': 'Argument', 'name': 'contents', 'range': [442, 444], 'children': []}]}]}, {'type': 'ForStatement', 'name': 'for category, api_list in categories.items', 'range': [448, 492], 'children': [{'type': 'IfStatement', 'name': 'if sorted(api_list) != api_list', 'range': [460, 492], 'children': [{'type': 'CallExpression', 'name': 'error_message', 'range': [472, 484], 'children': [{'type': 'Argument', 'name': 'category_line_num[category]', 'range': [475, 478], 'children': []}, {'type': 'Argument', 'name': "f'{category} category is not alphabetical order'", 'range': [481, 482], 'children': []}]}, {'type': 'CallExpression', 'name': 'err_msgs.append', 'range': [486, 491], 'children': [{'type': 'Argument', 'name': 'err_msg', 'range': [490, 490], 'children': []}]}]}]}, {'type': 'ReturnStatement', 'name': 'return err_msgs', 'range': [494, 495], 'children': []}]}
2025-01-08 09:28:26,346 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:28:26,897 - INFO - Step 4 result: {'type': 'Program', 'name': 'check_entry', 'range': [968, 1102], 'children': [{'type': 'FunctionDecl', 'name': 'check_entry', 'range': [968, 1102], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [970, 981], 'children': [{'type': 'Parameter', 'name': 'line_num', 'range': [971, 973], 'children': []}, {'type': 'Parameter', 'name': 'segments', 'range': [975, 980], 'children': []}]}, {'type': 'ReturnType', 'name': 'return_type', 'range': [982, 987], 'children': []}, {'type': 'Block', 'name': 'body', 'range': [989, 1102], 'children': [{'type': 'VariableDecl', 'name': 'raw_title', 'range': [991, 996], 'children': []}, {'type': 'VariableDecl', 'name': 'description', 'range': [998, 1003], 'children': []}, {'type': 'VariableDecl', 'name': 'auth', 'range': [1005, 1010], 'children': []}, {'type': 'VariableDecl', 'name': 'https', 'range': [1012, 1017], 'children': []}, {'type': 'VariableDecl', 'name': 'cors', 'range': [1019, 1024], 'children': []}, {'type': 'VariableDecl', 'name': 'title_err_msgs', 'range': [1027, 1034], 'children': []}, {'type': 'VariableDecl', 'name': 'desc_err_msgs', 'range': [1036, 1043], 'children': []}, {'type': 'VariableDecl', 'name': 'auth_err_msgs', 'range': [1045, 1052], 'children': []}, {'type': 'VariableDecl', 'name': 'https_err_msgs', 'range': [1054, 1061], 'children': []}, {'type': 'VariableDecl', 'name': 'cors_err_msgs', 'range': [1063, 1070], 'children': []}, {'type': 'VariableDecl', 'name': 'err_msgs', 'range': [1073, 1096], 'children': []}, {'type': 'ReturnStatement', 'name': 'return', 'range': [1099, 1100], 'children': []}]}]}]}
2025-01-08 09:28:26,897 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:28:32,013 - INFO - Step 3 result: {'type': 'Program', 'name': 'get_categories_content', 'range': [228, 410], 'children': [{'type': 'FunctionDeclaration', 'name': 'get_categories_content', 'range': [228, 408], 'children': [{'type': 'Parameter', 'name': 'contents', 'range': [231, 236], 'children': []}, {'type': 'ReturnType', 'name': 'Tuple[Categories, CategoriesLineNumber]', 'range': [240, 245], 'children': []}, {'type': 'Block', 'name': '', 'range': [247, 408], 'children': [{'type': 'VariableDeclaration', 'name': 'categories', 'range': [249, 252], 'children': []}, {'type': 'VariableDeclaration', 'name': 'category_line_num', 'range': [254, 257], 'children': []}, {'type': 'ForLoop', 'name': '', 'range': [260, 333], 'children': [{'type': 'VariableDeclaration', 'name': 'line_num', 'range': [261, 261], 'children': []}, {'type': 'VariableDeclaration', 'name': 'line_content', 'range': [263, 263], 'children': []}, {'type': 'FunctionCall', 'name': 'enumerate', 'range': [265, 268], 'children': [{'type': 'Argument', 'name': 'contents', 'range': [267, 267], 'children': []}]}, {'type': 'IfStatement', 'name': '', 'range': [272, 313], 'children': [{'type': 'Condition', 'name': 'line_content.startswith(anchor)', 'range': [273, 278], 'children': []}, {'type': 'Block', 'name': '', 'range': [280, 313], 'children': [{'type': 'VariableDeclaration', 'name': 'category', 'range': [281, 295], 'children': []}, {'type': 'Assignment', 'name': 'categories[category] = []', 'range': [297, 304], 'children': []}, {'type': 'Assignment', 'name': 'category_line_num[category] = line_num', 'range': [305, 311], 'children': []}, {'type': 'ContinueStatement', 'name': '', 'range': [312, 312], 'children': []}]}]}, {'type': 'IfStatement', 'name': '', 'range': [315, 332], 'children': [{'type': 'Condition', 'name': "not line_content.startswith('|') or line_content.startswith('|---')", 'range': [316, 329], 'children': []}, {'type': 'Block', 'name': '', 'range': [331, 332], 'children': [{'type': 'ContinueStatement', 'name': '', 'range': [332, 332], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'raw_title', 'range': [335, 363], 'children': []}, {'type': 'FunctionCall', 'name': 'link_re.match', 'range': [366, 373], 'children': [{'type': 'Argument', 'name': 'raw_title', 'range': [372, 372], 'children': []}]}, {'type': 'IfStatement', 'name': '', 'range': [375, 401], 'children': [{'type': 'Condition', 'name': 'title_match', 'range': [376, 376], 'children': []}, {'type': 'Block', 'name': '', 'range': [378, 401], 'children': [{'type': 'VariableDeclaration', 'name': 'title', 'range': [379, 390], 'children': []}, {'type': 'FunctionCall', 'name': 'categories[category].append', 'range': [392, 400], 'children': [{'type': 'Argument', 'name': 'title', 'range': [399, 399], 'children': []}]}]}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [403, 408], 'children': [{'type': 'ReturnValue', 'name': '(categories, category_line_num)', 'range': [404, 407], 'children': []}]}]}]}]}
2025-01-08 09:28:32,013 - INFO - Starting Step 4: AST normalization
2025-01-08 09:28:34,766 - INFO - Step 4 result: {'type': 'Program', 'name': 'check_title', 'range': [498, 619], 'children': [{'type': 'FunctionDecl', 'name': 'check_title', 'range': [498, 619], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [500, 508], 'children': [{'type': 'Parameter', 'name': 'line_num', 'range': [501, 503], 'children': []}, {'type': 'Parameter', 'name': 'raw_title', 'range': [505, 507], 'children': []}]}, {'type': 'ReturnType', 'name': 'return_type', 'range': [509, 514], 'children': [{'type': 'Type', 'name': 'List', 'range': [511, 514], 'children': []}]}, {'type': 'Block', 'name': 'body', 'range': [516, 619], 'children': [{'type': 'VariableDecl', 'name': 'err_msgs', 'range': [518, 521], 'children': []}, {'type': 'Assignment', 'name': 'title_match', 'range': [524, 531], 'children': []}, {'type': 'IfStatement', 'name': 'if_not_title_match', 'range': [544, 564], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [545, 546], 'children': []}, {'type': 'Block', 'name': 'then', 'range': [548, 564], 'children': [{'type': 'Assignment', 'name': 'err_msg', 'range': [549, 556], 'children': []}, {'type': 'CallExpression', 'name': 'append', 'range': [558, 563], 'children': []}]}]}, {'type': 'ElseStatement', 'name': 'else', 'range': [565, 615], 'children': [{'type': 'Block', 'name': 'else_block', 'range': [567, 615], 'children': [{'type': 'Assignment', 'name': 'title', 'range': [578, 585], 'children': []}, {'type': 'IfStatement', 'name': 'if_title_ends_with_API', 'range': [587, 615], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [588, 597], 'children': []}, {'type': 'Block', 'name': 'then', 'range': [599, 615], 'children': [{'type': 'Assignment', 'name': 'err_msg', 'range': [600, 607], 'children': []}, {'type': 'CallExpression', 'name': 'append', 'range': [609, 614], 'children': []}]}]}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [617, 618], 'children': []}]}]}]}
2025-01-08 09:28:34,767 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:28:36,003 - INFO - Step 3 result: {'type': 'Program', 'name': 'check_description', 'range': [622, 748], 'children': [{'type': 'FunctionDeclaration', 'name': 'check_description', 'range': [622, 748], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [624, 632], 'children': [{'type': 'Parameter', 'name': 'line_num', 'range': [625, 627], 'children': []}, {'type': 'Parameter', 'name': 'description', 'range': [629, 631], 'children': []}]}, {'type': 'ReturnType', 'name': 'return_type', 'range': [633, 638], 'children': [{'type': 'Type', 'name': 'List', 'range': [635, 638], 'children': []}]}, {'type': 'Block', 'name': 'body', 'range': [640, 748], 'children': [{'type': 'VariableDeclaration', 'name': 'err_msgs', 'range': [642, 645], 'children': []}, {'type': 'Assignment', 'name': 'first_char', 'range': [648, 653], 'children': []}, {'type': 'IfStatement', 'name': 'if_first_char_not_capitalized', 'range': [655, 681], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [656, 663], 'children': []}, {'type': 'Block', 'name': 'then', 'range': [665, 681], 'children': [{'type': 'Assignment', 'name': 'err_msg', 'range': [666, 673], 'children': []}, {'type': 'MethodCall', 'name': 'append', 'range': [675, 680], 'children': []}]}]}, {'type': 'Assignment', 'name': 'last_char', 'range': [683, 689], 'children': []}, {'type': 'IfStatement', 'name': 'if_last_char_in_punctuation', 'range': [691, 712], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [692, 694], 'children': []}, {'type': 'Block', 'name': 'then', 'range': [696, 712], 'children': [{'type': 'Assignment', 'name': 'err_msg', 'range': [697, 705], 'children': []}, {'type': 'MethodCall', 'name': 'append', 'range': [707, 711], 'children': []}]}]}, {'type': 'Assignment', 'name': 'desc_length', 'range': [715, 720], 'children': []}, {'type': 'IfStatement', 'name': 'if_desc_length_exceeds_max', 'range': [722, 743], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [723, 725], 'children': []}, {'type': 'Block', 'name': 'then', 'range': [727, 743], 'children': [{'type': 'Assignment', 'name': 'err_msg', 'range': [728, 736], 'children': []}, {'type': 'MethodCall', 'name': 'append', 'range': [738, 742], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [746, 747], 'children': []}]}]}]}
2025-01-08 09:28:36,003 - INFO - Starting Step 4: AST normalization
2025-01-08 09:28:38,761 - INFO - Step 3 result: {'nodes': [{'type': 'IfStatement', 'name': '', 'range': [1594, 1600], 'children': [{'type': 'Condition', 'name': '', 'range': [1594, 1599], 'children': [{'type': 'Identifier', 'name': '__name__', 'range': [1595, 1595], 'children': []}, {'type': 'Operator', 'name': '==', 'range': [1596, 1597], 'children': []}, {'type': 'StringLiteral', 'name': "'__main__'", 'range': [1598, 1598], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'num_args', 'range': [1602, 1610], 'children': [{'type': 'Assignment', 'name': '', 'range': [1602, 1609], 'children': [{'type': 'Identifier', 'name': 'num_args', 'range': [1602, 1602], 'children': []}, {'type': 'Operator', 'name': '=', 'range': [1603, 1603], 'children': []}, {'type': 'FunctionCall', 'name': 'len', 'range': [1604, 1609], 'children': [{'type': 'Identifier', 'name': 'sys.argv', 'range': [1606, 1608], 'children': []}]}]}]}, {'type': 'IfStatement', 'name': '', 'range': [1612, 1629], 'children': [{'type': 'Condition', 'name': '', 'range': [1612, 1616], 'children': [{'type': 'Identifier', 'name': 'num_args', 'range': [1613, 1613], 'children': []}, {'type': 'Operator', 'name': '<', 'range': [1614, 1614], 'children': []}, {'type': 'NumericLiteral', 'name': '2', 'range': [1615, 1615], 'children': []}]}, {'type': 'Block', 'name': '', 'range': [1617, 1629], 'children': [{'type': 'FunctionCall', 'name': 'print', 'range': [1618, 1622], 'children': [{'type': 'StringLiteral', 'name': "'No .md file passed (file should contain Markdown table syntax)'", 'range': [1620, 1620], 'children': []}]}, {'type': 'FunctionCall', 'name': 'sys.exit', 'range': [1623, 1629], 'children': [{'type': 'NumericLiteral', 'name': '1', 'range': [1627, 1627], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'filename', 'range': [1631, 1639], 'children': [{'type': 'Assignment', 'name': '', 'range': [1631, 1638], 'children': [{'type': 'Identifier', 'name': 'filename', 'range': [1631, 1631], 'children': []}, {'type': 'Operator', 'name': '=', 'range': [1632, 1632], 'children': []}, {'type': 'ArrayAccess', 'name': 'sys.argv[1]', 'range': [1633, 1638], 'children': [{'type': 'Identifier', 'name': 'sys.argv', 'range': [1633, 1635], 'children': []}, {'type': 'NumericLiteral', 'name': '1', 'range': [1637, 1637], 'children': []}]}]}]}, {'type': 'FunctionCall', 'name': 'main', 'range': [1641, 1645], 'children': [{'type': 'Identifier', 'name': 'filename', 'range': [1643, 1643], 'children': []}]}]}
2025-01-08 09:28:38,761 - INFO - Starting Step 4: AST normalization
2025-01-08 09:28:44,311 - INFO - Step 4 result: {'type': 'Program', 'name': 'check_auth', 'range': [750, 857], 'children': [{'type': 'FunctionDecl', 'name': 'check_auth', 'range': [750, 857], 'children': [{'type': 'ParameterList', 'range': [752, 760], 'children': [{'type': 'Parameter', 'name': 'line_num', 'range': [753, 755], 'children': []}, {'type': 'Parameter', 'name': 'auth', 'range': [757, 759], 'children': []}]}, {'type': 'ReturnType', 'range': [761, 766], 'children': [{'type': 'Type', 'name': 'List', 'range': [763, 766], 'children': []}]}, {'type': 'Block', 'range': [768, 857], 'children': [{'type': 'VariableDecl', 'name': 'err_msgs', 'range': [770, 773], 'children': []}, {'type': 'VariableDecl', 'name': 'backtick', 'range': [776, 778], 'children': []}, {'type': 'IfStatement', 'range': [780, 820], 'children': [{'type': 'Condition', 'range': [781, 802], 'children': [{'type': 'BinaryExpression', 'operator': '!=', 'range': [781, 784], 'children': []}, {'type': 'LogicalExpression', 'operator': 'and', 'range': [785, 802], 'children': [{'type': 'UnaryExpression', 'operator': 'not', 'range': [787, 793], 'children': []}, {'type': 'UnaryExpression', 'operator': 'not', 'range': [795, 801], 'children': []}]}]}, {'type': 'Block', 'range': [804, 820], 'children': [{'type': 'VariableDecl', 'name': 'err_msg', 'range': [805, 812], 'children': []}, {'type': 'ExpressionStatement', 'range': [814, 819], 'children': []}]}]}, {'type': 'IfStatement', 'range': [822, 852], 'children': [{'type': 'Condition', 'range': [823, 833], 'children': [{'type': 'CallExpression', 'range': [824, 830], 'children': []}, {'type': 'BinaryExpression', 'operator': 'not in', 'range': [831, 833], 'children': []}]}, {'type': 'Block', 'range': [835, 852], 'children': [{'type': 'VariableDecl', 'name': 'err_msg', 'range': [836, 844], 'children': []}, {'type': 'ExpressionStatement', 'range': [846, 851], 'children': []}]}]}, {'type': 'ReturnStatement', 'range': [854, 855], 'children': []}]}]}]}
2025-01-08 09:28:44,312 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:28:51,807 - INFO - Step 4 result: {'type': 'Program', 'name': 'main', 'range': [1516, 1593], 'children': [{'type': 'FunctionDecl', 'name': 'main', 'range': [1516, 1593], 'children': [{'type': 'Parameter', 'name': 'filename', 'range': [1519, 1521], 'children': []}, {'type': 'ReturnType', 'name': 'None', 'range': [1525, 1525], 'children': []}, {'type': 'Block', 'name': '', 'range': [1527, 1593], 'children': [{'type': 'WithStatement', 'name': '', 'range': [1529, 1560], 'children': [{'type': 'CallExpression', 'name': 'open', 'range': [1530, 1541], 'children': [{'type': 'Argument', 'name': 'filename', 'range': [1532, 1532], 'children': []}, {'type': 'Argument', 'name': 'mode', 'range': [1534, 1536], 'children': []}, {'type': 'Argument', 'name': 'encoding', 'range': [1538, 1540], 'children': []}]}, {'type': 'VariableDecl', 'name': 'lines', 'range': [1546, 1559], 'children': [{'type': 'CallExpression', 'name': 'list', 'range': [1548, 1559], 'children': [{'type': 'GeneratorExpression', 'name': '', 'range': [1550, 1558], 'children': [{'type': 'CallExpression', 'name': 'rstrip', 'range': [1552, 1554], 'children': []}, {'type': 'Identifier', 'name': 'line', 'range': [1556, 1556], 'children': []}, {'type': 'Identifier', 'name': 'file', 'range': [1558, 1558], 'children': []}]}]}]}]}, {'type': 'VariableDecl', 'name': 'file_format_err_msgs', 'range': [1562, 1567], 'children': [{'type': 'CallExpression', 'name': 'check_file_format', 'range': [1564, 1567], 'children': [{'type': 'Argument', 'name': 'lines', 'range': [1566, 1566], 'children': []}]}]}, {'type': 'IfStatement', 'name': '', 'range': [1570, 1591], 'children': [{'type': 'Condition', 'name': 'file_format_err_msgs', 'range': [1571, 1571], 'children': []}, {'type': 'Block', 'name': '', 'range': [1573, 1591], 'children': [{'type': 'ForStatement', 'name': '', 'range': [1574, 1584], 'children': [{'type': 'VariableDecl', 'name': 'err_msg', 'range': [1575, 1575], 'children': []}, {'type': 'Identifier', 'name': 'file_format_err_msgs', 'range': [1577, 1577], 'children': []}, {'type': 'Block', 'name': '', 'range': [1579, 1584], 'children': [{'type': 'CallExpression', 'name': 'print', 'range': [1580, 1583], 'children': [{'type': 'Argument', 'name': 'err_msg', 'range': [1582, 1582], 'children': []}]}]}]}, {'type': 'CallExpression', 'name': 'sys.exit', 'range': [1585, 1590], 'children': [{'type': 'Argument', 'name': '1', 'range': [1589, 1589], 'children': []}]}]}]}]}]}]}
2025-01-08 09:28:51,807 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:28:53,176 - INFO - Step 5 result: {'type': 'Program', 'name': 'check_cors', 'range': [913, 967], 'children': [{'type': 'FunctionDecl', 'name': 'check_cors', 'range': [913, 967], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [915, 923], 'children': [{'type': 'Parameter', 'name': 'line_num', 'range': [916, 918], 'children': []}, {'type': 'Parameter', 'name': 'cors', 'range': [920, 922], 'children': []}]}, {'type': 'ReturnType', 'name': 'return_type', 'range': [924, 929], 'children': [{'type': 'Type', 'name': 'List[str]', 'range': [926, 929], 'children': []}]}, {'type': 'Block', 'name': 'body', 'range': [931, 967], 'children': [{'type': 'VariableDecl', 'name': 'err_msgs', 'range': [933, 936], 'children': []}, {'type': 'IfStatement', 'name': 'if_statement', 'range': [939, 962], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [940, 943], 'children': []}, {'type': 'Block', 'name': 'then', 'range': [945, 962], 'children': [{'type': 'VariableDecl', 'name': 'err_msg', 'range': [946, 954], 'children': []}, {'type': 'ExpressionStatement', 'name': 'append_err_msg', 'range': [956, 961], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return_statement', 'range': [964, 965], 'children': []}]}]}]}
2025-01-08 09:28:53,177 - INFO - Completed main AST analysis flow
2025-01-08 09:28:53,177 - INFO - Successfully processed chunk
2025-01-08 09:28:53,456 - INFO - Step 5 result: {'type': 'Program', 'name': 'error_message', 'range': [201, 227], 'children': [{'type': 'FunctionDecl', 'name': 'error_message', 'range': [201, 227], 'children': [{'type': 'ParameterList', 'name': '', 'range': [203, 211], 'children': [{'type': 'Parameter', 'name': 'line_number', 'range': [204, 206], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [206, 206], 'children': []}]}, {'type': 'Parameter', 'name': 'message', 'range': [208, 210], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [210, 210], 'children': []}]}]}, {'type': 'ReturnType', 'name': 'str', 'range': [212, 214], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [214, 214], 'children': []}]}, {'type': 'Body', 'name': '', 'range': [216, 226], 'children': [{'type': 'Assignment', 'name': 'line', 'range': [217, 221], 'children': [{'type': 'BinaryExpression', 'name': '+', 'range': [219, 221], 'children': [{'type': 'Identifier', 'name': 'line_number', 'range': [219, 219], 'children': []}, {'type': 'Literal', 'name': '1', 'range': [221, 221], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [223, 225], 'children': [{'type': 'TemplateLiteral', 'name': "f'(L{line:03d}) {message}'", 'range': [224, 225], 'children': []}]}]}]}]}
2025-01-08 09:28:53,456 - INFO - Completed main AST analysis flow
2025-01-08 09:28:53,456 - INFO - Successfully processed chunk
2025-01-08 09:29:00,604 - INFO - Step 5 result: {'type': 'Program', 'name': 'check_alphabetical_order', 'range': [411, 496], 'children': [{'type': 'FunctionDecl', 'name': 'check_alphabetical_order', 'range': [411, 427], 'children': [{'type': 'Parameter', 'name': 'lines', 'range': [414, 419], 'children': [{'type': 'TypeAnnotation', 'name': 'List[str]', 'range': [416, 419], 'children': []}]}, {'type': 'ReturnType', 'name': 'List[str]', 'range': [423, 426], 'children': []}]}, {'type': 'VariableDecl', 'name': 'err_msgs', 'range': [430, 433], 'children': []}, {'type': 'Assignment', 'name': 'categories, category_line_num', 'range': [436, 445], 'children': [{'type': 'CallExpression', 'name': 'get_categories_content', 'range': [440, 445], 'children': [{'type': 'Argument', 'name': 'contents', 'range': [442, 444], 'children': []}]}]}, {'type': 'ForStatement', 'name': 'for category, api_list in categories.items', 'range': [448, 492], 'children': [{'type': 'IfStatement', 'name': 'if sorted(api_list) != api_list', 'range': [460, 492], 'children': [{'type': 'CallExpression', 'name': 'error_message', 'range': [472, 484], 'children': [{'type': 'Argument', 'name': 'category_line_num[category]', 'range': [475, 478], 'children': []}, {'type': 'Argument', 'name': "f'{category} category is not alphabetical order'", 'range': [481, 482], 'children': []}]}, {'type': 'CallExpression', 'name': 'err_msgs.append', 'range': [486, 491], 'children': [{'type': 'Argument', 'name': 'err_msg', 'range': [490, 490], 'children': []}]}]}]}, {'type': 'ReturnStatement', 'name': 'return err_msgs', 'range': [494, 495], 'children': []}]}
2025-01-08 09:29:00,604 - INFO - Completed main AST analysis flow
2025-01-08 09:29:00,605 - INFO - Successfully processed chunk
2025-01-08 09:29:00,768 - INFO - Step 5 result: {'type': 'Program', 'name': 'check_entry', 'range': [968, 1102], 'children': [{'type': 'FunctionDecl', 'name': 'check_entry', 'range': [968, 1102], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [970, 981], 'children': [{'type': 'Parameter', 'name': 'line_num', 'range': [971, 973], 'children': []}, {'type': 'Parameter', 'name': 'segments', 'range': [975, 980], 'children': []}]}, {'type': 'ReturnType', 'name': 'return_type', 'range': [982, 987], 'children': []}, {'type': 'Block', 'name': 'body', 'range': [989, 1102], 'children': [{'type': 'VariableDecl', 'name': 'raw_title', 'range': [991, 996], 'children': []}, {'type': 'VariableDecl', 'name': 'description', 'range': [998, 1003], 'children': []}, {'type': 'VariableDecl', 'name': 'auth', 'range': [1005, 1010], 'children': []}, {'type': 'VariableDecl', 'name': 'https', 'range': [1012, 1017], 'children': []}, {'type': 'VariableDecl', 'name': 'cors', 'range': [1019, 1024], 'children': []}, {'type': 'VariableDecl', 'name': 'title_err_msgs', 'range': [1027, 1034], 'children': []}, {'type': 'VariableDecl', 'name': 'desc_err_msgs', 'range': [1036, 1043], 'children': []}, {'type': 'VariableDecl', 'name': 'auth_err_msgs', 'range': [1045, 1052], 'children': []}, {'type': 'VariableDecl', 'name': 'https_err_msgs', 'range': [1054, 1061], 'children': []}, {'type': 'VariableDecl', 'name': 'cors_err_msgs', 'range': [1063, 1070], 'children': []}, {'type': 'VariableDecl', 'name': 'err_msgs', 'range': [1073, 1096], 'children': []}, {'type': 'ReturnStatement', 'name': 'return', 'range': [1099, 1100], 'children': []}]}]}]}
2025-01-08 09:29:00,768 - INFO - Completed main AST analysis flow
2025-01-08 09:29:00,769 - INFO - Successfully processed chunk
2025-01-08 09:29:01,683 - INFO - Step 2 result: {'type': 'Program', 'name': 'check_file_format', 'range': [1103, 1515], 'children': [{'type': 'FunctionDeclaration', 'name': 'check_file_format', 'range': [1103, 1515], 'children': [{'type': 'ParameterList', 'name': 'lines', 'range': [1105, 1112], 'children': [{'type': 'Parameter', 'name': 'lines', 'range': [1106, 1111], 'children': [{'type': 'TypeAnnotation', 'name': 'List[str]', 'range': [1107, 1111], 'children': []}]}]}, {'type': 'ReturnType', 'name': 'List[str]', 'range': [1113, 1118], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [1119, 1515], 'children': [{'type': 'VariableDeclaration', 'name': 'err_msgs', 'range': [1122, 1125], 'children': []}, {'type': 'VariableDeclaration', 'name': 'category_title_in_index', 'range': [1127, 1130], 'children': []}, {'type': 'VariableDeclaration', 'name': 'alphabetical_err_msgs', 'range': [1133, 1138], 'children': [{'type': 'CallExpression', 'name': 'check_alphabetical_order', 'range': [1135, 1138], 'children': [{'type': 'ArgumentList', 'name': 'lines', 'range': [1136, 1138], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'err_msgs.extend(alphabetical_err_msgs)', 'range': [1140, 1145], 'children': [{'type': 'CallExpression', 'name': 'extend', 'range': [1141, 1145], 'children': [{'type': 'ArgumentList', 'name': 'alphabetical_err_msgs', 'range': [1143, 1145], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'num_in_category', 'range': [1148, 1153], 'children': [{'type': 'BinaryExpression', 'name': 'min_entries_per_category + 1', 'range': [1150, 1152], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'category', 'range': [1154, 1157], 'children': []}, {'type': 'VariableDeclaration', 'name': 'category_line', 'range': [1158, 1161], 'children': []}, {'type': 'ForStatement', 'name': 'for line_num, line_content in enumerate(lines):', 'range': [1163, 1511], 'children': [{'type': 'VariableDeclaration', 'name': 'line_num, line_content', 'range': [1164, 1171], 'children': []}, {'type': 'CallExpression', 'name': 'enumerate', 'range': [1168, 1171], 'children': [{'type': 'ArgumentList', 'name': 'lines', 'range': [1169, 1171], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [1172, 1511], 'children': [{'type': 'VariableDeclaration', 'name': 'category_title_match', 'range': [1175, 1183], 'children': [{'type': 'CallExpression', 'name': 'match', 'range': [1177, 1183], 'children': [{'type': 'ArgumentList', 'name': 'line_content', 'range': [1180, 1182], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if category_title_match:', 'range': [1184, 1199], 'children': [{'type': 'ExpressionStatement', 'name': 'category_title_in_index.append(category_title_match.group(1))', 'range': [1188, 1198], 'children': [{'type': 'CallExpression', 'name': 'append', 'range': [1189, 1198], 'children': [{'type': 'ArgumentList', 'name': 'category_title_match.group(1)', 'range': [1191, 1197], 'children': []}]}]}]}, {'type': 'IfStatement', 'name': 'if line_content.startswith(anchor):', 'range': [1212, 1281], 'children': [{'type': 'VariableDeclaration', 'name': 'category_match', 'range': [1221, 1229], 'children': [{'type': 'CallExpression', 'name': 'match', 'range': [1223, 1229], 'children': [{'type': 'ArgumentList', 'name': 'line_content', 'range': [1226, 1228], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if category_match:', 'range': [1230, 1281], 'children': [{'type': 'IfStatement', 'name': 'if category_match.group(1) not in category_title_in_index:', 'range': [1234, 1262], 'children': [{'type': 'VariableDeclaration', 'name': 'err_msg', 'range': [1246, 1255], 'children': [{'type': 'CallExpression', 'name': 'error_message', 'range': [1248, 1255], 'children': [{'type': 'ArgumentList', 'name': "line_num, f'category header ({category_match.group(1)}) not added to Index section'", 'range': [1249, 1254], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'err_msgs.append(err_msg)', 'range': [1256, 1261], 'children': [{'type': 'CallExpression', 'name': 'append', 'range': [1257, 1261], 'children': [{'type': 'ArgumentList', 'name': 'err_msg', 'range': [1259, 1261], 'children': []}]}]}]}, {'type': 'ElseStatement', 'name': 'else:', 'range': [1263, 1281], 'children': [{'type': 'VariableDeclaration', 'name': 'err_msg', 'range': [1266, 1274], 'children': [{'type': 'CallExpression', 'name': 'error_message', 'range': [1268, 1274], 'children': [{'type': 'ArgumentList', 'name': "line_num, 'category header is not formatted correctly'", 'range': [1269, 1273], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'err_msgs.append(err_msg)', 'range': [1275, 1280], 'children': [{'type': 'CallExpression', 'name': 'append', 'range': [1276, 1280], 'children': [{'type': 'ArgumentList', 'name': 'err_msg', 'range': [1278, 1280], 'children': []}]}]}]}]}]}, {'type': 'IfStatement', 'name': 'if num_in_category < min_entries_per_category:', 'range': [1283, 1305], 'children': [{'type': 'VariableDeclaration', 'name': 'err_msg', 'range': [1289, 1298], 'children': [{'type': 'CallExpression', 'name': 'error_message', 'range': [1291, 1298], 'children': [{'type': 'ArgumentList', 'name': "category_line, f'{category} category does not have the minimum {min_entries_per_category} entries (only has {num_in_category})'", 'range': [1292, 1297], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'err_msgs.append(err_msg)', 'range': [1299, 1304], 'children': [{'type': 'CallExpression', 'name': 'append', 'range': [1300, 1304], 'children': [{'type': 'ArgumentList', 'name': 'err_msg', 'range': [1302, 1304], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': "category = line_content.split(' ')[1]", 'range': [1307, 1318], 'children': [{'type': 'CallExpression', 'name': 'split', 'range': [1311, 1317], 'children': [{'type': 'ArgumentList', 'name': "' '", 'range': [1312, 1314], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'category_line = line_num', 'range': [1319, 1322], 'children': []}, {'type': 'ExpressionStatement', 'name': 'num_in_category = 0', 'range': [1323, 1326], 'children': []}, {'type': 'ContinueStatement', 'name': 'continue', 'range': [1327, 1328], 'children': []}, {'type': 'IfStatement', 'name': "if not line_content.startswith('|') or line_content.startswith('|---'):", 'range': [1340, 1358], 'children': [{'type': 'ContinueStatement', 'name': 'continue', 'range': [1357, 1358], 'children': []}]}, {'type': 'ExpressionStatement', 'name': 'num_in_category += 1', 'range': [1360, 1364], 'children': []}, {'type': 'VariableDeclaration', 'name': 'segments', 'range': [1365, 1378], 'children': [{'type': 'CallExpression', 'name': 'split', 'range': [1369, 1377], 'children': [{'type': 'ArgumentList', 'name': "'|'", 'range': [1370, 1372], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if len(segments) < num_segments:', 'range': [1380, 1407], 'children': [{'type': 'VariableDeclaration', 'name': 'err_msg', 'range': [1389, 1398], 'children': [{'type': 'CallExpression', 'name': 'error_message', 'range': [1391, 1398], 'children': [{'type': 'ArgumentList', 'name': "line_num, f'entry does not have all the required columns (have {len(segments)}, need {num_segments})'", 'range': [1392, 1397], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'err_msgs.append(err_msg)', 'range': [1399, 1404], 'children': [{'type': 'CallExpression', 'name': 'append', 'range': [1400, 1404], 'children': [{'type': 'ArgumentList', 'name': 'err_msg', 'range': [1402, 1404], 'children': []}]}]}, {'type': 'ContinueStatement', 'name': 'continue', 'range': [1405, 1407], 'children': []}]}, {'type': 'ForStatement', 'name': 'for segment in segments:', 'range': [1409, 1480], 'children': [{'type': 'VariableDeclaration', 'name': 'segment', 'range': [1410, 1413], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [1414, 1480], 'children': [{'type': 'IfStatement', 'name': 'if len(segment) - len(segment.lstrip()) != 1 or len(segment) - len(segment.rstrip()) != 1:', 'range': [1428, 1479], 'children': [{'type': 'VariableDeclaration', 'name': 'err_msg', 'range': [1464, 1471], 'children': [{'type': 'CallExpression', 'name': 'error_message', 'range': [1466, 1471], 'children': [{'type': 'ArgumentList', 'name': "line_num, 'each segment must start and end with exactly 1 space'", 'range': [1467, 1470], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'err_msgs.append(err_msg)', 'range': [1472, 1478], 'children': [{'type': 'CallExpression', 'name': 'append', 'range': [1473, 1478], 'children': [{'type': 'ArgumentList', 'name': 'err_msg', 'range': [1475, 1477], 'children': []}]}]}]}]}]}, {'type': 'ExpressionStatement', 'name': 'segments = [segment.strip() for segment in segments]', 'range': [1481, 1494], 'children': [{'type': 'ListComprehension', 'name': 'segment.strip() for segment in segments', 'range': [1484, 1493], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'entry_err_msgs', 'range': [1495, 1503], 'children': [{'type': 'CallExpression', 'name': 'check_entry', 'range': [1497, 1503], 'children': [{'type': 'ArgumentList', 'name': 'line_num, segments', 'range': [1498, 1502], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'err_msgs.extend(entry_err_msgs)', 'range': [1504, 1509], 'children': [{'type': 'CallExpression', 'name': 'extend', 'range': [1505, 1509], 'children': [{'type': 'ArgumentList', 'name': 'entry_err_msgs', 'range': [1507, 1509], 'children': []}]}]}]}]}, {'type': 'ReturnStatement', 'name': 'return err_msgs', 'range': [1512, 1514], 'children': []}]}]}]}
2025-01-08 09:29:01,683 - INFO - Starting Step 3: AST simplification
2025-01-08 09:29:02,841 - INFO - Step 4 result: {'type': 'Program', 'name': 'check_https', 'range': [858, 912], 'children': [{'type': 'FunctionDecl', 'name': 'check_https', 'range': [858, 912], 'children': [{'type': 'Parameter', 'name': 'line_num', 'range': [861, 863], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [863, 863]}]}, {'type': 'Parameter', 'name': 'https', 'range': [865, 867], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [867, 867]}]}, {'type': 'ReturnType', 'name': 'List[str]', 'range': [871, 874]}, {'type': 'VariableDecl', 'name': 'err_msgs', 'range': [878, 881], 'children': [{'type': 'ArrayLiteral', 'range': [880, 881]}]}, {'type': 'IfStatement', 'range': [884, 907], 'children': [{'type': 'Condition', 'range': [885, 888], 'children': [{'type': 'BinaryExpression', 'operator': 'not in', 'range': [885, 888], 'children': [{'type': 'Identifier', 'name': 'https', 'range': [885, 885]}, {'type': 'Identifier', 'name': 'https_keys', 'range': [888, 888]}]}]}, {'type': 'Block', 'range': [889, 907], 'children': [{'type': 'VariableDecl', 'name': 'err_msg', 'range': [891, 899], 'children': [{'type': 'CallExpression', 'name': 'error_message', 'range': [893, 899], 'children': [{'type': 'Identifier', 'name': 'line_num', 'range': [895, 895]}, {'type': 'TemplateLiteral', 'range': [897, 898], 'children': [{'type': 'Identifier', 'name': 'https', 'range': [898, 898]}]}]}]}, {'type': 'ExpressionStatement', 'range': [901, 906], 'children': [{'type': 'CallExpression', 'name': 'append', 'range': [903, 906], 'children': [{'type': 'Identifier', 'name': 'err_msg', 'range': [905, 905]}]}]}]}]}, {'type': 'ReturnStatement', 'range': [909, 910], 'children': [{'type': 'Identifier', 'name': 'err_msgs', 'range': [910, 910]}]}]}]}
2025-01-08 09:29:02,842 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:29:04,442 - INFO - Step 5 result: {'type': 'Program', 'name': 'check_title', 'range': [498, 619], 'children': [{'type': 'FunctionDecl', 'name': 'check_title', 'range': [498, 619], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [500, 508], 'children': [{'type': 'Parameter', 'name': 'line_num', 'range': [501, 503], 'children': []}, {'type': 'Parameter', 'name': 'raw_title', 'range': [505, 507], 'children': []}]}, {'type': 'ReturnType', 'name': 'return_type', 'range': [509, 514], 'children': [{'type': 'Type', 'name': 'List', 'range': [511, 514], 'children': []}]}, {'type': 'Block', 'name': 'body', 'range': [516, 619], 'children': [{'type': 'VariableDecl', 'name': 'err_msgs', 'range': [518, 521], 'children': []}, {'type': 'Assignment', 'name': 'title_match', 'range': [524, 531], 'children': []}, {'type': 'IfStatement', 'name': 'if_not_title_match', 'range': [544, 564], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [545, 546], 'children': []}, {'type': 'Block', 'name': 'then', 'range': [548, 564], 'children': [{'type': 'Assignment', 'name': 'err_msg', 'range': [549, 556], 'children': []}, {'type': 'CallExpression', 'name': 'append', 'range': [558, 563], 'children': []}]}]}, {'type': 'ElseStatement', 'name': 'else', 'range': [565, 615], 'children': [{'type': 'Block', 'name': 'else_block', 'range': [567, 615], 'children': [{'type': 'Assignment', 'name': 'title', 'range': [578, 585], 'children': []}, {'type': 'IfStatement', 'name': 'if_title_ends_with_API', 'range': [587, 615], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [588, 597], 'children': []}, {'type': 'Block', 'name': 'then', 'range': [599, 615], 'children': [{'type': 'Assignment', 'name': 'err_msg', 'range': [600, 607], 'children': []}, {'type': 'CallExpression', 'name': 'append', 'range': [609, 614], 'children': []}]}]}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [617, 618], 'children': []}]}]}]}
2025-01-08 09:29:04,442 - INFO - Completed main AST analysis flow
2025-01-08 09:29:04,443 - INFO - Successfully processed chunk
2025-01-08 09:29:12,824 - INFO - Step 4 result: {'type': 'Program', 'name': 'check_description', 'range': [622, 748], 'children': [{'type': 'FunctionDecl', 'name': 'check_description', 'range': [622, 748], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [624, 632], 'children': [{'type': 'Parameter', 'name': 'line_num', 'range': [625, 627], 'children': []}, {'type': 'Parameter', 'name': 'description', 'range': [629, 631], 'children': []}]}, {'type': 'ReturnType', 'name': 'return_type', 'range': [633, 638], 'children': [{'type': 'Type', 'name': 'List', 'range': [635, 638], 'children': []}]}, {'type': 'Block', 'name': 'body', 'range': [640, 748], 'children': [{'type': 'VariableDecl', 'name': 'err_msgs', 'range': [642, 645], 'children': []}, {'type': 'Assignment', 'name': 'first_char', 'range': [648, 653], 'children': []}, {'type': 'IfStatement', 'name': 'if_first_char_not_capitalized', 'range': [655, 681], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [656, 663], 'children': []}, {'type': 'Block', 'name': 'then', 'range': [665, 681], 'children': [{'type': 'Assignment', 'name': 'err_msg', 'range': [666, 673], 'children': []}, {'type': 'CallExpression', 'name': 'append', 'range': [675, 680], 'children': []}]}]}, {'type': 'Assignment', 'name': 'last_char', 'range': [683, 689], 'children': []}, {'type': 'IfStatement', 'name': 'if_last_char_in_punctuation', 'range': [691, 712], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [692, 694], 'children': []}, {'type': 'Block', 'name': 'then', 'range': [696, 712], 'children': [{'type': 'Assignment', 'name': 'err_msg', 'range': [697, 705], 'children': []}, {'type': 'CallExpression', 'name': 'append', 'range': [707, 711], 'children': []}]}]}, {'type': 'Assignment', 'name': 'desc_length', 'range': [715, 720], 'children': []}, {'type': 'IfStatement', 'name': 'if_desc_length_exceeds_max', 'range': [722, 743], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [723, 725], 'children': []}, {'type': 'Block', 'name': 'then', 'range': [727, 743], 'children': [{'type': 'Assignment', 'name': 'err_msg', 'range': [728, 736], 'children': []}, {'type': 'CallExpression', 'name': 'append', 'range': [738, 742], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [746, 747], 'children': []}]}]}]}
2025-01-08 09:29:12,824 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:29:17,437 - INFO - Step 4 result: {'nodes': [{'type': 'IfStatement', 'name': '', 'range': [1594, 1600], 'children': [{'type': 'BinaryExpression', 'name': '', 'range': [1594, 1599], 'children': [{'type': 'Identifier', 'name': '__name__', 'range': [1595, 1595], 'children': []}, {'type': 'Operator', 'name': '==', 'range': [1596, 1597], 'children': []}, {'type': 'Literal', 'name': "'__main__'", 'range': [1598, 1598], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'num_args', 'range': [1602, 1610], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [1602, 1609], 'children': [{'type': 'Identifier', 'name': 'num_args', 'range': [1602, 1602], 'children': []}, {'type': 'Operator', 'name': '=', 'range': [1603, 1603], 'children': []}, {'type': 'CallExpression', 'name': 'len', 'range': [1604, 1609], 'children': [{'type': 'Identifier', 'name': 'sys.argv', 'range': [1606, 1608], 'children': []}]}]}]}, {'type': 'IfStatement', 'name': '', 'range': [1612, 1629], 'children': [{'type': 'BinaryExpression', 'name': '', 'range': [1612, 1616], 'children': [{'type': 'Identifier', 'name': 'num_args', 'range': [1613, 1613], 'children': []}, {'type': 'Operator', 'name': '<', 'range': [1614, 1614], 'children': []}, {'type': 'Literal', 'name': '2', 'range': [1615, 1615], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [1617, 1629], 'children': [{'type': 'CallExpression', 'name': 'print', 'range': [1618, 1622], 'children': [{'type': 'Literal', 'name': "'No .md file passed (file should contain Markdown table syntax)'", 'range': [1620, 1620], 'children': []}]}, {'type': 'CallExpression', 'name': 'sys.exit', 'range': [1623, 1629], 'children': [{'type': 'Literal', 'name': '1', 'range': [1627, 1627], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'filename', 'range': [1631, 1639], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [1631, 1638], 'children': [{'type': 'Identifier', 'name': 'filename', 'range': [1631, 1631], 'children': []}, {'type': 'Operator', 'name': '=', 'range': [1632, 1632], 'children': []}, {'type': 'MemberExpression', 'name': 'sys.argv[1]', 'range': [1633, 1638], 'children': [{'type': 'Identifier', 'name': 'sys.argv', 'range': [1633, 1635], 'children': []}, {'type': 'Literal', 'name': '1', 'range': [1637, 1637], 'children': []}]}]}]}, {'type': 'CallExpression', 'name': 'main', 'range': [1641, 1645], 'children': [{'type': 'Identifier', 'name': 'filename', 'range': [1643, 1643], 'children': []}]}]}
2025-01-08 09:29:17,437 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:29:17,748 - INFO - Step 4 result: {'type': 'Program', 'name': 'get_categories_content', 'range': [228, 410], 'children': [{'type': 'FunctionDecl', 'name': 'get_categories_content', 'range': [228, 408], 'children': [{'type': 'Parameter', 'name': 'contents', 'range': [231, 236], 'children': []}, {'type': 'ReturnType', 'name': 'Tuple[Categories, CategoriesLineNumber]', 'range': [240, 245], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [247, 408], 'children': [{'type': 'VariableDeclarator', 'name': 'categories', 'range': [249, 252], 'children': []}, {'type': 'VariableDeclarator', 'name': 'category_line_num', 'range': [254, 257], 'children': []}, {'type': 'ForStatement', 'name': '', 'range': [260, 333], 'children': [{'type': 'VariableDeclarator', 'name': 'line_num', 'range': [261, 261], 'children': []}, {'type': 'VariableDeclarator', 'name': 'line_content', 'range': [263, 263], 'children': []}, {'type': 'CallExpression', 'name': 'enumerate', 'range': [265, 268], 'children': [{'type': 'Argument', 'name': 'contents', 'range': [267, 267], 'children': []}]}, {'type': 'IfStatement', 'name': '', 'range': [272, 313], 'children': [{'type': 'Condition', 'name': 'line_content.startswith(anchor)', 'range': [273, 278], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [280, 313], 'children': [{'type': 'VariableDeclarator', 'name': 'category', 'range': [281, 295], 'children': []}, {'type': 'AssignmentExpression', 'name': 'categories[category] = []', 'range': [297, 304], 'children': []}, {'type': 'AssignmentExpression', 'name': 'category_line_num[category] = line_num', 'range': [305, 311], 'children': []}, {'type': 'ContinueStatement', 'name': '', 'range': [312, 312], 'children': []}]}]}, {'type': 'IfStatement', 'name': '', 'range': [315, 332], 'children': [{'type': 'Condition', 'name': "not line_content.startswith('|') or line_content.startswith('|---')", 'range': [316, 329], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [331, 332], 'children': [{'type': 'ContinueStatement', 'name': '', 'range': [332, 332], 'children': []}]}]}, {'type': 'VariableDeclarator', 'name': 'raw_title', 'range': [335, 363], 'children': []}, {'type': 'CallExpression', 'name': 'link_re.match', 'range': [366, 373], 'children': [{'type': 'Argument', 'name': 'raw_title', 'range': [372, 372], 'children': []}]}, {'type': 'IfStatement', 'name': '', 'range': [375, 401], 'children': [{'type': 'Condition', 'name': 'title_match', 'range': [376, 376], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [378, 401], 'children': [{'type': 'VariableDeclarator', 'name': 'title', 'range': [379, 390], 'children': []}, {'type': 'CallExpression', 'name': 'categories[category].append', 'range': [392, 400], 'children': [{'type': 'Argument', 'name': 'title', 'range': [399, 399], 'children': []}]}]}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [403, 408], 'children': [{'type': 'ReturnValue', 'name': '(categories, category_line_num)', 'range': [404, 407], 'children': []}]}]}]}]}
2025-01-08 09:29:17,748 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:29:19,421 - INFO - Step 5 result: {'type': 'Program', 'name': 'check_auth', 'range': [750, 857], 'children': [{'type': 'FunctionDecl', 'name': 'check_auth', 'range': [750, 857], 'children': [{'type': 'ParameterList', 'range': [752, 760], 'children': [{'type': 'Parameter', 'name': 'line_num', 'range': [753, 755], 'children': []}, {'type': 'Parameter', 'name': 'auth', 'range': [757, 759], 'children': []}]}, {'type': 'ReturnType', 'range': [761, 766], 'children': [{'type': 'Type', 'name': 'List', 'range': [763, 766], 'children': []}]}, {'type': 'Block', 'range': [768, 857], 'children': [{'type': 'VariableDecl', 'name': 'err_msgs', 'range': [770, 773], 'children': []}, {'type': 'VariableDecl', 'name': 'backtick', 'range': [776, 778], 'children': []}, {'type': 'IfStatement', 'range': [780, 820], 'children': [{'type': 'Condition', 'range': [781, 802], 'children': [{'type': 'BinaryExpression', 'operator': '!=', 'range': [781, 784], 'children': []}, {'type': 'LogicalExpression', 'operator': 'and', 'range': [785, 802], 'children': [{'type': 'UnaryExpression', 'operator': 'not', 'range': [787, 793], 'children': []}, {'type': 'UnaryExpression', 'operator': 'not', 'range': [795, 801], 'children': []}]}]}, {'type': 'Block', 'range': [804, 820], 'children': [{'type': 'VariableDecl', 'name': 'err_msg', 'range': [805, 812], 'children': []}, {'type': 'ExpressionStatement', 'range': [814, 819], 'children': []}]}]}, {'type': 'IfStatement', 'range': [822, 852], 'children': [{'type': 'Condition', 'range': [823, 833], 'children': [{'type': 'CallExpression', 'range': [824, 830], 'children': []}, {'type': 'BinaryExpression', 'operator': 'not in', 'range': [831, 833], 'children': []}]}, {'type': 'Block', 'range': [835, 852], 'children': [{'type': 'VariableDecl', 'name': 'err_msg', 'range': [836, 844], 'children': []}, {'type': 'ExpressionStatement', 'range': [846, 851], 'children': []}]}]}, {'type': 'ReturnStatement', 'range': [854, 855], 'children': []}]}]}]}
2025-01-08 09:29:19,421 - INFO - Completed main AST analysis flow
2025-01-08 09:29:19,424 - INFO - Successfully processed chunk
2025-01-08 09:29:32,979 - INFO - Step 2 result: {'nodes': [{'type': 'ImportDeclaration', 'name': 're', 'range': [14, 16], 'children': [{'type': 'ImportSpecifier', 'name': 're', 'range': [14, 16], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'sys', 'range': [17, 19], 'children': [{'type': 'ImportSpecifier', 'name': 'sys', 'range': [17, 19], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'punctuation', 'range': [20, 24], 'children': [{'type': 'ImportSpecifier', 'name': 'punctuation', 'range': [20, 24], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'List, Tuple, Dict', 'range': [25, 33], 'children': [{'type': 'ImportSpecifier', 'name': 'List', 'range': [25, 29], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Tuple', 'range': [29, 31], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Dict', 'range': [31, 33], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'punctuation', 'range': [57, 67], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [58, 67], 'children': [{'type': 'Identifier', 'name': 'punctuation', 'range': [57, 67], 'children': []}, {'type': 'CallExpression', 'name': 'replace', 'range': [61, 67], 'children': [{'type': 'Identifier', 'name': 'punctuation', 'range': [59, 67], 'children': []}, {'type': 'StringLiteral', 'name': "'()'", 'range': [63, 67], 'children': []}, {'type': 'StringLiteral', 'name': "''", 'range': [65, 67], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'anchor', 'range': [69, 72], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [70, 72], 'children': [{'type': 'Identifier', 'name': 'anchor', 'range': [69, 72], 'children': []}, {'type': 'StringLiteral', 'name': "'###'", 'range': [71, 72], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'auth_keys', 'range': [73, 86], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [74, 86], 'children': [{'type': 'Identifier', 'name': 'auth_keys', 'range': [73, 86], 'children': []}, {'type': 'ArrayExpression', 'name': '[]', 'range': [75, 86], 'children': [{'type': 'StringLiteral', 'name': "'apiKey'", 'range': [76, 86], 'children': []}, {'type': 'StringLiteral', 'name': "'OAuth'", 'range': [78, 86], 'children': []}, {'type': 'StringLiteral', 'name': "'X-Mashape-Key'", 'range': [80, 86], 'children': []}, {'type': 'StringLiteral', 'name': "'User-Agent'", 'range': [82, 86], 'children': []}, {'type': 'StringLiteral', 'name': "'No'", 'range': [84, 86], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'https_keys', 'range': [87, 94], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [88, 94], 'children': [{'type': 'Identifier', 'name': 'https_keys', 'range': [87, 94], 'children': []}, {'type': 'ArrayExpression', 'name': '[]', 'range': [89, 94], 'children': [{'type': 'StringLiteral', 'name': "'Yes'", 'range': [90, 94], 'children': []}, {'type': 'StringLiteral', 'name': "'No'", 'range': [92, 94], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'cors_keys', 'range': [95, 104], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [96, 104], 'children': [{'type': 'Identifier', 'name': 'cors_keys', 'range': [95, 104], 'children': []}, {'type': 'ArrayExpression', 'name': '[]', 'range': [97, 104], 'children': [{'type': 'StringLiteral', 'name': "'Yes'", 'range': [98, 104], 'children': []}, {'type': 'StringLiteral', 'name': "'No'", 'range': [100, 104], 'children': []}, {'type': 'StringLiteral', 'name': "'Unknown'", 'range': [102, 104], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'index_title', 'range': [106, 109], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [107, 109], 'children': [{'type': 'Identifier', 'name': 'index_title', 'range': [106, 109], 'children': []}, {'type': 'NumericLiteral', 'name': '0', 'range': [108, 109], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'index_desc', 'range': [110, 113], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [111, 113], 'children': [{'type': 'Identifier', 'name': 'index_desc', 'range': [110, 113], 'children': []}, {'type': 'NumericLiteral', 'name': '1', 'range': [112, 113], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'index_auth', 'range': [114, 117], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [115, 117], 'children': [{'type': 'Identifier', 'name': 'index_auth', 'range': [114, 117], 'children': []}, {'type': 'NumericLiteral', 'name': '2', 'range': [116, 117], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'index_https', 'range': [118, 121], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [119, 121], 'children': [{'type': 'Identifier', 'name': 'index_https', 'range': [118, 121], 'children': []}, {'type': 'NumericLiteral', 'name': '3', 'range': [120, 121], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'index_cors', 'range': [122, 125], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [123, 125], 'children': [{'type': 'Identifier', 'name': 'index_cors', 'range': [122, 125], 'children': []}, {'type': 'NumericLiteral', 'name': '4', 'range': [124, 125], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'num_segments', 'range': [127, 130], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [128, 130], 'children': [{'type': 'Identifier', 'name': 'num_segments', 'range': [127, 130], 'children': []}, {'type': 'NumericLiteral', 'name': '5', 'range': [129, 130], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'min_entries_per_category', 'range': [131, 134], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [132, 134], 'children': [{'type': 'Identifier', 'name': 'min_entries_per_category', 'range': [131, 134], 'children': []}, {'type': 'NumericLiteral', 'name': '3', 'range': [133, 134], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'max_description_length', 'range': [135, 138], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [136, 138], 'children': [{'type': 'Identifier', 'name': 'max_description_length', 'range': [135, 138], 'children': []}, {'type': 'NumericLiteral', 'name': '100', 'range': [137, 138], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'anchor_re', 'range': [140, 150], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [141, 150], 'children': [{'type': 'Identifier', 'name': 'anchor_re', 'range': [140, 150], 'children': []}, {'type': 'CallExpression', 'name': 'compile', 'range': [144, 150], 'children': [{'type': 'Identifier', 'name': 're', 'range': [142, 150], 'children': []}, {'type': 'BinaryExpression', 'name': '+', 'range': [147, 150], 'children': [{'type': 'Identifier', 'name': 'anchor', 'range': [146, 150], 'children': []}, {'type': 'StringLiteral', 'name': "'\\s(.+)'", 'range': [148, 150], 'children': []}]}]}]}]}, {'type': 'VariableDeclaration', 'name': 'category_title_in_index_re', 'range': [151, 159], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [152, 159], 'children': [{'type': 'Identifier', 'name': 'category_title_in_index_re', 'range': [151, 159], 'children': []}, {'type': 'CallExpression', 'name': 'compile', 'range': [155, 159], 'children': [{'type': 'Identifier', 'name': 're', 'range': [153, 159], 'children': []}, {'type': 'StringLiteral', 'name': "'\\*\\s\\[(.*)\\]'", 'range': [157, 159], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'link_re', 'range': [160, 168], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [161, 168], 'children': [{'type': 'Identifier', 'name': 'link_re', 'range': [160, 168], 'children': []}, {'type': 'CallExpression', 'name': 'compile', 'range': [164, 168], 'children': [{'type': 'Identifier', 'name': 're', 'range': [162, 168], 'children': []}, {'type': 'StringLiteral', 'name': "'\\[(.+)\\]\\((http.*)\\)'", 'range': [166, 168], 'children': []}]}]}]}, {'type': 'TypeAliasDeclaration', 'name': 'APIList', 'range': [174, 180], 'children': [{'type': 'TypeReference', 'name': 'List', 'range': [176, 180], 'children': [{'type': 'TypeReference', 'name': 'str', 'range': [178, 180], 'children': []}]}]}, {'type': 'TypeAliasDeclaration', 'name': 'Categories', 'range': [181, 189], 'children': [{'type': 'TypeReference', 'name': 'Dict', 'range': [183, 189], 'children': [{'type': 'TypeReference', 'name': 'str', 'range': [185, 189], 'children': []}, {'type': 'TypeReference', 'name': 'APIList', 'range': [187, 189], 'children': []}]}]}, {'type': 'TypeAliasDeclaration', 'name': 'CategoriesLineNumber', 'range': [190, 198], 'children': [{'type': 'TypeReference', 'name': 'Dict', 'range': [192, 198], 'children': [{'type': 'TypeReference', 'name': 'str', 'range': [194, 198], 'children': []}, {'type': 'TypeReference', 'name': 'int', 'range': [196, 198], 'children': []}]}]}]}
2025-01-08 09:29:32,980 - INFO - Starting Step 3: AST simplification
2025-01-08 09:29:37,199 - INFO - Step 5 result: {'type': 'Program', 'name': 'check_https', 'range': [858, 912], 'children': [{'type': 'FunctionDecl', 'name': 'check_https', 'range': [858, 912], 'children': [{'type': 'Parameter', 'name': 'line_num', 'range': [861, 863], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [863, 863]}]}, {'type': 'Parameter', 'name': 'https', 'range': [865, 867], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [867, 867]}]}, {'type': 'ReturnType', 'name': 'List[str]', 'range': [871, 874]}, {'type': 'VariableDecl', 'name': 'err_msgs', 'range': [878, 881], 'children': [{'type': 'ArrayLiteral', 'range': [880, 881]}]}, {'type': 'IfStatement', 'range': [884, 907], 'children': [{'type': 'Condition', 'range': [885, 888], 'children': [{'type': 'BinaryExpression', 'operator': 'not in', 'range': [885, 888], 'children': [{'type': 'Identifier', 'name': 'https', 'range': [885, 885]}, {'type': 'Identifier', 'name': 'https_keys', 'range': [888, 888]}]}]}, {'type': 'Block', 'range': [889, 907], 'children': [{'type': 'VariableDecl', 'name': 'err_msg', 'range': [891, 899], 'children': [{'type': 'CallExpression', 'name': 'error_message', 'range': [893, 899], 'children': [{'type': 'Identifier', 'name': 'line_num', 'range': [895, 895]}, {'type': 'TemplateLiteral', 'range': [897, 898], 'children': [{'type': 'Identifier', 'name': 'https', 'range': [898, 898]}]}]}]}, {'type': 'ExpressionStatement', 'range': [901, 906], 'children': [{'type': 'CallExpression', 'name': 'append', 'range': [903, 906], 'children': [{'type': 'Identifier', 'name': 'err_msg', 'range': [905, 905]}]}]}]}]}, {'type': 'ReturnStatement', 'range': [909, 910], 'children': [{'type': 'Identifier', 'name': 'err_msgs', 'range': [910, 910]}]}]}]}
2025-01-08 09:29:37,199 - INFO - Completed main AST analysis flow
2025-01-08 09:29:37,200 - INFO - Successfully processed chunk
2025-01-08 09:29:40,425 - INFO - Step 5 result: {'type': 'Program', 'name': 'main', 'range': [1516, 1593], 'children': [{'type': 'FunctionDecl', 'name': 'main', 'range': [1516, 1593], 'children': [{'type': 'Parameter', 'name': 'filename', 'range': [1519, 1521], 'children': []}, {'type': 'ReturnType', 'name': 'None', 'range': [1525, 1525], 'children': []}, {'type': 'Block', 'name': '', 'range': [1527, 1593], 'children': [{'type': 'WithStatement', 'name': '', 'range': [1529, 1560], 'children': [{'type': 'CallExpression', 'name': 'open', 'range': [1530, 1541], 'children': [{'type': 'Argument', 'name': 'filename', 'range': [1532, 1532], 'children': []}, {'type': 'Argument', 'name': 'mode', 'range': [1534, 1536], 'children': []}, {'type': 'Argument', 'name': 'encoding', 'range': [1538, 1540], 'children': []}]}, {'type': 'VariableDecl', 'name': 'lines', 'range': [1546, 1559], 'children': [{'type': 'CallExpression', 'name': 'list', 'range': [1548, 1559], 'children': [{'type': 'GeneratorExpression', 'name': '', 'range': [1550, 1558], 'children': [{'type': 'CallExpression', 'name': 'rstrip', 'range': [1552, 1554], 'children': []}, {'type': 'Identifier', 'name': 'line', 'range': [1556, 1556], 'children': []}, {'type': 'Identifier', 'name': 'file', 'range': [1558, 1558], 'children': []}]}]}]}]}, {'type': 'VariableDecl', 'name': 'file_format_err_msgs', 'range': [1562, 1567], 'children': [{'type': 'CallExpression', 'name': 'check_file_format', 'range': [1564, 1567], 'children': [{'type': 'Argument', 'name': 'lines', 'range': [1566, 1566], 'children': []}]}]}, {'type': 'IfStatement', 'name': '', 'range': [1570, 1591], 'children': [{'type': 'Condition', 'name': 'file_format_err_msgs', 'range': [1571, 1571], 'children': []}, {'type': 'Block', 'name': '', 'range': [1573, 1591], 'children': [{'type': 'ForStatement', 'name': '', 'range': [1574, 1584], 'children': [{'type': 'VariableDecl', 'name': 'err_msg', 'range': [1575, 1575], 'children': []}, {'type': 'Identifier', 'name': 'file_format_err_msgs', 'range': [1577, 1577], 'children': []}, {'type': 'Block', 'name': '', 'range': [1579, 1584], 'children': [{'type': 'CallExpression', 'name': 'print', 'range': [1580, 1583], 'children': [{'type': 'Argument', 'name': 'err_msg', 'range': [1582, 1582], 'children': []}]}]}]}, {'type': 'CallExpression', 'name': 'sys.exit', 'range': [1585, 1590], 'children': [{'type': 'Argument', 'name': '1', 'range': [1589, 1589], 'children': []}]}]}]}]}]}]}
2025-01-08 09:29:40,426 - INFO - Completed main AST analysis flow
2025-01-08 09:29:40,426 - INFO - Successfully processed chunk
2025-01-08 09:29:48,939 - INFO - Step 5 result: {'type': 'Program', 'name': 'check_description', 'range': [622, 748], 'children': [{'type': 'FunctionDecl', 'name': 'check_description', 'range': [622, 748], 'children': [{'type': 'ParameterList', 'name': 'parameters', 'range': [624, 632], 'children': [{'type': 'Parameter', 'name': 'line_num', 'range': [625, 627], 'children': []}, {'type': 'Parameter', 'name': 'description', 'range': [629, 631], 'children': []}]}, {'type': 'ReturnType', 'name': 'return_type', 'range': [633, 638], 'children': [{'type': 'Type', 'name': 'List', 'range': [635, 638], 'children': []}]}, {'type': 'Block', 'name': 'body', 'range': [640, 748], 'children': [{'type': 'VariableDecl', 'name': 'err_msgs', 'range': [642, 645], 'children': []}, {'type': 'Assignment', 'name': 'first_char', 'range': [648, 653], 'children': []}, {'type': 'IfStatement', 'name': 'if_first_char_not_capitalized', 'range': [655, 681], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [656, 663], 'children': []}, {'type': 'Block', 'name': 'then', 'range': [665, 681], 'children': [{'type': 'Assignment', 'name': 'err_msg', 'range': [666, 673], 'children': []}, {'type': 'CallExpression', 'name': 'append', 'range': [675, 680], 'children': []}]}]}, {'type': 'Assignment', 'name': 'last_char', 'range': [683, 689], 'children': []}, {'type': 'IfStatement', 'name': 'if_last_char_in_punctuation', 'range': [691, 712], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [692, 694], 'children': []}, {'type': 'Block', 'name': 'then', 'range': [696, 712], 'children': [{'type': 'Assignment', 'name': 'err_msg', 'range': [697, 705], 'children': []}, {'type': 'CallExpression', 'name': 'append', 'range': [707, 711], 'children': []}]}]}, {'type': 'Assignment', 'name': 'desc_length', 'range': [715, 720], 'children': []}, {'type': 'IfStatement', 'name': 'if_desc_length_exceeds_max', 'range': [722, 743], 'children': [{'type': 'Condition', 'name': 'condition', 'range': [723, 725], 'children': []}, {'type': 'Block', 'name': 'then', 'range': [727, 743], 'children': [{'type': 'Assignment', 'name': 'err_msg', 'range': [728, 736], 'children': []}, {'type': 'CallExpression', 'name': 'append', 'range': [738, 742], 'children': []}]}]}, {'type': 'ReturnStatement', 'name': 'return', 'range': [746, 747], 'children': []}]}]}]}
2025-01-08 09:29:48,939 - INFO - Completed main AST analysis flow
2025-01-08 09:29:48,940 - INFO - Successfully processed chunk
2025-01-08 09:29:57,563 - INFO - Step 5 result: {'nodes': [{'type': 'Program', 'name': 'MainProgram', 'range': [1594, 1645], 'children': [{'type': 'IfStatement', 'name': '', 'range': [1594, 1600], 'children': [{'type': 'BinaryExpression', 'name': '', 'range': [1594, 1599], 'children': [{'type': 'Identifier', 'name': '__name__', 'range': [1595, 1595], 'children': []}, {'type': 'Operator', 'name': '==', 'range': [1596, 1597], 'children': []}, {'type': 'Literal', 'name': "'__main__'", 'range': [1598, 1598], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'num_args', 'range': [1602, 1610], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [1602, 1609], 'children': [{'type': 'Identifier', 'name': 'num_args', 'range': [1602, 1602], 'children': []}, {'type': 'Operator', 'name': '=', 'range': [1603, 1603], 'children': []}, {'type': 'CallExpression', 'name': 'len', 'range': [1604, 1609], 'children': [{'type': 'Identifier', 'name': 'sys.argv', 'range': [1606, 1608], 'children': []}]}]}]}, {'type': 'IfStatement', 'name': '', 'range': [1612, 1629], 'children': [{'type': 'BinaryExpression', 'name': '', 'range': [1612, 1616], 'children': [{'type': 'Identifier', 'name': 'num_args', 'range': [1613, 1613], 'children': []}, {'type': 'Operator', 'name': '<', 'range': [1614, 1614], 'children': []}, {'type': 'Literal', 'name': '2', 'range': [1615, 1615], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [1617, 1629], 'children': [{'type': 'CallExpression', 'name': 'print', 'range': [1618, 1622], 'children': [{'type': 'Literal', 'name': "'No .md file passed (file should contain Markdown table syntax)'", 'range': [1620, 1620], 'children': []}]}, {'type': 'CallExpression', 'name': 'sys.exit', 'range': [1623, 1629], 'children': [{'type': 'Literal', 'name': '1', 'range': [1627, 1627], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'filename', 'range': [1631, 1639], 'children': [{'type': 'AssignmentExpression', 'name': '', 'range': [1631, 1638], 'children': [{'type': 'Identifier', 'name': 'filename', 'range': [1631, 1631], 'children': []}, {'type': 'Operator', 'name': '=', 'range': [1632, 1632], 'children': []}, {'type': 'MemberExpression', 'name': 'sys.argv[1]', 'range': [1633, 1638], 'children': [{'type': 'Identifier', 'name': 'sys.argv', 'range': [1633, 1635], 'children': []}, {'type': 'Literal', 'name': '1', 'range': [1637, 1637], 'children': []}]}]}]}, {'type': 'CallExpression', 'name': 'main', 'range': [1641, 1645], 'children': [{'type': 'Identifier', 'name': 'filename', 'range': [1643, 1643], 'children': []}]}]}]}
2025-01-08 09:29:57,564 - INFO - Completed main AST analysis flow
2025-01-08 09:29:57,564 - INFO - Successfully processed chunk
2025-01-08 09:30:10,539 - INFO - Step 5 result: {'type': 'Program', 'name': 'get_categories_content', 'range': [228, 410], 'children': [{'type': 'FunctionDecl', 'name': 'get_categories_content', 'range': [228, 408], 'children': [{'type': 'Parameter', 'name': 'contents', 'range': [231, 236], 'children': []}, {'type': 'ReturnType', 'name': 'Tuple[Categories, CategoriesLineNumber]', 'range': [240, 245], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [247, 408], 'children': [{'type': 'VariableDeclarator', 'name': 'categories', 'range': [249, 252], 'children': []}, {'type': 'VariableDeclarator', 'name': 'category_line_num', 'range': [254, 257], 'children': []}, {'type': 'ForStatement', 'name': '', 'range': [260, 333], 'children': [{'type': 'VariableDeclarator', 'name': 'line_num', 'range': [261, 261], 'children': []}, {'type': 'VariableDeclarator', 'name': 'line_content', 'range': [263, 263], 'children': []}, {'type': 'CallExpression', 'name': 'enumerate', 'range': [265, 268], 'children': [{'type': 'Argument', 'name': 'contents', 'range': [267, 267], 'children': []}]}, {'type': 'IfStatement', 'name': '', 'range': [272, 313], 'children': [{'type': 'Condition', 'name': 'line_content.startswith(anchor)', 'range': [273, 278], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [280, 313], 'children': [{'type': 'VariableDeclarator', 'name': 'category', 'range': [281, 295], 'children': []}, {'type': 'AssignmentExpression', 'name': 'categories[category] = []', 'range': [297, 304], 'children': []}, {'type': 'AssignmentExpression', 'name': 'category_line_num[category] = line_num', 'range': [305, 311], 'children': []}, {'type': 'ContinueStatement', 'name': '', 'range': [312, 312], 'children': []}]}]}, {'type': 'IfStatement', 'name': '', 'range': [315, 332], 'children': [{'type': 'Condition', 'name': "not line_content.startswith('|') or line_content.startswith('|---')", 'range': [316, 329], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [331, 332], 'children': [{'type': 'ContinueStatement', 'name': '', 'range': [332, 332], 'children': []}]}]}, {'type': 'VariableDeclarator', 'name': 'raw_title', 'range': [335, 363], 'children': []}, {'type': 'CallExpression', 'name': 'link_re.match', 'range': [366, 373], 'children': [{'type': 'Argument', 'name': 'raw_title', 'range': [372, 372], 'children': []}]}, {'type': 'IfStatement', 'name': '', 'range': [375, 401], 'children': [{'type': 'Condition', 'name': 'title_match', 'range': [376, 376], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [378, 401], 'children': [{'type': 'VariableDeclarator', 'name': 'title', 'range': [379, 390], 'children': []}, {'type': 'CallExpression', 'name': 'categories[category].append', 'range': [392, 400], 'children': [{'type': 'Argument', 'name': 'title', 'range': [399, 399], 'children': []}]}]}]}]}, {'type': 'ReturnStatement', 'name': '', 'range': [403, 408], 'children': [{'type': 'ReturnValue', 'name': '(categories, category_line_num)', 'range': [404, 407], 'children': []}]}]}]}]}
2025-01-08 09:30:10,540 - INFO - Completed main AST analysis flow
2025-01-08 09:30:10,541 - INFO - Successfully processed chunk
2025-01-08 09:31:07,039 - INFO - Step 3 result: {'type': 'Program', 'name': 'check_file_format', 'range': [1103, 1515], 'children': [{'type': 'FunctionDeclaration', 'name': 'check_file_format', 'range': [1103, 1515], 'children': [{'type': 'ParameterList', 'name': 'lines', 'range': [1105, 1112], 'children': [{'type': 'Parameter', 'name': 'lines', 'range': [1106, 1111], 'children': [{'type': 'TypeAnnotation', 'name': 'List[str]', 'range': [1107, 1111], 'children': []}]}]}, {'type': 'ReturnType', 'name': 'List[str]', 'range': [1113, 1118], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [1119, 1515], 'children': [{'type': 'VariableDeclaration', 'name': 'err_msgs', 'range': [1122, 1125], 'children': []}, {'type': 'VariableDeclaration', 'name': 'category_title_in_index', 'range': [1127, 1130], 'children': []}, {'type': 'VariableDeclaration', 'name': 'alphabetical_err_msgs', 'range': [1133, 1138], 'children': [{'type': 'CallExpression', 'name': 'check_alphabetical_order', 'range': [1135, 1138], 'children': [{'type': 'ArgumentList', 'name': 'lines', 'range': [1136, 1138], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'err_msgs.extend(alphabetical_err_msgs)', 'range': [1140, 1145], 'children': [{'type': 'CallExpression', 'name': 'extend', 'range': [1141, 1145], 'children': [{'type': 'ArgumentList', 'name': 'alphabetical_err_msgs', 'range': [1143, 1145], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'num_in_category', 'range': [1148, 1153], 'children': [{'type': 'BinaryExpression', 'name': 'min_entries_per_category + 1', 'range': [1150, 1152], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'category', 'range': [1154, 1157], 'children': []}, {'type': 'VariableDeclaration', 'name': 'category_line', 'range': [1158, 1161], 'children': []}, {'type': 'ForStatement', 'name': 'for line_num, line_content in enumerate(lines):', 'range': [1163, 1511], 'children': [{'type': 'VariableDeclaration', 'name': 'line_num, line_content', 'range': [1164, 1171], 'children': []}, {'type': 'CallExpression', 'name': 'enumerate', 'range': [1168, 1171], 'children': [{'type': 'ArgumentList', 'name': 'lines', 'range': [1169, 1171], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [1172, 1511], 'children': [{'type': 'VariableDeclaration', 'name': 'category_title_match', 'range': [1175, 1183], 'children': [{'type': 'CallExpression', 'name': 'match', 'range': [1177, 1183], 'children': [{'type': 'ArgumentList', 'name': 'line_content', 'range': [1180, 1182], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if category_title_match:', 'range': [1184, 1199], 'children': [{'type': 'ExpressionStatement', 'name': 'category_title_in_index.append(category_title_match.group(1))', 'range': [1188, 1198], 'children': [{'type': 'CallExpression', 'name': 'append', 'range': [1189, 1198], 'children': [{'type': 'ArgumentList', 'name': 'category_title_match.group(1)', 'range': [1191, 1197], 'children': []}]}]}]}, {'type': 'IfStatement', 'name': 'if line_content.startswith(anchor):', 'range': [1212, 1281], 'children': [{'type': 'VariableDeclaration', 'name': 'category_match', 'range': [1221, 1229], 'children': [{'type': 'CallExpression', 'name': 'match', 'range': [1223, 1229], 'children': [{'type': 'ArgumentList', 'name': 'line_content', 'range': [1226, 1228], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if category_match:', 'range': [1230, 1281], 'children': [{'type': 'IfStatement', 'name': 'if category_match.group(1) not in category_title_in_index:', 'range': [1234, 1262], 'children': [{'type': 'VariableDeclaration', 'name': 'err_msg', 'range': [1246, 1255], 'children': [{'type': 'CallExpression', 'name': 'error_message', 'range': [1248, 1255], 'children': [{'type': 'ArgumentList', 'name': "line_num, f'category header ({category_match.group(1)}) not added to Index section'", 'range': [1249, 1254], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'err_msgs.append(err_msg)', 'range': [1256, 1261], 'children': [{'type': 'CallExpression', 'name': 'append', 'range': [1257, 1261], 'children': [{'type': 'ArgumentList', 'name': 'err_msg', 'range': [1259, 1261], 'children': []}]}]}]}, {'type': 'ElseStatement', 'name': 'else:', 'range': [1263, 1281], 'children': [{'type': 'VariableDeclaration', 'name': 'err_msg', 'range': [1266, 1274], 'children': [{'type': 'CallExpression', 'name': 'error_message', 'range': [1268, 1274], 'children': [{'type': 'ArgumentList', 'name': "line_num, 'category header is not formatted correctly'", 'range': [1269, 1273], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'err_msgs.append(err_msg)', 'range': [1275, 1280], 'children': [{'type': 'CallExpression', 'name': 'append', 'range': [1276, 1280], 'children': [{'type': 'ArgumentList', 'name': 'err_msg', 'range': [1278, 1280], 'children': []}]}]}]}]}]}, {'type': 'IfStatement', 'name': 'if num_in_category < min_entries_per_category:', 'range': [1283, 1305], 'children': [{'type': 'VariableDeclaration', 'name': 'err_msg', 'range': [1289, 1298], 'children': [{'type': 'CallExpression', 'name': 'error_message', 'range': [1291, 1298], 'children': [{'type': 'ArgumentList', 'name': "category_line, f'{category} category does not have the minimum {min_entries_per_category} entries (only has {num_in_category})'", 'range': [1292, 1297], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'err_msgs.append(err_msg)', 'range': [1299, 1304], 'children': [{'type': 'CallExpression', 'name': 'append', 'range': [1300, 1304], 'children': [{'type': 'ArgumentList', 'name': 'err_msg', 'range': [1302, 1304], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': "category = line_content.split(' ')[1]", 'range': [1307, 1318], 'children': [{'type': 'CallExpression', 'name': 'split', 'range': [1311, 1317], 'children': [{'type': 'ArgumentList', 'name': "' '", 'range': [1312, 1314], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'category_line = line_num', 'range': [1319, 1322], 'children': []}, {'type': 'ExpressionStatement', 'name': 'num_in_category = 0', 'range': [1323, 1326], 'children': []}, {'type': 'ContinueStatement', 'name': 'continue', 'range': [1327, 1328], 'children': []}, {'type': 'IfStatement', 'name': "if not line_content.startswith('|') or line_content.startswith('|---'):", 'range': [1340, 1358], 'children': [{'type': 'ContinueStatement', 'name': 'continue', 'range': [1357, 1358], 'children': []}]}, {'type': 'ExpressionStatement', 'name': 'num_in_category += 1', 'range': [1360, 1364], 'children': []}, {'type': 'VariableDeclaration', 'name': 'segments', 'range': [1365, 1378], 'children': [{'type': 'CallExpression', 'name': 'split', 'range': [1369, 1377], 'children': [{'type': 'ArgumentList', 'name': "'|'", 'range': [1370, 1372], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if len(segments) < num_segments:', 'range': [1380, 1407], 'children': [{'type': 'VariableDeclaration', 'name': 'err_msg', 'range': [1389, 1398], 'children': [{'type': 'CallExpression', 'name': 'error_message', 'range': [1391, 1398], 'children': [{'type': 'ArgumentList', 'name': "line_num, f'entry does not have all the required columns (have {len(segments)}, need {num_segments})'", 'range': [1392, 1397], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'err_msgs.append(err_msg)', 'range': [1399, 1404], 'children': [{'type': 'CallExpression', 'name': 'append', 'range': [1400, 1404], 'children': [{'type': 'ArgumentList', 'name': 'err_msg', 'range': [1402, 1404], 'children': []}]}]}, {'type': 'ContinueStatement', 'name': 'continue', 'range': [1405, 1407], 'children': []}]}, {'type': 'ForStatement', 'name': 'for segment in segments:', 'range': [1409, 1480], 'children': [{'type': 'VariableDeclaration', 'name': 'segment', 'range': [1410, 1413], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [1414, 1480], 'children': [{'type': 'IfStatement', 'name': 'if len(segment) - len(segment.lstrip()) != 1 or len(segment) - len(segment.rstrip()) != 1:', 'range': [1428, 1479], 'children': [{'type': 'VariableDeclaration', 'name': 'err_msg', 'range': [1464, 1471], 'children': [{'type': 'CallExpression', 'name': 'error_message', 'range': [1466, 1471], 'children': [{'type': 'ArgumentList', 'name': "line_num, 'each segment must start and end with exactly 1 space'", 'range': [1467, 1470], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'err_msgs.append(err_msg)', 'range': [1472, 1478], 'children': [{'type': 'CallExpression', 'name': 'append', 'range': [1473, 1478], 'children': [{'type': 'ArgumentList', 'name': 'err_msg', 'range': [1475, 1477], 'children': []}]}]}]}]}]}, {'type': 'ExpressionStatement', 'name': 'segments = [segment.strip() for segment in segments]', 'range': [1481, 1494], 'children': [{'type': 'ListComprehension', 'name': 'segment.strip() for segment in segments', 'range': [1484, 1493], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'entry_err_msgs', 'range': [1495, 1503], 'children': [{'type': 'CallExpression', 'name': 'check_entry', 'range': [1497, 1503], 'children': [{'type': 'ArgumentList', 'name': 'line_num, segments', 'range': [1498, 1502], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'err_msgs.extend(entry_err_msgs)', 'range': [1504, 1509], 'children': [{'type': 'CallExpression', 'name': 'extend', 'range': [1505, 1509], 'children': [{'type': 'ArgumentList', 'name': 'entry_err_msgs', 'range': [1507, 1509], 'children': []}]}]}]}]}, {'type': 'ReturnStatement', 'name': 'return err_msgs', 'range': [1512, 1514], 'children': []}]}]}]}
2025-01-08 09:31:07,040 - INFO - Starting Step 4: AST normalization
2025-01-08 09:31:36,532 - INFO - Step 3 result: {'nodes': [{'type': 'ImportDeclaration', 'name': 're', 'range': [14, 16], 'children': [{'type': 'ImportSpecifier', 'name': 're', 'range': [14, 16], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'sys', 'range': [17, 19], 'children': [{'type': 'ImportSpecifier', 'name': 'sys', 'range': [17, 19], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'punctuation', 'range': [20, 24], 'children': [{'type': 'ImportSpecifier', 'name': 'punctuation', 'range': [20, 24], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'List, Tuple, Dict', 'range': [25, 33], 'children': [{'type': 'ImportSpecifier', 'name': 'List', 'range': [25, 29], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Tuple', 'range': [29, 31], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Dict', 'range': [31, 33], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'punctuation', 'range': [57, 67], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [58, 67], 'children': [{'type': 'Identifier', 'name': 'punctuation', 'range': [57, 67], 'children': []}, {'type': 'CallExpression', 'name': 'replace', 'range': [61, 67], 'children': [{'type': 'Identifier', 'name': 'punctuation', 'range': [59, 67], 'children': []}, {'type': 'StringLiteral', 'name': "'()'", 'range': [63, 67], 'children': []}, {'type': 'StringLiteral', 'name': "''", 'range': [65, 67], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'anchor', 'range': [69, 72], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [70, 72], 'children': [{'type': 'Identifier', 'name': 'anchor', 'range': [69, 72], 'children': []}, {'type': 'StringLiteral', 'name': "'###'", 'range': [71, 72], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'auth_keys', 'range': [73, 86], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [74, 86], 'children': [{'type': 'Identifier', 'name': 'auth_keys', 'range': [73, 86], 'children': []}, {'type': 'ArrayExpression', 'name': '[]', 'range': [75, 86], 'children': [{'type': 'StringLiteral', 'name': "'apiKey'", 'range': [76, 86], 'children': []}, {'type': 'StringLiteral', 'name': "'OAuth'", 'range': [78, 86], 'children': []}, {'type': 'StringLiteral', 'name': "'X-Mashape-Key'", 'range': [80, 86], 'children': []}, {'type': 'StringLiteral', 'name': "'User-Agent'", 'range': [82, 86], 'children': []}, {'type': 'StringLiteral', 'name': "'No'", 'range': [84, 86], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'https_keys', 'range': [87, 94], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [88, 94], 'children': [{'type': 'Identifier', 'name': 'https_keys', 'range': [87, 94], 'children': []}, {'type': 'ArrayExpression', 'name': '[]', 'range': [89, 94], 'children': [{'type': 'StringLiteral', 'name': "'Yes'", 'range': [90, 94], 'children': []}, {'type': 'StringLiteral', 'name': "'No'", 'range': [92, 94], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'cors_keys', 'range': [95, 104], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [96, 104], 'children': [{'type': 'Identifier', 'name': 'cors_keys', 'range': [95, 104], 'children': []}, {'type': 'ArrayExpression', 'name': '[]', 'range': [97, 104], 'children': [{'type': 'StringLiteral', 'name': "'Yes'", 'range': [98, 104], 'children': []}, {'type': 'StringLiteral', 'name': "'No'", 'range': [100, 104], 'children': []}, {'type': 'StringLiteral', 'name': "'Unknown'", 'range': [102, 104], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'index_title', 'range': [106, 109], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [107, 109], 'children': [{'type': 'Identifier', 'name': 'index_title', 'range': [106, 109], 'children': []}, {'type': 'NumericLiteral', 'name': '0', 'range': [108, 109], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'index_desc', 'range': [110, 113], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [111, 113], 'children': [{'type': 'Identifier', 'name': 'index_desc', 'range': [110, 113], 'children': []}, {'type': 'NumericLiteral', 'name': '1', 'range': [112, 113], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'index_auth', 'range': [114, 117], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [115, 117], 'children': [{'type': 'Identifier', 'name': 'index_auth', 'range': [114, 117], 'children': []}, {'type': 'NumericLiteral', 'name': '2', 'range': [116, 117], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'index_https', 'range': [118, 121], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [119, 121], 'children': [{'type': 'Identifier', 'name': 'index_https', 'range': [118, 121], 'children': []}, {'type': 'NumericLiteral', 'name': '3', 'range': [120, 121], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'index_cors', 'range': [122, 125], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [123, 125], 'children': [{'type': 'Identifier', 'name': 'index_cors', 'range': [122, 125], 'children': []}, {'type': 'NumericLiteral', 'name': '4', 'range': [124, 125], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'num_segments', 'range': [127, 130], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [128, 130], 'children': [{'type': 'Identifier', 'name': 'num_segments', 'range': [127, 130], 'children': []}, {'type': 'NumericLiteral', 'name': '5', 'range': [129, 130], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'min_entries_per_category', 'range': [131, 134], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [132, 134], 'children': [{'type': 'Identifier', 'name': 'min_entries_per_category', 'range': [131, 134], 'children': []}, {'type': 'NumericLiteral', 'name': '3', 'range': [133, 134], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'max_description_length', 'range': [135, 138], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [136, 138], 'children': [{'type': 'Identifier', 'name': 'max_description_length', 'range': [135, 138], 'children': []}, {'type': 'NumericLiteral', 'name': '100', 'range': [137, 138], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'anchor_re', 'range': [140, 150], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [141, 150], 'children': [{'type': 'Identifier', 'name': 'anchor_re', 'range': [140, 150], 'children': []}, {'type': 'CallExpression', 'name': 'compile', 'range': [144, 150], 'children': [{'type': 'Identifier', 'name': 're', 'range': [142, 150], 'children': []}, {'type': 'BinaryExpression', 'name': '+', 'range': [147, 150], 'children': [{'type': 'Identifier', 'name': 'anchor', 'range': [146, 150], 'children': []}, {'type': 'StringLiteral', 'name': "'\\s(.+)'", 'range': [148, 150], 'children': []}]}]}]}]}, {'type': 'VariableDeclaration', 'name': 'category_title_in_index_re', 'range': [151, 159], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [152, 159], 'children': [{'type': 'Identifier', 'name': 'category_title_in_index_re', 'range': [151, 159], 'children': []}, {'type': 'CallExpression', 'name': 'compile', 'range': [155, 159], 'children': [{'type': 'Identifier', 'name': 're', 'range': [153, 159], 'children': []}, {'type': 'StringLiteral', 'name': "'\\*\\s\\[(.*)\\]'", 'range': [157, 159], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'link_re', 'range': [160, 168], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [161, 168], 'children': [{'type': 'Identifier', 'name': 'link_re', 'range': [160, 168], 'children': []}, {'type': 'CallExpression', 'name': 'compile', 'range': [164, 168], 'children': [{'type': 'Identifier', 'name': 're', 'range': [162, 168], 'children': []}, {'type': 'StringLiteral', 'name': "'\\[(.+)\\]\\((http.*)\\)'", 'range': [166, 168], 'children': []}]}]}]}, {'type': 'TypeAliasDeclaration', 'name': 'APIList', 'range': [174, 180], 'children': [{'type': 'TypeReference', 'name': 'List', 'range': [176, 180], 'children': [{'type': 'TypeReference', 'name': 'str', 'range': [178, 180], 'children': []}]}]}, {'type': 'TypeAliasDeclaration', 'name': 'Categories', 'range': [181, 189], 'children': [{'type': 'TypeReference', 'name': 'Dict', 'range': [183, 189], 'children': [{'type': 'TypeReference', 'name': 'str', 'range': [185, 189], 'children': []}, {'type': 'TypeReference', 'name': 'APIList', 'range': [187, 189], 'children': []}]}]}, {'type': 'TypeAliasDeclaration', 'name': 'CategoriesLineNumber', 'range': [190, 198], 'children': [{'type': 'TypeReference', 'name': 'Dict', 'range': [192, 198], 'children': [{'type': 'TypeReference', 'name': 'str', 'range': [194, 198], 'children': []}, {'type': 'TypeReference', 'name': 'int', 'range': [196, 198], 'children': []}]}]}]}
2025-01-08 09:31:36,533 - INFO - Starting Step 4: AST normalization
2025-01-08 09:33:27,856 - INFO - Step 4 result: {'type': 'Program', 'name': 'check_file_format', 'range': [1103, 1515], 'children': [{'type': 'FunctionDecl', 'name': 'check_file_format', 'range': [1103, 1515], 'children': [{'type': 'ParameterList', 'name': 'lines', 'range': [1105, 1112], 'children': [{'type': 'Parameter', 'name': 'lines', 'range': [1106, 1111], 'children': [{'type': 'TypeAnnotation', 'name': 'List[str]', 'range': [1107, 1111], 'children': []}]}]}, {'type': 'ReturnType', 'name': 'List[str]', 'range': [1113, 1118], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [1119, 1515], 'children': [{'type': 'VariableDecl', 'name': 'err_msgs', 'range': [1122, 1125], 'children': []}, {'type': 'VariableDecl', 'name': 'category_title_in_index', 'range': [1127, 1130], 'children': []}, {'type': 'VariableDecl', 'name': 'alphabetical_err_msgs', 'range': [1133, 1138], 'children': [{'type': 'CallExpression', 'name': 'check_alphabetical_order', 'range': [1135, 1138], 'children': [{'type': 'ArgumentList', 'name': 'lines', 'range': [1136, 1138], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'err_msgs.extend(alphabetical_err_msgs)', 'range': [1140, 1145], 'children': [{'type': 'CallExpression', 'name': 'extend', 'range': [1141, 1145], 'children': [{'type': 'ArgumentList', 'name': 'alphabetical_err_msgs', 'range': [1143, 1145], 'children': []}]}]}, {'type': 'VariableDecl', 'name': 'num_in_category', 'range': [1148, 1153], 'children': [{'type': 'BinaryExpression', 'name': 'min_entries_per_category + 1', 'range': [1150, 1152], 'children': []}]}, {'type': 'VariableDecl', 'name': 'category', 'range': [1154, 1157], 'children': []}, {'type': 'VariableDecl', 'name': 'category_line', 'range': [1158, 1161], 'children': []}, {'type': 'ForStatement', 'name': 'for line_num, line_content in enumerate(lines):', 'range': [1163, 1511], 'children': [{'type': 'VariableDecl', 'name': 'line_num, line_content', 'range': [1164, 1171], 'children': []}, {'type': 'CallExpression', 'name': 'enumerate', 'range': [1168, 1171], 'children': [{'type': 'ArgumentList', 'name': 'lines', 'range': [1169, 1171], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [1172, 1511], 'children': [{'type': 'VariableDecl', 'name': 'category_title_match', 'range': [1175, 1183], 'children': [{'type': 'CallExpression', 'name': 'match', 'range': [1177, 1183], 'children': [{'type': 'ArgumentList', 'name': 'line_content', 'range': [1180, 1182], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if category_title_match:', 'range': [1184, 1199], 'children': [{'type': 'ExpressionStatement', 'name': 'category_title_in_index.append(category_title_match.group(1))', 'range': [1188, 1198], 'children': [{'type': 'CallExpression', 'name': 'append', 'range': [1189, 1198], 'children': [{'type': 'ArgumentList', 'name': 'category_title_match.group(1)', 'range': [1191, 1197], 'children': []}]}]}]}, {'type': 'IfStatement', 'name': 'if line_content.startswith(anchor):', 'range': [1212, 1281], 'children': [{'type': 'VariableDecl', 'name': 'category_match', 'range': [1221, 1229], 'children': [{'type': 'CallExpression', 'name': 'match', 'range': [1223, 1229], 'children': [{'type': 'ArgumentList', 'name': 'line_content', 'range': [1226, 1228], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if category_match:', 'range': [1230, 1281], 'children': [{'type': 'IfStatement', 'name': 'if category_match.group(1) not in category_title_in_index:', 'range': [1234, 1262], 'children': [{'type': 'VariableDecl', 'name': 'err_msg', 'range': [1246, 1255], 'children': [{'type': 'CallExpression', 'name': 'error_message', 'range': [1248, 1255], 'children': [{'type': 'ArgumentList', 'name': "line_num, f'category header ({category_match.group(1)}) not added to Index section'", 'range': [1249, 1254], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'err_msgs.append(err_msg)', 'range': [1256, 1261], 'children': [{'type': 'CallExpression', 'name': 'append', 'range': [1257, 1261], 'children': [{'type': 'ArgumentList', 'name': 'err_msg', 'range': [1259, 1261], 'children': []}]}]}]}, {'type': 'ElseStatement', 'name': 'else:', 'range': [1263, 1281], 'children': [{'type': 'VariableDecl', 'name': 'err_msg', 'range': [1266, 1274], 'children': [{'type': 'CallExpression', 'name': 'error_message', 'range': [1268, 1274], 'children': [{'type': 'ArgumentList', 'name': "line_num, 'category header is not formatted correctly'", 'range': [1269, 1273], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'err_msgs.append(err_msg)', 'range': [1275, 1280], 'children': [{'type': 'CallExpression', 'name': 'append', 'range': [1276, 1280], 'children': [{'type': 'ArgumentList', 'name': 'err_msg', 'range': [1278, 1280], 'children': []}]}]}]}]}]}, {'type': 'IfStatement', 'name': 'if num_in_category < min_entries_per_category:', 'range': [1283, 1305], 'children': [{'type': 'VariableDecl', 'name': 'err_msg', 'range': [1289, 1298], 'children': [{'type': 'CallExpression', 'name': 'error_message', 'range': [1291, 1298], 'children': [{'type': 'ArgumentList', 'name': "category_line, f'{category} category does not have the minimum {min_entries_per_category} entries (only has {num_in_category})'", 'range': [1292, 1297], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'err_msgs.append(err_msg)', 'range': [1299, 1304], 'children': [{'type': 'CallExpression', 'name': 'append', 'range': [1300, 1304], 'children': [{'type': 'ArgumentList', 'name': 'err_msg', 'range': [1302, 1304], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': "category = line_content.split(' ')[1]", 'range': [1307, 1318], 'children': [{'type': 'CallExpression', 'name': 'split', 'range': [1311, 1317], 'children': [{'type': 'ArgumentList', 'name': "' '", 'range': [1312, 1314], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'category_line = line_num', 'range': [1319, 1322], 'children': []}, {'type': 'ExpressionStatement', 'name': 'num_in_category = 0', 'range': [1323, 1326], 'children': []}, {'type': 'ContinueStatement', 'name': 'continue', 'range': [1327, 1328], 'children': []}, {'type': 'IfStatement', 'name': "if not line_content.startswith('|') or line_content.startswith('|---'):", 'range': [1340, 1358], 'children': [{'type': 'ContinueStatement', 'name': 'continue', 'range': [1357, 1358], 'children': []}]}, {'type': 'ExpressionStatement', 'name': 'num_in_category += 1', 'range': [1360, 1364], 'children': []}, {'type': 'VariableDecl', 'name': 'segments', 'range': [1365, 1378], 'children': [{'type': 'CallExpression', 'name': 'split', 'range': [1369, 1377], 'children': [{'type': 'ArgumentList', 'name': "'|'", 'range': [1370, 1372], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if len(segments) < num_segments:', 'range': [1380, 1407], 'children': [{'type': 'VariableDecl', 'name': 'err_msg', 'range': [1389, 1398], 'children': [{'type': 'CallExpression', 'name': 'error_message', 'range': [1391, 1398], 'children': [{'type': 'ArgumentList', 'name': "line_num, f'entry does not have all the required columns (have {len(segments)}, need {num_segments})'", 'range': [1392, 1397], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'err_msgs.append(err_msg)', 'range': [1399, 1404], 'children': [{'type': 'CallExpression', 'name': 'append', 'range': [1400, 1404], 'children': [{'type': 'ArgumentList', 'name': 'err_msg', 'range': [1402, 1404], 'children': []}]}]}, {'type': 'ContinueStatement', 'name': 'continue', 'range': [1405, 1407], 'children': []}]}, {'type': 'ForStatement', 'name': 'for segment in segments:', 'range': [1409, 1480], 'children': [{'type': 'VariableDecl', 'name': 'segment', 'range': [1410, 1413], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [1414, 1480], 'children': [{'type': 'IfStatement', 'name': 'if len(segment) - len(segment.lstrip()) != 1 or len(segment) - len(segment.rstrip()) != 1:', 'range': [1428, 1479], 'children': [{'type': 'VariableDecl', 'name': 'err_msg', 'range': [1464, 1471], 'children': [{'type': 'CallExpression', 'name': 'error_message', 'range': [1466, 1471], 'children': [{'type': 'ArgumentList', 'name': "line_num, 'each segment must start and end with exactly 1 space'", 'range': [1467, 1470], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'err_msgs.append(err_msg)', 'range': [1472, 1478], 'children': [{'type': 'CallExpression', 'name': 'append', 'range': [1473, 1478], 'children': [{'type': 'ArgumentList', 'name': 'err_msg', 'range': [1475, 1477], 'children': []}]}]}]}]}]}, {'type': 'ExpressionStatement', 'name': 'segments = [segment.strip() for segment in segments]', 'range': [1481, 1494], 'children': [{'type': 'ListComprehension', 'name': 'segment.strip() for segment in segments', 'range': [1484, 1493], 'children': []}]}, {'type': 'VariableDecl', 'name': 'entry_err_msgs', 'range': [1495, 1503], 'children': [{'type': 'CallExpression', 'name': 'check_entry', 'range': [1497, 1503], 'children': [{'type': 'ArgumentList', 'name': 'line_num, segments', 'range': [1498, 1502], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'err_msgs.extend(entry_err_msgs)', 'range': [1504, 1509], 'children': [{'type': 'CallExpression', 'name': 'extend', 'range': [1505, 1509], 'children': [{'type': 'ArgumentList', 'name': 'entry_err_msgs', 'range': [1507, 1509], 'children': []}]}]}]}]}, {'type': 'ReturnStatement', 'name': 'return err_msgs', 'range': [1512, 1514], 'children': []}]}]}]}
2025-01-08 09:33:27,857 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:33:42,503 - INFO - Step 4 result: {'nodes': [{'type': 'ImportDeclaration', 'name': 're', 'range': [14, 16], 'children': [{'type': 'ImportSpecifier', 'name': 're', 'range': [14, 16], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'sys', 'range': [17, 19], 'children': [{'type': 'ImportSpecifier', 'name': 'sys', 'range': [17, 19], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'punctuation', 'range': [20, 24], 'children': [{'type': 'ImportSpecifier', 'name': 'punctuation', 'range': [20, 24], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'List, Tuple, Dict', 'range': [25, 33], 'children': [{'type': 'ImportSpecifier', 'name': 'List', 'range': [25, 29], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Tuple', 'range': [29, 31], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Dict', 'range': [31, 33], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'punctuation', 'range': [57, 67], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [58, 67], 'children': [{'type': 'Identifier', 'name': 'punctuation', 'range': [57, 67], 'children': []}, {'type': 'CallExpression', 'name': 'replace', 'range': [61, 67], 'children': [{'type': 'Identifier', 'name': 'punctuation', 'range': [59, 67], 'children': []}, {'type': 'StringLiteral', 'name': "'()'", 'range': [63, 67], 'children': []}, {'type': 'StringLiteral', 'name': "''", 'range': [65, 67], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'anchor', 'range': [69, 72], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [70, 72], 'children': [{'type': 'Identifier', 'name': 'anchor', 'range': [69, 72], 'children': []}, {'type': 'StringLiteral', 'name': "'###'", 'range': [71, 72], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'auth_keys', 'range': [73, 86], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [74, 86], 'children': [{'type': 'Identifier', 'name': 'auth_keys', 'range': [73, 86], 'children': []}, {'type': 'ArrayExpression', 'name': '[]', 'range': [75, 86], 'children': [{'type': 'StringLiteral', 'name': "'apiKey'", 'range': [76, 86], 'children': []}, {'type': 'StringLiteral', 'name': "'OAuth'", 'range': [78, 86], 'children': []}, {'type': 'StringLiteral', 'name': "'X-Mashape-Key'", 'range': [80, 86], 'children': []}, {'type': 'StringLiteral', 'name': "'User-Agent'", 'range': [82, 86], 'children': []}, {'type': 'StringLiteral', 'name': "'No'", 'range': [84, 86], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'https_keys', 'range': [87, 94], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [88, 94], 'children': [{'type': 'Identifier', 'name': 'https_keys', 'range': [87, 94], 'children': []}, {'type': 'ArrayExpression', 'name': '[]', 'range': [89, 94], 'children': [{'type': 'StringLiteral', 'name': "'Yes'", 'range': [90, 94], 'children': []}, {'type': 'StringLiteral', 'name': "'No'", 'range': [92, 94], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'cors_keys', 'range': [95, 104], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [96, 104], 'children': [{'type': 'Identifier', 'name': 'cors_keys', 'range': [95, 104], 'children': []}, {'type': 'ArrayExpression', 'name': '[]', 'range': [97, 104], 'children': [{'type': 'StringLiteral', 'name': "'Yes'", 'range': [98, 104], 'children': []}, {'type': 'StringLiteral', 'name': "'No'", 'range': [100, 104], 'children': []}, {'type': 'StringLiteral', 'name': "'Unknown'", 'range': [102, 104], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'index_title', 'range': [106, 109], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [107, 109], 'children': [{'type': 'Identifier', 'name': 'index_title', 'range': [106, 109], 'children': []}, {'type': 'NumericLiteral', 'name': '0', 'range': [108, 109], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'index_desc', 'range': [110, 113], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [111, 113], 'children': [{'type': 'Identifier', 'name': 'index_desc', 'range': [110, 113], 'children': []}, {'type': 'NumericLiteral', 'name': '1', 'range': [112, 113], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'index_auth', 'range': [114, 117], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [115, 117], 'children': [{'type': 'Identifier', 'name': 'index_auth', 'range': [114, 117], 'children': []}, {'type': 'NumericLiteral', 'name': '2', 'range': [116, 117], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'index_https', 'range': [118, 121], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [119, 121], 'children': [{'type': 'Identifier', 'name': 'index_https', 'range': [118, 121], 'children': []}, {'type': 'NumericLiteral', 'name': '3', 'range': [120, 121], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'index_cors', 'range': [122, 125], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [123, 125], 'children': [{'type': 'Identifier', 'name': 'index_cors', 'range': [122, 125], 'children': []}, {'type': 'NumericLiteral', 'name': '4', 'range': [124, 125], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'num_segments', 'range': [127, 130], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [128, 130], 'children': [{'type': 'Identifier', 'name': 'num_segments', 'range': [127, 130], 'children': []}, {'type': 'NumericLiteral', 'name': '5', 'range': [129, 130], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'min_entries_per_category', 'range': [131, 134], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [132, 134], 'children': [{'type': 'Identifier', 'name': 'min_entries_per_category', 'range': [131, 134], 'children': []}, {'type': 'NumericLiteral', 'name': '3', 'range': [133, 134], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'max_description_length', 'range': [135, 138], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [136, 138], 'children': [{'type': 'Identifier', 'name': 'max_description_length', 'range': [135, 138], 'children': []}, {'type': 'NumericLiteral', 'name': '100', 'range': [137, 138], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'anchor_re', 'range': [140, 150], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [141, 150], 'children': [{'type': 'Identifier', 'name': 'anchor_re', 'range': [140, 150], 'children': []}, {'type': 'CallExpression', 'name': 'compile', 'range': [144, 150], 'children': [{'type': 'Identifier', 'name': 're', 'range': [142, 150], 'children': []}, {'type': 'BinaryExpression', 'name': '+', 'range': [147, 150], 'children': [{'type': 'Identifier', 'name': 'anchor', 'range': [146, 150], 'children': []}, {'type': 'StringLiteral', 'name': "'\\s(.+)'", 'range': [148, 150], 'children': []}]}]}]}]}, {'type': 'VariableDeclaration', 'name': 'category_title_in_index_re', 'range': [151, 159], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [152, 159], 'children': [{'type': 'Identifier', 'name': 'category_title_in_index_re', 'range': [151, 159], 'children': []}, {'type': 'CallExpression', 'name': 'compile', 'range': [155, 159], 'children': [{'type': 'Identifier', 'name': 're', 'range': [153, 159], 'children': []}, {'type': 'StringLiteral', 'name': "'\\*\\s\\[(.*)\\]'", 'range': [157, 159], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'link_re', 'range': [160, 168], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [161, 168], 'children': [{'type': 'Identifier', 'name': 'link_re', 'range': [160, 168], 'children': []}, {'type': 'CallExpression', 'name': 'compile', 'range': [164, 168], 'children': [{'type': 'Identifier', 'name': 're', 'range': [162, 168], 'children': []}, {'type': 'StringLiteral', 'name': "'\\[(.+)\\]\\((http.*)\\)'", 'range': [166, 168], 'children': []}]}]}]}, {'type': 'TypeAliasDeclaration', 'name': 'APIList', 'range': [174, 180], 'children': [{'type': 'TypeReference', 'name': 'List', 'range': [176, 180], 'children': [{'type': 'TypeReference', 'name': 'str', 'range': [178, 180], 'children': []}]}]}, {'type': 'TypeAliasDeclaration', 'name': 'Categories', 'range': [181, 189], 'children': [{'type': 'TypeReference', 'name': 'Dict', 'range': [183, 189], 'children': [{'type': 'TypeReference', 'name': 'str', 'range': [185, 189], 'children': []}, {'type': 'TypeReference', 'name': 'APIList', 'range': [187, 189], 'children': []}]}]}, {'type': 'TypeAliasDeclaration', 'name': 'CategoriesLineNumber', 'range': [190, 198], 'children': [{'type': 'TypeReference', 'name': 'Dict', 'range': [192, 198], 'children': [{'type': 'TypeReference', 'name': 'str', 'range': [194, 198], 'children': []}, {'type': 'TypeReference', 'name': 'int', 'range': [196, 198], 'children': []}]}]}]}
2025-01-08 09:33:42,504 - INFO - Starting Step 5: Final AST combination
2025-01-08 09:35:55,161 - INFO - Step 5 result: {'type': 'Program', 'name': 'check_file_format', 'range': [1103, 1515], 'children': [{'type': 'FunctionDecl', 'name': 'check_file_format', 'range': [1103, 1515], 'children': [{'type': 'ParameterList', 'name': 'lines', 'range': [1105, 1112], 'children': [{'type': 'Parameter', 'name': 'lines', 'range': [1106, 1111], 'children': [{'type': 'TypeAnnotation', 'name': 'List[str]', 'range': [1107, 1111], 'children': []}]}]}, {'type': 'ReturnType', 'name': 'List[str]', 'range': [1113, 1118], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [1119, 1515], 'children': [{'type': 'VariableDecl', 'name': 'err_msgs', 'range': [1122, 1125], 'children': []}, {'type': 'VariableDecl', 'name': 'category_title_in_index', 'range': [1127, 1130], 'children': []}, {'type': 'VariableDecl', 'name': 'alphabetical_err_msgs', 'range': [1133, 1138], 'children': [{'type': 'CallExpression', 'name': 'check_alphabetical_order', 'range': [1135, 1138], 'children': [{'type': 'ArgumentList', 'name': 'lines', 'range': [1136, 1138], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'err_msgs.extend(alphabetical_err_msgs)', 'range': [1140, 1145], 'children': [{'type': 'CallExpression', 'name': 'extend', 'range': [1141, 1145], 'children': [{'type': 'ArgumentList', 'name': 'alphabetical_err_msgs', 'range': [1143, 1145], 'children': []}]}]}, {'type': 'VariableDecl', 'name': 'num_in_category', 'range': [1148, 1153], 'children': [{'type': 'BinaryExpression', 'name': 'min_entries_per_category + 1', 'range': [1150, 1152], 'children': []}]}, {'type': 'VariableDecl', 'name': 'category', 'range': [1154, 1157], 'children': []}, {'type': 'VariableDecl', 'name': 'category_line', 'range': [1158, 1161], 'children': []}, {'type': 'ForStatement', 'name': 'for line_num, line_content in enumerate(lines):', 'range': [1163, 1511], 'children': [{'type': 'VariableDecl', 'name': 'line_num, line_content', 'range': [1164, 1171], 'children': []}, {'type': 'CallExpression', 'name': 'enumerate', 'range': [1168, 1171], 'children': [{'type': 'ArgumentList', 'name': 'lines', 'range': [1169, 1171], 'children': []}]}, {'type': 'BlockStatement', 'name': '', 'range': [1172, 1511], 'children': [{'type': 'VariableDecl', 'name': 'category_title_match', 'range': [1175, 1183], 'children': [{'type': 'CallExpression', 'name': 'match', 'range': [1177, 1183], 'children': [{'type': 'ArgumentList', 'name': 'line_content', 'range': [1180, 1182], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if category_title_match:', 'range': [1184, 1199], 'children': [{'type': 'ExpressionStatement', 'name': 'category_title_in_index.append(category_title_match.group(1))', 'range': [1188, 1198], 'children': [{'type': 'CallExpression', 'name': 'append', 'range': [1189, 1198], 'children': [{'type': 'ArgumentList', 'name': 'category_title_match.group(1)', 'range': [1191, 1197], 'children': []}]}]}]}, {'type': 'IfStatement', 'name': 'if line_content.startswith(anchor):', 'range': [1212, 1281], 'children': [{'type': 'VariableDecl', 'name': 'category_match', 'range': [1221, 1229], 'children': [{'type': 'CallExpression', 'name': 'match', 'range': [1223, 1229], 'children': [{'type': 'ArgumentList', 'name': 'line_content', 'range': [1226, 1228], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if category_match:', 'range': [1230, 1281], 'children': [{'type': 'IfStatement', 'name': 'if category_match.group(1) not in category_title_in_index:', 'range': [1234, 1262], 'children': [{'type': 'VariableDecl', 'name': 'err_msg', 'range': [1246, 1255], 'children': [{'type': 'CallExpression', 'name': 'error_message', 'range': [1248, 1255], 'children': [{'type': 'ArgumentList', 'name': "line_num, f'category header ({category_match.group(1)}) not added to Index section'", 'range': [1249, 1254], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'err_msgs.append(err_msg)', 'range': [1256, 1261], 'children': [{'type': 'CallExpression', 'name': 'append', 'range': [1257, 1261], 'children': [{'type': 'ArgumentList', 'name': 'err_msg', 'range': [1259, 1261], 'children': []}]}]}]}, {'type': 'ElseStatement', 'name': 'else:', 'range': [1263, 1281], 'children': [{'type': 'VariableDecl', 'name': 'err_msg', 'range': [1266, 1274], 'children': [{'type': 'CallExpression', 'name': 'error_message', 'range': [1268, 1274], 'children': [{'type': 'ArgumentList', 'name': "line_num, 'category header is not formatted correctly'", 'range': [1269, 1273], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'err_msgs.append(err_msg)', 'range': [1275, 1280], 'children': [{'type': 'CallExpression', 'name': 'append', 'range': [1276, 1280], 'children': [{'type': 'ArgumentList', 'name': 'err_msg', 'range': [1278, 1280], 'children': []}]}]}]}]}]}, {'type': 'IfStatement', 'name': 'if num_in_category < min_entries_per_category:', 'range': [1283, 1305], 'children': [{'type': 'VariableDecl', 'name': 'err_msg', 'range': [1289, 1298], 'children': [{'type': 'CallExpression', 'name': 'error_message', 'range': [1291, 1298], 'children': [{'type': 'ArgumentList', 'name': "category_line, f'{category} category does not have the minimum {min_entries_per_category} entries (only has {num_in_category})'", 'range': [1292, 1297], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'err_msgs.append(err_msg)', 'range': [1299, 1304], 'children': [{'type': 'CallExpression', 'name': 'append', 'range': [1300, 1304], 'children': [{'type': 'ArgumentList', 'name': 'err_msg', 'range': [1302, 1304], 'children': []}]}]}]}, {'type': 'ExpressionStatement', 'name': "category = line_content.split(' ')[1]", 'range': [1307, 1318], 'children': [{'type': 'CallExpression', 'name': 'split', 'range': [1311, 1317], 'children': [{'type': 'ArgumentList', 'name': "' '", 'range': [1312, 1314], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'category_line = line_num', 'range': [1319, 1322], 'children': []}, {'type': 'ExpressionStatement', 'name': 'num_in_category = 0', 'range': [1323, 1326], 'children': []}, {'type': 'ContinueStatement', 'name': 'continue', 'range': [1327, 1328], 'children': []}, {'type': 'IfStatement', 'name': "if not line_content.startswith('|') or line_content.startswith('|---'):", 'range': [1340, 1358], 'children': [{'type': 'ContinueStatement', 'name': 'continue', 'range': [1357, 1358], 'children': []}]}, {'type': 'ExpressionStatement', 'name': 'num_in_category += 1', 'range': [1360, 1364], 'children': []}, {'type': 'VariableDecl', 'name': 'segments', 'range': [1365, 1378], 'children': [{'type': 'CallExpression', 'name': 'split', 'range': [1369, 1377], 'children': [{'type': 'ArgumentList', 'name': "'|'", 'range': [1370, 1372], 'children': []}]}]}, {'type': 'IfStatement', 'name': 'if len(segments) < num_segments:', 'range': [1380, 1407], 'children': [{'type': 'VariableDecl', 'name': 'err_msg', 'range': [1389, 1398], 'children': [{'type': 'CallExpression', 'name': 'error_message', 'range': [1391, 1398], 'children': [{'type': 'ArgumentList', 'name': "line_num, f'entry does not have all the required columns (have {len(segments)}, need {num_segments})'", 'range': [1392, 1397], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'err_msgs.append(err_msg)', 'range': [1399, 1404], 'children': [{'type': 'CallExpression', 'name': 'append', 'range': [1400, 1404], 'children': [{'type': 'ArgumentList', 'name': 'err_msg', 'range': [1402, 1404], 'children': []}]}]}, {'type': 'ContinueStatement', 'name': 'continue', 'range': [1405, 1407], 'children': []}]}, {'type': 'ForStatement', 'name': 'for segment in segments:', 'range': [1409, 1480], 'children': [{'type': 'VariableDecl', 'name': 'segment', 'range': [1410, 1413], 'children': []}, {'type': 'BlockStatement', 'name': '', 'range': [1414, 1480], 'children': [{'type': 'IfStatement', 'name': 'if len(segment) - len(segment.lstrip()) != 1 or len(segment) - len(segment.rstrip()) != 1:', 'range': [1428, 1479], 'children': [{'type': 'VariableDecl', 'name': 'err_msg', 'range': [1464, 1471], 'children': [{'type': 'CallExpression', 'name': 'error_message', 'range': [1466, 1471], 'children': [{'type': 'ArgumentList', 'name': "line_num, 'each segment must start and end with exactly 1 space'", 'range': [1467, 1470], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'err_msgs.append(err_msg)', 'range': [1472, 1478], 'children': [{'type': 'CallExpression', 'name': 'append', 'range': [1473, 1478], 'children': [{'type': 'ArgumentList', 'name': 'err_msg', 'range': [1475, 1477], 'children': []}]}]}]}]}]}, {'type': 'ExpressionStatement', 'name': 'segments = [segment.strip() for segment in segments]', 'range': [1481, 1494], 'children': [{'type': 'ListComprehension', 'name': 'segment.strip() for segment in segments', 'range': [1484, 1493], 'children': []}]}, {'type': 'VariableDecl', 'name': 'entry_err_msgs', 'range': [1495, 1503], 'children': [{'type': 'CallExpression', 'name': 'check_entry', 'range': [1497, 1503], 'children': [{'type': 'ArgumentList', 'name': 'line_num, segments', 'range': [1498, 1502], 'children': []}]}]}, {'type': 'ExpressionStatement', 'name': 'err_msgs.extend(entry_err_msgs)', 'range': [1504, 1509], 'children': [{'type': 'CallExpression', 'name': 'extend', 'range': [1505, 1509], 'children': [{'type': 'ArgumentList', 'name': 'entry_err_msgs', 'range': [1507, 1509], 'children': []}]}]}]}]}, {'type': 'ReturnStatement', 'name': 'return err_msgs', 'range': [1512, 1514], 'children': []}]}]}]}
2025-01-08 09:35:55,162 - INFO - Completed main AST analysis flow
2025-01-08 09:35:55,162 - INFO - Successfully processed chunk
2025-01-08 09:35:58,826 - INFO - Step 5 result: {'type': 'Program', 'name': 'MainProgram', 'range': [0, 198], 'children': [{'type': 'ImportDeclaration', 'name': 're', 'range': [14, 16], 'children': [{'type': 'ImportSpecifier', 'name': 're', 'range': [14, 16], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'sys', 'range': [17, 19], 'children': [{'type': 'ImportSpecifier', 'name': 'sys', 'range': [17, 19], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'punctuation', 'range': [20, 24], 'children': [{'type': 'ImportSpecifier', 'name': 'punctuation', 'range': [20, 24], 'children': []}]}, {'type': 'ImportDeclaration', 'name': 'List, Tuple, Dict', 'range': [25, 33], 'children': [{'type': 'ImportSpecifier', 'name': 'List', 'range': [25, 29], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Tuple', 'range': [29, 31], 'children': []}, {'type': 'ImportSpecifier', 'name': 'Dict', 'range': [31, 33], 'children': []}]}, {'type': 'VariableDeclaration', 'name': 'punctuation', 'range': [57, 67], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [58, 67], 'children': [{'type': 'Identifier', 'name': 'punctuation', 'range': [57, 67], 'children': []}, {'type': 'CallExpression', 'name': 'replace', 'range': [61, 67], 'children': [{'type': 'Identifier', 'name': 'punctuation', 'range': [59, 67], 'children': []}, {'type': 'StringLiteral', 'name': "'()'", 'range': [63, 67], 'children': []}, {'type': 'StringLiteral', 'name': "''", 'range': [65, 67], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'anchor', 'range': [69, 72], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [70, 72], 'children': [{'type': 'Identifier', 'name': 'anchor', 'range': [69, 72], 'children': []}, {'type': 'StringLiteral', 'name': "'###'", 'range': [71, 72], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'auth_keys', 'range': [73, 86], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [74, 86], 'children': [{'type': 'Identifier', 'name': 'auth_keys', 'range': [73, 86], 'children': []}, {'type': 'ArrayExpression', 'name': '[]', 'range': [75, 86], 'children': [{'type': 'StringLiteral', 'name': "'apiKey'", 'range': [76, 86], 'children': []}, {'type': 'StringLiteral', 'name': "'OAuth'", 'range': [78, 86], 'children': []}, {'type': 'StringLiteral', 'name': "'X-Mashape-Key'", 'range': [80, 86], 'children': []}, {'type': 'StringLiteral', 'name': "'User-Agent'", 'range': [82, 86], 'children': []}, {'type': 'StringLiteral', 'name': "'No'", 'range': [84, 86], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'https_keys', 'range': [87, 94], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [88, 94], 'children': [{'type': 'Identifier', 'name': 'https_keys', 'range': [87, 94], 'children': []}, {'type': 'ArrayExpression', 'name': '[]', 'range': [89, 94], 'children': [{'type': 'StringLiteral', 'name': "'Yes'", 'range': [90, 94], 'children': []}, {'type': 'StringLiteral', 'name': "'No'", 'range': [92, 94], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'cors_keys', 'range': [95, 104], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [96, 104], 'children': [{'type': 'Identifier', 'name': 'cors_keys', 'range': [95, 104], 'children': []}, {'type': 'ArrayExpression', 'name': '[]', 'range': [97, 104], 'children': [{'type': 'StringLiteral', 'name': "'Yes'", 'range': [98, 104], 'children': []}, {'type': 'StringLiteral', 'name': "'No'", 'range': [100, 104], 'children': []}, {'type': 'StringLiteral', 'name': "'Unknown'", 'range': [102, 104], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'index_title', 'range': [106, 109], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [107, 109], 'children': [{'type': 'Identifier', 'name': 'index_title', 'range': [106, 109], 'children': []}, {'type': 'NumericLiteral', 'name': '0', 'range': [108, 109], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'index_desc', 'range': [110, 113], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [111, 113], 'children': [{'type': 'Identifier', 'name': 'index_desc', 'range': [110, 113], 'children': []}, {'type': 'NumericLiteral', 'name': '1', 'range': [112, 113], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'index_auth', 'range': [114, 117], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [115, 117], 'children': [{'type': 'Identifier', 'name': 'index_auth', 'range': [114, 117], 'children': []}, {'type': 'NumericLiteral', 'name': '2', 'range': [116, 117], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'index_https', 'range': [118, 121], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [119, 121], 'children': [{'type': 'Identifier', 'name': 'index_https', 'range': [118, 121], 'children': []}, {'type': 'NumericLiteral', 'name': '3', 'range': [120, 121], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'index_cors', 'range': [122, 125], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [123, 125], 'children': [{'type': 'Identifier', 'name': 'index_cors', 'range': [122, 125], 'children': []}, {'type': 'NumericLiteral', 'name': '4', 'range': [124, 125], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'num_segments', 'range': [127, 130], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [128, 130], 'children': [{'type': 'Identifier', 'name': 'num_segments', 'range': [127, 130], 'children': []}, {'type': 'NumericLiteral', 'name': '5', 'range': [129, 130], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'min_entries_per_category', 'range': [131, 134], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [132, 134], 'children': [{'type': 'Identifier', 'name': 'min_entries_per_category', 'range': [131, 134], 'children': []}, {'type': 'NumericLiteral', 'name': '3', 'range': [133, 134], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'max_description_length', 'range': [135, 138], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [136, 138], 'children': [{'type': 'Identifier', 'name': 'max_description_length', 'range': [135, 138], 'children': []}, {'type': 'NumericLiteral', 'name': '100', 'range': [137, 138], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'anchor_re', 'range': [140, 150], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [141, 150], 'children': [{'type': 'Identifier', 'name': 'anchor_re', 'range': [140, 150], 'children': []}, {'type': 'CallExpression', 'name': 'compile', 'range': [144, 150], 'children': [{'type': 'Identifier', 'name': 're', 'range': [142, 150], 'children': []}, {'type': 'BinaryExpression', 'name': '+', 'range': [147, 150], 'children': [{'type': 'Identifier', 'name': 'anchor', 'range': [146, 150], 'children': []}, {'type': 'StringLiteral', 'name': "'\\s(.+)'", 'range': [148, 150], 'children': []}]}]}]}]}, {'type': 'VariableDeclaration', 'name': 'category_title_in_index_re', 'range': [151, 159], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [152, 159], 'children': [{'type': 'Identifier', 'name': 'category_title_in_index_re', 'range': [151, 159], 'children': []}, {'type': 'CallExpression', 'name': 'compile', 'range': [155, 159], 'children': [{'type': 'Identifier', 'name': 're', 'range': [153, 159], 'children': []}, {'type': 'StringLiteral', 'name': "'\\*\\s\\[(.*)\\]'", 'range': [157, 159], 'children': []}]}]}]}, {'type': 'VariableDeclaration', 'name': 'link_re', 'range': [160, 168], 'children': [{'type': 'AssignmentExpression', 'name': '=', 'range': [161, 168], 'children': [{'type': 'Identifier', 'name': 'link_re', 'range': [160, 168], 'children': []}, {'type': 'CallExpression', 'name': 'compile', 'range': [164, 168], 'children': [{'type': 'Identifier', 'name': 're', 'range': [162, 168], 'children': []}, {'type': 'StringLiteral', 'name': "'\\[(.+)\\]\\((http.*)\\)'", 'range': [166, 168], 'children': []}]}]}]}, {'type': 'TypeAliasDeclaration', 'name': 'APIList', 'range': [174, 180], 'children': [{'type': 'TypeReference', 'name': 'List', 'range': [176, 180], 'children': [{'type': 'TypeReference', 'name': 'str', 'range': [178, 180], 'children': []}]}]}, {'type': 'TypeAliasDeclaration', 'name': 'Categories', 'range': [181, 189], 'children': [{'type': 'TypeReference', 'name': 'Dict', 'range': [183, 189], 'children': [{'type': 'TypeReference', 'name': 'str', 'range': [185, 189], 'children': []}, {'type': 'TypeReference', 'name': 'APIList', 'range': [187, 189], 'children': []}]}]}, {'type': 'TypeAliasDeclaration', 'name': 'CategoriesLineNumber', 'range': [190, 198], 'children': [{'type': 'TypeReference', 'name': 'Dict', 'range': [192, 198], 'children': [{'type': 'TypeReference', 'name': 'str', 'range': [194, 198], 'children': []}, {'type': 'TypeReference', 'name': 'int', 'range': [196, 198], 'children': []}]}]}]}
2025-01-08 09:35:58,826 - INFO - Completed main AST analysis flow
2025-01-08 09:35:58,827 - INFO - Successfully processed chunk
2025-01-08 09:35:58,906 - INFO - Starting code generation from AST
2025-01-08 10:06:00,562 - ERROR - Error in get_code_from_ast: Expecting value: line 30 column 1 (char 29)
2025-01-08 10:06:00,563 - INFO - Starting static code similarity comparison
2025-01-08 10:06:00,569 - INFO - Static similarity result: {'final_score': 20.26, 'length_similarity': 0.0, 'token_similarity': 0.0, 'structure_similarity': 0.0, 'function_similarity': 100, 'complexity_similarity': 2.63, 'variable_similarity': 100}
