2025-01-08 10:27:27,567 - INFO - Processing sample 189
2025-01-08 10:27:27,568 - INFO - Starting Step 0: Splitting code into top-level declarations
2025-01-08 10:27:33,365 - INFO - Successfully split code into 2 top-level declarations
2025-01-08 10:27:33,374 - INFO - Processing chunk #0 (size=33 chars, start_index=0)
2025-01-08 10:27:33,378 - INFO - Processing chunk with 33 chars starting at index 0
2025-01-08 10:27:33,378 - INFO - Starting main AST analysis flow
2025-01-08 10:27:33,378 - INFO - Tokenized code into 7 tokens
2025-01-08 10:27:33,378 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:33,379 - INFO - Processing chunk #1 (size=780 chars, start_index=7)
2025-01-08 10:27:33,379 - INFO - Processing chunk with 780 chars starting at index 7
2025-01-08 10:27:33,379 - INFO - Starting main AST analysis flow
2025-01-08 10:27:33,380 - INFO - Tokenized code into 131 tokens
2025-01-08 10:27:33,380 - INFO - Starting Step 1: Initial AST node identification
2025-01-08 10:27:36,348 - INFO - Step 1 result: {'type': 'Program', 'name': '', 'range': [0, 6], 'children': []}
2025-01-08 10:27:36,364 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:27:41,924 - INFO - Step 1 result: {'type': 'Program', 'name': 'LogConfig', 'range': [7, 137], 'children': [{'type': 'ClassDeclaration', 'name': 'LogConfig', 'range': [7, 137], 'children': [{'type': 'VariableDeclaration', 'name': 'LOGGER_NAME', 'range': [19, 24], 'children': []}, {'type': 'VariableDeclaration', 'name': 'LOG_FORMAT', 'range': [25, 30], 'children': []}, {'type': 'VariableDeclaration', 'name': 'LOG_LEVEL', 'range': [31, 36], 'children': []}, {'type': 'VariableDeclaration', 'name': 'version', 'range': [42, 47], 'children': []}, {'type': 'VariableDeclaration', 'name': 'disable_existing_loggers', 'range': [48, 53], 'children': []}, {'type': 'VariableDeclaration', 'name': 'formatters', 'range': [54, 83], 'children': []}, {'type': 'VariableDeclaration', 'name': 'handlers', 'range': [84, 113], 'children': []}, {'type': 'VariableDeclaration', 'name': 'loggers', 'range': [114, 136], 'children': []}]}]}
2025-01-08 10:27:41,927 - INFO - Starting Step 2: Detailed AST construction
2025-01-08 10:27:44,957 - INFO - Step 2 result: {'type': 'Program', 'name': '', 'range': [0, 6], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 3], 'children': [{'type': 'FromImport', 'name': 'pydantic', 'range': [0, 1], 'children': []}, {'type': 'ImportedItem', 'name': 'BaseModel', 'range': [3, 3], 'children': []}]}]}
2025-01-08 10:27:44,958 - INFO - Starting Step 3: AST simplification
2025-01-08 10:27:59,399 - INFO - Step 3 result: {'type': 'Program', 'name': '', 'range': [0, 6], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 3], 'children': [{'type': 'FromImport', 'name': 'pydantic', 'range': [0, 1], 'children': []}, {'type': 'ImportedItem', 'name': 'BaseModel', 'range': [3, 3], 'children': []}]}]}
2025-01-08 10:27:59,399 - INFO - Starting Step 4: AST normalization
2025-01-08 10:28:12,105 - INFO - Step 4 result: {'type': 'Program', 'name': '', 'range': [0, 6], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 3], 'children': [{'type': 'ModuleSpecifier', 'name': 'pydantic', 'range': [0, 1], 'children': []}, {'type': 'ImportedDefault', 'name': 'BaseModel', 'range': [3, 3], 'children': []}]}]}
2025-01-08 10:28:12,105 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:28:20,704 - INFO - Step 5 result: {'type': 'Program', 'name': '', 'range': [0, 6], 'children': [{'type': 'ImportDeclaration', 'name': '', 'range': [0, 3], 'children': [{'type': 'ModuleSpecifier', 'name': 'pydantic', 'range': [0, 1], 'children': []}, {'type': 'ImportedDefault', 'name': 'BaseModel', 'range': [3, 3], 'children': []}]}]}
2025-01-08 10:28:20,704 - INFO - Completed main AST analysis flow
2025-01-08 10:28:20,704 - INFO - Successfully processed chunk
2025-01-08 10:28:34,270 - INFO - Step 2 result: {'type': 'Program', 'name': 'LogConfig', 'range': [7, 137], 'children': [{'type': 'ClassDeclaration', 'name': 'LogConfig', 'range': [7, 137], 'children': [{'type': 'VariableDeclaration', 'name': 'LOGGER_NAME', 'range': [19, 24], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [21, 21], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [22, 22], 'children': [{'type': 'StringLiteral', 'name': '"marketplace"', 'range': [23, 23], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'LOG_FORMAT', 'range': [25, 30], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [27, 27], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [28, 28], 'children': [{'type': 'StringLiteral', 'name': '"%(levelprefix)s | %(asctime)s | %(message)s"', 'range': [29, 29], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'LOG_LEVEL', 'range': [31, 36], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [33, 33], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [34, 34], 'children': [{'type': 'StringLiteral', 'name': '"DEBUG"', 'range': [35, 35], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'version', 'range': [42, 47], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [44, 44], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [45, 45], 'children': [{'type': 'NumericLiteral', 'name': '1', 'range': [46, 46], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'disable_existing_loggers', 'range': [48, 53], 'children': [{'type': 'TypeAnnotation', 'name': 'bool', 'range': [50, 50], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [51, 51], 'children': [{'type': 'BooleanLiteral', 'name': 'False', 'range': [52, 52], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'formatters', 'range': [54, 83], 'children': [{'type': 'TypeAnnotation', 'name': 'dict', 'range': [56, 56], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [57, 57], 'children': [{'type': 'ObjectLiteral', 'name': '{', 'range': [58, 82], 'children': [{'type': 'Property', 'name': '"default"', 'range': [60, 79], 'children': [{'type': 'ObjectLiteral', 'name': '{', 'range': [62, 79], 'children': [{'type': 'Property', 'name': '"()"', 'range': [64, 66], 'children': [{'type': 'StringLiteral', 'name': '"uvicorn.logging.DefaultFormatter"', 'range': [66, 66], 'children': []}]}, {'type': 'Property', 'name': '"fmt"', 'range': [69, 71], 'children': [{'type': 'Identifier', 'name': 'LOG_FORMAT', 'range': [71, 71], 'children': []}]}, {'type': 'Property', 'name': '"datefmt"', 'range': [74, 76], 'children': [{'type': 'StringLiteral', 'name': '"%Y-%m-%d %H:%M:%S"', 'range': [76, 76], 'children': []}]}]}]}]}]}]}, {'type': 'VariableDeclaration', 'name': 'handlers', 'range': [84, 113], 'children': [{'type': 'TypeAnnotation', 'name': 'dict', 'range': [86, 86], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [87, 87], 'children': [{'type': 'ObjectLiteral', 'name': '{', 'range': [88, 112], 'children': [{'type': 'Property', 'name': '"default"', 'range': [90, 109], 'children': [{'type': 'ObjectLiteral', 'name': '{', 'range': [92, 109], 'children': [{'type': 'Property', 'name': '"formatter"', 'range': [94, 96], 'children': [{'type': 'StringLiteral', 'name': '"default"', 'range': [96, 96], 'children': []}]}, {'type': 'Property', 'name': '"class"', 'range': [99, 101], 'children': [{'type': 'StringLiteral', 'name': '"logging.StreamHandler"', 'range': [101, 101], 'children': []}]}, {'type': 'Property', 'name': '"stream"', 'range': [104, 106], 'children': [{'type': 'StringLiteral', 'name': '"ext://sys.stderr"', 'range': [106, 106], 'children': []}]}]}]}]}]}]}, {'type': 'VariableDeclaration', 'name': 'loggers', 'range': [114, 136], 'children': [{'type': 'TypeAnnotation', 'name': 'dict', 'range': [116, 116], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [117, 117], 'children': [{'type': 'ObjectLiteral', 'name': '{', 'range': [118, 135], 'children': [{'type': 'Property', 'name': 'LOGGER_NAME', 'range': [120, 132], 'children': [{'type': 'ObjectLiteral', 'name': '{', 'range': [122, 132], 'children': [{'type': 'Property', 'name': '"handlers"', 'range': [123, 127], 'children': [{'type': 'ArrayLiteral', 'name': '[', 'range': [125, 127], 'children': [{'type': 'StringLiteral', 'name': '"default"', 'range': [126, 126], 'children': []}]}]}, {'type': 'Property', 'name': '"level"', 'range': [129, 131], 'children': [{'type': 'Identifier', 'name': 'LOG_LEVEL', 'range': [131, 131], 'children': []}]}]}]}]}]}]}]}]}
2025-01-08 10:28:34,270 - INFO - Starting Step 3: AST simplification
2025-01-08 10:29:12,781 - INFO - Step 3 result: {'type': 'Program', 'name': 'LogConfig', 'range': [7, 137], 'children': [{'type': 'ClassDeclaration', 'name': 'LogConfig', 'range': [7, 137], 'children': [{'type': 'VariableDeclaration', 'name': 'LOGGER_NAME', 'range': [19, 24], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [21, 21], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [22, 22], 'children': [{'type': 'StringLiteral', 'name': '"marketplace"', 'range': [23, 23], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'LOG_FORMAT', 'range': [25, 30], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [27, 27], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [28, 28], 'children': [{'type': 'StringLiteral', 'name': '"%(levelprefix)s | %(asctime)s | %(message)s"', 'range': [29, 29], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'LOG_LEVEL', 'range': [31, 36], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [33, 33], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [34, 34], 'children': [{'type': 'StringLiteral', 'name': '"DEBUG"', 'range': [35, 35], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'version', 'range': [42, 47], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [44, 44], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [45, 45], 'children': [{'type': 'NumericLiteral', 'name': '1', 'range': [46, 46], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'disable_existing_loggers', 'range': [48, 53], 'children': [{'type': 'TypeAnnotation', 'name': 'bool', 'range': [50, 50], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [51, 51], 'children': [{'type': 'BooleanLiteral', 'name': 'False', 'range': [52, 52], 'children': []}]}]}, {'type': 'VariableDeclaration', 'name': 'formatters', 'range': [54, 83], 'children': [{'type': 'TypeAnnotation', 'name': 'dict', 'range': [56, 56], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [57, 57], 'children': [{'type': 'ObjectLiteral', 'name': '{', 'range': [58, 82], 'children': [{'type': 'Property', 'name': '"default"', 'range': [60, 79], 'children': [{'type': 'ObjectLiteral', 'name': '{', 'range': [62, 79], 'children': [{'type': 'Property', 'name': '"()"', 'range': [64, 66], 'children': [{'type': 'StringLiteral', 'name': '"uvicorn.logging.DefaultFormatter"', 'range': [66, 66], 'children': []}]}, {'type': 'Property', 'name': '"fmt"', 'range': [69, 71], 'children': [{'type': 'Identifier', 'name': 'LOG_FORMAT', 'range': [71, 71], 'children': []}]}, {'type': 'Property', 'name': '"datefmt"', 'range': [74, 76], 'children': [{'type': 'StringLiteral', 'name': '"%Y-%m-%d %H:%M:%S"', 'range': [76, 76], 'children': []}]}]}]}]}]}]}, {'type': 'VariableDeclaration', 'name': 'handlers', 'range': [84, 113], 'children': [{'type': 'TypeAnnotation', 'name': 'dict', 'range': [86, 86], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [87, 87], 'children': [{'type': 'ObjectLiteral', 'name': '{', 'range': [88, 112], 'children': [{'type': 'Property', 'name': '"default"', 'range': [90, 109], 'children': [{'type': 'ObjectLiteral', 'name': '{', 'range': [92, 109], 'children': [{'type': 'Property', 'name': '"formatter"', 'range': [94, 96], 'children': [{'type': 'StringLiteral', 'name': '"default"', 'range': [96, 96], 'children': []}]}, {'type': 'Property', 'name': '"class"', 'range': [99, 101], 'children': [{'type': 'StringLiteral', 'name': '"logging.StreamHandler"', 'range': [101, 101], 'children': []}]}, {'type': 'Property', 'name': '"stream"', 'range': [104, 106], 'children': [{'type': 'StringLiteral', 'name': '"ext://sys.stderr"', 'range': [106, 106], 'children': []}]}]}]}]}]}]}, {'type': 'VariableDeclaration', 'name': 'loggers', 'range': [114, 136], 'children': [{'type': 'TypeAnnotation', 'name': 'dict', 'range': [116, 116], 'children': []}, {'type': 'Assignment', 'name': '=', 'range': [117, 117], 'children': [{'type': 'ObjectLiteral', 'name': '{', 'range': [118, 135], 'children': [{'type': 'Property', 'name': 'LOGGER_NAME', 'range': [120, 132], 'children': [{'type': 'ObjectLiteral', 'name': '{', 'range': [122, 132], 'children': [{'type': 'Property', 'name': '"handlers"', 'range': [123, 127], 'children': [{'type': 'ArrayLiteral', 'name': '[', 'range': [125, 127], 'children': [{'type': 'StringLiteral', 'name': '"default"', 'range': [126, 126], 'children': []}]}]}, {'type': 'Property', 'name': '"level"', 'range': [129, 131], 'children': [{'type': 'Identifier', 'name': 'LOG_LEVEL', 'range': [131, 131], 'children': []}]}]}]}]}]}]}]}]}
2025-01-08 10:29:12,781 - INFO - Starting Step 4: AST normalization
2025-01-08 10:29:50,184 - INFO - Step 4 result: {'type': 'Program', 'name': 'LogConfig', 'range': [7, 137], 'children': [{'type': 'ClassDecl', 'name': 'LogConfig', 'range': [7, 137], 'children': [{'type': 'VariableDecl', 'name': 'LOGGER_NAME', 'range': [19, 24], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [21, 21], 'children': []}, {'type': 'AssignmentExpression', 'name': '=', 'range': [22, 22], 'children': [{'type': 'Literal', 'name': '"marketplace"', 'range': [23, 23], 'children': []}]}]}, {'type': 'VariableDecl', 'name': 'LOG_FORMAT', 'range': [25, 30], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [27, 27], 'children': []}, {'type': 'AssignmentExpression', 'name': '=', 'range': [28, 28], 'children': [{'type': 'Literal', 'name': '"%(levelprefix)s | %(asctime)s | %(message)s"', 'range': [29, 29], 'children': []}]}]}, {'type': 'VariableDecl', 'name': 'LOG_LEVEL', 'range': [31, 36], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [33, 33], 'children': []}, {'type': 'AssignmentExpression', 'name': '=', 'range': [34, 34], 'children': [{'type': 'Literal', 'name': '"DEBUG"', 'range': [35, 35], 'children': []}]}]}, {'type': 'VariableDecl', 'name': 'version', 'range': [42, 47], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [44, 44], 'children': []}, {'type': 'AssignmentExpression', 'name': '=', 'range': [45, 45], 'children': [{'type': 'Literal', 'name': '1', 'range': [46, 46], 'children': []}]}]}, {'type': 'VariableDecl', 'name': 'disable_existing_loggers', 'range': [48, 53], 'children': [{'type': 'TypeAnnotation', 'name': 'bool', 'range': [50, 50], 'children': []}, {'type': 'AssignmentExpression', 'name': '=', 'range': [51, 51], 'children': [{'type': 'Literal', 'name': 'False', 'range': [52, 52], 'children': []}]}]}, {'type': 'VariableDecl', 'name': 'formatters', 'range': [54, 83], 'children': [{'type': 'TypeAnnotation', 'name': 'dict', 'range': [56, 56], 'children': []}, {'type': 'AssignmentExpression', 'name': '=', 'range': [57, 57], 'children': [{'type': 'ObjectExpression', 'name': '{', 'range': [58, 82], 'children': [{'type': 'Property', 'name': '"default"', 'range': [60, 79], 'children': [{'type': 'ObjectExpression', 'name': '{', 'range': [62, 79], 'children': [{'type': 'Property', 'name': '"()"', 'range': [64, 66], 'children': [{'type': 'Literal', 'name': '"uvicorn.logging.DefaultFormatter"', 'range': [66, 66], 'children': []}]}, {'type': 'Property', 'name': '"fmt"', 'range': [69, 71], 'children': [{'type': 'Identifier', 'name': 'LOG_FORMAT', 'range': [71, 71], 'children': []}]}, {'type': 'Property', 'name': '"datefmt"', 'range': [74, 76], 'children': [{'type': 'Literal', 'name': '"%Y-%m-%d %H:%M:%S"', 'range': [76, 76], 'children': []}]}]}]}]}]}]}, {'type': 'VariableDecl', 'name': 'handlers', 'range': [84, 113], 'children': [{'type': 'TypeAnnotation', 'name': 'dict', 'range': [86, 86], 'children': []}, {'type': 'AssignmentExpression', 'name': '=', 'range': [87, 87], 'children': [{'type': 'ObjectExpression', 'name': '{', 'range': [88, 112], 'children': [{'type': 'Property', 'name': '"default"', 'range': [90, 109], 'children': [{'type': 'ObjectExpression', 'name': '{', 'range': [92, 109], 'children': [{'type': 'Property', 'name': '"formatter"', 'range': [94, 96], 'children': [{'type': 'Literal', 'name': '"default"', 'range': [96, 96], 'children': []}]}, {'type': 'Property', 'name': '"class"', 'range': [99, 101], 'children': [{'type': 'Literal', 'name': '"logging.StreamHandler"', 'range': [101, 101], 'children': []}]}, {'type': 'Property', 'name': '"stream"', 'range': [104, 106], 'children': [{'type': 'Literal', 'name': '"ext://sys.stderr"', 'range': [106, 106], 'children': []}]}]}]}]}]}]}, {'type': 'VariableDecl', 'name': 'loggers', 'range': [114, 136], 'children': [{'type': 'TypeAnnotation', 'name': 'dict', 'range': [116, 116], 'children': []}, {'type': 'AssignmentExpression', 'name': '=', 'range': [117, 117], 'children': [{'type': 'ObjectExpression', 'name': '{', 'range': [118, 135], 'children': [{'type': 'Property', 'name': 'LOGGER_NAME', 'range': [120, 132], 'children': [{'type': 'ObjectExpression', 'name': '{', 'range': [122, 132], 'children': [{'type': 'Property', 'name': '"handlers"', 'range': [123, 127], 'children': [{'type': 'ArrayExpression', 'name': '[', 'range': [125, 127], 'children': [{'type': 'Literal', 'name': '"default"', 'range': [126, 126], 'children': []}]}]}, {'type': 'Property', 'name': '"level"', 'range': [129, 131], 'children': [{'type': 'Identifier', 'name': 'LOG_LEVEL', 'range': [131, 131], 'children': []}]}]}]}]}]}]}]}]}
2025-01-08 10:29:50,184 - INFO - Starting Step 5: Final AST combination
2025-01-08 10:30:28,683 - INFO - Step 5 result: {'type': 'Program', 'name': 'LogConfig', 'range': [7, 137], 'children': [{'type': 'ClassDecl', 'name': 'LogConfig', 'range': [7, 137], 'children': [{'type': 'VariableDecl', 'name': 'LOGGER_NAME', 'range': [19, 24], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [21, 21], 'children': []}, {'type': 'AssignmentExpression', 'name': '=', 'range': [22, 22], 'children': [{'type': 'Literal', 'name': '"marketplace"', 'range': [23, 23], 'children': []}]}]}, {'type': 'VariableDecl', 'name': 'LOG_FORMAT', 'range': [25, 30], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [27, 27], 'children': []}, {'type': 'AssignmentExpression', 'name': '=', 'range': [28, 28], 'children': [{'type': 'Literal', 'name': '"%(levelprefix)s | %(asctime)s | %(message)s"', 'range': [29, 29], 'children': []}]}]}, {'type': 'VariableDecl', 'name': 'LOG_LEVEL', 'range': [31, 36], 'children': [{'type': 'TypeAnnotation', 'name': 'str', 'range': [33, 33], 'children': []}, {'type': 'AssignmentExpression', 'name': '=', 'range': [34, 34], 'children': [{'type': 'Literal', 'name': '"DEBUG"', 'range': [35, 35], 'children': []}]}]}, {'type': 'VariableDecl', 'name': 'version', 'range': [42, 47], 'children': [{'type': 'TypeAnnotation', 'name': 'int', 'range': [44, 44], 'children': []}, {'type': 'AssignmentExpression', 'name': '=', 'range': [45, 45], 'children': [{'type': 'Literal', 'name': '1', 'range': [46, 46], 'children': []}]}]}, {'type': 'VariableDecl', 'name': 'disable_existing_loggers', 'range': [48, 53], 'children': [{'type': 'TypeAnnotation', 'name': 'bool', 'range': [50, 50], 'children': []}, {'type': 'AssignmentExpression', 'name': '=', 'range': [51, 51], 'children': [{'type': 'Literal', 'name': 'False', 'range': [52, 52], 'children': []}]}]}, {'type': 'VariableDecl', 'name': 'formatters', 'range': [54, 83], 'children': [{'type': 'TypeAnnotation', 'name': 'dict', 'range': [56, 56], 'children': []}, {'type': 'AssignmentExpression', 'name': '=', 'range': [57, 57], 'children': [{'type': 'ObjectExpression', 'name': '{', 'range': [58, 82], 'children': [{'type': 'Property', 'name': '"default"', 'range': [60, 79], 'children': [{'type': 'ObjectExpression', 'name': '{', 'range': [62, 79], 'children': [{'type': 'Property', 'name': '"()"', 'range': [64, 66], 'children': [{'type': 'Literal', 'name': '"uvicorn.logging.DefaultFormatter"', 'range': [66, 66], 'children': []}]}, {'type': 'Property', 'name': '"fmt"', 'range': [69, 71], 'children': [{'type': 'Identifier', 'name': 'LOG_FORMAT', 'range': [71, 71], 'children': []}]}, {'type': 'Property', 'name': '"datefmt"', 'range': [74, 76], 'children': [{'type': 'Literal', 'name': '"%Y-%m-%d %H:%M:%S"', 'range': [76, 76], 'children': []}]}]}]}]}]}]}, {'type': 'VariableDecl', 'name': 'handlers', 'range': [84, 113], 'children': [{'type': 'TypeAnnotation', 'name': 'dict', 'range': [86, 86], 'children': []}, {'type': 'AssignmentExpression', 'name': '=', 'range': [87, 87], 'children': [{'type': 'ObjectExpression', 'name': '{', 'range': [88, 112], 'children': [{'type': 'Property', 'name': '"default"', 'range': [90, 109], 'children': [{'type': 'ObjectExpression', 'name': '{', 'range': [92, 109], 'children': [{'type': 'Property', 'name': '"formatter"', 'range': [94, 96], 'children': [{'type': 'Literal', 'name': '"default"', 'range': [96, 96], 'children': []}]}, {'type': 'Property', 'name': '"class"', 'range': [99, 101], 'children': [{'type': 'Literal', 'name': '"logging.StreamHandler"', 'range': [101, 101], 'children': []}]}, {'type': 'Property', 'name': '"stream"', 'range': [104, 106], 'children': [{'type': 'Literal', 'name': '"ext://sys.stderr"', 'range': [106, 106], 'children': []}]}]}]}]}]}]}, {'type': 'VariableDecl', 'name': 'loggers', 'range': [114, 136], 'children': [{'type': 'TypeAnnotation', 'name': 'dict', 'range': [116, 116], 'children': []}, {'type': 'AssignmentExpression', 'name': '=', 'range': [117, 117], 'children': [{'type': 'ObjectExpression', 'name': '{', 'range': [118, 135], 'children': [{'type': 'Property', 'name': 'LOGGER_NAME', 'range': [120, 132], 'children': [{'type': 'ObjectExpression', 'name': '{', 'range': [122, 132], 'children': [{'type': 'Property', 'name': '"handlers"', 'range': [123, 127], 'children': [{'type': 'ArrayExpression', 'name': '[', 'range': [125, 127], 'children': [{'type': 'Literal', 'name': '"default"', 'range': [126, 126], 'children': []}]}]}, {'type': 'Property', 'name': '"level"', 'range': [129, 131], 'children': [{'type': 'Identifier', 'name': 'LOG_LEVEL', 'range': [131, 131], 'children': []}]}]}]}]}]}]}]}]}
2025-01-08 10:30:28,683 - INFO - Completed main AST analysis flow
2025-01-08 10:30:28,685 - INFO - Successfully processed chunk
2025-01-08 10:30:28,699 - INFO - Starting code generation from AST
2025-01-08 10:30:33,667 - INFO - Successfully generated code from AST
2025-01-08 10:30:33,668 - INFO - Starting static code similarity comparison
2025-01-08 10:30:33,670 - INFO - Static similarity result: {'final_score': 90.88, 'length_similarity': 95.2, 'token_similarity': 85.45, 'structure_similarity': 83.87, 'function_similarity': 100, 'complexity_similarity': 100.0, 'variable_similarity': 100}
