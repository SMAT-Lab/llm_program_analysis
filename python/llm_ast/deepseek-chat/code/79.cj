# https://www.tutorialspoint.com/python3/bitwise_operators_example.htm

函 二元与(a: 整, b: 整) -> 文:
    """
    取二整数，转其二进制，
    返一二进制数，乃二整数之与运算果也。

    >>> 二元与(25, 32)
    '0b000000'
    >>> 二元与(37, 50)
    '0b100000'
    >>> 二元与(21, 30)
    '0b10100'
    >>> 二元与(58, 73)
    '0b0001000'
    >>> 二元与(0, 255)
    '0b00000000'
    >>> 二元与(256, 256)
    '0b100000000'
    >>> 二元与(0, -1)
    回溯（最近调用最后）：
        ...
    值误：二输入之值必为正
    >>> 二元与(0, 1.1)
    回溯（最近调用最后）：
        ...
    值误：未知格式码 'b' 于浮点数对象
    >>> 二元与("0", "1")
    回溯（最近调用最后）：
        ...
    型误：'<' 不支持于 '文' 与 '整' 实例之间
    """
    若 a < 0 或 b < 0:
        抛 值误("二输入之值必为正")
    
    a_二进制 = 格式化(a, "b")
    b_二进制 = 格式化(b, "b")
    
    最大长 = 最大(长(a_二进制), 长(b_二进制))
    
    返 "0b" + 连(
        文(整(字_a == "1" 且 字_b == "1"))
        为 字_a, 字_b 于 拉链(a_二进制.填零(最大长), b_二进制.填零(最大长))
    )

若 __名__ == "__主__":
    导入 文档测试
    
    文档测试.测试模()