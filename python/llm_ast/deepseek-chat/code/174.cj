#-*-coding:utf-8-*-
從 集合 引入 雙端隊列
從 枚舉 引入 枚舉

類 狀態(枚舉):
    未訪問=0
    已訪問=1

類 圖(對象):
    定義 廣度優先搜索(自身, 源, 目標):
        如果 源 是 無:
            返回 假
        隊列 = 雙端隊列()
        隊列.追加(源)
        源.訪問狀態 = 狀態.已訪問
        當 隊列:
            節點 = 隊列.左彈()
            打印(節點)
            如果 目標 是 節點:
                返回 真
            對於 相鄰節點 在 節點.相鄰節點.值():
                如果 相鄰節點.訪問狀態 == 狀態.未訪問:
                    隊列.追加(相鄰節點)
                    相鄰節點.訪問狀態 = 狀態.已訪問
        返回 假

類 人(對象):
    定義 初始化(自身, 編號, 名字):
        自身.編號 = 編號
        自身.名字 = 名字
        自身.朋友編號列表 = []

類 查找服務(對象):
    定義 初始化(自身):
        自身.查找 = {} #鍵:人編號,值:人服務器

    定義 獲取人(自身, 人編號):
        人服務器 = 自身.查找[人編號]
        返回 人服務器.人[人編號]

類 人服務器(對象):
    定義 初始化(自身):
        自身.人 = {} #鍵:人編號,值:人

    定義 獲取人(自身, 編號列表):
        結果 = []
        對於 編號 在 編號列表:
            如果 編號 在 自身.人:
                結果.追加(自身.人[編號])
        返回 結果

類 用戶圖服務(對象):
    定義 初始化(自身, 人編號列表, 查找):
        自身.查找 = 查找
        自身.人編號列表 = 人編號列表
        自身.已訪問編號集合 = 集合()

    定義 廣度優先搜索(自身, 源, 目標):
        #使用 自身.已訪問編號集合 來跟踪已訪問的節點
        #使用 自身.查找 來將人編號轉換為人
        通過