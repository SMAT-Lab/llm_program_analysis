{
    "nodes": [
        {
            "id": "chunk_0_excess_3_code_1",
            "code": "def excess_3_code(number: int) -> str:\n    \"\"\"\n    Find excess-3 code of integer base 10.\n    Add 3 to all digits in a decimal number then convert to a binary-coded decimal.\n    https://en.wikipedia.org/wiki/Excess-3\n\n    >>> excess_3_code(0)\n    '0b0011'\n    >>> excess_3_code(3)\n    '0b0110'\n    >>> excess_3_code(2)\n    '0b0101'\n    >>> excess_3_code(20)\n    '0b01010011'\n    >>> excess_3_code(120)\n    '0b010001010011'\n    \"\"\"\n"
        },
        {
            "id": "chunk_0_excess_3_code_2",
            "code": "    num = \"\"\n"
        },
        {
            "id": "chunk_0_excess_3_code_3",
            "code": "    for digit in str(max(0, number)):\n        num += str(bin(int(digit) + 3))[2:].zfill(4)\n"
        },
        {
            "id": "chunk_0_excess_3_code_4",
            "code": "    return \"0b\" + num\n"
        },
        {
            "id": "chunk_1_GlobalBlock_1",
            "code": "if __name__ == \"__main__\":\n"
        },
        {
            "id": "chunk_1_GlobalBlock_2",
            "code": "    import doctest\n\n    doctest.testmod()\n"
        }
    ],
    "edges": [
        {
            "from": "chunk_0_excess_3_code_1",
            "to": "chunk_0_excess_3_code_2"
        },
        {
            "from": "chunk_0_excess_3_code_2",
            "to": "chunk_0_excess_3_code_3"
        },
        {
            "from": "chunk_0_excess_3_code_3",
            "to": "chunk_0_excess_3_code_4"
        },
        {
            "from": "chunk_1_GlobalBlock_1",
            "to": "chunk_1_GlobalBlock_2"
        }
    ]
}