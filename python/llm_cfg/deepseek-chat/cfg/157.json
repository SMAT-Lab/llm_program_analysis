{
    "nodes": [
        {
            "id": "chunk_0_GlobalBlock_1",
            "code": "import logging\nimport os\n"
        },
        {
            "id": "chunk_0_GlobalBlock_2",
            "code": "from dotenv import load_dotenv\nfrom redis import Redis\nfrom redis.asyncio import Redis as AsyncRedis\n"
        },
        {
            "id": "chunk_0_GlobalBlock_3",
            "code": "from backend.util.retry import conn_retry\n"
        },
        {
            "id": "chunk_0_GlobalBlock_4",
            "code": "load_dotenv()\n"
        },
        {
            "id": "chunk_0_GlobalBlock_5",
            "code": "HOST = os.getenv(\"REDIS_HOST\", \"localhost\")\nPORT = int(os.getenv(\"REDIS_PORT\", \"6379\"))\nPASSWORD = os.getenv(\"REDIS_PASSWORD\", \"password\")\n"
        },
        {
            "id": "chunk_0_GlobalBlock_6",
            "code": "logger = logging.getLogger(__name__)\nconnection: Redis | None = None\nconnection_async: AsyncRedis | None = None\n"
        },
        {
            "id": "chunk_1_connect_1",
            "code": "@conn_retry(\"Redis\", \"Acquiring connection\")\ndef connect() -> Redis:\n"
        },
        {
            "id": "chunk_1_connect_2",
            "code": "    global connection\n    if connection:\n        return connection\n"
        },
        {
            "id": "chunk_1_connect_3",
            "code": "    c = Redis(\n        host=HOST,\n        port=PORT,\n        password=PASSWORD,\n        decode_responses=True,\n    )\n"
        },
        {
            "id": "chunk_1_connect_4",
            "code": "    c.ping()\n    connection = c\n    return connection\n"
        },
        {
            "id": "chunk_2_disconnect_1",
            "code": "@conn_retry(\"Redis\", \"Releasing connection\")\n"
        },
        {
            "id": "chunk_2_disconnect_2",
            "code": "def disconnect():\n    global connection\n"
        },
        {
            "id": "chunk_2_disconnect_3",
            "code": "    if connection:\n        connection.close()\n"
        },
        {
            "id": "chunk_2_disconnect_4",
            "code": "    connection = None\n"
        },
        {
            "id": "chunk_3_get_redis_1",
            "code": "def get_redis(auto_connect: bool = True) -> Redis:\n"
        },
        {
            "id": "chunk_3_get_redis_2",
            "code": "    if connection:\n        return connection\n"
        },
        {
            "id": "chunk_3_get_redis_3",
            "code": "    if auto_connect:\n        return connect()\n"
        },
        {
            "id": "chunk_3_get_redis_4",
            "code": "    raise RuntimeError(\"Redis connection is not established\")\n"
        },
        {
            "id": "chunk_4_connect_async_1",
            "code": "@conn_retry(\"AsyncRedis\", \"Acquiring connection\")\nasync def connect_async() -> AsyncRedis:\n"
        },
        {
            "id": "chunk_4_connect_async_2",
            "code": "    global connection_async\n    if connection_async:\n        return connection_async\n"
        },
        {
            "id": "chunk_4_connect_async_3",
            "code": "    c = AsyncRedis(\n        host=HOST,\n        port=PORT,\n        password=PASSWORD,\n        decode_responses=True,\n    )\n"
        },
        {
            "id": "chunk_4_connect_async_4",
            "code": "    await c.ping()\n    connection_async = c\n    return connection_async\n"
        },
        {
            "id": "chunk_5_disconnect_async_1",
            "code": "@conn_retry(\"AsyncRedis\", \"Releasing connection\")\nasync def disconnect_async():\n"
        },
        {
            "id": "chunk_5_disconnect_async_2",
            "code": "    global connection_async\n    if connection_async:\n"
        },
        {
            "id": "chunk_5_disconnect_async_3",
            "code": "        await connection_async.close()\n"
        },
        {
            "id": "chunk_5_disconnect_async_4",
            "code": "    connection_async = None\n"
        },
        {
            "id": "chunk_6_get_redis_async_1",
            "code": "async def get_redis_async(auto_connect: bool = True) -> AsyncRedis:\n"
        },
        {
            "id": "chunk_6_get_redis_async_2",
            "code": "    if connection_async:\n        return connection_async\n"
        },
        {
            "id": "chunk_6_get_redis_async_3",
            "code": "    if auto_connect:\n        return await connect_async()\n"
        },
        {
            "id": "chunk_6_get_redis_async_4",
            "code": "    raise RuntimeError(\"AsyncRedis connection is not established\")\n"
        }
    ],
    "edges": [
        {
            "from": "chunk_0_GlobalBlock_1",
            "to": "chunk_0_GlobalBlock_2"
        },
        {
            "from": "chunk_0_GlobalBlock_2",
            "to": "chunk_0_GlobalBlock_3"
        },
        {
            "from": "chunk_0_GlobalBlock_3",
            "to": "chunk_0_GlobalBlock_4"
        },
        {
            "from": "chunk_0_GlobalBlock_4",
            "to": "chunk_0_GlobalBlock_5"
        },
        {
            "from": "chunk_0_GlobalBlock_5",
            "to": "chunk_0_GlobalBlock_6"
        },
        {
            "from": "chunk_1_connect_1",
            "to": "chunk_1_connect_2"
        },
        {
            "from": "chunk_1_connect_2",
            "to": "chunk_1_connect_3"
        },
        {
            "from": "chunk_1_connect_2",
            "to": "chunk_1_connect_4"
        },
        {
            "from": "chunk_1_connect_3",
            "to": "chunk_1_connect_4"
        },
        {
            "from": "chunk_2_disconnect_1",
            "to": "chunk_2_disconnect_2"
        },
        {
            "from": "chunk_2_disconnect_2",
            "to": "chunk_2_disconnect_3"
        },
        {
            "from": "chunk_2_disconnect_3",
            "to": "chunk_2_disconnect_4"
        },
        {
            "from": "chunk_3_get_redis_1",
            "to": "chunk_3_get_redis_2"
        },
        {
            "from": "chunk_3_get_redis_2",
            "to": "chunk_3_get_redis_3"
        },
        {
            "from": "chunk_3_get_redis_2",
            "to": "chunk_3_get_redis_4"
        },
        {
            "from": "chunk_4_connect_async_1",
            "to": "chunk_4_connect_async_2"
        },
        {
            "from": "chunk_4_connect_async_2",
            "to": "chunk_4_connect_async_3"
        },
        {
            "from": "chunk_4_connect_async_2",
            "to": "chunk_4_connect_async_4"
        },
        {
            "from": "chunk_4_connect_async_3",
            "to": "chunk_4_connect_async_4"
        },
        {
            "from": "chunk_5_disconnect_async_1",
            "to": "chunk_5_disconnect_async_2"
        },
        {
            "from": "chunk_5_disconnect_async_2",
            "to": "chunk_5_disconnect_async_3"
        },
        {
            "from": "chunk_5_disconnect_async_2",
            "to": "chunk_5_disconnect_async_4"
        },
        {
            "from": "chunk_5_disconnect_async_3",
            "to": "chunk_5_disconnect_async_4"
        },
        {
            "from": "chunk_6_get_redis_async_1",
            "to": "chunk_6_get_redis_async_2"
        },
        {
            "from": "chunk_6_get_redis_async_2",
            "to": "chunk_6_get_redis_async_3"
        },
        {
            "from": "chunk_6_get_redis_async_2",
            "to": "chunk_6_get_redis_async_4"
        }
    ]
}