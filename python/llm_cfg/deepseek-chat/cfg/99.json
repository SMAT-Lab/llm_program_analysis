{
    "nodes": [
        {
            "id": "chunk_0_GlobalBlock_1",
            "code": "from backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema\nfrom backend.data.model import SchemaField\n"
        },
        {
            "id": "chunk_0_GlobalBlock_2",
            "code": "\n\n\n"
        },
        {
            "id": "chunk_1_WordCharacterCountBlock_1",
            "code": "class WordCharacterCountBlock(Block):\n    class Input(BlockSchema):\n        text: str = SchemaField(\n            description=\"Input text to count words and characters\",\n            placeholder=\"Enter your text here\",\n            advanced=False,\n        )\n"
        },
        {
            "id": "chunk_1_WordCharacterCountBlock_2",
            "code": "    class Output(BlockSchema):\n        word_count: int = SchemaField(description=\"Number of words in the input text\")\n        character_count: int = SchemaField(\n            description=\"Number of characters in the input text\"\n        )\n        error: str = SchemaField(\n            description=\"Error message if the counting operation failed\"\n        )\n"
        },
        {
            "id": "chunk_1_WordCharacterCountBlock_3",
            "code": "    def __init__(self):\n        super().__init__(\n            id=\"ab2a782d-22cf-4587-8a70-55b59b3f9f90\",\n            description=\"Counts the number of words and characters in a given text.\",\n            categories={BlockCategory.TEXT},\n            input_schema=WordCharacterCountBlock.Input,\n            output_schema=WordCharacterCountBlock.Output,\n            test_input={\"text\": \"Hello, how are you?\"},\n            test_output=[(\"word_count\", 4), (\"character_count\", 19)],\n        )\n"
        },
        {
            "id": "chunk_1_WordCharacterCountBlock_4",
            "code": "    def run(self, input_data: Input, **kwargs) -> BlockOutput:\n        try:\n            text = input_data.text\n            word_count = len(text.split())\n            character_count = len(text)\n\n            yield \"word_count\", word_count\n            yield \"character_count\", character_count\n\n        except Exception as e:\n            yield \"error\", str(e)\n"
        },
        {
            "id": "chunk_2_WordCharacterCountBlock.Input_1",
            "code": "    class Input(BlockSchema):\n        text: str = SchemaField(\n            description=\"Input text to count words and characters\",\n            placeholder=\"Enter your text here\",\n            advanced=False,\n        )\n"
        },
        {
            "id": "chunk_3_WordCharacterCountBlock.Output_1",
            "code": "    class Output(BlockSchema):\n        word_count: int = SchemaField(description=\"Number of words in the input text\")\n"
        },
        {
            "id": "chunk_3_WordCharacterCountBlock.Output_2",
            "code": "        character_count: int = SchemaField(\n            description=\"Number of characters in the input text\"\n        )\n"
        },
        {
            "id": "chunk_3_WordCharacterCountBlock.Output_3",
            "code": "        error: str = SchemaField(\n            description=\"Error message if the counting operation failed\"\n        )\n"
        },
        {
            "id": "chunk_4_WordCharacterCountBlock.__init___1",
            "code": "    def __init__(self):\n        super().__init__(\n            id=\"ab2a782d-22cf-4587-8a70-55b59b3f9f90\",\n            description=\"Counts the number of words and characters in a given text.\",\n            categories={BlockCategory.TEXT},\n            input_schema=WordCharacterCountBlock.Input,\n            output_schema=WordCharacterCountBlock.Output,\n            test_input={\"text\": \"Hello, how are you?\"},\n            test_output=[(\"word_count\", 4), (\"character_count\", 19)],\n        )\n"
        },
        {
            "id": "chunk_5_WordCharacterCountBlock.run_1",
            "code": "    def run(self, input_data: Input, **kwargs) -> BlockOutput:\n"
        },
        {
            "id": "chunk_5_WordCharacterCountBlock.run_2",
            "code": "        try:\n            text = input_data.text\n            word_count = len(text.split())\n            character_count = len(text)\n\n            yield \"word_count\", word_count\n            yield \"character_count\", character_count\n\n"
        },
        {
            "id": "chunk_5_WordCharacterCountBlock.run_3",
            "code": "        except Exception as e:\n            yield \"error\", str(e)\n"
        }
    ],
    "edges": [
        {
            "from": "chunk_0_GlobalBlock_1",
            "to": "chunk_0_GlobalBlock_2"
        },
        {
            "from": "chunk_1_WordCharacterCountBlock_1",
            "to": "chunk_1_WordCharacterCountBlock_2"
        },
        {
            "from": "chunk_1_WordCharacterCountBlock_2",
            "to": "chunk_1_WordCharacterCountBlock_3"
        },
        {
            "from": "chunk_1_WordCharacterCountBlock_3",
            "to": "chunk_1_WordCharacterCountBlock_4"
        },
        {
            "from": "chunk_3_WordCharacterCountBlock.Output_1",
            "to": "chunk_3_WordCharacterCountBlock.Output_2"
        },
        {
            "from": "chunk_3_WordCharacterCountBlock.Output_2",
            "to": "chunk_3_WordCharacterCountBlock.Output_3"
        },
        {
            "from": "chunk_5_WordCharacterCountBlock.run_1",
            "to": "chunk_5_WordCharacterCountBlock.run_2"
        },
        {
            "from": "chunk_5_WordCharacterCountBlock.run_2",
            "to": "chunk_5_WordCharacterCountBlock.run_3"
        }
    ]
}