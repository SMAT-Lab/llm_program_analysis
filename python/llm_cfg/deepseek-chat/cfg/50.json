{
    "nodes": [
        {
            "id": "chunk_0_GlobalBlock_1",
            "code": "from enum import Enum\nfrom typing import Literal\n\nfrom pydantic import BaseModel, SecretStr\n\nfrom backend.data.model import APIKeyCredentials, CredentialsField, CredentialsMetaInput\nfrom backend.integrations.providers import ProviderName\n\n"
        },
        {
            "id": "chunk_0_GlobalBlock_2",
            "code": "Slant3DCredentialsInput = CredentialsMetaInput[\n    Literal[ProviderName.SLANT3D], Literal[\"api_key\"]\n]\n"
        },
        {
            "id": "chunk_0_GlobalBlock_3",
            "code": "def Slant3DCredentialsField() -> Slant3DCredentialsInput:\n    return CredentialsField(description=\"Slant3D API key for authentication\")\n"
        },
        {
            "id": "chunk_0_GlobalBlock_4",
            "code": "TEST_CREDENTIALS = APIKeyCredentials(\n    id=\"01234567-89ab-cdef-0123-456789abcdef\",\n    provider=\"slant3d\",\n    api_key=SecretStr(\"mock-slant3d-api-key\"),\n    title=\"Mock Slant3D API key\",\n    expires_at=None,\n)\n"
        },
        {
            "id": "chunk_0_GlobalBlock_5",
            "code": "TEST_CREDENTIALS_INPUT = {\n    \"provider\": TEST_CREDENTIALS.provider,\n    \"id\": TEST_CREDENTIALS.id,\n    \"type\": TEST_CREDENTIALS.type,\n    \"title\": TEST_CREDENTIALS.title,\n}\n"
        },
        {
            "id": "chunk_1_CustomerDetails_1",
            "code": "class CustomerDetails(BaseModel):\n    name: str\n    email: str\n    phone: str\n    address: str\n    city: str\n    state: str\n    zip: str\n    country_iso: str = \"US\"\n    is_residential: bool = True\n\n"
        },
        {
            "id": "chunk_2_Color_1",
            "code": "class Color(Enum):\n    WHITE = \"white\"\n    BLACK = \"black\"\n"
        },
        {
            "id": "chunk_3_Profile_1",
            "code": "class Profile(Enum):\n    PLA = \"PLA\"\n    PETG = \"PETG\"\n"
        },
        {
            "id": "chunk_4_OrderItem_1",
            "code": "class OrderItem(BaseModel):\n    # filename: str\n    file_url: str\n    quantity: str  # String as per API spec\n    color: Color = Color.WHITE\n    profile: Profile = Profile.PLA\n    # image_url: str = \"\"\n    # sku: str = \"\"\n\n"
        },
        {
            "id": "chunk_5_Filament_1",
            "code": "class Filament(BaseModel):\n    filament: str\n    hexColor: str\n    colorTag: str\n    profile: str\n\n"
        }
    ],
    "edges": [
        {
            "from": "chunk_0_GlobalBlock_1",
            "to": "chunk_0_GlobalBlock_2"
        },
        {
            "from": "chunk_0_GlobalBlock_2",
            "to": "chunk_0_GlobalBlock_3"
        },
        {
            "from": "chunk_0_GlobalBlock_4",
            "to": "chunk_0_GlobalBlock_5"
        }
    ]
}