{
    "nodes": [
        {
            "id": "chunk_0_GlobalBlock_1",
            "code": "from typing import List, Optional\n"
        },
        {
            "id": "chunk_0_GlobalBlock_2",
            "code": "from pydantic import BaseModel\n"
        },
        {
            "id": "chunk_0_GlobalBlock_3",
            "code": "from backend.blocks.exa._auth import (\n    ExaCredentials,\n    ExaCredentialsField,\n    ExaCredentialsInput,\n)\n"
        },
        {
            "id": "chunk_0_GlobalBlock_4",
            "code": "from backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema\n"
        },
        {
            "id": "chunk_0_GlobalBlock_5",
            "code": "from backend.data.model import SchemaField\n"
        },
        {
            "id": "chunk_0_GlobalBlock_6",
            "code": "from backend.util.request import requests\n"
        },
        {
            "id": "chunk_1_ContentRetrievalSettings_1",
            "code": "class ContentRetrievalSettings(BaseModel):\n"
        },
        {
            "id": "chunk_1_ContentRetrievalSettings_2",
            "code": "    text: Optional[dict] = SchemaField(\n        description=\"Text content settings\",\n        default={\"maxCharacters\": 1000, \"includeHtmlTags\": False},\n        advanced=True,\n    )\n"
        },
        {
            "id": "chunk_1_ContentRetrievalSettings_3",
            "code": "    highlights: Optional[dict] = SchemaField(\n        description=\"Highlight settings\",\n        default={\n            \"numSentences\": 3,\n            \"highlightsPerUrl\": 3,\n            \"query\": \"\",\n        },\n        advanced=True,\n    )\n"
        },
        {
            "id": "chunk_1_ContentRetrievalSettings_4",
            "code": "    summary: Optional[dict] = SchemaField(\n        description=\"Summary settings\",\n        default={\"query\": \"\"},\n        advanced=True,\n    )\n"
        },
        {
            "id": "chunk_2_ExaContentsBlock_1",
            "code": "class ExaContentsBlock(Block):\n    class Input(BlockSchema):\n"
        },
        {
            "id": "chunk_2_ExaContentsBlock_2",
            "code": "        credentials: ExaCredentialsInput = ExaCredentialsField()\n        ids: List[str] = SchemaField(\n            description=\"Array of document IDs obtained from searches\",\n        )\n"
        },
        {
            "id": "chunk_2_ExaContentsBlock_3",
            "code": "        contents: ContentRetrievalSettings = SchemaField(\n            description=\"Content retrieval settings\",\n            default=ContentRetrievalSettings(),\n            advanced=True,\n        )\n"
        },
        {
            "id": "chunk_2_ExaContentsBlock_4",
            "code": "    class Output(BlockSchema):\n        results: list = SchemaField(\n            description=\"List of document contents\",\n            default=[],\n        )\n"
        },
        {
            "id": "chunk_2_ExaContentsBlock_5",
            "code": "    def __init__(self):\n        super().__init__(\n            id=\"c52be83f-f8cd-4180-b243-af35f986b461\",\n            description=\"Retrieves document contents using Exa's contents API\",\n            categories={BlockCategory.SEARCH},\n            input_schema=ExaContentsBlock.Input,\n            output_schema=ExaContentsBlock.Output,\n        )\n"
        },
        {
            "id": "chunk_2_ExaContentsBlock_6",
            "code": "    def run(\n        self, input_data: Input, *, credentials: ExaCredentials, **kwargs\n    ) -> BlockOutput:\n"
        },
        {
            "id": "chunk_2_ExaContentsBlock_7",
            "code": "        url = \"https://api.exa.ai/contents\"\n        headers = {\n            \"Content-Type\": \"application/json\",\n            \"x-api-key\": credentials.api_key.get_secret_value(),\n        }\n"
        },
        {
            "id": "chunk_2_ExaContentsBlock_8",
            "code": "        payload = {\n            \"ids\": input_data.ids,\n            \"text\": input_data.contents.text,\n            \"highlights\": input_data.contents.highlights,\n            \"summary\": input_data.contents.summary,\n        }\n"
        },
        {
            "id": "chunk_2_ExaContentsBlock_9",
            "code": "        try:\n            response = requests.post(url, headers=headers, json=payload)\n            response.raise_for_status()\n            data = response.json()\n            yield \"results\", data.get(\"results\", [])\n"
        },
        {
            "id": "chunk_2_ExaContentsBlock_10",
            "code": "        except Exception as e:\n            yield \"error\", str(e)\n            yield \"results\", []\n"
        },
        {
            "id": "chunk_3_ExaContentsBlock.Input_1",
            "code": "    class Input(BlockSchema):\n        credentials: ExaCredentialsInput = ExaCredentialsField()\n"
        },
        {
            "id": "chunk_3_ExaContentsBlock.Input_2",
            "code": "        ids: List[str] = SchemaField(\n            description=\"Array of document IDs obtained from searches\",\n        )\n"
        },
        {
            "id": "chunk_3_ExaContentsBlock.Input_3",
            "code": "        contents: ContentRetrievalSettings = SchemaField(\n            description=\"Content retrieval settings\",\n            default=ContentRetrievalSettings(),\n            advanced=True,\n        )\n"
        },
        {
            "id": "chunk_4_ExaContentsBlock.Output_1",
            "code": "    class Output(BlockSchema):\n        results: list = SchemaField(\n            description=\"List of document contents\",\n            default=[],\n        )\n"
        },
        {
            "id": "chunk_5_ExaContentsBlock.__init___1",
            "code": "    def __init__(self):\n        super().__init__(\n            id=\"c52be83f-f8cd-4180-b243-af35f986b461\",\n            description=\"Retrieves document contents using Exa's contents API\",\n            categories={BlockCategory.SEARCH},\n            input_schema=ExaContentsBlock.Input,\n            output_schema=ExaContentsBlock.Output,\n        )\n"
        },
        {
            "id": "chunk_6_ExaContentsBlock.run_1",
            "code": "    def run(\n        self, input_data: Input, *, credentials: ExaCredentials, **kwargs\n    ) -> BlockOutput:\n"
        },
        {
            "id": "chunk_6_ExaContentsBlock.run_2",
            "code": "        url = \"https://api.exa.ai/contents\"\n        headers = {\n            \"Content-Type\": \"application/json\",\n            \"x-api-key\": credentials.api_key.get_secret_value(),\n        }\n"
        },
        {
            "id": "chunk_6_ExaContentsBlock.run_3",
            "code": "        payload = {\n            \"ids\": input_data.ids,\n            \"text\": input_data.contents.text,\n            \"highlights\": input_data.contents.highlights,\n            \"summary\": input_data.contents.summary,\n        }\n"
        },
        {
            "id": "chunk_6_ExaContentsBlock.run_4",
            "code": "        try:\n            response = requests.post(url, headers=headers, json=payload)\n            response.raise_for_status()\n            data = response.json()\n            yield \"results\", data.get(\"results\", [])\n"
        },
        {
            "id": "chunk_6_ExaContentsBlock.run_5",
            "code": "        except Exception as e:\n            yield \"error\", str(e)\n            yield \"results\", []\n"
        }
    ],
    "edges": [
        {
            "from": "chunk_0_GlobalBlock_1",
            "to": "chunk_0_GlobalBlock_2"
        },
        {
            "from": "chunk_0_GlobalBlock_2",
            "to": "chunk_0_GlobalBlock_3"
        },
        {
            "from": "chunk_0_GlobalBlock_3",
            "to": "chunk_0_GlobalBlock_4"
        },
        {
            "from": "chunk_0_GlobalBlock_4",
            "to": "chunk_0_GlobalBlock_5"
        },
        {
            "from": "chunk_0_GlobalBlock_5",
            "to": "chunk_0_GlobalBlock_6"
        },
        {
            "from": "chunk_1_ContentRetrievalSettings_1",
            "to": "chunk_1_ContentRetrievalSettings_2"
        },
        {
            "from": "chunk_1_ContentRetrievalSettings_2",
            "to": "chunk_1_ContentRetrievalSettings_3"
        },
        {
            "from": "chunk_1_ContentRetrievalSettings_3",
            "to": "chunk_1_ContentRetrievalSettings_4"
        },
        {
            "from": "chunk_2_ExaContentsBlock_1",
            "to": "chunk_2_ExaContentsBlock_2"
        },
        {
            "from": "chunk_2_ExaContentsBlock_1",
            "to": "chunk_2_ExaContentsBlock_4"
        },
        {
            "from": "chunk_2_ExaContentsBlock_2",
            "to": "chunk_2_ExaContentsBlock_3"
        },
        {
            "from": "chunk_2_ExaContentsBlock_6",
            "to": "chunk_2_ExaContentsBlock_7"
        },
        {
            "from": "chunk_2_ExaContentsBlock_7",
            "to": "chunk_2_ExaContentsBlock_8"
        },
        {
            "from": "chunk_2_ExaContentsBlock_8",
            "to": "chunk_2_ExaContentsBlock_9"
        },
        {
            "from": "chunk_2_ExaContentsBlock_9",
            "to": "chunk_2_ExaContentsBlock_10"
        },
        {
            "from": "chunk_3_ExaContentsBlock.Input_1",
            "to": "chunk_3_ExaContentsBlock.Input_2"
        },
        {
            "from": "chunk_3_ExaContentsBlock.Input_2",
            "to": "chunk_3_ExaContentsBlock.Input_3"
        },
        {
            "from": "chunk_6_ExaContentsBlock.run_1",
            "to": "chunk_6_ExaContentsBlock.run_2"
        },
        {
            "from": "chunk_6_ExaContentsBlock.run_2",
            "to": "chunk_6_ExaContentsBlock.run_3"
        },
        {
            "from": "chunk_6_ExaContentsBlock.run_3",
            "to": "chunk_6_ExaContentsBlock.run_4"
        },
        {
            "from": "chunk_6_ExaContentsBlock.run_4",
            "to": "chunk_6_ExaContentsBlock.run_5"
        }
    ]
}