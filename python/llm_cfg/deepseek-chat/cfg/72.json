{
    "nodes": [
        {
            "id": "chunk_0_GlobalBlock_1",
            "code": "import json\nfrom enum import Enum\nfrom typing import Any\n"
        },
        {
            "id": "chunk_0_GlobalBlock_2",
            "code": "from backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema\nfrom backend.data.model import SchemaField\nfrom backend.util.request import requests\n"
        },
        {
            "id": "chunk_1_HttpMethod_1",
            "code": "class HttpMethod(Enum):\n    GET = \"GET\"\n    POST = \"POST\"\n    PUT = \"PUT\"\n    DELETE = \"DELETE\"\n    PATCH = \"PATCH\"\n    OPTIONS = \"OPTIONS\"\n    HEAD = \"HEAD\"\n\n"
        },
        {
            "id": "chunk_2_SendWebRequestBlock_1",
            "code": "class SendWebRequestBlock(Block):\n"
        },
        {
            "id": "chunk_2_SendWebRequestBlock_2",
            "code": "    class Input(BlockSchema):\n        url: str = SchemaField(\n            description=\"The URL to send the request to\",\n            placeholder=\"https://api.example.com\",\n        )\n        method: HttpMethod = SchemaField(\n            description=\"The HTTP method to use for the request\",\n            default=HttpMethod.POST,\n        )\n        headers: dict[str, str] = SchemaField(\n            description=\"The headers to include in the request\",\n            default={},\n        )\n        json_format: bool = SchemaField(\n            title=\"JSON format\",\n            description=\"Whether to send and receive body as JSON\",\n            default=True,\n        )\n        body: Any = SchemaField(\n            description=\"The body of the request\",\n            default=None,\n        )\n"
        },
        {
            "id": "chunk_2_SendWebRequestBlock_3",
            "code": "    class Output(BlockSchema):\n        response: object = SchemaField(description=\"The response from the server\")\n        client_error: object = SchemaField(description=\"The error on 4xx status codes\")\n        server_error: object = SchemaField(description=\"The error on 5xx status codes\")\n"
        },
        {
            "id": "chunk_2_SendWebRequestBlock_4",
            "code": "    def __init__(self):\n        super().__init__(\n            id=\"6595ae1f-b924-42cb-9a41-551a0611c4b4\",\n            description=\"This block makes an HTTP request to the given URL.\",\n            categories={BlockCategory.OUTPUT},\n            input_schema=SendWebRequestBlock.Input,\n            output_schema=SendWebRequestBlock.Output,\n        )\n"
        },
        {
            "id": "chunk_2_SendWebRequestBlock_5",
            "code": "    def run(self, input_data: Input, **kwargs) -> BlockOutput:\n        if isinstance(input_data.body, str):\n            input_data.body = json.loads(input_data.body)\n"
        },
        {
            "id": "chunk_2_SendWebRequestBlock_6",
            "code": "        response = requests.request(\n            input_data.method.value,\n            input_data.url,\n            headers=input_data.headers,\n            json=input_data.body if input_data.json_format else None,\n            data=input_data.body if not input_data.json_format else None,\n        )\n"
        },
        {
            "id": "chunk_2_SendWebRequestBlock_7",
            "code": "        result = response.json() if input_data.json_format else response.text\n"
        },
        {
            "id": "chunk_2_SendWebRequestBlock_8",
            "code": "        if response.status_code // 100 == 2:\n            yield \"response\", result\n"
        },
        {
            "id": "chunk_2_SendWebRequestBlock_9",
            "code": "        elif response.status_code // 100 == 4:\n            yield \"client_error\", result\n"
        },
        {
            "id": "chunk_2_SendWebRequestBlock_10",
            "code": "        elif response.status_code // 100 == 5:\n            yield \"server_error\", result\n"
        },
        {
            "id": "chunk_2_SendWebRequestBlock_11",
            "code": "        else:\n            raise ValueError(f\"Unexpected status code: {response.status_code}\")\n"
        },
        {
            "id": "chunk_3_Input_1",
            "code": "    class Input(BlockSchema):\n"
        },
        {
            "id": "chunk_3_Input_2",
            "code": "        url: str = SchemaField(\n            description=\"The URL to send the request to\",\n            placeholder=\"https://api.example.com\",\n        )\n"
        },
        {
            "id": "chunk_3_Input_3",
            "code": "        method: HttpMethod = SchemaField(\n            description=\"The HTTP method to use for the request\",\n            default=HttpMethod.POST,\n        )\n"
        },
        {
            "id": "chunk_3_Input_4",
            "code": "        headers: dict[str, str] = SchemaField(\n            description=\"The headers to include in the request\",\n            default={},\n        )\n"
        },
        {
            "id": "chunk_3_Input_5",
            "code": "        json_format: bool = SchemaField(\n            title=\"JSON format\",\n            description=\"Whether to send and receive body as JSON\",\n            default=True,\n        )\n"
        },
        {
            "id": "chunk_3_Input_6",
            "code": "        body: Any = SchemaField(\n            description=\"The body of the request\",\n            default=None,\n        )\n"
        },
        {
            "id": "chunk_4_Output_1",
            "code": "    class Output(BlockSchema):\n        response: object = SchemaField(description=\"The response from the server\")\n        client_error: object = SchemaField(description=\"The error on 4xx status codes\")\n        server_error: object = SchemaField(description=\"The error on 5xx status codes\")\n"
        },
        {
            "id": "chunk_5___init___1",
            "code": "    def __init__(self):\n        super().__init__(\n            id=\"6595ae1f-b924-42cb-9a41-551a0611c4b4\",\n            description=\"This block makes an HTTP request to the given URL.\",\n            categories={BlockCategory.OUTPUT},\n            input_schema=SendWebRequestBlock.Input,\n            output_schema=SendWebRequestBlock.Output,\n        )\n"
        },
        {
            "id": "chunk_6_run_1",
            "code": "    def run(self, input_data: Input, **kwargs) -> BlockOutput:\n"
        },
        {
            "id": "chunk_6_run_2",
            "code": "        if isinstance(input_data.body, str):\n            input_data.body = json.loads(input_data.body)\n"
        },
        {
            "id": "chunk_6_run_3",
            "code": "        response = requests.request(\n            input_data.method.value,\n            input_data.url,\n            headers=input_data.headers,\n            json=input_data.body if input_data.json_format else None,\n            data=input_data.body if not input_data.json_format else None,\n        )\n"
        },
        {
            "id": "chunk_6_run_4",
            "code": "        result = response.json() if input_data.json_format else response.text\n"
        },
        {
            "id": "chunk_6_run_5",
            "code": "        if response.status_code // 100 == 2:\n            yield \"response\", result\n"
        },
        {
            "id": "chunk_6_run_6",
            "code": "        elif response.status_code // 100 == 4:\n            yield \"client_error\", result\n"
        },
        {
            "id": "chunk_6_run_7",
            "code": "        elif response.status_code // 100 == 5:\n            yield \"server_error\", result\n"
        },
        {
            "id": "chunk_6_run_8",
            "code": "        else:\n            raise ValueError(f\"Unexpected status code: {response.status_code}\")\n"
        }
    ],
    "edges": [
        {
            "from": "chunk_0_GlobalBlock_1",
            "to": "chunk_0_GlobalBlock_2"
        },
        {
            "from": "chunk_2_SendWebRequestBlock_1",
            "to": "chunk_2_SendWebRequestBlock_2"
        },
        {
            "from": "chunk_2_SendWebRequestBlock_1",
            "to": "chunk_2_SendWebRequestBlock_3"
        },
        {
            "from": "chunk_2_SendWebRequestBlock_1",
            "to": "chunk_2_SendWebRequestBlock_4"
        },
        {
            "from": "chunk_2_SendWebRequestBlock_4",
            "to": "chunk_2_SendWebRequestBlock_5"
        },
        {
            "from": "chunk_2_SendWebRequestBlock_5",
            "to": "chunk_2_SendWebRequestBlock_6"
        },
        {
            "from": "chunk_2_SendWebRequestBlock_6",
            "to": "chunk_2_SendWebRequestBlock_7"
        },
        {
            "from": "chunk_2_SendWebRequestBlock_7",
            "to": "chunk_2_SendWebRequestBlock_8"
        },
        {
            "from": "chunk_2_SendWebRequestBlock_8",
            "to": "chunk_2_SendWebRequestBlock_9"
        },
        {
            "from": "chunk_2_SendWebRequestBlock_8",
            "to": "chunk_2_SendWebRequestBlock_10"
        },
        {
            "from": "chunk_2_SendWebRequestBlock_8",
            "to": "chunk_2_SendWebRequestBlock_11"
        },
        {
            "from": "chunk_3_Input_1",
            "to": "chunk_3_Input_2"
        },
        {
            "from": "chunk_3_Input_2",
            "to": "chunk_3_Input_3"
        },
        {
            "from": "chunk_3_Input_3",
            "to": "chunk_3_Input_4"
        },
        {
            "from": "chunk_3_Input_4",
            "to": "chunk_3_Input_5"
        },
        {
            "from": "chunk_3_Input_5",
            "to": "chunk_3_Input_6"
        },
        {
            "from": "chunk_6_run_1",
            "to": "chunk_6_run_2"
        },
        {
            "from": "chunk_6_run_2",
            "to": "chunk_6_run_3"
        },
        {
            "from": "chunk_6_run_3",
            "to": "chunk_6_run_4"
        },
        {
            "from": "chunk_6_run_4",
            "to": "chunk_6_run_5"
        },
        {
            "from": "chunk_6_run_5",
            "to": "chunk_6_run_6"
        },
        {
            "from": "chunk_6_run_5",
            "to": "chunk_6_run_7"
        },
        {
            "from": "chunk_6_run_5",
            "to": "chunk_6_run_8"
        }
    ]
}