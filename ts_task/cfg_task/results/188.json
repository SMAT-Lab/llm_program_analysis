{
  "edge_analysis": {
    "static_total": 0,
    "llm_total": 11,
    "matched_edges": {
      "exact_matches": 0,
      "partial_matches": 0
    },
    "accuracy_metrics": {
      "precision": 0,
      "recall": 0,
      "f1_score": 0
    }
  },
  "structure_validation": {
    "missing_blocks": [],
    "extra_blocks": [
      "Edge 0: [Source] import type { Quiz } from '../../types'\\nimport type { SupportedLocale } from '../../locales' => [Target] import { defaultLocale, t } from '../../locales'\\nimport { toCommentBlock } from './toCommentBlock'",
      "Edge 1: [Source] import { defaultLocale, t } from '../../locales'\\nimport { toCommentBlock } from './toCommentBlock' => [Target] import { toInfoHeader } from './toInfoHeader'\\nimport { toLinks } from './toLinks'",
      "Edge 2: [Source] import { toInfoHeader } from './toInfoHeader'\\nimport { toLinks } from './toLinks' => [Target] import { toDivider } from './toDivider'\\nimport { toFooter } from './toFooter'",
      "Edge 3: [Source] export function formatToCode(quiz: Quiz, locale: SupportedLocale) {\\n return `${toCommentBlock( => [Target] toInfoHeader(quiz, locale)\\n + (quiz.readme[locale] || quiz.readme[defaultLocale])",
      "Edge 4: [Source] toInfoHeader(quiz, locale)\\n + (quiz.readme[locale] || quiz.readme[defaultLocale]) => [Target] + toLinks(quiz, locale),\\n )",
      "Edge 5: [Source] + toLinks(quiz, locale),\\n ) => [Target] + toDivider(t(locale, 'divider.code-start'))\\n }\\n${",
      "Edge 6: [Source] + toDivider(t(locale, 'divider.code-start'))\\n }\\n${ => [Target] (quiz.template || '').trim()\\n }\\n${",
      "Edge 7: [Source] (quiz.template || '').trim()\\n }\\n${ => [Target] toDivider(t(locale, 'divider.test-cases'))\\n }${",
      "Edge 8: [Source] toDivider(t(locale, 'divider.test-cases'))\\n }${ => [Target] (quiz.tests || '').trim()\\n }\\n${",
      "Edge 9: [Source] (quiz.tests || '').trim()\\n }\\n${ => [Target] toDivider(t(locale, 'divider.further-steps'))\\n }${toCommentBlock(toFooter(quiz, locale))}`",
      "Edge 10: [Source] toDivider(t(locale, 'divider.further-steps'))\\n }${toCommentBlock(toFooter(quiz, locale))}` => [Target] }"
    ]
  }
}