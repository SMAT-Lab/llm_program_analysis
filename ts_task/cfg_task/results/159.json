{
  "edge_analysis": {
    "static_total": 0,
    "llm_total": 10,
    "matched_edges": {
      "exact_matches": 0,
      "partial_matches": 0
    },
    "accuracy_metrics": {
      "precision": 0.0,
      "recall": 0.0,
      "f1_score": 0.0
    }
  },
  "structure_validation": {
    "missing_blocks": [],
    "extra_blocks": [
      "Edge 0: [Source] import { ValidationError } from \"@lerna/core\";\\nimport { FetchConfig, getFetchConfig } from \"./fetch-config\"; => [Target] import { getProfileData } from \"./get-profile-data\";",
      "Edge 1: [Source] export function getTwoFactorAuthRequired(options: Partial<FetchConfig> = {}): Promise<boolean> {\\n const opts = getFetchConfig(options, { fetchRetries: 0, }); => [Target] opts.log.info(\"\", \"Checking two-factor auth mode\");\\n return getProfileData(opts).then(success, failure);",
      "Edge 2: [Source] function success(result) {\\n opts.log.silly(\"2FA\", result.tfa); => [Target] if (result.tfa.pending) {\\n return false;",
      "Edge 3: [Source] function success(result) {\\n opts.log.silly(\"2FA\", result.tfa); => [Target] return result.tfa.mode === \"auth-and-writes\";",
      "Edge 4: [Source] function failure(err) { => [Target] if (err.code === \"E500\" || err.code === \"E404\") {",
      "Edge 5: [Source] function failure(err) { => [Target] }",
      "Edge 6: [Source] if (err.code === \"E500\" || err.code === \"E404\") { => [Target] opts.log.warn(\\n \"EREGISTRY\",\\n `Registry \"${opts.registry}\" does not support 'npm profile get', skipping two-factor auth check...`\\n );\\n return false;",
      "Edge 7: [Source] if (err.code === \"E500\" || err.code === \"E404\") { => [Target] }\\n opts.log.pause();",
      "Edge 8: [Source] }\\n opts.log.pause(); => [Target] console.error(err.message);\\n opts.log.resume();",
      "Edge 9: [Source] console.error(err.message);\\n opts.log.resume(); => [Target] throw new ValidationError(\"ETWOFACTOR\", \"Unable to obtain two-factor auth mode\");"
    ]
  }
}