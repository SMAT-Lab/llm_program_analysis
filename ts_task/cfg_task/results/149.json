{
  "edge_analysis": {
    "static_total": 8,
    "llm_total": 16,
    "matched_edges": {
      "exact_matches": 0,
      "partial_matches": 7
    },
    "accuracy_metrics": {
      "precision": "0",
      "recall": "0",
      "f1_score": "0"
    }
  },
  "structure_validation": {
    "missing_blocks": [
      "id:0 \\nxyz = parameter0: XYZ \\nthis = this: @ts_files/149.ts: %dflt \\nrgb = staticinvoke <@%unk/%unk: .Array()>(3) \\ntransform = srgbForwardTransform \\nmatrix = srgbForwardMatrix \\ni = 0",
      "id:1 \\nif i < 3",
      "id:2 \\n%0 = matrix[i] \\n%1 = %0.<@%unk/%unk: .0> \\n%2 = xyz.<@%unk/%unk: .0> \\n%3 = %1 * %2 \\n%4 = matrix[i] \\n%5 = %4.<@%unk/%unk: .1> \\n%6 = xyz.<@%unk/%unk: .1> \\n%7 = %5 * %6 \\n%8 = %3 + %7 \\n%9 = matrix[i] \\n%10 = %9.<@%unk/%unk: .2> \\n%11 = xyz.<@%unk/%unk: .2> \\n%12 = %10 * %11 \\n%13 = %8 + %12 \\n%14 = staticinvoke <@%unk/%unk: .transform()>(%13) \\n%15 = staticinvoke <@%unk/%unk: .clamp()>(%14) \\n%16 = %15 * 255 \\n%17 = instanceinvoke Math.<@%unk/%unk: .round()>(%16) \\nrgb.<@%unk/%unk: .i> = %17 \\ni = i + 1",
      "id:1 \\nif i < 3",
      "id:3 \\n%18 = new @ts_files/149.ts: %AC$%dflt$fromXYZ$0 \\ninstanceinvoke %18.<@ts_files/149.ts: %AC$%dflt$fromXYZ$0.constructor()>() \\nreturn %18",
      "id:4 \\nObjectBindingPattern = parameter0: RGB \\nthis = this: @ts_files/149.ts: %dflt \\n%0 = newarray (number)[3] \\n%0[0] = 0 \\n%0[1] = 0 \\n%0[2] = 0 \\nxyz = %0 \\ntransform = srgbReverseTransform \\nmatrix = srgbReverseMatrix \\n%1 = r / 255 \\nr = staticinvoke <@%unk/%unk: .transform()>(%1) \\n%2 = g / 255 \\ng = staticinvoke <@%unk/%unk: .transform()>(%2) \\n%3 = b / 255 \\nb = staticinvoke <@%unk/%unk: .transform()>(%3) \\ni = 0",
      "id:1 \\nif i < 3",
      "id:2 \\n%4 = matrix[i] \\n%5 = %4.<@%unk/%unk: .0> \\n%6 = %5 * r \\n%7 = matrix[i] \\n%8 = %7.<@%unk/%unk: .1> \\n%9 = %8 * g \\n%10 = %6 + %9 \\n%11 = matrix[i] \\n%12 = %11.<@%unk/%unk: .2> \\n%13 = %12 * b \\n%14 = %10 + %13 \\nxyz['i'] = %14 \\ni = i + 1"
    ],
    "extra_blocks": [
      "// Utilities\\nimport { clamp } from '@/util/helpers'\\n// Types\\nimport type { RGB, XYZ } from '../colorUtils'",
      "// For converting XYZ to sRGB\\nconst srgbForwardMatrix = [\\n [3.2406, -1.5372, -0.4986],\\n [-0.9689, 1.8758, 0.0415],\\n [0.0557, -0.2040, 1.0570],\\n]\\n// Forward gamma adjust\\n)",
      "// For converting sRGB to XYZ\\nconst srgbReverseMatrix = [\\n [0.4124, 0.3576, 0.1805],\\n [0.2126, 0.7152, 0.0722],\\n [0.0193, 0.1192, 0.9505],\\n]",
      "export function fromXYZ (xyz: XYZ): RGB {\\n const rgb = Array(3)\\n const transform = srgbForwardTransform\\n const matrix = srgbForwardMatrix",
      "export function toXYZ ({ r, g, b }: RGB): XYZ {\\n const xyz: XYZ = [0, 0, 0] => [Target] const transform = srgbReverseTransform\\n const matrix = srgbReverseMatrix"
    ]
  }
}