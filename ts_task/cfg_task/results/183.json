{
  "edge_analysis": {
    "static_total": 0,
    "llm_total": 77,
    "matched_edges": {
      "exact_matches": 0,
      "partial_matches": 0
    },
    "accuracy_metrics": {
      "precision": 0,
      "recall": 0,
      "f1_score": 0
    }
  },
  "structure_validation": {
    "missing_blocks": [],
    "extra_blocks": [
      "Edge 0: [Source] describe('isTeamsUpdateProps', () => {\\n}); => [Target] });\\n});",
      "Edge 1: [Source] });\\n}); => [Target] });\\n});",
      "Edge 2: [Source] });\\n}); => [Target] });\\n});",
      "Edge 3: [Source] });\\n}); => [Target] });\\n});",
      "Edge 4: [Source] });\\n}); => [Target] });\\n});",
      "Edge 5: [Source] });\\n}); => [Target] });\\n});",
      "Edge 6: [Source] });\\n}); => [Target] });\\n});",
      "Edge 7: [Source] });\\n}); => [Target] });\\n});",
      "Edge 8: [Source] });\\n}); => [Target] });\\n});",
      "Edge 9: [Source] });\\n}); => [Target] });",
      "Edge 10: [Source] it('should be a function', () => {\\n assert.isFunction(isTeamsUpdateProps); => [Target] });",
      "Edge 11: [Source] it('should return false when provided anything that is not an TeamsUpdateProps', () => {\\n assert.isFalse(isTeamsUpdateProps(undefined)); => [Target] assert.isFalse(isTeamsUpdateProps(null));\\n assert.isFalse(isTeamsUpdateProps(''));",
      "Edge 12: [Source] assert.isFalse(isTeamsUpdateProps(null));\\n assert.isFalse(isTeamsUpdateProps('')); => [Target] assert.isFalse(isTeamsUpdateProps(123));\\n assert.isFalse(isTeamsUpdateProps({}));",
      "Edge 13: [Source] assert.isFalse(isTeamsUpdateProps(123));\\n assert.isFalse(isTeamsUpdateProps({})); => [Target] assert.isFalse(isTeamsUpdateProps([]));\\n assert.isFalse(isTeamsUpdateProps(new Date()));",
      "Edge 14: [Source] assert.isFalse(isTeamsUpdateProps([]));\\n assert.isFalse(isTeamsUpdateProps(new Date())); => [Target] assert.isFalse(isTeamsUpdateProps(new Error()));\\n});",
      "Edge 15: [Source] it('should return false when only teamName is provided to TeamsUpdateProps', () => {\\n assert.isFalse( => [Target] isTeamsUpdateProps({\\n teamName: 'teamName',",
      "Edge 16: [Source] isTeamsUpdateProps({\\n teamName: 'teamName', => [Target] }),\\n );",
      "Edge 17: [Source] }),\\n ); => [Target] });",
      "Edge 18: [Source] it('should return false when only teamId is provided to TeamsUpdateProps', () => {\\nassert.isFalse( => [Target] isTeamsUpdateProps({\\nteamId: 'teamId',",
      "Edge 19: [Source] isTeamsUpdateProps({\\nteamId: 'teamId', => [Target] }),\\n);",
      "Edge 20: [Source] }),\\n); => [Target] });",
      "Edge 21: [Source] it('should return false when teamName and data are provided to TeamsUpdateProps but data is an empty object', () => { => [Target] assert.isFalse(",
      "Edge 22: [Source] it('should return false when teamName and data are provided to TeamsUpdateProps but data is an empty object', () => { => [Target] });",
      "Edge 23: [Source] assert.isFalse( => [Target] isTeamsUpdateProps({",
      "Edge 24: [Source] assert.isFalse( => [Target] );",
      "Edge 25: [Source] isTeamsUpdateProps({ => [Target] teamName: 'teamName',\\ndata: {},",
      "Edge 26: [Source] isTeamsUpdateProps({ => [Target] }),",
      "Edge 27: [Source] it('should return false when teamId and data are provided to TeamsUpdateProps but data is an empty object', () => {\\nassert.isFalse( => [Target] isTeamsUpdateProps({\\nteamId: 'teamId',\\ndata: {},\\n}),\\n);",
      "Edge 28: [Source] it('should return false when teamName and data are provided to TeamsUpdateProps but data is not an object', () => {\\n assert.isFalse( => [Target] isTeamsUpdateProps({\\n teamName: 'teamName',",
      "Edge 29: [Source] it('should return false when teamName and data are provided to TeamsUpdateProps but data is not an object', () => {\\n assert.isFalse( => [Target] );",
      "Edge 30: [Source] isTeamsUpdateProps({\\n teamName: 'teamName', => [Target] data: 'data',\\n }),",
      "Edge 31: [Source] it('should return false when teamId and data are provided to TeamsUpdateProps but data is not an object', () => {\\n assert.isFalse( => [Target] isTeamsUpdateProps({\\n teamId: 'teamId',",
      "Edge 32: [Source] isTeamsUpdateProps({\\n teamId: 'teamId', => [Target] data: 'data',\\n }),",
      "Edge 33: [Source] data: 'data',\\n }), => [Target] );\\n});",
      "Edge 34: [Source] it('should return true when teamName and data.name are provided to TeamsUpdateProps', () => {\\n assert.isTrue( => [Target] isTeamsUpdateProps({\\n teamName: 'teamName',",
      "Edge 35: [Source] isTeamsUpdateProps({\\n teamName: 'teamName', => [Target] data: {\\nname: 'name',",
      "Edge 36: [Source] it('should return true when teamId and data.name are provided to TeamsUpdateProps', () => {\\n assert.isTrue( => [Target] isTeamsUpdateProps({\\n teamId: 'teamId',",
      "Edge 37: [Source] isTeamsUpdateProps({\\n teamId: 'teamId', => [Target] data: {\\n name: 'name',",
      "Edge 38: [Source] data: {\\n name: 'name', => [Target] },\\n }),",
      "Edge 39: [Source] },\\n }), => [Target] );\\n});",
      "Edge 40: [Source] it('should return true when teamName and data.type are provided to TeamsUpdateProps', () => {\\n assert.isTrue( => [Target] isTeamsUpdateProps({\\n teamName: 'teamName',",
      "Edge 41: [Source] isTeamsUpdateProps({\\n teamName: 'teamName', => [Target] data: {\\n type: 0,",
      "Edge 42: [Source] data: {\\n type: 0, => [Target] },\\n }),",
      "Edge 43: [Source] },\\n }), => [Target] );\\n});",
      "Edge 44: [Source] it('should return true when teamId and data.type are provided to TeamsUpdateProps', () => { => [Target] assert.isTrue(",
      "Edge 45: [Source] it('should return true when teamId and data.type are provided to TeamsUpdateProps', () => { => [Target] });",
      "Edge 46: [Source] assert.isTrue( => [Target] isTeamsUpdateProps({",
      "Edge 47: [Source] assert.isTrue( => [Target] }),",
      "Edge 48: [Source] isTeamsUpdateProps({ => [Target] teamId: 'teamId',",
      "Edge 49: [Source] isTeamsUpdateProps({ => [Target] data: {\\ntype: 0,",
      "Edge 50: [Source] isTeamsUpdateProps({ => [Target] },",
      "Edge 51: [Source] it('should return true when teamName and data.name and data.type are provided to TeamsUpdateProps', () => {\\n assert.isTrue( => [Target] isTeamsUpdateProps({\\n teamName: 'teamName',",
      "Edge 52: [Source] isTeamsUpdateProps({\\n teamName: 'teamName', => [Target] data: {\\n name: 'name',",
      "Edge 53: [Source] data: {\\n name: 'name', => [Target] type: 0,\\n },",
      "Edge 54: [Source] type: 0,\\n }, => [Target] }),\\n );",
      "Edge 55: [Source] }),\\n ); => [Target] });",
      "Edge 56: [Source] it('should return true when teamId and data.name and data.type are provided to TeamsUpdateProps', () => {\\n assert.isTrue( => [Target] isTeamsUpdateProps({\\n teamId: 'teamId',",
      "Edge 57: [Source] isTeamsUpdateProps({\\n teamId: 'teamId', => [Target] data: {\\n name: 'name',",
      "Edge 58: [Source] data: {\\n name: 'name', => [Target] type: 0,\\n },",
      "Edge 59: [Source] type: 0,\\n }, => [Target] }),\\n );",
      "Edge 60: [Source] }),\\n ); => [Target] });",
      "Edge 61: [Source] it('should return false when teamName, data.name, data.type are some more extra data are provided to TeamsUpdateProps', () => {\\nassert.isFalse(\\n isTeamsUpdateProps({\\n teamName: 'teamName',\\n data: {\\n name: 'name',\\n type: 0,\\n extra: 'extra',\\n },\\n }),\\n); => [Target] });",
      "Edge 62: [Source] it('should return false when teamId, data.name, data.type are some more extra data are provided to TeamsUpdateProps', () => {\\nassert.isFalse( => [Target] isTeamsUpdateProps({\\nteamId: 'teamId',",
      "Edge 63: [Source] isTeamsUpdateProps({\\nteamId: 'teamId', => [Target] data: {\\nname: 'name',",
      "Edge 64: [Source] data: {\\nname: 'name', => [Target] type: 0,\\nextra: 'extra',",
      "Edge 65: [Source] type: 0,\\nextra: 'extra', => [Target] },\\n}),",
      "Edge 66: [Source] },\\n}), => [Target] );\\n});",
      "Edge 67: [Source] it('should return false when teamName, data.name, data.type are some more extra parameter are provided to TeamsUpdateProps', () => {\\n assert.isFalse( => [Target] isTeamsUpdateProps({\\n teamName: 'teamName',",
      "Edge 68: [Source] isTeamsUpdateProps({\\n teamName: 'teamName', => [Target] extra: 'extra',\\n data: {",
      "Edge 69: [Source] extra: 'extra',\\n data: { => [Target] name: 'name',\\n type: 0,",
      "Edge 70: [Source] name: 'name',\\n type: 0, => [Target] },\\n }),",
      "Edge 71: [Source] },\\n }), => [Target] );\\n});",
      "Edge 72: [Source] it('should return false when teamId, data.name, data.type are some more extra parameter are provided to TeamsUpdateProps', () => {\\n assert.isFalse( => [Target] isTeamsUpdateProps({\\n teamId: 'teamId',",
      "Edge 73: [Source] isTeamsUpdateProps({\\n teamId: 'teamId', => [Target] extra: 'extra',\\n data: {",
      "Edge 74: [Source] extra: 'extra',\\n data: { => [Target] name: 'name',\\n type: 0,",
      "Edge 75: [Source] name: 'name',\\n type: 0, => [Target] },\\n }),",
      "Edge 76: [Source] },\\n }), => [Target] );\\n});"
    ]
  }
}