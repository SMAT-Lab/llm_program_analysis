{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 73,
  "functions": [
    {
      "name": "getPropertyValidOrientation",
      "type": "function",
      "start_line": 27,
      "end_line": 39,
      "functions": [],
      "classes": [],
      "simplified_code": "function getPropertyValidOrientation(orientation: number): string {\n  Log.info(TAG, 'getPropertyValidOrientation ' + orientation);\n  if (orientation === MediaConstants.ROTATE_NONE) {\n    return '1';\n  } else if (orientation === MediaConstants.ROTATE_THIRD) {\n    return '8';\n  } else if (orientation === MediaConstants.ROTATE_TWICE) {\n    return '3';\n  } else if (orientation === MediaConstants.ROTATE_ONCE) {\n    return '6';\n  }\n  return '';\n}",
      "blocks": [
        {
          "id": 1,
          "label": "Log.info(TAG, 'getPropertyValidOrientation ' + orientation);\nif (orientation === MediaConstants.ROTATE_NONE) {",
          "successors": [
            {
              "id": 3,
              "label": "    return '1';",
              "successors": []
            },
            {
              "id": 4,
              "label": "} else if (orientation === MediaConstants.ROTATE_THIRD) {",
              "successors": [
                {
                  "id": 5,
                  "label": "    return '8';",
                  "successors": []
                },
                {
                  "id": 6,
                  "label": "} else if (orientation === MediaConstants.ROTATE_TWICE) {",
                  "successors": [
                    {
                      "id": 7,
                      "label": "    return '3';",
                      "successors": []
                    },
                    {
                      "id": 8,
                      "label": "} else if (orientation === MediaConstants.ROTATE_ONCE) {",
                      "successors": [
                        {
                          "id": 9,
                          "label": "    return '6';",
                          "successors": []
                        },
                        {
                          "id": 10,
                          "label": "}\nreturn '';",
                          "successors": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "getAlbumDisplayName",
      "type": "function",
      "start_line": 41,
      "end_line": 60,
      "functions": [],
      "classes": [],
      "simplified_code": "export async function getAlbumDisplayName(name: string): Promise<string> {\n  if (name === MediaConstants.ALBUM_ID_ALL) {\n    return await getResourceString($r('app.string.album_all'));\n  } else if (name === MediaConstants.ALBUM_ID_VIDEO) {\n    return await getResourceString($r('app.string.album_video'));\n  } else if (name === MediaConstants.ALBUM_ID_RECYCLE) {\n    return await getResourceString($r('app.string.album_recycle'));\n  } else if (name === MediaConstants.ALBUM_ID_CAMERA) {\n    return await getResourceString($r('app.string.album_camera'));\n  } else if (name === MediaConstants.ALBUM_ID_FAVOR) {\n    return await getResourceString($r('app.string.album_favor'));\n  } else if (name === MediaConstants.ALBUM_ID_REMOTE) {\n    return await getResourceString($r('app.string.album_remote_device'));\n  } else if (name === MediaConstants.ALBUM_ID_SNAPSHOT) {\n    return await getResourceString($r('app.string.album_screen_shot'));\n  } else if (name === MediaConstants.ALBUM_ID_MOVING_PHOTO) {\n    return await getResourceString($r('app.string.album_moving_photo'));\n  }\n  return null;\n}",
      "blocks": [
        {
          "id": 1,
          "label": "export async function getAlbumDisplayName(name: string): Promise<string> {",
          "successors": [
            {
              "id": 2,
              "label": "if (name === MediaConstants.ALBUM_ID_ALL) {\nreturn await getResourceString($r('app.string.album_all'));",
              "successors": []
            },
            {
              "id": 4,
              "label": "} else if (name === MediaConstants.ALBUM_ID_VIDEO) {\nreturn await getResourceString($r('app.string.album_video'));",
              "successors": []
            },
            {
              "id": 6,
              "label": "} else if (name === MediaConstants.ALBUM_ID_RECYCLE) {\nreturn await getResourceString($r('app.string.album_recycle'));",
              "successors": []
            },
            {
              "id": 8,
              "label": "} else if (name === MediaConstants.ALBUM_ID_CAMERA) {\nreturn await getResourceString($r('app.string.album_camera'));",
              "successors": []
            },
            {
              "id": 10,
              "label": "} else if (name === MediaConstants.ALBUM_ID_FAVOR) {\nreturn await getResourceString($r('app.string.album_favor'));",
              "successors": []
            },
            {
              "id": 12,
              "label": "} else if (name === MediaConstants.ALBUM_ID_REMOTE) {\nreturn await getResourceString($r('app.string.album_remote_device'));",
              "successors": []
            },
            {
              "id": 14,
              "label": "} else if (name === MediaConstants.ALBUM_ID_SNAPSHOT) {\nreturn await getResourceString($r('app.string.album_screen_shot'));",
              "successors": []
            },
            {
              "id": 16,
              "label": "} else if (name === MediaConstants.ALBUM_ID_MOVING_PHOTO) {\nreturn await getResourceString($r('app.string.album_moving_photo'));",
              "successors": []
            },
            {
              "id": 18,
              "label": "return null;",
              "successors": []
            }
          ]
        }
      ]
    },
    {
      "name": "getSystemAlbumDisplayName",
      "type": "function",
      "start_line": 62,
      "end_line": 73,
      "functions": [],
      "classes": [],
      "simplified_code": "export async function getSystemAlbumDisplayName(): Promise<string[]> {\n  let albumNames = [];\n  albumNames.push(await getResourceString($r('app.string.album_all')));\n  albumNames.push(await getResourceString($r('app.string.album_video')));\n  albumNames.push(await getResourceString($r('app.string.album_recycle')));\n  albumNames.push(await getResourceString($r('app.string.album_camera')));\n  albumNames.push(await getResourceString($r('app.string.album_favor')));\n  albumNames.push(await getResourceString($r('app.string.album_remote_device')));\n  albumNames.push(await getResourceString($r('app.string.album_screen_shot')));\n  albumNames.push(await getResourceString($r('app.string.album_moving_photo')));\n  return albumNames;\n}",
      "blocks": [
        {
          "id": 1,
          "label": "export async function getSystemAlbumDisplayName(): Promise<string[]> {\nlet albumNames = [];",
          "successors": [
            {
              "id": 3,
              "label": "albumNames.push(await getResourceString($r('app.string.album_all')));\nalbumNames.push(await getResourceString($r('app.string.album_video')));\nalbumNames.push(await getResourceString($r('app.string.album_recycle')));\nalbumNames.push(await getResourceString($r('app.string.album_camera')));\nalbumNames.push(await getResourceString($r('app.string.album_favor')));\nalbumNames.push(await getResourceString($r('app.string.album_remote_device')));\nalbumNames.push(await getResourceString($r('app.string.album_screen_shot')));\nalbumNames.push(await getResourceString($r('app.string.album_moving_photo')));\nreturn albumNames;",
              "successors": []
            }
          ]
        }
      ]
    }
  ],
  "classes": [
    {
      "name": "Rotatable",
      "type": "class",
      "start_line": 22,
      "end_line": 25,
      "functions": [],
      "classes": [],
      "simplified_code": "export class Rotatable {\n  rotatable: boolean;\n  orientation: number;\n}",
      "blocks": [
        {
          "id": 1,
          "label": "export class Rotatable {\n  rotatable: boolean;",
          "successors": [
            {
              "id": 3,
              "label": "  orientation: number;",
              "successors": []
            }
          ]
        }
      ]
    }
  ],
  "simplified_code": "/*\n * Copyright (c) 2023 Shenzhen Kaihong Digital Industry Development Co., Ltd.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Log } from '../utils/Log';\nimport { MediaConstants } from '../constants/MediaConstants';\nimport { getResourceString } from '../utils/ResourceUtils';\n\nconst TAG = 'UserFileDataHelper';\n\n}\n\n}\n\n}\n\n}",
  "blocks": [
    {
      "id": 1,
      "label": "import { Log } from '../utils/Log';\nimport { MediaConstants } from '../constants/MediaConstants';",
      "successors": [
        {
          "id": 3,
          "label": "import { getResourceString } from '../utils/ResourceUtils';\nconst TAG = 'UserFileDataHelper';",
          "successors": []
        }
      ]
    }
  ]
}