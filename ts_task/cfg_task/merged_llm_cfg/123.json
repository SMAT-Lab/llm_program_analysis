{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 66,
  "functions": [],
  "classes": [
    {
      "name": "ContextAbility",
      "type": "class",
      "start_line": 31,
      "end_line": 66,
      "functions": [
        {
          "name": "onCreate",
          "type": "function",
          "start_line": 33,
          "end_line": 35,
          "functions": [],
          "classes": [],
          "simplified_code": "  onCreate(want: Want, launchParam: AbilityConstant.LaunchParam): void {\n    hilog.info(DOMAIN_NUMBER, TAG, '%{public}s', 'Ability onCreate');\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "onCreate(want: Want, launchParam: AbilityConstant.LaunchParam): void {\n hilog.info(DOMAIN_NUMBER, TAG, '%{public}s', 'Ability onCreate');",
              "successors": []
            }
          ]
        },
        {
          "name": "onWindowStageCreate",
          "type": "function",
          "start_line": 37,
          "end_line": 65,
          "functions": [],
          "classes": [],
          "simplified_code": "  onWindowStageCreate(windowStage: window.WindowStage): void {\n    windowStage.loadContent('pages/page_contextability/Page_ContextAbility', (err, data) => {\n      if (err.code) {\n        hilog.error(DOMAIN_NUMBER, TAG, 'Failed to load the content. Cause: %{public}s', JSON.stringify(err) ?? '');\n        return;\n      }\n      hilog.info(DOMAIN_NUMBER, TAG, 'Succeeded in loading the content. Data: %{public}s', JSON.stringify(data) ?? '');\n    });\n\n    // Main window is created, set main page for this ability\n    let context: Context = this.context;\n    let atManager: abilityAccessCtrl.AtManager = abilityAccessCtrl.createAtManager();\n    // requestPermissionsFromUser会判断权限的授权状态来决定是否唤起弹窗\n    atManager.requestPermissionsFromUser(context, permissions).then((data: PermissionRequestResult) => {\n      let grantStatus: Array<number> = data.authResults;\n      let length: number = grantStatus.length;\n      for (let i = 0; i < length; i++) {\n        if (grantStatus[i] === 0) {\n          // 用户授权，可以继续访问目标操作\n        } else {\n          // 用户拒绝授权，提示用户必须授权才能访问当前页面的功能，并引导用户到系统设置中打开相应的权限\n          return;\n        }\n      }\n      // 授权成功\n    }).catch((err: BusinessError) => {\n      hilog.error(DOMAIN_NUMBER, TAG, `Failed to request permissions from user. Code is ${err.code}, message is ${err.message}`);\n    });\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "onWindowStageCreate(windowStage: window.WindowStage): void {",
              "successors": [
                {
                  "id": 2,
                  "label": "windowStage.loadContent('pages/page_contextability/Page_ContextAbility', (err, data) => {",
                  "successors": [
                    {
                      "id": 3,
                      "label": "if (err.code) {\nhilog.error(DOMAIN_NUMBER, TAG, 'Failed to load the content. Cause: %{public}s', JSON.stringify(err) ?? '');\nreturn;",
                      "successors": []
                    },
                    {
                      "id": 5,
                      "label": "hilog.info(DOMAIN_NUMBER, TAG, 'Succeeded in loading the content. Data: %{public}s', JSON.stringify(data) ?? '');",
                      "successors": []
                    }
                  ]
                },
                {
                  "id": 6,
                  "label": "let context: Context = this.context;\nlet atManager: abilityAccessCtrl.AtManager = abilityAccessCtrl.createAtManager();\natManager.requestPermissionsFromUser(context, permissions).then((data: PermissionRequestResult) => {\nlet grantStatus: Array<number> = data.authResults;\nlet length: number = grantStatus.length;\nfor (let i = 0; i < length; i++) {",
                  "successors": [
                    {
                      "id": 8,
                      "label": "if (grantStatus[i] === 0) {",
                      "successors": []
                    },
                    {
                      "id": 9,
                      "label": "return;",
                      "successors": []
                    }
                  ]
                },
                {
                  "id": 10,
                  "label": "}).catch((err: BusinessError) => {\nhilog.error(DOMAIN_NUMBER, TAG, `Failed to request permissions from user. Code is ${err.code}, message is ${err.message}`);",
                  "successors": []
                }
              ]
            }
          ]
        }
      ],
      "simplified_code": "export default class ContextAbility extends UIAbility {\n\n  }\n\n  }\n};",
      "blocks": [
        {
          "id": 1,
          "label": "export default class ContextAbility extends UIAbility {",
          "successors": []
        }
      ]
    }
  ],
  "simplified_code": "/*\n * Copyright (c) 2023 Huawei Device Co., Ltd.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type AbilityConstant from '@ohos.app.ability.AbilityConstant';\nimport hilog from '@ohos.hilog';\nimport UIAbility from '@ohos.app.ability.UIAbility';\nimport type Want from '@ohos.app.ability.Want';\nimport type window from '@ohos.window';\nimport abilityAccessCtrl from '@ohos.abilityAccessCtrl';\nimport type { Context } from '@ohos.abilityAccessCtrl';\nimport type { PermissionRequestResult } from '@ohos.abilityAccessCtrl';\nimport type { Permissions } from '@ohos.abilityAccessCtrl';\nimport type { BusinessError } from '@ohos.base';\n\nconst permissions: Array<Permissions> = ['ohos.permission.GET_BUNDLE_INFO_PRIVILEGED'];\nconst TAG: string = '[ContextAbility]';\nconst DOMAIN_NUMBER: number = 0xFF00;\n\n};",
  "blocks": [
    {
      "id": 1,
      "label": "import type AbilityConstant from '@ohos.app.ability.AbilityConstant';\nhilog from '@ohos.hilog';\nUIAbility from '@ohos.app.ability.UIAbility';\nimport type Want from '@ohos.app.ability.Want';\nimport type window from '@ohos.window';\nabilityAccessCtrl from '@ohos.abilityAccessCtrl';\nimport type { Context } from '@ohos.abilityAccessCtrl';\nimport type { PermissionRequestResult } from '@ohos.abilityAccessCtrl';\nimport type { Permissions } from '@ohos.abilityAccessCtrl';\nimport type { BusinessError } from '@ohos.base';\n\nconst permissions: Array<Permissions> = ['ohos.permission.GET_BUNDLE_INFO_PRIVILEGED'];\nconst TAG: string = '[ContextAbility]';\nconst DOMAIN_NUMBER: number = 0xFF00;",
      "successors": []
    }
  ]
}