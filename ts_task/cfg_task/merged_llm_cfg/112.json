{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 63,
  "functions": [],
  "classes": [
    {
      "name": "MyAbilityStage",
      "type": "class",
      "start_line": 27,
      "end_line": 63,
      "functions": [
        {
          "name": "onNewWant",
          "type": "function",
          "start_line": 28,
          "end_line": 31,
          "functions": [],
          "classes": [],
          "simplified_code": "  onNewWant(want: Want, launchParam: AbilityConstant.LaunchParam): void {\n    hilog.info(DOMAIN_NUMBER, TAG, `onNewWant, want: ${want.abilityName}`);\n    hilog.info(DOMAIN_NUMBER, TAG, `onNewWant, launchParam: ${JSON.stringify(launchParam)}`);\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "onNewWant(want: Want, launchParam: AbilityConstant.LaunchParam): void {\n    hilog.info(DOMAIN_NUMBER, TAG, `onNewWant, want: ${want.abilityName}`);",
              "successors": [
                {
                  "id": 3,
                  "label": "    hilog.info(DOMAIN_NUMBER, TAG, `onNewWant, launchParam: ${JSON.stringify(launchParam)}`);\n}",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "onCreate",
          "type": "function",
          "start_line": 32,
          "end_line": 37,
          "functions": [],
          "classes": [],
          "simplified_code": "  onCreate(): void {\n    // 应用的HAP在首次加载的时，为该Module初始化操作\n    systemLanguage = this.context.config.language; // Module首次加载时，获取系统当前语言\n    hilog.info(DOMAIN_NUMBER, TAG, `systemLanguage is ${systemLanguage}`);\n    let abilityStageContext = this.context;\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "onCreate(): void {\n    // 应用的HAP在首次加载的时，为该Module初始化操作\n    systemLanguage = this.context.config.language;",
              "successors": [
                {
                  "id": 3,
                  "label": "    hilog.info(DOMAIN_NUMBER, TAG, `systemLanguage is ${systemLanguage}`);\n    let abilityStageContext = this.context;",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "onAcceptWant",
          "type": "function",
          "start_line": 38,
          "end_line": 50,
          "functions": [],
          "classes": [],
          "simplified_code": "  onAcceptWant(want: Want): string {\n    // 仅specified模式下触发\n    hilog.info(DOMAIN_NUMBER, TAG, 'Succeeded in starting SpecifiedAbility');\n    // 在被调用方的AbilityStage中，针对启动模式为specified的UIAbility返回一个UIAbility实例对应的一个Key值\n    // 当前示例指的是module1 Module的SpecifiedAbility\n    if (want.abilityName === 'SpecifiedFirstAbility' || want.abilityName === 'SpecifiedSecondAbility') {\n      // 返回的字符串Key标识为自定义拼接的字符串内容\n      if (want.parameters) {\n        return `SpecifiedAbilityInstance_${want.parameters.instanceKey}`;\n      }\n    }\n    return 'MyAbilityStage';\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "hilog.info(DOMAIN_NUMBER, TAG, 'Succeeded in starting SpecifiedAbility');",
              "successors": [
                {
                  "id": 2,
                  "label": "if (want.abilityName === 'SpecifiedFirstAbility' || want.abilityName === 'SpecifiedSecondAbility') {",
                  "successors": [
                    {
                      "id": 3,
                      "label": "if (want.parameters) {\nreturn `SpecifiedAbilityInstance_${want.parameters.instanceKey}`;",
                      "successors": []
                    },
                    {
                      "id": 5,
                      "label": "}\nreturn 'MyAbilityStage';",
                      "successors": []
                    }
                  ]
                },
                {
                  "id": 7,
                  "label": "return 'MyAbilityStage';",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "onMemoryLevel",
          "type": "function",
          "start_line": 51,
          "end_line": 53,
          "functions": [],
          "classes": [],
          "simplified_code": "  onMemoryLevel(level: AbilityConstant.MemoryLevel): void {\n    // 根据系统可用内存的变化情况，释放不必要的内存\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "onMemoryLevel(level: AbilityConstant.MemoryLevel): void {\n// 根据系统可用内存的变化情况，释放不必要的内存",
              "successors": []
            }
          ]
        },
        {
          "name": "onConfigurationUpdate",
          "type": "function",
          "start_line": 54,
          "end_line": 62,
          "functions": [],
          "classes": [],
          "simplified_code": "  onConfigurationUpdate(newConfig: Configuration): void {\n    hilog.info(DOMAIN_NUMBER, TAG, `onConfigurationUpdate, language: ${newConfig.language}`);\n    hilog.info(DOMAIN_NUMBER, TAG, `onConfigurationUpdated systemLanguage is ${systemLanguage}, newConfig: ${JSON.stringify(newConfig)}`);\n\n    if (systemLanguage !== newConfig.language) {\n      hilog.info(DOMAIN_NUMBER, TAG, `systemLanguage from ${systemLanguage} changed to ${newConfig.language}`);\n      systemLanguage = newConfig.language; // 将变化之后的系统语言保存，作为下一次变化前的系统语言\n    }\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "hilog.info(DOMAIN_NUMBER, TAG, `onConfigurationUpdate, language: ${newConfig.language}`);\nhilog.info(DOMAIN_NUMBER, TAG, `onConfigurationUpdated systemLanguage is ${systemLanguage}, newConfig: ${JSON.stringify(newConfig)}`);",
              "successors": [
                {
                  "id": 3,
                  "label": "if (systemLanguage !== newConfig.language) {\nhilog.info(DOMAIN_NUMBER, TAG, `systemLanguage from ${systemLanguage} changed to ${newConfig.language}`);",
                  "successors": [
                    {
                      "id": 5,
                      "label": "systemLanguage = newConfig.language; // 将变化之后的系统语言保存，作为下一次变化前的系统语言",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "classes": [],
      "simplified_code": "export default class MyAbilityStage extends AbilityStage {\n  }\n  }\n  }\n  }\n  }\n};",
      "blocks": [
        {
          "id": 1,
          "label": "export default class MyAbilityStage extends AbilityStage {",
          "successors": []
        }
      ]
    }
  ],
  "simplified_code": "/*\n * Copyright (c) 2023 Huawei Device Co., Ltd.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport AbilityStage from '@ohos.app.ability.AbilityStage';\nimport type AbilityConstant from '@ohos.app.ability.AbilityConstant';\nimport hilog from '@ohos.hilog';\nimport type Want from '@ohos.app.ability.Want';\nimport type { Configuration } from '@ohos.app.ability.Configuration';\n\nconst TAG: string = '[MyAbilityStage]';\nconst DOMAIN_NUMBER: number = 0xFF00;\n\nlet systemLanguage: string | undefined; // 系统当前语言\n\n};",
  "blocks": [
    {
      "id": 1,
      "label": "import AbilityStage from '@ohos.app.ability.AbilityStage';\nimport type AbilityConstant from '@ohos.app.ability.AbilityConstant';",
      "successors": [
        {
          "id": 3,
          "label": "import hilog from '@ohos.hilog';\nimport type Want from '@ohos.app.ability.Want';",
          "successors": [
            {
              "id": 5,
              "label": "import type { Configuration } from '@ohos.app.ability.Configuration';\nconst TAG: string = '[MyAbilityStage]';",
              "successors": [
                {
                  "id": 7,
                  "label": "const DOMAIN_NUMBER: number = 0xFF00;\nlet systemLanguage: string | undefined; // 系统当前语言",
                  "successors": []
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}