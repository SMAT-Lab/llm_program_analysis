{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 88,
  "functions": [],
  "classes": [
    {
      "name": "EntryAbility",
      "type": "class",
      "start_line": 29,
      "end_line": 88,
      "functions": [
        {
          "name": "onCreate",
          "type": "function",
          "start_line": 31,
          "end_line": 37,
          "functions": [],
          "classes": [],
          "simplified_code": "  onCreate(want: Want, launchParam: AbilityConstant.LaunchParam): void {\n    Logger.info(TAG, 'Ability onCreate');\n    Logger.debug(TAG, `want param: ${JSON.stringify(want)}`);\n    Logger.debug(TAG, `launchParam: ${JSON.stringify(launchParam)}`);\n    GlobalContext.get().setCameraSettingContext(this.context);\n    GlobalContext.get().getCameraSettingContext();\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "onCreate(want: Want, launchParam: AbilityConstant.LaunchParam): void {\n    Logger.info(TAG, 'Ability onCreate');",
              "successors": [
                {
                  "id": 3,
                  "label": "    Logger.debug(TAG, `want param: ${JSON.stringify(want)}`);\n    Logger.debug(TAG, `launchParam: ${JSON.stringify(launchParam)}`);",
                  "successors": [
                    {
                      "id": 5,
                      "label": "    GlobalContext.get().setCameraSettingContext(this.context);\n    GlobalContext.get().getCameraSettingContext();",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "onDestroy",
          "type": "function",
          "start_line": 39,
          "end_line": 41,
          "functions": [],
          "classes": [],
          "simplified_code": "  onDestroy(): void {\n    Logger.info(TAG, 'Ability onDestroy');\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "onDestroy(): void {\n    Logger.info(TAG, 'Ability onDestroy');",
              "successors": [
                {
                  "id": 3,
                  "label": "}",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "onWindowStageCreate",
          "type": "function",
          "start_line": 43,
          "end_line": 67,
          "functions": [],
          "classes": [],
          "simplified_code": "  onWindowStageCreate(windowStage: window.WindowStage): void {\n    // Main window is created, set main page for this ability\n    Logger.info(TAG, 'Ability onWindowStageCreate');\n    windowStage.loadContent('pages/Index', (): void => {\n      Logger.info(TAG, 'Succeeded in loading the content.');\n    });\n    this.requestPermissionsFn();\n    AppStorage.setOrCreate<string>('deviceType', deviceInfo.deviceType);\n    windowStage.getMainWindow().then((win: window.Window): void => {\n      GlobalContext.get().setPromptAction(win.getUIContext().getPromptAction());\n      Logger.debug(TAG, 'Succeeded get promptAction.');\n      if (deviceInfo.deviceType === Constants.TABLET) {\n        win.setWindowLayoutFullScreen(true).then((): void => {\n          win.setWindowSystemBarEnable(['navigation']).then((): void => {\n          });\n        });\n        win.setWindowSystemBarProperties({\n          navigationBarColor: '#00000000',\n          navigationBarContentColor: '#B3B3B3'\n        })\n          .then((): void => {\n          });\n      }\n    });\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "onWindowStageCreate(windowStage: window.WindowStage): void {\nLogger.info(TAG, 'Ability onWindowStageCreate');",
              "successors": [
                {
                  "id": 3,
                  "label": "windowStage.loadContent('pages/Index', (): void => { Logger.info(TAG, 'Succeeded in loading the content.'); });\nthis.requestPermissionsFn();",
                  "successors": [
                    {
                      "id": 5,
                      "label": "AppStorage.setOrCreate<string>('deviceType', deviceInfo.deviceType);\nwindowStage.getMainWindow().then((win: window.Window): void => {",
                      "successors": [
                        {
                          "id": 7,
                          "label": "GlobalContext.get().setPromptAction(win.getUIContext().getPromptAction());\nLogger.debug(TAG, 'Succeeded get promptAction.');\nif (deviceInfo.deviceType === Constants.TABLET) {",
                          "successors": [
                            {
                              "id": 9,
                              "label": "win.setWindowLayoutFullScreen(true).then((): void => {\n  win.setWindowSystemBarEnable(['navigation']).then((): void => {\n  });\n});\nwin.setWindowSystemBarProperties({\n  navigationBarColor: '#00000000',\n  navigationBarContentColor: '#B3B3B3'\n}).then((): void => {\n});",
                              "successors": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "requestPermissionsFn",
          "type": "function",
          "start_line": 72,
          "end_line": 87,
          "functions": [],
          "classes": [],
          "simplified_code": "  requestPermissionsFn(): void {\n    let atManager = abilityAccessCtrl.createAtManager();\n    atManager.requestPermissionsFromUser(this.context, [\n      'ohos.permission.CAMERA',\n      'ohos.permission.MICROPHONE',\n      'ohos.permission.READ_MEDIA',\n      'ohos.permission.WRITE_MEDIA',\n      'ohos.permission.READ_IMAGEVIDEO',\n      'ohos.permission.WRITE_IMAGEVIDEO'\n    ]).then((): void => {\n      AppStorage.setOrCreate<boolean>('isShow', true);\n      Logger.info(TAG, 'request Permissions success!');\n    }).catch((error: BusinessError): void => {\n      Logger.info(TAG, `requestPermissionsFromUser call Failed! error: ${error.code}`);\n    });\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "requestPermissionsFn(): void {\nlet atManager = abilityAccessCtrl.createAtManager();",
              "successors": [
                {
                  "id": 3,
                  "label": "atManager.requestPermissionsFromUser(this.context, [\n  'ohos.permission.CAMERA',\n  'ohos.permission.MICROPHONE',\n  'ohos.permission.READ_MEDIA',\n  'ohos.permission.WRITE_MEDIA',\n  'ohos.permission.READ_IMAGEVIDEO',\n  'ohos.permission.WRITE_IMAGEVIDEO'\n]).then((): void => {\nAppStorage.setOrCreate<boolean>('isShow', true);\nLogger.info(TAG, 'request Permissions success!');",
                  "successors": [
                    {
                      "id": 7,
                      "label": "});\n}",
                      "successors": []
                    }
                  ]
                },
                {
                  "id": 5,
                  "label": "}).catch((error: BusinessError): void => {\nLogger.info(TAG, `requestPermissionsFromUser call Failed! error: ${error.code}`);",
                  "successors": [
                    {
                      "id": 7,
                      "label": "});\n}",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "simplified_code": "export default class EntryAbility extends UIAbility {\n\n  }\n\n  }\n\n  }\n\n  /**\n   * 获取权限\n   */\n  }\n}",
      "blocks": [
        {
          "id": 1,
          "label": "export default class EntryAbility extends UIAbility {",
          "successors": []
        }
      ]
    }
  ],
  "simplified_code": "/*\n * Copyright (c) 2023-2024 Huawei Device Co., Ltd.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type window from '@ohos.window';\nimport deviceInfo from '@ohos.deviceInfo';\nimport abilityAccessCtrl from '@ohos.abilityAccessCtrl';\nimport type Want from '@ohos.app.ability.Want';\nimport type AbilityConstant from '@ohos.app.ability.AbilityConstant';\nimport { BusinessError } from '@ohos.base';\nimport Logger from '../model/Logger';\nimport { Constants } from '../common/Constants';\nimport UIAbility from '@ohos.app.ability.UIAbility';\nimport { GlobalContext } from '../common/GlobalContext';\n\nconst TAG: string = 'EntryAbility';\n\n}",
  "blocks": [
    {
      "id": 1,
      "label": "import type window from '@ohos.window';\nimport deviceInfo from '@ohos.deviceInfo';",
      "successors": [
        {
          "id": 3,
          "label": "import abilityAccessCtrl from '@ohos.abilityAccessCtrl';\nimport type Want from '@ohos.app.ability.Want';",
          "successors": [
            {
              "id": 5,
              "label": "import type AbilityConstant from '@ohos.app.ability.AbilityConstant';\nimport { BusinessError } from '@ohos.base';",
              "successors": [
                {
                  "id": 7,
                  "label": "import Logger from '../model/Logger';\nimport { Constants } from '../common/Constants';",
                  "successors": [
                    {
                      "id": 9,
                      "label": "import UIAbility from '@ohos.app.ability.UIAbility';\nimport { GlobalContext } from '../common/GlobalContext';",
                      "successors": [
                        {
                          "id": 11,
                          "label": "const TAG: string = 'EntryAbility';",
                          "successors": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}