{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 176,
  "functions": [],
  "classes": [
    {
      "name": "ActionBarProp",
      "type": "class",
      "start_line": 20,
      "end_line": 176,
      "functions": [
        {
          "name": "constructor",
          "type": "function",
          "start_line": 52,
          "end_line": 53,
          "functions": [],
          "classes": [],
          "simplified_code": "  constructor() {\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "constructor() {\n  }",
              "successors": []
            }
          ]
        },
        {
          "name": "getCountDetailSelectedTitle",
          "type": "function",
          "start_line": 55,
          "end_line": 57,
          "functions": [],
          "classes": [],
          "simplified_code": "  public static getCountDetailSelectedTitle(count: number): Resource {\n    return $r('app.plural.count_details_selected', count, count);\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "public static getCountDetailSelectedTitle(count: number): Resource {\n    return $r('app.plural.count_details_selected', count, count);",
              "successors": []
            }
          ]
        },
        {
          "name": "getCountDetailExternalSelectedTitle",
          "type": "function",
          "start_line": 64,
          "end_line": 66,
          "functions": [],
          "classes": [],
          "simplified_code": "  public static getCountDetailExternalSelectedTitle(count: number, maxSelectCount: number): Resource {\n    return $r('app.string.count_details_external_selected', count, maxSelectCount);\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "public static getCountDetailExternalSelectedTitle(count: number, maxSelectCount: number): Resource {\nreturn $r('app.string.count_details_external_selected', count, maxSelectCount);",
              "successors": []
            }
          ]
        },
        {
          "name": "setHasTabBar",
          "type": "function",
          "start_line": 68,
          "end_line": 71,
          "functions": [],
          "classes": [],
          "simplified_code": "  public setHasTabBar(hasTabBar: boolean): ActionBarProp {\n    this.hasTabBar = hasTabBar;\n    return this;\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "public setHasTabBar(hasTabBar: boolean): ActionBarProp {\n  this.hasTabBar = hasTabBar;",
              "successors": [
                {
                  "id": 3,
                  "label": "  return this;",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "getHasTabBar",
          "type": "function",
          "start_line": 73,
          "end_line": 75,
          "functions": [],
          "classes": [],
          "simplified_code": "  public getHasTabBar(): boolean {\n    return this.hasTabBar;\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "public getHasTabBar(): boolean {\nreturn this.hasTabBar;",
              "successors": []
            }
          ]
        },
        {
          "name": "setLeftAction",
          "type": "function",
          "start_line": 77,
          "end_line": 80,
          "functions": [],
          "classes": [],
          "simplified_code": "  public setLeftAction(leftAction: Action): ActionBarProp {\n    this.leftAction = leftAction;\n    return this;\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "public setLeftAction(leftAction: Action): ActionBarProp {\n    this.leftAction = leftAction;",
              "successors": [
                {
                  "id": 3,
                  "label": "    return this;",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "getLeftAction",
          "type": "function",
          "start_line": 82,
          "end_line": 84,
          "functions": [],
          "classes": [],
          "simplified_code": "  public getLeftAction(): Action {\n    return this.leftAction;\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "public getLeftAction(): Action {\n    return this.leftAction;",
              "successors": []
            }
          ]
        },
        {
          "name": "setIsHeadTitle",
          "type": "function",
          "start_line": 86,
          "end_line": 89,
          "functions": [],
          "classes": [],
          "simplified_code": "  public setIsHeadTitle(isHeadTitle: boolean): ActionBarProp {\n    this.isHeadTitle = isHeadTitle;\n    return this;\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "public setIsHeadTitle(isHeadTitle: boolean): ActionBarProp {\n    this.isHeadTitle = isHeadTitle;",
              "successors": [
                {
                  "id": 3,
                  "label": "    return this;",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "getIsHeadTitle",
          "type": "function",
          "start_line": 91,
          "end_line": 93,
          "functions": [],
          "classes": [],
          "simplified_code": "  public getIsHeadTitle(): boolean {\n    return this.isHeadTitle;\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "public getIsHeadTitle(): boolean {\nreturn this.isHeadTitle;",
              "successors": []
            }
          ]
        },
        {
          "name": "setTitle",
          "type": "function",
          "start_line": 95,
          "end_line": 98,
          "functions": [],
          "classes": [],
          "simplified_code": "  public setTitle(title: Object): ActionBarProp {\n    this.title = title;\n    return this;\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "public setTitle(title: Object): ActionBarProp {\n    this.title = title;",
              "successors": [
                {
                  "id": 3,
                  "label": "    return this;",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "getTitle",
          "type": "function",
          "start_line": 100,
          "end_line": 102,
          "functions": [],
          "classes": [],
          "simplified_code": "  public getTitle(): Object {\n    return this.title;\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "public getTitle(): Object {\n    return this.title;",
              "successors": []
            }
          ]
        },
        {
          "name": "setSubTitle",
          "type": "function",
          "start_line": 104,
          "end_line": 107,
          "functions": [],
          "classes": [],
          "simplified_code": "  public setSubTitle(subTitle: Object): ActionBarProp {\n    this.subTitle = subTitle;\n    return this;\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "public setSubTitle(subTitle: Object): ActionBarProp {\nthis.subTitle = subTitle;",
              "successors": [
                {
                  "id": 3,
                  "label": "return this;",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "getSubTitle",
          "type": "function",
          "start_line": 109,
          "end_line": 111,
          "functions": [],
          "classes": [],
          "simplified_code": "  public getSubTitle(): Object {\n    return this.subTitle;\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "public getSubTitle(): Object {\nreturn this.subTitle;",
              "successors": []
            }
          ]
        },
        {
          "name": "setMenuList",
          "type": "function",
          "start_line": 113,
          "end_line": 116,
          "functions": [],
          "classes": [],
          "simplified_code": "  public setMenuList(menuList: Action[]): ActionBarProp {\n    this.menuList = menuList;\n    return this;\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "public setMenuList(menuList: Action[]): ActionBarProp {\nthis.menuList = menuList;",
              "successors": [
                {
                  "id": 3,
                  "label": "return this;",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "getMenuList",
          "type": "function",
          "start_line": 118,
          "end_line": 120,
          "functions": [],
          "classes": [],
          "simplified_code": "  public getMenuList(): Action[] {\n    return this.menuList;\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "public getMenuList(): Action[] {\n    return this.menuList;",
              "successors": []
            }
          ]
        },
        {
          "name": "setBackgroundColor",
          "type": "function",
          "start_line": 122,
          "end_line": 125,
          "functions": [],
          "classes": [],
          "simplified_code": "  public setBackgroundColor(backgroundColor: Resource): ActionBarProp {\n    this.backgroundColor = backgroundColor;\n    return this;\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "public setBackgroundColor(backgroundColor: Resource): ActionBarProp {\nthis.backgroundColor = backgroundColor;",
              "successors": [
                {
                  "id": 3,
                  "label": "return this;",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "getBackgroundColor",
          "type": "function",
          "start_line": 127,
          "end_line": 130,
          "functions": [],
          "classes": [],
          "simplified_code": "  public getBackgroundColor(): Resource {\n    return this.colorMode === ActionBarColorMode.TRANSPARENT\n      ? ActionBarProp.TRANSPARENT_BACKGROUND_COLOR : this.backgroundColor;\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "public getBackgroundColor(): Resource {\nreturn this.colorMode === ActionBarColorMode.TRANSPARENT\n  ? ActionBarProp.TRANSPARENT_BACKGROUND_COLOR : this.backgroundColor;",
              "successors": []
            }
          ]
        },
        {
          "name": "setAlpha",
          "type": "function",
          "start_line": 132,
          "end_line": 135,
          "functions": [],
          "classes": [],
          "simplified_code": "  public setAlpha(alpha: number): ActionBarProp {\n    this.alpha = alpha;\n    return this;\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "public setAlpha(alpha: number): ActionBarProp {\n    this.alpha = alpha;",
              "successors": [
                {
                  "id": 3,
                  "label": "    return this;",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "getAlpha",
          "type": "function",
          "start_line": 137,
          "end_line": 139,
          "functions": [],
          "classes": [],
          "simplified_code": "  public getAlpha(): number {\n    return this.alpha;\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "public getAlpha(): number {\nreturn this.alpha;",
              "successors": []
            }
          ]
        },
        {
          "name": "setMode",
          "type": "function",
          "start_line": 141,
          "end_line": 144,
          "functions": [],
          "classes": [],
          "simplified_code": "  public setMode(mode: ActionBarMode): ActionBarProp {\n    this.mode = mode;\n    return this;\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "public setMode(mode: ActionBarMode): ActionBarProp {\n    this.mode = mode;",
              "successors": [
                {
                  "id": 3,
                  "label": "    return this;",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "getMode",
          "type": "function",
          "start_line": 146,
          "end_line": 148,
          "functions": [],
          "classes": [],
          "simplified_code": "  public getMode(): ActionBarMode {\n    return this.mode;\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "public getMode(): ActionBarMode {\nreturn this.mode;",
              "successors": []
            }
          ]
        },
        {
          "name": "setColorMode",
          "type": "function",
          "start_line": 150,
          "end_line": 153,
          "functions": [],
          "classes": [],
          "simplified_code": "  public setColorMode(colorMode: ActionBarColorMode): ActionBarProp {\n    this.colorMode = colorMode;\n    return this;\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "public setColorMode(colorMode: ActionBarColorMode): ActionBarProp {\n    this.colorMode = colorMode;",
              "successors": [
                {
                  "id": 3,
                  "label": "    return this;",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "getColorMode",
          "type": "function",
          "start_line": 155,
          "end_line": 157,
          "functions": [],
          "classes": [],
          "simplified_code": "  public getColorMode(): ActionBarColorMode {\n    return this.colorMode;\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "public getColorMode(): ActionBarColorMode {\n    return this.colorMode;",
              "successors": []
            }
          ]
        },
        {
          "name": "setSelectionMode",
          "type": "function",
          "start_line": 159,
          "end_line": 162,
          "functions": [],
          "classes": [],
          "simplified_code": "  public setSelectionMode(selectionMode: ActionBarSelectionMode): ActionBarProp {\n    this.selectionMode = selectionMode;\n    return this;\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "public setSelectionMode(selectionMode: ActionBarSelectionMode): ActionBarProp {\n    this.selectionMode = selectionMode;",
              "successors": [
                {
                  "id": 3,
                  "label": "    return this;",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "getSelectionMode",
          "type": "function",
          "start_line": 164,
          "end_line": 166,
          "functions": [],
          "classes": [],
          "simplified_code": "  public getSelectionMode(): ActionBarSelectionMode {\n    return this.selectionMode;\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "public getSelectionMode(): ActionBarSelectionMode {\n    return this.selectionMode;",
              "successors": []
            }
          ]
        },
        {
          "name": "setMaxSelectCount",
          "type": "function",
          "start_line": 168,
          "end_line": 171,
          "functions": [],
          "classes": [],
          "simplified_code": "  public setMaxSelectCount(maxSelectCount: number): ActionBarProp {\n    this.maxSelectCount = maxSelectCount;\n    return this;\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "public setMaxSelectCount(maxSelectCount: number): ActionBarProp {\nthis.maxSelectCount = maxSelectCount;",
              "successors": [
                {
                  "id": 3,
                  "label": "return this;",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "getMaxSelectCount",
          "type": "function",
          "start_line": 173,
          "end_line": 175,
          "functions": [],
          "classes": [],
          "simplified_code": "  public getMaxSelectCount(): number {\n    return this.maxSelectCount;\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "public getMaxSelectCount(): number {\n    return this.maxSelectCount;",
              "successors": []
            }
          ]
        }
      ],
      "classes": [],
      "simplified_code": "export class ActionBarProp {\n  public static NORMAL_BACKGROUND_COLOR: Resource = $r('app.color.default_background_color');\n  public static TRANSPARENT_BACKGROUND_COLOR: Resource = $r('app.color.transparent');\n  public static NORMAL_TEXT_COLOR: Resource = $r('sys.color.ohos_id_color_titlebar_text');\n  public static NORMAL_SUBTITLE_TEXT_COLOR: Resource = $r('sys.color.ohos_id_color_titlebar_subtitle_text');\n  public static ICON_COLOR: Resource = $r('sys.color.ohos_id_color_primary');\n  public static TRANSPARENT_TEXT_COLOR: Resource = $r('app.color.title_text_color_on_transparent_bg');\n  public static TRANSPARENT_SUBTITLE_TEXT_COLOR: Resource = $r('app.color.subtitle_text_color_on_transparent_bg');\n  public static HEAD_TITLE_TEXT_SIZE: Resource = $r('sys.float.ohos_id_text_size_headline6');\n  public static HEAD_TITLE_ONE_LINE_TEXT_SIZE: Resource = $r('sys.float.ohos_id_text_size_headline7');\n  public static TITLE_TEXT_SIZE: Resource = $r('sys.float.ohos_id_text_size_headline8');\n  public static TITLE_FONT_WEIGHT = 500;\n  public static SUBTITLE_TEXT_SIZE: Resource = $r('sys.float.ohos_id_text_size_body2');\n  public static MEDIUM_FONT: Resource = $r('app.string.id_text_font_family_medium');\n  public static REGULAR_FONT: Resource = $r('app.string.id_text_font_family_regular');\n  public static SINGLE_UNSELECT_TITLE: Resource = $r('app.string.title_select_photos');\n  public static SINGLE_SELECT_ALBUM_TITLE: Resource = $r('app.string.title_select_album');\n  public static MULTI_UNSELECT_TITLE: Resource = $r('app.string.title_none_selected');\n  public static PHOTO_BROWSER_ACTIONBAR_ALPHA = 0.95;\n  private hasTabBar = false;\n  private leftAction = Action.NONE;\n  private isHeadTitle = false;\n  private title: Object = null;\n  private subTitle: Object = null;\n  private menuList: Action[] = [];\n  private backgroundColor: Resource = ActionBarProp.NORMAL_BACKGROUND_COLOR;\n  private alpha = 1;\n  private selectionMode: ActionBarSelectionMode = ActionBarSelectionMode.MULTI;\n  private colorMode: ActionBarColorMode = ActionBarColorMode.NORMAL;\n  private mode: ActionBarMode = ActionBarMode.STANDARD_MODE;\n  private maxSelectCount = 0;\n\n  }\n\n  }\n\n  /**\n   * External selection quantity display\n   * @param count The selected quantity, same as the current count above\n   * @param maxSelectCount Maximum number of options\n   */\n  }\n\n  }\n\n  }\n\n  }\n\n  }\n\n  }\n\n  }\n\n  }\n\n  }\n\n  }\n\n  }\n\n  }\n\n  }\n\n  }\n\n  }\n\n  }\n\n  }\n\n  }\n\n  }\n\n  }\n\n  }\n\n  }\n\n  }\n\n  }\n\n  }\n}",
      "blocks": [
        {
          "id": 1,
          "label": "export class ActionBarProp {",
          "successors": [
            {
              "id": 2,
              "label": "public static NORMAL_BACKGROUND_COLOR: Resource = $r('app.color.default_background_color');",
              "successors": []
            },
            {
              "id": 3,
              "label": "public static TRANSPARENT_BACKGROUND_COLOR: Resource = $r('app.color.transparent');",
              "successors": []
            },
            {
              "id": 4,
              "label": "public static NORMAL_TEXT_COLOR: Resource = $r('sys.color.ohos_id_color_titlebar_text');",
              "successors": []
            },
            {
              "id": 5,
              "label": "public static NORMAL_SUBTITLE_TEXT_COLOR: Resource = $r('sys.color.ohos_id_color_titlebar_subtitle_text');",
              "successors": []
            },
            {
              "id": 6,
              "label": "public static ICON_COLOR: Resource = $r('sys.color.ohos_id_color_primary');",
              "successors": []
            },
            {
              "id": 7,
              "label": "public static TRANSPARENT_TEXT_COLOR: Resource = $r('app.color.title_text_color_on_transparent_bg');",
              "successors": []
            },
            {
              "id": 8,
              "label": "public static TRANSPARENT_SUBTITLE_TEXT_COLOR: Resource = $r('app.color.subtitle_text_color_on_transparent_bg');",
              "successors": []
            },
            {
              "id": 9,
              "label": "public static HEAD_TITLE_TEXT_SIZE: Resource = $r('sys.float.ohos_id_text_size_headline6');",
              "successors": []
            },
            {
              "id": 10,
              "label": "public static HEAD_TITLE_ONE_LINE_TEXT_SIZE: Resource = $r('sys.float.ohos_id_text_size_headline7');",
              "successors": []
            },
            {
              "id": 11,
              "label": "public static TITLE_TEXT_SIZE: Resource = $r('sys.float.ohos_id_text_size_headline8');",
              "successors": []
            },
            {
              "id": 12,
              "label": "public static TITLE_FONT_WEIGHT = 500;",
              "successors": []
            },
            {
              "id": 13,
              "label": "public static SUBTITLE_TEXT_SIZE: Resource = $r('sys.float.ohos_id_text_size_body2');",
              "successors": []
            },
            {
              "id": 14,
              "label": "public static MEDIUM_FONT: Resource = $r('app.string.id_text_font_family_medium');",
              "successors": []
            },
            {
              "id": 15,
              "label": "public static REGULAR_FONT: Resource = $r('app.string.id_text_font_family_regular');",
              "successors": []
            },
            {
              "id": 16,
              "label": "public static SINGLE_UNSELECT_TITLE: Resource = $r('app.string.title_select_photos');",
              "successors": []
            },
            {
              "id": 17,
              "label": "public static SINGLE_SELECT_ALBUM_TITLE: Resource = $r('app.string.title_select_album');",
              "successors": []
            },
            {
              "id": 18,
              "label": "public static MULTI_UNSELECT_TITLE: Resource = $r('app.string.title_none_selected');",
              "successors": []
            },
            {
              "id": 19,
              "label": "public static PHOTO_BROWSER_ACTIONBAR_ALPHA = 0.95;",
              "successors": []
            },
            {
              "id": 20,
              "label": "private hasTabBar = false;",
              "successors": []
            },
            {
              "id": 21,
              "label": "private leftAction = Action.NONE;",
              "successors": []
            },
            {
              "id": 22,
              "label": "private isHeadTitle = false;",
              "successors": []
            },
            {
              "id": 23,
              "label": "private title: Object = null;",
              "successors": []
            },
            {
              "id": 24,
              "label": "private subTitle: Object = null;",
              "successors": []
            },
            {
              "id": 25,
              "label": "private menuList: Action[] = [];",
              "successors": []
            },
            {
              "id": 26,
              "label": "private backgroundColor: Resource = ActionBarProp.NORMAL_BACKGROUND_COLOR;",
              "successors": []
            },
            {
              "id": 27,
              "label": "private alpha = 1;",
              "successors": []
            },
            {
              "id": 28,
              "label": "private selectionMode: ActionBarSelectionMode = ActionBarSelectionMode.MULTI;",
              "successors": []
            },
            {
              "id": 29,
              "label": "private colorMode: ActionBarColorMode = ActionBarColorMode.NORMAL;",
              "successors": []
            },
            {
              "id": 30,
              "label": "private mode: ActionBarMode = ActionBarMode.STANDARD_MODE;",
              "successors": []
            },
            {
              "id": 31,
              "label": "private maxSelectCount = 0;",
              "successors": []
            }
          ]
        }
      ]
    }
  ],
  "simplified_code": "/*\n * Copyright (c) 2023 Shenzhen Kaihong Digital Industry Development Co., Ltd.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Action } from '../models/Action'\nimport { ActionBarMode, ActionBarColorMode, ActionBarSelectionMode } from '../models/ActionBarMode'\n\n// ActionBarProp\n}",
  "blocks": [
    {
      "id": 1,
      "label": "import { Action } from '../models/Action'\nimport { ActionBarMode, ActionBarColorMode, ActionBarSelectionMode } from '../models/ActionBarMode'",
      "successors": []
    }
  ]
}