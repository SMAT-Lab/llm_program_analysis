{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 32,
  "functions": [
    {
      "name": "createJobFromFile",
      "type": "function",
      "start_line": 17,
      "end_line": 32,
      "functions": [],
      "classes": [],
      "simplified_code": "export async function createJobFromFile(payload: FileUploadPayload) {\n  try {\n    const { data } = await axios.post<EdgeJob>(\n      buildUrl({ action: 'create/file' }),\n      json2formData(payload),\n      {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      }\n    );\n    return data;\n  } catch (e) {\n    throw parseAxiosError(e as Error);\n  }\n}",
      "blocks": [
        {
          "id": 1,
          "label": "export async function createJobFromFile(payload: FileUploadPayload) {",
          "successors": [
            {
              "id": 2,
              "label": "try {",
              "successors": [
                {
                  "id": 3,
                  "label": "const { data } = await axios.post<EdgeJob>( buildUrl({ action: 'create/file' }), json2formData(payload), { headers: { 'Content-Type': 'multipart/form-data' }, } );\nreturn data;",
                  "successors": []
                },
                {
                  "id": 5,
                  "label": "} catch (e) {\nthrow parseAxiosError(e as Error);",
                  "successors": []
                },
                {
                  "id": 7,
                  "label": "}",
                  "successors": []
                }
              ]
            },
            {
              "id": 8,
              "label": "}",
              "successors": []
            }
          ]
        }
      ]
    }
  ],
  "classes": [],
  "simplified_code": "import axios, {\n  json2formData,\n  parseAxiosError,\n} from '@/portainer/services/axios';\nimport { EdgeGroup } from '@/react/edge/edge-groups/types';\nimport { EnvironmentId } from '@/react/portainer/environments/types';\nimport { EdgeJob } from '../../types';\nimport { buildUrl } from '../build-url';\nexport type FileUploadPayload = {\n  Name: string;\n  CronExpression: string;\n  Recurring: boolean;\n  EdgeGroups: Array<EdgeGroup['Id']>;\n  Endpoints: Array<EnvironmentId>;\n  File: File;\n};\n}",
  "blocks": [
    {
      "id": 1,
      "label": "import axios, { json2formData, parseAxiosError } from '@/portainer/services/axios';\nimport { EdgeGroup } from '@/react/edge/edge-groups/types';",
      "successors": [
        {
          "id": 3,
          "label": "import { EnvironmentId } from '@/react/portainer/environments/types';\nimport { EdgeJob } from '../../types';",
          "successors": [
            {
              "id": 5,
              "label": "import { buildUrl } from '../build-url';\nexport type FileUploadPayload = { Name: string; CronExpression: string; Recurring: boolean; EdgeGroups: Array<EdgeGroup['Id']>; Endpoints: Array<EnvironmentId>; File: File; };",
              "successors": []
            }
          ]
        }
      ]
    }
  ]
}