{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 45,
  "functions": [],
  "classes": [
    {
      "name": "DisplayCalculator",
      "type": "class",
      "start_line": 18,
      "end_line": 45,
      "functions": [
        {
          "name": "calcSurfaceDisplaySize",
          "type": "function",
          "start_line": 19,
          "end_line": 44,
          "functions": [],
          "classes": [],
          "simplified_code": "  public static calcSurfaceDisplaySize(screenWidth: number, screenHeight: number, defaultAspectRatio: number): {\n    width: number,\n    height: number\n  } {\n    const displaySize = {\n      width: 1920, height: 1080\n    };\n    if (AppStorage.get<string>('deviceType') === Constants.TABLET || screenWidth > screenHeight) {\n      if (screenWidth / screenHeight > defaultAspectRatio) {\n        displaySize.width = Math.floor(screenHeight * defaultAspectRatio);\n        displaySize.height = Math.floor(screenHeight);\n      } else {\n        displaySize.width = Math.floor(screenWidth);\n        displaySize.height = Math.floor(screenWidth / defaultAspectRatio);\n      }\n    } else {\n      if (screenWidth / screenHeight > defaultAspectRatio) {\n        displaySize.width = Math.floor(screenHeight / defaultAspectRatio);\n        displaySize.height = Math.floor(screenHeight);\n      } else {\n        displaySize.width = Math.floor(screenWidth);\n        displaySize.height = Math.floor(screenWidth * defaultAspectRatio);\n      }\n    }\n    return displaySize;\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "const displaySize = {\n  width: 1920, height: 1080\n};\nif (AppStorage.get<string>('deviceType') === Constants.TABLET || screenWidth > screenHeight) {",
              "successors": [
                {
                  "id": 3,
                  "label": "if (screenWidth / screenHeight > defaultAspectRatio) {",
                  "successors": [
                    {
                      "id": 4,
                      "label": "displaySize.width = Math.floor(screenHeight * defaultAspectRatio);\ndisplaySize.height = Math.floor(screenHeight);\nreturn displaySize;",
                      "successors": []
                    },
                    {
                      "id": 5,
                      "label": "} else {\ndisplaySize.width = Math.floor(screenWidth);\ndisplaySize.height = Math.floor(screenWidth / defaultAspectRatio);",
                      "successors": [
                        {
                          "id": 9,
                          "label": "return displaySize;",
                          "successors": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "id": 7,
                  "label": "} else {\nif (screenWidth / screenHeight > defaultAspectRatio) {\ndisplaySize.width = Math.floor(screenHeight / defaultAspectRatio);\ndisplaySize.height = Math.floor(screenHeight);\n} else {\ndisplaySize.width = Math.floor(screenWidth);\ndisplaySize.height = Math.floor(screenWidth * defaultAspectRatio);",
                  "successors": [
                    {
                      "id": 9,
                      "label": "return displaySize;",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "simplified_code": "export default class DisplayCalculator {\n  }\n}",
      "blocks": [
        {
          "id": 1,
          "label": "export default class DisplayCalculator {",
          "successors": []
        }
      ]
    }
  ],
  "simplified_code": "/*\n * Copyright (c) 2023 Huawei Device Co., Ltd.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Constants } from '../common/Constants';\n\n}",
  "blocks": []
}