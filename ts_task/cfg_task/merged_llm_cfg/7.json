{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 164,
  "functions": [],
  "classes": [
    {
      "name": "GlobalContext",
      "type": "class",
      "start_line": 24,
      "end_line": 164,
      "functions": [
        {
          "name": "constructor",
          "type": "function",
          "start_line": 26,
          "end_line": 27,
          "functions": [],
          "classes": [],
          "simplified_code": "  private constructor() {\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "private constructor() {\n}",
              "successors": []
            }
          ]
        },
        {
          "name": "get",
          "type": "function",
          "start_line": 44,
          "end_line": 49,
          "functions": [],
          "classes": [],
          "simplified_code": "  public static get(): GlobalContext {\n    if (!Boolean(GlobalContext.instance).valueOf()) {\n      GlobalContext.instance = new GlobalContext();\n    }\n    return GlobalContext.instance;\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "if (!Boolean(GlobalContext.instance).valueOf()) {",
              "successors": [
                {
                  "id": 2,
                  "label": "    GlobalContext.instance = new GlobalContext();\nreturn GlobalContext.instance;",
                  "successors": []
                },
                {
                  "id": 3,
                  "label": "return GlobalContext.instance;",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "getObject",
          "type": "function",
          "start_line": 51,
          "end_line": 53,
          "functions": [],
          "classes": [],
          "simplified_code": "  getObject(value: string): Object {\n    return this._objects.get(value);\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "getObject(value: string): Object {\n    return this._objects.get(value);",
              "successors": []
            }
          ]
        },
        {
          "name": "getT",
          "type": "function",
          "start_line": 55,
          "end_line": 57,
          "functions": [],
          "classes": [],
          "simplified_code": "  getT<T>(value: string): T {\n    return this._objects.get(value) as T;\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "getT<T>(value: string): T {\n    return this._objects.get(value) as T;",
              "successors": []
            }
          ]
        },
        {
          "name": "setObject",
          "type": "function",
          "start_line": 59,
          "end_line": 61,
          "functions": [],
          "classes": [],
          "simplified_code": "  setObject(key: string, objectClass: Object): void {\n    this._objects.set(key, objectClass);\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "setObject(key: string, objectClass: Object): void {\n    this._objects.set(key, objectClass);",
              "successors": [
                {
                  "id": 3,
                  "label": "}",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "apply",
          "type": "function",
          "start_line": 63,
          "end_line": 68,
          "functions": [],
          "classes": [],
          "simplified_code": "  apply(value: string): void {\n    const func = this._objects.get(value);\n    if (func) {\n      (func as Function)();\n    }\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "const func = this._objects.get(value);\nif (func) {",
              "successors": [
                {
                  "id": 3,
                  "label": "  (func as Function)();",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "getDisplayInfo",
          "type": "function",
          "start_line": 71,
          "end_line": 76,
          "functions": [],
          "classes": [],
          "simplified_code": "  public getDisplayInfo(): display.Display {\n    if (!this.mDisplay) {\n      this.mDisplay = display.getDefaultDisplaySync();\n    }\n    return this.mDisplay;\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "public getDisplayInfo(): display.Display {",
              "successors": [
                {
                  "id": 2,
                  "label": "if (!this.mDisplay) {\nthis.mDisplay = display.getDefaultDisplaySync();",
                  "successors": []
                },
                {
                  "id": 4,
                  "label": "return this.mDisplay;",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "getCutoutInfo",
          "type": "function",
          "start_line": 78,
          "end_line": 83,
          "functions": [],
          "classes": [],
          "simplified_code": "  public async getCutoutInfo(): Promise<display.CutoutInfo> {\n    if (!this.mCutoutInfo) {\n      this.mCutoutInfo = await this.getDisplayInfo().getCutoutInfo();\n    }\n    return this.mCutoutInfo;\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "public async getCutoutInfo(): Promise<display.CutoutInfo> {",
              "successors": [
                {
                  "id": 2,
                  "label": "if (!this.mCutoutInfo) {\nthis.mCutoutInfo = await this.getDisplayInfo().getCutoutInfo();",
                  "successors": [
                    {
                      "id": 4,
                      "label": "}",
                      "successors": []
                    }
                  ]
                },
                {
                  "id": 5,
                  "label": "return this.mCutoutInfo;\n}",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "getCameraAbilityContext",
          "type": "function",
          "start_line": 85,
          "end_line": 87,
          "functions": [],
          "classes": [],
          "simplified_code": "  public getCameraAbilityContext(): common.UIAbilityContext {\n    return this.cameraAbilityContext;\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "public getCameraAbilityContext(): common.UIAbilityContext {\n    return this.cameraAbilityContext;",
              "successors": []
            }
          ]
        },
        {
          "name": "setCameraAbilityContext",
          "type": "function",
          "start_line": 89,
          "end_line": 91,
          "functions": [],
          "classes": [],
          "simplified_code": "  public setCameraAbilityContext(context: common.UIAbilityContext): void {\n    this.cameraAbilityContext = context;\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "public setCameraAbilityContext(context: common.UIAbilityContext): void {\n    this.cameraAbilityContext = context;",
              "successors": [
                {
                  "id": 3,
                  "label": "}",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "getCameraAbilityWant",
          "type": "function",
          "start_line": 93,
          "end_line": 95,
          "functions": [],
          "classes": [],
          "simplified_code": "  public getCameraAbilityWant(): Want {\n    return this.cameraAbilityWant;\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "public getCameraAbilityWant(): Want {\n    return this.cameraAbilityWant;",
              "successors": []
            }
          ]
        },
        {
          "name": "setCameraAbilityWant",
          "type": "function",
          "start_line": 97,
          "end_line": 99,
          "functions": [],
          "classes": [],
          "simplified_code": "  public setCameraAbilityWant(want: Want): void {\n    this.cameraAbilityWant = want;\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "public setCameraAbilityWant(want: Want): void {\n    this.cameraAbilityWant = want;",
              "successors": []
            }
          ]
        },
        {
          "name": "getCameraNewWant",
          "type": "function",
          "start_line": 101,
          "end_line": 103,
          "functions": [],
          "classes": [],
          "simplified_code": "  public getCameraNewWant(): Want {\n    return this.cameraNewWant;\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "public getCameraNewWant(): Want {\nreturn this.cameraNewWant;",
              "successors": []
            }
          ]
        },
        {
          "name": "setCameraNewWant",
          "type": "function",
          "start_line": 105,
          "end_line": 107,
          "functions": [],
          "classes": [],
          "simplified_code": "  public setCameraNewWant(want: Want): void {\n    this.cameraNewWant = want;\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "public setCameraNewWant(want: Want): void {\nthis.cameraNewWant = want;",
              "successors": [
                {
                  "id": 3,
                  "label": "}",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "getWindowStage",
          "type": "function",
          "start_line": 109,
          "end_line": 111,
          "functions": [],
          "classes": [],
          "simplified_code": "  public getWindowStage(): window.WindowStage {\n    return this.windowStage;\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "public getWindowStage(): window.WindowStage {\n    return this.windowStage;",
              "successors": []
            }
          ]
        },
        {
          "name": "setWindowStage",
          "type": "function",
          "start_line": 113,
          "end_line": 115,
          "functions": [],
          "classes": [],
          "simplified_code": "  public setWindowStage(stage: window.WindowStage): void {\n    this.windowStage = stage;\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "public setWindowStage(stage: window.WindowStage): void {\n    this.windowStage = stage;",
              "successors": []
            }
          ]
        },
        {
          "name": "getCameraAbilityStageContext",
          "type": "function",
          "start_line": 117,
          "end_line": 119,
          "functions": [],
          "classes": [],
          "simplified_code": "  public getCameraAbilityStageContext(): common.AbilityStageContext {\n    return this.cameraAbilityStageContext;\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "public getCameraAbilityStageContext(): common.AbilityStageContext {\nreturn this.cameraAbilityStageContext;",
              "successors": []
            }
          ]
        },
        {
          "name": "setCameraAbilityStageContext",
          "type": "function",
          "start_line": 121,
          "end_line": 123,
          "functions": [],
          "classes": [],
          "simplified_code": "  public setCameraAbilityStageContext(context: common.AbilityStageContext): void {\n    this.cameraAbilityStageContext = context;\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "public setCameraAbilityStageContext(context: common.AbilityStageContext): void {\nthis.cameraAbilityStageContext = context;",
              "successors": [
                {
                  "id": 3,
                  "label": "}",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "getCameraWinClass",
          "type": "function",
          "start_line": 125,
          "end_line": 127,
          "functions": [],
          "classes": [],
          "simplified_code": "  public getCameraWinClass(): window.Window {\n    return this.cameraWinClass;\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "public getCameraWinClass(): window.Window {\n    return this.cameraWinClass;",
              "successors": []
            }
          ]
        },
        {
          "name": "setCameraWinClass",
          "type": "function",
          "start_line": 129,
          "end_line": 131,
          "functions": [],
          "classes": [],
          "simplified_code": "  public setCameraWinClass(win: window.Window): void {\n    this.cameraWinClass = win;\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "public setCameraWinClass(win: window.Window): void {\n    this.cameraWinClass = win;",
              "successors": []
            }
          ]
        },
        {
          "name": "getCameraSettingContext",
          "type": "function",
          "start_line": 133,
          "end_line": 135,
          "functions": [],
          "classes": [],
          "simplified_code": "  public getCameraSettingContext(): common.UIAbilityContext {\n    return this.cameraSettingContext;\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "public getCameraSettingContext(): common.UIAbilityContext {\nreturn this.cameraSettingContext;",
              "successors": []
            }
          ]
        },
        {
          "name": "setCameraSettingContext",
          "type": "function",
          "start_line": 137,
          "end_line": 139,
          "functions": [],
          "classes": [],
          "simplified_code": "  public setCameraSettingContext(context: common.UIAbilityContext): void {\n    this.cameraSettingContext = context;\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "public setCameraSettingContext(context: common.UIAbilityContext): void {\n    this.cameraSettingContext = context;",
              "successors": []
            }
          ]
        },
        {
          "name": "setPromptAction",
          "type": "function",
          "start_line": 141,
          "end_line": 143,
          "functions": [],
          "classes": [],
          "simplified_code": "  public setPromptAction(promptAction: PromptAction): void {\n    this.promptAction = promptAction;\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "public setPromptAction(promptAction: PromptAction): void {\n    this.promptAction = promptAction;",
              "successors": [
                {
                  "id": 3,
                  "label": "}",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "getPromptAction",
          "type": "function",
          "start_line": 145,
          "end_line": 147,
          "functions": [],
          "classes": [],
          "simplified_code": "  public getPromptAction(): PromptAction {\n    return this.promptAction;\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "public getPromptAction(): PromptAction {\n    return this.promptAction;",
              "successors": []
            }
          ]
        },
        {
          "name": "getCameraWindowStageEvent",
          "type": "function",
          "start_line": 149,
          "end_line": 151,
          "functions": [],
          "classes": [],
          "simplified_code": "  public getCameraWindowStageEvent(): window.WindowStageEventType {\n    return this.cameraWindowStageEvent;\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "public getCameraWindowStageEvent(): window.WindowStageEventType {\nreturn this.cameraWindowStageEvent;",
              "successors": []
            }
          ]
        },
        {
          "name": "setCameraWindowStageEvent",
          "type": "function",
          "start_line": 153,
          "end_line": 155,
          "functions": [],
          "classes": [],
          "simplified_code": "  public setCameraWindowStageEvent(event: window.WindowStageEventType): void {\n    this.cameraWindowStageEvent = event;\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "public setCameraWindowStageEvent(event: window.WindowStageEventType): void {\n    this.cameraWindowStageEvent = event;",
              "successors": []
            }
          ]
        },
        {
          "name": "getXComponentController",
          "type": "function",
          "start_line": 157,
          "end_line": 159,
          "functions": [],
          "classes": [],
          "simplified_code": "  public getXComponentController(): XComponentController {\n    return this.xComponentController;\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "public getXComponentController(): XComponentController {\n    return this.xComponentController;",
              "successors": []
            }
          ]
        },
        {
          "name": "setXComponentController",
          "type": "function",
          "start_line": 161,
          "end_line": 163,
          "functions": [],
          "classes": [],
          "simplified_code": "  public setXComponentController(controller): void {\n    this.xComponentController = controller;\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "public setXComponentController(controller): void {\n    this.xComponentController = controller;",
              "successors": []
            }
          ]
        }
      ],
      "classes": [],
      "simplified_code": "export class GlobalContext {\n\n  }\n\n  private static instance: GlobalContext;\n  private _objects = new Map<string, Object>();\n  private mDisplay: display.Display | undefined = undefined;\n  private mCutoutInfo: display.CutoutInfo | undefined = undefined;\n  private cameraAbilityContext: common.UIAbilityContext;\n  private cameraAbilityStageContext: common.AbilityStageContext;\n  private cameraAbilityWant: Want;\n  private cameraNewWant: Want;\n  private windowStage: window.WindowStage;\n  private cameraWinClass: window.Window;\n  private cameraSettingContext: common.UIAbilityContext;\n  private cameraWindowStageEvent: window.WindowStageEventType;\n  private xComponentController: XComponentController;\n  private promptAction: PromptAction;\n\n  }\n\n  }\n\n  }\n\n  }\n\n  }\n\n  // 显示实例，在 phone设备上用 display获得的长宽与 State变量中 windowSize一致。\n  }\n\n  }\n\n  }\n\n  }\n\n  }\n\n  }\n\n  }\n\n  }\n\n  }\n\n  }\n\n  }\n\n  }\n\n  }\n\n  }\n\n  }\n\n  }\n\n  }\n\n  }\n\n  }\n\n  }\n\n  }\n\n  }\n}",
      "blocks": [
        {
          "id": 1,
          "label": "export class GlobalContext {\n\n  private static instance: GlobalContext;\n  private _objects = new Map<string, Object>();\n  private mDisplay: display.Display | undefined = undefined;\n  private mCutoutInfo: display.CutoutInfo | undefined = undefined;\n  private cameraAbilityContext: common.UIAbilityContext;\n  private cameraAbilityStageContext: common.AbilityStageContext;\n  private cameraAbilityWant: Want;\n  private cameraNewWant: Want;\n  private windowStage: window.WindowStage;\n  private cameraWinClass: window.Window;\n  private cameraSettingContext: common.UIAbilityContext;\n  private cameraWindowStageEvent: window.WindowStageEventType;\n  private xComponentController: XComponentController;\n  private promptAction: PromptAction;\n\n  // 显示实例，在 phone设备上用 display获得的长宽与 State变量中 windowSize一致。\n\n}",
          "successors": []
        }
      ]
    }
  ],
  "simplified_code": "/*\n * Copyright (c) 2024 Huawei Device Co., Ltd.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport display from '@ohos.display';\nimport type common from '@ohos.app.ability.common';\nimport type Want from '@ohos.app.ability.Want';\nimport type window from '@ohos.window';\nimport type { PromptAction } from '@ohos.arkui.UIContext';\n\nconst TAG: string = 'GlobalContext';\n\n}",
  "blocks": []
}