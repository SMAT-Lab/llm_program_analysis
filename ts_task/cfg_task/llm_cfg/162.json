{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 34,
  "functions": [
    {
      "name": "updateAppEditorTsConfigExcludedFiles",
      "type": "function",
      "start_line": 8,
      "end_line": 34,
      "functions": [
        {
          "name": "(anonymous function)",
          "type": "function",
          "start_line": 27,
          "end_line": 33,
          "functions": [],
          "classes": [],
          "simplified_code": "  updateJson(tree, editorTsConfigPath, (json) => {\n    const exclude = [...(json.exclude ?? []), ...(appTsConfig.exclude ?? [])];\n    if (exclude.length) {\n      json.exclude = Array.from(new Set(exclude));\n    }\n    return json;\n  });",
          "blocks": [
            {
              "id": 1,
              "label": "updateJson(tree, editorTsConfigPath, (json) => {",
              "successors": [
                {
                  "id": 2,
                  "label": "const exclude = [...(json.exclude ?? []), ...(appTsConfig.exclude ?? [])];",
                  "successors": [
                    {
                      "id": 3,
                      "label": "if (exclude.length) {",
                      "successors": [
                        {
                          "id": 4,
                          "label": "json.exclude = Array.from(new Set(exclude));",
                          "successors": [
                            {
                              "id": 5,
                              "label": "}",
                              "successors": [
                                {
                                  "id": 6,
                                  "label": "return json;",
                                  "successors": [
                                    {
                                      "id": 7,
                                      "label": "});",
                                      "successors": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "classes": [],
      "simplified_code": "export function updateAppEditorTsConfigExcludedFiles(\n  tree: Tree,\n  projectConfig: ProjectConfiguration\n) {\n  if (projectConfig.projectType !== 'application') {\n    return;\n  }\n  const editorTsConfigPath = joinPathFragments(\n    projectConfig.root,\n    'tsconfig.editor.json'\n  );\n  const appTsConfigPath = joinPathFragments(\n    projectConfig.root,\n    'tsconfig.app.json'\n  );\n  if (!tree.exists(editorTsConfigPath) || !tree.exists(appTsConfigPath)) {\n    return;\n  }\n  const appTsConfig = readJson(tree, appTsConfigPath);\n  });\n}",
      "blocks": [
        {
          "id": 1,
          "label": "export function updateAppEditorTsConfigExcludedFiles(tree: Tree, projectConfig: ProjectConfiguration) {",
          "successors": [
            {
              "id": 2,
              "label": "if (projectConfig.projectType !== 'application') {",
              "successors": [
                {
                  "id": 3,
                  "label": "return;",
                  "successors": []
                }
              ]
            },
            {
              "id": 4,
              "label": "const editorTsConfigPath = joinPathFragments(projectConfig.root, 'tsconfig.editor.json');",
              "successors": [
                {
                  "id": 5,
                  "label": "const appTsConfigPath = joinPathFragments(projectConfig.root, 'tsconfig.app.json');",
                  "successors": [
                    {
                      "id": 6,
                      "label": "if (!tree.exists(editorTsConfigPath) || !tree.exists(appTsConfigPath)) {",
                      "successors": [
                        {
                          "id": 7,
                          "label": "return;",
                          "successors": []
                        }
                      ]
                    },
                    {
                      "id": 8,
                      "label": "const appTsConfig = readJson(tree, appTsConfigPath);",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ],
  "classes": [],
  "simplified_code": "import {\n  joinPathFragments,\n  readJson,\n  updateJson,\n  type ProjectConfiguration,\n  type Tree,\n} from '@nx/devkit';\n}",
  "blocks": [
    {
      "id": 1,
      "label": "import {",
      "successors": [
        {
          "id": 2,
          "label": "  joinPathFragments,",
          "successors": [
            {
              "id": 3,
              "label": "  readJson,",
              "successors": [
                {
                  "id": 4,
                  "label": "  updateJson,",
                  "successors": [
                    {
                      "id": 5,
                      "label": "  type ProjectConfiguration,",
                      "successors": [
                        {
                          "id": 6,
                          "label": "  type Tree,",
                          "successors": [
                            {
                              "id": 7,
                              "label": "} from '@nx/devkit';",
                              "successors": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}