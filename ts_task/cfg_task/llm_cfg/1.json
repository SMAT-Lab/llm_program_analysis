{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 36,
  "functions": [],
  "classes": [
    {
      "name": "GlobalContext",
      "type": "class",
      "start_line": 16,
      "end_line": 36,
      "functions": [
        {
          "name": "getContext",
          "type": "function",
          "start_line": 21,
          "end_line": 26,
          "functions": [],
          "classes": [],
          "simplified_code": "  public static getContext(): GlobalContext {\n    if (!GlobalContext.instance) {\n      GlobalContext.instance = new GlobalContext();\n    }\n    return GlobalContext.instance;\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "public static getContext(): GlobalContext {",
              "successors": [
                {
                  "id": 2,
                  "label": "if (!GlobalContext.instance) {",
                  "successors": [
                    {
                      "id": 3,
                      "label": "GlobalContext.instance = new GlobalContext();",
                      "successors": []
                    }
                  ]
                },
                {
                  "id": 4,
                  "label": "return GlobalContext.instance;",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "getObject",
          "type": "function",
          "start_line": 28,
          "end_line": 30,
          "functions": [],
          "classes": [],
          "simplified_code": "  getObject(value: string):Object {\n    return this._objects.get(value);\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "getObject(value: string):Object {",
              "successors": [
                {
                  "id": 2,
                  "label": "    return this._objects.get(value);",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "setObject",
          "type": "function",
          "start_line": 32,
          "end_line": 34,
          "functions": [],
          "classes": [],
          "simplified_code": "  setObject(key: string, objectClass: Object): void {\n    this._objects.set(key, objectClass);\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "setObject(key: string, objectClass: Object): void {",
              "successors": [
                {
                  "id": 2,
                  "label": "    this._objects.set(key, objectClass);",
                  "successors": []
                }
              ]
            }
          ]
        }
      ],
      "simplified_code": "export class GlobalContext {\n  private constructor() {}\n  private static instance: GlobalContext;\n  private _objects = new Map<string,Object>();\n\n  }\n\n  }\n\n  }\n\n}",
      "blocks": [
        {
          "id": 1,
          "label": "export class GlobalContext {",
          "successors": [
            {
              "id": 2,
              "label": "private constructor() {}",
              "successors": []
            },
            {
              "id": 3,
              "label": "private static instance: GlobalContext;",
              "successors": []
            },
            {
              "id": 4,
              "label": "private _objects = new Map<string,Object>();",
              "successors": []
            }
          ]
        }
      ]
    }
  ],
  "simplified_code": "/*\n * Copyright (C) 2023 Huawei Device Co., Ltd.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// \u6784\u9020\u5355\u4f8b\u5bf9\u8c61\n}",
  "blocks": [
    {
      "id": 1,
      "label": "// \u6784\u9020\u5355\u4f8b\u5bf9\u8c61",
      "successors": []
    }
  ]
}