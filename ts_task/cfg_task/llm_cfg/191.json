{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 119,
  "functions": [],
  "classes": [
    {
      "name": "EmbeddingsAwsBedrock",
      "type": "class",
      "start_line": 11,
      "end_line": 119,
      "functions": [
        {
          "name": "supplyData",
          "type": "function",
          "start_line": 102,
          "end_line": 118,
          "functions": [],
          "classes": [],
          "simplified_code": "\tasync supplyData(this: ISupplyDataFunctions, itemIndex: number): Promise<SupplyData> {\n\t\tconst credentials = await this.getCredentials('aws');\n\t\tconst modelName = this.getNodeParameter('model', itemIndex) as string;\n\t\tconst embeddings = new BedrockEmbeddings({\n\t\t\tregion: credentials.region as string,\n\t\t\tmodel: modelName,\n\t\t\tmaxRetries: 3,\n\t\t\tcredentials: {\n\t\t\t\tsecretAccessKey: credentials.secretAccessKey as string,\n\t\t\t\taccessKeyId: credentials.accessKeyId as string,\n\t\t\t\tsessionToken: credentials.sessionToken as string,\n\t\t\t},\n\t\t});\n\t\treturn {\n\t\t\tresponse: logWrapper(embeddings, this),\n\t\t};\n\t}",
          "blocks": [
            {
              "id": 1,
              "label": "async supplyData(this: ISupplyDataFunctions, itemIndex: number): Promise<SupplyData> {",
              "successors": [
                {
                  "id": 2,
                  "label": "    const credentials = await this.getCredentials('aws');",
                  "successors": [
                    {
                      "id": 3,
                      "label": "    const modelName = this.getNodeParameter('model', itemIndex) as string;",
                      "successors": [
                        {
                          "id": 4,
                          "label": "    const embeddings = new BedrockEmbeddings({",
                          "successors": [
                            {
                              "id": 5,
                              "label": "        region: credentials.region as string,",
                              "successors": [
                                {
                                  "id": 6,
                                  "label": "        model: modelName,",
                                  "successors": [
                                    {
                                      "id": 7,
                                      "label": "        maxRetries: 3,",
                                      "successors": [
                                        {
                                          "id": 8,
                                          "label": "        credentials: {",
                                          "successors": [
                                            {
                                              "id": 9,
                                              "label": "            secretAccessKey: credentials.secretAccessKey as string,",
                                              "successors": [
                                                {
                                                  "id": 10,
                                                  "label": "            accessKeyId: credentials.accessKeyId as string,",
                                                  "successors": [
                                                    {
                                                      "id": 11,
                                                      "label": "            sessionToken: credentials.sessionToken as string,",
                                                      "successors": [
                                                        {
                                                          "id": 12,
                                                          "label": "        },",
                                                          "successors": [
                                                            {
                                                              "id": 13,
                                                              "label": "    });",
                                                              "successors": [
                                                                {
                                                                  "id": 14,
                                                                  "label": "    return {",
                                                                  "successors": [
                                                                    {
                                                                      "id": 15,
                                                                      "label": "        response: logWrapper(embeddings, this),",
                                                                      "successors": [
                                                                        {
                                                                          "id": 16,
                                                                          "label": "    };",
                                                                          "successors": [
                                                                            {
                                                                              "id": 17,
                                                                              "label": "}",
                                                                              "successors": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "simplified_code": "export class EmbeddingsAwsBedrock implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Embeddings AWS Bedrock',\n\t\tname: 'embeddingsAwsBedrock',\n\t\ticon: 'file:bedrock.svg',\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'aws',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\tgroup: ['transform'],\n\t\tversion: 1,\n\t\tdescription: 'Use Embeddings AWS Bedrock',\n\t\tdefaults: {\n\t\t\tname: 'Embeddings AWS Bedrock',\n\t\t},\n\t\tcodex: {\n\t\t\tcategories: ['AI'],\n\t\t\tsubcategories: {\n\t\t\t\tAI: ['Embeddings'],\n\t\t\t},\n\t\t\tresources: {\n\t\t\t\tprimaryDocumentation: [\n\t\t\t\t\t{\n\t\t\t\t\t\turl: 'https://docs.n8n.io/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.embeddingsawsbedrock/',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t},\n\t\t// eslint-disable-next-line n8n-nodes-base/node-class-description-inputs-wrong-regular-node\n\t\tinputs: [],\n\t\t// eslint-disable-next-line n8n-nodes-base/node-class-description-outputs-wrong\n\t\toutputs: [NodeConnectionType.AiEmbedding],\n\t\toutputNames: ['Embeddings'],\n\t\trequestDefaults: {\n\t\t\tignoreHttpStatusErrors: true,\n\t\t\tbaseURL: '=https://bedrock.{{$credentials?.region ?? \"eu-central-1\"}}.amazonaws.com',\n\t\t},\n\t\tproperties: [\n\t\t\tgetConnectionHintNoticeField([NodeConnectionType.AiVectorStore]),\n\t\t\t{\n\t\t\t\tdisplayName: 'Model',\n\t\t\t\tname: 'model',\n\t\t\t\ttype: 'options',\n\t\t\t\tdescription:\n\t\t\t\t\t'The model which will generate the completion. <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/foundation-models.html\">Learn more</a>.',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tloadOptions: {\n\t\t\t\t\t\trouting: {\n\t\t\t\t\t\t\trequest: {\n\t\t\t\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\t\t\t\turl: '/foundation-models?byInferenceType=ON_DEMAND&byOutputModality=EMBEDDING',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\toutput: {\n\t\t\t\t\t\t\t\tpostReceive: [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttype: 'rootProperty',\n\t\t\t\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\t\t\t\tproperty: 'modelSummaries',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttype: 'setKeyValue',\n\t\t\t\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\t\t\t\tname: '={{$responseItem.modelName}}',\n\t\t\t\t\t\t\t\t\t\t\tdescription: '={{$responseItem.modelArn}}',\n\t\t\t\t\t\t\t\t\t\t\tvalue: '={{$responseItem.modelId}}',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttype: 'sort',\n\t\t\t\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\t\t\t\tkey: 'name',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\trouting: {\n\t\t\t\t\tsend: {\n\t\t\t\t\t\ttype: 'body',\n\t\t\t\t\t\tproperty: 'model',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: '',\n\t\t\t},\n\t\t],\n\t};\n\t}\n}",
      "blocks": [
        {
          "id": 1,
          "label": "export class EmbeddingsAwsBedrock implements INodeType {",
          "successors": [
            {
              "id": 2,
              "label": "description: INodeTypeDescription = {",
              "successors": [
                {
                  "id": 3,
                  "label": "displayName: 'Embeddings AWS Bedrock',\nname: 'embeddingsAwsBedrock',\nicon: 'file:bedrock.svg',\ncredentials: [\n{\nname: 'aws',\nrequired: true,\n},\n],\ngroup: ['transform'],\nversion: 1,\ndescription: 'Use Embeddings AWS Bedrock',\ndefaults: {\nname: 'Embeddings AWS Bedrock',\n},\ncodex: {\ncategories: ['AI'],\nsubcategories: {\nAI: ['Embeddings'],\n},\nresources: {\nprimaryDocumentation: [{url: 'https://docs.n8n.io/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.embeddingsawsbedrock/',},],\n},\n},\ninputs: [],\noutputs: [NodeConnectionType.AiEmbedding],\noutputNames: ['Embeddings'],\nrequestDefaults: {\nignoreHttpStatusErrors: true,\nbaseURL: '=https://bedrock.{{$credentials?.region ?? \"eu-central-1\"}}.amazonaws.com',\n},\nproperties: [\ngetConnectionHintNoticeField([NodeConnectionType.AiVectorStore]),\n{displayName: 'Model',\nname: 'model',\ntype: 'options',\ndescription:\n'The model which will generate the completion. <a href=\"https://docs.aws.amazon.com/bedrock/latest/userguide/foundation-models.html\">Learn more</a>.',\ntypeOptions: {\nloadOptions: {\nrouting: {\nrequest: {\nmethod: 'GET',\nurl: '/foundation-models?byInferenceType=ON_DEMAND&byOutputModality=EMBEDDING',\n},\noutput: {\npostReceive: [{type: 'rootProperty',\nproperties: {\nproperty: 'modelSummaries',\n},\n},\n{type: 'setKeyValue',\nproperties: {\nname: '={{$responseItem.modelName}}',\ndescription: '={{$responseItem.modelArn}}',\nvalue: '={{$responseItem.modelId}}',\n},\n},\n{type: 'sort',\nproperties: {\nkey: 'name',\n},\n},\n],\n},\n},\n},\n},\nrouting: {\nsend: {\ntype: 'body',\nproperty: 'model',\n},\n},\ndefault: '',\n},\n],\n};",
                  "successors": []
                }
              ]
            }
          ]
        }
      ]
    }
  ],
  "simplified_code": "import { BedrockEmbeddings } from '@langchain/aws';\nimport {\n\tNodeConnectionType,\n\ttype INodeType,\n\ttype INodeTypeDescription,\n\ttype ISupplyDataFunctions,\n\ttype SupplyData,\n} from 'n8n-workflow';\nimport { logWrapper } from '../../../utils/logWrapper';\nimport { getConnectionHintNoticeField } from '../../../utils/sharedFields';\n}",
  "blocks": [
    {
      "id": 1,
      "label": "import { BedrockEmbeddings } from '@langchain/aws';",
      "successors": [
        {
          "id": 2,
          "label": "import { NodeConnectionType, type INodeType, type INodeTypeDescription, type ISupplyDataFunctions, type SupplyData } from 'n8n-workflow';",
          "successors": [
            {
              "id": 3,
              "label": "import { logWrapper } from '../../../utils/logWrapper';",
              "successors": [
                {
                  "id": 4,
                  "label": "import { getConnectionHintNoticeField } from '../../../utils/sharedFields';",
                  "successors": []
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}