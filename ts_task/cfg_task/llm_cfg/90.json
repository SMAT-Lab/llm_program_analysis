{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 64,
  "functions": [],
  "classes": [
    {
      "name": "DateTimeUtil",
      "type": "class",
      "start_line": 19,
      "end_line": 64,
      "functions": [
        {
          "name": "getTime",
          "type": "function",
          "start_line": 24,
          "end_line": 27,
          "functions": [],
          "classes": [],
          "simplified_code": "  getTime() {\n    const DATETIME = new Date()\n    return this.concatTime(DATETIME.getHours(), DATETIME.getMinutes(), DATETIME.getSeconds())\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "getTime() {",
              "successors": [
                {
                  "id": 2,
                  "label": "const DATETIME = new Date()",
                  "successors": [
                    {
                      "id": 3,
                      "label": "return this.concatTime(DATETIME.getHours(), DATETIME.getMinutes(), DATETIME.getSeconds())",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "getDate",
          "type": "function",
          "start_line": 32,
          "end_line": 35,
          "functions": [],
          "classes": [],
          "simplified_code": "  getDate() {\n    const DATETIME = new Date()\n    return this.concatDate(DATETIME.getFullYear(), DATETIME.getMonth() + 1, DATETIME.getDate())\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "const DATETIME = new Date()",
              "successors": [
                {
                  "id": 2,
                  "label": "return this.concatDate(DATETIME.getFullYear(), DATETIME.getMonth() + 1, DATETIME.getDate())",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "fill",
          "type": "function",
          "start_line": 41,
          "end_line": 43,
          "functions": [],
          "classes": [],
          "simplified_code": "  fill(value: number) {\n    return (value > 9 ? '' : '0') + value\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "return (value > 9 ? '' : '0') + value",
              "successors": []
            }
          ]
        },
        {
          "name": "concatDate",
          "type": "function",
          "start_line": 51,
          "end_line": 53,
          "functions": [],
          "classes": [],
          "simplified_code": "  concatDate(year: number, month: number, date: number) {\n    return `${year}${this.fill(month)}${this.fill(date)}`\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "concatDate(year: number, month: number, date: number) {",
              "successors": [
                {
                  "id": 2,
                  "label": "return `${year}${this.fill(month)}${this.fill(date)}`",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "concatTime",
          "type": "function",
          "start_line": 61,
          "end_line": 63,
          "functions": [],
          "classes": [],
          "simplified_code": "  concatTime(hours: number, minutes: number, seconds: number) {\n    return `${this.fill(hours)}${this.fill(minutes)}${this.fill(seconds)}`\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "concatTime(hours: number, minutes: number, seconds: number) {",
              "successors": [
                {
                  "id": 2,
                  "label": " return `${this.fill(hours)}${this.fill(minutes)}${this.fill(seconds)}`",
                  "successors": []
                }
              ]
            }
          ]
        }
      ],
      "classes": [],
      "simplified_code": "export default class DateTimeUtil {\n\n  /**\n   * \u65f6\u5206\u79d2\n   */\n  }\n\n  /**\n   * \u5e74\u6708\u65e5\n   */\n  }\n\n  /**\n   * \u65e5\u671f\u4e0d\u8db3\u4e24\u4f4d\u8865\u51450\n   * @param value-\u6570\u636e\u503c\n   */\n  }\n\n  /**\n   * \u5e74\u6708\u65e5\u683c\u5f0f\u4fee\u9970\n   * @param year\n   * @param month\n   * @param date\n   */\n  }\n\n  /**\n   * \u65f6\u5206\u79d2\u683c\u5f0f\u4fee\u9970\n   * @param hours\n   * @param minutes\n   * @param seconds\n   */\n  }\n}",
      "blocks": [
        {
          "id": 1,
          "label": "export default class DateTimeUtil {",
          "successors": [
            {
              "id": 2,
              "label": "",
              "successors": []
            }
          ]
        },
        {
          "id": 3,
          "label": "/**\n   * \u65f6\u5206\u79d2\n   */",
          "successors": [
            {
              "id": 4,
              "label": "",
              "successors": []
            }
          ]
        },
        {
          "id": 5,
          "label": "/**\n   * \u5e74\u6708\u65e5\n   */",
          "successors": [
            {
              "id": 6,
              "label": "",
              "successors": []
            }
          ]
        },
        {
          "id": 7,
          "label": "/**\n   * \u65e5\u671f\u4e0d\u8db3\u4e24\u4f4d\u8865\u51450\n   * @param value-\u6570\u636e\u503c\n   */",
          "successors": [
            {
              "id": 8,
              "label": "",
              "successors": []
            }
          ]
        },
        {
          "id": 9,
          "label": "/**\n   * \u5e74\u6708\u65e5\u683c\u5f0f\u4fee\u9970\n   * @param year\n   * @param month\n   * @param date\n   */",
          "successors": [
            {
              "id": 10,
              "label": "",
              "successors": []
            }
          ]
        },
        {
          "id": 11,
          "label": "/**\n   * \u65f6\u5206\u79d2\u683c\u5f0f\u4fee\u9970\n   * @param hours\n   * @param minutes\n   * @param seconds\n   */",
          "successors": [
            {
              "id": 12,
              "label": "}",
              "successors": []
            }
          ]
        }
      ]
    }
  ],
  "simplified_code": "/**\n * Copyright (c) 2022 Shenzhen Kaihong Digital Industry Development Co., Ltd.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @file \u65e5\u671f\u5de5\u5177\n */\n}",
  "blocks": []
}