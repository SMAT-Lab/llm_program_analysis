{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 20,
  "functions": [],
  "classes": [
    {
      "name": "MathUtils",
      "type": "class",
      "start_line": 16,
      "end_line": 20,
      "functions": [
        {
          "name": "clamp",
          "type": "function",
          "start_line": 17,
          "end_line": 19,
          "functions": [],
          "classes": [],
          "simplified_code": "  static clamp(num: number, min: number, max: number): number {\n    return Math.min(Math.max(num, min), max);\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "static clamp(num: number, min: number, max: number): number {",
              "successors": [
                {
                  "id": 2,
                  "label": "    return Math.min(Math.max(num, min), max);",
                  "successors": []
                }
              ]
            }
          ]
        }
      ],
      "classes": [],
      "simplified_code": "export abstract class MathUtils {\n  }\n}",
      "blocks": [
        {
          "id": 1,
          "label": "export abstract class MathUtils { }",
          "successors": []
        }
      ]
    }
  ],
  "simplified_code": "/*\n * Copyright (c) 2023 Shenzhen Kaihong Digital Industry Development Co., Ltd.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n}",
  "blocks": [
    {
      "id": 1,
      "label": "for (let i = 0; i < 10; i++) {",
      "successors": [
        {
          "id": 2,
          "label": "    if (i % 2 === 0) {",
          "successors": [
            {
              "id": 3,
              "label": "        console.log(i);",
              "successors": [
                {
                  "id": 1,
                  "label": "for (let i = 0; i < 10; i++) {",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "id": 4,
          "label": "    } else {",
          "successors": [
            {
              "id": 5,
              "label": "        console.log('odd');",
              "successors": [
                {
                  "id": 1,
                  "label": "for (let i = 0; i < 10; i++) {",
                  "successors": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "id": 6,
      "label": "console.log('Loop finished');",
      "successors": []
    }
  ]
}