{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 62,
  "functions": [],
  "classes": [
    {
      "name": "ServiceExtAbility",
      "type": "class",
      "start_line": 26,
      "end_line": 62,
      "functions": [
        {
          "name": "onCreate",
          "type": "function",
          "start_line": 29,
          "end_line": 32,
          "functions": [],
          "classes": [],
          "simplified_code": "  onCreate(want: Want): void {\n    let serviceExtensionContext = this.context;\n    hilog.info(DOMAIN_NUMBER, TAG, `onCreate, want: ${want.abilityName}`);\n  };",
          "blocks": [
            {
              "id": 1,
              "label": "onCreate(want: Want): void {",
              "successors": [
                {
                  "id": 2,
                  "label": "    let serviceExtensionContext = this.context;",
                  "successors": [
                    {
                      "id": 3,
                      "label": "    hilog.info(DOMAIN_NUMBER, TAG, `onCreate, want: ${want.abilityName}`);",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "onRequest",
          "type": "function",
          "start_line": 34,
          "end_line": 47,
          "functions": [],
          "classes": [],
          "simplified_code": "  onRequest(want: Want, startId: number): void {\n    hilog.info(DOMAIN_NUMBER, TAG, `onRequest, want: ${want.abilityName}`);\n    if (want.parameters.key === 'ConnectFaPageAbility') {\n      let wantFA: Want = {\n        bundleName: 'com.samples.famodelabilitydevelop',\n        abilityName: 'com.samples.famodelabilitydevelop.MainAbility',\n      };\n      this.context.startAbility(wantFA).then(() => {\n        hilog.info(DOMAIN_NUMBER, TAG, 'Start Ability successfully.');\n      }).catch((error: BusinessError) => {\n        hilog.info(DOMAIN_NUMBER, TAG, `Ability failed: ${JSON.stringify(error)}`);\n      });\n    }\n  };",
          "blocks": [
            {
              "id": 1,
              "label": "onRequest(want: Want, startId: number): void {",
              "successors": [
                {
                  "id": 2,
                  "label": "hilog.info(DOMAIN_NUMBER, TAG, `onRequest, want: ${want.abilityName}`);",
                  "successors": [
                    {
                      "id": 3,
                      "label": "if (want.parameters.key === 'ConnectFaPageAbility') {",
                      "successors": [
                        {
                          "id": 4,
                          "label": "let wantFA: Want = {\n  bundleName: 'com.samples.famodelabilitydevelop',\n  abilityName: 'com.samples.famodelabilitydevelop.MainAbility'\n};",
                          "successors": [
                            {
                              "id": 5,
                              "label": "this.context.startAbility(wantFA).then(() => {",
                              "successors": [
                                {
                                  "id": 6,
                                  "label": "hilog.info(DOMAIN_NUMBER, TAG, 'Start Ability successfully.');",
                                  "successors": []
                                }
                              ]
                            },
                            {
                              "id": 7,
                              "label": "}).catch((error: BusinessError) => {",
                              "successors": [
                                {
                                  "id": 8,
                                  "label": "hilog.info(DOMAIN_NUMBER, TAG, `Ability failed: ${JSON.stringify(error)}`);",
                                  "successors": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "onConnect",
          "type": "function",
          "start_line": 49,
          "end_line": 53,
          "functions": [],
          "classes": [],
          "simplified_code": "  onConnect(want: Want): rpc.RemoteObject {\n    hilog.info(DOMAIN_NUMBER, TAG, `onConnect, want: ${want.abilityName}`);\n    // \u8fd4\u56deServiceExtImpl\u5bf9\u8c61\uff0c\u5ba2\u6237\u7aef\u83b7\u53d6\u540e\u4fbf\u53ef\u4ee5\u4e0eServiceExtensionAbility\u8fdb\u884c\u901a\u4fe1\n    return this.serviceExtImpl as rpc.RemoteObject;\n  };",
          "blocks": [
            {
              "id": 1,
              "label": "hilog.info(DOMAIN_NUMBER, TAG, `onConnect, want: ${want.abilityName}`);",
              "successors": [
                {
                  "id": 2,
                  "label": "return this.serviceExtImpl as rpc.RemoteObject;",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "onDisconnect",
          "type": "function",
          "start_line": 55,
          "end_line": 57,
          "functions": [],
          "classes": [],
          "simplified_code": "  onDisconnect(want: Want): void {\n    hilog.info(DOMAIN_NUMBER, TAG, `onDisconnect, want: ${want.abilityName}`);\n  };",
          "blocks": [
            {
              "id": 1,
              "label": "onDisconnect(want: Want): void {",
              "successors": [
                {
                  "id": 2,
                  "label": "    hilog.info(DOMAIN_NUMBER, TAG, `onDisconnect, want: ${want.abilityName}`);",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "onDestroy",
          "type": "function",
          "start_line": 59,
          "end_line": 61,
          "functions": [],
          "classes": [],
          "simplified_code": "  onDestroy(): void {\n    hilog.info(DOMAIN_NUMBER, TAG, 'onDestroy');\n  };",
          "blocks": [
            {
              "id": 1,
              "label": "onDestroy(): void {",
              "successors": [
                {
                  "id": 2,
                  "label": "    hilog.info(DOMAIN_NUMBER, TAG, 'onDestroy');",
                  "successors": [
                    {
                      "id": 3,
                      "label": "}",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "simplified_code": "export default class ServiceExtAbility extends ServiceExtensionAbility {\n  serviceExtImpl: ServiceExtImpl = new ServiceExtImpl('ExtImpl');\n\n  };\n\n  };\n\n  };\n\n  };\n\n  };\n};",
      "blocks": [
        {
          "id": 1,
          "label": "export default class ServiceExtAbility extends ServiceExtensionAbility {",
          "successors": [
            {
              "id": 2,
              "label": "  serviceExtImpl: ServiceExtImpl = new ServiceExtImpl('ExtImpl');",
              "successors": []
            }
          ]
        }
      ]
    }
  ],
  "simplified_code": "/*\n * Copyright (c) 2023 Huawei Device Co., Ltd.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { BusinessError } from '@ohos.base';\nimport hilog from '@ohos.hilog';\nimport ServiceExtensionAbility from '@ohos.app.ability.ServiceExtensionAbility';\nimport ServiceExtImpl from '../IdlServiceExt/idl_service_ext_impl';\nimport type Want from '@ohos.app.ability.Want';\nimport type rpc from '@ohos.rpc';\n\nconst TAG: string = '[ServiceExtAbility]';\nconst DOMAIN_NUMBER: number = 0xFF00;\n\n};",
  "blocks": [
    {
      "id": 1,
      "label": "import type { BusinessError } from '@ohos.base';",
      "successors": [
        {
          "id": 2,
          "label": "import hilog from '@ohos.hilog';",
          "successors": [
            {
              "id": 3,
              "label": "import ServiceExtensionAbility from '@ohos.app.ability.ServiceExtensionAbility';",
              "successors": [
                {
                  "id": 4,
                  "label": "import ServiceExtImpl from '../IdlServiceExt/idl_service_ext_impl';",
                  "successors": [
                    {
                      "id": 5,
                      "label": "import type Want from '@ohos.app.ability.Want';",
                      "successors": [
                        {
                          "id": 6,
                          "label": "import type rpc from '@ohos.rpc';",
                          "successors": [
                            {
                              "id": 7,
                              "label": "const TAG: string = '[ServiceExtAbility]';",
                              "successors": [
                                {
                                  "id": 8,
                                  "label": "const DOMAIN_NUMBER: number = 0xFF00;",
                                  "successors": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}