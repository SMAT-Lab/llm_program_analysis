{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 109,
  "functions": [
    {
      "name": "bsd_signal",
      "type": "function",
      "start_line": 70,
      "end_line": 70,
      "functions": [],
      "classes": [],
      "simplified_code": "declare function bsd_signal(p1: number, p2: interop.FunctionReference<(p1: number) => void>): interop.FunctionReference<(p1: number) => void>;",
      "blocks": [
        {
          "id": 1,
          "label": "declare function bsd_signal(p1: number, p2: interop.FunctionReference<(p1: number) => void>): interop.FunctionReference<(p1: number) => void>;",
          "successors": []
        }
      ]
    },
    {
      "name": "kill",
      "type": "function",
      "start_line": 71,
      "end_line": 71,
      "functions": [],
      "classes": [],
      "simplified_code": "declare function kill(p1: number, p2: number): number;",
      "blocks": [
        {
          "id": 1,
          "label": "declare function kill(p1: number, p2: number): number;",
          "successors": []
        }
      ]
    },
    {
      "name": "killpg",
      "type": "function",
      "start_line": 72,
      "end_line": 72,
      "functions": [],
      "classes": [],
      "simplified_code": "declare function killpg(p1: number, p2: number): number;",
      "blocks": [
        {
          "id": 1,
          "label": "declare function killpg(p1: number, p2: number): number;",
          "successors": []
        }
      ]
    },
    {
      "name": "psignal",
      "type": "function",
      "start_line": 73,
      "end_line": 73,
      "functions": [],
      "classes": [],
      "simplified_code": "declare function psignal(p1: number, p2: string | interop.Pointer | interop.Reference<any>): void;",
      "blocks": [
        {
          "id": 1,
          "label": "declare function psignal(p1: number, p2: string | interop.Pointer | interop.Reference<any>): void;",
          "successors": []
        }
      ]
    },
    {
      "name": "pthread_kill",
      "type": "function",
      "start_line": 74,
      "end_line": 74,
      "functions": [],
      "classes": [],
      "simplified_code": "declare function pthread_kill(p1: interop.Pointer | interop.Reference<_opaque_pthread_t>, p2: number): number;",
      "blocks": [
        {
          "id": 1,
          "label": "declare function pthread_kill(p1: interop.Pointer | interop.Reference<_opaque_pthread_t>, p2: number): number;",
          "successors": []
        }
      ]
    },
    {
      "name": "pthread_sigmask",
      "type": "function",
      "start_line": 75,
      "end_line": 75,
      "functions": [],
      "classes": [],
      "simplified_code": "declare function pthread_sigmask(p1: number, p2: interop.Pointer | interop.Reference<number>, p3: interop.Pointer | interop.Reference<number>): number;",
      "blocks": [
        {
          "id": 1,
          "label": "declare function pthread_sigmask(p1: number, p2: interop.Pointer | interop.Reference<number>, p3: interop.Pointer | interop.Reference<number>): number;",
          "successors": []
        }
      ]
    },
    {
      "name": "raise",
      "type": "function",
      "start_line": 76,
      "end_line": 76,
      "functions": [],
      "classes": [],
      "simplified_code": "declare function raise(p1: number): number;",
      "blocks": [
        {
          "id": 1,
          "label": "declare function raise(p1: number): number;",
          "successors": []
        }
      ]
    },
    {
      "name": "sigaddset",
      "type": "function",
      "start_line": 77,
      "end_line": 77,
      "functions": [],
      "classes": [],
      "simplified_code": "declare function sigaddset(p1: interop.Pointer | interop.Reference<number>, p2: number): number;",
      "blocks": [
        {
          "id": 1,
          "label": "declare function sigaddset(p1: interop.Pointer | interop.Reference<number>, p2: number): number;",
          "successors": []
        }
      ]
    },
    {
      "name": "sigaltstack",
      "type": "function",
      "start_line": 78,
      "end_line": 78,
      "functions": [],
      "classes": [],
      "simplified_code": "declare function sigaltstack(p1: interop.Pointer | interop.Reference<__darwin_sigaltstack>, p2: interop.Pointer | interop.Reference<__darwin_sigaltstack>): number;",
      "blocks": [
        {
          "id": 1,
          "label": "declare function sigaltstack(p1: interop.Pointer | interop.Reference<__darwin_sigaltstack>, p2: interop.Pointer | interop.Reference<__darwin_sigaltstack>): number;",
          "successors": []
        }
      ]
    },
    {
      "name": "sigblock",
      "type": "function",
      "start_line": 79,
      "end_line": 79,
      "functions": [],
      "classes": [],
      "simplified_code": "declare function sigblock(p1: number): number;",
      "blocks": [
        {
          "id": 1,
          "label": "declare function sigblock(p1: number): number;",
          "successors": []
        }
      ]
    },
    {
      "name": "sigdelset",
      "type": "function",
      "start_line": 80,
      "end_line": 80,
      "functions": [],
      "classes": [],
      "simplified_code": "declare function sigdelset(p1: interop.Pointer | interop.Reference<number>, p2: number): number;",
      "blocks": [
        {
          "id": 1,
          "label": "declare function sigdelset(p1: interop.Pointer | interop.Reference<number>, p2: number): number;",
          "successors": []
        }
      ]
    },
    {
      "name": "sigemptyset",
      "type": "function",
      "start_line": 81,
      "end_line": 81,
      "functions": [],
      "classes": [],
      "simplified_code": "declare function sigemptyset(p1: interop.Pointer | interop.Reference<number>): number;",
      "blocks": [
        {
          "id": 1,
          "label": "declare function sigemptyset(p1: interop.Pointer | interop.Reference<number>): number;",
          "successors": []
        }
      ]
    },
    {
      "name": "sigfillset",
      "type": "function",
      "start_line": 82,
      "end_line": 82,
      "functions": [],
      "classes": [],
      "simplified_code": "declare function sigfillset(p1: interop.Pointer | interop.Reference<number>): number;",
      "blocks": [
        {
          "id": 1,
          "label": "declare function sigfillset(p1: interop.Pointer | interop.Reference<number>): number;",
          "successors": []
        }
      ]
    },
    {
      "name": "sighold",
      "type": "function",
      "start_line": 83,
      "end_line": 83,
      "functions": [],
      "classes": [],
      "simplified_code": "declare function sighold(p1: number): number;",
      "blocks": [
        {
          "id": 1,
          "label": "declare function sighold(p1: number): number;",
          "successors": []
        }
      ]
    },
    {
      "name": "sigignore",
      "type": "function",
      "start_line": 84,
      "end_line": 84,
      "functions": [],
      "classes": [],
      "simplified_code": "declare function sigignore(p1: number): number;",
      "blocks": [
        {
          "id": 1,
          "label": "declare function sigignore(p1: number): number;",
          "successors": []
        }
      ]
    },
    {
      "name": "siginterrupt",
      "type": "function",
      "start_line": 85,
      "end_line": 85,
      "functions": [],
      "classes": [],
      "simplified_code": "declare function siginterrupt(p1: number, p2: number): number;",
      "blocks": [
        {
          "id": 1,
          "label": "declare function siginterrupt(p1: number, p2: number): number;",
          "successors": []
        }
      ]
    },
    {
      "name": "sigismember",
      "type": "function",
      "start_line": 86,
      "end_line": 86,
      "functions": [],
      "classes": [],
      "simplified_code": "declare function sigismember(p1: interop.Pointer | interop.Reference<number>, p2: number): number;",
      "blocks": [
        {
          "id": 1,
          "label": "declare function sigismember(p1: interop.Pointer | interop.Reference<number>, p2: number): number;",
          "successors": []
        }
      ]
    },
    {
      "name": "signal",
      "type": "function",
      "start_line": 87,
      "end_line": 87,
      "functions": [],
      "classes": [],
      "simplified_code": "declare function signal(p1: number, p2: interop.FunctionReference<(p1: number) => void>): interop.FunctionReference<(p1: number) => void>;",
      "blocks": [
        {
          "id": 1,
          "label": "declare function signal(p1: number, p2: interop.FunctionReference<(p1: number) => void>): interop.FunctionReference<(p1: number) => void>;",
          "successors": []
        }
      ]
    },
    {
      "name": "sigpause",
      "type": "function",
      "start_line": 88,
      "end_line": 88,
      "functions": [],
      "classes": [],
      "simplified_code": "declare function sigpause(p1: number): number;",
      "blocks": [
        {
          "id": 1,
          "label": "declare function sigpause(p1: number): number;",
          "successors": []
        }
      ]
    },
    {
      "name": "sigpending",
      "type": "function",
      "start_line": 89,
      "end_line": 89,
      "functions": [],
      "classes": [],
      "simplified_code": "declare function sigpending(p1: interop.Pointer | interop.Reference<number>): number;",
      "blocks": [
        {
          "id": 1,
          "label": "declare function sigpending(p1: interop.Pointer | interop.Reference<number>): number;",
          "successors": []
        }
      ]
    },
    {
      "name": "sigprocmask",
      "type": "function",
      "start_line": 90,
      "end_line": 90,
      "functions": [],
      "classes": [],
      "simplified_code": "declare function sigprocmask(p1: number, p2: interop.Pointer | interop.Reference<number>, p3: interop.Pointer | interop.Reference<number>): number;",
      "blocks": [
        {
          "id": 1,
          "label": "declare function sigprocmask(p1: number, p2: interop.Pointer | interop.Reference<number>, p3: interop.Pointer | interop.Reference<number>): number;",
          "successors": []
        }
      ]
    },
    {
      "name": "sigrelse",
      "type": "function",
      "start_line": 91,
      "end_line": 91,
      "functions": [],
      "classes": [],
      "simplified_code": "declare function sigrelse(p1: number): number;",
      "blocks": [
        {
          "id": 1,
          "label": "declare function sigrelse(p1: number): number;",
          "successors": []
        }
      ]
    },
    {
      "name": "sigset",
      "type": "function",
      "start_line": 92,
      "end_line": 92,
      "functions": [],
      "classes": [],
      "simplified_code": "declare function sigset(p1: number, p2: interop.FunctionReference<(p1: number) => void>): interop.FunctionReference<(p1: number) => void>;",
      "blocks": [
        {
          "id": 1,
          "label": "declare function sigset(p1: number, p2: interop.FunctionReference<(p1: number) => void>): interop.FunctionReference<(p1: number) => void>;",
          "successors": []
        }
      ]
    },
    {
      "name": "sigsetmask",
      "type": "function",
      "start_line": 93,
      "end_line": 93,
      "functions": [],
      "classes": [],
      "simplified_code": "declare function sigsetmask(p1: number): number;",
      "blocks": [
        {
          "id": 1,
          "label": "declare function sigsetmask(p1: number): number;",
          "successors": []
        }
      ]
    },
    {
      "name": "sigsuspend",
      "type": "function",
      "start_line": 99,
      "end_line": 99,
      "functions": [],
      "classes": [],
      "simplified_code": "declare function sigsuspend(p1: interop.Pointer | interop.Reference<number>): number;",
      "blocks": [
        {
          "id": 1,
          "label": "declare function sigsuspend(p1: interop.Pointer | interop.Reference<number>): number;",
          "successors": []
        }
      ]
    },
    {
      "name": "sigvec",
      "type": "function",
      "start_line": 100,
      "end_line": 100,
      "functions": [],
      "classes": [],
      "simplified_code": "declare function sigvec(p1: number, p2: interop.Pointer | interop.Reference<sigvecStruct>, p3: interop.Pointer | interop.Reference<sigvecStruct>): number;",
      "blocks": [
        {
          "id": 1,
          "label": "declare function sigvec(p1: number, p2: interop.Pointer | interop.Reference<sigvecStruct>, p3: interop.Pointer | interop.Reference<sigvecStruct>): number;",
          "successors": []
        }
      ]
    },
    {
      "name": "sigwait",
      "type": "function",
      "start_line": 107,
      "end_line": 107,
      "functions": [],
      "classes": [],
      "simplified_code": "declare function sigwait(p1: interop.Pointer | interop.Reference<number>, p2: interop.Pointer | interop.Reference<number>): number;",
      "blocks": [
        {
          "id": 1,
          "label": "declare function sigwait(p1: interop.Pointer | interop.Reference<number>, p2: interop.Pointer | interop.Reference<number>): number;",
          "successors": []
        }
      ]
    }
  ],
  "classes": [
    {
      "name": "__darwin_mcontext32",
      "type": "class",
      "start_line": 1,
      "end_line": 5,
      "functions": [],
      "classes": [],
      "simplified_code": "interface __darwin_mcontext32 {\n\t__es: __darwin_i386_exception_state;\n\t__ss: __darwin_i386_thread_state;\n\t__fs: __darwin_i386_float_state;\n}",
      "blocks": [
        {
          "id": 1,
          "label": "interface __darwin_mcontext32 {",
          "successors": [
            {
              "id": 2,
              "label": "__es: __darwin_i386_exception_state;",
              "successors": [
                {
                  "id": 3,
                  "label": "__ss: __darwin_i386_thread_state;",
                  "successors": [
                    {
                      "id": 4,
                      "label": "__fs: __darwin_i386_float_state;",
                      "successors": [
                        {
                          "id": 5,
                          "label": "}",
                          "successors": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "__darwin_mcontext64",
      "type": "class",
      "start_line": 7,
      "end_line": 11,
      "functions": [],
      "classes": [],
      "simplified_code": "interface __darwin_mcontext64 {\n\t__es: __darwin_x86_exception_state64;\n\t__ss: __darwin_x86_thread_state64;\n\t__fs: __darwin_x86_float_state64;\n}",
      "blocks": [
        {
          "id": 1,
          "label": "interface __darwin_mcontext64 {",
          "successors": [
            {
              "id": 2,
              "label": "    __es: __darwin_x86_exception_state64;",
              "successors": [
                {
                  "id": 3,
                  "label": "    __ss: __darwin_x86_thread_state64;",
                  "successors": [
                    {
                      "id": 4,
                      "label": "    __fs: __darwin_x86_float_state64;",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "__darwin_mcontext64_full",
      "type": "class",
      "start_line": 13,
      "end_line": 17,
      "functions": [],
      "classes": [],
      "simplified_code": "interface __darwin_mcontext64_full {\n\t__es: __darwin_x86_exception_state64;\n\t__ss: __darwin_x86_thread_full_state64;\n\t__fs: __darwin_x86_float_state64;\n}",
      "blocks": [
        {
          "id": 1,
          "label": "interface __darwin_mcontext64_full {",
          "successors": [
            {
              "id": 2,
              "label": "__es: __darwin_x86_exception_state64;",
              "successors": [
                {
                  "id": 3,
                  "label": "__ss: __darwin_x86_thread_full_state64;",
                  "successors": [
                    {
                      "id": 4,
                      "label": "__fs: __darwin_x86_float_state64;",
                      "successors": [
                        {
                          "id": 5,
                          "label": "}",
                          "successors": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "__darwin_mcontext_avx32",
      "type": "class",
      "start_line": 19,
      "end_line": 23,
      "functions": [],
      "classes": [],
      "simplified_code": "interface __darwin_mcontext_avx32 {\n\t__es: __darwin_i386_exception_state;\n\t__ss: __darwin_i386_thread_state;\n\t__fs: __darwin_i386_avx_state;\n}",
      "blocks": [
        {
          "id": 1,
          "label": "interface __darwin_mcontext_avx32 {",
          "successors": [
            {
              "id": 2,
              "label": "__es: __darwin_i386_exception_state;",
              "successors": [
                {
                  "id": 3,
                  "label": "__ss: __darwin_i386_thread_state;",
                  "successors": [
                    {
                      "id": 4,
                      "label": "__fs: __darwin_i386_avx_state;",
                      "successors": [
                        {
                          "id": 5,
                          "label": "}",
                          "successors": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "__darwin_mcontext_avx512_32",
      "type": "class",
      "start_line": 25,
      "end_line": 29,
      "functions": [],
      "classes": [],
      "simplified_code": "interface __darwin_mcontext_avx512_32 {\n\t__es: __darwin_i386_exception_state;\n\t__ss: __darwin_i386_thread_state;\n\t__fs: __darwin_i386_avx512_state;\n}",
      "blocks": [
        {
          "id": 1,
          "label": "interface __darwin_mcontext_avx512_32 {",
          "successors": [
            {
              "id": 2,
              "label": "\t__es: __darwin_i386_exception_state;",
              "successors": [
                {
                  "id": 3,
                  "label": "\t__ss: __darwin_i386_thread_state;",
                  "successors": [
                    {
                      "id": 4,
                      "label": "\t__fs: __darwin_i386_avx512_state;",
                      "successors": [
                        {
                          "id": 5,
                          "label": "}",
                          "successors": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "__darwin_mcontext_avx512_64",
      "type": "class",
      "start_line": 31,
      "end_line": 35,
      "functions": [],
      "classes": [],
      "simplified_code": "interface __darwin_mcontext_avx512_64 {\n\t__es: __darwin_x86_exception_state64;\n\t__ss: __darwin_x86_thread_state64;\n\t__fs: __darwin_x86_avx512_state64;\n}",
      "blocks": [
        {
          "id": 1,
          "label": "interface __darwin_mcontext_avx512_64 {",
          "successors": [
            {
              "id": 2,
              "label": "    __es: __darwin_x86_exception_state64;",
              "successors": [
                {
                  "id": 3,
                  "label": "    __ss: __darwin_x86_thread_state64;",
                  "successors": [
                    {
                      "id": 4,
                      "label": "    __fs: __darwin_x86_avx512_state64;",
                      "successors": [
                        {
                          "id": 5,
                          "label": "}",
                          "successors": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "__darwin_mcontext_avx512_64_full",
      "type": "class",
      "start_line": 37,
      "end_line": 41,
      "functions": [],
      "classes": [],
      "simplified_code": "interface __darwin_mcontext_avx512_64_full {\n\t__es: __darwin_x86_exception_state64;\n\t__ss: __darwin_x86_thread_full_state64;\n\t__fs: __darwin_x86_avx512_state64;\n}",
      "blocks": [
        {
          "id": 1,
          "label": "interface __darwin_mcontext_avx512_64_full {",
          "successors": [
            {
              "id": 2,
              "label": "    __es: __darwin_x86_exception_state64;",
              "successors": [
                {
                  "id": 3,
                  "label": "    __ss: __darwin_x86_thread_full_state64;",
                  "successors": [
                    {
                      "id": 4,
                      "label": "    __fs: __darwin_x86_avx512_state64;",
                      "successors": [
                        {
                          "id": 5,
                          "label": "}",
                          "successors": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "__darwin_mcontext_avx64",
      "type": "class",
      "start_line": 43,
      "end_line": 47,
      "functions": [],
      "classes": [],
      "simplified_code": "interface __darwin_mcontext_avx64 {\n\t__es: __darwin_x86_exception_state64;\n\t__ss: __darwin_x86_thread_state64;\n\t__fs: __darwin_x86_avx_state64;\n}",
      "blocks": [
        {
          "id": 1,
          "label": "interface __darwin_mcontext_avx64 {",
          "successors": [
            {
              "id": 2,
              "label": "__es: __darwin_x86_exception_state64;",
              "successors": [
                {
                  "id": 3,
                  "label": "__ss: __darwin_x86_thread_state64;",
                  "successors": [
                    {
                      "id": 4,
                      "label": "__fs: __darwin_x86_avx_state64;",
                      "successors": [
                        {
                          "id": 5,
                          "label": "}",
                          "successors": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "__darwin_mcontext_avx64_full",
      "type": "class",
      "start_line": 49,
      "end_line": 53,
      "functions": [],
      "classes": [],
      "simplified_code": "interface __darwin_mcontext_avx64_full {\n\t__es: __darwin_x86_exception_state64;\n\t__ss: __darwin_x86_thread_full_state64;\n\t__fs: __darwin_x86_avx_state64;\n}",
      "blocks": [
        {
          "id": 1,
          "label": "interface __darwin_mcontext_avx64_full {",
          "successors": [
            {
              "id": 2,
              "label": "  __es: __darwin_x86_exception_state64;",
              "successors": []
            },
            {
              "id": 3,
              "label": "  __ss: __darwin_x86_thread_full_state64;",
              "successors": []
            },
            {
              "id": 4,
              "label": "  __fs: __darwin_x86_avx_state64;",
              "successors": []
            }
          ]
        },
        {
          "id": 5,
          "label": "}",
          "successors": []
        }
      ]
    },
    {
      "name": "__darwin_sigaltstack",
      "type": "class",
      "start_line": 55,
      "end_line": 59,
      "functions": [],
      "classes": [],
      "simplified_code": "interface __darwin_sigaltstack {\n\tss_sp: interop.Pointer | interop.Reference<any>;\n\tss_size: number;\n\tss_flags: number;\n}",
      "blocks": [
        {
          "id": 1,
          "label": "interface __darwin_sigaltstack {",
          "successors": [
            {
              "id": 2,
              "label": "    ss_sp: interop.Pointer | interop.Reference<any>;",
              "successors": [
                {
                  "id": 3,
                  "label": "    ss_size: number;",
                  "successors": [
                    {
                      "id": 4,
                      "label": "    ss_flags: number;",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "__darwin_ucontext",
      "type": "class",
      "start_line": 61,
      "end_line": 68,
      "functions": [],
      "classes": [],
      "simplified_code": "interface __darwin_ucontext {\n\tuc_onstack: number;\n\tuc_sigmask: number;\n\tuc_stack: __darwin_sigaltstack;\n\tuc_link: interop.Pointer | interop.Reference<__darwin_ucontext>;\n\tuc_mcsize: number;\n\tuc_mcontext: interop.Pointer | interop.Reference<__darwin_mcontext64>;\n}",
      "blocks": [
        {
          "id": 1,
          "label": "interface __darwin_ucontext {",
          "successors": [
            {
              "id": 2,
              "label": "    uc_onstack: number;",
              "successors": [
                {
                  "id": 3,
                  "label": "    uc_sigmask: number;",
                  "successors": [
                    {
                      "id": 4,
                      "label": "    uc_stack: __darwin_sigaltstack;",
                      "successors": [
                        {
                          "id": 5,
                          "label": "    uc_link: interop.Pointer | interop.Reference<__darwin_ucontext>;",
                          "successors": [
                            {
                              "id": 6,
                              "label": "    uc_mcsize: number;",
                              "successors": [
                                {
                                  "id": 7,
                                  "label": "    uc_mcontext: interop.Pointer | interop.Reference<__darwin_mcontext64>;",
                                  "successors": [
                                    {
                                      "id": 8,
                                      "label": "}",
                                      "successors": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "sigstack",
      "type": "class",
      "start_line": 94,
      "end_line": 97,
      "functions": [],
      "classes": [],
      "simplified_code": "interface sigstack {\n\tss_sp: interop.Pointer | interop.Reference<any>;\n\tss_onstack: number;\n}",
      "blocks": [
        {
          "id": 1,
          "label": "interface sigstack {",
          "successors": [
            {
              "id": 2,
              "label": "    ss_sp: interop.Pointer | interop.Reference<any>;",
              "successors": []
            },
            {
              "id": 3,
              "label": "    ss_onstack: number;",
              "successors": []
            }
          ]
        }
      ]
    },
    {
      "name": "sigvecStruct",
      "type": "class",
      "start_line": 101,
      "end_line": 105,
      "functions": [],
      "classes": [],
      "simplified_code": "interface sigvecStruct {\n\tsv_handler: interop.FunctionReference<(p1: number) => void>;\n\tsv_mask: number;\n\tsv_flags: number;\n}",
      "blocks": [
        {
          "id": 1,
          "label": "interface sigvecStruct {\n\tsv_handler: interop.FunctionReference<(p1: number) => void>;\n\tsv_mask: number;\n\tsv_flags: number;\n}",
          "successors": []
        }
      ]
    }
  ],
  "simplified_code": "}\ndeclare var __darwin_mcontext32: interop.StructType<__darwin_mcontext32>;\n}\ndeclare var __darwin_mcontext64: interop.StructType<__darwin_mcontext64>;\n}\ndeclare var __darwin_mcontext64_full: interop.StructType<__darwin_mcontext64_full>;\n}\ndeclare var __darwin_mcontext_avx32: interop.StructType<__darwin_mcontext_avx32>;\n}\ndeclare var __darwin_mcontext_avx512_32: interop.StructType<__darwin_mcontext_avx512_32>;\n}\ndeclare var __darwin_mcontext_avx512_64: interop.StructType<__darwin_mcontext_avx512_64>;\n}\ndeclare var __darwin_mcontext_avx512_64_full: interop.StructType<__darwin_mcontext_avx512_64_full>;\n}\ndeclare var __darwin_mcontext_avx64: interop.StructType<__darwin_mcontext_avx64>;\n}\ndeclare var __darwin_mcontext_avx64_full: interop.StructType<__darwin_mcontext_avx64_full>;\n}\ndeclare var __darwin_sigaltstack: interop.StructType<__darwin_sigaltstack>;\n}\ndeclare var __darwin_ucontext: interop.StructType<__darwin_ucontext>;\ndeclare function bsd_signal(p1: number, p2: interop.FunctionReference<(p1: number) => void>): interop.FunctionReference<(p1: number) => void>;\ndeclare function kill(p1: number, p2: number): number;\ndeclare function killpg(p1: number, p2: number): number;\ndeclare function psignal(p1: number, p2: string | interop.Pointer | interop.Reference<any>): void;\ndeclare function pthread_kill(p1: interop.Pointer | interop.Reference<_opaque_pthread_t>, p2: number): number;\ndeclare function pthread_sigmask(p1: number, p2: interop.Pointer | interop.Reference<number>, p3: interop.Pointer | interop.Reference<number>): number;\ndeclare function raise(p1: number): number;\ndeclare function sigaddset(p1: interop.Pointer | interop.Reference<number>, p2: number): number;\ndeclare function sigaltstack(p1: interop.Pointer | interop.Reference<__darwin_sigaltstack>, p2: interop.Pointer | interop.Reference<__darwin_sigaltstack>): number;\ndeclare function sigblock(p1: number): number;\ndeclare function sigdelset(p1: interop.Pointer | interop.Reference<number>, p2: number): number;\ndeclare function sigemptyset(p1: interop.Pointer | interop.Reference<number>): number;\ndeclare function sigfillset(p1: interop.Pointer | interop.Reference<number>): number;\ndeclare function sighold(p1: number): number;\ndeclare function sigignore(p1: number): number;\ndeclare function siginterrupt(p1: number, p2: number): number;\ndeclare function sigismember(p1: interop.Pointer | interop.Reference<number>, p2: number): number;\ndeclare function signal(p1: number, p2: interop.FunctionReference<(p1: number) => void>): interop.FunctionReference<(p1: number) => void>;\ndeclare function sigpause(p1: number): number;\ndeclare function sigpending(p1: interop.Pointer | interop.Reference<number>): number;\ndeclare function sigprocmask(p1: number, p2: interop.Pointer | interop.Reference<number>, p3: interop.Pointer | interop.Reference<number>): number;\ndeclare function sigrelse(p1: number): number;\ndeclare function sigset(p1: number, p2: interop.FunctionReference<(p1: number) => void>): interop.FunctionReference<(p1: number) => void>;\ndeclare function sigsetmask(p1: number): number;\n}\ndeclare var sigstack: interop.StructType<sigstack>;\ndeclare function sigsuspend(p1: interop.Pointer | interop.Reference<number>): number;\ndeclare function sigvec(p1: number, p2: interop.Pointer | interop.Reference<sigvecStruct>, p3: interop.Pointer | interop.Reference<sigvecStruct>): number;\n}\ndeclare var sigvecStruct: interop.StructType<sigvecStruct>;\ndeclare function sigwait(p1: interop.Pointer | interop.Reference<number>, p2: interop.Pointer | interop.Reference<number>): number;\ndeclare var sys_siglist: interop.Reference<interop.Pointer | interop.Reference<any>>;\ndeclare var sys_signame: interop.Reference<interop.Pointer | interop.Reference<any>>;",
  "blocks": [
    {
      "id": 1,
      "label": "declare var __darwin_mcontext32: interop.StructType<__darwin_mcontext32>;",
      "successors": [
        {
          "id": 2,
          "label": "declare var __darwin_mcontext64: interop.StructType<__darwin_mcontext64>;",
          "successors": [
            {
              "id": 3,
              "label": "declare var __darwin_mcontext64_full: interop.StructType<__darwin_mcontext64_full>;",
              "successors": [
                {
                  "id": 4,
                  "label": "declare var __darwin_mcontext_avx32: interop.StructType<__darwin_mcontext_avx32>;",
                  "successors": [
                    {
                      "id": 5,
                      "label": "declare var __darwin_mcontext_avx512_32: interop.StructType<__darwin_mcontext_avx512_32>;",
                      "successors": [
                        {
                          "id": 6,
                          "label": "declare var __darwin_mcontext_avx512_64: interop.StructType<__darwin_mcontext_avx512_64>;",
                          "successors": [
                            {
                              "id": 7,
                              "label": "declare var __darwin_mcontext_avx512_64_full: interop.StructType<__darwin_mcontext_avx512_64_full>;",
                              "successors": [
                                {
                                  "id": 8,
                                  "label": "declare var __darwin_mcontext_avx64: interop.StructType<__darwin_mcontext_avx64>;",
                                  "successors": [
                                    {
                                      "id": 9,
                                      "label": "declare var __darwin_mcontext_avx64_full: interop.StructType<__darwin_mcontext_avx64_full>;",
                                      "successors": [
                                        {
                                          "id": 10,
                                          "label": "declare var __darwin_sigaltstack: interop.StructType<__darwin_sigaltstack>;",
                                          "successors": [
                                            {
                                              "id": 11,
                                              "label": "declare var __darwin_ucontext: interop.StructType<__darwin_ucontext>;",
                                              "successors": [
                                                {
                                                  "id": 12,
                                                  "label": "declare function bsd_signal(p1: number, p2: interop.FunctionReference<(p1: number) => void>): interop.FunctionReference<(p1: number) => void>;",
                                                  "successors": [
                                                    {
                                                      "id": 13,
                                                      "label": "declare function kill(p1: number, p2: number): number;",
                                                      "successors": [
                                                        {
                                                          "id": 14,
                                                          "label": "declare function killpg(p1: number, p2: number): number;",
                                                          "successors": [
                                                            {
                                                              "id": 15,
                                                              "label": "declare function psignal(p1: number, p2: string | interop.Pointer | interop.Reference<any>): void;",
                                                              "successors": [
                                                                {
                                                                  "id": 16,
                                                                  "label": "declare function pthread_kill(p1: interop.Pointer | interop.Reference<_opaque_pthread_t>, p2: number): number;",
                                                                  "successors": [
                                                                    {
                                                                      "id": 17,
                                                                      "label": "declare function pthread_sigmask(p1: number, p2: interop.Pointer | interop.Reference<number>, p3: interop.Pointer | interop.Reference<number>): number;",
                                                                      "successors": [
                                                                        {
                                                                          "id": 18,
                                                                          "label": "declare function raise(p1: number): number;",
                                                                          "successors": [
                                                                            {
                                                                              "id": 19,
                                                                              "label": "declare function sigaddset(p1: interop.Pointer | interop.Reference<number>, p2: number): number;",
                                                                              "successors": [
                                                                                {
                                                                                  "id": 20,
                                                                                  "label": "declare function sigaltstack(p1: interop.Pointer | interop.Reference<__darwin_sigaltstack>, p2: interop.Pointer | interop.Reference<__darwin_sigaltstack>): number;",
                                                                                  "successors": [
                                                                                    {
                                                                                      "id": 21,
                                                                                      "label": "declare function sigblock(p1: number): number;",
                                                                                      "successors": [
                                                                                        {
                                                                                          "id": 22,
                                                                                          "label": "declare function sigdelset(p1: interop.Pointer | interop.Reference<number>, p2: number): number;",
                                                                                          "successors": [
                                                                                            {
                                                                                              "id": 23,
                                                                                              "label": "declare function sigemptyset(p1: interop.Pointer | interop.Reference<number>): number;",
                                                                                              "successors": [
                                                                                                {
                                                                                                  "id": 24,
                                                                                                  "label": "declare function sigfillset(p1: interop.Pointer | interop.Reference<number>): number;",
                                                                                                  "successors": [
                                                                                                    {
                                                                                                      "id": 25,
                                                                                                      "label": "declare function sighold(p1: number): number;",
                                                                                                      "successors": [
                                                                                                        {
                                                                                                          "id": 26,
                                                                                                          "label": "declare function sigignore(p1: number): number;",
                                                                                                          "successors": [
                                                                                                            {
                                                                                                              "id": 27,
                                                                                                              "label": "declare function siginterrupt(p1: number, p2: number): number;",
                                                                                                              "successors": [
                                                                                                                {
                                                                                                                  "id": 28,
                                                                                                                  "label": "declare function sigismember(p1: interop.Pointer | interop.Reference<number>, p2: number): number;",
                                                                                                                  "successors": [
                                                                                                                    {
                                                                                                                      "id": 29,
                                                                                                                      "label": "declare function signal(p1: number, p2: interop.FunctionReference<(p1: number) => void>): interop.FunctionReference<(p1: number) => void>;",
                                                                                                                      "successors": [
                                                                                                                        {
                                                                                                                          "id": 30,
                                                                                                                          "label": "declare function sigpause(p1: number): number;",
                                                                                                                          "successors": [
                                                                                                                            {
                                                                                                                              "id": 31,
                                                                                                                              "label": "declare function sigpending(p1: interop.Pointer | interop.Reference<number>): number;",
                                                                                                                              "successors": [
                                                                                                                                {
                                                                                                                                  "id": 32,
                                                                                                                                  "label": "declare function sigprocmask(p1: number, p2: interop.Pointer | interop.Reference<number>, p3: interop.Pointer | interop.Reference<number>): number;",
                                                                                                                                  "successors": [
                                                                                                                                    {
                                                                                                                                      "id": 33,
                                                                                                                                      "label": "declare function sigrelse(p1: number): number;",
                                                                                                                                      "successors": [
                                                                                                                                        {
                                                                                                                                          "id": 34,
                                                                                                                                          "label": "declare function sigset(p1: number, p2: interop.FunctionReference<(p1: number) => void>): interop.FunctionReference<(p1: number) => void>;",
                                                                                                                                          "successors": [
                                                                                                                                            {
                                                                                                                                              "id": 35,
                                                                                                                                              "label": "declare function sigsetmask(p1: number): number;",
                                                                                                                                              "successors": [
                                                                                                                                                {
                                                                                                                                                  "id": 36,
                                                                                                                                                  "label": "declare var sigstack: interop.StructType<sigstack>;",
                                                                                                                                                  "successors": [
                                                                                                                                                    {
                                                                                                                                                      "id": 37,
                                                                                                                                                      "label": "declare function sigsuspend(p1: interop.Pointer | interop.Reference<number>): number;",
                                                                                                                                                      "successors": [
                                                                                                                                                        {
                                                                                                                                                          "id": 38,
                                                                                                                                                          "label": "declare function sigvec(p1: number, p2: interop.Pointer | interop.Reference<sigvecStruct>, p3: interop.Pointer | interop.Reference<sigvecStruct>): number;",
                                                                                                                                                          "successors": [
                                                                                                                                                            {
                                                                                                                                                              "id": 39,
                                                                                                                                                              "label": "declare var sigvecStruct: interop.StructType<sigvecStruct>;",
                                                                                                                                                              "successors": [
                                                                                                                                                                {
                                                                                                                                                                  "id": 40,
                                                                                                                                                                  "label": "declare function sigwait(p1: interop.Pointer | interop.Reference<number>, p2: interop.Pointer | interop.Reference<number>): number;",
                                                                                                                                                                  "successors": [
                                                                                                                                                                    {
                                                                                                                                                                      "id": 41,
                                                                                                                                                                      "label": "declare var sys_siglist: interop.Reference<interop.Pointer | interop.Reference<any>>;",
                                                                                                                                                                      "successors": [
                                                                                                                                                                        {
                                                                                                                                                                          "id": 42,
                                                                                                                                                                          "label": "declare var sys_signame: interop.Reference<interop.Pointer | interop.Reference<any>>;",
                                                                                                                                                                          "successors": []
                                                                                                                                                                        }
                                                                                                                                                                      ]
                                                                                                                                                                    }
                                                                                                                                                                  ]
                                                                                                                                                                }
                                                                                                                                                              ]
                                                                                                                                                            }
                                                                                                                                                          ]
                                                                                                                                                        }
                                                                                                                                                      ]
                                                                                                                                                    }
                                                                                                                                                  ]
                                                                                                                                                }
                                                                                                                                              ]
                                                                                                                                            }
                                                                                                                                          ]
                                                                                                                                        }
                                                                                                                                      ]
                                                                                                                                    }
                                                                                                                                  ]
                                                                                                                                }
                                                                                                                              ]
                                                                                                                            }
                                                                                                                          ]
                                                                                                                        }
                                                                                                                      ]
                                                                                                                    }
                                                                                                                  ]
                                                                                                                }
                                                                                                              ]
                                                                                                            }
                                                                                                          ]
                                                                                                        }
                                                                                                      ]
                                                                                                    }
                                                                                                  ]
                                                                                                }
                                                                                              ]
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}