{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 83,
  "functions": [],
  "classes": [
    {
      "name": "DeleteExecutionsWithWorkflows1673268682475",
      "type": "class",
      "start_line": 2,
      "end_line": 83,
      "functions": [
        {
          "name": "up",
          "type": "function",
          "start_line": 4,
          "end_line": 49,
          "functions": [],
          "classes": [],
          "simplified_code": "\tasync up({ queryRunner, tablePrefix }: MigrationContext) {\n\t\tconst workflowIds = (await queryRunner.query(`\n\t\t\tSELECT id FROM \"${tablePrefix}workflow_entity\"\n\t\t`)) as Array<{ id: number }>;\n\t\tawait queryRunner.query(\n\t\t\t`DELETE FROM \"${tablePrefix}execution_entity\"\n\t\t\t WHERE \"workflowId\" IS NOT NULL\n\t\t\t ${\n\t\t\t\t\tworkflowIds.length\n\t\t\t\t\t\t? `AND \"workflowId\" NOT IN (${workflowIds.map(({ id }) => id).join()})`\n\t\t\t\t\t\t: ''\n\t\t\t\t}`,\n\t\t);\n\t\tawait queryRunner.query(`DROP TABLE IF EXISTS \"${tablePrefix}temporary_execution_entity\"`);\n\t\tawait queryRunner.query(\n\t\t\t`CREATE TABLE \"${tablePrefix}temporary_execution_entity\" (\n\t\t\t\t\"id\" integer PRIMARY KEY AUTOINCREMENT NOT NULL,\n\t\t\t\t\"workflowId\" int,\n\t\t\t\t\"finished\" boolean NOT NULL,\n\t\t\t\t\"mode\" varchar NOT NULL,\n\t\t\t\t\"retryOf\" varchar,\n\t\t\t\t\"retrySuccessId\" varchar,\n\t\t\t\t\"startedAt\" datetime NOT NULL,\n\t\t\t\t\"stoppedAt\" datetime,\n\t\t\t\t\"waitTill\" datetime,\n\t\t\t\t\"workflowData\" text NOT NULL,\n\t\t\t\t\"data\" text NOT NULL,\n\t\t\t\tFOREIGN KEY(\"workflowId\") REFERENCES \"${tablePrefix}workflow_entity\" (\"id\") ON DELETE CASCADE\n\t\t\t)`,\n\t\t);\n\t\tconst columns =\n\t\t\t'\"id\", \"workflowId\", \"finished\", \"mode\", \"retryOf\", \"retrySuccessId\", \"startedAt\", \"stoppedAt\", \"waitTill\", \"workflowData\", \"data\"';\n\t\tawait queryRunner.query(\n\t\t\t`INSERT INTO \"${tablePrefix}temporary_execution_entity\"(${columns}) SELECT ${columns} FROM \"${tablePrefix}execution_entity\"`,\n\t\t);\n\t\tawait queryRunner.query(`DROP TABLE \"${tablePrefix}execution_entity\"`);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \"${tablePrefix}temporary_execution_entity\" RENAME TO \"${tablePrefix}execution_entity\"`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`CREATE INDEX \"IDX_${tablePrefix}cefb067df2402f6aed0638a6c1\" ON \"${tablePrefix}execution_entity\" (\"stoppedAt\")`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`CREATE INDEX \"IDX_${tablePrefix}ca4a71b47f28ac6ea88293a8e2\" ON \"${tablePrefix}execution_entity\" (\"waitTill\")`,\n\t\t);\n\t}",
          "blocks": [
            {
              "id": 1,
              "label": "async up({ queryRunner, tablePrefix }: MigrationContext) {",
              "successors": [
                {
                  "id": 2,
                  "label": "const workflowIds = (await queryRunner.query(`SELECT id FROM \"${tablePrefix}workflow_entity\"`)) as Array<{ id: number }>;",
                  "successors": [
                    {
                      "id": 3,
                      "label": "await queryRunner.query(`DELETE FROM \"${tablePrefix}execution_entity\" WHERE \"workflowId\" IS NOT NULL ${ workflowIds.length ? `AND \"workflowId\" NOT IN (${workflowIds.map(({ id }) => id).join()})` : '' }`);",
                      "successors": [
                        {
                          "id": 4,
                          "label": "await queryRunner.query(`DROP TABLE IF EXISTS \"${tablePrefix}temporary_execution_entity\"`);",
                          "successors": [
                            {
                              "id": 5,
                              "label": "await queryRunner.query(`CREATE TABLE \"${tablePrefix}temporary_execution_entity\" ( \"id\" integer PRIMARY KEY AUTOINCREMENT NOT NULL, \"workflowId\" int, \"finished\" boolean NOT NULL, \"mode\" varchar NOT NULL, \"retryOf\" varchar, \"retrySuccessId\" varchar, \"startedAt\" datetime NOT NULL, \"stoppedAt\" datetime, \"waitTill\" datetime, \"workflowData\" text NOT NULL, \"data\" text NOT NULL, FOREIGN KEY(\"workflowId\") REFERENCES \"${tablePrefix}workflow_entity\" (\"id\") ON DELETE CASCADE )`);",
                              "successors": [
                                {
                                  "id": 6,
                                  "label": "const columns = '\"id\", \"workflowId\", \"finished\", \"mode\", \"retryOf\", \"retrySuccessId\", \"startedAt\", \"stoppedAt\", \"waitTill\", \"workflowData\", \"data\"';",
                                  "successors": [
                                    {
                                      "id": 7,
                                      "label": "await queryRunner.query(`INSERT INTO \"${tablePrefix}temporary_execution_entity\"(${columns}) SELECT ${columns} FROM \"${tablePrefix}execution_entity\"`);",
                                      "successors": [
                                        {
                                          "id": 8,
                                          "label": "await queryRunner.query(`DROP TABLE \"${tablePrefix}execution_entity\"`);",
                                          "successors": [
                                            {
                                              "id": 9,
                                              "label": "await queryRunner.query(`ALTER TABLE \"${tablePrefix}temporary_execution_entity\" RENAME TO \"${tablePrefix}execution_entity\"`);",
                                              "successors": [
                                                {
                                                  "id": 10,
                                                  "label": "await queryRunner.query(`CREATE INDEX \"IDX_${tablePrefix}cefb067df2402f6aed0638a6c1\" ON \"${tablePrefix}execution_entity\" (\"stoppedAt\")`);",
                                                  "successors": [
                                                    {
                                                      "id": 11,
                                                      "label": "await queryRunner.query(`CREATE INDEX \"IDX_${tablePrefix}ca4a71b47f28ac6ea88293a8e2\" ON \"${tablePrefix}execution_entity\" (\"waitTill\")`);",
                                                      "successors": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "down",
          "type": "function",
          "start_line": 50,
          "end_line": 82,
          "functions": [],
          "classes": [],
          "simplified_code": "\tasync down({ queryRunner, tablePrefix }: MigrationContext) {\n\t\tawait queryRunner.query(`DROP TABLE IF EXISTS \"${tablePrefix}temporary_execution_entity\"`);\n\t\tawait queryRunner.query(\n\t\t\t`CREATE TABLE \"${tablePrefix}temporary_execution_entity\" (\n\t\t\t\t\"id\" integer PRIMARY KEY AUTOINCREMENT NOT NULL,\n\t\t\t\t\"workflowId\" varchar,\n\t\t\t\t\"finished\" boolean NOT NULL,\n\t\t\t\t\"mode\" varchar NOT NULL,\n\t\t\t\t\"retryOf\" varchar,\n\t\t\t\t\"retrySuccessId\" varchar,\n\t\t\t\t\"startedAt\" datetime NOT NULL,\n\t\t\t\t\"stoppedAt\" datetime,\n\t\t\t\t\"waitTill\" datetime,\n\t\t\t\t\"workflowData\" text NOT NULL,\n\t\t\t\t\"data\" text NOT NULL\n\t\t\t)`,\n\t\t);\n\t\tconst columns =\n\t\t\t'\"id\", \"workflowId\", \"finished\", \"mode\", \"retryOf\", \"retrySuccessId\", \"startedAt\", \"stoppedAt\", \"waitTill\", \"workflowData\", \"data\"';\n\t\tawait queryRunner.query(\n\t\t\t`INSERT INTO \"${tablePrefix}temporary_execution_entity\"(${columns}) SELECT ${columns} FROM \"${tablePrefix}execution_entity\"`,\n\t\t);\n\t\tawait queryRunner.query(`DROP TABLE \"${tablePrefix}execution_entity\"`);\n\t\tawait queryRunner.query(\n\t\t\t`ALTER TABLE \"${tablePrefix}temporary_execution_entity\" RENAME TO \"${tablePrefix}execution_entity\"`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`CREATE INDEX \"IDX_${tablePrefix}cefb067df2402f6aed0638a6c1\" ON \"${tablePrefix}execution_entity\" (\"stoppedAt\")`,\n\t\t);\n\t\tawait queryRunner.query(\n\t\t\t`CREATE INDEX \"IDX_${tablePrefix}ca4a71b47f28ac6ea88293a8e2\" ON \"${tablePrefix}execution_entity\" (\"waitTill\")`,\n\t\t);\n\t}",
          "blocks": [
            {
              "id": 1,
              "label": "async down({ queryRunner, tablePrefix }: MigrationContext) {",
              "successors": [
                {
                  "id": 2,
                  "label": "await queryRunner.query(`DROP TABLE IF EXISTS \"${tablePrefix}temporary_execution_entity\"`);",
                  "successors": [
                    {
                      "id": 3,
                      "label": "await queryRunner.query(`CREATE TABLE \"${tablePrefix}temporary_execution_entity\" (\n\t\t\t\t\"id\" integer PRIMARY KEY AUTOINCREMENT NOT NULL,\n\t\t\t\t\"workflowId\" varchar,\n\t\t\t\t\"finished\" boolean NOT NULL,\n\t\t\t\t\"mode\" varchar NOT NULL,\n\t\t\t\t\"retryOf\" varchar,\n\t\t\t\t\"retrySuccessId\" varchar,\n\t\t\t\t\"startedAt\" datetime NOT NULL,\n\t\t\t\t\"stoppedAt\" datetime,\n\t\t\t\t\"waitTill\" datetime,\n\t\t\t\t\"workflowData\" text NOT NULL,\n\t\t\t\t\"data\" text NOT NULL\n\t\t\t)`,\n\t\t);",
                      "successors": [
                        {
                          "id": 4,
                          "label": "const columns =\n\t\t\t\"id\", \"workflowId\", \"finished\", \"mode\", \"retryOf\", \"retrySuccessId\", \"startedAt\", \"stoppedAt\", \"waitTill\", \"workflowData\", \"data\";",
                          "successors": [
                            {
                              "id": 5,
                              "label": "await queryRunner.query(\n\t\t\t`INSERT INTO \"${tablePrefix}temporary_execution_entity\"(${columns}) SELECT ${columns} FROM \"${tablePrefix}execution_entity\"`,\n\t\t);",
                              "successors": [
                                {
                                  "id": 6,
                                  "label": "await queryRunner.query(`DROP TABLE \"${tablePrefix}execution_entity\"`);",
                                  "successors": [
                                    {
                                      "id": 7,
                                      "label": "await queryRunner.query(\n\t\t\t`ALTER TABLE \"${tablePrefix}temporary_execution_entity\" RENAME TO \"${tablePrefix}execution_entity\"`,\n\t\t);",
                                      "successors": [
                                        {
                                          "id": 8,
                                          "label": "await queryRunner.query(\n\t\t\t`CREATE INDEX \"IDX_${tablePrefix}cefb067df2402f6aed0638a6c1\" ON \"${tablePrefix}execution_entity\" (\"stoppedAt\")`,\n\t\t);",
                                          "successors": [
                                            {
                                              "id": 9,
                                              "label": "await queryRunner.query(\n\t\t\t`CREATE INDEX \"IDX_${tablePrefix}ca4a71b47f28ac6ea88293a8e2\" ON \"${tablePrefix}execution_entity\" (\"waitTill\")`,\n\t\t);",
                                              "successors": [
                                                {
                                                  "id": 10,
                                                  "label": "}",
                                                  "successors": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "classes": [],
      "simplified_code": "export class DeleteExecutionsWithWorkflows1673268682475 implements ReversibleMigration {\n\ttransaction = false as const;\n\t}\n\t}\n}",
      "blocks": [
        {
          "id": 1,
          "label": "export class DeleteExecutionsWithWorkflows1673268682475 implements ReversibleMigration {",
          "successors": [
            {
              "id": 2,
              "label": "    transaction = false as const;",
              "successors": []
            }
          ]
        }
      ]
    }
  ],
  "simplified_code": "import type { MigrationContext, ReversibleMigration } from '@/databases/types';\n}",
  "blocks": [
    {
      "id": 1,
      "label": "import type { MigrationContext, ReversibleMigration } from '@/databases/types';",
      "successors": []
    }
  ]
}