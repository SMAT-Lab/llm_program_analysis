{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 21,
  "functions": [
    {
      "name": "f",
      "type": "function",
      "start_line": 12,
      "end_line": 12,
      "functions": [],
      "classes": [],
      "simplified_code": "function f() { };",
      "blocks": [
        {
          "id": 1,
          "label": "function f() {\n  let a = 3;",
          "successors": [
            {
              "id": 2,
              "label": "  if (a > 2) {",
              "successors": [
                {
                  "id": 3,
                  "label": "    console.log(a);",
                  "successors": [
                    {
                      "id": 4,
                      "label": "  } else {",
                      "successors": [
                        {
                          "id": 5,
                          "label": "    console.log(1);",
                          "successors": [
                            {
                              "id": 6,
                              "label": "  }",
                              "successors": [
                                {
                                  "id": 7,
                                  "label": "console.log(\"done\");\n}",
                                  "successors": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "fn",
      "type": "function",
      "start_line": 14,
      "end_line": 14,
      "functions": [],
      "classes": [],
      "simplified_code": "function fn(c: Applicable) { }",
      "blocks": [
        {
          "id": 1,
          "label": "function fn(c: Applicable) {",
          "successors": [
            {
              "id": 2,
              "label": "}",
              "successors": []
            }
          ]
        }
      ]
    }
  ],
  "classes": [],
  "simplified_code": "// 3.8.4 Assignment Compatibility\ninterface Applicable {\n    apply(blah: any); // also works for 'apply'\n}\nvar x: Applicable;\n// Should fail\nx = '';\nx = [''];\nx = 4;\nx = {};\n// Should work\nfunction f() { };\nx = f;\nfunction fn(c: Applicable) { }\n// Should Fail\nfn('');\nfn(['']);\nfn(4);\nfn({});\n// Should work\nfn(a => { });",
  "blocks": [
    {
      "id": 1,
      "label": "interface Applicable {\n    apply(blah: any); // also works for 'apply'\n}",
      "successors": [
        {
          "id": 2,
          "label": "var x: Applicable;",
          "successors": [
            {
              "id": 3,
              "label": "x = '';",
              "successors": [
                {
                  "id": 4,
                  "label": "x = [''];",
                  "successors": [
                    {
                      "id": 5,
                      "label": "x = 4;",
                      "successors": [
                        {
                          "id": 6,
                          "label": "x = {};",
                          "successors": [
                            {
                              "id": 7,
                              "label": "function f() { };",
                              "successors": [
                                {
                                  "id": 8,
                                  "label": "x = f;",
                                  "successors": [
                                    {
                                      "id": 9,
                                      "label": "function fn(c: Applicable) { }",
                                      "successors": [
                                        {
                                          "id": 10,
                                          "label": "fn('');",
                                          "successors": [
                                            {
                                              "id": 11,
                                              "label": "fn(['']);",
                                              "successors": [
                                                {
                                                  "id": 12,
                                                  "label": "fn(4);",
                                                  "successors": [
                                                    {
                                                      "id": 13,
                                                      "label": "fn({});",
                                                      "successors": [
                                                        {
                                                          "id": 14,
                                                          "label": "fn(a => { });",
                                                          "successors": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}