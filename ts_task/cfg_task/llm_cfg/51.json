{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 28,
  "functions": [
    {
      "name": "stashOrGetObject",
      "type": "function",
      "start_line": 22,
      "end_line": 28,
      "functions": [],
      "classes": [],
      "simplified_code": "export function stashOrGetObject<T>(objectClass: object, storageKey: string): T {\n  if (!new Boolean(globalThis.getObject(storageKey)).valueOf()) {\n    globalThis.setObject(storageKey, objectClass);\n    Log.debug(TAG, 'Create key of ' + storageKey);\n  }\n  return globalThis.getObject(storageKey) as T;\n}",
      "blocks": [
        {
          "id": 1,
          "label": "export function stashOrGetObject<T>(objectClass: object, storageKey: string): T {",
          "successors": [
            {
              "id": 2,
              "label": "if (!new Boolean(globalThis.getObject(storageKey)).valueOf()) {",
              "successors": [
                {
                  "id": 3,
                  "label": "globalThis.setObject(storageKey, objectClass);\n    Log.debug(TAG, 'Create key of ' + storageKey);",
                  "successors": []
                }
              ]
            },
            {
              "id": 4,
              "label": "return globalThis.getObject(storageKey) as T;",
              "successors": []
            }
          ]
        }
      ]
    }
  ],
  "classes": [],
  "simplified_code": "/*\n * Copyright (c) 2023 Shenzhen Kaihong Digital Industry Development Co., Ltd.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Log } from './Log';\nimport { GlobalContext } from '../common/GlobalContext';\n\nconst TAG = 'SingleInstanceHelper';\nlet globalThis = GlobalContext.getContext();\n\n}",
  "blocks": [
    {
      "id": 1,
      "label": "import { Log } from './Log';\nimport { GlobalContext } from '../common/GlobalContext';\n\nconst TAG = 'SingleInstanceHelper';\nlet globalThis = GlobalContext.getContext();",
      "successors": []
    }
  ]
}