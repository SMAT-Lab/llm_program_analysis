{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 29,
  "functions": [],
  "classes": [
    {
      "name": "CommonObserverCallback",
      "type": "class",
      "start_line": 19,
      "end_line": 29,
      "functions": [
        {
          "name": "constructor",
          "type": "function",
          "start_line": 22,
          "end_line": 24,
          "functions": [],
          "classes": [],
          "simplified_code": "  constructor(source: UserFileDataChangeCallback) {\n    this.source = source;\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "constructor(source: UserFileDataChangeCallback) {",
              "successors": [
                {
                  "id": 2,
                  "label": "    this.source = source;",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "onChange",
          "type": "function",
          "start_line": 26,
          "end_line": 28,
          "functions": [],
          "classes": [],
          "simplified_code": "  onChange(mediaType: string): void {\n    this.source.onUserFileDataChange(mediaType);\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "onChange(mediaType: string): void {",
              "successors": [
                {
                  "id": 2,
                  "label": "    this.source.onUserFileDataChange(mediaType);",
                  "successors": []
                }
              ]
            }
          ]
        }
      ],
      "simplified_code": "export class CommonObserverCallback implements UserFileObserverCallback {\n  private source: UserFileDataChangeCallback;\n\n  }\n\n  }\n}",
      "blocks": [
        {
          "id": 1,
          "label": "export class CommonObserverCallback implements UserFileObserverCallback {",
          "successors": [
            {
              "id": 2,
              "label": "private source: UserFileDataChangeCallback;",
              "successors": [
                {
                  "id": 3,
                  "label": "}",
                  "successors": []
                }
              ]
            }
          ]
        }
      ]
    }
  ],
  "simplified_code": "/*\n * Copyright (c) 2023 Shenzhen Kaihong Digital Industry Development Co., Ltd.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserFileObserverCallback } from '../base/UserFileObserverCallback';\nimport { UserFileDataChangeCallback } from '../base/UserFileDataChangeCallback';\n\n}",
  "blocks": [
    {
      "id": 1,
      "label": "import { UserFileObserverCallback } from '../base/UserFileObserverCallback';",
      "successors": [
        {
          "id": 2,
          "label": "import { UserFileDataChangeCallback } from '../base/UserFileDataChangeCallback';",
          "successors": []
        }
      ]
    }
  ]
}