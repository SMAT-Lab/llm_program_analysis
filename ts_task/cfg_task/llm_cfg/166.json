{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 58,
  "functions": [],
  "classes": [
    {
      "name": "GitRepository",
      "type": "class",
      "start_line": 2,
      "end_line": 54,
      "functions": [
        {
          "name": "open",
          "type": "function",
          "start_line": 4,
          "end_line": 4,
          "functions": [],
          "classes": [],
          "simplified_code": "    static open(path: string, options?: { refreshOnWindowFocus?: boolean | undefined }): GitRepository;",
          "blocks": [
            {
              "id": 1,
              "label": "static open(path: string, options?: { refreshOnWindowFocus?: boolean | undefined }): GitRepository;",
              "successors": []
            }
          ]
        },
        {
          "name": "constructor",
          "type": "function",
          "start_line": 5,
          "end_line": 12,
          "functions": [],
          "classes": [],
          "simplified_code": "    constructor(\n        path: string,\n        options?: {\n            refreshOnWindowFocus?: boolean | undefined;\n            config?: Config | undefined;\n            project?: Project | undefined;\n        },\n    );",
          "blocks": [
            {
              "id": 1,
              "label": "constructor(",
              "successors": [
                {
                  "id": 2,
                  "label": "path: string,",
                  "successors": [
                    {
                      "id": 3,
                      "label": "options?: {",
                      "successors": [
                        {
                          "id": 4,
                          "label": "refreshOnWindowFocus?: boolean | undefined;",
                          "successors": [
                            {
                              "id": 5,
                              "label": "config?: Config | undefined;",
                              "successors": [
                                {
                                  "id": 6,
                                  "label": "project?: Project | undefined;",
                                  "successors": [
                                    {
                                      "id": 7,
                                      "label": "},",
                                      "successors": [
                                        {
                                          "id": 8,
                                          "label": ");",
                                          "successors": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "destroy",
          "type": "function",
          "start_line": 14,
          "end_line": 14,
          "functions": [],
          "classes": [],
          "simplified_code": "    destroy(): void;",
          "blocks": [
            {
              "id": 1,
              "label": "destroy(): void;",
              "successors": []
            }
          ]
        },
        {
          "name": "isDestroyed",
          "type": "function",
          "start_line": 15,
          "end_line": 15,
          "functions": [],
          "classes": [],
          "simplified_code": "    isDestroyed(): boolean;",
          "blocks": [
            {
              "id": 1,
              "label": "isDestroyed(): boolean;",
              "successors": []
            }
          ]
        },
        {
          "name": "onDidDestroy",
          "type": "function",
          "start_line": 17,
          "end_line": 17,
          "functions": [],
          "classes": [],
          "simplified_code": "    onDidDestroy(callback: () => void): Disposable;",
          "blocks": [
            {
              "id": 1,
              "label": "onDidDestroy(callback: () => void): Disposable;",
              "successors": []
            }
          ]
        },
        {
          "name": "onDidChangeStatus",
          "type": "function",
          "start_line": 18,
          "end_line": 18,
          "functions": [],
          "classes": [],
          "simplified_code": "    onDidChangeStatus(callback: (event: RepoStatusChangedEvent) => void): Disposable;",
          "blocks": [
            {
              "id": 1,
              "label": "onDidChangeStatus(callback: (event: RepoStatusChangedEvent) => void): Disposable;",
              "successors": []
            }
          ]
        },
        {
          "name": "onDidChangeStatuses",
          "type": "function",
          "start_line": 19,
          "end_line": 19,
          "functions": [],
          "classes": [],
          "simplified_code": "    onDidChangeStatuses(callback: () => void): Disposable;",
          "blocks": [
            {
              "id": 1,
              "label": "onDidChangeStatuses(callback: () => void): Disposable;",
              "successors": []
            }
          ]
        },
        {
          "name": "getType",
          "type": "function",
          "start_line": 21,
          "end_line": 21,
          "functions": [],
          "classes": [],
          "simplified_code": "    getType(): \"git\";",
          "blocks": [
            {
              "id": 1,
              "label": "getType(): \"git\";",
              "successors": []
            }
          ]
        },
        {
          "name": "getPath",
          "type": "function",
          "start_line": 22,
          "end_line": 22,
          "functions": [],
          "classes": [],
          "simplified_code": "    getPath(): string;",
          "blocks": [
            {
              "id": 1,
              "label": "getPath(): string;",
              "successors": []
            }
          ]
        },
        {
          "name": "getWorkingDirectory",
          "type": "function",
          "start_line": 23,
          "end_line": 23,
          "functions": [],
          "classes": [],
          "simplified_code": "    getWorkingDirectory(): string;",
          "blocks": [
            {
              "id": 1,
              "label": "getWorkingDirectory(): string;",
              "successors": []
            }
          ]
        },
        {
          "name": "isProjectAtRoot",
          "type": "function",
          "start_line": 24,
          "end_line": 24,
          "functions": [],
          "classes": [],
          "simplified_code": "    isProjectAtRoot(): boolean;",
          "blocks": [
            {
              "id": 1,
              "label": "isProjectAtRoot(): boolean;",
              "successors": []
            }
          ]
        },
        {
          "name": "relativize",
          "type": "function",
          "start_line": 25,
          "end_line": 25,
          "functions": [],
          "classes": [],
          "simplified_code": "    relativize(): string;",
          "blocks": [
            {
              "id": 1,
              "label": "relativize(): string;",
              "successors": []
            }
          ]
        },
        {
          "name": "hasBranch",
          "type": "function",
          "start_line": 26,
          "end_line": 26,
          "functions": [],
          "classes": [],
          "simplified_code": "    hasBranch(branch: string): boolean;",
          "blocks": [
            {
              "id": 1,
              "label": "hasBranch(branch: string): boolean; // TypeScript method signature",
              "successors": []
            }
          ]
        },
        {
          "name": "getShortHead",
          "type": "function",
          "start_line": 27,
          "end_line": 27,
          "functions": [],
          "classes": [],
          "simplified_code": "    getShortHead(path?: string): string;",
          "blocks": [
            {
              "id": 1,
              "label": "getShortHead(path?: string): string;",
              "successors": []
            }
          ]
        },
        {
          "name": "isSubmodule",
          "type": "function",
          "start_line": 28,
          "end_line": 28,
          "functions": [],
          "classes": [],
          "simplified_code": "    isSubmodule(path: string): boolean;",
          "blocks": [
            {
              "id": 1,
              "label": "isSubmodule(path: string): boolean;",
              "successors": []
            }
          ]
        },
        {
          "name": "getAheadBehindCount",
          "type": "function",
          "start_line": 29,
          "end_line": 29,
          "functions": [],
          "classes": [],
          "simplified_code": "    getAheadBehindCount(reference: string, path?: string): { ahead: number; behind: number };",
          "blocks": [
            {
              "id": 1,
              "label": "getAheadBehindCount(reference: string, path?: string): { ahead: number; behind: number }",
              "successors": []
            }
          ]
        },
        {
          "name": "getCachedUpstreamAheadBehindCount",
          "type": "function",
          "start_line": 30,
          "end_line": 30,
          "functions": [],
          "classes": [],
          "simplified_code": "    getCachedUpstreamAheadBehindCount(path?: string): { ahead: number; behind: number };",
          "blocks": []
        },
        {
          "name": "getConfigValue",
          "type": "function",
          "start_line": 31,
          "end_line": 31,
          "functions": [],
          "classes": [],
          "simplified_code": "    getConfigValue(key: string, path?: string): string;",
          "blocks": [
            {
              "id": 1,
              "label": "getConfigValue(key: string, path?: string): string;",
              "successors": []
            }
          ]
        },
        {
          "name": "getOriginURL",
          "type": "function",
          "start_line": 32,
          "end_line": 32,
          "functions": [],
          "classes": [],
          "simplified_code": "    getOriginURL(path?: string): string;",
          "blocks": [
            {
              "id": 1,
              "label": "getOriginURL(path?: string): string;",
              "successors": []
            }
          ]
        },
        {
          "name": "getUpstreamBranch",
          "type": "function",
          "start_line": 33,
          "end_line": 33,
          "functions": [],
          "classes": [],
          "simplified_code": "    getUpstreamBranch(path?: string): string | null;",
          "blocks": [
            {
              "id": 1,
              "label": "getUpstreamBranch(path?: string): string | null;",
              "successors": []
            }
          ]
        },
        {
          "name": "getReferences",
          "type": "function",
          "start_line": 34,
          "end_line": 34,
          "functions": [],
          "classes": [],
          "simplified_code": "    getReferences(path?: string): { heads: string[]; remotes: string[]; tags: string[] };",
          "blocks": [
            {
              "id": 1,
              "label": "getReferences(path?: string): { heads: string[]; remotes: string[]; tags: string[] };",
              "successors": []
            }
          ]
        },
        {
          "name": "getReferenceTarget",
          "type": "function",
          "start_line": 35,
          "end_line": 35,
          "functions": [],
          "classes": [],
          "simplified_code": "    getReferenceTarget(reference: string, path?: string): string;",
          "blocks": [
            {
              "id": 1,
              "label": "getReferenceTarget(reference: string, path?: string): string;",
              "successors": []
            }
          ]
        },
        {
          "name": "isPathModified",
          "type": "function",
          "start_line": 37,
          "end_line": 37,
          "functions": [],
          "classes": [],
          "simplified_code": "    isPathModified(path: string): boolean;",
          "blocks": [
            {
              "id": 1,
              "label": "isPathModified(path: string): boolean;",
              "successors": []
            }
          ]
        },
        {
          "name": "isPathNew",
          "type": "function",
          "start_line": 38,
          "end_line": 38,
          "functions": [],
          "classes": [],
          "simplified_code": "    isPathNew(path: string): boolean;",
          "blocks": [
            {
              "id": 1,
              "label": "isPathNew(path: string): boolean;",
              "successors": []
            }
          ]
        },
        {
          "name": "isPathIgnored",
          "type": "function",
          "start_line": 39,
          "end_line": 39,
          "functions": [],
          "classes": [],
          "simplified_code": "    isPathIgnored(path: string): boolean;",
          "blocks": [
            {
              "id": 1,
              "label": "isPathIgnored(path: string): boolean;",
              "successors": []
            }
          ]
        },
        {
          "name": "getDirectoryStatus",
          "type": "function",
          "start_line": 40,
          "end_line": 40,
          "functions": [],
          "classes": [],
          "simplified_code": "    getDirectoryStatus(path: string): number;",
          "blocks": [
            {
              "id": 1,
              "label": "getDirectoryStatus(path: string): number;",
              "successors": []
            }
          ]
        },
        {
          "name": "getPathStatus",
          "type": "function",
          "start_line": 41,
          "end_line": 41,
          "functions": [],
          "classes": [],
          "simplified_code": "    getPathStatus(path: string): number;",
          "blocks": [
            {
              "id": 1,
              "label": "getPathStatus(path: string): number;",
              "successors": []
            }
          ]
        },
        {
          "name": "getCachedPathStatus",
          "type": "function",
          "start_line": 42,
          "end_line": 42,
          "functions": [],
          "classes": [],
          "simplified_code": "    getCachedPathStatus(path: string): number | null;",
          "blocks": [
            {
              "id": 1,
              "label": "getCachedPathStatus(path: string): number | null;",
              "successors": []
            }
          ]
        },
        {
          "name": "isStatusModified",
          "type": "function",
          "start_line": 43,
          "end_line": 43,
          "functions": [],
          "classes": [],
          "simplified_code": "    isStatusModified(status: number): boolean;",
          "blocks": [
            {
              "id": 1,
              "label": "isStatusModified(status: number): boolean;",
              "successors": []
            }
          ]
        },
        {
          "name": "isStatusNew",
          "type": "function",
          "start_line": 44,
          "end_line": 44,
          "functions": [],
          "classes": [],
          "simplified_code": "    isStatusNew(status: number): boolean;",
          "blocks": [
            {
              "id": 1,
              "label": "isStatusNew(status: number): boolean;",
              "successors": []
            }
          ]
        },
        {
          "name": "getDiffStats",
          "type": "function",
          "start_line": 46,
          "end_line": 46,
          "functions": [],
          "classes": [],
          "simplified_code": "    getDiffStats(path: string): { added: number; deleted: number };",
          "blocks": [
            {
              "id": 1,
              "label": "getDiffStats(path: string): { added: number; deleted: number };",
              "successors": []
            }
          ]
        },
        {
          "name": "getLineDiffs",
          "type": "function",
          "start_line": 47,
          "end_line": 50,
          "functions": [],
          "classes": [],
          "simplified_code": "    getLineDiffs(\n        path: string,\n        text: string,\n    ): Array<{ oldStart: number; newStart: number; oldLines: number; newLines: number }>;",
          "blocks": [
            {
              "id": 1,
              "label": "getLineDiffs(\n    path: string,\n    text: string,\n): Array<{ oldStart: number; newStart: number; oldLines: number; newLines: number }>; ",
              "successors": []
            }
          ]
        },
        {
          "name": "checkoutHead",
          "type": "function",
          "start_line": 52,
          "end_line": 52,
          "functions": [],
          "classes": [],
          "simplified_code": "    checkoutHead(path: string): boolean;",
          "blocks": [
            {
              "id": 1,
              "label": "checkoutHead(path: string): boolean;",
              "successors": []
            }
          ]
        },
        {
          "name": "checkoutReference",
          "type": "function",
          "start_line": 53,
          "end_line": 53,
          "functions": [],
          "classes": [],
          "simplified_code": "    checkoutReference(reference: string, create: boolean): boolean;",
          "blocks": [
            {
              "id": 1,
              "label": "checkoutReference(reference: string, create: boolean): boolean;",
              "successors": []
            }
          ]
        }
      ],
      "classes": [],
      "simplified_code": "export class GitRepository {\n    // Construction\n    static open(path: string, options?: { refreshOnWindowFocus?: boolean | undefined }): GitRepository;\n    );\n    // Lifecycle\n    destroy(): void;\n    isDestroyed(): boolean;\n    // Event Subscription\n    onDidDestroy(callback: () => void): Disposable;\n    onDidChangeStatus(callback: (event: RepoStatusChangedEvent) => void): Disposable;\n    onDidChangeStatuses(callback: () => void): Disposable;\n    // Repository Details\n    getType(): \"git\";\n    getPath(): string;\n    getWorkingDirectory(): string;\n    isProjectAtRoot(): boolean;\n    relativize(): string;\n    hasBranch(branch: string): boolean;\n    getShortHead(path?: string): string;\n    isSubmodule(path: string): boolean;\n    getAheadBehindCount(reference: string, path?: string): { ahead: number; behind: number };\n    getCachedUpstreamAheadBehindCount(path?: string): { ahead: number; behind: number };\n    getConfigValue(key: string, path?: string): string;\n    getOriginURL(path?: string): string;\n    getUpstreamBranch(path?: string): string | null;\n    getReferences(path?: string): { heads: string[]; remotes: string[]; tags: string[] };\n    getReferenceTarget(reference: string, path?: string): string;\n    // Reading Status\n    isPathModified(path: string): boolean;\n    isPathNew(path: string): boolean;\n    isPathIgnored(path: string): boolean;\n    getDirectoryStatus(path: string): number;\n    getPathStatus(path: string): number;\n    getCachedPathStatus(path: string): number | null;\n    isStatusModified(status: number): boolean;\n    isStatusNew(status: number): boolean;\n    // Retrieving Diffs\n    getDiffStats(path: string): { added: number; deleted: number };\n    ): Array<{ oldStart: number; newStart: number; oldLines: number; newLines: number }>;\n    // Checking Out\n    checkoutHead(path: string): boolean;\n    checkoutReference(reference: string, create: boolean): boolean;\n}",
      "blocks": [
        {
          "id": 1,
          "label": "export class GitRepository {",
          "successors": [
            {
              "id": 2,
              "label": "// Construction\n    static open(path: string, options?: { refreshOnWindowFocus?: boolean | undefined }): GitRepository;",
              "successors": [
                {
                  "id": 3,
                  "label": "// Lifecycle\n    destroy(): void;\n    isDestroyed(): boolean;",
                  "successors": [
                    {
                      "id": 4,
                      "label": "// Event Subscription\n    onDidDestroy(callback: () => void): Disposable;\n    onDidChangeStatus(callback: (event: RepoStatusChangedEvent) => void): Disposable;\n    onDidChangeStatuses(callback: () => void): Disposable;",
                      "successors": [
                        {
                          "id": 5,
                          "label": "// Repository Details\n    getType(): \\\"git\\\";\n    getPath(): string;\n    getWorkingDirectory(): string;\n    isProjectAtRoot(): boolean;\n    relativize(): string;\n    hasBranch(branch: string): boolean;\n    getShortHead(path?: string): string;\n    isSubmodule(path: string): boolean;\n    getAheadBehindCount(reference: string, path?: string): { ahead: number; behind: number };\n    getCachedUpstreamAheadBehindCount(path?: string): { ahead: number; behind: number };\n    getConfigValue(key: string, path?: string): string;\n    getOriginURL(path?: string): string;\n    getUpstreamBranch(path?: string): string | null;\n    getReferences(path?: string): { heads: string[]; remotes: string[]; tags: string[] };\n    getReferenceTarget(reference: string, path?: string): string;",
                          "successors": [
                            {
                              "id": 6,
                              "label": "// Reading Status\n    isPathModified(path: string): boolean;\n    isPathNew(path: string): boolean;\n    isPathIgnored(path: string): boolean;\n    getDirectoryStatus(path: string): number;\n    getPathStatus(path: string): number;\n    getCachedPathStatus(path: string): number | null;\n    isStatusModified(status: number): boolean;\n    isStatusNew(status: number): boolean;",
                              "successors": [
                                {
                                  "id": 7,
                                  "label": "// Retrieving Diffs\n    getDiffStats(path: string): { added: number; deleted: number };\n    ): Array<{ oldStart: number; newStart: number; oldLines: number; newLines: number }>; ",
                                  "successors": [
                                    {
                                      "id": 8,
                                      "label": "// Checking Out\n    checkoutHead(path: string): boolean;\n    checkoutReference(reference: string, create: boolean): boolean;",
                                      "successors": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "RepoStatusChangedEvent",
      "type": "class",
      "start_line": 55,
      "end_line": 58,
      "functions": [],
      "classes": [],
      "simplified_code": "export interface RepoStatusChangedEvent {\n    path: string;\n    pathStatus: number;\n}",
      "blocks": [
        {
          "id": 1,
          "label": "export interface RepoStatusChangedEvent {",
          "successors": [
            {
              "id": 2,
              "label": "    path: string;",
              "successors": [
                {
                  "id": 3,
                  "label": "    pathStatus: number;",
                  "successors": [
                    {
                      "id": 4,
                      "label": "}",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ],
  "simplified_code": "import { Config, Disposable, Project } from \"../index\";\n}\n}",
  "blocks": [
    {
      "id": 1,
      "label": "import { Config, Disposable, Project } from \"../index\";\n}\n}",
      "successors": []
    }
  ]
}