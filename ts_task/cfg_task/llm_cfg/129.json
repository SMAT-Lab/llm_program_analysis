{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 20,
  "functions": [],
  "classes": [
    {
      "name": "BadRequestException",
      "type": "class",
      "start_line": 3,
      "end_line": 20,
      "functions": [
        {
          "name": "constructor",
          "type": "function",
          "start_line": 4,
          "end_line": 19,
          "functions": [],
          "classes": [],
          "simplified_code": "  constructor(\n    objectOrError?: string | object | any,\n    descriptionOrOptions: string | HttpExceptionOptions = 'Bad Request',\n  ) {\n    const { description, httpExceptionOptions } =\n      HttpException.extractDescriptionAndOptionsFrom(descriptionOrOptions);\n    super(\n      HttpException.createBody(\n        objectOrError,\n        description,\n        HttpStatus.BAD_REQUEST,\n      ),\n      HttpStatus.BAD_REQUEST,\n      httpExceptionOptions,\n    );\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "constructor(objectOrError?: string | object | any, descriptionOrOptions: string | HttpExceptionOptions = 'Bad Request') {",
              "successors": [
                {
                  "id": 2,
                  "label": "const { description, httpExceptionOptions } = HttpException.extractDescriptionAndOptionsFrom(descriptionOrOptions);",
                  "successors": [
                    {
                      "id": 3,
                      "label": "super(HttpException.createBody(objectOrError, description, HttpStatus.BAD_REQUEST), HttpStatus.BAD_REQUEST, httpExceptionOptions);",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "classes": [],
      "simplified_code": "export class BadRequestException extends HttpException {\n  }\n}",
      "blocks": [
        {
          "id": 1,
          "label": "export class BadRequestException extends HttpException {",
          "successors": [
            {
              "id": 2,
              "label": "}",
              "successors": []
            }
          ]
        }
      ]
    }
  ],
  "simplified_code": "import { HttpStatus } from '../enums/http-status.enum';\nimport { HttpException, HttpExceptionOptions } from './http.exception';\n}",
  "blocks": [
    {
      "id": 1,
      "label": "import { HttpStatus } from '../enums/http-status.enum';",
      "successors": []
    },
    {
      "id": 2,
      "label": "import { HttpException, HttpExceptionOptions } from './http.exception';",
      "successors": []
    }
  ]
}