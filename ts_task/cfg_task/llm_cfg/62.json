{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 45,
  "functions": [],
  "classes": [
    {
      "name": "TrashUserFileDataItemCache",
      "type": "class",
      "start_line": 21,
      "end_line": 43,
      "functions": [
        {
          "name": "hasKey",
          "type": "function",
          "start_line": 24,
          "end_line": 26,
          "functions": [],
          "classes": [],
          "simplified_code": "  hasKey(key: string): boolean {\n    return this.trashMediaDataItemMap.has(key);\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "return this.trashMediaDataItemMap.has(key);",
              "successors": []
            }
          ]
        },
        {
          "name": "deleteKey",
          "type": "function",
          "start_line": 28,
          "end_line": 30,
          "functions": [],
          "classes": [],
          "simplified_code": "  deleteKey(key: string): boolean {\n    return this.trashMediaDataItemMap.delete(key);\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "return this.trashMediaDataItemMap.delete(key);",
              "successors": []
            }
          ]
        },
        {
          "name": "set",
          "type": "function",
          "start_line": 32,
          "end_line": 34,
          "functions": [],
          "classes": [],
          "simplified_code": "  set(key: string, value: TrashUserFileDataItem): void {\n    this.trashMediaDataItemMap.set(key, value);\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "set(key: string, value: TrashUserFileDataItem): void {",
              "successors": [
                {
                  "id": 2,
                  "label": "    this.trashMediaDataItemMap.set(key, value);",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "get",
          "type": "function",
          "start_line": 36,
          "end_line": 38,
          "functions": [],
          "classes": [],
          "simplified_code": "  get(key: string): TrashUserFileDataItem {\n    return this.trashMediaDataItemMap.get(key);\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "get(key: string): TrashUserFileDataItem {",
              "successors": [
                {
                  "id": 2,
                  "label": "return this.trashMediaDataItemMap.get(key);",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "clearAll",
          "type": "function",
          "start_line": 40,
          "end_line": 42,
          "functions": [],
          "classes": [],
          "simplified_code": "  clearAll(): void {\n    this.trashMediaDataItemMap.clear();\n  }",
          "blocks": [
            {
              "id": 1,
              "label": "clearAll(): void {",
              "successors": [
                {
                  "id": 2,
                  "label": "    this.trashMediaDataItemMap.clear();",
                  "successors": []
                }
              ]
            }
          ]
        }
      ],
      "simplified_code": "class TrashUserFileDataItemCache {\n  private trashMediaDataItemMap = new Map<string, TrashUserFileDataItem>();\n\n  }\n\n  }\n\n  }\n\n  }\n\n  }\n}",
      "blocks": [
        {
          "id": 1,
          "label": "class TrashUserFileDataItemCache {",
          "successors": [
            {
              "id": 2,
              "label": "private trashMediaDataItemMap = new Map<string, TrashUserFileDataItem>();",
              "successors": []
            }
          ]
        }
      ]
    }
  ],
  "simplified_code": "/*\n * Copyright (c) 2023 Shenzhen Kaihong Digital Industry Development Co., Ltd.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TrashUserFileDataItem } from './TrashUserFileDataItem';\nimport { stashOrGetObject } from '../utils/SingleInstanceUtils';\n\nconst TAG = 'TrashUserFileDataItemCache';\n\n}\n\nexport let trashUserFileDataItemCache: TrashUserFileDataItemCache = stashOrGetObject<TrashUserFileDataItemCache>(new TrashUserFileDataItemCache(), TAG);",
  "blocks": [
    {
      "id": 1,
      "label": "import { TrashUserFileDataItem } from './TrashUserFileDataItem';",
      "successors": [
        {
          "id": 2,
          "label": "import { stashOrGetObject } from '../utils/SingleInstanceUtils';",
          "successors": [
            {
              "id": 3,
              "label": "const TAG = 'TrashUserFileDataItemCache';",
              "successors": [
                {
                  "id": 4,
                  "label": "export let trashUserFileDataItemCache: TrashUserFileDataItemCache = stashOrGetObject<TrashUserFileDataItemCache>(new TrashUserFileDataItemCache(), TAG);",
                  "successors": []
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}