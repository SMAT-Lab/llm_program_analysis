{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 67,
  "functions": [],
  "classes": [
    {
      "name": "ServiceExtImpl",
      "type": "class",
      "start_line": 31,
      "end_line": 67,
      "functions": [
        {
          "name": "processData",
          "type": "function",
          "start_line": 32,
          "end_line": 60,
          "functions": [],
          "classes": [],
          "simplified_code": "  processData(data: number, callback: ProcessDataCallback): void {\n    // \u5f00\u53d1\u8005\u81ea\u884c\u5b9e\u73b0\u4e1a\u52a1\u903b\u8f91\n    hilog.info(DOMAIN_NUMBER, TAG, `processData: ${data}`);\n\n    let callerUid = rpc.IPCSkeleton.getCallingUid();\n    bundleManager.getBundleNameByUid(callerUid).then((callerBundleName) => {\n      hilog.info(DOMAIN_NUMBER, TAG, 'getBundleNameByUid: ' + callerBundleName);\n      // \u5bf9\u5ba2\u6237\u7aef\u5305\u540d\u8fdb\u884c\u8bc6\u522b\n      if (callerBundleName !== 'com.samples.stagemodelabilitydevelop') { // \u8bc6\u522b\u4e0d\u901a\u8fc7\n        hilog.info(DOMAIN_NUMBER, TAG, 'The caller bundle is not in trustlist, reject');\n        return;\n      }\n      // \u8bc6\u522b\u901a\u8fc7\uff0c\u6267\u884c\u6b63\u5e38\u4e1a\u52a1\u903b\u8f91\n    }).catch((err: BusinessError) => {\n      hilog.info(DOMAIN_NUMBER, TAG, 'getBundleNameByUid failed: ' + err.message);\n    });\n\n    let callerTokenId = rpc.IPCSkeleton.getCallingTokenId();\n    let accessManger = abilityAccessCtrl.createAtManager();\n    // \u6240\u6821\u9a8c\u7684\u5177\u4f53\u6743\u9650\u7531\u5f00\u53d1\u8005\u81ea\u884c\u9009\u62e9\uff0c\u6b64\u5904ohos.permission.GET_BUNDLE_INFO_PRIVILEGED\u53ea\u4f5c\u4e3a\u793a\u4f8b\n    let grantStatus = accessManger.verifyAccessTokenSync(callerTokenId, 'ohos.permission.GET_BUNDLE_INFO_PRIVILEGED');\n    if (grantStatus === abilityAccessCtrl.GrantStatus.PERMISSION_DENIED) {\n      hilog.info(DOMAIN_NUMBER, TAG, 'PERMISSION_DENIED');\n      callback(ERR_DENY, data); // \u9274\u6743\u5931\u8d25\uff0c\u8fd4\u56de\u9519\u8bef\n      return;\n    }\n    hilog.info(DOMAIN_NUMBER, TAG, 'verify access token success.');\n    callback(ERR_OK, data + 1); // \u9274\u6743\u901a\u8fc7\uff0c\u6267\u884c\u6b63\u5e38\u4e1a\u52a1\u903b\u8f91\n  };",
          "blocks": [
            {
              "id": 1,
              "label": "processData(data: number, callback: ProcessDataCallback): void {",
              "successors": [
                {
                  "id": 2,
                  "label": "hilog.info(DOMAIN_NUMBER, TAG, `processData: ${data}`);",
                  "successors": [
                    {
                      "id": 3,
                      "label": "let callerUid = rpc.IPCSkeleton.getCallingUid();",
                      "successors": [
                        {
                          "id": 4,
                          "label": "bundleManager.getBundleNameByUid(callerUid).then((callerBundleName) => {",
                          "successors": [
                            {
                              "id": 5,
                              "label": "hilog.info(DOMAIN_NUMBER, TAG, 'getBundleNameByUid: ' + callerBundleName);",
                              "successors": [
                                {
                                  "id": 6,
                                  "label": "if (callerBundleName !== 'com.samples.stagemodelabilitydevelop') {",
                                  "successors": [
                                    {
                                      "id": 7,
                                      "label": "hilog.info(DOMAIN_NUMBER, TAG, 'The caller bundle is not in trustlist, reject');",
                                      "successors": [
                                        {
                                          "id": 8,
                                          "label": "return;",
                                          "successors": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "id": 9,
                              "label": "}).catch((err: BusinessError) => {",
                              "successors": [
                                {
                                  "id": 10,
                                  "label": "hilog.info(DOMAIN_NUMBER, TAG, 'getBundleNameByUid failed: ' + err.message);",
                                  "successors": []
                                }
                              ]
                            },
                            {
                              "id": 11,
                              "label": "let callerTokenId = rpc.IPCSkeleton.getCallingTokenId();",
                              "successors": [
                                {
                                  "id": 12,
                                  "label": "let accessManger = abilityAccessCtrl.createAtManager();",
                                  "successors": [
                                    {
                                      "id": 13,
                                      "label": "let grantStatus = accessManger.verifyAccessTokenSync(callerTokenId, 'ohos.permission.GET_BUNDLE_INFO_PRIVILEGED');",
                                      "successors": [
                                        {
                                          "id": 14,
                                          "label": "if (grantStatus === abilityAccessCtrl.GrantStatus.PERMISSION_DENIED) {",
                                          "successors": [
                                            {
                                              "id": 15,
                                              "label": "hilog.info(DOMAIN_NUMBER, TAG, 'PERMISSION_DENIED');",
                                              "successors": [
                                                {
                                                  "id": 16,
                                                  "label": "callback(ERR_DENY, data);",
                                                  "successors": [
                                                    {
                                                      "id": 17,
                                                      "label": "return;",
                                                      "successors": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "id": 18,
                                          "label": "hilog.info(DOMAIN_NUMBER, TAG, 'verify access token success.');",
                                          "successors": [
                                            {
                                              "id": 19,
                                              "label": "callback(ERR_OK, data + 1);",
                                              "successors": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "insertDataToMap",
          "type": "function",
          "start_line": 62,
          "end_line": 66,
          "functions": [],
          "classes": [],
          "simplified_code": "  insertDataToMap(key: string, val: number, callback: InsertDataToMapCallback): void {\n    // \u5f00\u53d1\u8005\u81ea\u884c\u5b9e\u73b0\u4e1a\u52a1\u903b\u8f91\n    hilog.info(DOMAIN_NUMBER, TAG, `insertDataToMap, key: ${key}  val: ${val}`);\n    callback(ERR_OK);\n  };",
          "blocks": [
            {
              "id": 1,
              "label": "insertDataToMap(key: string, val: number, callback: InsertDataToMapCallback): void {",
              "successors": [
                {
                  "id": 2,
                  "label": "// \u5f00\u53d1\u8005\u81ea\u884c\u5b9e\u73b0\u4e1a\u52a1\u903b\u8f91\nhilog.info(DOMAIN_NUMBER, TAG, `insertDataToMap, key: ${key}  val: ${val}`);",
                  "successors": [
                    {
                      "id": 3,
                      "label": "callback(ERR_OK);",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "simplified_code": "export default class ServiceExtImpl extends IdlServiceExtStub {\n  };\n\n  };\n};",
      "blocks": [
        {
          "id": 1,
          "label": "export default class ServiceExtImpl extends IdlServiceExtStub { };",
          "successors": []
        }
      ]
    }
  ],
  "simplified_code": "/*\n * Copyright (c) 2023 Huawei Device Co., Ltd.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport abilityAccessCtrl from '@ohos.abilityAccessCtrl';\nimport bundleManager from '@ohos.bundle.bundleManager';\nimport IdlServiceExtStub from './idl_service_ext_stub';\nimport hilog from '@ohos.hilog';\nimport rpc from '@ohos.rpc';\nimport type { BusinessError } from '@ohos.base';\nimport type { InsertDataToMapCallback } from './i_idl_service_ext';\nimport type { ProcessDataCallback } from './i_idl_service_ext';\n\nconst ERR_OK = 0;\nconst TAG: string = '[IdlServiceExtImpl]';\nconst DOMAIN_NUMBER: number = 0xFF00;\nconst ERR_DENY = -1;\n\n// \u5f00\u53d1\u8005\u9700\u8981\u5728\u8fd9\u4e2a\u7c7b\u578b\u91cc\u5bf9\u63a5\u53e3\u8fdb\u884c\u5b9e\u73b0\n};",
  "blocks": [
    {
      "id": 1,
      "label": "import abilityAccessCtrl from '@ohos.abilityAccessCtrl';",
      "successors": []
    },
    {
      "id": 2,
      "label": "import bundleManager from '@ohos.bundle.bundleManager';",
      "successors": []
    },
    {
      "id": 3,
      "label": "import IdlServiceExtStub from './idl_service_ext_stub';",
      "successors": []
    },
    {
      "id": 4,
      "label": "import hilog from '@ohos.hilog';",
      "successors": []
    },
    {
      "id": 5,
      "label": "import rpc from '@ohos.rpc';",
      "successors": []
    },
    {
      "id": 6,
      "label": "import type { BusinessError } from '@ohos.base';",
      "successors": []
    },
    {
      "id": 7,
      "label": "import type { InsertDataToMapCallback } from './i_idl_service_ext';",
      "successors": []
    },
    {
      "id": 8,
      "label": "import type { ProcessDataCallback } from './i_idl_service_ext';",
      "successors": []
    },
    {
      "id": 9,
      "label": "const ERR_OK = 0;",
      "successors": []
    },
    {
      "id": 10,
      "label": "const TAG: string = '[IdlServiceExtImpl]';",
      "successors": []
    },
    {
      "id": 11,
      "label": "const DOMAIN_NUMBER: number = 0xFF00;",
      "successors": []
    },
    {
      "id": 12,
      "label": "const ERR_DENY = -1;",
      "successors": []
    }
  ]
}