digraph "102.ts" {
  subgraph "cluster_1" {
    label="example_script (CFG) [L1-L38]";
    node_1_1 [label="id: 1\n/*
 * Copyright (c) 2024 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
export default new InputUtil()", shape=box];
  subgraph "cluster_2" {
    label="InputUtil (class) [L16-L36]";
    node_2_1 [label="id: 1\nclass InputUtil {", shape=box];
  subgraph "cluster_3" {
    label="isEmpty (function) [L17-L19]";
    node_3_1 [label="id: 1\nisEmpty(str?: string): boolean {
    return str == 'undefined' || !str || !new RegExp("[^\\s]").test(str)", shape=box];
  }
  subgraph "cluster_4" {
    label="checkNeedNumberSpace (function) [L21-L28]";
    node_4_1 [label="id: 1\nlet isSpace: RegExp = new RegExp('[\+;,#\*]', 'g')
let isRule: RegExp = new RegExp('^\+.*')", shape=box];
  }
  subgraph "cluster_5" {
    label="removeSpace (function) [L30-L35]";
    node_5_1 [label="id: 1\nremoveSpace(str: string): string {", shape=box];
  }
  }
  }
}