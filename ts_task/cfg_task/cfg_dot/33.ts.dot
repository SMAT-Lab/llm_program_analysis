digraph "33.ts" {
  subgraph "cluster_1" {
    label="example_script (CFG) [L1-L176]";
    node_1_1 [label="id: 1\nimport { Action } from '../models/Action'
import { ActionBarMode, ActionBarColorMode, ActionBarSelectionMode } from '../models/ActionBarMode'", shape=box];
  subgraph "cluster_2" {
    label="ActionBarProp (class) [L20-L176]";
    node_2_1 [label="id: 1\nexport class ActionBarProp {", shape=box];
  subgraph "cluster_3" {
    label="constructor (function) [L52-L53]";
    node_3_1 [label="id: 1\nconstructor() {
  }", shape=box];
  }
  subgraph "cluster_4" {
    label="getCountDetailSelectedTitle (function) [L55-L57]";
    node_4_1 [label="id: 1\npublic static getCountDetailSelectedTitle(count: number): Resource {
    return $r('app.plural.count_details_selected', count, count);", shape=box];
  }
  subgraph "cluster_5" {
    label="getCountDetailExternalSelectedTitle (function) [L64-L66]";
    node_5_1 [label="id: 1\npublic static getCountDetailExternalSelectedTitle(count: number, maxSelectCount: number): Resource {
return $r('app.string.count_details_external_selected', count, maxSelectCount);", shape=box];
  }
  subgraph "cluster_6" {
    label="setHasTabBar (function) [L68-L71]";
    node_6_1 [label="id: 1\npublic setHasTabBar(hasTabBar: boolean): ActionBarProp {
  this.hasTabBar = hasTabBar;", shape=box];
  }
  subgraph "cluster_7" {
    label="getHasTabBar (function) [L73-L75]";
    node_7_1 [label="id: 1\npublic getHasTabBar(): boolean {
return this.hasTabBar;", shape=box];
  }
  subgraph "cluster_8" {
    label="setLeftAction (function) [L77-L80]";
    node_8_1 [label="id: 1\npublic setLeftAction(leftAction: Action): ActionBarProp {
    this.leftAction = leftAction;", shape=box];
  }
  subgraph "cluster_9" {
    label="getLeftAction (function) [L82-L84]";
    node_9_1 [label="id: 1\npublic getLeftAction(): Action {
    return this.leftAction;", shape=box];
  }
  subgraph "cluster_10" {
    label="setIsHeadTitle (function) [L86-L89]";
    node_10_1 [label="id: 1\npublic setIsHeadTitle(isHeadTitle: boolean): ActionBarProp {
    this.isHeadTitle = isHeadTitle;", shape=box];
  }
  subgraph "cluster_11" {
    label="getIsHeadTitle (function) [L91-L93]";
    node_11_1 [label="id: 1\npublic getIsHeadTitle(): boolean {
return this.isHeadTitle;", shape=box];
  }
  subgraph "cluster_12" {
    label="setTitle (function) [L95-L98]";
    node_12_1 [label="id: 1\npublic setTitle(title: Object): ActionBarProp {
    this.title = title;", shape=box];
  }
  subgraph "cluster_13" {
    label="getTitle (function) [L100-L102]";
    node_13_1 [label="id: 1\npublic getTitle(): Object {
    return this.title;", shape=box];
  }
  subgraph "cluster_14" {
    label="setSubTitle (function) [L104-L107]";
    node_14_1 [label="id: 1\npublic setSubTitle(subTitle: Object): ActionBarProp {
this.subTitle = subTitle;", shape=box];
  }
  subgraph "cluster_15" {
    label="getSubTitle (function) [L109-L111]";
    node_15_1 [label="id: 1\npublic getSubTitle(): Object {
return this.subTitle;", shape=box];
  }
  subgraph "cluster_16" {
    label="setMenuList (function) [L113-L116]";
    node_16_1 [label="id: 1\npublic setMenuList(menuList: Action[]): ActionBarProp {
this.menuList = menuList;", shape=box];
  }
  subgraph "cluster_17" {
    label="getMenuList (function) [L118-L120]";
    node_17_1 [label="id: 1\npublic getMenuList(): Action[] {
    return this.menuList;", shape=box];
  }
  subgraph "cluster_18" {
    label="setBackgroundColor (function) [L122-L125]";
    node_18_1 [label="id: 1\npublic setBackgroundColor(backgroundColor: Resource): ActionBarProp {
this.backgroundColor = backgroundColor;", shape=box];
  }
  subgraph "cluster_19" {
    label="getBackgroundColor (function) [L127-L130]";
    node_19_1 [label="id: 1\npublic getBackgroundColor(): Resource {
return this.colorMode === ActionBarColorMode.TRANSPARENT
  ? ActionBarProp.TRANSPARENT_BACKGROUND_COLOR : this.backgroundColor;", shape=box];
  }
  subgraph "cluster_20" {
    label="setAlpha (function) [L132-L135]";
    node_20_1 [label="id: 1\npublic setAlpha(alpha: number): ActionBarProp {
    this.alpha = alpha;", shape=box];
  }
  subgraph "cluster_21" {
    label="getAlpha (function) [L137-L139]";
    node_21_1 [label="id: 1\npublic getAlpha(): number {
return this.alpha;", shape=box];
  }
  subgraph "cluster_22" {
    label="setMode (function) [L141-L144]";
    node_22_1 [label="id: 1\npublic setMode(mode: ActionBarMode): ActionBarProp {
    this.mode = mode;", shape=box];
  }
  subgraph "cluster_23" {
    label="getMode (function) [L146-L148]";
    node_23_1 [label="id: 1\npublic getMode(): ActionBarMode {
return this.mode;", shape=box];
  }
  subgraph "cluster_24" {
    label="setColorMode (function) [L150-L153]";
    node_24_1 [label="id: 1\npublic setColorMode(colorMode: ActionBarColorMode): ActionBarProp {
    this.colorMode = colorMode;", shape=box];
  }
  subgraph "cluster_25" {
    label="getColorMode (function) [L155-L157]";
    node_25_1 [label="id: 1\npublic getColorMode(): ActionBarColorMode {
    return this.colorMode;", shape=box];
  }
  subgraph "cluster_26" {
    label="setSelectionMode (function) [L159-L162]";
    node_26_1 [label="id: 1\npublic setSelectionMode(selectionMode: ActionBarSelectionMode): ActionBarProp {
    this.selectionMode = selectionMode;", shape=box];
  }
  subgraph "cluster_27" {
    label="getSelectionMode (function) [L164-L166]";
    node_27_1 [label="id: 1\npublic getSelectionMode(): ActionBarSelectionMode {
    return this.selectionMode;", shape=box];
  }
  subgraph "cluster_28" {
    label="setMaxSelectCount (function) [L168-L171]";
    node_28_1 [label="id: 1\npublic setMaxSelectCount(maxSelectCount: number): ActionBarProp {
this.maxSelectCount = maxSelectCount;", shape=box];
  }
  subgraph "cluster_29" {
    label="getMaxSelectCount (function) [L173-L175]";
    node_29_1 [label="id: 1\npublic getMaxSelectCount(): number {
    return this.maxSelectCount;", shape=box];
  }
  }
  }
}