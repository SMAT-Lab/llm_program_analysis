digraph "20.ts" {
  subgraph "cluster_1" {
    label="example_script (CFG) [L1-L167]";
    node_1_1 [label="id: 1\nimport router from '@system.router';
import { RouterOptions } from '@system.router';", shape=box];
  subgraph "cluster_2" {
    label="AlbumSetNewMenuOperation (class) [L35-L167]";
    node_2_1 [label="id: 1\nexport class AlbumSetNewMenuOperation implements MenuOperation, MenuOperationCallback {", shape=box];
  subgraph "cluster_3" {
    label="constructor (function) [L39-L41]";
    node_3_1 [label="id: 1\nconstructor(menuContext: MenuContext) {
    this.menuContext = menuContext;", shape=box];
  }
  subgraph "cluster_4" {
    label="doAction (function) [L43-L58]";
    node_4_1 [label="id: 1\nif (this.menuContext == null) {
  Log.warn(TAG, 'menuContext is null, return');
  return;", shape=box];
  }
  subgraph "cluster_5" {
    label="confirmCallback (function) [L60-L62]";
    node_5_1 [label="id: 1\nprivate async confirmCallback(displayName: string): Promise<void> {
return await this.confirmCallbackBindImpl(displayName);", shape=box];
  }
  subgraph "cluster_6" {
    label="confirmCallbackBindImpl (function) [L64-L95]";
    node_6_1 [label="id: 1\nLog.info(TAG, 'AlbumSet new album confirm and the new name is: ' + displayName);
let simpleAlbumDataItem: SimpleAlbumDataItem = new SimpleAlbumDataItem('', displayName, '', '', '', -1, -1);", shape=box];
  }
  subgraph "cluster_7" {
    label="checkAlbumExit (function) [L97-L99]";
    node_7_1 [label="id: 1\nprivate async checkAlbumExit(simpleAlbumDataItem: SimpleAlbumDataItem): Promise<boolean> {
    return await userFileModel.getUserAlbumCountByName(simpleAlbumDataItem.displayName) > 0;", shape=box];
  }
  subgraph "cluster_8" {
    label="cancelCallback (function) [L101-L103]";
    node_8_1 [label="id: 1\nprivate cancelCallback(): void {
    this.cancelCallbackBindImpl();", shape=box];
  }
  subgraph "cluster_9" {
    label="cancelCallbackBindImpl (function) [L105-L107]";
    node_9_1 [label="id: 1\nprivate cancelCallbackBindImpl(): void {
    Log.info(TAG, 'AlbumSet new album cancel');", shape=box];
  }
  subgraph "cluster_10" {
    label="onCompleted (function) [L109-L111]";
    node_10_1 [label="id: 1\nonCompleted(): void {", shape=box];
  }
  subgraph "cluster_11" {
    label="onCompletedBindImpl (function) [L113-L116]";
    node_11_1 [label="id: 1\nLog.info(TAG, 'new album data succeed!');
if (this.onOperationEnd != null) this.onOperationEnd();", shape=box];
  }
  subgraph "cluster_12" {
    label="onError (function) [L118-L121]";
    node_12_1 [label="id: 1\nonError(): void {
Log.error(TAG, 'new album data failed!');", shape=box];
  }
  subgraph "cluster_13" {
    label="checkAndAddNumber (function) [L123-L130]";
    node_13_1 [label="id: 1\nlet res = albumInfo.displayName.match(new RegExp('^' + prefixName + '[1-9][0-9]*$'));
Log.info(TAG, `check name res ${res}`);", shape=box];
  }
  subgraph "cluster_14" {
    label="getNewAlbumDefaultName (function) [L132-L166]";
    node_14_1 [label="id: 1\nlet numbers: number[] = [];", shape=box];
  }
  }
  }
}