digraph "34.ts" {
  subgraph "cluster_1" {
    label="example_script (CFG) [L1-L83]";
    node_1_1 [label="id: 1\ntype CallbackType = Function;", shape=box];
  subgraph "cluster_2" {
    label="Broadcast (class) [L18-L83]";
    node_2_1 [label="id: 1\nexport class Broadcast {
  private callBackArray: Map<string, CallbackType[]> = new Map<string, CallbackType[]>();", shape=box];
  subgraph "cluster_3" {
    label="constructor (function) [L21-L22]";
    node_3_1 [label="id: 1\nconstructor() {
  }", shape=box];
  }
  subgraph "cluster_4" {
    label="on (function) [L24-L29]";
    node_4_1 [label="id: 1\npublic on(event: string, callback: CallbackType): void {
if (this.callBackArray.get(event) === null || this.callBackArray.get(event) === undefined) {", shape=box];
  }
  subgraph "cluster_5" {
    label="off (function) [L31-L52]";
    node_5_1 [label="id: 1\npublic off(event: string | null, callback: CallbackType | null): void {", shape=box];
  }
  subgraph "cluster_6" {
    label="emit (function) [L54-L75]";
    node_6_1 [label="id: 1\npublic emit(event: string, args: Object[]): void {
    let _self = this;", shape=box];
  }
  subgraph "cluster_7" {
    label="release (function) [L77-L82]";
    node_7_1 [label="id: 1\npublic release(): void {
this.callBackArray.forEach((array: Object[]): void => {", shape=box];
  }
  }
  }
}