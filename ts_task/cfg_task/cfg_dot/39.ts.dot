digraph "39.ts" {
  subgraph "cluster_1" {
    label="example_script (CFG) [L1-L194]";
    node_1_1 [label="id: 1\nimport { Log } from '../utils/Log';", shape=box];
  subgraph "cluster_2" {
    label="GroupItemDataSource (class) [L23-L194]";
    node_2_1 [label="id: 1\nexport class GroupItemDataSource extends ItemDataSource {", shape=box];
  subgraph "cluster_3" {
    label="constructor (function) [L27-L29]";
    node_3_1 [label="id: 1\nconstructor() {
    super();", shape=box];
  }
  subgraph "cluster_4" {
    label="setSelectType (function) [L31-L33]";
    node_4_1 [label="id: 1\nsetSelectType(selectType: number): void {
    this.groupDataImpl.setSelectType(selectType);", shape=box];
  }
  subgraph "cluster_5" {
    label="setAlbumId (function) [L35-L38]";
    node_5_1 [label="id: 1\nsetAlbumId(id: string): void {
    Log.info(TAG, 'setAlbumId: ' + id);", shape=box];
  }
  subgraph "cluster_6" {
    label="setAlbumType (function) [L40-L43]";
    node_6_1 [label="id: 1\nsetAlbumType(id: number): void {
    Log.info(TAG, 'setAlbumType: ' + id);", shape=box];
  }
  subgraph "cluster_7" {
    label="setAlbumSubtype (function) [L45-L48]";
    node_7_1 [label="id: 1\nsetAlbumSubtype(id: number): void {
    Log.info(TAG, 'setAlbumSubtype: ' + id);", shape=box];
  }
  subgraph "cluster_8" {
    label="setAlbumName (function) [L50-L53]";
    node_8_1 [label="id: 1\nsetAlbumName(name: string): void {
    Log.info(TAG, 'setAlbumName: ' + name);", shape=box];
  }
  subgraph "cluster_9" {
    label="setDeviceId (function) [L55-L58]";
    node_9_1 [label="id: 1\nsetDeviceId(id: string): void {
    Log.info(TAG, 'setDeviceId: ' + id);", shape=box];
  }
  subgraph "cluster_10" {
    label="totalCount (function) [L60-L62]";
    node_10_1 [label="id: 1\ntotalCount(): number {
    return this.groupDataItem.length;", shape=box];
  }
  subgraph "cluster_11" {
    label="getIndexByItem (function) [L64-L74]";
    node_11_1 [label="id: 1\nlet index = -1;
let length = this.groupDataItem.length;", shape=box];
  }
  subgraph "cluster_12" {
    label="getData (function) [L76-L85]";
    node_12_1 [label="id: 1\ngetData(index: number): LazyItem<UserFileDataItem> {
if (index < 0 || index >= this.groupDataItem.length) {", shape=box];
  }
  subgraph "cluster_13" {
    label="getDataByIndex (function) [L87-L96]";
    node_13_1 [label="id: 1\ngetDataByIndex(index: number): UserFileDataItem {", shape=box];
  }
  subgraph "cluster_14" {
    label="isSelect (function) [L98-L107]";
    node_14_1 [label="id: 1\nlet isSelect = true;", shape=box];
  }
  subgraph "cluster_15" {
    label="getSelectedCount (function) [L109-L117]";
    node_15_1 [label="id: 1\ngetSelectedCount(): number {
let count = 0;", shape=box];
  }
  subgraph "cluster_16" {
    label="getItems (function) [L119-L125]";
    node_16_1 [label="id: 1\ngetItems(): UserFileDataItem[] {
let items: UserFileDataItem[] = [];", shape=box];
  }
  subgraph "cluster_17" {
    label="getSelectedItems (function) [L127-L135]";
    node_17_1 [label="id: 1\ngetSelectedItems(): Object[] {
let items: UserFileDataItem[] = [];", shape=box];
  }
  subgraph "cluster_18" {
    label="getSelectedUris (function) [L137-L145]";
    node_18_1 [label="id: 1\nlet uris: string[] = [];", shape=box];
  }
  subgraph "cluster_19" {
    label="setSelect (function) [L147-L152]";
    node_19_1 [label="id: 1\nsetSelect(isSelect: boolean): void {
this.groupDataItem.forEach((item: UserFileDataItem): void => {", shape=box];
  }
  subgraph "cluster_20" {
    label="reloadGroupItemData (function) [L154-L157]";
    node_20_1 [label="id: 1\nasync reloadGroupItemData(isGrid: boolean): Promise<boolean> {
this.groupDataItem = await this.groupDataImpl.reloadGroupItemData(isGrid);", shape=box];
  }
  subgraph "cluster_21" {
    label="onDataUpdate (function) [L159-L161]";
    node_21_1 [label="id: 1\nonDataUpdate(index: number): void {
    this.onDataUpdateBindImpl(index);", shape=box];
  }
  subgraph "cluster_22" {
    label="onDataUpdateBindImpl (function) [L163-L168]";
    node_22_1 [label="id: 1\nLog.debug(TAG, 'onDataUpdate ' + index);
if (index !== -1) {", shape=box];
  }
  subgraph "cluster_23" {
    label="dataReload (function) [L170-L174]";
    node_23_1 [label="id: 1\ndataReload(isGrid: boolean): void {
    this.reloadGroupItemData(isGrid).then<void, void>((isEmpty: boolean): void => {", shape=box];
  }
  subgraph "cluster_24" {
    label="dataRemove (function) [L176-L183]";
    node_24_1 [label="id: 1\ndataRemove(): void {", shape=box];
  }
  subgraph "cluster_25" {
    label="dataDelete (function) [L185-L193]";
    node_25_1 [label="id: 1\ndataDelete(uri: string): void {
const mediaDataItemIndex = this.groupDataItem.findIndex((item: UserFileDataItem): boolean => {", shape=box];
  }
  }
  }
}