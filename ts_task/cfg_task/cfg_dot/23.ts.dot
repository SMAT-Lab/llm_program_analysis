digraph "23.ts" {
  subgraph "cluster_1" {
    label="example_script (CFG) [L1-L72]";
    node_1_1 [label="id: 1\nimport { TrashUserFileDataItem } from '../base/TrashUserFileDataItem';
import { Log } from '../utils/Log';
import { ItemDataSource } from '../common/ItemDataSource';
import { MenuContext } from './MenuContext'
import { ProcessMenuOperation } from './ProcessMenuOperation';
import { BroadcastConstants } from '../constants/BroadcastConstants';

const TAG = 'BatchRecoverMenuOperation';", shape=box];
  subgraph "cluster_2" {
    label="BatchRecoverMenuOperation (class) [L25-L72]";
    node_2_1 [label="id: 1\nexport class BatchRecoverMenuOperation extends ProcessMenuOperation {
}", shape=box];
  subgraph "cluster_3" {
    label="constructor (function) [L26-L28]";
    node_3_1 [label="id: 1\nconstructor(menuContext: MenuContext) {
    super(menuContext);", shape=box];
  }
  subgraph "cluster_4" {
    label="doAction (function) [L30-L61]";
    node_4_1 [label="id: 1\nLog.info(TAG, 'delete doAction');
if (this.menuContext == null) {", shape=box];
  }
  subgraph "cluster_5" {
    label="requestOneBatchOperation (function) [L64-L71]";
    node_5_1 [label="id: 1\nrequestOneBatchOperation(): void {
let item = this.items[this.currentBatch] as TrashUserFileDataItem;", shape=box];
  subgraph "cluster_6" {
    label="anonymous_function (function) [L66-L69]";
    node_6_1 [label="id: 1\nitem.onRecover().then<void, void>((): void => {
    this.currentBatch++;", shape=box];
  }
  }
  }
  }
}