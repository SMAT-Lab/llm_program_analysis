digraph "59.ts" {
  subgraph "cluster_1" {
    label="example_script (CFG) [L1-L284]";
    node_1_1 [label="id: 1\nimport { Log } from '../utils/Log';
import { ViewType } from '../models/ViewType';
import { userFileModel } from './UserFileModel';
import { MediaConstants } from '../constants/MediaConstants';
import { selectManager } from '../common/SelectManager';
import photoAccessHelper from '@ohos.file.photoAccessHelper';
import { screenManager } from '../common/ScreenManager';
const TAG = 'UserFileDataItem';
const STATUS_UNDEFINED = -1;
const STATUS_FALSE = 0;
const STATUS_TRUE = 1;", shape=box];
  subgraph "cluster_2" {
    label="UserFileDataItem (class) [L34-L284]";
    node_2_1 [label="id: 1\nexport class UserFileDataItem implements DateAdded {
  viewType: ViewType = ViewType.ITEM;
  readonly hashIndex: number;
  index: number;
  dateAdded: number = 0;
  dateModified: number;
  dateTaken: number;
  status: number = MediaConstants.UNDEFINED;
  isSelect: boolean = false;
  uri: string;
  orientation: number;
  duration: number;
  size: number;
  width: number; // width changed by orientation
  height: number; // height changed by orientation
  imgWidth: number; // may be smaller than width, as width is too large
  imgHeight: number; // may be smaller than height, as height is too large
  path: string = '';
  title: string;
  displayName: string;
  mediaType: photoAccessHelper.PhotoType;
  favouriteStatus: number = STATUS_UNDEFINED;
  canRotate: number = STATUS_UNDEFINED;
  selections: string = '';
  selectionArgs: string[] = [];
  deviceId: string = '';
  fileAsset: photoAccessHelper.PhotoAsset = undefined;
  defaultThumbnail: PixelMap = undefined;
  thumbnailArray: Map<string, PixelMap> = new Map<string, PixelMap>();", shape=box];
  subgraph "cluster_3" {
    label="constructor (function) [L64-L70]";
    node_3_1 [label="id: 1\nconstructor(selections: string, selectionArgs: string[], deviceId: string, index: number) {", shape=box];
  }
  subgraph "cluster_4" {
    label="getHashCode (function) [L72-L77]";
    node_4_1 [label="id: 1\ngetHashCode(): string {
return this.status === MediaConstants.UNDEFINED ? '' + this.hashIndex : this.uri + this.favouriteStatus + ' ' + this.orientation + ' ' + this.isSelect;", shape=box];
  }
  subgraph "cluster_5" {
    label="loadFileAsset (function) [L79-L81]";
    node_5_1 [label="id: 1\nasync loadFileAsset(): Promise<photoAccessHelper.PhotoAsset> {
return await userFileModel.getMediaItemByUri(this.uri);", shape=box];
  }
  subgraph "cluster_6" {
    label="isLoad (function) [L83-L88]";
    node_6_1 [label="id: 1\nif (this.status > MediaConstants.UNDEFINED) {
    return true;", shape=box];
  }
  subgraph "cluster_7" {
    label="load (function) [L90-L100]";
    node_7_1 [label="id: 1\nasync load(isForce: boolean): Promise<void> {
Log.info(TAG, 'load ' + this.status);", shape=box];
  }
  subgraph "cluster_8" {
    label="update (function) [L102-L177]";
    node_8_1 [label="id: 1\nasync update(fileAsset: photoAccessHelper.PhotoAsset): Promise<void> {
    this.fileAsset = fileAsset;
    this.uri = fileAsset.uri;
    this.displayName = fileAsset.displayName;
    this.mediaType = fileAsset.photoType;
    this.width = screenManager.getWinWidth();
    this.height = screenManager.getWinHeight();
    this.orientation = MediaConstants.ROTATE_NONE;
try {
      this.orientation = fileAsset.get(photoAccessHelper.PhotoKeys.ORIENTATION.toString()) as number;
      Log.info(TAG, 'orientation ' + this.orientation);", shape=box];
  }
  subgraph "cluster_9" {
    label="getThumbnail (function) [L179-L203]";
    node_9_1 [label="id: 1\nLog.debug(TAG, 'getThumbnail ' + this.status);
if (this.status !== MediaConstants.LOADED && this.status !== MediaConstants.PART_LOADED) {", shape=box];
  }
  subgraph "cluster_10" {
    label="getAlt (function) [L205-L211]";
    node_10_1 [label="id: 1\nif (this.mediaType === photoAccessHelper.PhotoType.VIDEO) {", shape=box];
  }
  subgraph "cluster_11" {
    label="setSelect (function) [L213-L216]";
    node_11_1 [label="id: 1\nsetSelect(isSelect: boolean): void {
    this.isSelect = isSelect;", shape=box];
  }
  subgraph "cluster_12" {
    label="onDelete (function) [L218-L228]";
    node_12_1 [label="id: 1\nasync onDelete(): Promise<boolean> {
try {", shape=box];
  }
  subgraph "cluster_13" {
    label="addToAlbum (function) [L230-L240]";
    node_13_1 [label="id: 1\nasync addToAlbum(albumUri:string): Promise<boolean> {
try {", shape=box];
  }
  subgraph "cluster_14" {
    label="isDeleted (function) [L242-L244]";
    node_14_1 [label="id: 1\nisDeleted(): boolean {
    return this.status === MediaConstants.TRASHED;", shape=box];
  }
  subgraph "cluster_15" {
    label="isFavor (function) [L246-L256]";
    node_15_1 [label="id: 1\nasync isFavor(): Promise<boolean> {", shape=box];
  }
  subgraph "cluster_16" {
    label="setFavor (function) [L258-L268]";
    node_16_1 [label="id: 1\nasync setFavor(): Promise<boolean> {
let status = !(await this.isFavor());", shape=box];
  }
  subgraph "cluster_17" {
    label="setName (function) [L270-L283]";
    node_17_1 [label="id: 1\nasync setName(name: string): Promise<void> {
let fileAsset = await this.loadFileAsset();
let displayName = fileAsset.displayName;
let index = displayName.lastIndexOf('.');
displayName = name + displayName.slice(index);
this.displayName = displayName;
this.title = name;", shape=box];
  }
  }
  }
}