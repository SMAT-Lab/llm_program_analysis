{
    "type": "module",
    "start_token": 0,
    "end_token": 128,
    "label": "/*\n * Copyright (c) 2024 Huawei Device Co., Ltd.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nclass InputUtil {\n  isEmpty(str?: string): boolean {\n    return str == 'undefined' || !str || !new RegExp(\"[^\\\\s]\").test(str)\n  }\n\n  checkNeedNumberSpace(numText: string) {\n    let isSpace: RegExp = new RegExp('[\\\\+;,#\\\\*]', 'g')\n    let isRule: RegExp = new RegExp('^\\\\+.*')\n    if (isSpace.test(numText)) {\n      return isRule.test(numText)\n    }\n    return true\n  }\n\n  removeSpace(str: string): string {\n    if (this.isEmpty(str)) {\n      return ''\n    }\n",
    "children": [
        {
            "type": "Block",
            "start_token": 0,
            "end_token": 0,
            "label": "/*\n * Copyright (c) 2024 Huawei Device Co., Ltd.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */",
            "children": []
        },
        {
            "type": "class_placeholder",
            "name": "InputUtil",
            "start_line": 16,
            "end_line": 36,
            "start_token": 1,
            "end_token": 122,
            "label": "\n\nclass InputUtil {\n  isEmpty(str?: string): boolean {\n    return str == 'undefined' || !str || !new RegExp(\"[^\\\\s]\").test(str)\n  }\n\n  checkNeedNumberSpace(numText: string) {\n    let isSpace: RegExp = new RegExp('[\\\\+;,#\\\\*]', 'g')\n    let isRule: RegExp = new RegExp('^\\\\+.*')\n    if (isSpace.test(numText)) {\n      return isRule.test(numText)\n    }\n    return true\n  }\n\n  removeSpace(str: string): string {\n    if (this.isEmpty(str)) {",
            "children": [
                {
                    "type": "SourceFile",
                    "start_token": 1,
                    "end_token": 122,
                    "label": "\n\nclass InputUtil {\n  isEmpty(str?: string): boolean {\n    return str == 'undefined' || !str || !new RegExp(\"[^\\\\s]\").test(str)\n  }\n\n  checkNeedNumberSpace(numText: string) {\n    let isSpace: RegExp = new RegExp('[\\\\+;,#\\\\*]', 'g')\n    let isRule: RegExp = new RegExp('^\\\\+.*')\n    if (isSpace.test(numText)) {\n      return isRule.test(numText)\n    }\n    return true\n  }\n\n  removeSpace(str: string): string {\n    if (this.isEmpty(str)) {",
                    "children": [
                        {
                            "type": "ClassDeclaration",
                            "start_token": 1,
                            "end_token": 122,
                            "label": "\n\nclass InputUtil {\n  isEmpty(str?: string): boolean {\n    return str == 'undefined' || !str || !new RegExp(\"[^\\\\s]\").test(str)\n  }\n\n  checkNeedNumberSpace(numText: string) {\n    let isSpace: RegExp = new RegExp('[\\\\+;,#\\\\*]', 'g')\n    let isRule: RegExp = new RegExp('^\\\\+.*')\n    if (isSpace.test(numText)) {\n      return isRule.test(numText)\n    }\n    return true\n  }\n\n  removeSpace(str: string): string {\n    if (this.isEmpty(str)) {",
                            "children": [
                                {
                                    "type": "Identifier",
                                    "start_token": 2,
                                    "end_token": 2,
                                    "label": "\n",
                                    "children": []
                                },
                                {
                                    "type": "Block",
                                    "start_token": 3,
                                    "end_token": 122,
                                    "label": "class InputUtil {\n  isEmpty(str?: string): boolean {\n    return str == 'undefined' || !str || !new RegExp(\"[^\\\\s]\").test(str)\n  }\n\n  checkNeedNumberSpace(numText: string) {\n    let isSpace: RegExp = new RegExp('[\\\\+;,#\\\\*]', 'g')\n    let isRule: RegExp = new RegExp('^\\\\+.*')\n    if (isSpace.test(numText)) {\n      return isRule.test(numText)\n    }\n    return true\n  }\n\n  removeSpace(str: string): string {\n    if (this.isEmpty(str)) {",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "function_placeholder",
                            "name": "isEmpty",
                            "start_line": 17,
                            "end_line": 19,
                            "start_token": 4,
                            "end_token": 33,
                            "label": "InputUtil {\n  isEmpty(str?: string): boolean {\n    return str == 'undefined' || !str || !new RegExp(\"[^\\\\s]\"",
                            "children": [
                                {
                                    "type": "SourceFile",
                                    "start_token": 4,
                                    "end_token": 33,
                                    "label": "InputUtil {\n  isEmpty(str?: string): boolean {\n    return str == 'undefined' || !str || !new RegExp(\"[^\\\\s]\"",
                                    "children": [
                                        {
                                            "type": "FunctionDeclaration",
                                            "start_token": 4,
                                            "end_token": 33,
                                            "label": "InputUtil {\n  isEmpty(str?: string): boolean {\n    return str == 'undefined' || !str || !new RegExp(\"[^\\\\s]\"",
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "start_token": 4,
                                                    "end_token": 4,
                                                    "label": "InputUtil",
                                                    "children": []
                                                },
                                                {
                                                    "type": "Parameter",
                                                    "start_token": 5,
                                                    "end_token": 9,
                                                    "label": "{\n  isEmpty(str",
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "start_token": 6,
                                                            "end_token": 6,
                                                            "label": "\n",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "ColonToken",
                                                            "start_token": 8,
                                                            "end_token": 8,
                                                            "label": "(",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "StringKeyword",
                                                            "start_token": 9,
                                                            "end_token": 9,
                                                            "label": "str",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "ColonToken",
                                                    "start_token": 11,
                                                    "end_token": 11,
                                                    "label": ":",
                                                    "children": []
                                                },
                                                {
                                                    "type": "BooleanKeyword",
                                                    "start_token": 12,
                                                    "end_token": 12,
                                                    "label": "string",
                                                    "children": []
                                                },
                                                {
                                                    "type": "Block",
                                                    "start_token": 13,
                                                    "end_token": 33,
                                                    "label": "): boolean {\n    return str == 'undefined' || !str || !new RegExp(\"[^\\\\s]\"",
                                                    "children": [
                                                        {
                                                            "type": "ReturnStatement",
                                                            "start_token": 14,
                                                            "end_token": 33,
                                                            "label": ": boolean {\n    return str == 'undefined' || !str || !new RegExp(\"[^\\\\s]\"",
                                                            "children": [
                                                                {
                                                                    "type": "BinaryExpression",
                                                                    "start_token": 15,
                                                                    "end_token": 33,
                                                                    "label": "boolean {\n    return str == 'undefined' || !str || !new RegExp(\"[^\\\\s]\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "BinaryExpression",
                                                                            "start_token": 15,
                                                                            "end_token": 17,
                                                                            "label": "boolean {\n",
                                                                            "children": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "start_token": 15,
                                                                                    "end_token": 15,
                                                                                    "label": "boolean",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "EqualsEqualsToken",
                                                                                    "start_token": 16,
                                                                                    "end_token": 16,
                                                                                    "label": "{",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "StringLiteral",
                                                                                    "start_token": 17,
                                                                                    "end_token": 17,
                                                                                    "label": "\n",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "BarBarToken",
                                                                            "start_token": 18,
                                                                            "end_token": 18,
                                                                            "label": "return",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "PrefixUnaryExpression",
                                                                            "start_token": 19,
                                                                            "end_token": 20,
                                                                            "label": "str =",
                                                                            "children": [
                                                                                {
                                                                                    "type": "ExclamationToken",
                                                                                    "start_token": 19,
                                                                                    "end_token": 19,
                                                                                    "label": "str",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "start_token": 20,
                                                                                    "end_token": 20,
                                                                                    "label": "=",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "BarBarToken",
                                                                            "start_token": 21,
                                                                            "end_token": 21,
                                                                            "label": "=",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "PrefixUnaryExpression",
                                                                            "start_token": 22,
                                                                            "end_token": 32,
                                                                            "label": "'undefined' || !str || !new RegExp(",
                                                                            "children": [
                                                                                {
                                                                                    "type": "ExclamationToken",
                                                                                    "start_token": 22,
                                                                                    "end_token": 22,
                                                                                    "label": "'undefined'",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "CallExpression",
                                                                                    "start_token": 23,
                                                                                    "end_token": 32,
                                                                                    "label": "|| !str || !new RegExp(",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "NewExpression",
                                                                                            "start_token": 23,
                                                                                            "end_token": 27,
                                                                                            "label": "|| !str |",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "Identifier",
                                                                                                    "start_token": 24,
                                                                                                    "end_token": 24,
                                                                                                    "label": "|",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "ParenthesizedExpression",
                                                                                                    "start_token": 25,
                                                                                                    "end_token": 27,
                                                                                                    "label": "!str |",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "RegularExpressionLiteral",
                                                                                                            "start_token": 26,
                                                                                                            "end_token": 26,
                                                                                                            "label": "str",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "DotToken",
                                                                                            "start_token": 28,
                                                                                            "end_token": 28,
                                                                                            "label": "|",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "start_token": 29,
                                                                                            "end_token": 29,
                                                                                            "label": "!",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "ParenthesizedExpression",
                                                                                            "start_token": 30,
                                                                                            "end_token": 32,
                                                                                            "label": "new RegExp(",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "Identifier",
                                                                                                    "start_token": 31,
                                                                                                    "end_token": 31,
                                                                                                    "label": "RegExp",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_placeholder",
                            "name": "checkNeedNumberSpace",
                            "start_line": 21,
                            "end_line": 28,
                            "start_token": 34,
                            "end_token": 83,
                            "label": ").test(str)\n  }\n\n  checkNeedNumberSpace(numText: string) {\n    let isSpace: RegExp = new RegExp('[\\\\+;,#\\\\*]', 'g')\n    let isRule: RegExp = new RegExp('^\\\\+.*')\n    if (isSpace.test(numText)",
                            "children": [
                                {
                                    "type": "SourceFile",
                                    "start_token": 34,
                                    "end_token": 83,
                                    "label": ").test(str)\n  }\n\n  checkNeedNumberSpace(numText: string) {\n    let isSpace: RegExp = new RegExp('[\\\\+;,#\\\\*]', 'g')\n    let isRule: RegExp = new RegExp('^\\\\+.*')\n    if (isSpace.test(numText)",
                                    "children": [
                                        {
                                            "type": "FunctionDeclaration",
                                            "start_token": 34,
                                            "end_token": 83,
                                            "label": ").test(str)\n  }\n\n  checkNeedNumberSpace(numText: string) {\n    let isSpace: RegExp = new RegExp('[\\\\+;,#\\\\*]', 'g')\n    let isRule: RegExp = new RegExp('^\\\\+.*')\n    if (isSpace.test(numText)",
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "start_token": 34,
                                                    "end_token": 34,
                                                    "label": ")",
                                                    "children": []
                                                },
                                                {
                                                    "type": "Parameter",
                                                    "start_token": 36,
                                                    "end_token": 38,
                                                    "label": "test(str",
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "start_token": 36,
                                                            "end_token": 36,
                                                            "label": "test",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "ColonToken",
                                                            "start_token": 37,
                                                            "end_token": 37,
                                                            "label": "(",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "StringKeyword",
                                                            "start_token": 38,
                                                            "end_token": 38,
                                                            "label": "str",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "Block",
                                                    "start_token": 40,
                                                    "end_token": 83,
                                                    "label": "\n  }\n\n  checkNeedNumberSpace(numText: string) {\n    let isSpace: RegExp = new RegExp('[\\\\+;,#\\\\*]', 'g')\n    let isRule: RegExp = new RegExp('^\\\\+.*')\n    if (isSpace.test(numText)",
                                                    "children": [
                                                        {
                                                            "type": "VariableDeclarationList",
                                                            "start_token": 41,
                                                            "end_token": 52,
                                                            "label": "}\n\n  checkNeedNumberSpace(numText: string) {\n    let",
                                                            "children": [
                                                                {
                                                                    "type": "VariableDeclaration",
                                                                    "start_token": 41,
                                                                    "end_token": 52,
                                                                    "label": "}\n\n  checkNeedNumberSpace(numText: string) {\n    let",
                                                                    "children": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "start_token": 42,
                                                                            "end_token": 42,
                                                                            "label": "\n",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "ColonToken",
                                                                            "start_token": 43,
                                                                            "end_token": 43,
                                                                            "label": "\n",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "TypeReference",
                                                                            "start_token": 44,
                                                                            "end_token": 44,
                                                                            "label": "checkNeedNumberSpace",
                                                                            "children": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "start_token": 44,
                                                                                    "end_token": 44,
                                                                                    "label": "checkNeedNumberSpace",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "EqualsToken",
                                                                            "start_token": 45,
                                                                            "end_token": 45,
                                                                            "label": "(",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "NewExpression",
                                                                            "start_token": 46,
                                                                            "end_token": 52,
                                                                            "label": "numText: string) {\n    let",
                                                                            "children": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "start_token": 46,
                                                                                    "end_token": 46,
                                                                                    "label": "numText",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "CallExpression",
                                                                                    "start_token": 47,
                                                                                    "end_token": 52,
                                                                                    "label": ": string) {\n    let",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "start_token": 47,
                                                                                            "end_token": 47,
                                                                                            "label": ":",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "StringLiteral",
                                                                                            "start_token": 49,
                                                                                            "end_token": 49,
                                                                                            "label": ")",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "StringLiteral",
                                                                                            "start_token": 51,
                                                                                            "end_token": 51,
                                                                                            "label": "\n",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "VariableDeclarationList",
                                                            "start_token": 53,
                                                            "end_token": 62,
                                                            "label": "isSpace: RegExp = new RegExp('[\\\\+;,#\\\\*]', 'g'",
                                                            "children": [
                                                                {
                                                                    "type": "VariableDeclaration",
                                                                    "start_token": 53,
                                                                    "end_token": 62,
                                                                    "label": "isSpace: RegExp = new RegExp('[\\\\+;,#\\\\*]', 'g'",
                                                                    "children": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "start_token": 54,
                                                                            "end_token": 54,
                                                                            "label": ":",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "ColonToken",
                                                                            "start_token": 55,
                                                                            "end_token": 55,
                                                                            "label": "RegExp",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "TypeReference",
                                                                            "start_token": 56,
                                                                            "end_token": 56,
                                                                            "label": "=",
                                                                            "children": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "start_token": 56,
                                                                                    "end_token": 56,
                                                                                    "label": "=",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "EqualsToken",
                                                                            "start_token": 57,
                                                                            "end_token": 57,
                                                                            "label": "new",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "NewExpression",
                                                                            "start_token": 58,
                                                                            "end_token": 62,
                                                                            "label": "RegExp('[\\\\+;,#\\\\*]', 'g'",
                                                                            "children": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "start_token": 58,
                                                                                    "end_token": 58,
                                                                                    "label": "RegExp",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "CallExpression",
                                                                                    "start_token": 59,
                                                                                    "end_token": 62,
                                                                                    "label": "('[\\\\+;,#\\\\*]', 'g'",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "start_token": 59,
                                                                                            "end_token": 59,
                                                                                            "label": "(",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "StringLiteral",
                                                                                            "start_token": 61,
                                                                                            "end_token": 61,
                                                                                            "label": ",",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "IfStatement",
                                                            "start_token": 63,
                                                            "end_token": 80,
                                                            "label": ")\n    let isRule: RegExp = new RegExp('^\\\\+.*')\n    if (isSpace.test",
                                                            "children": [
                                                                {
                                                                    "type": "CallExpression",
                                                                    "start_token": 65,
                                                                    "end_token": 70,
                                                                    "label": "let isRule: RegExp = new",
                                                                    "children": [
                                                                        {
                                                                            "type": "PropertyAccessExpression",
                                                                            "start_token": 65,
                                                                            "end_token": 67,
                                                                            "label": "let isRule:",
                                                                            "children": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "start_token": 65,
                                                                                    "end_token": 65,
                                                                                    "label": "let",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "DotToken",
                                                                                    "start_token": 66,
                                                                                    "end_token": 66,
                                                                                    "label": "isRule",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "start_token": 67,
                                                                                    "end_token": 67,
                                                                                    "label": ":",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "Identifier",
                                                                            "start_token": 69,
                                                                            "end_token": 69,
                                                                            "label": "=",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "Block",
                                                                    "start_token": 72,
                                                                    "end_token": 80,
                                                                    "label": "('^\\\\+.*')\n    if (isSpace.test",
                                                                    "children": [
                                                                        {
                                                                            "type": "ReturnStatement",
                                                                            "start_token": 73,
                                                                            "end_token": 79,
                                                                            "label": "'^\\\\+.*')\n    if (isSpace.",
                                                                            "children": [
                                                                                {
                                                                                    "type": "CallExpression",
                                                                                    "start_token": 74,
                                                                                    "end_token": 78,
                                                                                    "label": ")\n    if (isSpace",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "PropertyAccessExpression",
                                                                                            "start_token": 74,
                                                                                            "end_token": 76,
                                                                                            "label": ")\n    if",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "Identifier",
                                                                                                    "start_token": 74,
                                                                                                    "end_token": 74,
                                                                                                    "label": ")",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "DotToken",
                                                                                                    "start_token": 75,
                                                                                                    "end_token": 75,
                                                                                                    "label": "\n",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "Identifier",
                                                                                                    "start_token": 76,
                                                                                                    "end_token": 76,
                                                                                                    "label": "if",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "start_token": 78,
                                                                                            "end_token": 78,
                                                                                            "label": "isSpace",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "ReturnStatement",
                                                            "start_token": 81,
                                                            "end_token": 82,
                                                            "label": "(numText",
                                                            "children": [
                                                                {
                                                                    "type": "TrueKeyword",
                                                                    "start_token": 82,
                                                                    "end_token": 82,
                                                                    "label": "numText",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_placeholder",
                            "name": "removeSpace",
                            "start_line": 30,
                            "end_line": 35,
                            "start_token": 84,
                            "end_token": 121,
                            "label": ") {\n      return isRule.test(numText)\n    }\n    return true\n  }\n\n  removeSpace(str: string): string {\n    if (this.isEmpty(str))",
                            "children": [
                                {
                                    "type": "SourceFile",
                                    "start_token": 84,
                                    "end_token": 121,
                                    "label": ") {\n      return isRule.test(numText)\n    }\n    return true\n  }\n\n  removeSpace(str: string): string {\n    if (this.isEmpty(str))",
                                    "children": [
                                        {
                                            "type": "FunctionDeclaration",
                                            "start_token": 84,
                                            "end_token": 121,
                                            "label": ") {\n      return isRule.test(numText)\n    }\n    return true\n  }\n\n  removeSpace(str: string): string {\n    if (this.isEmpty(str))",
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "start_token": 84,
                                                    "end_token": 84,
                                                    "label": ")",
                                                    "children": []
                                                },
                                                {
                                                    "type": "Parameter",
                                                    "start_token": 85,
                                                    "end_token": 89,
                                                    "label": "{\n      return isRule.",
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "start_token": 86,
                                                            "end_token": 86,
                                                            "label": "\n",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "ColonToken",
                                                            "start_token": 87,
                                                            "end_token": 87,
                                                            "label": "return",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "TypeReference",
                                                            "start_token": 88,
                                                            "end_token": 88,
                                                            "label": "isRule",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "ColonToken",
                                                    "start_token": 90,
                                                    "end_token": 90,
                                                    "label": "test",
                                                    "children": []
                                                },
                                                {
                                                    "type": "TypeReference",
                                                    "start_token": 91,
                                                    "end_token": 91,
                                                    "label": "(",
                                                    "children": []
                                                },
                                                {
                                                    "type": "Block",
                                                    "start_token": 92,
                                                    "end_token": 121,
                                                    "label": "numText)\n    }\n    return true\n  }\n\n  removeSpace(str: string): string {\n    if (this.isEmpty(str))",
                                                    "children": [
                                                        {
                                                            "type": "IfStatement",
                                                            "start_token": 93,
                                                            "end_token": 105,
                                                            "label": ")\n    }\n    return true\n  }\n\n  removeSpace(str",
                                                            "children": [
                                                                {
                                                                    "type": "ParenthesizedExpression",
                                                                    "start_token": 94,
                                                                    "end_token": 101,
                                                                    "label": "\n    }\n    return true\n  }\n",
                                                                    "children": [
                                                                        {
                                                                            "type": "CallExpression",
                                                                            "start_token": 95,
                                                                            "end_token": 100,
                                                                            "label": "}\n    return true\n  }",
                                                                            "children": [
                                                                                {
                                                                                    "type": "PropertyAccessExpression",
                                                                                    "start_token": 95,
                                                                                    "end_token": 97,
                                                                                    "label": "}\n    return",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "ThisKeyword",
                                                                                            "start_token": 95,
                                                                                            "end_token": 95,
                                                                                            "label": "}",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "start_token": 97,
                                                                                            "end_token": 97,
                                                                                            "label": "return",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "start_token": 99,
                                                                                    "end_token": 99,
                                                                                    "label": "\n",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "Block",
                                                                    "start_token": 102,
                                                                    "end_token": 105,
                                                                    "label": "\n  removeSpace(str",
                                                                    "children": [
                                                                        {
                                                                            "type": "ReturnStatement",
                                                                            "start_token": 103,
                                                                            "end_token": 104,
                                                                            "label": "removeSpace(",
                                                                            "children": [
                                                                                {
                                                                                    "type": "StringLiteral",
                                                                                    "start_token": 104,
                                                                                    "end_token": 104,
                                                                                    "label": "(",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "ReturnStatement",
                                                            "start_token": 106,
                                                            "end_token": 120,
                                                            "label": ": string): string {\n    if (this.isEmpty(str)",
                                                            "children": [
                                                                {
                                                                    "type": "CallExpression",
                                                                    "start_token": 107,
                                                                    "end_token": 120,
                                                                    "label": "string): string {\n    if (this.isEmpty(str)",
                                                                    "children": [
                                                                        {
                                                                            "type": "PropertyAccessExpression",
                                                                            "start_token": 107,
                                                                            "end_token": 109,
                                                                            "label": "string):",
                                                                            "children": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "start_token": 107,
                                                                                    "end_token": 107,
                                                                                    "label": "string",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "start_token": 109,
                                                                                    "end_token": 109,
                                                                                    "label": ":",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "NewExpression",
                                                                            "start_token": 110,
                                                                            "end_token": 117,
                                                                            "label": "string {\n    if (this.isEmpty",
                                                                            "children": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "start_token": 111,
                                                                                    "end_token": 112,
                                                                                    "label": "{\n",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "ParenthesizedExpression",
                                                                                    "start_token": 113,
                                                                                    "end_token": 117,
                                                                                    "label": "if (this.isEmpty",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "RegularExpressionLiteral",
                                                                                            "start_token": 114,
                                                                                            "end_token": 114,
                                                                                            "label": "(",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "StringLiteral",
                                                                                            "start_token": 116,
                                                                                            "end_token": 116,
                                                                                            "label": ".",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "StringLiteral",
                                                                            "start_token": 119,
                                                                            "end_token": 119,
                                                                            "label": "str",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "ExportKeyword",
            "start_token": 123,
            "end_token": 123,
            "label": "\n",
            "children": []
        },
        {
            "type": "DefaultKeyword",
            "start_token": 124,
            "end_token": 124,
            "label": "return",
            "children": []
        },
        {
            "type": "NewExpression",
            "start_token": 125,
            "end_token": 128,
            "label": "''\n    }\n",
            "children": [
                {
                    "type": "Identifier",
                    "start_token": 125,
                    "end_token": 126,
                    "label": "''\n",
                    "children": []
                },
                {
                    "type": "ParenthesizedExpression",
                    "start_token": 127,
                    "end_token": 128,
                    "label": "}\n",
                    "children": []
                }
            ]
        }
    ]
}