{
    "type": "module",
    "start_token": 0,
    "end_token": 96,
    "label": "/*\n * Copyright (c) 2023 Shenzhen Kaihong Digital Industry Development Co., Ltd.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport prompt, { ShowToastOptions } from '@system.prompt';\nimport { Log } from './Log';\nimport { screenManager } from '../common/ScreenManager';\n\nconst TAG = 'UiUtil';\nconst TOAST_DURATION = 3000;\n\nexport function showToast(message: string): void {\n  let naviBarHeight = screenManager.getNaviBarHeight()\n  Log.debug(TAG, 'showToast: ' + message);\n  let showToastOptions: ShowToastOptions = {\n    message: message,\n    duration: TOAST_DURATION,\n    bottom: (64",
    "children": [
        {
            "type": "Comment",
            "start_token": 0,
            "end_token": 0,
            "label": "/*\n * Copyright (c) 2023 Shenzhen Kaihong Digital Industry Development Co., Ltd.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */",
            "children": []
        },
        {
            "type": "ImportDeclaration",
            "start_token": 1,
            "end_token": 9,
            "label": "\n\nimport prompt, { ShowToastOptions } from",
            "children": [
                {
                    "type": "ImportClause",
                    "start_token": 1,
                    "end_token": 2,
                    "label": "\n\n",
                    "children": []
                },
                {
                    "type": "NamedImports",
                    "start_token": 3,
                    "end_token": 6,
                    "label": "import prompt, {",
                    "children": [
                        {
                            "type": "ImportSpecifier",
                            "start_token": 4,
                            "end_token": 5,
                            "label": "prompt,",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "StringLiteral",
                    "start_token": 8,
                    "end_token": 8,
                    "label": "}",
                    "children": []
                }
            ]
        },
        {
            "type": "ImportDeclaration",
            "start_token": 10,
            "end_token": 16,
            "label": "'@system.prompt';\nimport { Log }",
            "children": [
                {
                    "type": "NamedImports",
                    "start_token": 11,
                    "end_token": 13,
                    "label": ";\nimport",
                    "children": [
                        {
                            "type": "ImportSpecifier",
                            "start_token": 12,
                            "end_token": 12,
                            "label": "\n",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "StringLiteral",
                    "start_token": 15,
                    "end_token": 15,
                    "label": "Log",
                    "children": []
                }
            ]
        },
        {
            "type": "ImportDeclaration",
            "start_token": 17,
            "end_token": 23,
            "label": "from './Log';\nimport { screenManager",
            "children": [
                {
                    "type": "NamedImports",
                    "start_token": 18,
                    "end_token": 20,
                    "label": "'./Log';\n",
                    "children": [
                        {
                            "type": "ImportSpecifier",
                            "start_token": 19,
                            "end_token": 19,
                            "label": ";",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "StringLiteral",
                    "start_token": 22,
                    "end_token": 22,
                    "label": "{",
                    "children": []
                }
            ]
        },
        {
            "type": "VariableDeclarationList",
            "start_token": 24,
            "end_token": 28,
            "label": "} from '../common/ScreenManager';\n",
            "children": [
                {
                    "type": "VariableDeclaration",
                    "start_token": 24,
                    "end_token": 28,
                    "label": "} from '../common/ScreenManager';\n",
                    "children": [
                        {
                            "type": "Identifier",
                            "start_token": 25,
                            "end_token": 25,
                            "label": "from",
                            "children": []
                        },
                        {
                            "type": "StringLiteral",
                            "start_token": 27,
                            "end_token": 27,
                            "label": ";",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "VariableDeclarationList",
            "start_token": 29,
            "end_token": 33,
            "label": "\nconst TAG = 'UiUtil'",
            "children": [
                {
                    "type": "VariableDeclaration",
                    "start_token": 29,
                    "end_token": 33,
                    "label": "\nconst TAG = 'UiUtil'",
                    "children": [
                        {
                            "type": "Identifier",
                            "start_token": 30,
                            "end_token": 30,
                            "label": "const",
                            "children": []
                        },
                        {
                            "type": "NumberKeyword",
                            "start_token": 32,
                            "end_token": 32,
                            "label": "=",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_placeholder",
            "name": "showToast",
            "start_line": 23,
            "end_line": 32,
            "start_token": 34,
            "end_token": 96,
            "label": ";\nconst TOAST_DURATION = 3000;\n\nexport function showToast(message: string): void {\n  let naviBarHeight = screenManager.getNaviBarHeight()\n  Log.debug(TAG, 'showToast: ' + message);\n  let showToastOptions: ShowToastOptions = {\n    message: message,\n    duration: TOAST_DURATION,\n    bottom: (64",
            "children": [
                {
                    "type": "SourceFile",
                    "start_token": 34,
                    "end_token": 96,
                    "label": ";\nconst TOAST_DURATION = 3000;\n\nexport function showToast(message: string): void {\n  let naviBarHeight = screenManager.getNaviBarHeight()\n  Log.debug(TAG, 'showToast: ' + message);\n  let showToastOptions: ShowToastOptions = {\n    message: message,\n    duration: TOAST_DURATION,\n    bottom: (64",
                    "children": [
                        {
                            "type": "ExportKeyword",
                            "start_token": 34,
                            "end_token": 34,
                            "label": ";",
                            "children": []
                        },
                        {
                            "type": "FunctionDeclaration",
                            "start_token": 35,
                            "end_token": 96,
                            "label": "\nconst TOAST_DURATION = 3000;\n\nexport function showToast(message: string): void {\n  let naviBarHeight = screenManager.getNaviBarHeight()\n  Log.debug(TAG, 'showToast: ' + message);\n  let showToastOptions: ShowToastOptions = {\n    message: message,\n    duration: TOAST_DURATION,\n    bottom: (64",
                            "children": [
                                {
                                    "type": "Identifier",
                                    "start_token": 36,
                                    "end_token": 36,
                                    "label": "const",
                                    "children": []
                                },
                                {
                                    "type": "Parameter",
                                    "start_token": 38,
                                    "end_token": 40,
                                    "label": "= 3000;",
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "start_token": 38,
                                            "end_token": 38,
                                            "label": "=",
                                            "children": []
                                        },
                                        {
                                            "type": "ColonToken",
                                            "start_token": 39,
                                            "end_token": 39,
                                            "label": "3000",
                                            "children": []
                                        },
                                        {
                                            "type": "StringKeyword",
                                            "start_token": 40,
                                            "end_token": 40,
                                            "label": ";",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "ColonToken",
                                    "start_token": 42,
                                    "end_token": 42,
                                    "label": "\n",
                                    "children": []
                                },
                                {
                                    "type": "VoidKeyword",
                                    "start_token": 43,
                                    "end_token": 43,
                                    "label": "export",
                                    "children": []
                                },
                                {
                                    "type": "Block",
                                    "start_token": 44,
                                    "end_token": 96,
                                    "label": "function showToast(message: string): void {\n  let naviBarHeight = screenManager.getNaviBarHeight()\n  Log.debug(TAG, 'showToast: ' + message);\n  let showToastOptions: ShowToastOptions = {\n    message: message,\n    duration: TOAST_DURATION,\n    bottom: (64",
                                    "children": [
                                        {
                                            "type": "VariableDeclarationList",
                                            "start_token": 45,
                                            "end_token": 48,
                                            "label": "showToast(message:",
                                            "children": [
                                                {
                                                    "type": "VariableDeclaration",
                                                    "start_token": 45,
                                                    "end_token": 48,
                                                    "label": "showToast(message:",
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "start_token": 46,
                                                            "end_token": 46,
                                                            "label": "(",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "BinaryExpression",
                                                            "start_token": 47,
                                                            "end_token": 48,
                                                            "label": "message:",
                                                            "children": [
                                                                {
                                                                    "type": "PropertyAccessExpression",
                                                                    "start_token": 48,
                                                                    "end_token": 50,
                                                                    "label": ": string)",
                                                                    "children": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "start_token": 48,
                                                                            "end_token": 48,
                                                                            "label": ":",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "Identifier",
                                                                            "start_token": 50,
                                                                            "end_token": 50,
                                                                            "label": ")",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "CallExpression",
                                                                    "start_token": 50,
                                                                    "end_token": 52,
                                                                    "label": "): void",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "start_token": 53,
                                            "end_token": 63,
                                            "label": "{\n  let naviBarHeight = screenManager.getNaviBarHeight()\n",
                                            "children": [
                                                {
                                                    "type": "CallExpression",
                                                    "start_token": 53,
                                                    "end_token": 62,
                                                    "label": "{\n  let naviBarHeight = screenManager.getNaviBarHeight()",
                                                    "children": [
                                                        {
                                                            "type": "PropertyAccessExpression",
                                                            "start_token": 53,
                                                            "end_token": 55,
                                                            "label": "{\n  let",
                                                            "children": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "start_token": 53,
                                                                    "end_token": 53,
                                                                    "label": "{",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "start_token": 55,
                                                                    "end_token": 55,
                                                                    "label": "let",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "BinaryExpression",
                                                            "start_token": 57,
                                                            "end_token": 61,
                                                            "label": "= screenManager.getNaviBarHeight(",
                                                            "children": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "start_token": 57,
                                                                    "end_token": 57,
                                                                    "label": "=",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "PlusToken",
                                                                    "start_token": 60,
                                                                    "end_token": 60,
                                                                    "label": "getNaviBarHeight",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "start_token": 61,
                                                                    "end_token": 61,
                                                                    "label": "(",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "VariableDeclarationList",
                                            "start_token": 64,
                                            "end_token": 88,
                                            "label": "Log.debug(TAG, 'showToast: ' + message);\n  let showToastOptions: ShowToastOptions = {\n    message: message,\n    duration",
                                            "children": [
                                                {
                                                    "type": "VariableDeclaration",
                                                    "start_token": 64,
                                                    "end_token": 88,
                                                    "label": "Log.debug(TAG, 'showToast: ' + message);\n  let showToastOptions: ShowToastOptions = {\n    message: message,\n    duration",
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "start_token": 65,
                                                            "end_token": 65,
                                                            "label": ".",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "ColonToken",
                                                            "start_token": 66,
                                                            "end_token": 66,
                                                            "label": "debug",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "TypeReference",
                                                            "start_token": 67,
                                                            "end_token": 67,
                                                            "label": "(",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "BinaryExpression",
                                                            "start_token": 68,
                                                            "end_token": 88,
                                                            "label": "TAG, 'showToast: ' + message);\n  let showToastOptions: ShowToastOptions = {\n    message: message,\n    duration",
                                                            "children": [
                                                                {
                                                                    "type": "ObjectLiteralExpression",
                                                                    "start_token": 69,
                                                                    "end_token": 87,
                                                                    "label": ", 'showToast: ' + message);\n  let showToastOptions: ShowToastOptions = {\n    message: message,\n",
                                                                    "children": [
                                                                        {
                                                                            "type": "PropertyAssignment",
                                                                            "start_token": 70,
                                                                            "end_token": 72,
                                                                            "label": "'showToast: ' + message",
                                                                            "children": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "start_token": 70,
                                                                                    "end_token": 70,
                                                                                    "label": "'showToast: '",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "ColonToken",
                                                                                    "start_token": 71,
                                                                                    "end_token": 71,
                                                                                    "label": "+",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "start_token": 72,
                                                                                    "end_token": 72,
                                                                                    "label": "message",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "PropertyAssignment",
                                                                            "start_token": 74,
                                                                            "end_token": 76,
                                                                            "label": ";\n  let",
                                                                            "children": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "start_token": 74,
                                                                                    "end_token": 74,
                                                                                    "label": ";",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "ColonToken",
                                                                                    "start_token": 75,
                                                                                    "end_token": 75,
                                                                                    "label": "\n",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "start_token": 76,
                                                                                    "end_token": 76,
                                                                                    "label": "let",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "PropertyAssignment",
                                                                            "start_token": 78,
                                                                            "end_token": 86,
                                                                            "label": ": ShowToastOptions = {\n    message: message,",
                                                                            "children": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "start_token": 78,
                                                                                    "end_token": 78,
                                                                                    "label": ":",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "ColonToken",
                                                                                    "start_token": 79,
                                                                                    "end_token": 79,
                                                                                    "label": "ShowToastOptions",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "BinaryExpression",
                                                                                    "start_token": 80,
                                                                                    "end_token": 85,
                                                                                    "label": "= {\n    message: message",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "BinaryExpression",
                                                                                            "start_token": 81,
                                                                                            "end_token": 84,
                                                                                            "label": "{\n    message:",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "LiteralType",
                                                                                                    "start_token": 81,
                                                                                                    "end_token": 81,
                                                                                                    "label": "{",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "PlusToken",
                                                                                                    "start_token": 82,
                                                                                                    "end_token": 82,
                                                                                                    "label": "\n",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "Identifier",
                                                                                                    "start_token": 83,
                                                                                                    "end_token": 83,
                                                                                                    "label": "message",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "PlusToken",
                                                                                            "start_token": 85,
                                                                                            "end_token": 85,
                                                                                            "label": "message",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "StringLiteral",
                                                                                            "start_token": 86,
                                                                                            "end_token": 86,
                                                                                            "label": ",",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "start_token": 89,
                                            "end_token": 95,
                                            "label": ": TOAST_DURATION,\n    bottom: (",
                                            "children": [
                                                {
                                                    "type": "CallExpression",
                                                    "start_token": 89,
                                                    "end_token": 94,
                                                    "label": ": TOAST_DURATION,\n    bottom:",
                                                    "children": [
                                                        {
                                                            "type": "PropertyAccessExpression",
                                                            "start_token": 89,
                                                            "end_token": 91,
                                                            "label": ": TOAST_DURATION,",
                                                            "children": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "start_token": 89,
                                                                    "end_token": 89,
                                                                    "label": ":",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "start_token": 91,
                                                                    "end_token": 91,
                                                                    "label": ",",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "start_token": 93,
                                                            "end_token": 93,
                                                            "label": "bottom",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}