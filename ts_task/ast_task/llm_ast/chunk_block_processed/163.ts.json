{
    "type": "module",
    "start_token": 0,
    "end_token": 438,
    "label": "import { Event } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { isWeb } from '../../../../base/common/platform.js';\nimport { isEqual } from '../../../../base/common/resources.js';\nimport { IUserDataProfilesService } from '../../../../platform/userDataProfile/common/userDataProfile.js';\nimport { IUserDataAutoSyncService } from '../../../../platform/userDataSync/common/userDataSync.js';\nimport { IWorkbenchContribution } from '../../../common/contributions.js';\nimport { EditorInput } from '../../../common/editor/editorInput.js';\nimport { IViewsService } from '../../../services/views/common/viewsService.js';\nimport { VIEWLET_ID } from '../../extensions/common/extensions.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { IHostService } from '../../../services/host/browser/host.js';\nimport { KeybindingsEditorInput } from '../../../services/preferences/browser/keybindingsEditorInput.js';\nimport { SettingsEditor2Input } from '../../../services/preferences/common/preferencesEditorInput.js';\nexport class UserDataSyncTrigger extends Disposable implements IWorkbenchContribution {\n\tconstructor(\n\t\t@IEditorService editorService: IEditorService,\n\t\t@IUserDataProfilesService private readonly userDataProfilesService: IUserDataProfilesService,\n\t\t@IViewsService viewsService: IViewsService,\n\t\t@IUserDataAutoSyncService userDataAutoSyncService: IUserDataAutoSyncService,\n\t\t@IHostService hostService: IHostService,\n\t) {\n\t\tsuper();\n\t\tconst event = Event.filter(\n\t\t\tEvent.any<string | undefined>(\n\t\t\t\tEvent.map(editorService.onDidActiveEditorChange, () => this.getUserDataEditorInputSource(editorService.activeEditor)),\n\t\t\t\tEvent.map(Event.filter(viewsService.onDidChangeViewContainerVisibility, e => e.id === VIEWLET_ID && e.visible), e => e.id)\n\t\t\t), source => source !== undefined);\n\t\tif (isWeb) {\n\t\t\tthis._register(Event.debounce<string, string[]>(\n\t\t\t\tEvent.any<string>(\n\t\t\t\t\tEvent.map(hostService.onDidChangeFocus, () => 'windowFocus'),\n\t\t\t\t\tEvent.map(event, source => source!),\n\t\t\t\t), (last, source) => last ? [...last, source] : [source], 1000)\n\t\t\t\t(sources => userDataAutoSyncService.triggerSync(sources, true, false)));\n\t\t} else {\n\t\t\tthis._register(event(source =",
    "children": [
        {
            "type": "ImportDeclaration",
            "start_token": 0,
            "end_token": 6,
            "label": "import { Event } from '../../../../base/common/event.js';",
            "children": [
                {
                    "type": "ImportClause",
                    "start_token": 1,
                    "end_token": 3,
                    "label": "{ Event }",
                    "children": [
                        {
                            "type": "ImportSpecifier",
                            "start_token": 2,
                            "end_token": 2,
                            "label": "Event",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "StringLiteral",
                    "start_token": 5,
                    "end_token": 5,
                    "label": "'../../../../base/common/event.js'",
                    "children": []
                }
            ]
        },
        {
            "type": "ImportDeclaration",
            "start_token": 7,
            "end_token": 13,
            "label": "\nimport { Disposable } from '../../../../base/common/lifecycle.js'",
            "children": [
                {
                    "type": "ImportClause",
                    "start_token": 8,
                    "end_token": 10,
                    "label": "import { Disposable",
                    "children": [
                        {
                            "type": "ImportSpecifier",
                            "start_token": 9,
                            "end_token": 9,
                            "label": "{",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "StringLiteral",
                    "start_token": 12,
                    "end_token": 12,
                    "label": "from",
                    "children": []
                }
            ]
        },
        {
            "type": "ImportDeclaration",
            "start_token": 14,
            "end_token": 20,
            "label": ";\nimport { isWeb } from",
            "children": [
                {
                    "type": "ImportClause",
                    "start_token": 15,
                    "end_token": 17,
                    "label": "\nimport {",
                    "children": [
                        {
                            "type": "ImportSpecifier",
                            "start_token": 16,
                            "end_token": 16,
                            "label": "import",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "StringLiteral",
                    "start_token": 19,
                    "end_token": 19,
                    "label": "}",
                    "children": []
                }
            ]
        },
        {
            "type": "ImportDeclaration",
            "start_token": 21,
            "end_token": 27,
            "label": "'../../../../base/common/platform.js';\nimport { isEqual }",
            "children": [
                {
                    "type": "ImportClause",
                    "start_token": 22,
                    "end_token": 24,
                    "label": ";\nimport",
                    "children": [
                        {
                            "type": "ImportSpecifier",
                            "start_token": 23,
                            "end_token": 23,
                            "label": "\n",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "StringLiteral",
                    "start_token": 26,
                    "end_token": 26,
                    "label": "isEqual",
                    "children": []
                }
            ]
        },
        {
            "type": "ImportDeclaration",
            "start_token": 28,
            "end_token": 34,
            "label": "from '../../../../base/common/resources.js';\nimport { IUserDataProfilesService",
            "children": [
                {
                    "type": "ImportClause",
                    "start_token": 29,
                    "end_token": 31,
                    "label": "'../../../../base/common/resources.js';\n",
                    "children": [
                        {
                            "type": "ImportSpecifier",
                            "start_token": 30,
                            "end_token": 30,
                            "label": ";",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "StringLiteral",
                    "start_token": 33,
                    "end_token": 33,
                    "label": "{",
                    "children": []
                }
            ]
        },
        {
            "type": "ImportDeclaration",
            "start_token": 35,
            "end_token": 41,
            "label": "} from '../../../../platform/userDataProfile/common/userDataProfile.js';\nimport {",
            "children": [
                {
                    "type": "ImportClause",
                    "start_token": 36,
                    "end_token": 38,
                    "label": "from '../../../../platform/userDataProfile/common/userDataProfile.js';",
                    "children": [
                        {
                            "type": "ImportSpecifier",
                            "start_token": 37,
                            "end_token": 37,
                            "label": "'../../../../platform/userDataProfile/common/userDataProfile.js'",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "StringLiteral",
                    "start_token": 40,
                    "end_token": 40,
                    "label": "import",
                    "children": []
                }
            ]
        },
        {
            "type": "ImportDeclaration",
            "start_token": 42,
            "end_token": 48,
            "label": "IUserDataAutoSyncService } from '../../../../platform/userDataSync/common/userDataSync.js';\nimport",
            "children": [
                {
                    "type": "ImportClause",
                    "start_token": 43,
                    "end_token": 45,
                    "label": "} from '../../../../platform/userDataSync/common/userDataSync.js'",
                    "children": [
                        {
                            "type": "ImportSpecifier",
                            "start_token": 44,
                            "end_token": 44,
                            "label": "from",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "StringLiteral",
                    "start_token": 47,
                    "end_token": 47,
                    "label": "\n",
                    "children": []
                }
            ]
        },
        {
            "type": "ImportDeclaration",
            "start_token": 49,
            "end_token": 55,
            "label": "{ IWorkbenchContribution } from '../../../common/contributions.js';\n",
            "children": [
                {
                    "type": "ImportClause",
                    "start_token": 50,
                    "end_token": 52,
                    "label": "IWorkbenchContribution } from",
                    "children": [
                        {
                            "type": "ImportSpecifier",
                            "start_token": 51,
                            "end_token": 51,
                            "label": "}",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "StringLiteral",
                    "start_token": 54,
                    "end_token": 54,
                    "label": ";",
                    "children": []
                }
            ]
        },
        {
            "type": "ImportDeclaration",
            "start_token": 56,
            "end_token": 62,
            "label": "import { EditorInput } from '../../../common/editor/editorInput.js';",
            "children": [
                {
                    "type": "ImportClause",
                    "start_token": 57,
                    "end_token": 59,
                    "label": "{ EditorInput }",
                    "children": [
                        {
                            "type": "ImportSpecifier",
                            "start_token": 58,
                            "end_token": 58,
                            "label": "EditorInput",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "StringLiteral",
                    "start_token": 61,
                    "end_token": 61,
                    "label": "'../../../common/editor/editorInput.js'",
                    "children": []
                }
            ]
        },
        {
            "type": "ImportDeclaration",
            "start_token": 63,
            "end_token": 69,
            "label": "\nimport { IViewsService } from '../../../services/views/common/viewsService.js'",
            "children": [
                {
                    "type": "ImportClause",
                    "start_token": 64,
                    "end_token": 66,
                    "label": "import { IViewsService",
                    "children": [
                        {
                            "type": "ImportSpecifier",
                            "start_token": 65,
                            "end_token": 65,
                            "label": "{",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "StringLiteral",
                    "start_token": 68,
                    "end_token": 68,
                    "label": "from",
                    "children": []
                }
            ]
        },
        {
            "type": "ImportDeclaration",
            "start_token": 70,
            "end_token": 76,
            "label": ";\nimport { VIEWLET_ID } from",
            "children": [
                {
                    "type": "ImportClause",
                    "start_token": 71,
                    "end_token": 73,
                    "label": "\nimport {",
                    "children": [
                        {
                            "type": "ImportSpecifier",
                            "start_token": 72,
                            "end_token": 72,
                            "label": "import",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "StringLiteral",
                    "start_token": 75,
                    "end_token": 75,
                    "label": "}",
                    "children": []
                }
            ]
        },
        {
            "type": "ImportDeclaration",
            "start_token": 77,
            "end_token": 83,
            "label": "'../../extensions/common/extensions.js';\nimport { IEditorService }",
            "children": [
                {
                    "type": "ImportClause",
                    "start_token": 78,
                    "end_token": 80,
                    "label": ";\nimport",
                    "children": [
                        {
                            "type": "ImportSpecifier",
                            "start_token": 79,
                            "end_token": 79,
                            "label": "\n",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "StringLiteral",
                    "start_token": 82,
                    "end_token": 82,
                    "label": "IEditorService",
                    "children": []
                }
            ]
        },
        {
            "type": "ImportDeclaration",
            "start_token": 84,
            "end_token": 90,
            "label": "from '../../../services/editor/common/editorService.js';\nimport { IHostService",
            "children": [
                {
                    "type": "ImportClause",
                    "start_token": 85,
                    "end_token": 87,
                    "label": "'../../../services/editor/common/editorService.js';\n",
                    "children": [
                        {
                            "type": "ImportSpecifier",
                            "start_token": 86,
                            "end_token": 86,
                            "label": ";",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "StringLiteral",
                    "start_token": 89,
                    "end_token": 89,
                    "label": "{",
                    "children": []
                }
            ]
        },
        {
            "type": "ImportDeclaration",
            "start_token": 91,
            "end_token": 97,
            "label": "} from '../../../services/host/browser/host.js';\nimport {",
            "children": [
                {
                    "type": "ImportClause",
                    "start_token": 92,
                    "end_token": 94,
                    "label": "from '../../../services/host/browser/host.js';",
                    "children": [
                        {
                            "type": "ImportSpecifier",
                            "start_token": 93,
                            "end_token": 93,
                            "label": "'../../../services/host/browser/host.js'",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "StringLiteral",
                    "start_token": 96,
                    "end_token": 96,
                    "label": "import",
                    "children": []
                }
            ]
        },
        {
            "type": "class_placeholder",
            "name": "UserDataSyncTrigger",
            "start_line": 15,
            "end_line": 59,
            "start_token": 98,
            "end_token": 438,
            "label": "KeybindingsEditorInput } from '../../../services/preferences/browser/keybindingsEditorInput.js';\nimport { SettingsEditor2Input } from '../../../services/preferences/common/preferencesEditorInput.js';\nexport class UserDataSyncTrigger extends Disposable implements IWorkbenchContribution {\n\tconstructor(\n\t\t@IEditorService editorService: IEditorService,\n\t\t@IUserDataProfilesService private readonly userDataProfilesService: IUserDataProfilesService,\n\t\t@IViewsService viewsService: IViewsService,\n\t\t@IUserDataAutoSyncService userDataAutoSyncService: IUserDataAutoSyncService,\n\t\t@IHostService hostService: IHostService,\n\t) {\n\t\tsuper();\n\t\tconst event = Event.filter(\n\t\t\tEvent.any<string | undefined>(\n\t\t\t\tEvent.map(editorService.onDidActiveEditorChange, () => this.getUserDataEditorInputSource(editorService.activeEditor)),\n\t\t\t\tEvent.map(Event.filter(viewsService.onDidChangeViewContainerVisibility, e => e.id === VIEWLET_ID && e.visible), e => e.id)\n\t\t\t), source => source !== undefined);\n\t\tif (isWeb) {\n\t\t\tthis._register(Event.debounce<string, string[]>(\n\t\t\t\tEvent.any<string>(\n\t\t\t\t\tEvent.map(hostService.onDidChangeFocus, () => 'windowFocus'),\n\t\t\t\t\tEvent.map(event, source => source!),\n\t\t\t\t), (last, source) => last ? [...last, source] : [source], 1000)\n\t\t\t\t(sources => userDataAutoSyncService.triggerSync(sources, true, false)));\n\t\t} else {\n\t\t\tthis._register(event(source =",
            "children": [
                {
                    "type": "Module",
                    "start_token": 98,
                    "end_token": 438,
                    "label": "KeybindingsEditorInput } from '../../../services/preferences/browser/keybindingsEditorInput.js';\nimport { SettingsEditor2Input } from '../../../services/preferences/common/preferencesEditorInput.js';\nexport class UserDataSyncTrigger extends Disposable implements IWorkbenchContribution {\n\tconstructor(\n\t\t@IEditorService editorService: IEditorService,\n\t\t@IUserDataProfilesService private readonly userDataProfilesService: IUserDataProfilesService,\n\t\t@IViewsService viewsService: IViewsService,\n\t\t@IUserDataAutoSyncService userDataAutoSyncService: IUserDataAutoSyncService,\n\t\t@IHostService hostService: IHostService,\n\t) {\n\t\tsuper();\n\t\tconst event = Event.filter(\n\t\t\tEvent.any<string | undefined>(\n\t\t\t\tEvent.map(editorService.onDidActiveEditorChange, () => this.getUserDataEditorInputSource(editorService.activeEditor)),\n\t\t\t\tEvent.map(Event.filter(viewsService.onDidChangeViewContainerVisibility, e => e.id === VIEWLET_ID && e.visible), e => e.id)\n\t\t\t), source => source !== undefined);\n\t\tif (isWeb) {\n\t\t\tthis._register(Event.debounce<string, string[]>(\n\t\t\t\tEvent.any<string>(\n\t\t\t\t\tEvent.map(hostService.onDidChangeFocus, () => 'windowFocus'),\n\t\t\t\t\tEvent.map(event, source => source!),\n\t\t\t\t), (last, source) => last ? [...last, source] : [source], 1000)\n\t\t\t\t(sources => userDataAutoSyncService.triggerSync(sources, true, false)));\n\t\t} else {\n\t\t\tthis._register(event(source =",
                    "children": [
                        {
                            "type": "ExportKeyword",
                            "start_token": 98,
                            "end_token": 98,
                            "label": "KeybindingsEditorInput",
                            "children": []
                        },
                        {
                            "type": "ClassDeclaration",
                            "start_token": 99,
                            "end_token": 438,
                            "label": "} from '../../../services/preferences/browser/keybindingsEditorInput.js';\nimport { SettingsEditor2Input } from '../../../services/preferences/common/preferencesEditorInput.js';\nexport class UserDataSyncTrigger extends Disposable implements IWorkbenchContribution {\n\tconstructor(\n\t\t@IEditorService editorService: IEditorService,\n\t\t@IUserDataProfilesService private readonly userDataProfilesService: IUserDataProfilesService,\n\t\t@IViewsService viewsService: IViewsService,\n\t\t@IUserDataAutoSyncService userDataAutoSyncService: IUserDataAutoSyncService,\n\t\t@IHostService hostService: IHostService,\n\t) {\n\t\tsuper();\n\t\tconst event = Event.filter(\n\t\t\tEvent.any<string | undefined>(\n\t\t\t\tEvent.map(editorService.onDidActiveEditorChange, () => this.getUserDataEditorInputSource(editorService.activeEditor)),\n\t\t\t\tEvent.map(Event.filter(viewsService.onDidChangeViewContainerVisibility, e => e.id === VIEWLET_ID && e.visible), e => e.id)\n\t\t\t), source => source !== undefined);\n\t\tif (isWeb) {\n\t\t\tthis._register(Event.debounce<string, string[]>(\n\t\t\t\tEvent.any<string>(\n\t\t\t\t\tEvent.map(hostService.onDidChangeFocus, () => 'windowFocus'),\n\t\t\t\t\tEvent.map(event, source => source!),\n\t\t\t\t), (last, source) => last ? [...last, source] : [source], 1000)\n\t\t\t\t(sources => userDataAutoSyncService.triggerSync(sources, true, false)));\n\t\t} else {\n\t\t\tthis._register(event(source =",
                            "children": [
                                {
                                    "type": "Identifier",
                                    "start_token": 100,
                                    "end_token": 100,
                                    "label": "from",
                                    "children": []
                                },
                                {
                                    "type": "HeritageClause",
                                    "start_token": 101,
                                    "end_token": 102,
                                    "label": "'../../../services/preferences/browser/keybindingsEditorInput.js';",
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "start_token": 102,
                                            "end_token": 102,
                                            "label": ";",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "HeritageClause",
                                    "start_token": 103,
                                    "end_token": 104,
                                    "label": "\nimport",
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "start_token": 104,
                                            "end_token": 104,
                                            "label": "import",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "Block",
                                    "start_token": 105,
                                    "end_token": 438,
                                    "label": "{ SettingsEditor2Input } from '../../../services/preferences/common/preferencesEditorInput.js';\nexport class UserDataSyncTrigger extends Disposable implements IWorkbenchContribution {\n\tconstructor(\n\t\t@IEditorService editorService: IEditorService,\n\t\t@IUserDataProfilesService private readonly userDataProfilesService: IUserDataProfilesService,\n\t\t@IViewsService viewsService: IViewsService,\n\t\t@IUserDataAutoSyncService userDataAutoSyncService: IUserDataAutoSyncService,\n\t\t@IHostService hostService: IHostService,\n\t) {\n\t\tsuper();\n\t\tconst event = Event.filter(\n\t\t\tEvent.any<string | undefined>(\n\t\t\t\tEvent.map(editorService.onDidActiveEditorChange, () => this.getUserDataEditorInputSource(editorService.activeEditor)),\n\t\t\t\tEvent.map(Event.filter(viewsService.onDidChangeViewContainerVisibility, e => e.id === VIEWLET_ID && e.visible), e => e.id)\n\t\t\t), source => source !== undefined);\n\t\tif (isWeb) {\n\t\t\tthis._register(Event.debounce<string, string[]>(\n\t\t\t\tEvent.any<string>(\n\t\t\t\t\tEvent.map(hostService.onDidChangeFocus, () => 'windowFocus'),\n\t\t\t\t\tEvent.map(event, source => source!),\n\t\t\t\t), (last, source) => last ? [...last, source] : [source], 1000)\n\t\t\t\t(sources => userDataAutoSyncService.triggerSync(sources, true, false)));\n\t\t} else {\n\t\t\tthis._register(event(source =",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "function_placeholder",
                            "name": "constructor",
                            "start_line": 16,
                            "end_line": 39,
                            "start_token": 106,
                            "end_token": 340,
                            "label": "SettingsEditor2Input } from '../../../services/preferences/common/preferencesEditorInput.js';\nexport class UserDataSyncTrigger extends Disposable implements IWorkbenchContribution {\n\tconstructor(\n\t\t@IEditorService editorService: IEditorService,\n\t\t@IUserDataProfilesService private readonly userDataProfilesService: IUserDataProfilesService,\n\t\t@IViewsService viewsService: IViewsService,\n\t\t@IUserDataAutoSyncService userDataAutoSyncService: IUserDataAutoSyncService,\n\t\t@IHostService hostService: IHostService,\n\t) {\n\t\tsuper();\n\t\tconst event = Event.filter(\n\t\t\tEvent.any<string | undefined>(\n\t\t\t\tEvent.map(editorService.onDidActiveEditorChange, () => this.getUserDataEditorInputSource(editorService.activeEditor)),\n\t\t\t\tEvent.map(Event.filter(viewsService.onDidChangeViewContainerVisibility, e => e.id === VIEWLET_ID && e.visible), e => e.id)\n\t\t\t), source => source !== undefined);\n\t\tif (isWeb) {\n\t\t\tthis._register(Event.debounce<string, string[]>(\n\t\t\t\tEvent.any<string>(\n\t\t\t\t\tEvent.map(hostService.onDidChangeFocus",
                            "children": [
                                {
                                    "type": "Constructor",
                                    "start_token": 106,
                                    "end_token": 340,
                                    "label": "SettingsEditor2Input } from '../../../services/preferences/common/preferencesEditorInput.js';\nexport class UserDataSyncTrigger extends Disposable implements IWorkbenchContribution {\n\tconstructor(\n\t\t@IEditorService editorService: IEditorService,\n\t\t@IUserDataProfilesService private readonly userDataProfilesService: IUserDataProfilesService,\n\t\t@IViewsService viewsService: IViewsService,\n\t\t@IUserDataAutoSyncService userDataAutoSyncService: IUserDataAutoSyncService,\n\t\t@IHostService hostService: IHostService,\n\t) {\n\t\tsuper();\n\t\tconst event = Event.filter(\n\t\t\tEvent.any<string | undefined>(\n\t\t\t\tEvent.map(editorService.onDidActiveEditorChange, () => this.getUserDataEditorInputSource(editorService.activeEditor)),\n\t\t\t\tEvent.map(Event.filter(viewsService.onDidChangeViewContainerVisibility, e => e.id === VIEWLET_ID && e.visible), e => e.id)\n\t\t\t), source => source !== undefined);\n\t\tif (isWeb) {\n\t\t\tthis._register(Event.debounce<string, string[]>(\n\t\t\t\tEvent.any<string>(\n\t\t\t\t\tEvent.map(hostService.onDidChangeFocus",
                                    "children": [
                                        {
                                            "type": "Parameter",
                                            "start_token": 108,
                                            "end_token": 111,
                                            "label": "from '../../../services/preferences/common/preferencesEditorInput.js';\n",
                                            "children": []
                                        },
                                        {
                                            "type": "Parameter",
                                            "start_token": 114,
                                            "end_token": 118,
                                            "label": "UserDataSyncTrigger extends Disposable implements IWorkbenchContribution",
                                            "children": [
                                                {
                                                    "type": "PrivateKeyword",
                                                    "start_token": 114,
                                                    "end_token": 114,
                                                    "label": "UserDataSyncTrigger",
                                                    "children": []
                                                },
                                                {
                                                    "type": "ReadonlyKeyword",
                                                    "start_token": 115,
                                                    "end_token": 115,
                                                    "label": "extends",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "Parameter",
                                            "start_token": 120,
                                            "end_token": 123,
                                            "label": "\n\tconstructor(",
                                            "children": []
                                        },
                                        {
                                            "type": "Parameter",
                                            "start_token": 125,
                                            "end_token": 128,
                                            "label": "\t\t@IEditorService",
                                            "children": []
                                        },
                                        {
                                            "type": "Parameter",
                                            "start_token": 130,
                                            "end_token": 133,
                                            "label": ": IEditorService,\n",
                                            "children": []
                                        },
                                        {
                                            "type": "Block",
                                            "start_token": 136,
                                            "end_token": 340,
                                            "label": "@IUserDataProfilesService private readonly userDataProfilesService: IUserDataProfilesService,\n\t\t@IViewsService viewsService: IViewsService,\n\t\t@IUserDataAutoSyncService userDataAutoSyncService: IUserDataAutoSyncService,\n\t\t@IHostService hostService: IHostService,\n\t) {\n\t\tsuper();\n\t\tconst event = Event.filter(\n\t\t\tEvent.any<string | undefined>(\n\t\t\t\tEvent.map(editorService.onDidActiveEditorChange, () => this.getUserDataEditorInputSource(editorService.activeEditor)),\n\t\t\t\tEvent.map(Event.filter(viewsService.onDidChangeViewContainerVisibility, e => e.id === VIEWLET_ID && e.visible), e => e.id)\n\t\t\t), source => source !== undefined);\n\t\tif (isWeb) {\n\t\t\tthis._register(Event.debounce<string, string[]>(\n\t\t\t\tEvent.any<string>(\n\t\t\t\t\tEvent.map(hostService.onDidChangeFocus",
                                            "children": [
                                                {
                                                    "type": "SuperKeyword",
                                                    "start_token": 137,
                                                    "end_token": 140,
                                                    "label": "IUserDataProfilesService private readonly userDataProfilesService",
                                                    "children": []
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "start_token": 141,
                                                    "end_token": 217,
                                                    "label": ": IUserDataProfilesService,\n\t\t@IViewsService viewsService: IViewsService,\n\t\t@IUserDataAutoSyncService userDataAutoSyncService: IUserDataAutoSyncService,\n\t\t@IHostService hostService: IHostService,\n\t) {\n\t\tsuper();\n\t\tconst event = Event.filter(\n\t\t\tEvent.any<string | undefined>(\n\t\t\t\tEvent.map(editorService.onDidActiveEditorChange,",
                                                    "children": [
                                                        {
                                                            "type": "CallExpression",
                                                            "start_token": 144,
                                                            "end_token": 216,
                                                            "label": "\n\t\t@IViewsService viewsService: IViewsService,\n\t\t@IUserDataAutoSyncService userDataAutoSyncService: IUserDataAutoSyncService,\n\t\t@IHostService hostService: IHostService,\n\t) {\n\t\tsuper();\n\t\tconst event = Event.filter(\n\t\t\tEvent.any<string | undefined>(\n\t\t\t\tEvent.map(editorService.onDidActiveEditorChange",
                                                            "children": [
                                                                {
                                                                    "type": "PropertyAccessExpression",
                                                                    "start_token": 144,
                                                                    "end_token": 146,
                                                                    "label": "\n\t\t",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "CallExpression",
                                                                    "start_token": 147,
                                                                    "end_token": 210,
                                                                    "label": "@IViewsService viewsService: IViewsService,\n\t\t@IUserDataAutoSyncService userDataAutoSyncService: IUserDataAutoSyncService,\n\t\t@IHostService hostService: IHostService,\n\t) {\n\t\tsuper();\n\t\tconst event = Event.filter(\n\t\t\tEvent.any<string | undefined>(\n\t\t\t\tEvent",
                                                                    "children": [
                                                                        {
                                                                            "type": "CallExpression",
                                                                            "start_token": 148,
                                                                            "end_token": 208,
                                                                            "label": "IViewsService viewsService: IViewsService,\n\t\t@IUserDataAutoSyncService userDataAutoSyncService: IUserDataAutoSyncService,\n\t\t@IHostService hostService: IHostService,\n\t) {\n\t\tsuper();\n\t\tconst event = Event.filter(\n\t\t\tEvent.any<string | undefined>(\n\t\t\t",
                                                                            "children": [
                                                                                {
                                                                                    "type": "PropertyAccessExpression",
                                                                                    "start_token": 148,
                                                                                    "end_token": 150,
                                                                                    "label": "IViewsService viewsService:",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "ArrayLiteralExpression",
                                                                                    "start_token": 151,
                                                                                    "end_token": 208,
                                                                                    "label": "IViewsService,\n\t\t@IUserDataAutoSyncService userDataAutoSyncService: IUserDataAutoSyncService,\n\t\t@IHostService hostService: IHostService,\n\t) {\n\t\tsuper();\n\t\tconst event = Event.filter(\n\t\t\tEvent.any<string | undefined>(\n\t\t\t",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "ArrowFunction",
                                                                                            "start_token": 160,
                                                                                            "end_token": 176,
                                                                                            "label": "IUserDataAutoSyncService,\n\t\t@IHostService hostService: IHostService,\n\t) {\n\t",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "CallExpression",
                                                                                                    "start_token": 168,
                                                                                                    "end_token": 175,
                                                                                                    "label": ": IHostService,\n\t) {\n",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "PropertyAccessExpression",
                                                                                                            "start_token": 168,
                                                                                                            "end_token": 170,
                                                                                                            "label": ": IHostService,",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "PropertyAccessExpression",
                                                                                                            "start_token": 172,
                                                                                                            "end_token": 174,
                                                                                                            "label": "\t) {",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "ArrowFunction",
                                                                                            "start_token": 180,
                                                                                            "end_token": 208,
                                                                                            "label": ");\n\t\tconst event = Event.filter(\n\t\t\tEvent.any<string | undefined>(\n\t\t\t",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "CallExpression",
                                                                                                    "start_token": 184,
                                                                                                    "end_token": 201,
                                                                                                    "label": "\tconst event = Event.filter(\n\t\t\tEvent.any<string |",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "PropertyAccessExpression",
                                                                                                            "start_token": 184,
                                                                                                            "end_token": 186,
                                                                                                            "label": "\tconst event",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "BinaryExpression",
                                                                                                            "start_token": 190,
                                                                                                            "end_token": 200,
                                                                                                            "label": "filter(\n\t\t\tEvent.any<string",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "EqualsEqualsEqualsToken",
                                                                                                                    "start_token": 195,
                                                                                                                    "end_token": 200,
                                                                                                                    "label": "\tEvent.any<string",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "PropertyAccessExpression",
                                                                                                    "start_token": 203,
                                                                                                    "end_token": 207,
                                                                                                    "label": ">(\n\t\t",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "IfStatement",
                                                    "start_token": 218,
                                                    "end_token": 312,
                                                    "label": "() => this.getUserDataEditorInputSource(editorService.activeEditor)),\n\t\t\t\tEvent.map(Event.filter(viewsService.onDidChangeViewContainerVisibility, e => e.id === VIEWLET_ID && e.visible), e => e.id)\n\t\t\t), source => source !== undefined);\n\t\tif (isWeb) {\n\t\t\tthis._register(Event.debounce<string, string[",
                                                    "children": [
                                                        {
                                                            "type": "Block",
                                                            "start_token": 222,
                                                            "end_token": 312,
                                                            "label": "this.getUserDataEditorInputSource(editorService.activeEditor)),\n\t\t\t\tEvent.map(Event.filter(viewsService.onDidChangeViewContainerVisibility, e => e.id === VIEWLET_ID && e.visible), e => e.id)\n\t\t\t), source => source !== undefined);\n\t\tif (isWeb) {\n\t\t\tthis._register(Event.debounce<string, string[",
                                                            "children": [
                                                                {
                                                                    "type": "CallExpression",
                                                                    "start_token": 223,
                                                                    "end_token": 310,
                                                                    "label": ".getUserDataEditorInputSource(editorService.activeEditor)),\n\t\t\t\tEvent.map(Event.filter(viewsService.onDidChangeViewContainerVisibility, e => e.id === VIEWLET_ID && e.visible), e => e.id)\n\t\t\t), source => source !== undefined);\n\t\tif (isWeb) {\n\t\t\tthis._register(Event.debounce<string,",
                                                                    "children": [
                                                                        {
                                                                            "type": "CallExpression",
                                                                            "start_token": 227,
                                                                            "end_token": 309,
                                                                            "label": ".activeEditor)),\n\t\t\t\tEvent.map(Event.filter(viewsService.onDidChangeViewContainerVisibility, e => e.id === VIEWLET_ID && e.visible), e => e.id)\n\t\t\t), source => source !== undefined);\n\t\tif (isWeb) {\n\t\t\tthis._register(Event.debounce<string",
                                                                            "children": [
                                                                                {
                                                                                    "type": "PropertyAccessExpression",
                                                                                    "start_token": 227,
                                                                                    "end_token": 229,
                                                                                    "label": ".activeEditor)",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "ArrowFunction",
                                                                                    "start_token": 260,
                                                                                    "end_token": 270,
                                                                                    "label": "& e.visible), e => e.",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "BinaryExpression",
                                                                                            "start_token": 265,
                                                                                            "end_token": 268,
                                                                                            "label": ", e =>",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "ArrowFunction",
                                                                                    "start_token": 273,
                                                                                    "end_token": 293,
                                                                                    "label": "\n\t\t\t), source => source !== undefined);\n\t\tif (",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "Block",
                                                    "start_token": 314,
                                                    "end_token": 339,
                                                    "label": ">(\n\t\t\t\tEvent.any<string>(\n\t\t\t\t\tEvent.map(hostService.",
                                                    "children": [
                                                        {
                                                            "type": "CallExpression",
                                                            "start_token": 315,
                                                            "end_token": 337,
                                                            "label": "(\n\t\t\t\tEvent.any<string>(\n\t\t\t\t\tEvent.map(",
                                                            "children": [
                                                                {
                                                                    "type": "CallExpression",
                                                                    "start_token": 319,
                                                                    "end_token": 336,
                                                                    "label": "\t\tEvent.any<string>(\n\t\t\t\t\tEvent.map",
                                                                    "children": [
                                                                        {
                                                                            "type": "PropertyAccessExpression",
                                                                            "start_token": 323,
                                                                            "end_token": 325,
                                                                            "label": "any<string",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_placeholder",
                            "name": "getUserDataEditorInputSource",
                            "start_line": 40,
                            "end_line": 58,
                            "start_token": 341,
                            "end_token": 437,
                            "label": ", () => 'windowFocus'),\n\t\t\t\t\tEvent.map(event, source => source!),\n\t\t\t\t), (last, source) => last ? [...last, source] : [source], 1000)\n\t\t\t\t(sources => userDataAutoSyncService.triggerSync(sources, true, false)));\n\t\t} else {\n\t\t\tthis._register(event(source",
                            "children": [
                                {
                                    "type": "module",
                                    "start_token": 341,
                                    "end_token": 437,
                                    "label": ", () => 'windowFocus'),\n\t\t\t\t\tEvent.map(event, source => source!),\n\t\t\t\t), (last, source) => last ? [...last, source] : [source], 1000)\n\t\t\t\t(sources => userDataAutoSyncService.triggerSync(sources, true, false)));\n\t\t} else {\n\t\t\tthis._register(event(source",
                                    "children": [
                                        {
                                            "type": "PrivateKeyword",
                                            "start_token": 341,
                                            "end_token": 341,
                                            "label": ",",
                                            "children": []
                                        },
                                        {
                                            "type": "MethodDeclaration",
                                            "start_token": 342,
                                            "end_token": 436,
                                            "label": "() => 'windowFocus'),\n\t\t\t\t\tEvent.map(event, source => source!),\n\t\t\t\t), (last, source) => last ? [...last, source] : [source], 1000)\n\t\t\t\t(sources => userDataAutoSyncService.triggerSync(sources, true, false)));\n\t\t} else {\n\t\t\tthis._register(event(",
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "start_token": 342,
                                                    "end_token": 342,
                                                    "label": "(",
                                                    "children": []
                                                },
                                                {
                                                    "type": "ParenthesizedExpression",
                                                    "start_token": 343,
                                                    "end_token": 349,
                                                    "label": ") => 'windowFocus'),\n",
                                                    "children": [
                                                        {
                                                            "type": "Parameter",
                                                            "start_token": 344,
                                                            "end_token": 348,
                                                            "label": "=> 'windowFocus'),",
                                                            "children": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "start_token": 344,
                                                                    "end_token": 344,
                                                                    "label": "=",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "ColonToken",
                                                                    "start_token": 345,
                                                                    "end_token": 345,
                                                                    "label": ">",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "UnionType",
                                                                    "start_token": 346,
                                                                    "end_token": 348,
                                                                    "label": "'windowFocus'),",
                                                                    "children": [
                                                                        {
                                                                            "type": "TypeReference",
                                                                            "start_token": 346,
                                                                            "end_token": 346,
                                                                            "label": "'windowFocus'",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "BarToken",
                                                                            "start_token": 347,
                                                                            "end_token": 347,
                                                                            "label": ")",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "UndefinedKeyword",
                                                                            "start_token": 348,
                                                                            "end_token": 348,
                                                                            "label": ",",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "ColonToken",
                                                    "start_token": 350,
                                                    "end_token": 350,
                                                    "label": "\t",
                                                    "children": []
                                                },
                                                {
                                                    "type": "UnionType",
                                                    "start_token": 351,
                                                    "end_token": 353,
                                                    "label": "\t\t\t",
                                                    "children": [
                                                        {
                                                            "type": "StringKeyword",
                                                            "start_token": 351,
                                                            "end_token": 351,
                                                            "label": "\t",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "BarToken",
                                                            "start_token": 352,
                                                            "end_token": 352,
                                                            "label": "\t",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "UndefinedKeyword",
                                                            "start_token": 353,
                                                            "end_token": 353,
                                                            "label": "\t",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "Block",
                                                    "start_token": 354,
                                                    "end_token": 436,
                                                    "label": "\tEvent.map(event, source => source!),\n\t\t\t\t), (last, source) => last ? [...last, source] : [source], 1000)\n\t\t\t\t(sources => userDataAutoSyncService.triggerSync(sources, true, false)));\n\t\t} else {\n\t\t\tthis._register(event(",
                                                    "children": [
                                                        {
                                                            "type": "IfStatement",
                                                            "start_token": 355,
                                                            "end_token": 364,
                                                            "label": "Event.map(event, source => source",
                                                            "children": [
                                                                {
                                                                    "type": "ParenthesizedExpression",
                                                                    "start_token": 356,
                                                                    "end_token": 359,
                                                                    "label": ".map(event",
                                                                    "children": [
                                                                        {
                                                                            "type": "PrefixUnaryExpression",
                                                                            "start_token": 357,
                                                                            "end_token": 358,
                                                                            "label": "map(",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "Identifier",
                                                                            "start_token": 358,
                                                                            "end_token": 358,
                                                                            "label": "(",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "Block",
                                                                    "start_token": 360,
                                                                    "end_token": 364,
                                                                    "label": ", source => source",
                                                                    "children": [
                                                                        {
                                                                            "type": "ReturnStatement",
                                                                            "start_token": 361,
                                                                            "end_token": 363,
                                                                            "label": "source =>",
                                                                            "children": [
                                                                                {
                                                                                    "type": "UndefinedKeyword",
                                                                                    "start_token": 362,
                                                                                    "end_token": 362,
                                                                                    "label": "=",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "SemicolonClassElement",
                                                                                    "start_token": 363,
                                                                                    "end_token": 363,
                                                                                    "label": ">",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "IfStatement",
                                                            "start_token": 365,
                                                            "end_token": 375,
                                                            "label": "!),\n\t\t\t\t), (",
                                                            "children": [
                                                                {
                                                                    "type": "ParenthesizedExpression",
                                                                    "start_token": 366,
                                                                    "end_token": 370,
                                                                    "label": "),\n\t\t",
                                                                    "children": [
                                                                        {
                                                                            "type": "BinaryExpression",
                                                                            "start_token": 367,
                                                                            "end_token": 369,
                                                                            "label": ",\n\t",
                                                                            "children": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "start_token": 367,
                                                                                    "end_token": 367,
                                                                                    "label": ",",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "InstanceOfExpression",
                                                                                    "start_token": 368,
                                                                                    "end_token": 368,
                                                                                    "label": "\n",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "TypeReference",
                                                                                    "start_token": 369,
                                                                                    "end_token": 369,
                                                                                    "label": "\t",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "Block",
                                                                    "start_token": 371,
                                                                    "end_token": 375,
                                                                    "label": "\t\t), (",
                                                                    "children": [
                                                                        {
                                                                            "type": "ReturnStatement",
                                                                            "start_token": 372,
                                                                            "end_token": 374,
                                                                            "label": "\t),",
                                                                            "children": [
                                                                                {
                                                                                    "type": "StringLiteral",
                                                                                    "start_token": 373,
                                                                                    "end_token": 373,
                                                                                    "label": ")",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "SemicolonClassElement",
                                                                                    "start_token": 374,
                                                                                    "end_token": 374,
                                                                                    "label": ",",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "IfStatement",
                                                            "start_token": 376,
                                                            "end_token": 386,
                                                            "label": "last, source) => last ? [..",
                                                            "children": [
                                                                {
                                                                    "type": "ParenthesizedExpression",
                                                                    "start_token": 377,
                                                                    "end_token": 381,
                                                                    "label": ", source) =>",
                                                                    "children": [
                                                                        {
                                                                            "type": "BinaryExpression",
                                                                            "start_token": 378,
                                                                            "end_token": 380,
                                                                            "label": "source) =",
                                                                            "children": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "start_token": 378,
                                                                                    "end_token": 378,
                                                                                    "label": "source",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "InstanceOfExpression",
                                                                                    "start_token": 379,
                                                                                    "end_token": 379,
                                                                                    "label": ")",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "TypeReference",
                                                                                    "start_token": 380,
                                                                                    "end_token": 380,
                                                                                    "label": "=",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "Block",
                                                                    "start_token": 382,
                                                                    "end_token": 386,
                                                                    "label": "last ? [..",
                                                                    "children": [
                                                                        {
                                                                            "type": "ReturnStatement",
                                                                            "start_token": 383,
                                                                            "end_token": 385,
                                                                            "label": "? [.",
                                                                            "children": [
                                                                                {
                                                                                    "type": "StringLiteral",
                                                                                    "start_token": 384,
                                                                                    "end_token": 384,
                                                                                    "label": "[",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "SemicolonClassElement",
                                                                                    "start_token": 385,
                                                                                    "end_token": 385,
                                                                                    "label": ".",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "VariableDeclarationList",
                                                            "start_token": 387,
                                                            "end_token": 393,
                                                            "label": ".last, source] : [",
                                                            "children": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "start_token": 388,
                                                                    "end_token": 388,
                                                                    "label": "last",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "EqualsToken",
                                                                    "start_token": 389,
                                                                    "end_token": 389,
                                                                    "label": ",",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "PropertyAccessExpression",
                                                                    "start_token": 390,
                                                                    "end_token": 392,
                                                                    "label": "source] :",
                                                                    "children": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "start_token": 390,
                                                                            "end_token": 390,
                                                                            "label": "source",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "PropertyAccessExpression",
                                                                            "start_token": 391,
                                                                            "end_token": 391,
                                                                            "label": "]",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "Identifier",
                                                                            "start_token": 392,
                                                                            "end_token": 392,
                                                                            "label": ":",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "SemicolonClassElement",
                                                                    "start_token": 393,
                                                                    "end_token": 393,
                                                                    "label": "[",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "IfStatement",
                                                            "start_token": 394,
                                                            "end_token": 413,
                                                            "label": "source], 1000)\n\t\t\t\t(sources => userDataAutoSyncService.triggerSync(sources,",
                                                            "children": [
                                                                {
                                                                    "type": "ParenthesizedExpression",
                                                                    "start_token": 395,
                                                                    "end_token": 408,
                                                                    "label": "], 1000)\n\t\t\t\t(sources => userDataAutoSyncService",
                                                                    "children": [
                                                                        {
                                                                            "type": "CallExpression",
                                                                            "start_token": 396,
                                                                            "end_token": 407,
                                                                            "label": ", 1000)\n\t\t\t\t(sources =>",
                                                                            "children": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "start_token": 396,
                                                                                    "end_token": 396,
                                                                                    "label": ",",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "ArgumentList",
                                                                                    "start_token": 397,
                                                                                    "end_token": 406,
                                                                                    "label": "1000)\n\t\t\t\t(sources =",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "start_token": 398,
                                                                                            "end_token": 398,
                                                                                            "label": ")",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "CommaToken",
                                                                                            "start_token": 399,
                                                                                            "end_token": 399,
                                                                                            "label": "\n",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "PropertyAccessExpression",
                                                                                            "start_token": 400,
                                                                                            "end_token": 405,
                                                                                            "label": "\t\t\t\t(sources",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "ThisKeyword",
                                                                                                    "start_token": 400,
                                                                                                    "end_token": 400,
                                                                                                    "label": "\t",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "PropertyAccessExpression",
                                                                                                    "start_token": 401,
                                                                                                    "end_token": 404,
                                                                                                    "label": "\t\t\t(",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "Identifier",
                                                                                                            "start_token": 401,
                                                                                                            "end_token": 401,
                                                                                                            "label": "\t",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "PropertyAccessExpression",
                                                                                                            "start_token": 402,
                                                                                                            "end_token": 403,
                                                                                                            "label": "\t\t",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "Identifier",
                                                                                                                    "start_token": 402,
                                                                                                                    "end_token": 402,
                                                                                                                    "label": "\t",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "Identifier",
                                                                                                                    "start_token": 403,
                                                                                                                    "end_token": 403,
                                                                                                                    "label": "\t",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "Identifier",
                                                                                                            "start_token": 404,
                                                                                                            "end_token": 404,
                                                                                                            "label": "(",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "Identifier",
                                                                                                    "start_token": 405,
                                                                                                    "end_token": 405,
                                                                                                    "label": "sources",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "Block",
                                                                    "start_token": 409,
                                                                    "end_token": 413,
                                                                    "label": ".triggerSync(sources,",
                                                                    "children": [
                                                                        {
                                                                            "type": "ReturnStatement",
                                                                            "start_token": 410,
                                                                            "end_token": 412,
                                                                            "label": "triggerSync(sources",
                                                                            "children": [
                                                                                {
                                                                                    "type": "StringLiteral",
                                                                                    "start_token": 411,
                                                                                    "end_token": 411,
                                                                                    "label": "(",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "SemicolonClassElement",
                                                                                    "start_token": 412,
                                                                                    "end_token": 412,
                                                                                    "label": "sources",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "IfStatement",
                                                            "start_token": 414,
                                                            "end_token": 432,
                                                            "label": "true, false)));\n\t\t} else {\n\t\t\tthis.",
                                                            "children": [
                                                                {
                                                                    "type": "ParenthesizedExpression",
                                                                    "start_token": 415,
                                                                    "end_token": 428,
                                                                    "label": ", false)));\n\t\t} else {\n\t",
                                                                    "children": [
                                                                        {
                                                                            "type": "CallExpression",
                                                                            "start_token": 416,
                                                                            "end_token": 427,
                                                                            "label": "false)));\n\t\t} else {\n",
                                                                            "children": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "start_token": 416,
                                                                                    "end_token": 416,
                                                                                    "label": "false",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "ArgumentList",
                                                                                    "start_token": 417,
                                                                                    "end_token": 426,
                                                                                    "label": ")));\n\t\t} else {",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "start_token": 418,
                                                                                            "end_token": 418,
                                                                                            "label": ")",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "CommaToken",
                                                                                            "start_token": 419,
                                                                                            "end_token": 419,
                                                                                            "label": ")",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "PropertyAccessExpression",
                                                                                            "start_token": 420,
                                                                                            "end_token": 425,
                                                                                            "label": ";\n\t\t} else",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "ThisKeyword",
                                                                                                    "start_token": 420,
                                                                                                    "end_token": 420,
                                                                                                    "label": ";",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "PropertyAccessExpression",
                                                                                                    "start_token": 421,
                                                                                                    "end_token": 424,
                                                                                                    "label": "\n\t\t}",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "Identifier",
                                                                                                            "start_token": 421,
                                                                                                            "end_token": 421,
                                                                                                            "label": "\n",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "PropertyAccessExpression",
                                                                                                            "start_token": 422,
                                                                                                            "end_token": 423,
                                                                                                            "label": "\t\t",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "Identifier",
                                                                                                                    "start_token": 422,
                                                                                                                    "end_token": 422,
                                                                                                                    "label": "\t",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "Identifier",
                                                                                                                    "start_token": 423,
                                                                                                                    "end_token": 423,
                                                                                                                    "label": "\t",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "Identifier",
                                                                                                            "start_token": 424,
                                                                                                            "end_token": 424,
                                                                                                            "label": "}",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "Identifier",
                                                                                                    "start_token": 425,
                                                                                                    "end_token": 425,
                                                                                                    "label": "else",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "Block",
                                                                    "start_token": 429,
                                                                    "end_token": 432,
                                                                    "label": "\t\tthis.",
                                                                    "children": [
                                                                        {
                                                                            "type": "ReturnStatement",
                                                                            "start_token": 430,
                                                                            "end_token": 432,
                                                                            "label": "\tthis.",
                                                                            "children": [
                                                                                {
                                                                                    "type": "StringLiteral",
                                                                                    "start_token": 431,
                                                                                    "end_token": 431,
                                                                                    "label": "this",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "SemicolonClassElement",
                                                                                    "start_token": 432,
                                                                                    "end_token": 432,
                                                                                    "label": ".",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "ReturnStatement",
                                                            "start_token": 434,
                                                            "end_token": 436,
                                                            "label": "(event(",
                                                            "children": [
                                                                {
                                                                    "type": "UndefinedKeyword",
                                                                    "start_token": 435,
                                                                    "end_token": 435,
                                                                    "label": "event",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "SemicolonClassElement",
                                                                    "start_token": 436,
                                                                    "end_token": 436,
                                                                    "label": "(",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}