{
    "type": "module",
    "start_token": 0,
    "end_token": 512,
    "label": "import {QueryList, ViewChild, ViewChildren, Component} from '@angular/core';\nimport {CdkMenu} from './menu';\nimport {CdkMenuBar} from './menu-bar';\nimport {ComponentFixture, TestBed, waitForAsync} from '@angular/core/testing';\nimport {CdkMenuTrigger} from './menu-trigger';\nimport {MenuStack} from './menu-stack';\nimport {CdkMenuModule} from './menu-module';\ndescribe('MenuStack', () => {\n  let fixture: ComponentFixture<MultiMenuWithSubmenu>;\n  let menuStack: MenuStack;\n  let triggers: CdkMenuTrigger[];\n  let menus: CdkMenu[];\n  function getElementsForTesting() {\n    fixture.detectChanges();\n    triggers = fixture.componentInstance.triggers.toArray();\n    menus = fixture.componentInstance.menus.toArray();\n    menuStack = fixture.componentInstance.menuBar.menuStack;\n  }\n  beforeEach(waitForAsync(() => {\n    TestBed.configureTestingModule({\n      imports: [CdkMenuModule, MultiMenuWithSubmenu],\n    });\n  }));\n  beforeEach(() => {\n    fixture = TestBed.createComponent(MultiMenuWithSubmenu);\n    fixture.detectChanges();\n    getElementsForTesting();\n  });\n  function openAllMenus() {\n    triggers[0].open();\n    getElementsForTesting();\n    triggers[1].open();\n    getElementsForTesting();\n    triggers[2].open();\n    getElementsForTesting();\n  }\n  it(\n    'should fill the menu stack with the latest menu at the end of the stack and oldest at' +\n      ' the start of the stack',\n    () => {\n      openAllMenus();\n      expect(menus.length).toBe(3);\n      const spy = jasmine.createSpy('menu stack closed spy');\n      menuStack.closed.subscribe(spy);\n      menuStack.closeAll();\n      expect(spy).toHaveBeenCalledTimes(3);\n      const callArgs = spy.calls.all().map((v: jasmine.CallInfo<jasmine.Func>) => v.args[0].item);\n      expect(callArgs).toEqual(menus.reverse());\n      expect(menuStack.isEmpty()).toBeTrue();\n    },\n  );\n  it('should close triggering menu and all menus below it', () => {\n    openAllMenus();\n    expect(menus.length).toBe(3);\n    triggers[1].toggle();\n    getElementsForTesting();\n    expect(menus.length).toBe(1);\n    expect(menuStack.length()).withContext('menu stack should only have the single menu').toBe(1);\n    expect(menuStack.peek()).toEqual(menus",
    "children": [
        {
            "type": "ImportDeclaration",
            "start_token": 0,
            "end_token": 12,
            "label": "import {QueryList, ViewChild, ViewChildren, Component} from '@angular/core';",
            "children": [
                {
                    "type": "ImportClause",
                    "start_token": 1,
                    "end_token": 9,
                    "label": "{QueryList, ViewChild, ViewChildren, Component}",
                    "children": [
                        {
                            "type": "Identifier",
                            "start_token": 2,
                            "end_token": 2,
                            "label": "QueryList",
                            "children": []
                        },
                        {
                            "type": "Identifier",
                            "start_token": 4,
                            "end_token": 4,
                            "label": "ViewChild",
                            "children": []
                        },
                        {
                            "type": "Identifier",
                            "start_token": 6,
                            "end_token": 6,
                            "label": "ViewChildren",
                            "children": []
                        },
                        {
                            "type": "Identifier",
                            "start_token": 8,
                            "end_token": 8,
                            "label": "Component",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "StringLiteral",
                    "start_token": 11,
                    "end_token": 11,
                    "label": "'@angular/core'",
                    "children": []
                }
            ]
        },
        {
            "type": "ImportDeclaration",
            "start_token": 13,
            "end_token": 19,
            "label": "\nimport {CdkMenu} from './menu'",
            "children": [
                {
                    "type": "ImportClause",
                    "start_token": 14,
                    "end_token": 16,
                    "label": "import {CdkMenu",
                    "children": [
                        {
                            "type": "Identifier",
                            "start_token": 15,
                            "end_token": 15,
                            "label": "{",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "StringLiteral",
                    "start_token": 18,
                    "end_token": 18,
                    "label": "from",
                    "children": []
                }
            ]
        },
        {
            "type": "ImportDeclaration",
            "start_token": 20,
            "end_token": 26,
            "label": ";\nimport {CdkMenuBar} from",
            "children": [
                {
                    "type": "ImportClause",
                    "start_token": 21,
                    "end_token": 23,
                    "label": "\nimport {",
                    "children": [
                        {
                            "type": "Identifier",
                            "start_token": 22,
                            "end_token": 22,
                            "label": "import",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "StringLiteral",
                    "start_token": 25,
                    "end_token": 25,
                    "label": "}",
                    "children": []
                }
            ]
        },
        {
            "type": "ImportDeclaration",
            "start_token": 27,
            "end_token": 37,
            "label": "'./menu-bar';\nimport {ComponentFixture, TestBed, waitForAsync}",
            "children": [
                {
                    "type": "ImportClause",
                    "start_token": 28,
                    "end_token": 34,
                    "label": ";\nimport {ComponentFixture, TestBed",
                    "children": [
                        {
                            "type": "Identifier",
                            "start_token": 29,
                            "end_token": 29,
                            "label": "\n",
                            "children": []
                        },
                        {
                            "type": "Identifier",
                            "start_token": 31,
                            "end_token": 31,
                            "label": "{",
                            "children": []
                        },
                        {
                            "type": "Identifier",
                            "start_token": 33,
                            "end_token": 33,
                            "label": ",",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "StringLiteral",
                    "start_token": 36,
                    "end_token": 36,
                    "label": "waitForAsync",
                    "children": []
                }
            ]
        },
        {
            "type": "ImportDeclaration",
            "start_token": 38,
            "end_token": 44,
            "label": "from '@angular/core/testing';\nimport {CdkMenuTrigger",
            "children": [
                {
                    "type": "ImportClause",
                    "start_token": 39,
                    "end_token": 41,
                    "label": "'@angular/core/testing';\n",
                    "children": [
                        {
                            "type": "Identifier",
                            "start_token": 40,
                            "end_token": 40,
                            "label": ";",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "StringLiteral",
                    "start_token": 43,
                    "end_token": 43,
                    "label": "{",
                    "children": []
                }
            ]
        },
        {
            "type": "ImportDeclaration",
            "start_token": 45,
            "end_token": 51,
            "label": "} from './menu-trigger';\nimport {",
            "children": [
                {
                    "type": "ImportClause",
                    "start_token": 46,
                    "end_token": 48,
                    "label": "from './menu-trigger';",
                    "children": [
                        {
                            "type": "Identifier",
                            "start_token": 47,
                            "end_token": 47,
                            "label": "'./menu-trigger'",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "StringLiteral",
                    "start_token": 50,
                    "end_token": 50,
                    "label": "import",
                    "children": []
                }
            ]
        },
        {
            "type": "ImportDeclaration",
            "start_token": 52,
            "end_token": 58,
            "label": "MenuStack} from './menu-stack';\nimport",
            "children": [
                {
                    "type": "ImportClause",
                    "start_token": 53,
                    "end_token": 55,
                    "label": "} from './menu-stack'",
                    "children": [
                        {
                            "type": "Identifier",
                            "start_token": 54,
                            "end_token": 54,
                            "label": "from",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "StringLiteral",
                    "start_token": 57,
                    "end_token": 57,
                    "label": "\n",
                    "children": []
                }
            ]
        },
        {
            "type": "Block",
            "start_token": 59,
            "end_token": 461,
            "label": "{CdkMenuModule} from './menu-module';\ndescribe('MenuStack', () => {\n  let fixture: ComponentFixture<MultiMenuWithSubmenu>;\n  let menuStack: MenuStack;\n  let triggers: CdkMenuTrigger[];\n  let menus: CdkMenu[];\n  function getElementsForTesting() {\n    fixture.detectChanges();\n    triggers = fixture.componentInstance.triggers.toArray();\n    menus = fixture.componentInstance.menus.toArray();\n    menuStack = fixture.componentInstance.menuBar.menuStack;\n  }\n  beforeEach(waitForAsync(() => {\n    TestBed.configureTestingModule({\n      imports: [CdkMenuModule, MultiMenuWithSubmenu],\n    });\n  }));\n  beforeEach(() => {\n    fixture = TestBed.createComponent(MultiMenuWithSubmenu);\n    fixture.detectChanges();\n    getElementsForTesting();\n  });\n  function openAllMenus() {\n    triggers[0].open();\n    getElementsForTesting();\n    triggers[1].open();\n    getElementsForTesting();\n    triggers[2].open();\n    getElementsForTesting();\n  }\n  it(\n    'should fill the menu stack with the latest menu at the end of the stack and oldest at' +\n      ' the start of the stack',\n    () => {\n      openAllMenus();\n      expect(menus.length).toBe(3);\n      const spy = jasmine.createSpy('menu stack closed spy');\n      menuStack.closed.subscribe(spy);\n      menuStack.closeAll();\n      expect(spy).toHaveBeenCalledTimes(3);\n      const callArgs = spy.calls.all().map((v: jasmine.CallInfo<jasmine.Func>) => v.args[0].item);\n      expect(callArgs).toEqual(menus.reverse());\n      expect(menuStack.isEmpty()).toBeTrue();\n    },\n  );\n  it('should close triggering menu and all menus below it', () => {\n    openAllMenus();\n    expect(menus.length).toBe(3);\n    triggers[1].toggle();",
            "children": [
                {
                    "type": "ArrowFunction",
                    "start_token": 63,
                    "end_token": 458,
                    "label": "'./menu-module';\ndescribe('MenuStack', () => {\n  let fixture: ComponentFixture<MultiMenuWithSubmenu>;\n  let menuStack: MenuStack;\n  let triggers: CdkMenuTrigger[];\n  let menus: CdkMenu[];\n  function getElementsForTesting() {\n    fixture.detectChanges();\n    triggers = fixture.componentInstance.triggers.toArray();\n    menus = fixture.componentInstance.menus.toArray();\n    menuStack = fixture.componentInstance.menuBar.menuStack;\n  }\n  beforeEach(waitForAsync(() => {\n    TestBed.configureTestingModule({\n      imports: [CdkMenuModule, MultiMenuWithSubmenu],\n    });\n  }));\n  beforeEach(() => {\n    fixture = TestBed.createComponent(MultiMenuWithSubmenu);\n    fixture.detectChanges();\n    getElementsForTesting();\n  });\n  function openAllMenus() {\n    triggers[0].open();\n    getElementsForTesting();\n    triggers[1].open();\n    getElementsForTesting();\n    triggers[2].open();\n    getElementsForTesting();\n  }\n  it(\n    'should fill the menu stack with the latest menu at the end of the stack and oldest at' +\n      ' the start of the stack',\n    () => {\n      openAllMenus();\n      expect(menus.length).toBe(3);\n      const spy = jasmine.createSpy('menu stack closed spy');\n      menuStack.closed.subscribe(spy);\n      menuStack.closeAll();\n      expect(spy).toHaveBeenCalledTimes(3);\n      const callArgs = spy.calls.all().map((v: jasmine.CallInfo<jasmine.Func>) => v.args[0].item);\n      expect(callArgs).toEqual(menus.reverse());\n      expect(menuStack.isEmpty()).toBeTrue();\n    },\n  );\n  it('should close triggering menu and all menus below it', () => {\n    openAllMenus();\n    expect(menus.length).toBe(3);\n    triggers[1].toggle",
                    "children": [
                        {
                            "type": "Block",
                            "start_token": 66,
                            "end_token": 457,
                            "label": "describe('MenuStack', () => {\n  let fixture: ComponentFixture<MultiMenuWithSubmenu>;\n  let menuStack: MenuStack;\n  let triggers: CdkMenuTrigger[];\n  let menus: CdkMenu[];\n  function getElementsForTesting() {\n    fixture.detectChanges();\n    triggers = fixture.componentInstance.triggers.toArray();\n    menus = fixture.componentInstance.menus.toArray();\n    menuStack = fixture.componentInstance.menuBar.menuStack;\n  }\n  beforeEach(waitForAsync(() => {\n    TestBed.configureTestingModule({\n      imports: [CdkMenuModule, MultiMenuWithSubmenu],\n    });\n  }));\n  beforeEach(() => {\n    fixture = TestBed.createComponent(MultiMenuWithSubmenu);\n    fixture.detectChanges();\n    getElementsForTesting();\n  });\n  function openAllMenus() {\n    triggers[0].open();\n    getElementsForTesting();\n    triggers[1].open();\n    getElementsForTesting();\n    triggers[2].open();\n    getElementsForTesting();\n  }\n  it(\n    'should fill the menu stack with the latest menu at the end of the stack and oldest at' +\n      ' the start of the stack',\n    () => {\n      openAllMenus();\n      expect(menus.length).toBe(3);\n      const spy = jasmine.createSpy('menu stack closed spy');\n      menuStack.closed.subscribe(spy);\n      menuStack.closeAll();\n      expect(spy).toHaveBeenCalledTimes(3);\n      const callArgs = spy.calls.all().map((v: jasmine.CallInfo<jasmine.Func>) => v.args[0].item);\n      expect(callArgs).toEqual(menus.reverse());\n      expect(menuStack.isEmpty()).toBeTrue();\n    },\n  );\n  it('should close triggering menu and all menus below it', () => {\n    openAllMenus();\n    expect(menus.length).toBe(3);\n    triggers[1].",
                            "children": [
                                {
                                    "type": "VariableDeclarationList",
                                    "start_token": 67,
                                    "end_token": 93,
                                    "label": "('MenuStack', () => {\n  let fixture: ComponentFixture<MultiMenuWithSubmenu>;\n  let menuStack: MenuStack;\n  let triggers:",
                                    "children": [
                                        {
                                            "type": "VariableDeclaration",
                                            "start_token": 68,
                                            "end_token": 74,
                                            "label": "'MenuStack', () => {",
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "start_token": 68,
                                                    "end_token": 68,
                                                    "label": "'MenuStack'",
                                                    "children": []
                                                },
                                                {
                                                    "type": "TypeReference",
                                                    "start_token": 70,
                                                    "end_token": 73,
                                                    "label": "() =>",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "start_token": 75,
                                            "end_token": 79,
                                            "label": "\n  let fixture: ComponentFixture",
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "start_token": 76,
                                                    "end_token": 76,
                                                    "label": "let",
                                                    "children": []
                                                },
                                                {
                                                    "type": "TypeReference",
                                                    "start_token": 78,
                                                    "end_token": 78,
                                                    "label": ":",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "start_token": 80,
                                            "end_token": 86,
                                            "label": "<MultiMenuWithSubmenu>;\n  let menuStack",
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "start_token": 81,
                                                    "end_token": 81,
                                                    "label": "MultiMenuWithSubmenu",
                                                    "children": []
                                                },
                                                {
                                                    "type": "ArrayType",
                                                    "start_token": 83,
                                                    "end_token": 85,
                                                    "label": ";\n  let",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "start_token": 87,
                                            "end_token": 93,
                                            "label": ": MenuStack;\n  let triggers:",
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "start_token": 88,
                                                    "end_token": 88,
                                                    "label": "MenuStack",
                                                    "children": []
                                                },
                                                {
                                                    "type": "ArrayType",
                                                    "start_token": 90,
                                                    "end_token": 92,
                                                    "label": "\n  let triggers",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "ExpressionStatement",
                                    "start_token": 140,
                                    "end_token": 166,
                                    "label": ".toArray();\n    menuStack = fixture.componentInstance.menuBar.menuStack;\n  }\n  beforeEach(waitForAsync(() =>",
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "start_token": 140,
                                            "end_token": 166,
                                            "label": ".toArray();\n    menuStack = fixture.componentInstance.menuBar.menuStack;\n  }\n  beforeEach(waitForAsync(() =>",
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "start_token": 140,
                                                    "end_token": 140,
                                                    "label": ".",
                                                    "children": []
                                                },
                                                {
                                                    "type": "CallExpression",
                                                    "start_token": 143,
                                                    "end_token": 165,
                                                    "label": ");\n    menuStack = fixture.componentInstance.menuBar.menuStack;\n  }\n  beforeEach(waitForAsync(() =",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "VariableDeclaration",
                                    "start_token": 67,
                                    "end_token": 93,
                                    "label": "('MenuStack', () => {\n  let fixture: ComponentFixture<MultiMenuWithSubmenu>;\n  let menuStack: MenuStack;\n  let triggers:",
                                    "children": [
                                        {
                                            "type": "VariableDeclaration",
                                            "start_token": 68,
                                            "end_token": 74,
                                            "label": "'MenuStack', () => {",
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "start_token": 68,
                                                    "end_token": 68,
                                                    "label": "'MenuStack'",
                                                    "children": []
                                                },
                                                {
                                                    "type": "TypeReference",
                                                    "start_token": 70,
                                                    "end_token": 73,
                                                    "label": "() =>",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "start_token": 75,
                                            "end_token": 79,
                                            "label": "\n  let fixture: ComponentFixture",
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "start_token": 76,
                                                    "end_token": 76,
                                                    "label": "let",
                                                    "children": []
                                                },
                                                {
                                                    "type": "TypeReference",
                                                    "start_token": 78,
                                                    "end_token": 78,
                                                    "label": ":",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "start_token": 80,
                                            "end_token": 86,
                                            "label": "<MultiMenuWithSubmenu>;\n  let menuStack",
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "start_token": 81,
                                                    "end_token": 81,
                                                    "label": "MultiMenuWithSubmenu",
                                                    "children": []
                                                },
                                                {
                                                    "type": "ArrayType",
                                                    "start_token": 83,
                                                    "end_token": 85,
                                                    "label": ";\n  let",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "start_token": 87,
                                            "end_token": 93,
                                            "label": ": MenuStack;\n  let triggers:",
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "start_token": 88,
                                                    "end_token": 88,
                                                    "label": "MenuStack",
                                                    "children": []
                                                },
                                                {
                                                    "type": "ArrayType",
                                                    "start_token": 90,
                                                    "end_token": 92,
                                                    "label": "\n  let triggers",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "ItStatement",
                                    "start_token": 140,
                                    "end_token": 166,
                                    "label": ".toArray();\n    menuStack = fixture.componentInstance.menuBar.menuStack;\n  }\n  beforeEach(waitForAsync(() =>",
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "start_token": 140,
                                            "end_token": 166,
                                            "label": ".toArray();\n    menuStack = fixture.componentInstance.menuBar.menuStack;\n  }\n  beforeEach(waitForAsync(() =>",
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "start_token": 140,
                                                    "end_token": 140,
                                                    "label": ".",
                                                    "children": []
                                                },
                                                {
                                                    "type": "CallExpression",
                                                    "start_token": 143,
                                                    "end_token": 165,
                                                    "label": ");\n    menuStack = fixture.componentInstance.menuBar.menuStack;\n  }\n  beforeEach(waitForAsync(() =",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "ItStatement",
                                    "start_token": 167,
                                    "end_token": 195,
                                    "label": "{\n    TestBed.configureTestingModule({\n      imports: [CdkMenuModule, MultiMenuWithSubmenu],\n    });\n  }));\n  beforeEach((",
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "start_token": 170,
                                            "end_token": 194,
                                            "label": ".configureTestingModule({\n      imports: [CdkMenuModule, MultiMenuWithSubmenu],\n    });\n  }));\n  beforeEach(",
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "start_token": 174,
                                                    "end_token": 174,
                                                    "label": "\n",
                                                    "children": []
                                                },
                                                {
                                                    "type": "CallExpression",
                                                    "start_token": 179,
                                                    "end_token": 193,
                                                    "label": ", MultiMenuWithSubmenu],\n    });\n  }));\n  beforeEach",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "ItStatement",
                                    "start_token": 241,
                                    "end_token": 368,
                                    "label": ";\n    getElementsForTesting();\n    triggers[1].open();\n    getElementsForTesting();\n    triggers[2].open();\n    getElementsForTesting();\n  }\n  it(\n    'should fill the menu stack with the latest menu at the end of the stack and oldest at' +\n      ' the start of the stack',\n    () => {\n      openAllMenus();\n      expect(menus.length).toBe(3);\n      const spy = jasmine.createSpy('menu stack closed spy');\n      menuStack.closed.subscribe(spy);\n      menuStack.closeAll();\n      expect(spy).toHaveBeenCalledTimes(3);\n      const callArgs = spy.calls.all().map((v: jasmine",
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "start_token": 248,
                                            "end_token": 367,
                                            "label": "triggers[1].open();\n    getElementsForTesting();\n    triggers[2].open();\n    getElementsForTesting();\n  }\n  it(\n    'should fill the menu stack with the latest menu at the end of the stack and oldest at' +\n      ' the start of the stack',\n    () => {\n      openAllMenus();\n      expect(menus.length).toBe(3);\n      const spy = jasmine.createSpy('menu stack closed spy');\n      menuStack.closed.subscribe(spy);\n      menuStack.closeAll();\n      expect(spy).toHaveBeenCalledTimes(3);\n      const callArgs = spy.calls.all().map((v:",
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "start_token": 248,
                                                    "end_token": 248,
                                                    "label": "triggers",
                                                    "children": []
                                                },
                                                {
                                                    "type": "CallExpression",
                                                    "start_token": 251,
                                                    "end_token": 366,
                                                    "label": "].open();\n    getElementsForTesting();\n    triggers[2].open();\n    getElementsForTesting();\n  }\n  it(\n    'should fill the menu stack with the latest menu at the end of the stack and oldest at' +\n      ' the start of the stack',\n    () => {\n      openAllMenus();\n      expect(menus.length).toBe(3);\n      const spy = jasmine.createSpy('menu stack closed spy');\n      menuStack.closed.subscribe(spy);\n      menuStack.closeAll();\n      expect(spy).toHaveBeenCalledTimes(3);\n      const callArgs = spy.calls.all().map((v",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "ItStatement",
                                    "start_token": 369,
                                    "end_token": 456,
                                    "label": ".CallInfo<jasmine.Func>) => v.args[0].item);\n      expect(callArgs).toEqual(menus.reverse());\n      expect(menuStack.isEmpty()).toBeTrue();\n    },\n  );\n  it('should close triggering menu and all menus below it', () => {\n    openAllMenus();\n    expect(menus.length).toBe(3);\n    triggers[1]",
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "start_token": 374,
                                            "end_token": 455,
                                            "label": "Func>) => v.args[0].item);\n      expect(callArgs).toEqual(menus.reverse());\n      expect(menuStack.isEmpty()).toBeTrue();\n    },\n  );\n  it('should close triggering menu and all menus below it', () => {\n    openAllMenus();\n    expect(menus.length).toBe(3);\n    triggers[1",
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "start_token": 374,
                                                    "end_token": 374,
                                                    "label": "Func",
                                                    "children": []
                                                },
                                                {
                                                    "type": "CallExpression",
                                                    "start_token": 377,
                                                    "end_token": 454,
                                                    "label": "=> v.args[0].item);\n      expect(callArgs).toEqual(menus.reverse());\n      expect(menuStack.isEmpty()).toBeTrue();\n    },\n  );\n  it('should close triggering menu and all menus below it', () => {\n    openAllMenus();\n    expect(menus.length).toBe(3);\n    triggers[",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_placeholder",
            "name": "getElementsForTesting",
            "start_line": 13,
            "end_line": 18,
            "start_token": 94,
            "end_token": 139,
            "label": "CdkMenuTrigger[];\n  let menus: CdkMenu[];\n  function getElementsForTesting() {\n    fixture.detectChanges();\n    triggers = fixture.componentInstance.triggers.toArray();\n    menus = fixture.componentInstance.menus",
            "children": [
                {
                    "type": "SourceFile",
                    "start_token": 94,
                    "end_token": 139,
                    "label": "CdkMenuTrigger[];\n  let menus: CdkMenu[];\n  function getElementsForTesting() {\n    fixture.detectChanges();\n    triggers = fixture.componentInstance.triggers.toArray();\n    menus = fixture.componentInstance.menus",
                    "children": [
                        {
                            "type": "FunctionDeclaration",
                            "start_token": 94,
                            "end_token": 139,
                            "label": "CdkMenuTrigger[];\n  let menus: CdkMenu[];\n  function getElementsForTesting() {\n    fixture.detectChanges();\n    triggers = fixture.componentInstance.triggers.toArray();\n    menus = fixture.componentInstance.menus",
                            "children": [
                                {
                                    "type": "Identifier",
                                    "start_token": 95,
                                    "end_token": 95,
                                    "label": "[",
                                    "children": []
                                },
                                {
                                    "type": "Block",
                                    "start_token": 98,
                                    "end_token": 139,
                                    "label": "\n  let menus: CdkMenu[];\n  function getElementsForTesting() {\n    fixture.detectChanges();\n    triggers = fixture.componentInstance.triggers.toArray();\n    menus = fixture.componentInstance.menus",
                                    "children": [
                                        {
                                            "type": "ExpressionStatement",
                                            "start_token": 99,
                                            "end_token": 104,
                                            "label": "let menus: CdkMenu[]",
                                            "children": [
                                                {
                                                    "type": "CallExpression",
                                                    "start_token": 99,
                                                    "end_token": 104,
                                                    "label": "let menus: CdkMenu[]",
                                                    "children": [
                                                        {
                                                            "type": "PropertyAccessExpression",
                                                            "start_token": 99,
                                                            "end_token": 101,
                                                            "label": "let menus:",
                                                            "children": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "start_token": 99,
                                                                    "end_token": 99,
                                                                    "label": "let",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "start_token": 101,
                                                                    "end_token": 101,
                                                                    "label": ":",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "ParenthesizedExpression",
                                                            "start_token": 102,
                                                            "end_token": 103,
                                                            "label": "CdkMenu[",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "start_token": 105,
                                            "end_token": 116,
                                            "label": ";\n  function getElementsForTesting() {\n    fixture.detectChanges(",
                                            "children": [
                                                {
                                                    "type": "BinaryExpression",
                                                    "start_token": 105,
                                                    "end_token": 116,
                                                    "label": ";\n  function getElementsForTesting() {\n    fixture.detectChanges(",
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "start_token": 105,
                                                            "end_token": 105,
                                                            "label": ";",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "start_token": 106,
                                                            "end_token": 106,
                                                            "label": "\n",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "CallExpression",
                                                            "start_token": 107,
                                                            "end_token": 116,
                                                            "label": "function getElementsForTesting() {\n    fixture.detectChanges(",
                                                            "children": [
                                                                {
                                                                    "type": "PropertyAccessExpression",
                                                                    "start_token": 107,
                                                                    "end_token": 113,
                                                                    "label": "function getElementsForTesting() {\n    fixture",
                                                                    "children": [
                                                                        {
                                                                            "type": "PropertyAccessExpression",
                                                                            "start_token": 107,
                                                                            "end_token": 109,
                                                                            "label": "function getElementsForTesting(",
                                                                            "children": [
                                                                                {
                                                                                    "type": "PropertyAccessExpression",
                                                                                    "start_token": 107,
                                                                                    "end_token": 108,
                                                                                    "label": "function getElementsForTesting",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "start_token": 107,
                                                                                            "end_token": 107,
                                                                                            "label": "function",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "start_token": 108,
                                                                                            "end_token": 108,
                                                                                            "label": "getElementsForTesting",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "start_token": 109,
                                                                                    "end_token": 109,
                                                                                    "label": "(",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "Identifier",
                                                                            "start_token": 111,
                                                                            "end_token": 111,
                                                                            "label": "{",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "start_token": 113,
                                                                    "end_token": 113,
                                                                    "label": "fixture",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "ParenthesizedExpression",
                                                                    "start_token": 114,
                                                                    "end_token": 115,
                                                                    "label": ".detectChanges",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "start_token": 117,
                                            "end_token": 128,
                                            "label": ");\n    triggers = fixture.componentInstance.triggers.toArray",
                                            "children": [
                                                {
                                                    "type": "BinaryExpression",
                                                    "start_token": 117,
                                                    "end_token": 128,
                                                    "label": ");\n    triggers = fixture.componentInstance.triggers.toArray",
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "start_token": 117,
                                                            "end_token": 117,
                                                            "label": ")",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "start_token": 118,
                                                            "end_token": 118,
                                                            "label": ";",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "CallExpression",
                                                            "start_token": 119,
                                                            "end_token": 128,
                                                            "label": "\n    triggers = fixture.componentInstance.triggers.toArray",
                                                            "children": [
                                                                {
                                                                    "type": "PropertyAccessExpression",
                                                                    "start_token": 119,
                                                                    "end_token": 125,
                                                                    "label": "\n    triggers = fixture.componentInstance.",
                                                                    "children": [
                                                                        {
                                                                            "type": "PropertyAccessExpression",
                                                                            "start_token": 119,
                                                                            "end_token": 121,
                                                                            "label": "\n    triggers =",
                                                                            "children": [
                                                                                {
                                                                                    "type": "PropertyAccessExpression",
                                                                                    "start_token": 119,
                                                                                    "end_token": 120,
                                                                                    "label": "\n    triggers",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "start_token": 119,
                                                                                            "end_token": 119,
                                                                                            "label": "\n",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "start_token": 120,
                                                                                            "end_token": 120,
                                                                                            "label": "triggers",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "start_token": 121,
                                                                                    "end_token": 121,
                                                                                    "label": "=",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "Identifier",
                                                                            "start_token": 123,
                                                                            "end_token": 123,
                                                                            "label": ".",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "start_token": 125,
                                                                    "end_token": 125,
                                                                    "label": ".",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "ParenthesizedExpression",
                                                                    "start_token": 126,
                                                                    "end_token": 127,
                                                                    "label": "triggers.",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "start_token": 129,
                                            "end_token": 138,
                                            "label": "();\n    menus = fixture.componentInstance.",
                                            "children": [
                                                {
                                                    "type": "BinaryExpression",
                                                    "start_token": 129,
                                                    "end_token": 138,
                                                    "label": "();\n    menus = fixture.componentInstance.",
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "start_token": 129,
                                                            "end_token": 129,
                                                            "label": "(",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "start_token": 130,
                                                            "end_token": 130,
                                                            "label": ")",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "PropertyAccessExpression",
                                                            "start_token": 131,
                                                            "end_token": 137,
                                                            "label": ";\n    menus = fixture.componentInstance",
                                                            "children": [
                                                                {
                                                                    "type": "PropertyAccessExpression",
                                                                    "start_token": 131,
                                                                    "end_token": 135,
                                                                    "label": ";\n    menus = fixture",
                                                                    "children": [
                                                                        {
                                                                            "type": "PropertyAccessExpression",
                                                                            "start_token": 131,
                                                                            "end_token": 133,
                                                                            "label": ";\n    menus",
                                                                            "children": [
                                                                                {
                                                                                    "type": "PropertyAccessExpression",
                                                                                    "start_token": 131,
                                                                                    "end_token": 132,
                                                                                    "label": ";\n",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "start_token": 131,
                                                                                            "end_token": 131,
                                                                                            "label": ";",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "start_token": 132,
                                                                                            "end_token": 132,
                                                                                            "label": "\n",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "start_token": 133,
                                                                                    "end_token": 133,
                                                                                    "label": "menus",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "Identifier",
                                                                            "start_token": 135,
                                                                            "end_token": 135,
                                                                            "label": "fixture",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "start_token": 137,
                                                                    "end_token": 137,
                                                                    "label": "componentInstance",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_placeholder",
            "name": "openAllMenus",
            "start_line": 29,
            "end_line": 36,
            "start_token": 196,
            "end_token": 240,
            "label": ") => {\n    fixture = TestBed.createComponent(MultiMenuWithSubmenu);\n    fixture.detectChanges();\n    getElementsForTesting();\n  });\n  function openAllMenus() {\n    triggers[0].open()",
            "children": [
                {
                    "type": "FunctionDeclaration",
                    "start_token": 196,
                    "end_token": 240,
                    "label": ") => {\n    fixture = TestBed.createComponent(MultiMenuWithSubmenu);\n    fixture.detectChanges();\n    getElementsForTesting();\n  });\n  function openAllMenus() {\n    triggers[0].open()",
                    "children": [
                        {
                            "type": "Identifier",
                            "start_token": 197,
                            "end_token": 197,
                            "label": "=",
                            "children": []
                        },
                        {
                            "type": "Parameter",
                            "start_token": 198,
                            "end_token": 199,
                            "label": "> {",
                            "children": []
                        },
                        {
                            "type": "Block",
                            "start_token": 200,
                            "end_token": 240,
                            "label": "\n    fixture = TestBed.createComponent(MultiMenuWithSubmenu);\n    fixture.detectChanges();\n    getElementsForTesting();\n  });\n  function openAllMenus() {\n    triggers[0].open()",
                            "children": [
                                {
                                    "type": "ExpressionStatement",
                                    "start_token": 201,
                                    "end_token": 209,
                                    "label": "fixture = TestBed.createComponent(MultiMenuWithSubmenu);",
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "start_token": 201,
                                            "end_token": 208,
                                            "label": "fixture = TestBed.createComponent(MultiMenuWithSubmenu)",
                                            "children": [
                                                {
                                                    "type": "PropertyAccessExpression",
                                                    "start_token": 201,
                                                    "end_token": 206,
                                                    "label": "fixture = TestBed.createComponent(",
                                                    "children": [
                                                        {
                                                            "type": "ElementAccessExpression",
                                                            "start_token": 201,
                                                            "end_token": 204,
                                                            "label": "fixture = TestBed.",
                                                            "children": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "start_token": 201,
                                                                    "end_token": 201,
                                                                    "label": "fixture",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "ArrayLiteralExpression",
                                                                    "start_token": 202,
                                                                    "end_token": 204,
                                                                    "label": "= TestBed.",
                                                                    "children": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "start_token": 203,
                                                                            "end_token": 203,
                                                                            "label": "TestBed",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "start_token": 205,
                                                            "end_token": 206,
                                                            "label": "createComponent(",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "Parameter",
                                                    "start_token": 207,
                                                    "end_token": 208,
                                                    "label": "MultiMenuWithSubmenu)",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "SemicolonClassElement",
                                            "start_token": 209,
                                            "end_token": 209,
                                            "label": ";",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "ExpressionStatement",
                                    "start_token": 210,
                                    "end_token": 213,
                                    "label": "\n    fixture.detectChanges",
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "start_token": 210,
                                            "end_token": 212,
                                            "label": "\n    fixture.",
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "start_token": 210,
                                                    "end_token": 210,
                                                    "label": "\n",
                                                    "children": []
                                                },
                                                {
                                                    "type": "Parameter",
                                                    "start_token": 211,
                                                    "end_token": 212,
                                                    "label": "fixture.",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "SemicolonClassElement",
                                            "start_token": 213,
                                            "end_token": 213,
                                            "label": "detectChanges",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "ExpressionStatement",
                                    "start_token": 214,
                                    "end_token": 222,
                                    "label": "();\n    getElementsForTesting();\n",
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "start_token": 214,
                                            "end_token": 221,
                                            "label": "();\n    getElementsForTesting();",
                                            "children": [
                                                {
                                                    "type": "PropertyAccessExpression",
                                                    "start_token": 214,
                                                    "end_token": 219,
                                                    "label": "();\n    getElementsForTesting(",
                                                    "children": [
                                                        {
                                                            "type": "ElementAccessExpression",
                                                            "start_token": 214,
                                                            "end_token": 217,
                                                            "label": "();\n",
                                                            "children": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "start_token": 214,
                                                                    "end_token": 214,
                                                                    "label": "(",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "ArrayLiteralExpression",
                                                                    "start_token": 215,
                                                                    "end_token": 217,
                                                                    "label": ");\n",
                                                                    "children": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "start_token": 216,
                                                                            "end_token": 216,
                                                                            "label": ";",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "start_token": 218,
                                                            "end_token": 219,
                                                            "label": "getElementsForTesting(",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "Parameter",
                                                    "start_token": 220,
                                                    "end_token": 221,
                                                    "label": ");",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "SemicolonClassElement",
                                            "start_token": 222,
                                            "end_token": 222,
                                            "label": "\n",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "ExpressionStatement",
                                    "start_token": 223,
                                    "end_token": 226,
                                    "label": "});\n",
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "start_token": 223,
                                            "end_token": 225,
                                            "label": "});",
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "start_token": 223,
                                                    "end_token": 223,
                                                    "label": "}",
                                                    "children": []
                                                },
                                                {
                                                    "type": "Parameter",
                                                    "start_token": 224,
                                                    "end_token": 225,
                                                    "label": ");",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "SemicolonClassElement",
                                            "start_token": 226,
                                            "end_token": 226,
                                            "label": "\n",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "ExpressionStatement",
                                    "start_token": 227,
                                    "end_token": 235,
                                    "label": "function openAllMenus() {\n    triggers[0",
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "start_token": 227,
                                            "end_token": 234,
                                            "label": "function openAllMenus() {\n    triggers[",
                                            "children": [
                                                {
                                                    "type": "PropertyAccessExpression",
                                                    "start_token": 227,
                                                    "end_token": 232,
                                                    "label": "function openAllMenus() {\n",
                                                    "children": [
                                                        {
                                                            "type": "ElementAccessExpression",
                                                            "start_token": 227,
                                                            "end_token": 230,
                                                            "label": "function openAllMenus()",
                                                            "children": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "start_token": 227,
                                                                    "end_token": 227,
                                                                    "label": "function",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "ArrayLiteralExpression",
                                                                    "start_token": 228,
                                                                    "end_token": 230,
                                                                    "label": "openAllMenus()",
                                                                    "children": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "start_token": 229,
                                                                            "end_token": 229,
                                                                            "label": "(",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "start_token": 231,
                                                            "end_token": 232,
                                                            "label": "{\n",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "Parameter",
                                                    "start_token": 233,
                                                    "end_token": 234,
                                                    "label": "triggers[",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "SemicolonClassElement",
                                            "start_token": 235,
                                            "end_token": 235,
                                            "label": "0",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "ExpressionStatement",
                                    "start_token": 236,
                                    "end_token": 239,
                                    "label": "].open(",
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "start_token": 236,
                                            "end_token": 238,
                                            "label": "].open",
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "start_token": 236,
                                                    "end_token": 236,
                                                    "label": "]",
                                                    "children": []
                                                },
                                                {
                                                    "type": "Parameter",
                                                    "start_token": 237,
                                                    "end_token": 238,
                                                    "label": ".open",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "SemicolonClassElement",
                                            "start_token": 239,
                                            "end_token": 239,
                                            "label": "(",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "Component",
            "start_token": 460,
            "end_token": 478,
            "label": ");\n    getElementsForTesting();\n    expect(menus.length).toBe(1)",
            "children": [
                {
                    "type": "ObjectLiteralExpression",
                    "start_token": 462,
                    "end_token": 477,
                    "label": "\n    getElementsForTesting();\n    expect(menus.length).toBe(1",
                    "children": []
                }
            ]
        },
        {
            "type": "class_placeholder",
            "name": "MultiMenuWithSubmenu",
            "start_line": 88,
            "end_line": 92,
            "start_token": 479,
            "end_token": 512,
            "label": ";\n    expect(menuStack.length()).withContext('menu stack should only have the single menu').toBe(1);\n    expect(menuStack.peek()).toEqual(menus",
            "children": [
                {
                    "type": "ClassDeclaration",
                    "start_token": 479,
                    "end_token": 512,
                    "label": ";\n    expect(menuStack.length()).withContext('menu stack should only have the single menu').toBe(1);\n    expect(menuStack.peek()).toEqual(menus",
                    "children": [
                        {
                            "type": "Identifier",
                            "start_token": 480,
                            "end_token": 480,
                            "label": "\n",
                            "children": []
                        },
                        {
                            "type": "Block",
                            "start_token": 481,
                            "end_token": 512,
                            "label": "expect(menuStack.length()).withContext('menu stack should only have the single menu').toBe(1);\n    expect(menuStack.peek()).toEqual(menus",
                            "children": [
                                {
                                    "type": "PropertyDeclaration",
                                    "start_token": 482,
                                    "end_token": 489,
                                    "label": "(menuStack.length()).",
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "start_token": 482,
                                            "end_token": 482,
                                            "label": "(",
                                            "children": []
                                        },
                                        {
                                            "type": "CallExpression",
                                            "start_token": 483,
                                            "end_token": 485,
                                            "label": "menuStack.length",
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "start_token": 484,
                                                    "end_token": 484,
                                                    "label": ".",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "Identifier",
                                            "start_token": 486,
                                            "end_token": 486,
                                            "label": "(",
                                            "children": []
                                        },
                                        {
                                            "type": "ColonToken",
                                            "start_token": 487,
                                            "end_token": 487,
                                            "label": ")",
                                            "children": []
                                        },
                                        {
                                            "type": "Identifier",
                                            "start_token": 488,
                                            "end_token": 488,
                                            "label": ")",
                                            "children": []
                                        },
                                        {
                                            "type": "SemicolonClassElement",
                                            "start_token": 489,
                                            "end_token": 489,
                                            "label": ".",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "PropertyDeclaration",
                                    "start_token": 490,
                                    "end_token": 500,
                                    "label": "withContext('menu stack should only have the single menu').toBe(1);\n",
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "start_token": 490,
                                            "end_token": 490,
                                            "label": "withContext",
                                            "children": []
                                        },
                                        {
                                            "type": "CallExpression",
                                            "start_token": 491,
                                            "end_token": 493,
                                            "label": "('menu stack should only have the single menu')",
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "start_token": 492,
                                                    "end_token": 492,
                                                    "label": "'menu stack should only have the single menu'",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "Identifier",
                                            "start_token": 494,
                                            "end_token": 494,
                                            "label": ".",
                                            "children": []
                                        },
                                        {
                                            "type": "ColonToken",
                                            "start_token": 495,
                                            "end_token": 495,
                                            "label": "toBe",
                                            "children": []
                                        },
                                        {
                                            "type": "TypeReference",
                                            "start_token": 496,
                                            "end_token": 499,
                                            "label": "(1);",
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "start_token": 496,
                                                    "end_token": 496,
                                                    "label": "(",
                                                    "children": []
                                                },
                                                {
                                                    "type": "LessThanToken",
                                                    "start_token": 497,
                                                    "end_token": 497,
                                                    "label": "1",
                                                    "children": []
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "start_token": 498,
                                                    "end_token": 498,
                                                    "label": ")",
                                                    "children": []
                                                },
                                                {
                                                    "type": "GreaterThanToken",
                                                    "start_token": 499,
                                                    "end_token": 499,
                                                    "label": ";",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "SemicolonClassElement",
                                            "start_token": 500,
                                            "end_token": 500,
                                            "label": "\n",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "PropertyDeclaration",
                                    "start_token": 501,
                                    "end_token": 511,
                                    "label": "expect(menuStack.peek()).toEqual(",
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "start_token": 501,
                                            "end_token": 501,
                                            "label": "expect",
                                            "children": []
                                        },
                                        {
                                            "type": "CallExpression",
                                            "start_token": 502,
                                            "end_token": 504,
                                            "label": "(menuStack.",
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "start_token": 503,
                                                    "end_token": 503,
                                                    "label": "menuStack",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "Identifier",
                                            "start_token": 505,
                                            "end_token": 505,
                                            "label": "peek",
                                            "children": []
                                        },
                                        {
                                            "type": "ColonToken",
                                            "start_token": 506,
                                            "end_token": 506,
                                            "label": "(",
                                            "children": []
                                        },
                                        {
                                            "type": "TypeReference",
                                            "start_token": 507,
                                            "end_token": 510,
                                            "label": ")).toEqual",
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "start_token": 507,
                                                    "end_token": 507,
                                                    "label": ")",
                                                    "children": []
                                                },
                                                {
                                                    "type": "LessThanToken",
                                                    "start_token": 508,
                                                    "end_token": 508,
                                                    "label": ")",
                                                    "children": []
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "start_token": 509,
                                                    "end_token": 509,
                                                    "label": ".",
                                                    "children": []
                                                },
                                                {
                                                    "type": "GreaterThanToken",
                                                    "start_token": 510,
                                                    "end_token": 510,
                                                    "label": "toEqual",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "SemicolonClassElement",
                                            "start_token": 511,
                                            "end_token": 511,
                                            "label": "(",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}