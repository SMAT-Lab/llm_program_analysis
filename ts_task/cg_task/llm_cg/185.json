{
    "NormalMaterial.needAlphaBlending()": [],
    "NormalMaterial.needAlphaBlendingForMesh(mesh: AbstractMesh)": [
        "NormalMaterial.needAlphaBlending()"
    ],
    "NormalMaterial.needAlphaTesting()": [],
    "NormalMaterial.getAlphaTestTexture()": [],
    "NormalMaterial.isReadyForSubMesh(mesh: AbstractMesh, subMesh: SubMesh, useInstances: boolean)": [
        "NormalMaterial.getScene()",
        "%AMX$NormalMaterialDefines()",
        "NormalMaterial._isReadyForSubMesh(subMesh: SubMesh)",
        "NormalMaterial.getScene()",
        "PrepareDefinesForMisc()",
        "PrepareDefinesForLights()",
        "PrepareDefinesForFrameBoundValues()",
        "PrepareDefinesForAttributes()",
        "%AMX$EffectFallbacks()",
        "HandleFallbacksForShadows()",
        "PrepareAttributesForBones()",
        "PrepareAttributesForInstances()",
        "addClipPlaneUniforms()",
        "PrepareUniformsAndSamplersList()",
        "NormalMaterial.onCompiled()",
        "NormalMaterial.onError()",
        "Scene.getEngine()",
        "Scene.resetCachedMaterial()",
        "SubMesh.setEffect(effect: Effect, defines: any, materialContext: any)",
        "Engine.createEffect(shaderName: string, options: IEffectCreationOptions, engine: Engine)"
    ],
    "NormalMaterial.bindForSubMesh(world: Matrix, mesh: Mesh, subMesh: SubMesh)": [
        "NormalMaterial.getScene()",
        "NormalMaterial.bindOnlyWorldMatrix(world: Matrix)",
        "BindBonesParameters()",
        "NormalMaterial._mustRebind(scene: Scene, effect: Effect, subMesh: SubMesh)",
        "Effect.setTexture(name: string, texture: BaseTexture)",
        "Effect.setFloat2(name: string, x: number, y: number)",
        "Effect.setMatrix(name: string, matrix: Matrix)",
        "bindClipPlane(effect: Effect, material: Material, scene: Scene)",
        "Effect.setFloat(name: string, x: number)",
        "BindLogDepth()",
        "Scene.bindEyePosition(effect: Effect)",
        "Effect.setColor4(name: string, color: Color3, alpha: number)",
        "BindLights()",
        "Effect.setMatrix(name: string, matrix: Matrix)",
        "BindFogParameters()",
        "Material._afterBind(mesh: Mesh, effect: Effect, subMesh: SubMesh)"
    ],
    "NormalMaterial.getAnimatables()": [],
    "NormalMaterial.getActiveTextures()": [
        "PushMaterial.getActiveTextures()"
    ],
    "NormalMaterial.hasTexture(texture: BaseTexture)": [
        "PushMaterial.hasTexture(texture: BaseTexture)"
    ],
    "NormalMaterial.dispose(forceDisposeEffect: boolean)": [
        "PushMaterial.dispose(forceDisposeEffect: boolean)",
        "BaseTexture.dispose()"
    ],
    "NormalMaterial.clone(name: string)": [
        "SerializationHelper.Clone()",
        "%AMX$NormalMaterial(name: string, scene?: Scene)"
    ],
    "NormalMaterial.serialize()": [
        "PushMaterial.serialize()"
    ],
    "NormalMaterial.getClassName()": [],
    "NormalMaterial.Parse(source: any, scene: Scene, rootUrl: string)": [
        "SerializationHelper.Parse()",
        "%AMX$NormalMaterial(name: string, scene?: Scene)"
    ]
}