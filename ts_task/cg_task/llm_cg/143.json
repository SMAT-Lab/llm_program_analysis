{
    "GeoJSONRegion.GeoJSONRegion(string,(GeoJSONPolygonGeometry|GeoJSONLineStringGeometry)[],GeoJSON['features'][0]['properties']['cp'])": [
        "Region.%AM0$Region(string)"
    ],
    "GeoJSONRegion.getCenter()": [
        "GeoJSONRegion.%AM1$getCenter()"
    ],
    "GeoJSONRegion.calcCenter()": [
        "GeoJSONRegion.getBoundingRect()",
        "GeoJSONRegion.%AM2$calcCenter()"
    ],
    "GeoJSONRegion.getBoundingRect(GeoProjection?)": [
        "updateBBoxFromPoints(ArrayLike<number>[],vec2.VectorArray,vec2.VectorArray,GeoProjection)",
        "BoundingRect.%AM3$BoundingRect(number,number,number,number)",
        "GeoJSONRegion.%AM4$getBoundingRect(unknown)"
    ],
    "GeoJSONRegion.contain(number[])": [
        "GeoJSONRegion.getBoundingRect()"
    ],
    "GeoJSONRegion.transformTo(number,number,number,number)": [
        "GeoJSONRegion.getBoundingRect()",
        "transformPoints(unknown, matrix.MatrixArray)"
    ],
    "GeoJSONRegion.cloneShallow(string)": [
        "GeoJSONRegion.%AM5$cloneShallow(string)"
    ],
    "GeoSVGRegion.GeoSVGRegion(string, Element)": [
        "Region.%AM6$Region(string)"
    ],
    "GeoSVGRegion.calcCenter()": [
        "Element.getBoundingRect()",
        "matrix.identity(matrix.MatrixArray)",
        "matrix.mul(matrix.MatrixArray, matrix.MatrixArray, matrix.MatrixArray)",
        "matrix.invert(matrix.MatrixArray, matrix.MatrixArray)",
        "vec2.applyTransform(vec2.VectorArray, vec2.VectorArray, matrix.MatrixArray)"
    ]
}