{
    "EventPipeline.onWindowStageCreate(window.WindowStage)": [],
    "EventPipeline.onDataChanged(UserFileDataItem)": [
        "EventPipeline.evaluateScales()"
    ],
    "EventPipeline.setDefaultScale(scale)": [],
    "EventPipeline.onComponentSizeChanged()": [
        "EventPipeline.evaluateScales()"
    ],
    "EventPipeline.onTouch(TouchEvent)": [
        "EventPipeline.emitDirectionChange()",
        "EventPipeline.evaluateOffset()"
    ],
    "EventPipeline.emitDirectionChange()": [
        "Broadcast.emit(Constants.SET_DISABLE_SWIPE, [false])",
        "Broadcast.emit(Constants.SET_DISABLE_SWIPE, [true])",
        "Broadcast.emit(Constants.DIRECTION_CHANGE + this.item.uri + this.timeStamp, [direction])"
    ],
    "EventPipeline.evaluateOffset()": [],
    "EventPipeline.emitTouchEvent()": [
        "EventPipeline.evaluateOffsetRange(scale)",
        "EventPipeline.evaluateOffset()",
        "MathUtils.clamp(offset[0], limits[0], limits[1])",
        "MathUtils.clamp(offset[1], limits[2], limits[3])",
        "Matrix4.identity().scale(scaleOption).translate(translateOption).copy()",
        "EventPipeline.evaluateBounds()"
    ],
    "EventPipeline.evaluateScales()": [],
    "EventPipeline.evaluateCompBounds()": [
        "EventPipeline.evaluateOffset()"
    ],
    "EventPipeline.evaluateImgDisplaySize()": [],
    "EventPipeline.evaluateImgDisplayBounds()": [
        "EventPipeline.evaluateCompBounds()",
        "EventPipeline.evaluateImgDisplaySize()"
    ],
    "EventPipeline.evaluateBounds()": [
        "EventPipeline.evaluateImgDisplaySize()",
        "EventPipeline.evaluateImgDisplayBounds()"
    ],
    "EventPipeline.evaluateOffsetRange(scale)": [],
    "EventPipeline.emitPullDownToBackEvent()": [
        "Broadcast.emit(Constants.PULL_DOWN_END, [])"
    ],
    "EventPipeline.emitPullDownCancelEvent()": [
        "Broadcast.emit(Constants.PULL_DOWN_CANCEL, [])"
    ],
    "EventPipeline.onMoveStart(offsetX: number, offsetY: number)": [
        "EventPipeline.evaluateBounds()",
        "Broadcast.emit(Constants.HIDE_BARS, [])",
        "Broadcast.emit(Constants.PULL_DOWN_START, [])"
    ],
    "EventPipeline.onMove(offsetX: number, offsetY: number)": [
        "EventPipeline.evaluateOffsetRange(scale)",
        "MathUtils.clamp(offX, limits[0], limits[1])",
        "MathUtils.clamp(offY, limits[2], limits[3])",
        "EventPipeline.emitTouchEvent()"
    ],
    "EventPipeline.onMoveEnd(offsetX, offsetY)": [
        "EventPipeline.emitPullDownToBackEvent()",
        "Matrix4.identity().scale(scaleOption).copy()",
        "EventPipeline.emitPullDownCancelEvent()",
        "EventPipeline.emitDirectionChange()"
    ],
    "EventPipeline.onScaleStart(scale: number, centerX: number, centerY: number)": [
        "EventPipeline.evaluateBounds()",
        "Broadcast.emit(Constants.HIDE_BARS, [])",
        "EventPipeline.evaluateCenter(centerX, centerY)"
    ],
    "EventPipeline.evaluateCenter(centerX: number, centerY: number)": [
        "EventPipeline.evaluateCompBounds()",
        "MathUtils.clamp((centerX - leftTop[0]) / (this.componentWidth * scale), this.leftMost, 1 - this.leftMost)",
        "MathUtils.clamp((centerY - leftTop[1]) / (this.componentHeight * scale), this.topMost, 1 - this.topMost)",
        "EventPipeline.evaluateImgDisplaySize()",
        "EventPipeline.evaluateImgDisplayBounds()"
    ],
    "EventPipeline.onScale(scale: number)": [
        "EventPipeline.evaluateBounds()",
        "EventPipeline.emitTouchEvent()"
    ],
    "EventPipeline.onScaleEnd()": [
        "EventPipeline.evaluateBounds()",
        "Matrix4.identity().scale(scaleOption).copy()",
        "EventPipeline.evaluateAnimeMatrix(this.maxScale, this.center)",
        "EventPipeline.startAnimation(animationEndMatrix as Matrix4TransitWithMatrix4x4)"
    ],
    "EventPipeline.evaluateAnimeMatrix(scale: number, center: number[])": [
        "MathUtils.clamp(offset[0], limits[0], limits[1])",
        "MathUtils.clamp(offset[1], limits[2], limits[3])",
        "Matrix4.identity().copy().scale(scaleOption).translate(translateOption).copy()"
    ],
    "EventPipeline.onDoubleTap(centerX: number, centerY: number)": [
        "Broadcast.emit(Constants.HIDE_BARS, [])",
        "EventPipeline.evaluateCenter(centerX, centerY)",
        "Matrix4.identity().scale(scaleOption).copy()",
        "EventPipeline.evaluateAnimeMatrix(this.doubleTapScale * this.defaultScale, center)",
        "EventPipeline.startAnimation(matrix)"
    ],
    "EventPipeline.reset()": [
        "EventPipeline.emitDirectionChange()"
    ],
    "EventPipeline.onDisAppear()": [],
    "EventPipeline.startAnimation(animationEndMatrix: Matrix4TransitWithMatrix4x4)": [
        "Broadcast.emit(Constants.ANIMATION_EVENT + this.item.uri + this.timeStamp, [animationOption, animationEndMatrix])"
    ],
    "EventPipeline.onAnimationEnd(animationEndMatrix: Matrix4TransitWithMatrix4x4)": [
        "EventPipeline.evaluateBounds()",
        "EventPipeline.emitDirectionChange()"
    ]
}