{
    "GitRepository.destroy()": [],
    "GitRepository.isDestroyed()": [],
    "GitRepository.onDidDestroy(callback: () => void)": [],
    "GitRepository.onDidChangeStatus(callback: (event: RepoStatusChangedEvent) => void)": [],
    "GitRepository.onDidChangeStatuses(callback: () => void)": [],
    "GitRepository.getType()": [],
    "GitRepository.getPath()": [],
    "GitRepository.getWorkingDirectory()": [],
    "GitRepository.isProjectAtRoot()": [],
    "GitRepository.relativize()": [],
    "GitRepository.hasBranch(branch: string)": [],
    "GitRepository.getShortHead(path?: string)": [],
    "GitRepository.isSubmodule(path: string)": [],
    "GitRepository.getAheadBehindCount(reference: string, path?: string)": [],
    "GitRepository.getCachedUpstreamAheadBehindCount(path?: string)": [],
    "GitRepository.getConfigValue(key: string, path?: string)": [],
    "GitRepository.getOriginURL(path?: string)": [],
    "GitRepository.getUpstreamBranch(path?: string)": [],
    "GitRepository.getReferences(path?: string)": [],
    "GitRepository.getReferenceTarget(reference: string, path?: string)": [],
    "GitRepository.isPathModified(path: string)": [],
    "GitRepository.isPathNew(path: string)": [],
    "GitRepository.isPathIgnored(path: string)": [],
    "GitRepository.getDirectoryStatus(path: string)": [],
    "GitRepository.getPathStatus(path: string)": [],
    "GitRepository.getCachedPathStatus(path: string)": [],
    "GitRepository.isStatusModified(status: number)": [],
    "GitRepository.isStatusNew(status: number)": [],
    "GitRepository.getDiffStats(path: string)": [],
    "GitRepository.getLineDiffs(path: string, text: string)": [],
    "GitRepository.checkoutHead(path: string)": [],
    "GitRepository.checkoutReference(reference: string, create: boolean)": []
}