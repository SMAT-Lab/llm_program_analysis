{
    "Remix.constructor(string, RemixArgs, ComponentResourceOptions)": [
        "Remix.%AM0$checkIsUsingVite()",
        "Remix.%AM0$loadBuildOutput()",
        "Remix.%AM0$buildPlan()",
        "prepare(RemixArgs)",
        "createKvStorage(Remix, string, RemixArgs)",
        "buildApp(Remix, string, RemixArgs, string)",
        "createRouter(Remix, string, RemixArgs, string, Kv, unknown)",
        "Hint.register(unknown, Output<string>)",
        "Remix.registerOutputs(unknown)"
    ],
    "Remix.%AM0$checkIsUsingVite()": [
        "path.join(string, string)",
        "fs.existsSync(string)"
    ],
    "Remix.%AM0$loadBuildOutput()": [
        "Remix.%AM1$loadBuildMetadataPlaceholder()",
        "Remix.%AM1$loadBuildMetadata()"
    ],
    "Remix.%AM1$loadBuildMetadata()": [
        "Remix.%AM2$loadBuildMetadata().apply(unknown)"
    ],
    "Remix.%AM2$loadBuildMetadata().apply(unknown)": [
        "path.join(string, string)",
        "fs.readdirSync(string, unknown)"
    ],
    "Remix.%AM1$loadBuildMetadataPlaceholder()": [],
    "Remix.%AM0$buildPlan()": [
        "Remix.%AM3$buildPlan().apply(unknown)",
        "validatePlan(unknown)"
    ],
    "Remix.%AM3$buildPlan().apply(unknown)": [
        "Remix.%AM4$createServerLambdaBundle(boolean, string)",
        "pathToRegexp(unknown)"
    ],
    "Remix.%AM4$createServerLambdaBundle(boolean, string)": [
        "fs.writeFileSync(string, string)",
        "path.join(string, string)",
        "fs.mkdirSync(string, unknown)"
    ],
    "Remix.registerOutputs(unknown)": []
}