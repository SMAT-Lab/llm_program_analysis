{
    "main": [],
    "mockInterface": [
        "camera.SceneFeatureType",
        "camera.SceneFeatureType",
        "camera.SceneMode",
        "camera.SceneMode",
        "camera.SceneMode",
        "camera.SceneMode"
    ],
    "CameraService": [
        "mockInterface",
        "photoAccessHelper.getPhotoAccessHelper",
        "this.globalContext.getCameraSettingContext",
        "image.createImageReceiver",
        "Logger.debug",
        "this.mReceiver.on"
    ],
    "CameraService.savePicture": [
        "Logger.info",
        "this.accessHelper.createAsset",
        "fileAsset.uri",
        "fileAsset.open",
        "fs.write",
        "fileAsset.close",
        "img.release",
        "Logger.info",
        "this.handleTakePicture",
        "Logger.error"
    ],
    "CameraService.withinErrorMargin": [
        "Math.abs",
        "Number.EPSILON",
        "Math.pow"
    ],
    "CameraService.switchProfiles": [
        "Logger.error",
        "AppStorage.get",
        "AppStorage.get",
        "Logger.info",
        "Logger.info",
        "Logger.info",
        "Logger.info",
        "this.withinErrorMargin",
        "Logger.debug",
        "AppStorage.get",
        "AppStorage.get",
        "Logger.debug",
        "cameraConfig.videoFrame",
        "Logger.info",
        "Logger.info",
        "Logger.info"
    ],
    "CameraService.setCameraMode": [],
    "CameraService.initProfile": [
        "this.cameraManager.getSupportedOutputCapability",
        "this.switchProfiles"
    ],
    "CameraService.initCamera": [
        "Logger.debug",
        "this.releaseCamera",
        "this.getCameraManagerFn",
        "this.getModeManagerFn",
        "this.getSupportedCamerasFn",
        "this.getSupportedModeFn",
        "this.initProfile",
        "this.createPreviewOutputFn",
        "this.previewOutputCallBack",
        "this.createAVRecorder",
        "this.createVideoOutput",
        "this.onVideoOutputChange",
        "this.mReceiver.getReceivingSurfaceId",
        "this.createPhotoOutputFn",
        "this.photoOutPutCallBack",
        "this.createCameraInputFn",
        "this.cameraInputOpenFn",
        "this.onCameraStatusChange",
        "this.onCameraInputChange",
        "this.portraitSessionFlowFn",
        "this.nightSessionFlowFn",
        "this.macroPhotoSessionFlowFn",
        "this.videoSessionFlowFn",
        "this.photoSessionFlowFn",
        "this.testAbilityFunction",
        "Logger.error"
    ],
    "CameraService.isVideoFrameSupportedFn": [
        "this.videoProfiles.find"
    ],
    "CameraService.isExposureModeSupportedFn": [
        "this.getSession",
        "Logger.info"
    ],
    "CameraService.setExposureMode": [
        "this.getSession",
        "session.getExposureMode",
        "Logger.info"
    ],
    "CameraService.isMeteringPoint": [
        "this.getSession",
        "session.getExposureMode",
        "Logger.info",
        "session.getMeteringPoint",
        "Logger.info"
    ],
    "CameraService.isExposureBiasRange": [
        "Logger.debug",
        "this.getSession",
        "session.getExposureBiasRange",
        "Logger.debug",
        "session.setExposureBias"
    ],
    "CameraService.isFocusModeSupported": [
        "this.getSession"
    ],
    "CameraService.isFocusMode": [
        "this.isFocusModeSupported",
        "Logger.info",
        "this.getSession",
        "session.setFocusMode"
    ],
    "CameraService.isFocusPoint": [
        "this.getSession",
        "Logger.info",
        "session.getFocusPoint",
        "Logger.info"
    ],
    "CameraService.hasFlashFn": [
        "this.getSession",
        "session.hasFlash",
        "Logger.debug",
        "session.isFlashModeSupported",
        "Logger.debug",
        "session.setFlashMode",
        "session.getFlashMode",
        "Logger.debug"
    ],
    "CameraService.getSession": [],
    "CameraService.setZoomRatioFn": [
        "Logger.info",
        "this.getSession",
        "session.getZoomRatioRange",
        "Logger.info",
        "session.setZoomRatio",
        "Logger.info",
        "session.getZoomRatio",
        "Logger.info"
    ],
    "CameraService.isVideoStabilizationModeSupportedFn": [
        "this.getSession",
        "session.isVideoStabilizationModeSupported",
        "Logger.info"
    ],
    "CameraService.setVideoStabilizationMode": [
        "Logger.info",
        "this.getSession",
        "session.setVideoStabilizationMode",
        "session.getActiveVideoStabilizationMode",
        "Logger.info"
    ],
    "CameraService.isNightModeSupportedFn": [
        "Logger.info"
    ],
    "CameraService.isPortraitModeSupportedFn": [
        "Logger.info"
    ],
    "CameraService.isMacroPhotoModeSupportedFn": [
        "Logger.info"
    ],
    "CameraService.isMirrorSupportedFn": [
        "this.photoOutPut.isMirrorSupported",
        "Logger.info"
    ],
    "CameraService.setTakePictureCallback": [],
    "CameraService.onChangeRotation": [
        "this.globalContext.getObject"
    ],
    "CameraService.onChangeLocation": [
        "this.globalContext.getObject"
    ],
    "CameraService.takePicture": [
        "Logger.info",
        "this.isMirrorSupportedFn",
        "this.globalContext.getObject",
        "this.onChangeRotation",
        "this.onChangeLocation",
        "Logger.debug",
        "this.photoOutPut.capture",
        "Logger.info"
    ],
    "CameraService.prepareAVRecorder": [
        "this.initUrl",
        "AppStorage.get",
        "Logger.info",
        "this.videoRecorder.prepare",
        "Logger.error"
    ],
    "CameraService.getAVRecorderSurfaceId": [
        "this.videoRecorder.getInputSurface"
    ],
    "CameraService.createAVRecorder": [
        "media.createAVRecorder"
    ],
    "CameraService.createVideoOutput": [
        "Logger.info",
        "this.prepareAVRecorder",
        "this.getAVRecorderSurfaceId",
        "Logger.debug",
        "this.globalContext.getObject",
        "this.cameraManager.createVideoOutput",
        "Logger.info"
    ],
    "CameraService.pauseVideo": [
        "this.videoRecorder.pause",
        "this.videoOutput.stop",
        "Logger.info",
        "Logger.error"
    ],
    "CameraService.resumeVideo": [
        "this.videoOutput.start",
        "this.videoRecorder.resume",
        "Logger.info",
        "Logger.error"
    ],
    "CameraService.initUrl": [
        "this.accessHelper.createAsset",
        "this.fileAsset.open"
    ],
    "CameraService.startVideo": [
        "Logger.info",
        "this.videoOutput.start",
        "this.prepareAVRecorder",
        "this.getAVRecorderSurfaceId",
        "this.videoRecorder.start",
        "AppStorage.setOrCreate",
        "Logger.info",
        "Logger.error"
    ],
    "CameraService.releaseVideoRecorder": [
        "this.videoRecorder.release",
        "AppStorage.setOrCreate",
        "Logger.error"
    ],
    "CameraService.stopVideo": [
        "Logger.info",
        "AppStorage.setOrCreate",
        "this.videoRecorder.stop",
        "this.videoOutput.stop",
        "this.fileAsset.close",
        "Logger.error"
    ],
    "CameraService.releaseCamera": [
        "Logger.info",
        "this.stopVideo",
        "this.releaseVideoRecorder",
        "this.previewOutput.stop",
        "this.previewOutput.release",
        "Logger.error",
        "this.photoOutPut.release",
        "Logger.error",
        "this.videoOutput.release",
        "Logger.error",
        "this.photoSession.release",
        "Logger.error",
        "this.videoSession.release",
        "Logger.error",
        "this.portraitSession.release",
        "Logger.error",
        "this.nightSession.release",
        "Logger.error",
        "this.cameraInput.close",
        "Logger.error",
        "Logger.info"
    ],
    "CameraService.getCameraManagerFn": [
        "camera.getCameraManager",
        "GlobalContext.get",
        "Logger.info",
        "Logger.error"
    ],
    "CameraService.getModeManagerFn": [
        "camera.getCameraManager",
        "GlobalContext.get",
        "Logger.info",
        "Logger.error"
    ],
    "CameraService.getSupportedCamerasFn": [
        "this.cameraManager.getSupportedCameras",
        "Logger.info",
        "Logger.error"
    ],
    "CameraService.getSupportedModeFn": [
        "this.cameraManager.getSupportedSceneModes",
        "Logger.info",
        "Logger.error"
    ],
    "CameraService.getSupportedOutputCapabilityFn": [
        "this.cameraManager.getSupportedOutputCapability"
    ],
    "CameraService.createPreviewOutputFn": [
        "this.globalContext.getObject",
        "this.cameraManager.createPreviewOutput",
        "Logger.info",
        "Logger.error"
    ],
    "CameraService.createPhotoOutputFn": [
        "Logger.info",
        "this.cameraManager.createPhotoOutput",
        "Logger.error"
    ],
    "CameraService.createCameraInputFn": [
        "Logger.info",
        "this.cameraManager.createCameraInput"
    ],
    "CameraService.cameraInputOpenFn": [
        "this.cameraInput.open",
        "Logger.info",
        "Logger.error"
    ],
    "CameraService.configMoonCaptureBoost": [
        "this.photoSession.isSceneFeatureSupported",
        "this.photoSession.on",
        "Logger.info",
        "AppStorage.setOrCreate",
        "this.setMoonCaptureBoostEnable",
        "Logger.error"
    ],
    "CameraService.photoSessionFlowFn": [
        "Logger.info",
        "this.cameraManager.createSession",
        "this.onFocusStateChange",
        "this.onCaptureSessionErrorChange",
        "this.photoSession.beginConfig",
        "this.photoSession.addInput",
        "this.photoSession.addOutput",
        "this.photoSession.addOutput",
        "this.globalContext.getObject",
        "this.setColorSpace",
        "this.isDeferredImageDeliverySupported",
        "this.deferImageDeliveryFor",
        "this.isDeferredImageDeliveryEnabled",
        "this.photoSession.commitConfig",
        "this.photoSession.getZoomRatioRange",
        "Logger.info",
        "AppStorage.setOrCreate",
        "Logger.error",
        "this.photoSession.getZoomPointInfos",
        "Logger.info",
        "AppStorage.setOrCreate",
        "Logger.error",
        "this.configMoonCaptureBoost",
        "this.getSupportedColorEffects",
        "AppStorage.setOrCreate",
        "AppStorage.setOrCreate",
        "AppStorage.setOrCreate",
        "this.setColorEffect",
        "this.photoSession.start",
        "this.isVideoStabilizationModeSupportedFn",
        "this.setVideoStabilizationMode",
        "this.isFocusMode",
        "this.globalContext.getObject",
        "Logger.error"
    ],
    "CameraService.videoSessionFlowFn": [
        "Logger.info",
        "this.cameraManager.createSession",
        "this.onFocusStateChange",
        "this.onCaptureSessionErrorChange",
        "this.videoSession.beginConfig",
        "this.videoSession.addInput",
        "this.videoSession.addOutput",
        "this.videoSession.addOutput",
        "this.videoSession.commitConfig",
        "this.globalContext.getObject",
        "this.isVideoStabilizationModeSupportedFn",
        "this.setVideoStabilizationMode",
        "this.setColorSpace",
        "Logger.info",
        "this.setColorSpace",
        "this.videoSession.getZoomRatioRange",
        "Logger.info",
        "AppStorage.setOrCreate",
        "AppStorage.setOrCreate",
        "Logger.error",
        "this.videoSession.getZoomPointInfos",
        "Logger.info",
        "AppStorage.setOrCreate",
        "Logger.error",
        "this.getSupportedColorEffects",
        "AppStorage.setOrCreate",
        "AppStorage.setOrCreate",
        "AppStorage.setOrCreate",
        "this.setColorEffect",
        "this.videoSession.start",
        "this.isVideoStabilizationModeSupportedFn",
        "this.setVideoStabilizationMode",
        "this.isFocusMode",
        "this.globalContext.getObject",
        "Logger.error"
    ],
    "CameraService.portraitSessionFlowFn": [
        "this.cameraManager.createSession",
        "this.onFocusStateChange",
        "this.onAbilityChange",
        "this.onCaptureSessionErrorChange",
        "this.portraitSession.beginConfig",
        "this.portraitSession.addInput",
        "this.portraitSession.addOutput",
        "this.portraitSession.addOutput",
        "this.isDeferredImageDeliverySupported",
        "this.deferImageDeliveryFor",
        "this.isDeferredImageDeliveryEnabled",
        "this.portraitSession.commitConfig",
        "this.portraitSession.getZoomRatioRange",
        "Logger.info",
        "AppStorage.setOrCreate",
        "AppStorage.setOrCreate",
        "this.setPortraitEffect",
        "AppStorage.get",
        "this.getSupportedColorEffects",
        "AppStorage.setOrCreate",
        "this.setColorEffect",
        "this.portraitSession.start",
        "this.isFocusMode",
        "this.globalContext.getObject",
        "Logger.info",
        "Logger.error"
    ],
    "CameraService.nightSessionFlowFn": [
        "this.cameraManager.createSession",
        "this.onFocusStateChange",
        "this.onCaptureSessionErrorChange",
        "this.nightSession.beginConfig",
        "this.nightSession.addInput",
        "this.nightSession.addOutput",
        "this.nightSession.addOutput",
        "this.isDeferredImageDeliverySupported",
        "this.deferImageDeliveryFor",
        "this.isDeferredImageDeliveryEnabled",
        "this.nightSession.commitConfig",
        "this.nightSession.getZoomRatioRange",
        "Logger.info",
        "AppStorage.setOrCreate",
        "AppStorage.setOrCreate",
        "AppStorage.get",
        "this.getSupportedColorEffects",
        "AppStorage.setOrCreate",
        "this.setColorEffect",
        "this.nightSession.start",
        "this.isFocusMode",
        "this.globalContext.getObject",
        "Logger.info",
        "Logger.error"
    ],
    "CameraService.macroPhotoSessionFlowFn": [
        "Logger.info",
        "this.cameraManager.createSession",
        "this.onFocusStateChange",
        "this.onCaptureSessionErrorChange",
        "this.macroPhotoSession.beginConfig",
        "this.macroPhotoSession.addInput",
        "this.macroPhotoSession.addOutput",
        "this.macroPhotoSession.addOutput",
        "this.isDeferredImageDeliverySupported",
        "this.deferImageDeliveryFor",
        "this.isDeferredImageDeliveryEnabled",
        "this.previewOutput.isSketchSupported",
        "Logger.info",
        "this.macroPhotoSession.commitConfig",
        "this.macroPhotoSession.getZoomRatioRange",
        "Logger.info",
        "AppStorage.setOrCreate",
        "AppStorage.setOrCreate",
        "AppStorage.get",
        "this.getSupportedColorEffects",
        "AppStorage.setOrCreate",
        "this.setColorEffect",
        "this.macroPhotoSession.start",
        "this.isFocusMode",
        "this.globalContext.getObject",
        "Logger.info",
        "Logger.error"
    ],
    "CameraService.setColorSpace": [
        "session.getSupportedColorSpaces",
        "Logger.info",
        "session.setColorSpace",
        "Logger.info",
        "session.getActiveColorSpace",
        "Logger.error"
    ],
    "CameraService.setPortraitEffect": [
        "this.portraitSession.setPortraitEffect",
        "this.getPortraitEffect",
        "Logger.error"
    ],
    "CameraService.getPortraitEffect": [
        "this.portraitSession.getPortraitEffect",
        "Logger.info",
        "Logger.error"
    ],
    "CameraService.setMoonCaptureBoostEnable": [
        "Logger.info",
        "this.getSession",
        "session.enableSceneFeature",
        "AppStorage.setOrCreate",
        "Logger.error"
    ],
    "CameraService.setColorEffect": [
        "Logger.info",
        "this.getSupportedColorEffects",
        "this.getSession",
        "session.setColorEffect",
        "Logger.error",
        "Logger.error"
    ],
    "CameraService.getColorEffect": [
        "Logger.info",
        "this.getSession",
        "session.getColorEffect",
        "Logger.error"
    ],
    "CameraService.getSupportedColorEffects": [
        "Logger.info",
        "this.getSession",
        "session.getSupportedColorEffects",
        "Logger.info"
    ],
    "CameraService.photoOutPutCallBack": [
        "this.photoOutPut.on",
        "Logger.info",
        "this.photoOutPut.on",
        "Logger.info",
        "this.photoOutPut.on",
        "Logger.info",
        "this.photoOutPut.on",
        "Logger.info",
        "this.photoOutPut.on",
        "AppStorage.setOrCreate",
        "mainImage.getComponent",
        "Logger.debug",
        "Logger.info",
        "this.savePicture",
        "photo.release",
        "this.photoOutPut.on",
        "Logger.info",
        "proxyObj.getThumbnail",
        "AppStorage.setOrCreate",
        "this.saveDeferredPhoto"
    ],
    "CameraService.saveDeferredPhoto": [
        "photoAccessHelper.getPhotoAccessHelper",
        "this.globalContext.getCameraSettingContext",
        "photoHelper.createAsset",
        "photoAsset.uri",
        "photoAccessHelper.MediaAssetChangeRequest",
        "mediaRequest.addResource",
        "photoHelper.applyChanges",
        "this.handleTakePicture",
        "Logger.info",
        "Logger.error"
    ],
    "CameraService.previewOutputCallBack": [
        "Logger.info",
        "this.previewOutput.on",
        "Logger.debug",
        "this.previewOutput.on",
        "Logger.debug",
        "this.previewOutput.on",
        "Logger.info"
    ],
    "CameraService.onVideoOutputChange": [
        "this.videoOutput.on",
        "Logger.info",
        "this.videoOutput.on",
        "Logger.info",
        "this.videoOutput.on",
        "Logger.error"
    ],
    "CameraService.onCameraStatusChange": [
        "Logger.info",
        "this.cameraManager.on",
        "Logger.info"
    ],
    "CameraService.onCameraInputChange": [
        "this.cameraInput.on",
        "this.cameras[]",
        "Logger.info",
        "Logger.info"
    ],
    "CameraService.onFocusStateChange": [
        "this.getSession",
        "session.on",
        "Logger.info"
    ],
    "CameraService.onAbilityChange": [
        "this.getSession",
        "session.on",
        "session.getZoomRatioRange",
        "session.isMacroSupported",
        "Logger.info"
    ],
    "CameraService.onCaptureSessionErrorChange": [
        "this.getSession",
        "session.on",
        "Logger.info"
    ],
    "CameraService.setCaptureMode": [],
    "CameraService.getCaptureMode": [],
    "CameraService.isDeferredImageDeliverySupported": [
        "this.photoOutPut.isDeferredImageDeliverySupported",
        "Logger.info"
    ],
    "CameraService.isDeferredImageDeliveryEnabled": [
        "this.photoOutPut.isDeferredImageDeliveryEnabled",
        "Logger.info"
    ],
    "CameraService.deferImageDeliveryFor": [
        "Logger.info",
        "this.photoOutPut.deferImageDelivery"
    ],
    "CameraService.testAbilityFunction": [
        "Logger.info",
        "this.getSession",
        "this.logPortraitSession",
        "this.getSession",
        "this.logVideoSession",
        "this.getSession",
        "this.logPhotoSession",
        "Logger.info"
    ],
    "CameraService.logPortraitSession": [
        "session.getSessionConflictFunctions",
        "this.logPortraitPhotoConflictFunctions",
        "session.getCameraOutputCapabilities",
        "this.cameras[]",
        "this.logCameraOutputCapabilities",
        "session.getSessionFunctions",
        "this.logPortraitPhotoFunctions"
    ],
    "CameraService.logVideoSession": [
        "session.getSessionConflictFunctions",
        "Logger.info",
        "Logger.info",
        "session.getCameraOutputCapabilities",
        "this.cameras[]",
        "this.logCameraOutputCapabilities",
        "session.getSessionFunctions",
        "this.logVideoFunctions"
    ],
    "CameraService.logPhotoSession": [
        "session.getSessionConflictFunctions",
        "Logger.info",
        "Logger.info",
        "session.getCameraOutputCapabilities",
        "this.cameras[]",
        "this.logCameraOutputCapabilities",
        "session.getSessionFunctions",
        "this.logPhotoFunctions"
    ],
    "CameraService.logPortraitPhotoFunctions": [
        "Logger.info",
        "Logger.info",
        "Logger.info",
        "Logger.info",
        "Logger.info",
        "Logger.info",
        "Logger.info",
        "Logger.info",
        "Logger.info",
        "Logger.info",
        "Logger.info",
        "Logger.info"
    ],
    "CameraService.logVideoFunctions": [
        "Logger.info",
        "Logger.info",
        "Logger.info",
        "Logger.info",
        "Logger.info",
        "Logger.info",
        "Logger.info",
        "Logger.info",
        "Logger.info",
        "Logger.info",
        "Logger.info",
        "Logger.info",
        "Logger.info"
    ],
    "CameraService.logPhotoFunctions": [
        "Logger.info",
        "Logger.info",
        "Logger.info",
        "Logger.info",
        "Logger.info",
        "Logger.info",
        "Logger.info",
        "Logger.info",
        "Logger.info",
        "Logger.info",
        "Logger.info",
        "Logger.info",
        "Logger.info",
        "Logger.info",
        "Logger.info"
    ],
    "CameraService.logPortraitPhotoConflictFunctions": [
        "Logger.info",
        "Logger.info",
        "Logger.info",
        "Logger.info",
        "Logger.info"
    ],
    "CameraService.logCameraOutputCapabilities": [
        "Logger.info",
        "Logger.info",
        "Logger.info"
    ]
}