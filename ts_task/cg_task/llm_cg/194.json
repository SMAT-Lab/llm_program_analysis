{
    "FederationRoomServiceReceiver.onCreateRoom(any)": [
        "roomAdapter.getFederatedRoomByExternalId(any)",
        "FederatedRoomServiceReceiver.onChangeRoomMembership(any)"
    ],
    "FederationRoomServiceReceiver.onChangeRoomMembership(any)": [
        "roomAdapter.getFederatedRoomByExternalId(any)",
        "userAdapter.getFederatedUserByExternalId(any)",
        "FederatedUser.createInstance(any, any)",
        "FederatedRoom.createInstance(any, any, any, any, any)",
        "roomAdapter.createFederatedRoom(any)",
        "bridge.joinRoom(any, any)",
        "roomAdapter.updateFederatedRoomByInternalRoomId(any, any)",
        "roomAdapter.createFederatedRoomForDirectMessage(any)",
        "FederatedUser.createWithInternalReference(any, any, any)",
        "roomAdapter.removeDirectMessageRoom(any)",
        "roomAdapter.removeUserFromRoom(any, any, any)",
        "roomAdapter.addUserToRoom(any, any)",
        "roomAdapter.addUsersToRoomWhenJoinExternalPublicRoom(any)",
        "roomAdapter.isUserAlreadyJoined(any, any)",
        "service.createFederatedUserInternallyOnly(any, any, any)",
        "service.createFederatedUserAndReturnIt(any)",
        "bridge.getRoomData(any)",
        "bridge.extractHomeserverOrigin(any)",
        "roomAdapter.createFederatedRoom(any)",
        "service.onChangeRoomName(any)"
    ],
    "FederationRoomServiceReceiver.onExternalFileMessageReceived(any)": [
        "roomAdapter.getFederatedRoomByExternalId(any)",
        "userAdapter.getFederatedUserByExternalId(any)",
        "bridge.getReadStreamForFileFromUrl(any)",
        "fileAdapter.uploadFile(any, any, any, any)",
        "messageAdapter.sendFileMessage(any, any, any, any)"
    ],
    "FederationRoomServiceReceiver.onExternalMessageReceived(any)": [
        "roomAdapter.getFederatedRoomByExternalId(any)",
        "userAdapter.getFederatedUserByExternalId(any)",
        "messageAdapter.getMessageByFederationId(any)",
        "messageAdapter.sendMessage(any, any, any, any, any, any)",
        "messageAdapter.sendQuoteMessage(any, any, any, any, any, any, any)"
    ],
    "FederationRoomServiceReceiver.onChangeJoinRules(any)": [
        "roomAdapter.getFederatedRoomByExternalId(any)",
        "roomAdapter.updateRoomType(any)"
    ],
    "FederationRoomServiceReceiver.onChangeRoomName(any)": [
        "roomAdapter.getFederatedRoomByExternalId(any)",
        "userAdapter.getFederatedUserByExternalId(any)",
        "bridge.extractHomeserverOrigin(any)",
        "roomAdapter.updateRoomName(any)",
        "roomAdapter.updateDisplayRoomName(any, any)"
    ],
    "FederationRoomServiceReceiver.onChangeRoomTopic(any)": [
        "roomAdapter.getFederatedRoomByExternalId(any)",
        "roomAdapter.updateRoomTopic(any, any)"
    ],
    "FederationRoomServiceReceiver.onRedactEvent(any)": [
        "roomAdapter.getFederatedRoomByExternalId(any)",
        "userAdapter.getFederatedUserByExternalId(any)",
        "messageAdapter.getMessageByFederationId(any)",
        "messageAdapter.deleteMessage(any, any)",
        "messageAdapter.unreactToMessage(any, any, any, any)",
        "messageAdapter.findOneByFederationIdOnReactions(any)"
    ],
    "FederationRoomServiceReceiver.onExternalMessageEditedReceived(any)": [
        "roomAdapter.getFederatedRoomByExternalId(any)",
        "userAdapter.getFederatedUserByExternalId(any)",
        "messageAdapter.getMessageByFederationId(any)",
        "bridge.extractHomeserverOrigin(any)",
        "messageAdapter.getMessageToEditWhenReplyAndQuote(any, any)",
        "messageAdapter.editMessage(any, any, any, any, any)",
        "messageAdapter.editQuotedMessage(any, any, any, any, any)"
    ],
    "FederationRoomServiceReceiver.onChangeRoomPowerLevels(any)": [
        "roomAdapter.getFederatedRoomByExternalId(any)",
        "userAdapter.getFederatedUserByExternalId(any)",
        "userAdapter.getFederatedUsersByExternalIds(any)",
        "roomAdapter.applyRoomRolesToUser(any)"
    ],
    "FederationRoomServiceReceiver.onExternalThreadedMessageReceived(any)": [
        "messageAdapter.getMessageByFederationId(any)",
        "roomAdapter.getFederatedRoomByExternalId(any)",
        "userAdapter.getFederatedUserByExternalId(any)",
        "messageAdapter.sendThreadMessage(any, any, any, any, any, any, any)",
        "messageAdapter.sendThreadQuoteMessage(any, any, any, any, any, any, any, any)"
    ],
    "FederationRoomServiceReceiver.onExternalThreadedFileMessageReceived(any)": [
        "messageAdapter.getMessageByFederationId(any)",
        "roomAdapter.getFederatedRoomByExternalId(any)",
        "userAdapter.getFederatedUserByExternalId(any)",
        "bridge.getReadStreamForFileFromUrl(any)",
        "fileAdapter.uploadFile(any, any, any, any)",
        "messageAdapter.sendThreadFileMessage(any, any, any, any, any, any)",
        "messageAdapter.sendThreadQuoteFileMessage(any, any, any, any, any, any, any, any)"
    ]
}