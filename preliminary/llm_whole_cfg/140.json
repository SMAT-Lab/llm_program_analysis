{
  "source_file": "140.py",
  "cfg": {
    "blocks": [
      {
        "id": 1,
        "start_line": 1,
        "end_line": 4,
        "label": "import json\nfrom typing import Any, Type, TypeVar, cast, get_args, get_origin\n\n",
        "successors": [
          2
        ]
      },
      {
        "id": 2,
        "start_line": 5,
        "end_line": 6,
        "label": "class ConversionError(ValueError):\n    pass",
        "successors": [
          3
        ]
      },
      {
        "id": 3,
        "start_line": 9,
        "end_line": 10,
        "label": "def __convert_list(value: Any) -> list:\n    if isinstance(value, (list, tuple, set)):",
        "successors": [
          4,
          5
        ]
      },
      {
        "id": 4,
        "start_line": 11,
        "end_line": 11,
        "label": "        return list(value)",
        "successors": [
          28
        ]
      },
      {
        "id": 5,
        "start_line": 12,
        "end_line": 12,
        "label": "    elif isinstance(value, dict):",
        "successors": [
          6,
          7
        ]
      },
      {
        "id": 6,
        "start_line": 13,
        "end_line": 13,
        "label": "        return list(value.items())",
        "successors": [
          28
        ]
      },
      {
        "id": 7,
        "start_line": 14,
        "end_line": 14,
        "label": "    elif isinstance(value, str):",
        "successors": [
          8,
          23
        ]
      },
      {
        "id": 8,
        "start_line": 15,
        "end_line": 16,
        "label": "        value = value.strip()\n        if value.startswith(\"[\") and value.endswith(\"]\"):",
        "successors": [
          9,
          22
        ]
      },
      {
        "id": 9,
        "start_line": 17,
        "end_line": 18,
        "label": "            try:\n                return json.loads(value)",
        "successors": [
          10,
          11
        ]
      },
      {
        "id": 10,
        "start_line": 19,
        "end_line": 20,
        "label": "            except json.JSONDecodeError:\n                return [value]",
        "successors": [
          28
        ]
      },
      {
        "id": 11,
        "start_line": 21,
        "end_line": 22,
        "label": "        else:\n            return [value]",
        "successors": [
          28
        ]
      },
      {
        "id": 22,
        "start_line": 22,
        "end_line": 22,
        "label": "        else:\n            return [value]",
        "successors": [
          26
        ]
      },
      {
        "id": 23,
        "start_line": 22,
        "end_line": 26,
        "label": "        value = value.strip()\nelse:\nreturn [value]\n        return [value]\nelse:\nreturn [value]\nelse:\nreturn [value]\nelse:\nreturn [value]\nelse:\nreturn [value]\nelse:\nreturn [value]\nelse:\nreturn [value]\nelse:\nreturn [value]\nelse:\nreturn [value]\nelse:\nreturn [value]\nelse:\nreturn [value]\nelse:\nreturn [value]\nelse:\nreturn [value]\nelse:\nreturn [value] ",
        "successors": [
          24,
          25
        ]
      },
      {
        "id": 24,
        "start_line": 26,
        "end_line": 27,
        "label": "else:\nreturn [value]",
        "successors": [
          28
        ]
      },
      {
        "id": 25,
        "start_line": 27,
        "end_line": 192,
        "label": "def __convert_dict(value: Any) -> dict:else:return [value] if:true return json.loads:value try return list:value elif return list:value test except json.JSONDecodeError[:",
        "successors": [
          28
        ]
      },
      {
        "id": 26,
        "start_line": 192,
        "end_line": 194,
        "label": "else:\nreturn {\"value\": value}",
        "successors": [
          1
        ]
      },
      {
        "id": 27,
        "start_line": 194,
        "end_line": 195,
        "label": "return value",
        "successors": [
          1
        ]
      },
      {
        "id": 192,
        "start_line": 192,
        "end_line": 194,
        "label": "else:\nreturn {\"value\": value}",
        "successors": [
          28
        ]
      },
      {
        "id": 28,
        "start_line": 194,
        "end_line": 195,
        "label": "return value",
        "successors": [
          25
        ]
      },
      []
    ]
  },
  "code_length": 193
}