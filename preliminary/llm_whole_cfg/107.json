{
  "source_file": "107.py",
  "cfg": {
    "blocks": [
      {
        "id": 1,
        "start_line": 1,
        "end_line": 5,
        "label": "from typing import Any\n\nfrom backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema\nfrom backend.data.model import SchemaField\nfrom backend.util.json import json",
        "successors": [
          2
        ]
      },
      {
        "id": 2,
        "start_line": 6,
        "end_line": 7,
        "label": "",
        "successors": [
          3
        ]
      },
      {
        "id": 3,
        "start_line": 8,
        "end_line": 8,
        "label": "class StepThroughItemsBlock(Block):",
        "successors": [
          4
        ]
      },
      {
        "id": 4,
        "start_line": 9,
        "end_line": 15,
        "label": "class Input(BlockSchema):\n\nitems: list = SchemaField(\nadvanced=False,\ndescription=\"The list or dictionary of items to iterate over\",\nplaceholder=\"[1, 2, 3, 4, 5] or {'key1': 'value1', 'key2': 'value2'}\",\ndefault=[],\n)",
        "successors": [
          5
        ]
      },
      {
        "id": 5,
        "start_line": 16,
        "end_line": 21,
        "label": "items_object: dict = SchemaField(\nadvanced=False,\ndescription=\"The list or dictionary of items to iterate over\",\nplaceholder=\"[1, 2, 3, 4, 5] or {'key1': 'value1', 'key2': 'value2'}\",\ndefault={},\n)",
        "successors": [
          6
        ]
      },
      {
        "id": 6,
        "start_line": 22,
        "end_line": 27,
        "label": "items_str: str = SchemaField(\nadvanced=False,\ndescription=\"The list or dictionary of items to iterate over\",\nplaceholder=\"[1, 2, 3, 4, 5] or {'key1': 'value1', 'key2': 'value2'}\",\ndefault=\"\",\n)",
        "successors": [
          7
        ]
      },
      {
        "id": 7,
        "start_line": 28,
        "end_line": 28,
        "label": "",
        "successors": [
          8
        ]
      },
      {
        "id": 8,
        "start_line": 29,
        "end_line": 33,
        "label": "class Output(BlockSchema):\n\nitem: Any = SchemaField(description=\"The current item in the iteration\")\nkey: Any = SchemaField(\ndescription=\"The key or index of the current item in the iteration\",\n)",
        "successors": [
          9
        ]
      },
      {
        "id": 9,
        "start_line": 34,
        "end_line": 34,
        "label": "",
        "successors": [
          10
        ]
      },
      {
        "id": 10,
        "start_line": 35,
        "end_line": 54,
        "label": "def __init__(self):\nsuper().__init__(\nid=\"f66a3543-28d3-4ab5-8945-9b336371e2ce\",\ninput_schema=StepThroughItemsBlock.Input,\noutput_schema=StepThroughItemsBlock.Output,\ncategories={BlockCategory.LOGIC},\ndescription=\"Iterates over a list or dictionary and outputs each item.\",\ntest_input={\"items\": [1, 2, 3, {\"key1\": \"value1\", \"key2\": \"value2\"}]},\ntest_output=[\n(\"item\", 1),\n(\"key\", 0),\n(\"item\", 2),\n(\"key\", 1),\n(\"item\", 3),\n(\"key\", 2),\n(\"item\", {\"key1\": \"value1\", \"key2\": \"value2\"}),\n(\"key\", 3),\n],\ntest_mock={},\n)",
        "successors": [
          11
        ]
      },
      {
        "id": 11,
        "start_line": 56,
        "end_line": 56,
        "label": "def run(self, input_data: Input, **kwargs) -> BlockOutput:",
        "successors": [
          12
        ]
      },
      {
        "id": 12,
        "start_line": 57,
        "end_line": 57,
        "label": "for data in [input_data.items, input_data.items_object, input_data.items_str]:",
        "successors": [
          13,
          14
        ]
      },
      {
        "id": 13,
        "start_line": 58,
        "end_line": 59,
        "label": "if not data:\ncontinue",
        "successors": [
          12
        ]
      },
      {
        "id": 14,
        "start_line": 60,
        "end_line": 63,
        "label": "if isinstance(data, str):\nitems = json.loads(data)\nelse:\nitems = data",
        "successors": [
          15,
          19
        ]
      },
      {
        "id": 15,
        "start_line": 64,
        "end_line": 68,
        "label": "if isinstance(items, dict):\nfor item in items.values():\nyield \"item\", item\nyield \"key\", item",
        "successors": [
          12
        ]
      },
      {
        "id": 19,
        "start_line": 69,
        "end_line": 73,
        "label": "else:\nfor index, item in enumerate(items):\nyield \"item\", item\nyield \"key\", index",
        "successors": [
          12
        ]
      }
    ]
  },
  "code_length": 73
}