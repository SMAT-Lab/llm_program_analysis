{
  "source_file": "149.py",
  "cfg": {
    "blocks": [
      {
        "id": 1,
        "start_line": 1,
        "end_line": 1,
        "label": "import logging",
        "successors": [
          2
        ]
      },
      {
        "id": 2,
        "start_line": 3,
        "end_line": 4,
        "label": "from fastapi import Request\nfrom strenum import StrEnum",
        "successors": [
          3
        ]
      },
      {
        "id": 3,
        "start_line": 6,
        "end_line": 7,
        "label": "from backend.data import integrations\nfrom backend.integrations.providers import ProviderName",
        "successors": [
          4
        ]
      },
      {
        "id": 4,
        "start_line": 9,
        "end_line": 9,
        "label": "from ._manual_base import ManualWebhookManagerBase",
        "successors": [
          5
        ]
      },
      {
        "id": 5,
        "start_line": 11,
        "end_line": 11,
        "label": "logger = logging.getLogger(__name__)",
        "successors": [
          6
        ]
      },
      {
        "id": 6,
        "start_line": 14,
        "end_line": 16,
        "label": "class CompassWebhookType(StrEnum):\n    TRANSCRIPTION = \"transcription\"\n    TASK = \"task\"",
        "successors": [
          7
        ]
      },
      {
        "id": 7,
        "start_line": 19,
        "end_line": 21,
        "label": "class CompassWebhookManager(ManualWebhookManagerBase):\n    PROVIDER_NAME = ProviderName.COMPASS\n    WebhookType = CompassWebhookType",
        "successors": [
          8
        ]
      },
      {
        "id": 8,
        "start_line": 23,
        "end_line": 26,
        "label": "@classmethod\nasync def validate_payload(\n    cls, webhook: integrations.Webhook, request: Request\n) -> tuple[dict, str]:",
        "successors": [
          9
        ]
      },
      {
        "id": 9,
        "start_line": 27,
        "end_line": 28,
        "label": "payload = await request.json()\nevent_type = CompassWebhookType.TRANSCRIPTION  # currently the only type",
        "successors": [
          10
        ]
      },
      {
        "id": 10,
        "start_line": 30,
        "end_line": 30,
        "label": "return payload, event_type",
        "successors": []
      }
    ]
  },
  "code_length": 30
}