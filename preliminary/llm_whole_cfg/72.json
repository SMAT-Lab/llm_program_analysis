{
  "source_file": "72.py",
  "cfg": {
    "blocks": [
      {
        "id": 1,
        "start_line": 1,
        "end_line": 3,
        "label": "import json\nfrom enum import Enum\nfrom typing import Any",
        "successors": [
          2
        ]
      },
      {
        "id": 2,
        "start_line": 5,
        "end_line": 7,
        "label": "from backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema\nfrom backend.data.model import SchemaField\nfrom backend.util.request import requests",
        "successors": [
          3
        ]
      },
      {
        "id": 3,
        "start_line": 10,
        "end_line": 17,
        "label": "class HttpMethod(Enum):\n    GET = \"GET\"\n    POST = \"POST\"\n    PUT = \"PUT\"\n    DELETE = \"DELETE\"\n    PATCH = \"PATCH\"\n    OPTIONS = \"OPTIONS\"\n    HEAD = \"HEAD\"",
        "successors": [
          4
        ]
      },
      {
        "id": 4,
        "start_line": 20,
        "end_line": 42,
        "label": "class SendWebRequestBlock(Block):\n    class Input(BlockSchema):\n        url: str = SchemaField(\n            description=\"The URL to send the request to\",\n            placeholder=\"https://api.example.com\",\n        )\n        method: HttpMethod = SchemaField(\n            description=\"The HTTP method to use for the request\",\n            default=HttpMethod.POST,\n        )\n        headers: dict[str, str] = SchemaField(\n            description=\"The headers to include in the request\",\n            default={},\n        )\n        json_format: bool = SchemaField(\n            title=\"JSON format\",\n            description=\"Whether to send and receive body as JSON\",\n            default=True,\n        )\n        body: Any = SchemaField(\n            description=\"The body of the request\",\n            default=None,\n        )",
        "successors": [
          5
        ]
      },
      {
        "id": 5,
        "start_line": 44,
        "end_line": 47,
        "label": "class Output(BlockSchema):\n    response: object = SchemaField(description=\"The response from the server\")\n    client_error: object = SchemaField(description=\"The error on 4xx status codes\")\n    server_error: object = SchemaField(description=\"The error on 5xx status codes\")",
        "successors": [
          6
        ]
      },
      {
        "id": 6,
        "start_line": 49,
        "end_line": 56,
        "label": "def __init__(self):\n    super().__init__(\n        id=\"6595ae1f-b924-42cb-9a41-551a0611c4b4\",\n        description=\"This block makes an HTTP request to the given URL.\",\n        categories={BlockCategory.OUTPUT},\n        input_schema=SendWebRequestBlock.Input,\n        output_schema=SendWebRequestBlock.Output,\n    )",
        "successors": [
          7
        ]
      },
      {
        "id": 7,
        "start_line": 58,
        "end_line": 68,
        "label": "def run(self, input_data: Input, **kwargs) -> BlockOutput:\n    if isinstance(input_data.body, str):\n        input_data.body = json.loads(input_data.body)\n    response = requests.request(\n        input_data.method.value,\n        input_data.url,\n        headers=input_data.headers,\n        json=input_data.body if input_data.json_format else None,\n        data=input_data.body if not input_data.json_format else None,\n    )",
        "successors": [
          8
        ]
      },
      {
        "id": 8,
        "start_line": 69,
        "end_line": 69,
        "label": "result = response.json() if input_data.json_format else response.text",
        "successors": [
          9
        ]
      },
      {
        "id": 9,
        "start_line": 71,
        "end_line": 78,
        "label": "if response.status_code // 100 == 2:\n    yield \"response\", result\nelif response.status_code // 100 == 4:\n    yield \"client_error\", result\nelif response.status_code // 100 == 5:\n    yield \"server_error\", result\nelse:\n    raise ValueError(f\"Unexpected status code: {response.status_code}\")",
        "successors": []
      }
    ]
  },
  "code_length": 78
}