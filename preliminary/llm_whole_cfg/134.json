{
  "source_file": "134.py",
  "cfg": {
    "blocks": [
      {
        "id": 1,
        "start_line": 1,
        "end_line": 3,
        "label": "import json, import logging, from pathlib import Path",
        "successors": [
          2
        ]
      },
      {
        "id": 2,
        "start_line": 5,
        "end_line": 21,
        "label": "from pydantic import BaseModel, from backend.data.block import *, from backend.data.model import SchemaField, from ._auth import *",
        "successors": [
          3
        ]
      },
      {
        "id": 3,
        "start_line": 23,
        "end_line": 23,
        "label": "logger = logging.getLogger(__name__)",
        "successors": [
          4
        ]
      },
      {
        "id": 4,
        "start_line": 27,
        "end_line": 56,
        "label": "class GitHubTriggerBase:",
        "successors": [
          5
        ]
      },
      {
        "id": 5,
        "start_line": 57,
        "end_line": 57,
        "label": "yield \"triggered_by_user\", input_data.payload[\"sender\"]",
        "successors": [
          6
        ]
      },
      {
        "id": 6,
        "start_line": 60,
        "end_line": 155,
        "label": "class GithubPullRequestTriggerBlock(GitHubTriggerBase, Block):",
        "successors": [
          7
        ]
      },
      {
        "id": 7,
        "start_line": 152,
        "end_line": 155,
        "label": "yield from super().run(input_data, **kwargs), yield \"event\", input_data.payload[\"action\"], yield \"number\", input_data.payload[\"number\"], yield \"pull_request\", input_data.payload[\"pull_request\"], yield \"pull_request_url\", input_data.payload[\"pull_request\"][\"html_url\"]",
        "successors": []
      }
    ]
  },
  "code_length": 158
}