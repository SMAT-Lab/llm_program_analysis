{
    "type": "module",
    "start_token": 0,
    "end_token": 109,
    "label": "",
    "children": [
        {
            "type": "comment",
            "start_token": 0,
            "end_token": 7,
            "label": "# Knight Tour Intro: https://www.youtube.com/watch?v=ab_dY3dZFHM\n\nfrom __future__ import annotations\n\n\ndef get_valid_pos(position: tuple[int, int], n: int) -> list[tuple[int, int]]:\n    \"\"\"\n    Find all the valid positions a knight can move to from the current position.\n\n    >>> get_valid_pos((1, 3), 4)\n    [(2, 1), (0, 1), (3, 2)]\n    \"\"\"\n\n    y, x = position\n    positions = [\n        (y + 1, x + 2),\n        (y - 1, x + 2),\n        (y + 1, x - 2),\n        (y - 1, x - 2),\n        (y + 2, x + 1),\n        (y + 2, x - 1),\n        (y - 2, x + 1),\n        (y - 2, x - 1),\n    ]\n    permissible_positions = []\n\n    for inner_position in positions:\n        y_test, x_test = inner_position\n        if 0 <= y_test < n and 0 <= x_test < n:\n            permissible_positions.append(inner_position)\n\n    return permissible_positions\n\n\ndef is_complete(board: list[list[int]]) -> bool:\n    \"\"\"\n    Check if the board (matrix) has been completely filled with non-zero values.\n\n    >>> is_complete([[1]])\n    True\n\n    >>> is_complete([[1, 2], [3, 0]])\n    False\n    \"\"\"\n\n    return not any(elem == 0 for row in board for elem in row)\n\n\ndef open_knight_tour_helper(\n    board: list[list[int]], pos: tuple[int, int], curr: int\n) -> bool:\n    \"\"\"\n    Helper function to solve knight tour problem.\n    \"\"\"\n\n    if is_complete(board):\n        return True\n\n    for position in get_valid_pos(pos, len(board)):\n        y, x = position\n\n        if board[y][x] == 0:\n            board[y][x] = curr + 1\n            if open_knight_tour_helper(board, position, curr + 1):\n                return True\n            board[y][x] = 0\n\n    return False\n\n\ndef open_knight_tour(n: int) -> list[list[int]]:\n    \"\"\"\n    Find the solution for the knight tour problem for a board of size n. Raises\n    ValueError if the tour cannot be performed for the given size.\n\n    >>> open_knight_tour(1)\n    [[1]]\n\n    >>> open_knight_tour(2)\n    Traceback (most recent call last):\n        ...\n    ValueError: Open Knight Tour cannot be performed on a board of size 2\n    \"\"\"\n\n    board = [[0 for i in range(n)] for j in range(n)]\n\n    for i in range(n):\n        for j in range(n):\n            board[i][j] = 1\n            if open_knight_tour_helper(board, (i, j), 1):\n                return board\n            board[i][j] = 0\n\n    msg = f\"Open Knight Tour cannot be performed on a board of size {n}\"\n    raise ValueError(msg)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()\n",
            "children": []
        },
        {
            "type": "future_import_statement",
            "start_token": 8,
            "end_token": 11,
            "label": "",
            "children": [
                {
                    "type": "import_prefix",
                    "start_token": 8,
                    "end_token": 9,
                    "label": "",
                    "children": []
                },
                {
                    "type": "dotted_name",
                    "start_token": 10,
                    "end_token": 11,
                    "label": "",
                    "children": []
                }
            ]
        },
        {
            "type": "function_definition",
            "start_token": 13,
            "end_token": 41,
            "label": "",
            "children": [
                {
                    "type": "parameters",
                    "start_token": 14,
                    "end_token": 17,
                    "label": "",
                    "children": []
                },
                {
                    "type": "block",
                    "start_token": 18,
                    "end_token": 41,
                    "label": "",
                    "children": [
                        {
                            "type": "assignment",
                            "start_token": 19,
                            "end_token": 20,
                            "label": "",
                            "children": []
                        },
                        {
                            "type": "assignment",
                            "start_token": 21,
                            "end_token": 41,
                            "label": "",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "start_token": 43,
            "end_token": 55,
            "label": "",
            "children": [
                {
                    "type": "parameters",
                    "start_token": 44,
                    "end_token": 45,
                    "label": "",
                    "children": []
                },
                {
                    "type": "block",
                    "start_token": 46,
                    "end_token": 55,
                    "label": "",
                    "children": [
                        {
                            "type": "return_statement",
                            "start_token": 47,
                            "end_token": 54,
                            "label": "",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "start_token": 57,
            "end_token": 84,
            "label": "",
            "children": [
                {
                    "type": "parameters",
                    "start_token": 58,
                    "end_token": 61,
                    "label": "",
                    "children": []
                },
                {
                    "type": "block",
                    "start_token": 62,
                    "end_token": 84,
                    "label": "",
                    "children": [
                        {
                            "type": "if_statement",
                            "start_token": 63,
                            "end_token": 66,
                            "label": "",
                            "children": [
                                {
                                    "type": "block",
                                    "start_token": 64,
                                    "end_token": 66,
                                    "label": "",
                                    "children": [
                                        {
                                            "type": "return_statement",
                                            "start_token": 65,
                                            "end_token": 66,
                                            "label": "",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "for_statement",
                            "start_token": 67,
                            "end_token": 83,
                            "label": "",
                            "children": [
                                {
                                    "type": "for_in_clause",
                                    "start_token": 67,
                                    "end_token": 68,
                                    "label": "",
                                    "children": []
                                },
                                {
                                    "type": "block",
                                    "start_token": 69,
                                    "end_token": 83,
                                    "label": "",
                                    "children": [
                                        {
                                            "type": "if_statement",
                                            "start_token": 70,
                                            "end_token": 74,
                                            "label": "",
                                            "children": [
                                                {
                                                    "type": "block",
                                                    "start_token": 71,
                                                    "end_token": 74,
                                                    "label": "",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "start_token": 72,
                                                            "end_token": 73,
                                                            "label": "",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "if_statement",
                                                            "start_token": 73,
                                                            "end_token": 74,
                                                            "label": "",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 75,
                                            "end_token": 76,
                                            "label": "",
                                            "children": []
                                        },
                                        {
                                            "type": "continue_statement",
                                            "start_token": 77,
                                            "end_token": 78,
                                            "label": "",
                                            "children": []
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 79,
                                            "end_token": 80,
                                            "label": "",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "start_token": 86,
            "end_token": 108,
            "label": "",
            "children": [
                {
                    "type": "parameters",
                    "start_token": 87,
                    "end_token": 88,
                    "label": "",
                    "children": []
                },
                {
                    "type": "block",
                    "start_token": 89,
                    "end_token": 108,
                    "label": "",
                    "children": [
                        {
                            "type": "assignment",
                            "start_token": 90,
                            "end_token": 92,
                            "label": "",
                            "children": []
                        },
                        {
                            "type": "for_statement",
                            "start_token": 93,
                            "end_token": 107,
                            "label": "",
                            "children": [
                                {
                                    "type": "for_in_clause",
                                    "start_token": 93,
                                    "end_token": 95,
                                    "label": "",
                                    "children": []
                                },
                                {
                                    "type": "block",
                                    "start_token": 96,
                                    "end_token": 107,
                                    "label": "",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "start_token": 96,
                                            "end_token": 97,
                                            "label": "",
                                            "children": []
                                        },
                                        {
                                            "type": "if_statement",
                                            "start_token": 97,
                                            "end_token": 101,
                                            "label": "",
                                            "children": [
                                                {
                                                    "type": "block",
                                                    "start_token": 98,
                                                    "end_token": 101,
                                                    "label": "",
                                                    "children": [
                                                        {
                                                            "type": "return_statement",
                                                            "start_token": 99,
                                                            "end_token": 100,
                                                            "label": "",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 102,
                                            "end_token": 103,
                                            "label": "",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "if_statement",
            "start_token": 110,
            "end_token": 113,
            "label": "",
            "children": [
                {
                    "type": "block",
                    "start_token": 111,
                    "end_token": 113,
                    "label": "",
                    "children": [
                        {
                            "type": "expression_statement",
                            "start_token": 112,
                            "end_token": 113,
                            "label": "",
                            "children": []
                        }
                    ]
                }
            ]
        }
    ]
}