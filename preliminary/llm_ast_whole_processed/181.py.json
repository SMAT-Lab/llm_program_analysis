{
    "type": "module",
    "start_token": 0,
    "end_token": 594,
    "label": "import logging\nimport secrets\nfrom abc import ABC, abstractmethod\nfrom typing import ClassVar, Generic, Optional, TypeVar\nfrom uuid import uuid4\n\nfrom fastapi import Request\nfrom strenum import StrEnum\n\nfrom backend.data import integrations\nfrom backend.data.model import Credentials\nfrom backend.integrations.providers import ProviderName\nfrom backend.integrations.webhooks.utils import webhook_ingress_url\nfrom backend.util.exceptions import MissingConfigError\nfrom backend.util.settings import Config\n\nlogger = logging.getLogger(__name__)\napp_config = Config()\n\nWT = TypeVar(\"WT\", bound=StrEnum)\n\n\nclass BaseWebhooksManager(ABC, Generic[WT]):\n    # --8<-- [start:BaseWebhooksManager1]\n    PROVIDER_NAME: ClassVar[ProviderName]\n    # --8<-- [end:BaseWebhooksManager1]\n\n    WebhookType: WT\n\n    async def get_suitable_auto_webhook(\n        self,\n        user_id: str,\n        credentials: Credentials,\n        webhook_type: WT,\n        resource: str,\n        events: list[str],\n    ) -> integrations.Webhook:\n        if not app_config.platform_base_url:\n            raise MissingConfigError(\n                \"PLATFORM_BASE_URL must be set to use Webhook functionality\"\n            )\n\n        if webhook := await integrations.find_webhook_by_credentials_and_props(\n            credentials.id, webhook_type, resource, events\n        ):\n            return webhook\n        return await self._create_webhook(\n            user_id, webhook_type, events, resource, credentials\n        )\n\n    async def get_manual_webhook(\n        self,\n        user_id: str,\n        graph_id: str,\n        webhook_type: WT,\n        events: list[str],\n    ):\n        if current_webhook := await integrations.find_webhook_by_graph_and_props(\n            graph_id, self.PROVIDER_NAME, webhook_type, events\n        ):\n            return current_webhook\n        return await self._create_webhook(\n            user_id,\n            webhook_type,\n            events,\n            register=False,\n        )\n\n    async def prune_webhook_if_dangling(\n        self, webhook_id: str, credentials: Optional[Credentials]\n    ) -> bool:\n        webhook = await integrations.get_webhook(webhook_id)\n        if webhook.attached_nodes is None:\n            raise ValueError(\"Error retrieving webhook including attached nodes\")\n        if webhook.attached_nodes:\n            # Don't prune webhook if in use\n            return False\n\n        if credentials:\n            await self._deregister_webhook(webhook, credentials)\n        await integrations.delete_webhook(webhook.id)\n        return True\n\n    # --8<-- [start:BaseWebhooksManager3]\n    @classmethod\n    @abstractmethod\n    async def validate_payload(\n        cls, webhook: integrations.Webhook, request: Request\n    ) -> tuple[dict, str]:\n        \"\"\"\n        Validates an incoming webhook request and returns its payload and type.\n\n        Params:\n            webhook: Object representing the configured webhook and its properties in our system.\n            request: Incoming FastAPI `Request`\n\n        Returns:\n            dict: The validated payload\n            str: The event type associated with the payload\n        \"\"\"\n\n    # --8<-- [end:BaseWebhooksManager3]\n\n    # --8<-- [start:BaseWebhooksManager5]\n    async def trigger_ping(\n        self, webhook: integrations.Webhook, credentials: Credentials | None\n    ) -> None:\n        \"\"\"\n        Triggers a ping to the given webhook.\n\n        Raises:\n            NotImplementedError: if the provider doesn't support pinging\n        \"\"\"\n        # --8<-- [end:BaseWebhooksManager5]\n        raise NotImplementedError(f\"{self.__class__.__name__} doesn't support pinging\")\n\n    # --8<-- [start:BaseWebhooksManager2]\n    @abstractmethod\n    async def _register_webhook(\n        self,\n        credentials: Credentials,\n        webhook_type: WT,\n        resource: str,\n        events: list[str],\n        ingress_url: str,\n        secret: str,\n    ) -> tuple[str, dict]:\n        \"\"\"\n        Registers a new webhook with the provider.\n\n        Params:\n            credentials: The credentials with which to create the webhook\n            webhook_type: The provider-specific webhook type to create\n            resource: The resource to receive events for\n            events: The events to subscribe to\n            ingress_url: The ingress URL for webhook payloads\n            secret: Secret used to verify webhook payloads\n\n        Returns:\n            str: Webhook ID assigned by the provider\n            config: Provider-specific configuration for the webhook\n        \"\"\"\n        ...\n\n    # --8<-- [end:BaseWebhooksManager2]\n\n    # --8<-- [start:BaseWebhooksManager4]\n    @abstractmethod\n    async def _deregister_webhook(\n        self, webhook: integrations.Webhook, credentials: Credentials\n    ) -> None: ...\n\n    # --8<-- [end:BaseWebhooksManager4]\n\n    async def _create_webhook(\n        self,\n        user_id: str,\n        webhook_type: WT,\n        events: list[str],\n        resource: str = \"\",\n        credentials: Optional[Credentials] = None,\n        register: bool = True,\n    ) -> integrations.Webhook:\n        if not app_config.platform_base_url:\n            raise MissingConfigError(\n                \"PLATFORM_BASE_URL must be set to use Webhook functionality\"\n            )\n\n        id = str(uuid4())\n        secret = secrets.token_hex(32)\n        provider_name = self.PROVIDER_NAME\n        ingress_url = webhook_ingress_url(provider_name=provider_name, webhook_id=id)\n        if register:\n            if not credentials:\n                raise TypeError(\"credentials are required if register = True\")\n            provider_webhook_id, config = await self._register_webhook(\n                credentials, webhook_type, resource, events, ingress_url, secret\n            )\n        else:\n            provider_webhook_id, config = \"\", {}\n\n        return await integrations.create_webhook(\n            integrations.Webhook(\n                id=id,\n                user_id=user_id,\n                provider=provider_name,\n                credentials_id=credentials.id if credentials else \"\",\n                webhook_type=webhook_type,\n                resource=resource,\n                events=events,\n                provider_webhook_id=provider_webhook_id,\n                config=config,\n                secret=secret,\n            )\n        )\n",
    "children": [
        {
            "type": "import_statement",
            "start_token": 0,
            "end_token": 1,
            "label": "import logging",
            "children": [
                {
                    "type": "identifier",
                    "start_token": 0,
                    "end_token": 0,
                    "label": "import",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 1,
                    "end_token": 1,
                    "label": "logging",
                    "children": []
                }
            ]
        },
        {
            "type": "import_statement",
            "start_token": 3,
            "end_token": 4,
            "label": "import secrets",
            "children": [
                {
                    "type": "identifier",
                    "start_token": 3,
                    "end_token": 3,
                    "label": "import",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 4,
                    "end_token": 4,
                    "label": "secrets",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 6,
            "end_token": 11,
            "label": "from abc import ABC, abstractmethod",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 7,
                    "end_token": 7,
                    "label": "abc",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 8,
                    "end_token": 8,
                    "label": "import",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 9,
                    "end_token": 9,
                    "label": "ABC",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 11,
                    "end_token": 11,
                    "label": "abstractmethod",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 13,
            "end_token": 22,
            "label": "from typing import ClassVar, Generic, Optional, TypeVar",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 14,
                    "end_token": 14,
                    "label": "typing",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 16,
                    "end_token": 16,
                    "label": "ClassVar",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 18,
                    "end_token": 18,
                    "label": "Generic",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 20,
                    "end_token": 20,
                    "label": "Optional",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 22,
                    "end_token": 22,
                    "label": "TypeVar",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 24,
            "end_token": 27,
            "label": "from uuid import uuid4",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 25,
                    "end_token": 25,
                    "label": "uuid",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 27,
                    "end_token": 27,
                    "label": "uuid4",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 30,
            "end_token": 33,
            "label": "from fastapi import Request",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 31,
                    "end_token": 31,
                    "label": "fastapi",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 33,
                    "end_token": 33,
                    "label": "Request",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 35,
            "end_token": 38,
            "label": "from strenum import StrEnum",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 36,
                    "end_token": 36,
                    "label": "strenum",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 38,
                    "end_token": 38,
                    "label": "StrEnum",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 41,
            "end_token": 46,
            "label": "from backend.data import integrations",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 42,
                    "end_token": 45,
                    "label": "backend.data import",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 46,
                    "end_token": 46,
                    "label": "integrations",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 48,
            "end_token": 55,
            "label": "from backend.data.model import Credentials",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 49,
                    "end_token": 54,
                    "label": "backend.data.model import",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 55,
                    "end_token": 55,
                    "label": "Credentials",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 57,
            "end_token": 64,
            "label": "from backend.integrations.providers import ProviderName",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 58,
                    "end_token": 63,
                    "label": "backend.integrations.providers import",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 64,
                    "end_token": 64,
                    "label": "ProviderName",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 66,
            "end_token": 75,
            "label": "from backend.integrations.webhooks.utils import webhook_ingress_url",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 67,
                    "end_token": 73,
                    "label": "backend.integrations.webhooks.utils",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 75,
                    "end_token": 75,
                    "label": "webhook_ingress_url",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 77,
            "end_token": 84,
            "label": "from backend.util.exceptions import MissingConfigError",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 78,
                    "end_token": 82,
                    "label": "backend.util.exceptions",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 84,
                    "end_token": 84,
                    "label": "MissingConfigError",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 86,
            "end_token": 93,
            "label": "from backend.util.settings import Config",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 87,
                    "end_token": 91,
                    "label": "backend.util.settings",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 93,
                    "end_token": 93,
                    "label": "Config",
                    "children": []
                }
            ]
        },
        {
            "type": "assignment",
            "start_token": 96,
            "end_token": 103,
            "label": "logger = logging.getLogger(__name__)",
            "children": [
                {
                    "type": "identifier",
                    "start_token": 96,
                    "end_token": 96,
                    "label": "logger",
                    "children": []
                },
                {
                    "type": "attribute",
                    "start_token": 98,
                    "end_token": 102,
                    "label": "logging.getLogger(__name__",
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 98,
                            "end_token": 98,
                            "label": "logging",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "start_token": 100,
                            "end_token": 100,
                            "label": "getLogger",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "assignment",
            "start_token": 105,
            "end_token": 109,
            "label": "app_config = Config()",
            "children": [
                {
                    "type": "identifier",
                    "start_token": 105,
                    "end_token": 105,
                    "label": "app_config",
                    "children": []
                },
                {
                    "type": "call",
                    "start_token": 107,
                    "end_token": 109,
                    "label": "Config()",
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 107,
                            "end_token": 107,
                            "label": "Config",
                            "children": []
                        },
                        {
                            "type": "argument_list",
                            "start_token": 108,
                            "end_token": 109,
                            "label": "()",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "assignment",
            "start_token": 112,
            "end_token": 121,
            "label": "WT = TypeVar(\"WT\", bound=StrEnum)",
            "children": [
                {
                    "type": "identifier",
                    "start_token": 112,
                    "end_token": 112,
                    "label": "WT",
                    "children": []
                },
                {
                    "type": "call",
                    "start_token": 114,
                    "end_token": 121,
                    "label": "TypeVar(\"WT\", bound=StrEnum)",
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 114,
                            "end_token": 114,
                            "label": "TypeVar",
                            "children": []
                        },
                        {
                            "type": "argument_list",
                            "start_token": 115,
                            "end_token": 121,
                            "label": "(\"WT\", bound=StrEnum)",
                            "children": [
                                {
                                    "type": "string",
                                    "start_token": 115,
                                    "end_token": 116,
                                    "label": "(\"WT\"",
                                    "children": []
                                },
                                {
                                    "type": "keyword_argument",
                                    "start_token": 118,
                                    "end_token": 120,
                                    "label": "bound=StrEnum",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 118,
                                            "end_token": 118,
                                            "label": "bound",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "start_token": 120,
                                            "end_token": 120,
                                            "label": "StrEnum",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "class_definition",
            "start_token": 125,
            "end_token": 594,
            "label": "class BaseWebhooksManager(ABC, Generic[WT]):\n    # --8<-- [start:BaseWebhooksManager1]\n    PROVIDER_NAME: ClassVar[ProviderName]\n    # --8<-- [end:BaseWebhooksManager1]\n\n    WebhookType: WT\n\n    async def get_suitable_auto_webhook(\n        self,\n        user_id: str,\n        credentials: Credentials,\n        webhook_type: WT,\n        resource: str,\n        events: list[str],\n    ) -> integrations.Webhook:\n        if not app_config.platform_base_url:\n            raise MissingConfigError(\n                \"PLATFORM_BASE_URL must be set to use Webhook functionality\"\n            )\n\n        if webhook := await integrations.find_webhook_by_credentials_and_props(\n            credentials.id, webhook_type, resource, events\n        ):\n            return webhook\n        return await self._create_webhook(\n            user_id, webhook_type, events, resource, credentials\n        )\n\n    async def get_manual_webhook(\n        self,\n        user_id: str,\n        graph_id: str,\n        webhook_type: WT,\n        events: list[str],\n    ):\n        if current_webhook := await integrations.find_webhook_by_graph_and_props(\n            graph_id, self.PROVIDER_NAME, webhook_type, events\n        ):\n            return current_webhook\n        return await self._create_webhook(\n            user_id,\n            webhook_type,\n            events,\n            register=False,\n        )\n\n    async def prune_webhook_if_dangling(\n        self, webhook_id: str, credentials: Optional[Credentials]\n    ) -> bool:\n        webhook = await integrations.get_webhook(webhook_id)\n        if webhook.attached_nodes is None:\n            raise ValueError(\"Error retrieving webhook including attached nodes\")\n        if webhook.attached_nodes:\n            # Don't prune webhook if in use\n            return False\n\n        if credentials:\n            await self._deregister_webhook(webhook, credentials)\n        await integrations.delete_webhook(webhook.id)\n        return True\n\n    # --8<-- [start:BaseWebhooksManager3]\n    @classmethod\n    @abstractmethod\n    async def validate_payload(\n        cls, webhook: integrations.Webhook, request: Request\n    ) -> tuple[dict, str]:\n        \"\"\"\n        Validates an incoming webhook request and returns its payload and type.\n\n        Params:\n            webhook: Object representing the configured webhook and its properties in our system.\n            request: Incoming FastAPI `Request`\n\n        Returns:\n            dict: The validated payload\n            str: The event type associated with the payload\n        \"\"\"\n\n    # --8<-- [end:BaseWebhooksManager3]\n\n    # --8<-- [start:BaseWebhooksManager5]\n    async def trigger_ping(\n        self, webhook: integrations.Webhook, credentials: Credentials | None\n    ) -> None:\n        \"\"\"\n        Triggers a ping to the given webhook.\n\n        Raises:\n            NotImplementedError: if the provider doesn't support pinging\n        \"\"\"\n        # --8<-- [end:BaseWebhooksManager5]\n        raise NotImplementedError(f\"{self.__class__.__name__} doesn't support pinging\")\n\n    # --8<-- [start:BaseWebhooksManager2]\n    @abstractmethod\n    async def _register_webhook(\n        self,\n        credentials: Credentials,\n        webhook_type: WT,\n        resource: str,\n        events: list[str],\n        ingress_url: str,\n        secret: str,\n    ) -> tuple[str, dict]:\n        \"\"\"\n        Registers a new webhook with the provider.\n\n        Params:\n            credentials: The credentials with which to create the webhook\n            webhook_type: The provider-specific webhook type to create\n            resource: The resource to receive events for\n            events: The events to subscribe to\n            ingress_url: The ingress URL for webhook payloads\n            secret: Secret used to verify webhook payloads\n\n        Returns:\n            str: Webhook ID assigned by the provider\n            config: Provider-specific configuration for the webhook\n        \"\"\"\n        ...\n\n    # --8<-- [end:BaseWebhooksManager2]\n\n    # --8<-- [start:BaseWebhooksManager4]\n    @abstractmethod\n    async def _deregister_webhook(\n        self, webhook: integrations.Webhook, credentials: Credentials\n    ) -> None: ...\n\n    # --8<-- [end:BaseWebhooksManager4]\n\n    async def _create_webhook(\n        self,\n        user_id: str,\n        webhook_type: WT,\n        events: list[str],\n        resource: str = \"\",\n        credentials: Optional[Credentials] = None,\n        register: bool = True,\n    ) -> integrations.Webhook:\n        if not app_config.platform_base_url:\n            raise MissingConfigError(\n                \"PLATFORM_BASE_URL must be set to use Webhook functionality\"\n            )\n\n        id = str(uuid4())\n        secret = secrets.token_hex(32)\n        provider_name = self.PROVIDER_NAME\n        ingress_url = webhook_ingress_url(provider_name=provider_name, webhook_id=id)\n        if register:\n            if not credentials:\n                raise TypeError(\"credentials are required if register = True\")\n            provider_webhook_id, config = await self._register_webhook(\n                credentials, webhook_type, resource, events, ingress_url, secret\n            )\n        else:\n            provider_webhook_id, config = \"\", {}\n\n        return await integrations.create_webhook(\n            integrations.Webhook(\n                id=id,\n                user_id=user_id,\n                provider=provider_name,\n                credentials_id=credentials.id if credentials else \"\",\n                webhook_type=webhook_type,\n                resource=resource,\n                events=events,\n                provider_webhook_id=provider_webhook_id,\n                config=config,\n                secret=secret,\n            )\n        )\n",
            "children": [
                {
                    "type": "identifier",
                    "start_token": 125,
                    "end_token": 125,
                    "label": "class",
                    "children": []
                },
                {
                    "type": "generic_type",
                    "start_token": 127,
                    "end_token": 133,
                    "label": "(ABC, Generic[WT]",
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 127,
                            "end_token": 128,
                            "label": "(ABC",
                            "children": []
                        },
                        {
                            "type": "type_parameter",
                            "start_token": 131,
                            "end_token": 133,
                            "label": "[WT]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 133,
                                    "end_token": 133,
                                    "label": "]",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "start_token": 135,
                    "end_token": 594,
                    "label": ":\n    # --8<-- [start:BaseWebhooksManager1]\n    PROVIDER_NAME: ClassVar[ProviderName]\n    # --8<-- [end:BaseWebhooksManager1]\n\n    WebhookType: WT\n\n    async def get_suitable_auto_webhook(\n        self,\n        user_id: str,\n        credentials: Credentials,\n        webhook_type: WT,\n        resource: str,\n        events: list[str],\n    ) -> integrations.Webhook:\n        if not app_config.platform_base_url:\n            raise MissingConfigError(\n                \"PLATFORM_BASE_URL must be set to use Webhook functionality\"\n            )\n\n        if webhook := await integrations.find_webhook_by_credentials_and_props(\n            credentials.id, webhook_type, resource, events\n        ):\n            return webhook\n        return await self._create_webhook(\n            user_id, webhook_type, events, resource, credentials\n        )\n\n    async def get_manual_webhook(\n        self,\n        user_id: str,\n        graph_id: str,\n        webhook_type: WT,\n        events: list[str],\n    ):\n        if current_webhook := await integrations.find_webhook_by_graph_and_props(\n            graph_id, self.PROVIDER_NAME, webhook_type, events\n        ):\n            return current_webhook\n        return await self._create_webhook(\n            user_id,\n            webhook_type,\n            events,\n            register=False,\n        )\n\n    async def prune_webhook_if_dangling(\n        self, webhook_id: str, credentials: Optional[Credentials]\n    ) -> bool:\n        webhook = await integrations.get_webhook(webhook_id)\n        if webhook.attached_nodes is None:\n            raise ValueError(\"Error retrieving webhook including attached nodes\")\n        if webhook.attached_nodes:\n            # Don't prune webhook if in use\n            return False\n\n        if credentials:\n            await self._deregister_webhook(webhook, credentials)\n        await integrations.delete_webhook(webhook.id)\n        return True\n\n    # --8<-- [start:BaseWebhooksManager3]\n    @classmethod\n    @abstractmethod\n    async def validate_payload(\n        cls, webhook: integrations.Webhook, request: Request\n    ) -> tuple[dict, str]:\n        \"\"\"\n        Validates an incoming webhook request and returns its payload and type.\n\n        Params:\n            webhook: Object representing the configured webhook and its properties in our system.\n            request: Incoming FastAPI `Request`\n\n        Returns:\n            dict: The validated payload\n            str: The event type associated with the payload\n        \"\"\"\n\n    # --8<-- [end:BaseWebhooksManager3]\n\n    # --8<-- [start:BaseWebhooksManager5]\n    async def trigger_ping(\n        self, webhook: integrations.Webhook, credentials: Credentials | None\n    ) -> None:\n        \"\"\"\n        Triggers a ping to the given webhook.\n\n        Raises:\n            NotImplementedError: if the provider doesn't support pinging\n        \"\"\"\n        # --8<-- [end:BaseWebhooksManager5]\n        raise NotImplementedError(f\"{self.__class__.__name__} doesn't support pinging\")\n\n    # --8<-- [start:BaseWebhooksManager2]\n    @abstractmethod\n    async def _register_webhook(\n        self,\n        credentials: Credentials,\n        webhook_type: WT,\n        resource: str,\n        events: list[str],\n        ingress_url: str,\n        secret: str,\n    ) -> tuple[str, dict]:\n        \"\"\"\n        Registers a new webhook with the provider.\n\n        Params:\n            credentials: The credentials with which to create the webhook\n            webhook_type: The provider-specific webhook type to create\n            resource: The resource to receive events for\n            events: The events to subscribe to\n            ingress_url: The ingress URL for webhook payloads\n            secret: Secret used to verify webhook payloads\n\n        Returns:\n            str: Webhook ID assigned by the provider\n            config: Provider-specific configuration for the webhook\n        \"\"\"\n        ...\n\n    # --8<-- [end:BaseWebhooksManager2]\n\n    # --8<-- [start:BaseWebhooksManager4]\n    @abstractmethod\n    async def _deregister_webhook(\n        self, webhook: integrations.Webhook, credentials: Credentials\n    ) -> None: ...\n\n    # --8<-- [end:BaseWebhooksManager4]\n\n    async def _create_webhook(\n        self,\n        user_id: str,\n        webhook_type: WT,\n        events: list[str],\n        resource: str = \"\",\n        credentials: Optional[Credentials] = None,\n        register: bool = True,\n    ) -> integrations.Webhook:\n        if not app_config.platform_base_url:\n            raise MissingConfigError(\n                \"PLATFORM_BASE_URL must be set to use Webhook functionality\"\n            )\n\n        id = str(uuid4())\n        secret = secrets.token_hex(32)\n        provider_name = self.PROVIDER_NAME\n        ingress_url = webhook_ingress_url(provider_name=provider_name, webhook_id=id)\n        if register:\n            if not credentials:\n                raise TypeError(\"credentials are required if register = True\")\n            provider_webhook_id, config = await self._register_webhook(\n                credentials, webhook_type, resource, events, ingress_url, secret\n            )\n        else:\n            provider_webhook_id, config = \"\", {}\n\n        return await integrations.create_webhook(\n            integrations.Webhook(\n                id=id,\n                user_id=user_id,\n                provider=provider_name,\n                credentials_id=credentials.id if credentials else \"\",\n                webhook_type=webhook_type,\n                resource=resource,\n                events=events,\n                provider_webhook_id=provider_webhook_id,\n                config=config,\n                secret=secret,\n            )\n        )\n",
                    "children": [
                        {
                            "type": "comment",
                            "start_token": 137,
                            "end_token": 149,
                            "label": "# --8<-- [start:BaseWebhooksManager1]\n",
                            "children": [
                                {
                                    "type": "string",
                                    "start_token": 140,
                                    "end_token": 147,
                                    "label": "8<-- [start:BaseWebhooksManager1",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "assignment",
                            "start_token": 150,
                            "end_token": 155,
                            "label": "PROVIDER_NAME: ClassVar[ProviderName]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 150,
                                    "end_token": 150,
                                    "label": "PROVIDER_NAME",
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "start_token": 154,
                                    "end_token": 155,
                                    "label": "ProviderName]",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "start_token": 157,
                            "end_token": 169,
                            "label": "# --8<-- [end:BaseWebhooksManager1]\n",
                            "children": [
                                {
                                    "type": "string",
                                    "start_token": 160,
                                    "end_token": 167,
                                    "label": "8<-- [end:BaseWebhooksManager1",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "assignment",
                            "start_token": 171,
                            "end_token": 173,
                            "label": "WebhookType: WT",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 171,
                                    "end_token": 171,
                                    "label": "WebhookType",
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "start_token": 173,
                                    "end_token": 173,
                                    "label": "WT",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "async_function",
                            "start_token": 176,
                            "end_token": 279,
                            "label": "async def get_suitable_auto_webhook(\n        self,\n        user_id: str,\n        credentials: Credentials,\n        webhook_type: WT,\n        resource: str,\n        events: list[str],\n    ) -> integrations.Webhook:\n        if not app_config.platform_base_url:\n            raise MissingConfigError(\n                \"PLATFORM_BASE_URL must be set to use Webhook functionality\"\n            )\n\n        if webhook := await integrations.find_webhook_by_credentials_and_props(\n            credentials.id, webhook_type, resource, events\n        ):\n            return webhook\n        return await self._create_webhook(\n            user_id, webhook_type, events, resource, credentials\n        )",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 178,
                                    "end_token": 178,
                                    "label": "get_suitable_auto_webhook",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "start_token": 179,
                                    "end_token": 212,
                                    "label": "(\n        self,\n        user_id: str,\n        credentials: Credentials,\n        webhook_type: WT,\n        resource: str,\n        events: list[str],\n    )",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 181,
                                            "end_token": 181,
                                            "label": "self",
                                            "children": []
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "start_token": 184,
                                            "end_token": 186,
                                            "label": "user_id: str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 184,
                                                    "end_token": 184,
                                                    "label": "user_id",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "start_token": 186,
                                                    "end_token": 186,
                                                    "label": "str",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "start_token": 189,
                                            "end_token": 191,
                                            "label": "credentials: Credentials",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 189,
                                                    "end_token": 189,
                                                    "label": "credentials",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "start_token": 191,
                                                    "end_token": 191,
                                                    "label": "Credentials",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "start_token": 194,
                                            "end_token": 196,
                                            "label": "webhook_type: WT",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 194,
                                                    "end_token": 194,
                                                    "label": "webhook_type",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "start_token": 196,
                                                    "end_token": 196,
                                                    "label": "WT",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "start_token": 199,
                                            "end_token": 201,
                                            "label": "resource: str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 199,
                                                    "end_token": 199,
                                                    "label": "resource",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "start_token": 201,
                                                    "end_token": 201,
                                                    "label": "str",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "start_token": 204,
                                            "end_token": 209,
                                            "label": "events: list[str]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 204,
                                                    "end_token": 204,
                                                    "label": "events",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "start_token": 207,
                                                    "end_token": 209,
                                                    "label": "[str]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 208,
                                                            "end_token": 208,
                                                            "label": "str",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "return_type",
                                    "start_token": 213,
                                    "end_token": 218,
                                    "label": "-> integrations.Webhook:",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 215,
                                            "end_token": 217,
                                            "label": "integrations.Webhook",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "start_token": 217,
                                            "end_token": 217,
                                            "label": "Webhook",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "start_token": 219,
                                    "end_token": 279,
                                    "label": "\n        if not app_config.platform_base_url:\n            raise MissingConfigError(\n                \"PLATFORM_BASE_URL must be set to use Webhook functionality\"\n            )\n\n        if webhook := await integrations.find_webhook_by_credentials_and_props(\n            credentials.id, webhook_type, resource, events\n        ):\n            return webhook\n        return await self._create_webhook(\n            user_id, webhook_type, events, resource, credentials\n        )",
                                    "children": [
                                        {
                                            "type": "if_statement",
                                            "start_token": 220,
                                            "end_token": 233,
                                            "label": "if not app_config.platform_base_url:\n            raise MissingConfigError(\n                \"PLATFORM_BASE_URL must be set to use Webhook functionality\"\n            )",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "start_token": 222,
                                                    "end_token": 224,
                                                    "label": "app_config.platform_base_url",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 222,
                                                            "end_token": 222,
                                                            "label": "app_config",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 224,
                                                            "end_token": 224,
                                                            "label": "platform_base_url",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "raise_statement",
                                                    "start_token": 227,
                                                    "end_token": 233,
                                                    "label": "raise MissingConfigError(\n                \"PLATFORM_BASE_URL must be set to use Webhook functionality\"\n            )",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 228,
                                                            "end_token": 228,
                                                            "label": "MissingConfigError",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 229,
                                                            "end_token": 232,
                                                            "label": "(\n                \"PLATFORM_BASE_URL must be set to use Webhook functionality\"\n",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "start_token": 231,
                                                                    "end_token": 231,
                                                                    "label": "\"PLATFORM_BASE_URL must be set to use Webhook functionality\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "if_statement",
                                            "start_token": 236,
                                            "end_token": 261,
                                            "label": "if webhook := await integrations.find_webhook_by_credentials_and_props(\n            credentials.id, webhook_type, resource, events\n        ):\n            return webhook\n",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "start_token": 238,
                                                    "end_token": 260,
                                                    "label": ":= await integrations.find_webhook_by_credentials_and_props(\n            credentials.id, webhook_type, resource, events\n        ):\n            return webhook",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 238,
                                                            "end_token": 238,
                                                            "label": ":",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "await",
                                                            "start_token": 240,
                                                            "end_token": 255,
                                                            "label": "await integrations.find_webhook_by_credentials_and_props(\n            credentials.id, webhook_type, resource, events\n",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "start_token": 240,
                                                                    "end_token": 255,
                                                                    "label": "await integrations.find_webhook_by_credentials_and_props(\n            credentials.id, webhook_type, resource, events\n",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "start_token": 240,
                                                                            "end_token": 244,
                                                                            "label": "await integrations.find_webhook_by_credentials_and_props(",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 240,
                                                                                    "end_token": 240,
                                                                                    "label": "await",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 244,
                                                                                    "end_token": 244,
                                                                                    "label": "(",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "start_token": 245,
                                                                            "end_token": 255,
                                                                            "label": "\n            credentials.id, webhook_type, resource, events\n",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "start_token": 246,
                                                                                    "end_token": 248,
                                                                                    "label": "credentials.id",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 246,
                                                                                            "end_token": 246,
                                                                                            "label": "credentials",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 248,
                                                                                            "end_token": 248,
                                                                                            "label": "id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 249,
                                                                                    "end_token": 249,
                                                                                    "label": ",",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 251,
                                                                                    "end_token": 251,
                                                                                    "label": ",",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 253,
                                                                                    "end_token": 253,
                                                                                    "label": ",",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 255,
                                                                                    "end_token": 255,
                                                                                    "label": "\n",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "return_statement",
                                                    "start_token": 259,
                                                    "end_token": 261,
                                                    "label": "return webhook\n",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 260,
                                                            "end_token": 260,
                                                            "label": "webhook",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "return_statement",
                                            "start_token": 262,
                                            "end_token": 279,
                                            "label": "return await self._create_webhook(\n            user_id, webhook_type, events, resource, credentials\n        )",
                                            "children": [
                                                {
                                                    "type": "await",
                                                    "start_token": 263,
                                                    "end_token": 278,
                                                    "label": "await self._create_webhook(\n            user_id, webhook_type, events, resource, credentials\n",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "start_token": 263,
                                                            "end_token": 278,
                                                            "label": "await self._create_webhook(\n            user_id, webhook_type, events, resource, credentials\n",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "start_token": 264,
                                                                    "end_token": 266,
                                                                    "label": "self._create_webhook",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 264,
                                                                            "end_token": 264,
                                                                            "label": "self",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 266,
                                                                            "end_token": 266,
                                                                            "label": "_create_webhook",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "start_token": 267,
                                                                    "end_token": 278,
                                                                    "label": "(\n            user_id, webhook_type, events, resource, credentials\n",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 269,
                                                                            "end_token": 269,
                                                                            "label": "user_id",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 271,
                                                                            "end_token": 271,
                                                                            "label": "webhook_type",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 273,
                                                                            "end_token": 273,
                                                                            "label": "events",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 275,
                                                                            "end_token": 275,
                                                                            "label": "resource",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 277,
                                                                            "end_token": 277,
                                                                            "label": "credentials",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "async_function",
                            "start_token": 282,
                            "end_token": 363,
                            "label": "async def get_manual_webhook(\n        self,\n        user_id: str,\n        graph_id: str,\n        webhook_type: WT,\n        events: list[str],\n    ):\n        if current_webhook := await integrations.find_webhook_by_graph_and_props(\n            graph_id, self.PROVIDER_NAME, webhook_type, events\n        ):\n            return current_webhook\n        return await self._create_webhook(\n            user_id,\n            webhook_type,\n            events,\n            register=False,\n        )",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 284,
                                    "end_token": 284,
                                    "label": "get_manual_webhook",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "start_token": 285,
                                    "end_token": 313,
                                    "label": "(\n        self,\n        user_id: str,\n        graph_id: str,\n        webhook_type: WT,\n        events: list[str],\n    )",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 287,
                                            "end_token": 287,
                                            "label": "self",
                                            "children": []
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "start_token": 290,
                                            "end_token": 292,
                                            "label": "user_id: str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 290,
                                                    "end_token": 290,
                                                    "label": "user_id",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "start_token": 292,
                                                    "end_token": 292,
                                                    "label": "str",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "start_token": 295,
                                            "end_token": 297,
                                            "label": "graph_id: str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 295,
                                                    "end_token": 295,
                                                    "label": "graph_id",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "start_token": 297,
                                                    "end_token": 297,
                                                    "label": "str",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "start_token": 300,
                                            "end_token": 302,
                                            "label": "webhook_type: WT",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 300,
                                                    "end_token": 300,
                                                    "label": "webhook_type",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "start_token": 302,
                                                    "end_token": 302,
                                                    "label": "WT",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "start_token": 305,
                                            "end_token": 310,
                                            "label": "events: list[str]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 305,
                                                    "end_token": 305,
                                                    "label": "events",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "start_token": 308,
                                                    "end_token": 310,
                                                    "label": "[str]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 309,
                                                            "end_token": 309,
                                                            "label": "str",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "start_token": 314,
                                    "end_token": 363,
                                    "label": ":\n        if current_webhook := await integrations.find_webhook_by_graph_and_props(\n            graph_id, self.PROVIDER_NAME, webhook_type, events\n        ):\n            return current_webhook\n        return await self._create_webhook(\n            user_id,\n            webhook_type,\n            events,\n            register=False,\n        )",
                                    "children": [
                                        {
                                            "type": "if_statement",
                                            "start_token": 316,
                                            "end_token": 341,
                                            "label": "if current_webhook := await integrations.find_webhook_by_graph_and_props(\n            graph_id, self.PROVIDER_NAME, webhook_type, events\n        ):\n            return current_webhook\n",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "start_token": 318,
                                                    "end_token": 340,
                                                    "label": ":= await integrations.find_webhook_by_graph_and_props(\n            graph_id, self.PROVIDER_NAME, webhook_type, events\n        ):\n            return current_webhook",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 318,
                                                            "end_token": 318,
                                                            "label": ":",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "await",
                                                            "start_token": 320,
                                                            "end_token": 335,
                                                            "label": "await integrations.find_webhook_by_graph_and_props(\n            graph_id, self.PROVIDER_NAME, webhook_type, events\n",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "start_token": 320,
                                                                    "end_token": 335,
                                                                    "label": "await integrations.find_webhook_by_graph_and_props(\n            graph_id, self.PROVIDER_NAME, webhook_type, events\n",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "start_token": 320,
                                                                            "end_token": 324,
                                                                            "label": "await integrations.find_webhook_by_graph_and_props(",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 320,
                                                                                    "end_token": 320,
                                                                                    "label": "await",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 324,
                                                                                    "end_token": 324,
                                                                                    "label": "(",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "start_token": 325,
                                                                            "end_token": 335,
                                                                            "label": "\n            graph_id, self.PROVIDER_NAME, webhook_type, events\n",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 326,
                                                                                    "end_token": 326,
                                                                                    "label": "graph_id",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "start_token": 328,
                                                                                    "end_token": 330,
                                                                                    "label": "self.PROVIDER_NAME",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 328,
                                                                                            "end_token": 328,
                                                                                            "label": "self",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 330,
                                                                                            "end_token": 330,
                                                                                            "label": "PROVIDER_NAME",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 332,
                                                                                    "end_token": 332,
                                                                                    "label": "webhook_type",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 334,
                                                                                    "end_token": 334,
                                                                                    "label": "events",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "return_statement",
                                                    "start_token": 339,
                                                    "end_token": 341,
                                                    "label": "return current_webhook\n",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 340,
                                                            "end_token": 340,
                                                            "label": "current_webhook",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "return_statement",
                                            "start_token": 342,
                                            "end_token": 363,
                                            "label": "return await self._create_webhook(\n            user_id,\n            webhook_type,\n            events,\n            register=False,\n        )",
                                            "children": [
                                                {
                                                    "type": "await",
                                                    "start_token": 343,
                                                    "end_token": 362,
                                                    "label": "await self._create_webhook(\n            user_id,\n            webhook_type,\n            events,\n            register=False,\n",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "start_token": 343,
                                                            "end_token": 362,
                                                            "label": "await self._create_webhook(\n            user_id,\n            webhook_type,\n            events,\n            register=False,\n",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "start_token": 344,
                                                                    "end_token": 346,
                                                                    "label": "self._create_webhook",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 344,
                                                                            "end_token": 344,
                                                                            "label": "self",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 346,
                                                                            "end_token": 346,
                                                                            "label": "_create_webhook",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "start_token": 347,
                                                                    "end_token": 362,
                                                                    "label": "(\n            user_id,\n            webhook_type,\n            events,\n            register=False,\n",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 349,
                                                                            "end_token": 349,
                                                                            "label": "user_id",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 351,
                                                                            "end_token": 351,
                                                                            "label": "\n",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 353,
                                                                            "end_token": 353,
                                                                            "label": ",",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "start_token": 358,
                                                                            "end_token": 360,
                                                                            "label": "register=False",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 358,
                                                                                    "end_token": 358,
                                                                                    "label": "register",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "false",
                                                                                    "start_token": 360,
                                                                                    "end_token": 360,
                                                                                    "label": "False",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "async_function",
                            "start_token": 366,
                            "end_token": 426,
                            "label": "async def prune_webhook_if_dangling(\n        self, webhook_id: str, credentials: Optional[Credentials]\n    ) -> bool:\n        webhook = await integrations.get_webhook(webhook_id)\n        if webhook.attached_nodes is None:\n            raise ValueError(\"Error retrieving webhook including attached nodes\")\n        if webhook.attached_nodes:\n            # Don't prune webhook if in use\n            return False\n\n        if credentials:\n            await self._deregister_webhook(webhook, credentials)\n        await integrations.delete_webhook(webhook.id)\n        return True\n\n    # --8<-- [start:BaseWebhooksManager3]\n    @classmethod\n    @abstractmethod\n    async def validate_payload(\n        cls, webhook: integrations.Webhook, request: Request\n    ) -> tuple[dict, str]:\n        \"\"\"\n        Validates an incoming webhook request and returns its payload and type.\n\n        Params:\n            webhook: Object representing the configured webhook and its properties in our system.\n            request: Incoming FastAPI `Request`\n\n        Returns:\n            dict: The validated payload\n            str: The event type associated with the payload\n        \"\"\"\n\n    # --8<-- [end:BaseWebhooksManager3]\n\n    # --8<-- [start:BaseWebhooksManager5]\n    async def trigger_ping(\n        self, webhook: integrations.Webhook, credentials: Credentials | None\n    ) -> None:\n        \"\"\"\n        Triggers a ping to the given webhook.\n\n        Raises:\n            NotImplementedError: if the provider doesn't support pinging\n",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 368,
                                    "end_token": 368,
                                    "label": "prune_webhook_if_dangling",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "start_token": 369,
                                    "end_token": 384,
                                    "label": "(\n        self, webhook_id: str, credentials: Optional[Credentials]\n    )",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 371,
                                            "end_token": 371,
                                            "label": "self",
                                            "children": []
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "start_token": 374,
                                            "end_token": 376,
                                            "label": ": str,",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 374,
                                                    "end_token": 374,
                                                    "label": ":",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "start_token": 376,
                                                    "end_token": 376,
                                                    "label": ",",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "start_token": 378,
                                            "end_token": 383,
                                            "label": ": Optional[Credentials]\n",
                                            "children": [
                                                {
                                                    "type": "optional",
                                                    "start_token": 379,
                                                    "end_token": 383,
                                                    "label": "Optional[Credentials]\n",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 380,
                                                            "end_token": 381,
                                                            "label": "[Credentials",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "return_type",
                                    "start_token": 385,
                                    "end_token": 387,
                                    "label": "-> bool",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 387,
                                            "end_token": 387,
                                            "label": "bool",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "start_token": 388,
                                    "end_token": 426,
                                    "label": ":\n        webhook = await integrations.get_webhook(webhook_id)\n        if webhook.attached_nodes is None:\n            raise ValueError(\"Error retrieving webhook including attached nodes\")\n        if webhook.attached_nodes:\n            # Don't prune webhook if in use\n            return False\n\n        if credentials:\n            await self._deregister_webhook(webhook, credentials)\n        await integrations.delete_webhook(webhook.id)\n        return True\n\n    # --8<-- [start:BaseWebhooksManager3]\n    @classmethod\n    @abstractmethod\n    async def validate_payload(\n        cls, webhook: integrations.Webhook, request: Request\n    ) -> tuple[dict, str]:\n        \"\"\"\n        Validates an incoming webhook request and returns its payload and type.\n\n        Params:\n            webhook: Object representing the configured webhook and its properties in our system.\n            request: Incoming FastAPI `Request`\n\n        Returns:\n            dict: The validated payload\n            str: The event type associated with the payload\n        \"\"\"\n\n    # --8<-- [end:BaseWebhooksManager3]\n\n    # --8<-- [start:BaseWebhooksManager5]\n    async def trigger_ping(\n        self, webhook: integrations.Webhook, credentials: Credentials | None\n    ) -> None:\n        \"\"\"\n        Triggers a ping to the given webhook.\n\n        Raises:\n            NotImplementedError: if the provider doesn't support pinging\n",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "start_token": 390,
                                            "end_token": 398,
                                            "label": "webhook = await integrations.get_webhook(webhook_id)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 390,
                                                    "end_token": 390,
                                                    "label": "webhook",
                                                    "children": []
                                                },
                                                {
                                                    "type": "await",
                                                    "start_token": 392,
                                                    "end_token": 398,
                                                    "label": "await integrations.get_webhook(webhook_id)",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "start_token": 392,
                                                            "end_token": 398,
                                                            "label": "await integrations.get_webhook(webhook_id)",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "start_token": 392,
                                                                    "end_token": 394,
                                                                    "label": "await integrations.",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 392,
                                                                            "end_token": 392,
                                                                            "label": "await",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 394,
                                                                            "end_token": 394,
                                                                            "label": ".",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "start_token": 396,
                                                                    "end_token": 398,
                                                                    "label": "(webhook_id)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 397,
                                                                            "end_token": 397,
                                                                            "label": "webhook_id",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "if_statement",
                                            "start_token": 400,
                                            "end_token": 412,
                                            "label": "if webhook.attached_nodes is None:\n            raise ValueError(\"Error retrieving webhook including attached nodes\")",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "start_token": 402,
                                                    "end_token": 407,
                                                    "label": ".attached_nodes is None:\n",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 402,
                                                            "end_token": 402,
                                                            "label": ".",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 407,
                                                            "end_token": 407,
                                                            "label": "\n",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "raise_statement",
                                                    "start_token": 408,
                                                    "end_token": 412,
                                                    "label": "raise ValueError(\"Error retrieving webhook including attached nodes\")",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 409,
                                                            "end_token": 409,
                                                            "label": "ValueError",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 410,
                                                            "end_token": 411,
                                                            "label": "(\"Error retrieving webhook including attached nodes\"",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "start_token": 411,
                                                                    "end_token": 411,
                                                                    "label": "\"Error retrieving webhook including attached nodes\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "if_statement",
                                            "start_token": 414,
                                            "end_token": 419,
                                            "label": "if webhook.attached_nodes:\n",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "start_token": 416,
                                                    "end_token": 418,
                                                    "label": ".attached_nodes:",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 416,
                                                            "end_token": 416,
                                                            "label": ".",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 418,
                                                            "end_token": 418,
                                                            "label": ":",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "boolean_operator",
                                            "start_token": 422,
                                            "end_token": 426,
                                            "label": "'t prune webhook if in use\n            return False\n\n        if credentials:\n            await self._deregister_webhook(webhook, credentials)\n        await integrations.delete_webhook(webhook.id)\n        return True\n\n    # --8<-- [start:BaseWebhooksManager3]\n    @classmethod\n    @abstractmethod\n    async def validate_payload(\n        cls, webhook: integrations.Webhook, request: Request\n    ) -> tuple[dict, str]:\n        \"\"\"\n        Validates an incoming webhook request and returns its payload and type.\n\n        Params:\n            webhook: Object representing the configured webhook and its properties in our system.\n            request: Incoming FastAPI `Request`\n\n        Returns:\n            dict: The validated payload\n            str: The event type associated with the payload\n        \"\"\"\n\n    # --8<-- [end:BaseWebhooksManager3]\n\n    # --8<-- [start:BaseWebhooksManager5]\n    async def trigger_ping(\n        self, webhook: integrations.Webhook, credentials: Credentials | None\n    ) -> None:\n        \"\"\"\n        Triggers a ping to the given webhook.\n\n        Raises:\n            NotImplementedError: if the provider doesn't support pinging\n",
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "start_token": 421,
                                                    "end_token": 421,
                                                    "label": "Don",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "decorated_definition",
                            "start_token": 429,
                            "end_token": 437,
                            "label": "{self.__class__.__name__} doesn'",
                            "children": [
                                {
                                    "type": "decorator",
                                    "start_token": 429,
                                    "end_token": 429,
                                    "label": "{",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 430,
                                            "end_token": 430,
                                            "label": "self",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "function_definition",
                                    "start_token": 431,
                                    "end_token": 437,
                                    "label": ".__class__.__name__} doesn'",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 433,
                                            "end_token": 433,
                                            "label": ".",
                                            "children": []
                                        },
                                        {
                                            "type": "parameters",
                                            "start_token": 434,
                                            "end_token": 435,
                                            "label": "__name__}",
                                            "children": [
                                                {
                                                    "type": "typed_parameter",
                                                    "start_token": 435,
                                                    "end_token": 435,
                                                    "label": "}",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 435,
                                                            "end_token": 435,
                                                            "label": "}",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "start_token": 437,
                                    "end_token": 437,
                                    "label": "'",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "start_token": 420,
                            "end_token": 424,
                            "label": "# Don't prune webhook if in use\n            return False\n\n        if credentials:\n            await self._deregister_webhook(webhook, credentials)\n        await integrations.delete_webhook(webhook.id)\n        return True\n\n    # --8<-- [start:BaseWebhooksManager3]\n    @classmethod\n    @abstractmethod\n    async def validate_payload(\n        cls, webhook: integrations.Webhook, request: Request\n    ) -> tuple[dict, str]:\n        \"\"\"\n        Validates an incoming webhook request and returns its payload and type.\n\n        Params:\n            webhook: Object representing the configured webhook and its properties in our system.\n            request: Incoming FastAPI `Request`\n\n        Returns:\n            dict: The validated payload\n            str: The event type associated with the payload\n        \"\"\"\n\n    # --8<-- [end:BaseWebhooksManager3]\n\n    # --8<-- [start:BaseWebhooksManager5]\n    async def trigger_ping(\n        self, webhook: integrations.Webhook, credentials: Credentials | None\n    ) -> None:\n        \"\"\"\n        Triggers a ping to the given webhook.\n\n        Raises:\n            NotImplementedError: if the provider doesn't support",
                            "children": []
                        }
                    ]
                }
            ]
        }
    ]
}