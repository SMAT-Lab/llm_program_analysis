{
    "type": "module",
    "start_token": 0,
    "end_token": 529,
    "label": "\"\"\"\n\nThe nqueens problem is of placing N queens on a N * N\nchess board such that no queen can attack any other queens placed\non that chess board.\nThis means that one queen cannot have any other queen on its horizontal, vertical and\ndiagonal lines.\n\n\"\"\"\n\nfrom __future__ import annotations\n\nsolution = []\n\n\ndef is_safe(board: list[list[int]], row: int, column: int) -> bool:\n    \"\"\"\n    This function returns a boolean value True if it is safe to place a queen there\n    considering the current state of the board.\n\n    Parameters:\n    board (2D matrix): The chessboard\n    row, column: Coordinates of the cell on the board\n\n    Returns:\n    Boolean Value\n\n    >>> is_safe([[0, 0, 0], [0, 0, 0], [0, 0, 0]], 1, 1)\n    True\n    >>> is_safe([[1, 0, 0], [0, 0, 0], [0, 0, 0]], 1, 1)\n    False\n    \"\"\"\n\n    n = len(board)  # Size of the board\n\n    # Check if there is any queen in the same row, column,\n    # left upper diagonal, and right upper diagonal\n    return (\n        all(board[i][j] != 1 for i, j in zip(range(row, -1, -1), range(column, n)))\n        and all(\n            board[i][j] != 1 for i, j in zip(range(row, -1, -1), range(column, -1, -1))\n        )\n        and all(board[i][j] != 1 for i, j in zip(range(row, n), range(column, n)))\n        and all(board[i][j] != 1 for i, j in zip(range(row, n), range(column, -1, -1)))\n    )\n\n\ndef solve(board: list[list[int]], row: int) -> bool:\n    \"\"\"\n    This function creates a state space tree and calls the safe function until it\n    receives a False Boolean and terminates that branch and backtracks to the next\n    possible solution branch.\n    \"\"\"\n    if row >= len(board):\n        \"\"\"\n        If the row number exceeds N, we have a board with a successful combination\n        and that combination is appended to the solution list and the board is printed.\n        \"\"\"\n        solution.append(board)\n        printboard(board)\n        print()\n        return True\n    for i in range(len(board)):\n        \"\"\"\n        For every row, it iterates through each column to check if it is feasible to\n        place a queen there.\n        If all the combinations for that particular branch are successful, the board is\n        reinitialized for the next possible combination.\n        \"\"\"\n        if is_safe(board, row, i):\n            board[row][i] = 1\n            solve(board, row + 1)\n            board[row][i] = 0\n    return False\n\n\ndef printboard(board: list[list[int]]) -> None:\n    \"\"\"\n    Prints the boards that have a successful combination.\n    \"\"\"\n    for i in range(len(board)):\n        for j in range(len(board)):\n            if board[i][j] == 1:\n                print(\"Q\", end=\" \")  # Queen is present\n            else:\n                print(\".\", end=\" \")  # Empty cell\n        print()\n\n\n# Number of queens (e.g., n=8 for an 8x8 board)\nn = 8\nboard = [[0 for i in range(n)] for j in range(n)]\nsolve(board, 0)\nprint(\"The total number of solutions are:\", len(solution))",
    "children": [
        {
            "type": "future_import_statement",
            "start_token": 5,
            "end_token": 8,
            "label": "from __future__ import annotations",
            "children": [
                {
                    "type": "import_prefix",
                    "start_token": 5,
                    "end_token": 5,
                    "label": "from",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 6,
                    "end_token": 6,
                    "label": "__future__",
                    "children": []
                }
            ]
        },
        {
            "type": "assignment",
            "start_token": 11,
            "end_token": 14,
            "label": "solution = []",
            "children": [
                {
                    "type": "identifier",
                    "start_token": 11,
                    "end_token": 11,
                    "label": "solution",
                    "children": []
                },
                {
                    "type": "list",
                    "start_token": 13,
                    "end_token": 14,
                    "label": "[]",
                    "children": []
                }
            ]
        },
        {
            "type": "function_definition",
            "start_token": 18,
            "end_token": 251,
            "label": "def is_safe(board: list[list[int]], row: int, column: int) -> bool:\n    \"\"\"\n    This function returns a boolean value True if it is safe to place a queen there\n    considering the current state of the board.\n\n    Parameters:\n    board (2D matrix): The chessboard\n    row, column: Coordinates of the cell on the board\n\n    Returns:\n    Boolean Value\n\n    >>> is_safe([[0, 0, 0], [0, 0, 0], [0, 0, 0]], 1, 1)\n    True\n    >>> is_safe([[1, 0, 0], [0, 0, 0], [0, 0, 0]], 1, 1)\n    False\n    \"\"\"\n\n    n = len(board)  # Size of the board\n\n    # Check if there is any queen in the same row, column,\n    # left upper diagonal, and right upper diagonal\n    return (\n        all(board[i][j] != 1 for i, j in zip(range(row, -1, -1), range(column, n)))\n        and all(\n            board[i][j] != 1 for i, j in zip(range(row, -1, -1), range(column, -1, -1))\n        )\n        and all(board[i][j] != 1 for i, j in zip(range(row, n), range(column, n)))\n        and all(board[i][j] != 1 for i, j in zip(range(row, n), range(column, -1, -1)))\n    )",
            "children": [
                {
                    "type": "parameters",
                    "start_token": 20,
                    "end_token": 38,
                    "label": "(board: list[list[int]], row: int, column: int)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "start_token": 21,
                            "end_token": 30,
                            "label": "board: list[list[int]],",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 21,
                                    "end_token": 21,
                                    "label": "board",
                                    "children": []
                                },
                                {
                                    "type": "generic_type",
                                    "start_token": 23,
                                    "end_token": 28,
                                    "label": "list[list[int]",
                                    "children": [
                                        {
                                            "type": "list",
                                            "start_token": 23,
                                            "end_token": 28,
                                            "label": "list[list[int]",
                                            "children": [
                                                {
                                                    "type": "type",
                                                    "start_token": 25,
                                                    "end_token": 27,
                                                    "label": "list[int",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "start_token": 31,
                            "end_token": 34,
                            "label": "row: int,",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 31,
                                    "end_token": 31,
                                    "label": "row",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "start_token": 33,
                                    "end_token": 34,
                                    "label": "int,",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "start_token": 35,
                            "end_token": 38,
                            "label": "column: int)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 35,
                                    "end_token": 35,
                                    "label": "column",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "start_token": 37,
                                    "end_token": 38,
                                    "label": "int)",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "start_token": 40,
                    "end_token": 41,
                    "label": "> bool",
                    "children": []
                },
                {
                    "type": "block",
                    "start_token": 43,
                    "end_token": 251,
                    "label": "\n    \"\"\"\n    This function returns a boolean value True if it is safe to place a queen there\n    considering the current state of the board.\n\n    Parameters:\n    board (2D matrix): The chessboard\n    row, column: Coordinates of the cell on the board\n\n    Returns:\n    Boolean Value\n\n    >>> is_safe([[0, 0, 0], [0, 0, 0], [0, 0, 0]], 1, 1)\n    True\n    >>> is_safe([[1, 0, 0], [0, 0, 0], [0, 0, 0]], 1, 1)\n    False\n    \"\"\"\n\n    n = len(board)  # Size of the board\n\n    # Check if there is any queen in the same row, column,\n    # left upper diagonal, and right upper diagonal\n    return (\n        all(board[i][j] != 1 for i, j in zip(range(row, -1, -1), range(column, n)))\n        and all(\n            board[i][j] != 1 for i, j in zip(range(row, -1, -1), range(column, -1, -1))\n        )\n        and all(board[i][j] != 1 for i, j in zip(range(row, n), range(column, n)))\n        and all(board[i][j] != 1 for i, j in zip(range(row, n), range(column, -1, -1)))\n    )",
                    "children": [
                        {
                            "type": "assignment",
                            "start_token": 49,
                            "end_token": 54,
                            "label": "n = len(board)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 49,
                                    "end_token": 49,
                                    "label": "n",
                                    "children": []
                                },
                                {
                                    "type": "call",
                                    "start_token": 51,
                                    "end_token": 54,
                                    "label": "len(board)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 51,
                                            "end_token": 51,
                                            "label": "len",
                                            "children": []
                                        },
                                        {
                                            "type": "argument_list",
                                            "start_token": 52,
                                            "end_token": 53,
                                            "label": "(board",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 53,
                                                    "end_token": 53,
                                                    "label": "board",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "start_token": 87,
                            "end_token": 251,
                            "label": "return (\n        all(board[i][j] != 1 for i, j in zip(range(row, -1, -1), range(column, n)))\n        and all(\n            board[i][j] != 1 for i, j in zip(range(row, -1, -1), range(column, -1, -1))\n        )\n        and all(board[i][j] != 1 for i, j in zip(range(row, n), range(column, n)))\n        and all(board[i][j] != 1 for i, j in zip(range(row, n), range(column, -1, -1)))\n    )",
                            "children": [
                                {
                                    "type": "boolean_operator",
                                    "start_token": 88,
                                    "end_token": 250,
                                    "label": "(\n        all(board[i][j] != 1 for i, j in zip(range(row, -1, -1), range(column, n)))\n        and all(\n            board[i][j] != 1 for i, j in zip(range(row, -1, -1), range(column, -1, -1))\n        )\n        and all(board[i][j] != 1 for i, j in zip(range(row, n), range(column, n)))\n        and all(board[i][j] != 1 for i, j in zip(range(row, n), range(column, -1, -1)))\n",
                                    "children": [
                                        {
                                            "type": "all",
                                            "start_token": 90,
                                            "end_token": 127,
                                            "label": "all(board[i][j] != 1 for i, j in zip(range(row, -1, -1), range(column, n)))",
                                            "children": [
                                                {
                                                    "type": "generator_expression",
                                                    "start_token": 92,
                                                    "end_token": 126,
                                                    "label": "board[i][j] != 1 for i, j in zip(range(row, -1, -1), range(column, n))",
                                                    "children": [
                                                        {
                                                            "type": "comparison_operator",
                                                            "start_token": 92,
                                                            "end_token": 101,
                                                            "label": "board[i][j] != 1",
                                                            "children": [
                                                                {
                                                                    "type": "subscript",
                                                                    "start_token": 92,
                                                                    "end_token": 97,
                                                                    "label": "board[i][j",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 92,
                                                                            "end_token": 92,
                                                                            "label": "board",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "index",
                                                                            "start_token": 94,
                                                                            "end_token": 95,
                                                                            "label": "i]",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "integer",
                                                                    "start_token": 100,
                                                                    "end_token": 101,
                                                                    "label": "= 1",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "for_in_clause",
                                                            "start_token": 102,
                                                            "end_token": 126,
                                                            "label": "for i, j in zip(range(row, -1, -1), range(column, n))",
                                                            "children": [
                                                                {
                                                                    "type": "pattern_list",
                                                                    "start_token": 103,
                                                                    "end_token": 105,
                                                                    "label": "i, j",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "start_token": 107,
                                                                    "end_token": 126,
                                                                    "label": "zip(range(row, -1, -1), range(column, n))",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 107,
                                                                            "end_token": 107,
                                                                            "label": "zip",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "start_token": 108,
                                                                            "end_token": 126,
                                                                            "label": "(range(row, -1, -1), range(column, n))",
                                                                            "children": [
                                                                                {
                                                                                    "type": "call",
                                                                                    "start_token": 109,
                                                                                    "end_token": 118,
                                                                                    "label": "range(row, -1, -1)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 109,
                                                                                            "end_token": 109,
                                                                                            "label": "range",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "start_token": 110,
                                                                                            "end_token": 117,
                                                                                            "label": "(row, -1, -1",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "call",
                                                                                    "start_token": 120,
                                                                                    "end_token": 125,
                                                                                    "label": "range(column, n)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 120,
                                                                                            "end_token": 120,
                                                                                            "label": "range",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "start_token": 121,
                                                                                            "end_token": 124,
                                                                                            "label": "(column, n",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "all",
                                            "start_token": 130,
                                            "end_token": 172,
                                            "label": "all(\n            board[i][j] != 1 for i, j in zip(range(row, -1, -1), range(column, -1, -1))\n",
                                            "children": [
                                                {
                                                    "type": "generator_expression",
                                                    "start_token": 132,
                                                    "end_token": 171,
                                                    "label": "\n            board[i][j] != 1 for i, j in zip(range(row, -1, -1), range(column, -1, -1))",
                                                    "children": [
                                                        {
                                                            "type": "comparison_operator",
                                                            "start_token": 132,
                                                            "end_token": 142,
                                                            "label": "\n            board[i][j] != 1",
                                                            "children": [
                                                                {
                                                                    "type": "subscript",
                                                                    "start_token": 132,
                                                                    "end_token": 137,
                                                                    "label": "\n            board[i][",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 132,
                                                                            "end_token": 132,
                                                                            "label": "\n",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "index",
                                                                            "start_token": 134,
                                                                            "end_token": 135,
                                                                            "label": "[i",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "integer",
                                                                    "start_token": 141,
                                                                    "end_token": 142,
                                                                    "label": "= 1",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "for_in_clause",
                                                            "start_token": 143,
                                                            "end_token": 171,
                                                            "label": "for i, j in zip(range(row, -1, -1), range(column, -1, -1))",
                                                            "children": [
                                                                {
                                                                    "type": "pattern_list",
                                                                    "start_token": 144,
                                                                    "end_token": 146,
                                                                    "label": "i, j",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "start_token": 148,
                                                                    "end_token": 171,
                                                                    "label": "zip(range(row, -1, -1), range(column, -1, -1))",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 148,
                                                                            "end_token": 148,
                                                                            "label": "zip",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "start_token": 149,
                                                                            "end_token": 171,
                                                                            "label": "(range(row, -1, -1), range(column, -1, -1))",
                                                                            "children": [
                                                                                {
                                                                                    "type": "call",
                                                                                    "start_token": 150,
                                                                                    "end_token": 159,
                                                                                    "label": "range(row, -1, -1)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 150,
                                                                                            "end_token": 150,
                                                                                            "label": "range",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "start_token": 151,
                                                                                            "end_token": 158,
                                                                                            "label": "(row, -1, -1",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "call",
                                                                                    "start_token": 161,
                                                                                    "end_token": 170,
                                                                                    "label": "range(column, -1, -1)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 161,
                                                                                            "end_token": 161,
                                                                                            "label": "range",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "start_token": 162,
                                                                                            "end_token": 169,
                                                                                            "label": "(column, -1, -1",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "all",
                                            "start_token": 176,
                                            "end_token": 209,
                                            "label": "all(board[i][j] != 1 for i, j in zip(range(row, n), range(column, n)))",
                                            "children": [
                                                {
                                                    "type": "generator_expression",
                                                    "start_token": 178,
                                                    "end_token": 208,
                                                    "label": "board[i][j] != 1 for i, j in zip(range(row, n), range(column, n))",
                                                    "children": [
                                                        {
                                                            "type": "comparison_operator",
                                                            "start_token": 178,
                                                            "end_token": 187,
                                                            "label": "board[i][j] != 1",
                                                            "children": [
                                                                {
                                                                    "type": "subscript",
                                                                    "start_token": 178,
                                                                    "end_token": 183,
                                                                    "label": "board[i][j",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 178,
                                                                            "end_token": 178,
                                                                            "label": "board",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "index",
                                                                            "start_token": 180,
                                                                            "end_token": 181,
                                                                            "label": "i]",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "integer",
                                                                    "start_token": 186,
                                                                    "end_token": 187,
                                                                    "label": "= 1",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "for_in_clause",
                                                            "start_token": 188,
                                                            "end_token": 208,
                                                            "label": "for i, j in zip(range(row, n), range(column, n))",
                                                            "children": [
                                                                {
                                                                    "type": "pattern_list",
                                                                    "start_token": 189,
                                                                    "end_token": 191,
                                                                    "label": "i, j",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "start_token": 193,
                                                                    "end_token": 208,
                                                                    "label": "zip(range(row, n), range(column, n))",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 193,
                                                                            "end_token": 193,
                                                                            "label": "zip",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "start_token": 194,
                                                                            "end_token": 208,
                                                                            "label": "(range(row, n), range(column, n))",
                                                                            "children": [
                                                                                {
                                                                                    "type": "call",
                                                                                    "start_token": 195,
                                                                                    "end_token": 200,
                                                                                    "label": "range(row, n)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 195,
                                                                                            "end_token": 195,
                                                                                            "label": "range",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "start_token": 196,
                                                                                            "end_token": 199,
                                                                                            "label": "(row, n",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "call",
                                                                                    "start_token": 202,
                                                                                    "end_token": 207,
                                                                                    "label": "range(column, n)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 202,
                                                                                            "end_token": 202,
                                                                                            "label": "range",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "start_token": 203,
                                                                                            "end_token": 206,
                                                                                            "label": "(column, n",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "all",
                                            "start_token": 212,
                                            "end_token": 249,
                                            "label": "all(board[i][j] != 1 for i, j in zip(range(row, n), range(column, -1, -1)))",
                                            "children": [
                                                {
                                                    "type": "generator_expression",
                                                    "start_token": 214,
                                                    "end_token": 248,
                                                    "label": "board[i][j] != 1 for i, j in zip(range(row, n), range(column, -1, -1))",
                                                    "children": [
                                                        {
                                                            "type": "comparison_operator",
                                                            "start_token": 214,
                                                            "end_token": 223,
                                                            "label": "board[i][j] != 1",
                                                            "children": [
                                                                {
                                                                    "type": "subscript",
                                                                    "start_token": 214,
                                                                    "end_token": 219,
                                                                    "label": "board[i][j",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 214,
                                                                            "end_token": 214,
                                                                            "label": "board",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "index",
                                                                            "start_token": 216,
                                                                            "end_token": 217,
                                                                            "label": "i]",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "integer",
                                                                    "start_token": 222,
                                                                    "end_token": 223,
                                                                    "label": "= 1",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "for_in_clause",
                                                            "start_token": 224,
                                                            "end_token": 248,
                                                            "label": "for i, j in zip(range(row, n), range(column, -1, -1))",
                                                            "children": [
                                                                {
                                                                    "type": "pattern_list",
                                                                    "start_token": 225,
                                                                    "end_token": 227,
                                                                    "label": "i, j",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "start_token": 229,
                                                                    "end_token": 248,
                                                                    "label": "zip(range(row, n), range(column, -1, -1))",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 229,
                                                                            "end_token": 229,
                                                                            "label": "zip",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "start_token": 230,
                                                                            "end_token": 248,
                                                                            "label": "(range(row, n), range(column, -1, -1))",
                                                                            "children": [
                                                                                {
                                                                                    "type": "call",
                                                                                    "start_token": 231,
                                                                                    "end_token": 236,
                                                                                    "label": "range(row, n)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 231,
                                                                                            "end_token": 231,
                                                                                            "label": "range",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "start_token": 232,
                                                                                            "end_token": 235,
                                                                                            "label": "(row, n",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "call",
                                                                                    "start_token": 238,
                                                                                    "end_token": 247,
                                                                                    "label": "range(column, -1, -1)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 238,
                                                                                            "end_token": 238,
                                                                                            "label": "range",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "start_token": 239,
                                                                                            "end_token": 246,
                                                                                            "label": "(column, -1, -1",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "start_token": 255,
            "end_token": 371,
            "label": "def solve(board: list[list[int]], row: int) -> bool:\n    \"\"\"\n    This function creates a state space tree and calls the safe function until it\n    receives a False Boolean and terminates that branch and backtracks to the next\n    possible solution branch.\n    \"\"\"\n    if row >= len(board):\n        \"\"\"\n        If the row number exceeds N, we have a board with a successful combination\n        and that combination is appended to the solution list and the board is printed.\n        \"\"\"\n        solution.append(board)\n        printboard(board)\n        print()\n        return True\n    for i in range(len(board)):\n        \"\"\"\n        For every row, it iterates through each column to check if it is feasible to\n        place a queen there.\n        If all the combinations for that particular branch are successful, the board is\n        reinitialized for the next possible combination.\n        \"\"\"\n        if is_safe(board, row, i):\n            board[row][i] = 1\n            solve(board, row + 1)\n            board[row][i] = 0\n    return False",
            "children": [
                {
                    "type": "parameters",
                    "start_token": 257,
                    "end_token": 271,
                    "label": "(board: list[list[int]], row: int)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "start_token": 258,
                            "end_token": 267,
                            "label": "board: list[list[int]],",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 258,
                                    "end_token": 258,
                                    "label": "board",
                                    "children": []
                                },
                                {
                                    "type": "generic_type",
                                    "start_token": 260,
                                    "end_token": 265,
                                    "label": "list[list[int]",
                                    "children": [
                                        {
                                            "type": "list",
                                            "start_token": 260,
                                            "end_token": 265,
                                            "label": "list[list[int]",
                                            "children": [
                                                {
                                                    "type": "type",
                                                    "start_token": 262,
                                                    "end_token": 264,
                                                    "label": "list[int",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "start_token": 268,
                            "end_token": 271,
                            "label": "row: int)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 268,
                                    "end_token": 268,
                                    "label": "row",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "start_token": 270,
                                    "end_token": 271,
                                    "label": "int)",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "start_token": 273,
                    "end_token": 274,
                    "label": "> bool",
                    "children": []
                },
                {
                    "type": "block",
                    "start_token": 276,
                    "end_token": 371,
                    "label": "\n    \"\"\"\n    This function creates a state space tree and calls the safe function until it\n    receives a False Boolean and terminates that branch and backtracks to the next\n    possible solution branch.\n    \"\"\"\n    if row >= len(board):\n        \"\"\"\n        If the row number exceeds N, we have a board with a successful combination\n        and that combination is appended to the solution list and the board is printed.\n        \"\"\"\n        solution.append(board)\n        printboard(board)\n        print()\n        return True\n    for i in range(len(board)):\n        \"\"\"\n        For every row, it iterates through each column to check if it is feasible to\n        place a queen there.\n        If all the combinations for that particular branch are successful, the board is\n        reinitialized for the next possible combination.\n        \"\"\"\n        if is_safe(board, row, i):\n            board[row][i] = 1\n            solve(board, row + 1)\n            board[row][i] = 0\n    return False",
                    "children": [
                        {
                            "type": "if_statement",
                            "start_token": 281,
                            "end_token": 312,
                            "label": "if row >= len(board):\n        \"\"\"\n        If the row number exceeds N, we have a board with a successful combination\n        and that combination is appended to the solution list and the board is printed.\n        \"\"\"\n        solution.append(board)\n        printboard(board)\n        print()\n        return True",
                            "children": [
                                {
                                    "type": "comparison_operator",
                                    "start_token": 281,
                                    "end_token": 288,
                                    "label": "if row >= len(board)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 282,
                                            "end_token": 282,
                                            "label": "row",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "start_token": 285,
                                            "end_token": 288,
                                            "label": "len(board)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 285,
                                                    "end_token": 285,
                                                    "label": "len",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "start_token": 286,
                                                    "end_token": 287,
                                                    "label": "(board",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 287,
                                                            "end_token": 287,
                                                            "label": "board",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "start_token": 289,
                                    "end_token": 312,
                                    "label": ":\n        \"\"\"\n        If the row number exceeds N, we have a board with a successful combination\n        and that combination is appended to the solution list and the board is printed.\n        \"\"\"\n        solution.append(board)\n        printboard(board)\n        print()\n        return True",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "start_token": 295,
                                            "end_token": 300,
                                            "label": "solution.append(board)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "start_token": 295,
                                                    "end_token": 300,
                                                    "label": "solution.append(board)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 295,
                                                            "end_token": 297,
                                                            "label": "solution.append",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 298,
                                                            "end_token": 299,
                                                            "label": "(board",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "start_token": 302,
                                            "end_token": 305,
                                            "label": "printboard(board)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "start_token": 302,
                                                    "end_token": 305,
                                                    "label": "printboard(board)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 302,
                                                            "end_token": 302,
                                                            "label": "printboard",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 303,
                                                            "end_token": 304,
                                                            "label": "(board",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "start_token": 307,
                                            "end_token": 309,
                                            "label": "print()",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "start_token": 307,
                                                    "end_token": 309,
                                                    "label": "print()",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 307,
                                                            "end_token": 307,
                                                            "label": "print",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "return_statement",
                                            "start_token": 311,
                                            "end_token": 312,
                                            "label": "return True",
                                            "children": [
                                                {
                                                    "type": "true",
                                                    "start_token": 311,
                                                    "end_token": 312,
                                                    "label": "return True",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "for_statement",
                            "start_token": 314,
                            "end_token": 371,
                            "label": "for i in range(len(board)):\n        \"\"\"\n        For every row, it iterates through each column to check if it is feasible to\n        place a queen there.\n        If all the combinations for that particular branch are successful, the board is\n        reinitialized for the next possible combination.\n        \"\"\"\n        if is_safe(board, row, i):\n            board[row][i] = 1\n            solve(board, row + 1)\n            board[row][i] = 0\n    return False",
                            "children": [
                                {
                                    "type": "pattern_list",
                                    "start_token": 315,
                                    "end_token": 316,
                                    "label": "i in",
                                    "children": []
                                },
                                {
                                    "type": "call",
                                    "start_token": 318,
                                    "end_token": 323,
                                    "label": "(len(board))",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 318,
                                            "end_token": 318,
                                            "label": "(",
                                            "children": []
                                        },
                                        {
                                            "type": "argument_list",
                                            "start_token": 319,
                                            "end_token": 322,
                                            "label": "len(board)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "start_token": 319,
                                                    "end_token": 321,
                                                    "label": "len(board",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 319,
                                                            "end_token": 319,
                                                            "label": "len",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 320,
                                                            "end_token": 321,
                                                            "label": "(board",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "start_token": 324,
                                    "end_token": 371,
                                    "label": ":\n        \"\"\"\n        For every row, it iterates through each column to check if it is feasible to\n        place a queen there.\n        If all the combinations for that particular branch are successful, the board is\n        reinitialized for the next possible combination.\n        \"\"\"\n        if is_safe(board, row, i):\n            board[row][i] = 1\n            solve(board, row + 1)\n            board[row][i] = 0\n    return False",
                                    "children": [
                                        {
                                            "type": "if_statement",
                                            "start_token": 330,
                                            "end_token": 368,
                                            "label": "if is_safe(board, row, i):\n            board[row][i] = 1\n            solve(board, row + 1)\n            board[row][i] = 0",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "start_token": 331,
                                                    "end_token": 338,
                                                    "label": "is_safe(board, row, i)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 331,
                                                            "end_token": 331,
                                                            "label": "is_safe",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 332,
                                                            "end_token": 337,
                                                            "label": "(board, row, i",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "start_token": 339,
                                                    "end_token": 368,
                                                    "label": ":\n            board[row][i] = 1\n            solve(board, row + 1)\n            board[row][i] = 0",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "start_token": 341,
                                                            "end_token": 349,
                                                            "label": "board[row][i] = 1",
                                                            "children": [
                                                                {
                                                                    "type": "subscript",
                                                                    "start_token": 341,
                                                                    "end_token": 346,
                                                                    "label": "board[row][i",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 341,
                                                                            "end_token": 341,
                                                                            "label": "board",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "index",
                                                                            "start_token": 343,
                                                                            "end_token": 344,
                                                                            "label": "row]",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "integer",
                                                                    "start_token": 348,
                                                                    "end_token": 349,
                                                                    "label": "= 1",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "expression_statement",
                                                            "start_token": 351,
                                                            "end_token": 358,
                                                            "label": "solve(board, row + 1)",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "start_token": 351,
                                                                    "end_token": 358,
                                                                    "label": "solve(board, row + 1)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 351,
                                                                            "end_token": 351,
                                                                            "label": "solve",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "start_token": 352,
                                                                            "end_token": 357,
                                                                            "label": "(board, row + 1",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "assignment",
                                                            "start_token": 360,
                                                            "end_token": 368,
                                                            "label": "board[row][i] = 0",
                                                            "children": [
                                                                {
                                                                    "type": "subscript",
                                                                    "start_token": 360,
                                                                    "end_token": 365,
                                                                    "label": "board[row][i",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 360,
                                                                            "end_token": 360,
                                                                            "label": "board",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "index",
                                                                            "start_token": 362,
                                                                            "end_token": 363,
                                                                            "label": "row]",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "integer",
                                                                    "start_token": 366,
                                                                    "end_token": 368,
                                                                    "label": "] = 0",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "return_statement",
                                            "start_token": 370,
                                            "end_token": 371,
                                            "label": "return False",
                                            "children": [
                                                {
                                                    "type": "false",
                                                    "start_token": 370,
                                                    "end_token": 371,
                                                    "label": "return False",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "start_token": 375,
            "end_token": 465,
            "label": "def printboard(board: list[list[int]]) -> None:\n    \"\"\"\n    Prints the boards that have a successful combination.\n    \"\"\"\n    for i in range(len(board)):\n        for j in range(len(board)):\n            if board[i][j] == 1:\n                print(\"Q\", end=\" \")  # Queen is present\n            else:\n                print(\".\", end=\" \")  # Empty cell\n        print()\n",
            "children": [
                {
                    "type": "parameters",
                    "start_token": 377,
                    "end_token": 387,
                    "label": "(board: list[list[int]])",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "start_token": 378,
                            "end_token": 387,
                            "label": "board: list[list[int]])",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 378,
                                    "end_token": 378,
                                    "label": "board",
                                    "children": []
                                },
                                {
                                    "type": "generic_type",
                                    "start_token": 380,
                                    "end_token": 385,
                                    "label": "list[list[int]",
                                    "children": [
                                        {
                                            "type": "list",
                                            "start_token": 380,
                                            "end_token": 385,
                                            "label": "list[list[int]",
                                            "children": [
                                                {
                                                    "type": "type",
                                                    "start_token": 382,
                                                    "end_token": 384,
                                                    "label": "list[int",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "start_token": 389,
                    "end_token": 390,
                    "label": "> None",
                    "children": []
                },
                {
                    "type": "block",
                    "start_token": 392,
                    "end_token": 465,
                    "label": "\n    \"\"\"\n    Prints the boards that have a successful combination.\n    \"\"\"\n    for i in range(len(board)):\n        for j in range(len(board)):\n            if board[i][j] == 1:\n                print(\"Q\", end=\" \")  # Queen is present\n            else:\n                print(\".\", end=\" \")  # Empty cell\n        print()\n",
                    "children": [
                        {
                            "type": "for_statement",
                            "start_token": 397,
                            "end_token": 464,
                            "label": "for i in range(len(board)):\n        for j in range(len(board)):\n            if board[i][j] == 1:\n                print(\"Q\", end=\" \")  # Queen is present\n            else:\n                print(\".\", end=\" \")  # Empty cell\n        print()",
                            "children": [
                                {
                                    "type": "pattern_list",
                                    "start_token": 398,
                                    "end_token": 399,
                                    "label": "i in",
                                    "children": []
                                },
                                {
                                    "type": "call",
                                    "start_token": 401,
                                    "end_token": 406,
                                    "label": "(len(board))",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 401,
                                            "end_token": 401,
                                            "label": "(",
                                            "children": []
                                        },
                                        {
                                            "type": "argument_list",
                                            "start_token": 402,
                                            "end_token": 405,
                                            "label": "len(board)",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "start_token": 407,
                                    "end_token": 464,
                                    "label": ":\n        for j in range(len(board)):\n            if board[i][j] == 1:\n                print(\"Q\", end=\" \")  # Queen is present\n            else:\n                print(\".\", end=\" \")  # Empty cell\n        print()",
                                    "children": [
                                        {
                                            "type": "for_statement",
                                            "start_token": 409,
                                            "end_token": 464,
                                            "label": "for j in range(len(board)):\n            if board[i][j] == 1:\n                print(\"Q\", end=\" \")  # Queen is present\n            else:\n                print(\".\", end=\" \")  # Empty cell\n        print()",
                                            "children": [
                                                {
                                                    "type": "pattern_list",
                                                    "start_token": 410,
                                                    "end_token": 411,
                                                    "label": "j in",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 413,
                                                    "end_token": 418,
                                                    "label": "(len(board))",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 413,
                                                            "end_token": 413,
                                                            "label": "(",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 414,
                                                            "end_token": 417,
                                                            "label": "len(board)",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "start_token": 419,
                                                    "end_token": 464,
                                                    "label": ":\n            if board[i][j] == 1:\n                print(\"Q\", end=\" \")  # Queen is present\n            else:\n                print(\".\", end=\" \")  # Empty cell\n        print()",
                                                    "children": [
                                                        {
                                                            "type": "if_statement",
                                                            "start_token": 421,
                                                            "end_token": 445,
                                                            "label": "if board[i][j] == 1:\n                print(\"Q\", end=\" \")  # Queen is present",
                                                            "children": [
                                                                {
                                                                    "type": "comparison_operator",
                                                                    "start_token": 421,
                                                                    "end_token": 431,
                                                                    "label": "if board[i][j] == 1",
                                                                    "children": [
                                                                        {
                                                                            "type": "subscript",
                                                                            "start_token": 421,
                                                                            "end_token": 426,
                                                                            "label": "if board[i][",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 421,
                                                                                    "end_token": 421,
                                                                                    "label": "if",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "index",
                                                                                    "start_token": 423,
                                                                                    "end_token": 424,
                                                                                    "label": "[i",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "integer",
                                                                            "start_token": 430,
                                                                            "end_token": 431,
                                                                            "label": "= 1",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "block",
                                                                    "start_token": 432,
                                                                    "end_token": 445,
                                                                    "label": ":\n                print(\"Q\", end=\" \")  # Queen is present",
                                                                    "children": [
                                                                        {
                                                                            "type": "expression_statement",
                                                                            "start_token": 434,
                                                                            "end_token": 440,
                                                                            "label": "print(\"Q\", end=\" \"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "call",
                                                                                    "start_token": 434,
                                                                                    "end_token": 440,
                                                                                    "label": "print(\"Q\", end=\" \"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 434,
                                                                                            "end_token": 434,
                                                                                            "label": "print",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "start_token": 435,
                                                                                            "end_token": 439,
                                                                                            "label": "(\"Q\", end=",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "else_clause",
                                                            "start_token": 447,
                                                            "end_token": 460,
                                                            "label": "else:\n                print(\".\", end=\" \")  # Empty cell",
                                                            "children": [
                                                                {
                                                                    "type": "expression_statement",
                                                                    "start_token": 450,
                                                                    "end_token": 456,
                                                                    "label": "print(\".\", end=\" \"",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "start_token": 450,
                                                                            "end_token": 456,
                                                                            "label": "print(\".\", end=\" \"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 450,
                                                                                    "end_token": 450,
                                                                                    "label": "print",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "start_token": 451,
                                                                                    "end_token": 455,
                                                                                    "label": "(\".\", end=",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "assignment",
            "start_token": 488,
            "end_token": 490,
            "label": "n = 8",
            "children": [
                {
                    "type": "identifier",
                    "start_token": 488,
                    "end_token": 488,
                    "label": "n",
                    "children": []
                },
                {
                    "type": "integer",
                    "start_token": 490,
                    "end_token": 490,
                    "label": "8",
                    "children": []
                }
            ]
        },
        {
            "type": "assignment",
            "start_token": 492,
            "end_token": 512,
            "label": "board = [[0 for i in range(n)] for j in range(n)]",
            "children": [
                {
                    "type": "identifier",
                    "start_token": 492,
                    "end_token": 492,
                    "label": "board",
                    "children": []
                },
                {
                    "type": "list_comprehension",
                    "start_token": 494,
                    "end_token": 512,
                    "label": "[[0 for i in range(n)] for j in range(n)]",
                    "children": []
                }
            ]
        },
        {
            "type": "expression_statement",
            "start_token": 514,
            "end_token": 519,
            "label": "solve(board, 0)",
            "children": [
                {
                    "type": "call",
                    "start_token": 514,
                    "end_token": 519,
                    "label": "solve(board, 0)",
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 514,
                            "end_token": 514,
                            "label": "solve",
                            "children": []
                        },
                        {
                            "type": "argument_list",
                            "start_token": 515,
                            "end_token": 518,
                            "label": "(board, 0",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "expression_statement",
            "start_token": 521,
            "end_token": 529,
            "label": "print(\"The total number of solutions are:\", len(solution))",
            "children": [
                {
                    "type": "call",
                    "start_token": 521,
                    "end_token": 529,
                    "label": "print(\"The total number of solutions are:\", len(solution))",
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 521,
                            "end_token": 521,
                            "label": "print",
                            "children": []
                        },
                        {
                            "type": "argument_list",
                            "start_token": 522,
                            "end_token": 528,
                            "label": "(\"The total number of solutions are:\", len(solution)",
                            "children": []
                        }
                    ]
                }
            ]
        }
    ]
}