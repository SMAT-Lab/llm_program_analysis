{
    "type": "module",
    "start_token": 0,
    "end_token": 1099,
    "label": "# -*- coding: utf-8 -*-\n\nimport unittest\n\nfrom validate.format import error_message\nfrom validate.format import get_categories_content\nfrom validate.format import check_alphabetical_order\nfrom validate.format import check_title\nfrom validate.format import check_description, max_description_length\nfrom validate.format import check_auth, auth_keys\nfrom validate.format import check_https, https_keys\nfrom validate.format import check_cors, cors_keys\nfrom validate.format import check_entry\nfrom validate.format import check_file_format, min_entries_per_category, num_segments\n\n\nclass TestValidadeFormat(unittest.TestCase):\n    \n    def test_error_message_return_and_return_type(self):\n        line_num_unity = 1\n        line_num_ten = 10\n        line_num_hundred = 100\n        line_num_thousand = 1000\n\n        msg = 'This is a unit test'\n\n        err_msg_unity = error_message(line_num_unity, msg)\n        err_msg_ten = error_message(line_num_ten, msg)\n        err_msg_hundred = error_message(line_num_hundred, msg)\n        err_msg_thousand = error_message(line_num_thousand, msg)\n\n        self.assertIsInstance(err_msg_unity, str)\n        self.assertIsInstance(err_msg_ten, str)\n        self.assertIsInstance(err_msg_hundred, str)\n        self.assertIsInstance(err_msg_thousand, str)\n\n        self.assertEqual(err_msg_unity, '(L002) This is a unit test')\n        self.assertEqual(err_msg_ten, '(L011) This is a unit test')\n        self.assertEqual(err_msg_hundred, '(L101) This is a unit test')\n        self.assertEqual(err_msg_thousand, '(L1001) This is a unit test')\n\n    def test_if_get_categories_content_return_correct_data_of_categories(self):\n        fake_contents = [\n            '### A',\n            'API | Description | Auth | HTTPS | CORS |',\n            '|---|---|---|---|---|',\n            '| [AA](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '| [AB](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '',\n            '### B',\n            'API | Description | Auth | HTTPS | CORS |',\n            '|---|---|---|---|---|',\n            '| [BA](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '| [BB](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |'\n        ]\n\n        result = get_categories_content(fake_contents)\n        self.assertIsInstance(result, tuple)\n\n        categories, category_line_num = result\n        self.assertIsInstance(categories, dict)\n        self.assertIsInstance(category_line_num, dict)\n\n        expected_result = ({'A': ['AA', 'AB'], 'B': ['BA', 'BB']}, {'A': 0, 'B': 6})\n\n        for res, ex_res in zip(result, expected_result):\n\n            with self.subTest():\n                self.assertEqual(res, ex_res)\n\n    def test_if_check_alphabetical_order_return_correct_msg_error(self):\n        correct_lines = [\n            '### A',\n            'API | Description | Auth | HTTPS | CORS |',\n            '|---|---|---|---|---|',\n            '| [AA](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '| [AB](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '',\n            '### B',\n            'API | Description | Auth | HTTPS | CORS |',\n            '|---|---|---|---|---|',\n            '| [BA](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '| [BB](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |'\n        ]\n\n        incorrect_lines = [\n            '### A',\n            'API | Description | Auth | HTTPS | CORS |',\n            '|---|---|---|---|---|',\n            '| [AB](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '| [AA](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '',\n            '### B',\n            'API | Description | Auth | HTTPS | CORS |',\n            '|---|---|---|---|---|',\n            '| [BB](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |',\n            '| [BA](https://www.ex.com) | Desc | `apiKey` | Yes | Yes |'\n        ]\n\n\n        err_msgs_1 = check_alphabetical_order(correct_lines)\n        err_msgs_2 = check_alphabetical_order(incorrect_lines)\n\n        self.assertIsInstance(err_msgs_1, list)\n        self.assertIsInstance(err_msgs_2, list)\n\n        self.assertEqual(len(err_msgs_1), 0)\n        self.assertEqual(len(err_msgs_2), 2)\n\n        expected_err_msgs = [\n            '(L001) A category is not alphabetical order',\n            '(L007) B category is not alphabetical order'\n        ]\n\n        for err_msg, ex_err_msg in zip(err_msgs_2, expected_err_msgs):\n\n            with self.subTest():\n                self.assertEqual(err_msg, ex_err_msg)\n    \n    def test_check_title_with_correct_title(self):\n        raw_title = '[A](https://www.ex.com)'\n\n        err_msgs = check_title(0, raw_title)\n\n        self.assertIsInstance(err_msgs, list)\n        self.assertEqual(len(err_msgs), 0)\n        self.assertEqual(err_msgs, [])\n\n    def test_check_title_with_markdown_syntax_incorrect(self):\n        raw_title = '[A(https://www.ex.com)'\n\n        err_msgs = check_title(0, raw_title)\n\n        self.assertIsInstance(err_msgs, list)\n        self.assertEqual(len(err_msgs), 1)\n        \n        err_msg = err_msgs[0]\n        expected_err_msg = '(L001) Title syntax should be \"[TITLE](LINK)\"'\n\n        self.assertEqual(err_msg, expected_err_msg)\n\n    def test_check_title_with_api_at_the_end_of_the_title(self):\n        raw_title = '[A API](https://www.ex.com)'\n\n        err_msgs = check_title(0, raw_title)\n        \n        self.assertIsInstance(err_msgs, list)\n        self.assertEqual(len(err_msgs), 1)\n        \n        err_msg = err_msgs[0]\n        expected_err_msg = '(L001) Title should not end with \"... API\". Every entry is an API here!'\n\n        self.assertEqual(err_msg, expected_err_msg)\n\n    def test_check_description_with_correct_description(self):\n        desc = 'This is a fake description'\n\n        err_msgs = check_description(0, desc)\n\n        self.assertIsInstance(err_msgs, list)\n        self.assertEqual(len(err_msgs), 0)\n        self.assertEqual(err_msgs, [])\n    \n    def test_check_description_with_first_char_is_not_capitalized(self):\n        desc = 'this is a fake description'\n\n        err_msgs = check_description(0, desc)\n\n        self.assertIsInstance(err_msgs, list)\n        self.assertEqual(len(err_msgs), 1)\n        \n        err_msg = err_msgs[0]\n        expected_err_msg = '(L001) first character of description is not capitalized'\n\n        self.assertIsInstance(err_msg, str)\n        self.assertEqual(err_msg, expected_err_msg)\n    \n    def test_check_description_with_punctuation_in_the_end(self):\n        base_desc = 'This is a fake description'\n        punctuation = r\"\"\"!\"#$%&'*+,-./:;<=>?@[\\]^_`{|}~\"\"\"\n        desc_with_punc = [base_desc + punc for punc in punctuation]\n        \n        for desc in desc_with_punc:\n\n            with self.subTest():\n                err_msgs = check_description(0, desc)\n\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 1)\n        \n                err_msg = err_msgs[0]\n                expected_err_msg = f'(L001) description should not end with {desc[-1]}'\n\n                self.assertIsInstance(err_msg, str)\n                self.assertEqual(err_msg, expected_err_msg)\n\n    def test_check_description_that_exceeds_the_character_limit(self):\n        long_desc = 'Desc' * max_description_length\n        long_desc_length = len(long_desc)\n\n        err_msgs = check_description(0, long_desc)\n\n        self.assertIsInstance(err_msgs, list)\n        self.assertEqual(len(err_msgs), 1)\n\n        err_msg = err_msgs[0]\n        expected_err_msg = f'(L001) description should not exceed {max_description_length} characters (currently {long_desc_length})'\n\n        self.assertIsInstance(err_msg, str)\n        self.assertEqual(err_msg, expected_err_msg)\n\n    def test_check_auth_with_valid_auth(self):\n        auth_valid = [f'`{auth}`' for auth in auth_keys if auth != 'No']\n        auth_valid.append('No')\n\n        for auth in auth_valid:\n            with self.subTest():\n                err_msgs = check_auth(0, auth)\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 0)\n                self.assertEqual(err_msgs, [])\n\n    def test_check_auth_without_backtick(self):\n        auth_without_backtick = [auth for auth in auth_keys if auth != 'No']\n\n        for auth in auth_without_backtick:\n            with self.subTest():\n                err_msgs = check_auth(0, auth)\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 1)\n\n                err_msg = err_msgs[0]\n                expected_err_msg = '(L001) auth value is not enclosed with `backticks`'\n\n                self.assertIsInstance(err_msg, str)\n                self.assertEqual(err_msg, expected_err_msg)\n\n    def test_check_auth_with_invalid_auth(self):\n        auth_invalid_without_backtick = ['Yes', 'yes', 'no', 'random', 'Unknown']\n        auth_invalid_with_backtick = ['`Yes`', '`yes`', '`no`', '`random`', '`Unknown`']\n\n        for auth in auth_invalid_without_backtick:\n            with self.subTest():\n                err_msgs = check_auth(0, auth)\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 2)\n\n                err_msg_1 = err_msgs[0]\n                err_msg_2 = err_msgs[1]\n\n                expected_err_msg_1 = f'(L001) auth value is not enclosed with `backticks`'\n                expected_err_msg_2 = f'(L001) {auth} is not a valid Auth option'\n\n                self.assertIsInstance(err_msg_1, str)\n                self.assertIsInstance(err_msg_2, str)\n                self.assertEqual(err_msg_1, expected_err_msg_1)\n                self.assertEqual(err_msg_2, expected_err_msg_2)\n\n        for auth in auth_invalid_with_backtick:\n            with self.subTest():\n                err_msgs = check_auth(0, auth)\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 1)\n\n                err_msg = err_msgs[0]\n                expected_err_msg = f'(L001) {auth} is not a valid Auth option'\n\n                self.assertIsInstance(err_msg, str)\n                self.assertEqual(err_msg, expected_err_msg)\n\n    def test_check_https_with_valid_https(self):\n        for https in https_keys:\n            with self.subTest():\n                err_msgs = check_https(0, https)\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 0)\n                self.assertEqual(err_msgs, [])\n\n    def test_check_https_with_invalid_https(self):\n        invalid_https_keys = ['yes', 'no', 'Unknown', 'https', 'http']\n\n        for https in invalid_https_keys:\n            with self.subTest():\n                err_msgs = check_https(0, https)\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 1)\n\n                err_msg = err_msgs[0]\n                expected_err_msg = f'(L001) {https} is not a valid HTTPS option'\n\n                self.assertIsInstance(err_msg, str)\n                self.assertEqual(err_msg, expected_err_msg)\n\n    def test_check_cors_with_valid_cors(self):\n        for cors in cors_keys:\n            with self.subTest():\n                err_msgs = check_cors(0, cors)\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 0)\n                self.assertEqual(err_msgs, [])\n\n    def test_check_cors_with_invalid_cors(self):\n        invalid_cors_keys = ['yes', 'no', 'unknown', 'cors']\n\n        for cors in invalid_cors_keys:\n            with self.subTest():\n                err_msgs = check_cors(0, cors)\n                self.assertIsInstance(err_msgs, list)\n                self.assertEqual(len(err_msgs), 1)\n\n                err_msg = err_msgs[0]\n                expected_err_msg = f'(L001) {cors} is not a",
    "children": [
        {
            "type": "comment",
            "start_token": 0,
            "end_token": 12,
            "label": "# -*- coding: utf-8 -*-\n",
            "children": []
        },
        {
            "type": "import_statement",
            "start_token": 14,
            "end_token": 15,
            "label": "import unittest",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 15,
                    "end_token": 15,
                    "label": "unittest",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 18,
            "end_token": 23,
            "label": "from validate.format import error_message",
            "children": [
                {
                    "type": "relative_import",
                    "start_token": 18,
                    "end_token": 21,
                    "label": "from validate.format",
                    "children": [
                        {
                            "type": "dotted_name",
                            "start_token": 19,
                            "end_token": 21,
                            "label": "validate.format",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "identifier",
                    "start_token": 23,
                    "end_token": 23,
                    "label": "error_message",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 25,
            "end_token": 30,
            "label": "from validate.format import get_categories_content",
            "children": [
                {
                    "type": "relative_import",
                    "start_token": 25,
                    "end_token": 28,
                    "label": "from validate.format",
                    "children": [
                        {
                            "type": "dotted_name",
                            "start_token": 26,
                            "end_token": 28,
                            "label": "validate.format",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "identifier",
                    "start_token": 30,
                    "end_token": 30,
                    "label": "get_categories_content",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 32,
            "end_token": 37,
            "label": "from validate.format import check_alphabetical_order",
            "children": [
                {
                    "type": "relative_import",
                    "start_token": 32,
                    "end_token": 35,
                    "label": "from validate.format",
                    "children": [
                        {
                            "type": "dotted_name",
                            "start_token": 33,
                            "end_token": 35,
                            "label": "validate.format",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "identifier",
                    "start_token": 37,
                    "end_token": 37,
                    "label": "check_alphabetical_order",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 39,
            "end_token": 51,
            "label": "from validate.format import check_title\nfrom validate.format import check_description",
            "children": [
                {
                    "type": "relative_import",
                    "start_token": 39,
                    "end_token": 42,
                    "label": "from validate.format",
                    "children": [
                        {
                            "type": "dotted_name",
                            "start_token": 40,
                            "end_token": 42,
                            "label": "validate.format",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "identifier",
                    "start_token": 44,
                    "end_token": 44,
                    "label": "check_title",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 51,
                    "end_token": 51,
                    "label": "check_description",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 55,
            "end_token": 62,
            "label": "from validate.format import check_auth, auth_keys",
            "children": [
                {
                    "type": "relative_import",
                    "start_token": 55,
                    "end_token": 58,
                    "label": "from validate.format",
                    "children": [
                        {
                            "type": "dotted_name",
                            "start_token": 56,
                            "end_token": 58,
                            "label": "validate.format",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "identifier",
                    "start_token": 60,
                    "end_token": 60,
                    "label": "check_auth",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 62,
                    "end_token": 62,
                    "label": "auth_keys",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 64,
            "end_token": 71,
            "label": "from validate.format import check_https, https_keys",
            "children": [
                {
                    "type": "relative_import",
                    "start_token": 64,
                    "end_token": 67,
                    "label": "from validate.format",
                    "children": [
                        {
                            "type": "dotted_name",
                            "start_token": 65,
                            "end_token": 67,
                            "label": "validate.format",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "identifier",
                    "start_token": 69,
                    "end_token": 69,
                    "label": "check_https",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 71,
                    "end_token": 71,
                    "label": "https_keys",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 73,
            "end_token": 80,
            "label": "from validate.format import check_cors, cors_keys",
            "children": [
                {
                    "type": "relative_import",
                    "start_token": 73,
                    "end_token": 76,
                    "label": "from validate.format",
                    "children": [
                        {
                            "type": "dotted_name",
                            "start_token": 74,
                            "end_token": 76,
                            "label": "validate.format",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "identifier",
                    "start_token": 78,
                    "end_token": 78,
                    "label": "check_cors",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 80,
                    "end_token": 80,
                    "label": "cors_keys",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 82,
            "end_token": 87,
            "label": "from validate.format import check_entry",
            "children": [
                {
                    "type": "relative_import",
                    "start_token": 82,
                    "end_token": 85,
                    "label": "from validate.format",
                    "children": [
                        {
                            "type": "dotted_name",
                            "start_token": 83,
                            "end_token": 85,
                            "label": "validate.format",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "identifier",
                    "start_token": 87,
                    "end_token": 87,
                    "label": "check_entry",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 89,
            "end_token": 98,
            "label": "from validate.format import check_file_format, min_entries_per_category, num_segments",
            "children": [
                {
                    "type": "relative_import",
                    "start_token": 89,
                    "end_token": 92,
                    "label": "from validate.format",
                    "children": [
                        {
                            "type": "dotted_name",
                            "start_token": 90,
                            "end_token": 92,
                            "label": "validate.format",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "identifier",
                    "start_token": 94,
                    "end_token": 94,
                    "label": "check_file_format",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 96,
                    "end_token": 96,
                    "label": "min_entries_per_category",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 98,
                    "end_token": 98,
                    "label": "num_segments",
                    "children": []
                }
            ]
        },
        {
            "type": "class_definition",
            "start_token": 102,
            "end_token": 249,
            "label": "class TestValidadeFormat(unittest.TestCase):\n    \n    def test_error_message_return_and_return_type(self):\n        line_num_unity = 1\n        line_num_ten = 10\n        line_num_hundred = 100\n        line_num_thousand = 1000\n\n        msg = 'This is a unit test'\n\n        err_msg_unity = error_message(line_num_unity, msg)\n        err_msg_ten = error_message(line_num_ten, msg)\n        err_msg_hundred = error_message(line_num_hundred, msg)\n        err_msg_thousand = error_message(line_num_thousand, msg)\n\n        self.assertIsInstance(err_msg_unity, str)\n        self.assertIsInstance(err_msg_ten, str)\n        self.assertIsInstance(err_msg_hundred, str)\n        self.assertIsInstance(err_msg_thousand, str)\n\n        self.assertEqual(err_msg_unity, '(L002) This is a unit test')\n        self.assertEqual(err_msg_ten, '(L011) This is a unit test')\n        self.assertEqual(err_msg_hundred, '(L101) This is a unit test')\n        self.assertEqual(err_msg_thousand, '(L1001) This is a unit test')",
            "children": [
                {
                    "type": "identifier",
                    "start_token": 103,
                    "end_token": 103,
                    "label": "TestValidadeFormat",
                    "children": []
                },
                {
                    "type": "argument_list",
                    "start_token": 104,
                    "end_token": 108,
                    "label": "(unittest.TestCase)",
                    "children": [
                        {
                            "type": "attribute",
                            "start_token": 105,
                            "end_token": 107,
                            "label": "unittest.TestCase",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 105,
                                    "end_token": 105,
                                    "label": "unittest",
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "start_token": 107,
                                    "end_token": 107,
                                    "label": "TestCase",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "start_token": 110,
                    "end_token": 249,
                    "label": "\n    \n    def test_error_message_return_and_return_type(self):\n        line_num_unity = 1\n        line_num_ten = 10\n        line_num_hundred = 100\n        line_num_thousand = 1000\n\n        msg = 'This is a unit test'\n\n        err_msg_unity = error_message(line_num_unity, msg)\n        err_msg_ten = error_message(line_num_ten, msg)\n        err_msg_hundred = error_message(line_num_hundred, msg)\n        err_msg_thousand = error_message(line_num_thousand, msg)\n\n        self.assertIsInstance(err_msg_unity, str)\n        self.assertIsInstance(err_msg_ten, str)\n        self.assertIsInstance(err_msg_hundred, str)\n        self.assertIsInstance(err_msg_thousand, str)\n\n        self.assertEqual(err_msg_unity, '(L002) This is a unit test')\n        self.assertEqual(err_msg_ten, '(L011) This is a unit test')\n        self.assertEqual(err_msg_hundred, '(L101) This is a unit test')\n        self.assertEqual(err_msg_thousand, '(L1001) This is a unit test')",
                    "children": [
                        {
                            "type": "function_definition",
                            "start_token": 112,
                            "end_token": 249,
                            "label": "def test_error_message_return_and_return_type(self):\n        line_num_unity = 1\n        line_num_ten = 10\n        line_num_hundred = 100\n        line_num_thousand = 1000\n\n        msg = 'This is a unit test'\n\n        err_msg_unity = error_message(line_num_unity, msg)\n        err_msg_ten = error_message(line_num_ten, msg)\n        err_msg_hundred = error_message(line_num_hundred, msg)\n        err_msg_thousand = error_message(line_num_thousand, msg)\n\n        self.assertIsInstance(err_msg_unity, str)\n        self.assertIsInstance(err_msg_ten, str)\n        self.assertIsInstance(err_msg_hundred, str)\n        self.assertIsInstance(err_msg_thousand, str)\n\n        self.assertEqual(err_msg_unity, '(L002) This is a unit test')\n        self.assertEqual(err_msg_ten, '(L011) This is a unit test')\n        self.assertEqual(err_msg_hundred, '(L101) This is a unit test')\n        self.assertEqual(err_msg_thousand, '(L1001) This is a unit test')",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 113,
                                    "end_token": 113,
                                    "label": "test_error_message_return_and_return_type",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "start_token": 114,
                                    "end_token": 116,
                                    "label": "(self)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 115,
                                            "end_token": 115,
                                            "label": "self",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "start_token": 118,
                                    "end_token": 249,
                                    "label": "\n        line_num_unity = 1\n        line_num_ten = 10\n        line_num_hundred = 100\n        line_num_thousand = 1000\n\n        msg = 'This is a unit test'\n\n        err_msg_unity = error_message(line_num_unity, msg)\n        err_msg_ten = error_message(line_num_ten, msg)\n        err_msg_hundred = error_message(line_num_hundred, msg)\n        err_msg_thousand = error_message(line_num_thousand, msg)\n\n        self.assertIsInstance(err_msg_unity, str)\n        self.assertIsInstance(err_msg_ten, str)\n        self.assertIsInstance(err_msg_hundred, str)\n        self.assertIsInstance(err_msg_thousand, str)\n\n        self.assertEqual(err_msg_unity, '(L002) This is a unit test')\n        self.assertEqual(err_msg_ten, '(L011) This is a unit test')\n        self.assertEqual(err_msg_hundred, '(L101) This is a unit test')\n        self.assertEqual(err_msg_thousand, '(L1001) This is a unit test')",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "start_token": 119,
                                            "end_token": 133,
                                            "label": "line_num_unity = 1\n        line_num_ten = 10\n        line_num_hundred = 100\n        line_num_thousand = 1000",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 119,
                                                    "end_token": 119,
                                                    "label": "line_num_unity",
                                                    "children": []
                                                },
                                                {
                                                    "type": "integer",
                                                    "start_token": 121,
                                                    "end_token": 121,
                                                    "label": "1",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 123,
                                            "end_token": 129,
                                            "label": "line_num_ten = 10\n        line_num_hundred = 100",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 123,
                                                    "end_token": 123,
                                                    "label": "line_num_ten",
                                                    "children": []
                                                },
                                                {
                                                    "type": "integer",
                                                    "start_token": 125,
                                                    "end_token": 125,
                                                    "label": "10",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 127,
                                            "end_token": 133,
                                            "label": "line_num_hundred = 100\n        line_num_thousand = 1000",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 127,
                                                    "end_token": 127,
                                                    "label": "line_num_hundred",
                                                    "children": []
                                                },
                                                {
                                                    "type": "integer",
                                                    "start_token": 129,
                                                    "end_token": 129,
                                                    "label": "100",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 135,
                                            "end_token": 138,
                                            "label": "\n        msg = 'This is a unit test'",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 135,
                                                    "end_token": 135,
                                                    "label": "\n",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string",
                                                    "start_token": 138,
                                                    "end_token": 138,
                                                    "label": "'This is a unit test'",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 141,
                                            "end_token": 148,
                                            "label": "err_msg_unity = error_message(line_num_unity, msg)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 141,
                                                    "end_token": 141,
                                                    "label": "err_msg_unity",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 143,
                                                    "end_token": 148,
                                                    "label": "error_message(line_num_unity, msg)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 143,
                                                            "end_token": 143,
                                                            "label": "error_message",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 144,
                                                            "end_token": 147,
                                                            "label": "(line_num_unity, msg",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 145,
                                                                    "end_token": 145,
                                                                    "label": "line_num_unity",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 147,
                                                                    "end_token": 147,
                                                                    "label": "msg",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 150,
                                            "end_token": 157,
                                            "label": "err_msg_ten = error_message(line_num_ten, msg)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 150,
                                                    "end_token": 150,
                                                    "label": "err_msg_ten",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 152,
                                                    "end_token": 157,
                                                    "label": "error_message(line_num_ten, msg)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 152,
                                                            "end_token": 152,
                                                            "label": "error_message",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 153,
                                                            "end_token": 156,
                                                            "label": "(line_num_ten, msg",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 154,
                                                                    "end_token": 154,
                                                                    "label": "line_num_ten",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 156,
                                                                    "end_token": 156,
                                                                    "label": "msg",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 159,
                                            "end_token": 166,
                                            "label": "err_msg_hundred = error_message(line_num_hundred, msg)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 159,
                                                    "end_token": 159,
                                                    "label": "err_msg_hundred",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 161,
                                                    "end_token": 166,
                                                    "label": "error_message(line_num_hundred, msg)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 161,
                                                            "end_token": 161,
                                                            "label": "error_message",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 162,
                                                            "end_token": 165,
                                                            "label": "(line_num_hundred, msg",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 163,
                                                                    "end_token": 163,
                                                                    "label": "line_num_hundred",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 165,
                                                                    "end_token": 165,
                                                                    "label": "msg",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 168,
                                            "end_token": 175,
                                            "label": "err_msg_thousand = error_message(line_num_thousand, msg)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 168,
                                                    "end_token": 168,
                                                    "label": "err_msg_thousand",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 170,
                                                    "end_token": 175,
                                                    "label": "error_message(line_num_thousand, msg)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 170,
                                                            "end_token": 170,
                                                            "label": "error_message",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 171,
                                                            "end_token": 174,
                                                            "label": "(line_num_thousand, msg",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 172,
                                                                    "end_token": 172,
                                                                    "label": "line_num_thousand",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 174,
                                                                    "end_token": 174,
                                                                    "label": "msg",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "call",
                                            "start_token": 178,
                                            "end_token": 185,
                                            "label": "self.assertIsInstance(err_msg_unity, str)",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "start_token": 178,
                                                    "end_token": 180,
                                                    "label": "self.assertIsInstance",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 178,
                                                            "end_token": 178,
                                                            "label": "self",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 180,
                                                            "end_token": 180,
                                                            "label": "assertIsInstance",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "start_token": 181,
                                                    "end_token": 184,
                                                    "label": "(err_msg_unity, str",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 182,
                                                            "end_token": 182,
                                                            "label": "err_msg_unity",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "true",
                                                            "start_token": 184,
                                                            "end_token": 184,
                                                            "label": "str",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "call",
                                            "start_token": 187,
                                            "end_token": 194,
                                            "label": "self.assertIsInstance(err_msg_ten, str)",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "start_token": 187,
                                                    "end_token": 189,
                                                    "label": "self.assertIsInstance",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 187,
                                                            "end_token": 187,
                                                            "label": "self",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 189,
                                                            "end_token": 189,
                                                            "label": "assertIsInstance",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "start_token": 190,
                                                    "end_token": 193,
                                                    "label": "(err_msg_ten, str",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 191,
                                                            "end_token": 191,
                                                            "label": "err_msg_ten",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "true",
                                                            "start_token": 193,
                                                            "end_token": 193,
                                                            "label": "str",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "call",
                                            "start_token": 196,
                                            "end_token": 203,
                                            "label": "self.assertIsInstance(err_msg_hundred, str)",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "start_token": 196,
                                                    "end_token": 198,
                                                    "label": "self.assertIsInstance",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 196,
                                                            "end_token": 196,
                                                            "label": "self",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 198,
                                                            "end_token": 198,
                                                            "label": "assertIsInstance",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "start_token": 199,
                                                    "end_token": 202,
                                                    "label": "(err_msg_hundred, str",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 200,
                                                            "end_token": 200,
                                                            "label": "err_msg_hundred",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "true",
                                                            "start_token": 202,
                                                            "end_token": 202,
                                                            "label": "str",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "call",
                                            "start_token": 205,
                                            "end_token": 212,
                                            "label": "self.assertIsInstance(err_msg_thousand, str)",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "start_token": 205,
                                                    "end_token": 207,
                                                    "label": "self.assertIsInstance",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 205,
                                                            "end_token": 205,
                                                            "label": "self",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 207,
                                                            "end_token": 207,
                                                            "label": "assertIsInstance",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "start_token": 208,
                                                    "end_token": 211,
                                                    "label": "(err_msg_thousand, str",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 209,
                                                            "end_token": 209,
                                                            "label": "err_msg_thousand",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "true",
                                                            "start_token": 211,
                                                            "end_token": 211,
                                                            "label": "str",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "call",
                                            "start_token": 215,
                                            "end_token": 222,
                                            "label": "self.assertEqual(err_msg_unity, '(L002) This is a unit test')",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "start_token": 215,
                                                    "end_token": 217,
                                                    "label": "self.assertEqual",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 215,
                                                            "end_token": 215,
                                                            "label": "self",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 217,
                                                            "end_token": 217,
                                                            "label": "assertEqual",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "start_token": 218,
                                                    "end_token": 221,
                                                    "label": "(err_msg_unity, '(L002) This is a unit test'",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 219,
                                                            "end_token": 219,
                                                            "label": "err_msg_unity",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string",
                                                            "start_token": 221,
                                                            "end_token": 221,
                                                            "label": "'(L002) This is a unit test'",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "call",
                                            "start_token": 224,
                                            "end_token": 231,
                                            "label": "self.assertEqual(err_msg_ten, '(L011) This is a unit test')",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "start_token": 224,
                                                    "end_token": 226,
                                                    "label": "self.assertEqual",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 224,
                                                            "end_token": 224,
                                                            "label": "self",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 226,
                                                            "end_token": 226,
                                                            "label": "assertEqual",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "start_token": 227,
                                                    "end_token": 230,
                                                    "label": "(err_msg_ten, '(L011) This is a unit test'",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 228,
                                                            "end_token": 228,
                                                            "label": "err_msg_ten",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string",
                                                            "start_token": 230,
                                                            "end_token": 230,
                                                            "label": "'(L011) This is a unit test'",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "call",
                                            "start_token": 233,
                                            "end_token": 240,
                                            "label": "self.assertEqual(err_msg_hundred, '(L101) This is a unit test')",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "start_token": 233,
                                                    "end_token": 235,
                                                    "label": "self.assertEqual",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 233,
                                                            "end_token": 233,
                                                            "label": "self",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 235,
                                                            "end_token": 235,
                                                            "label": "assertEqual",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "start_token": 236,
                                                    "end_token": 239,
                                                    "label": "(err_msg_hundred, '(L101) This is a unit test'",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 237,
                                                            "end_token": 237,
                                                            "label": "err_msg_hundred",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "integer",
                                                            "start_token": 239,
                                                            "end_token": 239,
                                                            "label": "'(L101) This is a unit test'",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "call",
                                            "start_token": 242,
                                            "end_token": 249,
                                            "label": "self.assertEqual(err_msg_thousand, '(L1001) This is a unit test')",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "start_token": 242,
                                                    "end_token": 244,
                                                    "label": "self.assertEqual",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 242,
                                                            "end_token": 242,
                                                            "label": "self",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 244,
                                                            "end_token": 244,
                                                            "label": "assertEqual",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "start_token": 245,
                                                    "end_token": 248,
                                                    "label": "(err_msg_thousand, '(L1001) This is a unit test'",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 246,
                                                            "end_token": 246,
                                                            "label": "err_msg_thousand",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "integer",
                                                            "start_token": 248,
                                                            "end_token": 248,
                                                            "label": "'(L1001) This is a unit test'",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}