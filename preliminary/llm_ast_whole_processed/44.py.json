{
    "type": "module",
    "start_token": 0,
    "end_token": 555,
    "label": "",
    "children": [
        {
            "type": "import_from_statement",
            "start_token": 0,
            "end_token": 3,
            "label": "from enum import Enum",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 1,
                    "end_token": 1,
                    "label": "enum",
                    "children": []
                },
                {
                    "type": "import_list",
                    "start_token": 2,
                    "end_token": 3,
                    "label": "import Enum",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 5,
            "end_token": 10,
            "label": "from typing import List, Literal",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 6,
                    "end_token": 6,
                    "label": "typing",
                    "children": []
                },
                {
                    "type": "import_list",
                    "start_token": 7,
                    "end_token": 10,
                    "label": "import List, Literal",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 13,
            "end_token": 16,
            "label": "from pydantic import SecretStr",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 14,
                    "end_token": 14,
                    "label": "pydantic",
                    "children": []
                },
                {
                    "type": "import_list",
                    "start_token": 15,
                    "end_token": 16,
                    "label": "import SecretStr",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 19,
            "end_token": 32,
            "label": "from backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 20,
                    "end_token": 24,
                    "label": "backend.data.block",
                    "children": []
                },
                {
                    "type": "import_list",
                    "start_token": 25,
                    "end_token": 32,
                    "label": "import Block, BlockCategory, BlockOutput, BlockSchema",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 34,
            "end_token": 61,
            "label": "from backend.data.model import (\n    APIKeyCredentials,\n    BlockSecret,\n    CredentialsField,\n    CredentialsMetaInput,\n    SchemaField,\n    SecretField,\n)",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 35,
                    "end_token": 39,
                    "label": "backend.data.model",
                    "children": []
                },
                {
                    "type": "import_list",
                    "start_token": 40,
                    "end_token": 61,
                    "label": "import (\n    APIKeyCredentials,\n    BlockSecret,\n    CredentialsField,\n    CredentialsMetaInput,\n    SchemaField,\n    SecretField,\n)",
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 43,
                            "end_token": 55,
                            "label": "APIKeyCredentials,\n    BlockSecret,\n    CredentialsField,\n    CredentialsMetaInput,\n    SchemaField",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 63,
            "end_token": 70,
            "label": "from backend.integrations.providers import ProviderName",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 64,
                    "end_token": 68,
                    "label": "backend.integrations.providers",
                    "children": []
                },
                {
                    "type": "import_list",
                    "start_token": 69,
                    "end_token": 70,
                    "label": "import ProviderName",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 72,
            "end_token": 79,
            "label": "from backend.util.request import requests",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 73,
                    "end_token": 77,
                    "label": "backend.util.request",
                    "children": []
                },
                {
                    "type": "import_list",
                    "start_token": 78,
                    "end_token": 79,
                    "label": "import requests",
                    "children": []
                }
            ]
        },
        {
            "type": "assignment",
            "start_token": 82,
            "end_token": 115,
            "label": "TEST_CREDENTIALS = APIKeyCredentials(\n    id=\"01234567-89ab-cdef-0123-456789abcdef\",\n    provider=\"medium\",\n    api_key=SecretStr(\"mock-medium-api-key\"),\n    title=\"Mock Medium API key\",\n    expires_at=None,\n)",
            "children": [
                {
                    "type": "identifier",
                    "start_token": 82,
                    "end_token": 82,
                    "label": "TEST_CREDENTIALS",
                    "children": []
                },
                {
                    "type": "expression_list",
                    "start_token": 84,
                    "end_token": 115,
                    "label": "APIKeyCredentials(\n    id=\"01234567-89ab-cdef-0123-456789abcdef\",\n    provider=\"medium\",\n    api_key=SecretStr(\"mock-medium-api-key\"),\n    title=\"Mock Medium API key\",\n    expires_at=None,\n)",
                    "children": [
                        {
                            "type": "call",
                            "start_token": 84,
                            "end_token": 115,
                            "label": "APIKeyCredentials(\n    id=\"01234567-89ab-cdef-0123-456789abcdef\",\n    provider=\"medium\",\n    api_key=SecretStr(\"mock-medium-api-key\"),\n    title=\"Mock Medium API key\",\n    expires_at=None,\n)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 84,
                                    "end_token": 84,
                                    "label": "APIKeyCredentials",
                                    "children": []
                                },
                                {
                                    "type": "argument_list",
                                    "start_token": 85,
                                    "end_token": 115,
                                    "label": "(\n    id=\"01234567-89ab-cdef-0123-456789abcdef\",\n    provider=\"medium\",\n    api_key=SecretStr(\"mock-medium-api-key\"),\n    title=\"Mock Medium API key\",\n    expires_at=None,\n)",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "assignment",
            "start_token": 117,
            "end_token": 149,
            "label": "TEST_CREDENTIALS_INPUT = {\n    \"provider\": TEST_CREDENTIALS.provider,\n    \"id\": TEST_CREDENTIALS.id,\n    \"type\": TEST_CREDENTIALS.type,\n    \"title\": TEST_CREDENTIALS.type,\n}",
            "children": [
                {
                    "type": "dictionary",
                    "start_token": 119,
                    "end_token": 149,
                    "label": "{\n    \"provider\": TEST_CREDENTIALS.provider,\n    \"id\": TEST_CREDENTIALS.id,\n    \"type\": TEST_CREDENTIALS.type,\n    \"title\": TEST_CREDENTIALS.type,\n}",
                    "children": [
                        {
                            "type": "pair",
                            "start_token": 121,
                            "end_token": 126,
                            "label": "\"provider\": TEST_CREDENTIALS.provider,",
                            "children": [
                                {
                                    "type": "string",
                                    "start_token": 121,
                                    "end_token": 121,
                                    "label": "\"provider\"",
                                    "children": []
                                },
                                {
                                    "type": "attribute",
                                    "start_token": 123,
                                    "end_token": 125,
                                    "label": "TEST_CREDENTIALS.provider",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 123,
                                            "end_token": 125,
                                            "label": "TEST_CREDENTIALS.provider",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "class_definition",
            "start_token": 153,
            "end_token": 172,
            "label": "class PublishToMediumStatus(str, Enum):\n    PUBLIC = \"public\"\n    DRAFT = \"draft\"\n    UNLISTED = \"unlisted\"",
            "children": [
                {
                    "type": "identifier",
                    "start_token": 154,
                    "end_token": 154,
                    "label": "PublishToMediumStatus",
                    "children": []
                },
                {
                    "type": "block",
                    "start_token": 160,
                    "end_token": 172,
                    "label": ":\n    PUBLIC = \"public\"\n    DRAFT = \"draft\"\n    UNLISTED = \"unlisted\"",
                    "children": [
                        {
                            "type": "assignment",
                            "start_token": 162,
                            "end_token": 164,
                            "label": "PUBLIC = \"public\"",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 162,
                                    "end_token": 162,
                                    "label": "PUBLIC",
                                    "children": []
                                },
                                {
                                    "type": "string",
                                    "start_token": 163,
                                    "end_token": 163,
                                    "label": "=",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "assignment",
                            "start_token": 166,
                            "end_token": 168,
                            "label": "DRAFT = \"draft\"",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 166,
                                    "end_token": 166,
                                    "label": "DRAFT",
                                    "children": []
                                },
                                {
                                    "type": "string",
                                    "start_token": 167,
                                    "end_token": 167,
                                    "label": "=",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "assignment",
                            "start_token": 170,
                            "end_token": 172,
                            "label": "UNLISTED = \"unlisted\"",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 170,
                                    "end_token": 170,
                                    "label": "UNLISTED",
                                    "children": []
                                },
                                {
                                    "type": "string",
                                    "start_token": 171,
                                    "end_token": 171,
                                    "label": "=",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "class_definition",
            "start_token": 176,
            "end_token": 555,
            "label": "",
            "children": [
                {
                    "type": "identifier",
                    "start_token": 177,
                    "end_token": 177,
                    "label": "PublishToMediumBlock",
                    "children": []
                },
                {
                    "type": "block",
                    "start_token": 181,
                    "end_token": 555,
                    "label": "",
                    "children": [
                        {
                            "type": "class_definition",
                            "start_token": 183,
                            "end_token": 342,
                            "label": "class Input(BlockSchema):\n        author_id: BlockSecret = SecretField(\n            key=\"medium_author_id\",\n            description=\"\"\"The Medium AuthorID of the user. You can get this by calling the /me endpoint of the Medium API.\\n\\ncurl -H \"Authorization: Bearer YOUR_ACCESS_TOKEN\" https://api.medium.com/v1/me\" the response will contain the authorId field.\"\"\",\n            placeholder=\"Enter the author's Medium AuthorID\",\n        )\n        title: str = SchemaField(\n            description=\"The title of your Medium post\",\n            placeholder=\"Enter your post title\",\n        )\n        content: str = SchemaField(\n            description=\"The main content of your Medium post\",\n            placeholder=\"Enter your post content\",\n        )\n        content_format: str = SchemaField(\n            description=\"The format of the content: 'html' or 'markdown'\",\n            placeholder=\"html\",\n        )\n        tags: List[str] = SchemaField(\n            description=\"List of tags for your Medium post (up to 5)\",\n            placeholder=\"['technology', 'AI', 'blogging']\",\n        )\n        canonical_url: str | None = SchemaField(\n            default=None,\n            description=\"The original home of this content, if it was originally published elsewhere\",\n            placeholder=\"https://yourblog.com/original-post\",\n        )\n        publish_status: PublishToMediumStatus = SchemaField(\n            description=\"The publish status\",\n            placeholder=PublishToMediumStatus.DRAFT,\n        )\n        license: str = SchemaField(\n            default=\"all-rights-reserved\",\n            description=\"The license of the post: 'all-rights-reserved', 'cc-40-by', 'cc-40-by-sa', 'cc-40-by-nd', 'cc-40-by-nc', 'cc-40-by-nc-nd', 'cc-40-by-nc-sa', 'cc-40-zero', 'public-domain'\",\n            placeholder=\"all-rights-reserved\",\n        )\n        notify_followers: bool = SchemaField(\n            default=False,\n            description=\"Whether to notify followers that the user has published\",\n            placeholder=\"False\",\n        )\n        credentials: CredentialsMetaInput[\n            Literal[ProviderName.MEDIUM], Literal[\"api_key\"]\n        ] = CredentialsField(\n            description=\"The Medium integration can be used with any API key with sufficient permissions for the blocks it is used on.",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 184,
                                    "end_token": 184,
                                    "label": "Input",
                                    "children": []
                                },
                                {
                                    "type": "block",
                                    "start_token": 188,
                                    "end_token": 342,
                                    "label": ":\n        author_id: BlockSecret = SecretField(\n            key=\"medium_author_id\",\n            description=\"\"\"The Medium AuthorID of the user. You can get this by calling the /me endpoint of the Medium API.\\n\\ncurl -H \"Authorization: Bearer YOUR_ACCESS_TOKEN\" https://api.medium.com/v1/me\" the response will contain the authorId field.\"\"\",\n            placeholder=\"Enter the author's Medium AuthorID\",\n        )\n        title: str = SchemaField(\n            description=\"The title of your Medium post\",\n            placeholder=\"Enter your post title\",\n        )\n        content: str = SchemaField(\n            description=\"The main content of your Medium post\",\n            placeholder=\"Enter your post content\",\n        )\n        content_format: str = SchemaField(\n            description=\"The format of the content: 'html' or 'markdown'\",\n            placeholder=\"html\",\n        )\n        tags: List[str] = SchemaField(\n            description=\"List of tags for your Medium post (up to 5)\",\n            placeholder=\"['technology', 'AI', 'blogging']\",\n        )\n        canonical_url: str | None = SchemaField(\n            default=None,\n            description=\"The original home of this content, if it was originally published elsewhere\",\n            placeholder=\"https://yourblog.com/original-post\",\n        )\n        publish_status: PublishToMediumStatus = SchemaField(\n            description=\"The publish status\",\n            placeholder=PublishToMediumStatus.DRAFT,\n        )\n        license: str = SchemaField(\n            default=\"all-rights-reserved\",\n            description=\"The license of the post: 'all-rights-reserved', 'cc-40-by', 'cc-40-by-sa', 'cc-40-by-nd', 'cc-40-by-nc', 'cc-40-by-nc-nd', 'cc-40-by-nc-sa', 'cc-40-zero', 'public-domain'\",\n            placeholder=\"all-rights-reserved\",\n        )\n        notify_followers: bool = SchemaField(\n            default=False,\n            description=\"Whether to notify followers that the user has published\",\n            placeholder=\"False\",\n        )\n        credentials: CredentialsMetaInput[\n            Literal[ProviderName.MEDIUM], Literal[\"api_key\"]\n        ] = CredentialsField(\n            description=\"The Medium integration can be used with any API key with sufficient permissions for the blocks it is used on.",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "class_definition",
                            "start_token": 346,
                            "end_token": 375,
                            "label": "of the created Medium post\")\n        post_url: str = SchemaField(description=\"The URL of the created Medium post\")\n        published_at: int = SchemaField(\n            description=\"The timestamp when the post was published\"\n        )\n        error: str = SchemaField(\n            description=\"Error message if the post creation failed\"\n        )\n\n    def __init__(self):\n        super().__init__(\n            id=\"",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 347,
                                    "end_token": 347,
                                    "label": "the",
                                    "children": []
                                },
                                {
                                    "type": "block",
                                    "start_token": 350,
                                    "end_token": 375,
                                    "label": "post\")\n        post_url: str = SchemaField(description=\"The URL of the created Medium post\")\n        published_at: int = SchemaField(\n            description=\"The timestamp when the post was published\"\n        )\n        error: str = SchemaField(\n            description=\"Error message if the post creation failed\"\n        )\n\n    def __init__(self):\n        super().__init__(\n            id=\"",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "start_token": 381,
                            "end_token": 447,
                            "label": "-4e3f-b0f1-88132e1b89df\",\n            input_schema=PublishToMediumBlock.Input,\n            output_schema=PublishToMediumBlock.Output,\n            description=\"Publishes a post to Medium.\",\n            categories={BlockCategory.SOCIAL},\n            test_input={\n                \"author_id\": \"1234567890abcdef\",\n                \"title\": \"Test Post\",\n                \"content\": \"<h1>Test Content</h1><p>This is a test post.</p>\",\n                \"content_format\": \"html\",\n                \"tags\": [\"test\", \"automation\"],\n                \"license\": \"all-rights-",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 382,
                                    "end_token": 382,
                                    "label": "4",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "start_token": 383,
                                    "end_token": 385,
                                    "label": "e3f-b0f1",
                                    "children": []
                                },
                                {
                                    "type": "block",
                                    "start_token": 386,
                                    "end_token": 447,
                                    "label": "-88132e1b89df\",\n            input_schema=PublishToMediumBlock.Input,\n            output_schema=PublishToMediumBlock.Output,\n            description=\"Publishes a post to Medium.\",\n            categories={BlockCategory.SOCIAL},\n            test_input={\n                \"author_id\": \"1234567890abcdef\",\n                \"title\": \"Test Post\",\n                \"content\": \"<h1>Test Content</h1><p>This is a test post.</p>\",\n                \"content_format\": \"html\",\n                \"tags\": [\"test\", \"automation\"],\n                \"license\": \"all-rights-",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "start_token": 451,
                            "end_token": 555,
                            "label": "",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 452,
                                    "end_token": 452,
                                    "label": "publish_status",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "start_token": 453,
                                    "end_token": 455,
                                    "label": "\": PublishToMediumStatus.DRAFT.value,\n                \"credentials\": TEST_CREDENTIALS_INPUT,\n            },\n            test_output=[\n                (\"",
                                    "children": []
                                },
                                {
                                    "type": "block",
                                    "start_token": 456,
                                    "end_token": 555,
                                    "label": "",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}