{
    "type": "module",
    "start_token": 0,
    "end_token": 614,
    "label": "from enum import Enum\nfrom typing import Any\n\nfrom backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema\nfrom backend.data.model import SchemaField\n\n\nclass ComparisonOperator(Enum):\n    EQUAL = \"==\"\n    NOT_EQUAL = \"!=\"\n    GREATER_THAN = \">\"\n    LESS_THAN = \"<\"\n    GREATER_THAN_OR_EQUAL = \">=\"\n    LESS_THAN_OR_EQUAL = \"<=\"\n\n\nclass ConditionBlock(Block):\n    class Input(BlockSchema):\n        value1: Any = SchemaField(\n            description=\"Enter the first value for comparison\",\n            placeholder=\"For example: 10 or 'hello' or True\",\n        )\n        operator: ComparisonOperator = SchemaField(\n            description=\"Choose the comparison operator\",\n            placeholder=\"Select an operator\",\n        )\n        value2: Any = SchemaField(\n            description=\"Enter the second value for comparison\",\n            placeholder=\"For example: 20 or 'world' or False\",\n        )\n        yes_value: Any = SchemaField(\n            description=\"(Optional) Value to output if the condition is true. If not provided, value1 will be used.\",\n            placeholder=\"Leave empty to use value1, or enter a specific value\",\n            default=None,\n        )\n        no_value: Any = SchemaField(\n            description=\"(Optional) Value to output if the condition is false. If not provided, value1 will be used.\",\n            placeholder=\"Leave empty to use value1, or enter a specific value\",\n            default=None,\n        )\n\n    class Output(BlockSchema):\n        result: bool = SchemaField(\n            description=\"The result of the condition evaluation (True or False)\"\n        )\n        yes_output: Any = SchemaField(\n            description=\"The output value if the condition is true\"\n        )\n        no_output: Any = SchemaField(\n            description=\"The output value if the condition is false\"\n        )\n\n    def __init__(self):\n        super().__init__(\n            id=\"715696a0-e1da-45c8-b209-c2fa9c3b0be6\",\n            input_schema=ConditionBlock.Input,\n            output_schema=ConditionBlock.Output,\n            description=\"Handles conditional logic based on comparison operators\",\n            categories={BlockCategory.LOGIC},\n            test_input={\n                \"value1\": 10,\n                \"operator\": ComparisonOperator.GREATER_THAN.value,\n                \"value2\": 5,\n                \"yes_value\": \"Greater\",\n                \"no_value\": \"Not greater\",\n            },\n            test_output=[\n                (\"result\", True),\n                (\"yes_output\", \"Greater\"),\n            ],\n        )\n\n    def run(self, input_data: Input, **kwargs) -> BlockOutput:\n        operator = input_data.operator\n\n        value1 = input_data.value1\n        if isinstance(value1, str):\n            try:\n                value1 = float(value1.strip())\n            except ValueError:\n                value1 = value1.strip()\n\n        value2 = input_data.value2\n        if isinstance(value2, str):\n            try:\n                value2 = float(value2.strip())\n            except ValueError:\n                value2 = value2.strip()\n\n        yes_value = input_data.yes_value if input_data.yes_value is not None else value1\n        no_value = input_data.no_value if input_data.no_value is not None else value2\n\n        comparison_funcs = {\n            ComparisonOperator.EQUAL: lambda a, b: a == b,\n            ComparisonOperator.NOT_EQUAL: lambda a, b: a != b,\n            ComparisonOperator.GREATER_THAN: lambda a, b: a > b,\n            ComparisonOperator.LESS_THAN: lambda a, b: a < b,\n            ComparisonOperator.GREATER_THAN_OR_EQUAL: lambda a, b: a >= b,\n            ComparisonOperator.LESS_THAN_OR_EQUAL: lambda a, b: a <= b,\n        }\n\n        result = comparison_funcs[operator](value1, value2)\n\n        yield \"result\", result\n\n        if result:\n            yield \"yes_output\", yes_value\n        else:\n            yield \"no_output\", no_value\n",
    "children": [
        {
            "type": "import_from_statement",
            "start_token": 0,
            "end_token": 3,
            "label": "from enum import Enum",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 1,
                    "end_token": 1,
                    "label": "enum",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 3,
                    "end_token": 3,
                    "label": "Enum",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 5,
            "end_token": 8,
            "label": "from typing import Any",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 6,
                    "end_token": 6,
                    "label": "typing",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 8,
                    "end_token": 8,
                    "label": "Any",
                    "children": []
                }
            ]
        },
        {
            "type": "relative_import",
            "start_token": 11,
            "end_token": 24,
            "label": "from backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 12,
                    "end_token": 16,
                    "label": "backend.data.block",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 18,
                    "end_token": 18,
                    "label": "Block",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 20,
                    "end_token": 20,
                    "label": "BlockCategory",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 22,
                    "end_token": 22,
                    "label": "BlockOutput",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 24,
                    "end_token": 24,
                    "label": "BlockSchema",
                    "children": []
                }
            ]
        },
        {
            "type": "relative_import",
            "start_token": 26,
            "end_token": 33,
            "label": "from backend.data.model import SchemaField",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 27,
                    "end_token": 31,
                    "label": "backend.data.model",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 33,
                    "end_token": 33,
                    "label": "SchemaField",
                    "children": []
                }
            ]
        },
        {
            "type": "class_definition",
            "start_token": 37,
            "end_token": 67,
            "label": "class ComparisonOperator(Enum):\n    EQUAL = \"==\"\n    NOT_EQUAL = \"!=\"\n    GREATER_THAN = \">\"\n    LESS_THAN = \"<\"\n    GREATER_THAN_OR_EQUAL = \">=\"\n    LESS_THAN_OR_EQUAL = \"<=\"\n",
            "children": [
                {
                    "type": "identifier",
                    "start_token": 38,
                    "end_token": 38,
                    "label": "ComparisonOperator",
                    "children": []
                },
                {
                    "type": "parenthesized_expression",
                    "start_token": 39,
                    "end_token": 41,
                    "label": "(Enum)",
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 40,
                            "end_token": 40,
                            "label": "Enum",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "start_token": 42,
                    "end_token": 67,
                    "label": ":\n    EQUAL = \"==\"\n    NOT_EQUAL = \"!=\"\n    GREATER_THAN = \">\"\n    LESS_THAN = \"<\"\n    GREATER_THAN_OR_EQUAL = \">=\"\n    LESS_THAN_OR_EQUAL = \"<=\"\n",
                    "children": [
                        {
                            "type": "assignment",
                            "start_token": 44,
                            "end_token": 46,
                            "label": "EQUAL = \"==\"",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 44,
                                    "end_token": 44,
                                    "label": "EQUAL",
                                    "children": []
                                },
                                {
                                    "type": "string",
                                    "start_token": 46,
                                    "end_token": 46,
                                    "label": "\"==\"",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "assignment",
                            "start_token": 48,
                            "end_token": 50,
                            "label": "NOT_EQUAL = \"!=\"",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 48,
                                    "end_token": 48,
                                    "label": "NOT_EQUAL",
                                    "children": []
                                },
                                {
                                    "type": "string",
                                    "start_token": 50,
                                    "end_token": 50,
                                    "label": "\"!=\"",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "assignment",
                            "start_token": 52,
                            "end_token": 54,
                            "label": "GREATER_THAN = \">\"",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 52,
                                    "end_token": 52,
                                    "label": "GREATER_THAN",
                                    "children": []
                                },
                                {
                                    "type": "string",
                                    "start_token": 54,
                                    "end_token": 54,
                                    "label": "\">\"",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "assignment",
                            "start_token": 56,
                            "end_token": 58,
                            "label": "LESS_THAN = \"<\"",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 56,
                                    "end_token": 56,
                                    "label": "LESS_THAN",
                                    "children": []
                                },
                                {
                                    "type": "string",
                                    "start_token": 58,
                                    "end_token": 58,
                                    "label": "\"<\"",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "assignment",
                            "start_token": 60,
                            "end_token": 62,
                            "label": "GREATER_THAN_OR_EQUAL = \">=\"",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 60,
                                    "end_token": 60,
                                    "label": "GREATER_THAN_OR_EQUAL",
                                    "children": []
                                },
                                {
                                    "type": "string",
                                    "start_token": 62,
                                    "end_token": 62,
                                    "label": "\">=\"",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "assignment",
                            "start_token": 64,
                            "end_token": 66,
                            "label": "LESS_THAN_OR_EQUAL = \"<=\"",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 64,
                                    "end_token": 64,
                                    "label": "LESS_THAN_OR_EQUAL",
                                    "children": []
                                },
                                {
                                    "type": "string",
                                    "start_token": 66,
                                    "end_token": 66,
                                    "label": "\"<=\"",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "class_definition",
            "start_token": 70,
            "end_token": 341,
            "label": "class ConditionBlock(Block):\n    class Input(BlockSchema):\n        value1: Any = SchemaField(\n            description=\"Enter the first value for comparison\",\n            placeholder=\"For example: 10 or 'hello' or True\",\n        )\n        operator: ComparisonOperator = SchemaField(\n            description=\"Choose the comparison operator\",\n            placeholder=\"Select an operator\",\n        )\n        value2: Any = SchemaField(\n            description=\"Enter the second value for comparison\",\n            placeholder=\"For example: 20 or 'world' or False\",\n        )\n        yes_value: Any = SchemaField(\n            description=\"(Optional) Value to output if the condition is true. If not provided, value1 will be used.\",\n            placeholder=\"Leave empty to use value1, or enter a specific value\",\n            default=None,\n        )\n        no_value: Any = SchemaField(\n            description=\"(Optional) Value to output if the condition is false. If not provided, value1 will be used.\",\n            placeholder=\"Leave empty to use value1, or enter a specific value\",\n            default=None,\n        )\n\n    class Output(BlockSchema):\n        result: bool = SchemaField(\n            description=\"The result of the condition evaluation (True or False)\"\n        )\n        yes_output: Any = SchemaField(\n            description=\"The output value if the condition is true\"\n        )\n        no_output: Any = SchemaField(\n            description=\"The output value if the condition is false\"\n        )\n\n    def __init__(self):\n        super().__init__(\n            id=\"715696a0-e1da-45c8-b209-c2fa9c3b0be6\",\n            input_schema=ConditionBlock.Input,\n            output_schema=ConditionBlock.Output,\n            description=\"Handles conditional logic based on comparison operators\",\n            categories={BlockCategory.LOGIC},\n            test_input={\n                \"value1\": 10,\n                \"operator\": ComparisonOperator.GREATER_THAN.value,\n                \"value2\": 5,\n                \"yes_value\": \"Greater\",\n                \"no_value\": \"Not greater\",\n            },\n            test_output=[\n                (\"result\", True),\n                (\"yes_output\", \"Greater\"),\n            ],\n        )",
            "children": [
                {
                    "type": "identifier",
                    "start_token": 71,
                    "end_token": 71,
                    "label": "ConditionBlock",
                    "children": []
                },
                {
                    "type": "parenthesized_expression",
                    "start_token": 72,
                    "end_token": 74,
                    "label": "(Block)",
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 73,
                            "end_token": 73,
                            "label": "Block",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "start_token": 75,
                    "end_token": 341,
                    "label": ":\n    class Input(BlockSchema):\n        value1: Any = SchemaField(\n            description=\"Enter the first value for comparison\",\n            placeholder=\"For example: 10 or 'hello' or True\",\n        )\n        operator: ComparisonOperator = SchemaField(\n            description=\"Choose the comparison operator\",\n            placeholder=\"Select an operator\",\n        )\n        value2: Any = SchemaField(\n            description=\"Enter the second value for comparison\",\n            placeholder=\"For example: 20 or 'world' or False\",\n        )\n        yes_value: Any = SchemaField(\n            description=\"(Optional) Value to output if the condition is true. If not provided, value1 will be used.\",\n            placeholder=\"Leave empty to use value1, or enter a specific value\",\n            default=None,\n        )\n        no_value: Any = SchemaField(\n            description=\"(Optional) Value to output if the condition is false. If not provided, value1 will be used.\",\n            placeholder=\"Leave empty to use value1, or enter a specific value\",\n            default=None,\n        )\n\n    class Output(BlockSchema):\n        result: bool = SchemaField(\n            description=\"The result of the condition evaluation (True or False)\"\n        )\n        yes_output: Any = SchemaField(\n            description=\"The output value if the condition is true\"\n        )\n        no_output: Any = SchemaField(\n            description=\"The output value if the condition is false\"\n        )\n\n    def __init__(self):\n        super().__init__(\n            id=\"715696a0-e1da-45c8-b209-c2fa9c3b0be6\",\n            input_schema=ConditionBlock.Input,\n            output_schema=ConditionBlock.Output,\n            description=\"Handles conditional logic based on comparison operators\",\n            categories={BlockCategory.LOGIC},\n            test_input={\n                \"value1\": 10,\n                \"operator\": ComparisonOperator.GREATER_THAN.value,\n                \"value2\": 5,\n                \"yes_value\": \"Greater\",\n                \"no_value\": \"Not greater\",\n            },\n            test_output=[\n                (\"result\", True),\n                (\"yes_output\", \"Greater\"),\n            ],\n        )",
                    "children": [
                        {
                            "type": "class_definition",
                            "start_token": 77,
                            "end_token": 187,
                            "label": "class Input(BlockSchema):\n        value1: Any = SchemaField(\n            description=\"Enter the first value for comparison\",\n            placeholder=\"For example: 10 or 'hello' or True\",\n        )\n        operator: ComparisonOperator = SchemaField(\n            description=\"Choose the comparison operator\",\n            placeholder=\"Select an operator\",\n        )\n        value2: Any = SchemaField(\n            description=\"Enter the second value for comparison\",\n            placeholder=\"For example: 20 or 'world' or False\",\n        )\n        yes_value: Any = SchemaField(\n            description=\"(Optional) Value to output if the condition is true. If not provided, value1 will be used.\",\n            placeholder=\"Leave empty to use value1, or enter a specific value\",\n            default=None,\n        )\n        no_value: Any = SchemaField(\n            description=\"(Optional) Value to output if the condition is false. If not provided, value1 will be used.\",\n            placeholder=\"Leave empty to use value1, or enter a specific value\",\n            default=None,\n        )",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 78,
                                    "end_token": 78,
                                    "label": "Input",
                                    "children": []
                                },
                                {
                                    "type": "parenthesized_expression",
                                    "start_token": 79,
                                    "end_token": 81,
                                    "label": "(BlockSchema)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 80,
                                            "end_token": 80,
                                            "label": "BlockSchema",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "start_token": 82,
                                    "end_token": 187,
                                    "label": ":\n        value1: Any = SchemaField(\n            description=\"Enter the first value for comparison\",\n            placeholder=\"For example: 10 or 'hello' or True\",\n        )\n        operator: ComparisonOperator = SchemaField(\n            description=\"Choose the comparison operator\",\n            placeholder=\"Select an operator\",\n        )\n        value2: Any = SchemaField(\n            description=\"Enter the second value for comparison\",\n            placeholder=\"For example: 20 or 'world' or False\",\n        )\n        yes_value: Any = SchemaField(\n            description=\"(Optional) Value to output if the condition is true. If not provided, value1 will be used.\",\n            placeholder=\"Leave empty to use value1, or enter a specific value\",\n            default=None,\n        )\n        no_value: Any = SchemaField(\n            description=\"(Optional) Value to output if the condition is false. If not provided, value1 will be used.\",\n            placeholder=\"Leave empty to use value1, or enter a specific value\",\n            default=None,\n        )",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "start_token": 84,
                                            "end_token": 101,
                                            "label": "value1: Any = SchemaField(\n            description=\"Enter the first value for comparison\",\n            placeholder=\"For example: 10 or 'hello' or True\",\n        )",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 84,
                                                    "end_token": 84,
                                                    "label": "value1",
                                                    "children": []
                                                },
                                                {
                                                    "type": "parameter_list",
                                                    "start_token": 86,
                                                    "end_token": 101,
                                                    "label": "Any = SchemaField(\n            description=\"Enter the first value for comparison\",\n            placeholder=\"For example: 10 or 'hello' or True\",\n        )",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 88,
                                                            "end_token": 88,
                                                            "label": "SchemaField",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 89,
                                                            "end_token": 101,
                                                            "label": "(\n            description=\"Enter the first value for comparison\",\n            placeholder=\"For example: 10 or 'hello' or True\",\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "start_token": 91,
                                                                    "end_token": 94,
                                                                    "label": "description=\"Enter the first value for comparison\",",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 93,
                                                                            "end_token": 93,
                                                                            "label": "\"Enter the first value for comparison\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "start_token": 96,
                                                                    "end_token": 99,
                                                                    "label": "placeholder=\"For example: 10 or 'hello' or True\",",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 98,
                                                                            "end_token": 98,
                                                                            "label": "\"For example: 10 or 'hello' or True\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 103,
                                            "end_token": 120,
                                            "label": "operator: ComparisonOperator = SchemaField(\n            description=\"Choose the comparison operator\",\n            placeholder=\"Select an operator\",\n        )",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 103,
                                                    "end_token": 103,
                                                    "label": "operator",
                                                    "children": []
                                                },
                                                {
                                                    "type": "parameter_list",
                                                    "start_token": 105,
                                                    "end_token": 120,
                                                    "label": "ComparisonOperator = SchemaField(\n            description=\"Choose the comparison operator\",\n            placeholder=\"Select an operator\",\n        )",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 107,
                                                            "end_token": 107,
                                                            "label": "SchemaField",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 108,
                                                            "end_token": 120,
                                                            "label": "(\n            description=\"Choose the comparison operator\",\n            placeholder=\"Select an operator\",\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "start_token": 110,
                                                                    "end_token": 113,
                                                                    "label": "description=\"Choose the comparison operator\",",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 112,
                                                                            "end_token": 112,
                                                                            "label": "\"Choose the comparison operator\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "start_token": 115,
                                                                    "end_token": 118,
                                                                    "label": "placeholder=\"Select an operator\",",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 117,
                                                                            "end_token": 117,
                                                                            "label": "\"Select an operator\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 122,
                                            "end_token": 139,
                                            "label": "value2: Any = SchemaField(\n            description=\"Enter the second value for comparison\",\n            placeholder=\"For example: 20 or 'world' or False\",\n        )",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 122,
                                                    "end_token": 122,
                                                    "label": "value2",
                                                    "children": []
                                                },
                                                {
                                                    "type": "parameter_list",
                                                    "start_token": 124,
                                                    "end_token": 139,
                                                    "label": "Any = SchemaField(\n            description=\"Enter the second value for comparison\",\n            placeholder=\"For example: 20 or 'world' or False\",\n        )",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 126,
                                                            "end_token": 126,
                                                            "label": "SchemaField",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 127,
                                                            "end_token": 139,
                                                            "label": "(\n            description=\"Enter the second value for comparison\",\n            placeholder=\"For example: 20 or 'world' or False\",\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "start_token": 129,
                                                                    "end_token": 132,
                                                                    "label": "description=\"Enter the second value for comparison\",",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 131,
                                                                            "end_token": 131,
                                                                            "label": "\"Enter the second value for comparison\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "start_token": 134,
                                                                    "end_token": 137,
                                                                    "label": "placeholder=\"For example: 20 or 'world' or False\",",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 136,
                                                                            "end_token": 136,
                                                                            "label": "\"For example: 20 or 'world' or False\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 141,
                                            "end_token": 163,
                                            "label": "yes_value: Any = SchemaField(\n            description=\"(Optional) Value to output if the condition is true. If not provided, value1 will be used.\",\n            placeholder=\"Leave empty to use value1, or enter a specific value\",\n            default=None,\n        )",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 141,
                                                    "end_token": 141,
                                                    "label": "yes_value",
                                                    "children": []
                                                },
                                                {
                                                    "type": "parameter_list",
                                                    "start_token": 143,
                                                    "end_token": 163,
                                                    "label": "Any = SchemaField(\n            description=\"(Optional) Value to output if the condition is true. If not provided, value1 will be used.\",\n            placeholder=\"Leave empty to use value1, or enter a specific value\",\n            default=None,\n        )",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 145,
                                                            "end_token": 145,
                                                            "label": "SchemaField",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 146,
                                                            "end_token": 163,
                                                            "label": "(\n            description=\"(Optional) Value to output if the condition is true. If not provided, value1 will be used.\",\n            placeholder=\"Leave empty to use value1, or enter a specific value\",\n            default=None,\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "start_token": 148,
                                                                    "end_token": 151,
                                                                    "label": "description=\"(Optional) Value to output if the condition is true. If not provided, value1 will be used.\",",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 150,
                                                                            "end_token": 150,
                                                                            "label": "\"(Optional) Value to output if the condition is true. If not provided, value1 will be used.\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "start_token": 153,
                                                                    "end_token": 156,
                                                                    "label": "placeholder=\"Leave empty to use value1, or enter a specific value\",",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 155,
                                                                            "end_token": 155,
                                                                            "label": "\"Leave empty to use value1, or enter a specific value\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "start_token": 158,
                                                                    "end_token": 160,
                                                                    "label": "default=None",
                                                                    "children": [
                                                                        {
                                                                            "type": "none",
                                                                            "start_token": 160,
                                                                            "end_token": 160,
                                                                            "label": "None",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 165,
                                            "end_token": 187,
                                            "label": "no_value: Any = SchemaField(\n            description=\"(Optional) Value to output if the condition is false. If not provided, value1 will be used.\",\n            placeholder=\"Leave empty to use value1, or enter a specific value\",\n            default=None,\n        )",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 165,
                                                    "end_token": 165,
                                                    "label": "no_value",
                                                    "children": []
                                                },
                                                {
                                                    "type": "parameter_list",
                                                    "start_token": 167,
                                                    "end_token": 187,
                                                    "label": "Any = SchemaField(\n            description=\"(Optional) Value to output if the condition is false. If not provided, value1 will be used.\",\n            placeholder=\"Leave empty to use value1, or enter a specific value\",\n            default=None,\n        )",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 169,
                                                            "end_token": 169,
                                                            "label": "SchemaField",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 170,
                                                            "end_token": 187,
                                                            "label": "(\n            description=\"(Optional) Value to output if the condition is false. If not provided, value1 will be used.\",\n            placeholder=\"Leave empty to use value1, or enter a specific value\",\n            default=None,\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "start_token": 172,
                                                                    "end_token": 175,
                                                                    "label": "description=\"(Optional) Value to output if the condition is false. If not provided, value1 will be used.\",",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 174,
                                                                            "end_token": 174,
                                                                            "label": "\"(Optional) Value to output if the condition is false. If not provided, value1 will be used.\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "start_token": 177,
                                                                    "end_token": 180,
                                                                    "label": "placeholder=\"Leave empty to use value1, or enter a specific value\",",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 179,
                                                                            "end_token": 179,
                                                                            "label": "\"Leave empty to use value1, or enter a specific value\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "start_token": 182,
                                                                    "end_token": 184,
                                                                    "label": "default=None",
                                                                    "children": [
                                                                        {
                                                                            "type": "none",
                                                                            "start_token": 184,
                                                                            "end_token": 184,
                                                                            "label": "None",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "class_definition",
                            "start_token": 190,
                            "end_token": 234,
                            "label": "class Output(BlockSchema):\n        result: bool = SchemaField(\n            description=\"The result of the condition evaluation (True or False)\"\n        )\n        yes_output: Any = SchemaField(\n            description=\"The output value if the condition is true\"\n        )\n        no_output: Any = SchemaField(\n            description=\"The output value if the condition is false\"\n        )",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 191,
                                    "end_token": 191,
                                    "label": "Output",
                                    "children": []
                                },
                                {
                                    "type": "parenthesized_expression",
                                    "start_token": 192,
                                    "end_token": 194,
                                    "label": "(BlockSchema)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 193,
                                            "end_token": 193,
                                            "label": "BlockSchema",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "start_token": 195,
                                    "end_token": 234,
                                    "label": ":\n        result: bool = SchemaField(\n            description=\"The result of the condition evaluation (True or False)\"\n        )\n        yes_output: Any = SchemaField(\n            description=\"The output value if the condition is true\"\n        )\n        no_output: Any = SchemaField(\n            description=\"The output value if the condition is false\"\n        )",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "start_token": 197,
                                            "end_token": 207,
                                            "label": "result: bool = SchemaField(\n            description=\"The result of the condition evaluation (True or False)\"\n",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 197,
                                                    "end_token": 197,
                                                    "label": "result",
                                                    "children": []
                                                },
                                                {
                                                    "type": "parameter_list",
                                                    "start_token": 199,
                                                    "end_token": 207,
                                                    "label": "bool = SchemaField(\n            description=\"The result of the condition evaluation (True or False)\"\n",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 201,
                                                            "end_token": 201,
                                                            "label": "SchemaField",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 202,
                                                            "end_token": 207,
                                                            "label": "(\n            description=\"The result of the condition evaluation (True or False)\"\n",
                                                            "children": [
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "start_token": 204,
                                                                    "end_token": 206,
                                                                    "label": "description=\"The result of the condition evaluation (True or False)\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 206,
                                                                            "end_token": 206,
                                                                            "label": "\"The result of the condition evaluation (True or False)\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 210,
                                            "end_token": 220,
                                            "label": "yes_output: Any = SchemaField(\n            description=\"The output value if the condition is true\"\n",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 210,
                                                    "end_token": 210,
                                                    "label": "yes_output",
                                                    "children": []
                                                },
                                                {
                                                    "type": "parameter_list",
                                                    "start_token": 212,
                                                    "end_token": 220,
                                                    "label": "Any = SchemaField(\n            description=\"The output value if the condition is true\"\n",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 214,
                                                            "end_token": 214,
                                                            "label": "SchemaField",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 215,
                                                            "end_token": 220,
                                                            "label": "(\n            description=\"The output value if the condition is true\"\n",
                                                            "children": [
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "start_token": 218,
                                                                    "end_token": 219,
                                                                    "label": "=\"The output value if the condition is true\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 219,
                                                                            "end_token": 219,
                                                                            "label": "\"The output value if the condition is true\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 223,
                                            "end_token": 233,
                                            "label": "no_output: Any = SchemaField(\n            description=\"The output value if the condition is false\"\n",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 223,
                                                    "end_token": 223,
                                                    "label": "no_output",
                                                    "children": []
                                                },
                                                {
                                                    "type": "parameter_list",
                                                    "start_token": 225,
                                                    "end_token": 233,
                                                    "label": "Any = SchemaField(\n            description=\"The output value if the condition is false\"\n",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 227,
                                                            "end_token": 227,
                                                            "label": "SchemaField",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "start_token": 228,
                                                            "end_token": 233,
                                                            "label": "(\n            description=\"The output value if the condition is false\"\n",
                                                            "children": [
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "start_token": 231,
                                                                    "end_token": 232,
                                                                    "label": "=\"The output value if the condition is false\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "start_token": 232,
                                                                            "end_token": 232,
                                                                            "label": "\"The output value if the condition is false\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "start_token": 237,
                            "end_token": 341,
                            "label": "def __init__(self):\n        super().__init__(\n            id=\"715696a0-e1da-45c8-b209-c2fa9c3b0be6\",\n            input_schema=ConditionBlock.Input,\n            output_schema=ConditionBlock.Output,\n            description=\"Handles conditional logic based on comparison operators\",\n            categories={BlockCategory.LOGIC},\n            test_input={\n                \"value1\": 10,\n                \"operator\": ComparisonOperator.GREATER_THAN.value,\n                \"value2\": 5,\n                \"yes_value\": \"Greater\",\n                \"no_value\": \"Not greater\",\n            },\n            test_output=[\n                (\"result\", True),\n                (\"yes_output\", \"Greater\"),\n            ],\n        )",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 238,
                                    "end_token": 238,
                                    "label": "__init__",
                                    "children": []
                                },
                                {
                                    "type": "parameter_list",
                                    "start_token": 239,
                                    "end_token": 241,
                                    "label": "(self)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 240,
                                            "end_token": 240,
                                            "label": "self",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "start_token": 242,
                                    "end_token": 341,
                                    "label": ":\n        super().__init__(\n            id=\"715696a0-e1da-45c8-b209-c2fa9c3b0be6\",\n            input_schema=ConditionBlock.Input,\n            output_schema=ConditionBlock.Output,\n            description=\"Handles conditional logic based on comparison operators\",\n            categories={BlockCategory.LOGIC},\n            test_input={\n                \"value1\": 10,\n                \"operator\": ComparisonOperator.GREATER_THAN.value,\n                \"value2\": 5,\n                \"yes_value\": \"Greater\",\n                \"no_value\": \"Not greater\",\n            },\n            test_output=[\n                (\"result\", True),\n                (\"yes_output\", \"Greater\"),\n            ],\n        )",
                                    "children": [
                                        {
                                            "type": "call",
                                            "start_token": 244,
                                            "end_token": 341,
                                            "label": "super().__init__(\n            id=\"715696a0-e1da-45c8-b209-c2fa9c3b0be6\",\n            input_schema=ConditionBlock.Input,\n            output_schema=ConditionBlock.Output,\n            description=\"Handles conditional logic based on comparison operators\",\n            categories={BlockCategory.LOGIC},\n            test_input={\n                \"value1\": 10,\n                \"operator\": ComparisonOperator.GREATER_THAN.value,\n                \"value2\": 5,\n                \"yes_value\": \"Greater\",\n                \"no_value\": \"Not greater\",\n            },\n            test_output=[\n                (\"result\", True),\n                (\"yes_output\", \"Greater\"),\n            ],\n        )",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "start_token": 244,
                                                    "end_token": 248,
                                                    "label": "super().__init__",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 245,
                                                            "end_token": 245,
                                                            "label": "(",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 248,
                                                            "end_token": 248,
                                                            "label": "__init__",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "start_token": 249,
                                                    "end_token": 341,
                                                    "label": "(\n            id=\"715696a0-e1da-45c8-b209-c2fa9c3b0be6\",\n            input_schema=ConditionBlock.Input,\n            output_schema=ConditionBlock.Output,\n            description=\"Handles conditional logic based on comparison operators\",\n            categories={BlockCategory.LOGIC},\n            test_input={\n                \"value1\": 10,\n                \"operator\": ComparisonOperator.GREATER_THAN.value,\n                \"value2\": 5,\n                \"yes_value\": \"Greater\",\n                \"no_value\": \"Not greater\",\n            },\n            test_output=[\n                (\"result\", True),\n                (\"yes_output\", \"Greater\"),\n            ],\n        )",
                                                    "children": [
                                                        {
                                                            "type": "keyword_argument",
                                                            "start_token": 251,
                                                            "end_token": 254,
                                                            "label": "id=\"715696a0-e1da-45c8-b209-c2fa9c3b0be6\",",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "start_token": 253,
                                                                    "end_token": 253,
                                                                    "label": "\"715696a0-e1da-45c8-b209-c2fa9c3b0be6\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "keyword_argument",
                                                            "start_token": 256,
                                                            "end_token": 261,
                                                            "label": "input_schema=ConditionBlock.Input,",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "start_token": 258,
                                                                    "end_token": 260,
                                                                    "label": "ConditionBlock.Input",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 258,
                                                                            "end_token": 258,
                                                                            "label": "ConditionBlock",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 260,
                                                                            "end_token": 260,
                                                                            "label": "Input",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "keyword_argument",
                                                            "start_token": 263,
                                                            "end_token": 268,
                                                            "label": "output_schema=ConditionBlock.Output,",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "start_token": 265,
                                                                    "end_token": 267,
                                                                    "label": "ConditionBlock.Output",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 265,
                                                                            "end_token": 265,
                                                                            "label": "ConditionBlock",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 267,
                                                                            "end_token": 267,
                                                                            "label": "Output",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "keyword_argument",
                                                            "start_token": 270,
                                                            "end_token": 272,
                                                            "label": "description=\"Handles conditional logic based on comparison operators\"",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "start_token": 272,
                                                                    "end_token": 272,
                                                                    "label": "\"Handles conditional logic based on comparison operators\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "keyword_argument",
                                                            "start_token": 275,
                                                            "end_token": 281,
                                                            "label": "categories={BlockCategory.LOGIC}",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "start_token": 278,
                                                                    "end_token": 280,
                                                                    "label": "BlockCategory.LOGIC",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 278,
                                                                            "end_token": 278,
                                                                            "label": "BlockCategory",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 280,
                                                                            "end_token": 280,
                                                                            "label": "LOGIC",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "keyword_argument",
                                                            "start_token": 284,
                                                            "end_token": 317,
                                                            "label": "test_input={\n                \"value1\": 10,\n                \"operator\": ComparisonOperator.GREATER_THAN.value,\n                \"value2\": 5,\n                \"yes_value\": \"Greater\",\n                \"no_value\": \"Not greater\",\n            }",
                                                            "children": [
                                                                {
                                                                    "type": "dictionary",
                                                                    "start_token": 286,
                                                                    "end_token": 317,
                                                                    "label": "{\n                \"value1\": 10,\n                \"operator\": ComparisonOperator.GREATER_THAN.value,\n                \"value2\": 5,\n                \"yes_value\": \"Greater\",\n                \"no_value\": \"Not greater\",\n            }",
                                                                    "children": [
                                                                        {
                                                                            "type": "pair",
                                                                            "start_token": 288,
                                                                            "end_token": 291,
                                                                            "label": "\"value1\": 10,",
                                                                            "children": [
                                                                                {
                                                                                    "type": "integer",
                                                                                    "start_token": 290,
                                                                                    "end_token": 290,
                                                                                    "label": "10",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "pair",
                                                                            "start_token": 293,
                                                                            "end_token": 300,
                                                                            "label": "\"operator\": ComparisonOperator.GREATER_THAN.value,",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "start_token": 295,
                                                                                    "end_token": 297,
                                                                                    "label": "ComparisonOperator.GREATER_THAN",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 295,
                                                                                            "end_token": 295,
                                                                                            "label": "ComparisonOperator",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 297,
                                                                                            "end_token": 297,
                                                                                            "label": "GREATER_THAN",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "start_token": 298,
                                                                                    "end_token": 300,
                                                                                    "label": ".value,",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 298,
                                                                                            "end_token": 298,
                                                                                            "label": ".",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "pair",
                                                                            "start_token": 302,
                                                                            "end_token": 304,
                                                                            "label": "\"value2\": 5",
                                                                            "children": [
                                                                                {
                                                                                    "type": "integer",
                                                                                    "start_token": 304,
                                                                                    "end_token": 304,
                                                                                    "label": "5",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "pair",
                                                                            "start_token": 307,
                                                                            "end_token": 309,
                                                                            "label": "\"yes_value\": \"Greater\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "start_token": 309,
                                                                                    "end_token": 309,
                                                                                    "label": "\"Greater\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "pair",
                                                                            "start_token": 312,
                                                                            "end_token": 314,
                                                                            "label": "\"no_value\": \"Not greater\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "start_token": 314,
                                                                                    "end_token": 314,
                                                                                    "label": "\"Not greater\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "keyword_argument",
                                                            "start_token": 320,
                                                            "end_token": 338,
                                                            "label": "test_output=[\n                (\"result\", True),\n                (\"yes_output\", \"Greater\"),\n            ]",
                                                            "children": [
                                                                {
                                                                    "type": "list",
                                                                    "start_token": 322,
                                                                    "end_token": 338,
                                                                    "label": "[\n                (\"result\", True),\n                (\"yes_output\", \"Greater\"),\n            ]",
                                                                    "children": [
                                                                        {
                                                                            "type": "tuple",
                                                                            "start_token": 324,
                                                                            "end_token": 327,
                                                                            "label": "(\"result\", True",
                                                                            "children": [
                                                                                {
                                                                                    "type": "true",
                                                                                    "start_token": 327,
                                                                                    "end_token": 327,
                                                                                    "label": "True",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "tuple",
                                                                            "start_token": 331,
                                                                            "end_token": 334,
                                                                            "label": "(\"yes_output\", \"Greater\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "start_token": 334,
                                                                                    "end_token": 334,
                                                                                    "label": "\"Greater\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "start_token": 344,
            "end_token": 613,
            "label": "def run(self, input_data: Input, **kwargs) -> BlockOutput:\n        operator = input_data.operator\n\n        value1 = input_data.value1\n        if isinstance(value1, str):\n            try:\n                value1 = float(value1.strip())\n            except ValueError:\n                value1 = value1.strip()\n\n        value2 = input_data.value2\n        if isinstance(value2, str):\n            try:\n                value2 = float(value2.strip())\n            except ValueError:\n                value2 = value2.strip()\n\n        yes_value = input_data.yes_value if input_data.yes_value is not None else value1\n        no_value = input_data.no_value if input_data.no_value is not None else value2\n\n        comparison_funcs = {\n            ComparisonOperator.EQUAL: lambda a, b: a == b,\n            ComparisonOperator.NOT_EQUAL: lambda a, b: a != b,\n            ComparisonOperator.GREATER_THAN: lambda a, b: a > b,\n            ComparisonOperator.LESS_THAN: lambda a, b: a < b,\n            ComparisonOperator.GREATER_THAN_OR_EQUAL: lambda a, b: a >= b,\n            ComparisonOperator.LESS_THAN_OR_EQUAL: lambda a, b: a <= b,\n        }\n\n        result = comparison_funcs[operator](value1, value2)\n\n        yield \"result\", result\n\n        if result:\n            yield \"yes_output\", yes_value\n        else:\n            yield \"no_output\", no_value",
            "children": [
                {
                    "type": "identifier",
                    "start_token": 345,
                    "end_token": 345,
                    "label": "run",
                    "children": []
                },
                {
                    "type": "parameter_list",
                    "start_token": 346,
                    "end_token": 356,
                    "label": "(self, input_data: Input, **kwargs)",
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 347,
                            "end_token": 347,
                            "label": "self",
                            "children": []
                        },
                        {
                            "type": "typed_parameter",
                            "start_token": 349,
                            "end_token": 351,
                            "label": "input_data: Input",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 350,
                                    "end_token": 350,
                                    "label": ":",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "parameters",
                            "start_token": 353,
                            "end_token": 355,
                            "label": "**kwargs",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "start_token": 360,
                    "end_token": 613,
                    "label": ":\n        operator = input_data.operator\n\n        value1 = input_data.value1\n        if isinstance(value1, str):\n            try:\n                value1 = float(value1.strip())\n            except ValueError:\n                value1 = value1.strip()\n\n        value2 = input_data.value2\n        if isinstance(value2, str):\n            try:\n                value2 = float(value2.strip())\n            except ValueError:\n                value2 = value2.strip()\n\n        yes_value = input_data.yes_value if input_data.yes_value is not None else value1\n        no_value = input_data.no_value if input_data.no_value is not None else value2\n\n        comparison_funcs = {\n            ComparisonOperator.EQUAL: lambda a, b: a == b,\n            ComparisonOperator.NOT_EQUAL: lambda a, b: a != b,\n            ComparisonOperator.GREATER_THAN: lambda a, b: a > b,\n            ComparisonOperator.LESS_THAN: lambda a, b: a < b,\n            ComparisonOperator.GREATER_THAN_OR_EQUAL: lambda a, b: a >= b,\n            ComparisonOperator.LESS_THAN_OR_EQUAL: lambda a, b: a <= b,\n        }\n\n        result = comparison_funcs[operator](value1, value2)\n\n        yield \"result\", result\n\n        if result:\n            yield \"yes_output\", yes_value\n        else:\n            yield \"no_output\", no_value",
                    "children": [
                        {
                            "type": "assignment",
                            "start_token": 362,
                            "end_token": 366,
                            "label": "operator = input_data.operator",
                            "children": [
                                {
                                    "type": "attribute",
                                    "start_token": 364,
                                    "end_token": 366,
                                    "label": "input_data.operator",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 364,
                                            "end_token": 364,
                                            "label": "input_data",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "assignment",
                            "start_token": 369,
                            "end_token": 373,
                            "label": "value1 = input_data.value1",
                            "children": [
                                {
                                    "type": "attribute",
                                    "start_token": 371,
                                    "end_token": 373,
                                    "label": "input_data.value1",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 371,
                                            "end_token": 371,
                                            "label": "input_data",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "if_statement",
                            "start_token": 375,
                            "end_token": 409,
                            "label": "if isinstance(value1, str):\n            try:\n                value1 = float(value1.strip())\n            except ValueError:\n                value1 = value1.strip()\n",
                            "children": [
                                {
                                    "type": "conditional_expression",
                                    "start_token": 376,
                                    "end_token": 381,
                                    "label": "isinstance(value1, str)",
                                    "children": [
                                        {
                                            "type": "call",
                                            "start_token": 376,
                                            "end_token": 381,
                                            "label": "isinstance(value1, str)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 376,
                                                    "end_token": 376,
                                                    "label": "isinstance",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "if_statement",
                            "start_token": 417,
                            "end_token": 451,
                            "label": "if isinstance(value2, str):\n            try:\n                value2 = float(value2.strip())\n            except ValueError:\n                value2 = value2.strip()\n",
                            "children": [
                                {
                                    "type": "conditional_expression",
                                    "start_token": 418,
                                    "end_token": 423,
                                    "label": "isinstance(value2, str)",
                                    "children": [
                                        {
                                            "type": "call",
                                            "start_token": 418,
                                            "end_token": 423,
                                            "label": "isinstance(value2, str)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 418,
                                                    "end_token": 418,
                                                    "label": "isinstance",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "assignment",
                            "start_token": 453,
                            "end_token": 467,
                            "label": "yes_value = input_data.yes_value if input_data.yes_value is not None else value1\n",
                            "children": [
                                {
                                    "type": "conditional_expression",
                                    "start_token": 457,
                                    "end_token": 465,
                                    "label": "yes_value if input_data.yes_value is not None else",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "start_token": 457,
                                            "end_token": 459,
                                            "label": "yes_value if input_data",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 457,
                                                    "end_token": 457,
                                                    "label": "yes_value",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "assignment",
                            "start_token": 469,
                            "end_token": 481,
                            "label": "= input_data.no_value if input_data.no_value is not None else value2",
                            "children": [
                                {
                                    "type": "conditional_expression",
                                    "start_token": 473,
                                    "end_token": 479,
                                    "label": "if input_data.no_value is not None",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "start_token": 473,
                                            "end_token": 475,
                                            "label": "if input_data.",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 473,
                                                    "end_token": 473,
                                                    "label": "if",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "assignment",
                            "start_token": 484,
                            "end_token": 576,
                            "label": "comparison_funcs = {\n            ComparisonOperator.EQUAL: lambda a, b: a == b,\n            ComparisonOperator.NOT_EQUAL: lambda a, b: a != b,\n            ComparisonOperator.GREATER_THAN: lambda a, b: a > b,\n            ComparisonOperator.LESS_THAN: lambda a, b: a < b,\n            ComparisonOperator.GREATER_THAN_OR_EQUAL: lambda a, b: a >= b,\n            ComparisonOperator.LESS_THAN_OR_EQUAL: lambda a, b: a <= b,\n        }",
                            "children": [
                                {
                                    "type": "dictionary",
                                    "start_token": 486,
                                    "end_token": 574,
                                    "label": "{\n            ComparisonOperator.EQUAL: lambda a, b: a == b,\n            ComparisonOperator.NOT_EQUAL: lambda a, b: a != b,\n            ComparisonOperator.GREATER_THAN: lambda a, b: a > b,\n            ComparisonOperator.LESS_THAN: lambda a, b: a < b,\n            ComparisonOperator.GREATER_THAN_OR_EQUAL: lambda a, b: a >= b,\n            ComparisonOperator.LESS_THAN_OR_EQUAL: lambda a, b: a <= b,",
                                    "children": [
                                        {
                                            "type": "pair",
                                            "start_token": 488,
                                            "end_token": 500,
                                            "label": "ComparisonOperator.EQUAL: lambda a, b: a == b",
                                            "children": [
                                                {
                                                    "type": "lambda",
                                                    "start_token": 492,
                                                    "end_token": 500,
                                                    "label": "lambda a, b: a == b",
                                                    "children": [
                                                        {
                                                            "type": "parameters",
                                                            "start_token": 492,
                                                            "end_token": 495,
                                                            "label": "lambda a, b",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "pair",
                                            "start_token": 503,
                                            "end_token": 515,
                                            "label": "ComparisonOperator.NOT_EQUAL: lambda a, b: a != b",
                                            "children": [
                                                {
                                                    "type": "lambda",
                                                    "start_token": 507,
                                                    "end_token": 515,
                                                    "label": "lambda a, b: a != b",
                                                    "children": [
                                                        {
                                                            "type": "parameters",
                                                            "start_token": 507,
                                                            "end_token": 510,
                                                            "label": "lambda a, b",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "pair",
                                            "start_token": 518,
                                            "end_token": 530,
                                            "label": "ComparisonOperator.GREATER_THAN: lambda a, b: a > b,",
                                            "children": [
                                                {
                                                    "type": "lambda",
                                                    "start_token": 522,
                                                    "end_token": 530,
                                                    "label": "lambda a, b: a > b,",
                                                    "children": [
                                                        {
                                                            "type": "parameters",
                                                            "start_token": 522,
                                                            "end_token": 525,
                                                            "label": "lambda a, b",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "pair",
                                            "start_token": 532,
                                            "end_token": 544,
                                            "label": "ComparisonOperator.LESS_THAN: lambda a, b: a < b,",
                                            "children": [
                                                {
                                                    "type": "lambda",
                                                    "start_token": 536,
                                                    "end_token": 544,
                                                    "label": "lambda a, b: a < b,",
                                                    "children": [
                                                        {
                                                            "type": "parameters",
                                                            "start_token": 536,
                                                            "end_token": 539,
                                                            "label": "lambda a, b",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "pair",
                                            "start_token": 546,
                                            "end_token": 558,
                                            "label": "ComparisonOperator.GREATER_THAN_OR_EQUAL: lambda a, b: a >= b",
                                            "children": [
                                                {
                                                    "type": "lambda",
                                                    "start_token": 550,
                                                    "end_token": 558,
                                                    "label": "lambda a, b: a >= b",
                                                    "children": [
                                                        {
                                                            "type": "parameters",
                                                            "start_token": 550,
                                                            "end_token": 553,
                                                            "label": "lambda a, b",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "pair",
                                            "start_token": 561,
                                            "end_token": 573,
                                            "label": "ComparisonOperator.LESS_THAN_OR_EQUAL: lambda a, b: a <= b",
                                            "children": [
                                                {
                                                    "type": "lambda",
                                                    "start_token": 565,
                                                    "end_token": 573,
                                                    "label": "lambda a, b: a <= b",
                                                    "children": [
                                                        {
                                                            "type": "parameters",
                                                            "start_token": 565,
                                                            "end_token": 568,
                                                            "label": "lambda a, b",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "call",
                            "start_token": 579,
                            "end_token": 606,
                            "label": "result = comparison_funcs[operator](value1, value2)\n\n        yield \"result\", result\n\n        if result:\n            yield \"yes_output\", yes_value\n",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 579,
                                    "end_token": 580,
                                    "label": "result =",
                                    "children": []
                                },
                                {
                                    "type": "argument_list",
                                    "start_token": 582,
                                    "end_token": 589,
                                    "label": "[operator](value1, value2)",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "start_token": 586,
                                            "end_token": 588,
                                            "label": "value1, value2",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 586,
                                                    "end_token": 586,
                                                    "label": "value1",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "start_token": 588,
                                                    "end_token": 588,
                                                    "label": "value2",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "if_statement",
                            "start_token": 598,
                            "end_token": 613,
                            "label": "if result:\n            yield \"yes_output\", yes_value\n        else:\n            yield \"no_output\", no_value",
                            "children": [
                                {
                                    "type": "conditional_expression",
                                    "start_token": 599,
                                    "end_token": 599,
                                    "label": "result",
                                    "children": [
                                        {
                                            "type": "true",
                                            "start_token": 599,
                                            "end_token": 599,
                                            "label": "result",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}