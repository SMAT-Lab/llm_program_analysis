{
    "type": "module",
    "start_token": 0,
    "end_token": 397,
    "label": "from typing import List\n\nfrom backend.data.block import BlockOutput, BlockSchema\nfrom backend.data.model import APIKeyCredentials, SchemaField\n\nfrom ._api import (\n    TEST_CREDENTIALS,\n    TEST_CREDENTIALS_INPUT,\n    Filament,\n    Slant3DCredentialsField,\n    Slant3DCredentialsInput,\n)\nfrom .base import Slant3DBlockBase\n\n\nclass Slant3DFilamentBlock(Slant3DBlockBase):\n    \"\"\"Block for retrieving available filaments\"\"\"\n\n    class Input(BlockSchema):\n        credentials: Slant3DCredentialsInput = Slant3DCredentialsField()\n\n    class Output(BlockSchema):\n        filaments: List[Filament] = SchemaField(\n            description=\"List of available filaments\"\n        )\n        error: str = SchemaField(description=\"Error message if request failed\")\n\n    def __init__(self):\n        super().__init__(\n            id=\"7cc416f4-f305-4606-9b3b-452b8a81031c\",\n            description=\"Get list of available filaments\",\n            input_schema=self.Input,\n            output_schema=self.Output,\n            test_input={\"credentials\": TEST_CREDENTIALS_INPUT},\n            test_credentials=TEST_CREDENTIALS,\n            test_output=[\n                (\n                    \"filaments\",\n                    [\n                        {\n                            \"filament\": \"PLA BLACK\",\n                            \"hexColor\": \"000000\",\n                            \"colorTag\": \"black\",\n                            \"profile\": \"PLA\",\n                        },\n                        {\n                            \"filament\": \"PLA WHITE\",\n                            \"hexColor\": \"ffffff\",\n                            \"colorTag\": \"white\",\n                            \"profile\": \"PLA\",\n                        },\n                    ],\n                )\n            ],\n            test_mock={\n                \"_make_request\": lambda *args, **kwargs: {\n                    \"filaments\": [\n                        {\n                            \"filament\": \"PLA BLACK\",\n                            \"hexColor\": \"000000\",\n                            \"colorTag\": \"black\",\n                            \"profile\": \"PLA\",\n                        },\n                        {\n                            \"filament\": \"PLA WHITE\",\n                            \"hexColor\": \"ffffff\",\n                            \"colorTag\": \"white\",\n                            \"profile\": \"PLA\",\n                        },\n                    ]\n                }\n            },\n        )\n\n    def run(\n        self, input_data: Input, *, credentials: APIKeyCredentials, **kwargs\n    ) -> BlockOutput:\n        try:\n            result = self._make_request(\n                \"GET\", \"filament\", credentials.api_key.get_secret_value()\n            )\n            yield \"filaments\", result[\"filaments\"]\n        except Exception as e:\n            yield \"error\", str(e)\n            raise\n",
    "children": [
        {
            "type": "import_from_statement",
            "start_token": 0,
            "end_token": 3,
            "label": "from typing import List",
            "children": []
        },
        {
            "type": "import_from_statement",
            "start_token": 6,
            "end_token": 15,
            "label": "from backend.data.block import BlockOutput, BlockSchema",
            "children": []
        },
        {
            "type": "import_from_statement",
            "start_token": 17,
            "end_token": 26,
            "label": "from backend.data.model import APIKeyCredentials, SchemaField",
            "children": []
        },
        {
            "type": "import_from_statement",
            "start_token": 29,
            "end_token": 50,
            "label": "from ._api import (\n    TEST_CREDENTIALS,\n    TEST_CREDENTIALS_INPUT,\n    Filament,\n    Slant3DCredentialsField,\n    Slant3DCredentialsInput,\n)",
            "children": [
                {
                    "type": "import_prefix",
                    "start_token": 29,
                    "end_token": 32,
                    "label": "from ._api import",
                    "children": []
                },
                {
                    "type": "argument_list",
                    "start_token": 33,
                    "end_token": 50,
                    "label": "(\n    TEST_CREDENTIALS,\n    TEST_CREDENTIALS_INPUT,\n    Filament,\n    Slant3DCredentialsField,\n    Slant3DCredentialsInput,\n)",
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 35,
                            "end_token": 35,
                            "label": "TEST_CREDENTIALS",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "start_token": 38,
                            "end_token": 38,
                            "label": "TEST_CREDENTIALS_INPUT",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "start_token": 41,
                            "end_token": 41,
                            "label": "Filament",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "start_token": 44,
                            "end_token": 44,
                            "label": "Slant3DCredentialsField",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "start_token": 47,
                            "end_token": 47,
                            "label": "Slant3DCredentialsInput",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 52,
            "end_token": 56,
            "label": "from .base import Slant3DBlockBase",
            "children": []
        },
        {
            "type": "class_definition",
            "start_token": 60,
            "end_token": 395,
            "label": "class Slant3DFilamentBlock(Slant3DBlockBase):\n    \"\"\"Block for retrieving available filaments\"\"\"\n\n    class Input(BlockSchema):\n        credentials: Slant3DCredentialsInput = Slant3DCredentialsField()\n\n    class Output(BlockSchema):\n        filaments: List[Filament] = SchemaField(\n            description=\"List of available filaments\"\n        )\n        error: str = SchemaField(description=\"Error message if request failed\")\n\n    def __init__(self):\n        super().__init__(\n            id=\"7cc416f4-f305-4606-9b3b-452b8a81031c\",\n            description=\"Get list of available filaments\",\n            input_schema=self.Input,\n            output_schema=self.Output,\n            test_input={\"credentials\": TEST_CREDENTIALS_INPUT},\n            test_credentials=TEST_CREDENTIALS,\n            test_output=[\n                (\n                    \"filaments\",\n                    [\n                        {\n                            \"filament\": \"PLA BLACK\",\n                            \"hexColor\": \"000000\",\n                            \"colorTag\": \"black\",\n                            \"profile\": \"PLA\",\n                        },\n                        {\n                            \"filament\": \"PLA WHITE\",\n                            \"hexColor\": \"ffffff\",\n                            \"colorTag\": \"white\",\n                            \"profile\": \"PLA\",\n                        },\n                    ],\n                )\n            ],\n            test_mock={\n                \"_make_request\": lambda *args, **kwargs: {\n                    \"filaments\": [\n                        {\n                            \"filament\": \"PLA BLACK\",\n                            \"hexColor\": \"000000\",\n                            \"colorTag\": \"black\",\n                            \"profile\": \"PLA\",\n                        },\n                        {\n                            \"filament\": \"PLA WHITE\",\n                            \"hexColor\": \"ffffff\",\n                            \"colorTag\": \"white\",\n                            \"profile\": \"PLA\",\n                        },\n                    ]\n                }\n            },\n        )\n\n    def run(\n        self, input_data: Input, *, credentials: APIKeyCredentials, **kwargs\n    ) -> BlockOutput:\n        try:\n            result = self._make_request(\n                \"GET\", \"filament\", credentials.api_key.get_secret_value()\n            )\n            yield \"filaments\", result[\"filaments\"]\n        except Exception as e:\n            yield \"error\", str(e)\n",
            "children": [
                {
                    "type": "identifier",
                    "start_token": 60,
                    "end_token": 61,
                    "label": "class Slant3DFilamentBlock",
                    "children": []
                },
                {
                    "type": "argument_list",
                    "start_token": 62,
                    "end_token": 64,
                    "label": "(Slant3DBlockBase)",
                    "children": []
                },
                {
                    "type": "block",
                    "start_token": 65,
                    "end_token": 395,
                    "label": ":\n    \"\"\"Block for retrieving available filaments\"\"\"\n\n    class Input(BlockSchema):\n        credentials: Slant3DCredentialsInput = Slant3DCredentialsField()\n\n    class Output(BlockSchema):\n        filaments: List[Filament] = SchemaField(\n            description=\"List of available filaments\"\n        )\n        error: str = SchemaField(description=\"Error message if request failed\")\n\n    def __init__(self):\n        super().__init__(\n            id=\"7cc416f4-f305-4606-9b3b-452b8a81031c\",\n            description=\"Get list of available filaments\",\n            input_schema=self.Input,\n            output_schema=self.Output,\n            test_input={\"credentials\": TEST_CREDENTIALS_INPUT},\n            test_credentials=TEST_CREDENTIALS,\n            test_output=[\n                (\n                    \"filaments\",\n                    [\n                        {\n                            \"filament\": \"PLA BLACK\",\n                            \"hexColor\": \"000000\",\n                            \"colorTag\": \"black\",\n                            \"profile\": \"PLA\",\n                        },\n                        {\n                            \"filament\": \"PLA WHITE\",\n                            \"hexColor\": \"ffffff\",\n                            \"colorTag\": \"white\",\n                            \"profile\": \"PLA\",\n                        },\n                    ],\n                )\n            ],\n            test_mock={\n                \"_make_request\": lambda *args, **kwargs: {\n                    \"filaments\": [\n                        {\n                            \"filament\": \"PLA BLACK\",\n                            \"hexColor\": \"000000\",\n                            \"colorTag\": \"black\",\n                            \"profile\": \"PLA\",\n                        },\n                        {\n                            \"filament\": \"PLA WHITE\",\n                            \"hexColor\": \"ffffff\",\n                            \"colorTag\": \"white\",\n                            \"profile\": \"PLA\",\n                        },\n                    ]\n                }\n            },\n        )\n\n    def run(\n        self, input_data: Input, *, credentials: APIKeyCredentials, **kwargs\n    ) -> BlockOutput:\n        try:\n            result = self._make_request(\n                \"GET\", \"filament\", credentials.api_key.get_secret_value()\n            )\n            yield \"filaments\", result[\"filaments\"]\n        except Exception as e:\n            yield \"error\", str(e)\n",
                    "children": [
                        {
                            "type": "string",
                            "start_token": 67,
                            "end_token": 69,
                            "label": "\"\"\"Block for retrieving available filaments\"\"\"",
                            "children": []
                        },
                        {
                            "type": "type",
                            "start_token": 72,
                            "end_token": 81,
                            "label": "class Input(BlockSchema):\n        credentials: Slant3DCredentialsInput",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 73,
                                    "end_token": 73,
                                    "label": "Input",
                                    "children": []
                                },
                                {
                                    "type": "argument_list",
                                    "start_token": 74,
                                    "end_token": 76,
                                    "label": "(BlockSchema)",
                                    "children": []
                                },
                                {
                                    "type": "assignment",
                                    "start_token": 79,
                                    "end_token": 85,
                                    "label": "credentials: Slant3DCredentialsInput = Slant3DCredentialsField()",
                                    "children": [
                                        {
                                            "type": "dotted_name",
                                            "start_token": 79,
                                            "end_token": 79,
                                            "label": "credentials",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 79,
                                                    "end_token": 79,
                                                    "label": "credentials",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "attribute",
                                            "start_token": 81,
                                            "end_token": 81,
                                            "label": "Slant3DCredentialsInput",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 81,
                                                    "end_token": 81,
                                                    "label": "Slant3DCredentialsInput",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "call",
                                            "start_token": 83,
                                            "end_token": 85,
                                            "label": "Slant3DCredentialsField()",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "type",
                            "start_token": 88,
                            "end_token": 120,
                            "label": "class Output(BlockSchema):\n        filaments: List[Filament] = SchemaField(\n            description=\"List of available filaments\"\n        )\n        error: str = SchemaField(description=\"Error message if request failed\")",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 89,
                                    "end_token": 89,
                                    "label": "Output",
                                    "children": []
                                },
                                {
                                    "type": "argument_list",
                                    "start_token": 90,
                                    "end_token": 92,
                                    "label": "(BlockSchema)",
                                    "children": []
                                },
                                {
                                    "type": "assignment",
                                    "start_token": 95,
                                    "end_token": 119,
                                    "label": "filaments: List[Filament] = SchemaField(\n            description=\"List of available filaments\"\n        )\n        error: str = SchemaField(description=\"Error message if request failed\"",
                                    "children": [
                                        {
                                            "type": "dotted_name",
                                            "start_token": 95,
                                            "end_token": 99,
                                            "label": "filaments: List[Filament",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 97,
                                                    "end_token": 97,
                                                    "label": "List",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "start_token": 98,
                                                    "end_token": 99,
                                                    "label": "[Filament",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "call",
                                            "start_token": 102,
                                            "end_token": 119,
                                            "label": "SchemaField(\n            description=\"List of available filaments\"\n        )\n        error: str = SchemaField(description=\"Error message if request failed\"",
                                            "children": [
                                                {
                                                    "type": "argument_list",
                                                    "start_token": 103,
                                                    "end_token": 109,
                                                    "label": "(\n            description=\"List of available filaments\"\n        )",
                                                    "children": []
                                                },
                                                {
                                                    "type": "assignment",
                                                    "start_token": 111,
                                                    "end_token": 118,
                                                    "label": "error: str = SchemaField(description=",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 111,
                                                            "end_token": 111,
                                                            "label": "error",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "attribute",
                                                            "start_token": 113,
                                                            "end_token": 118,
                                                            "label": "str = SchemaField(description=",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "start_token": 123,
                            "end_token": 174,
                            "label": "def __init__(self):\n        super().__init__(\n            id=\"7cc416f4-f305-4606-9b3b-452b8a81031c\",\n            description=\"Get list of available filaments\",\n            input_schema=self.Input,\n            output_schema=self.Output,\n            test_input={\"credentials\": TEST_CREDENTIALS_INPUT},\n            test_credentials=TEST_CREDENTIALS,\n",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 124,
                                    "end_token": 125,
                                    "label": "__init__(",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "start_token": 126,
                                    "end_token": 127,
                                    "label": "self)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 126,
                                            "end_token": 126,
                                            "label": "self",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "start_token": 128,
                                    "end_token": 174,
                                    "label": ":\n        super().__init__(\n            id=\"7cc416f4-f305-4606-9b3b-452b8a81031c\",\n            description=\"Get list of available filaments\",\n            input_schema=self.Input,\n            output_schema=self.Output,\n            test_input={\"credentials\": TEST_CREDENTIALS_INPUT},\n            test_credentials=TEST_CREDENTIALS,\n",
                                    "children": [
                                        {
                                            "type": "call",
                                            "start_token": 130,
                                            "end_token": 172,
                                            "label": "super().__init__(\n            id=\"7cc416f4-f305-4606-9b3b-452b8a81031c\",\n            description=\"Get list of available filaments\",\n            input_schema=self.Input,\n            output_schema=self.Output,\n            test_input={\"credentials\": TEST_CREDENTIALS_INPUT},\n            test_credentials=TEST_CREDENTIALS",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "start_token": 133,
                                                    "end_token": 134,
                                                    "label": ".__init__",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 133,
                                                            "end_token": 133,
                                                            "label": ".",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 134,
                                                            "end_token": 134,
                                                            "label": "__init__",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "start_token": 135,
                                                    "end_token": 170,
                                                    "label": "(\n            id=\"7cc416f4-f305-4606-9b3b-452b8a81031c\",\n            description=\"Get list of available filaments\",\n            input_schema=self.Input,\n            output_schema=self.Output,\n            test_input={\"credentials\": TEST_CREDENTIALS_INPUT},\n            test_credentials",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "start_token": 137,
                                                            "end_token": 139,
                                                            "label": "id=\"7cc416f4-f305-4606-9b3b-452b8a81031c\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "assignment",
                                                            "start_token": 142,
                                                            "end_token": 144,
                                                            "label": "description=\"Get list of available filaments\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "attribute",
                                                            "start_token": 148,
                                                            "end_token": 152,
                                                            "label": "=self.Input,",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "attribute",
                                                            "start_token": 155,
                                                            "end_token": 158,
                                                            "label": "=self.Output",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "assignment",
                                                            "start_token": 161,
                                                            "end_token": 167,
                                                            "label": "test_input={\"credentials\": TEST_CREDENTIALS_INPUT}",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 171,
                                                            "end_token": 172,
                                                            "label": "=TEST_CREDENTIALS",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "start_token": 324,
                            "end_token": 395,
                            "label": "def run(\n        self, input_data: Input, *, credentials: APIKeyCredentials, **kwargs\n    ) -> BlockOutput:\n        try:\n            result = self._make_request(\n                \"GET\", \"filament\", credentials.api_key.get_secret_value()\n            )\n            yield \"filaments\", result[\"filaments\"]\n        except Exception as e:\n            yield \"error\", str(e)\n",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 325,
                                    "end_token": 326,
                                    "label": "run(",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "start_token": 327,
                                    "end_token": 342,
                                    "label": "\n        self, input_data: Input, *, credentials: APIKeyCredentials, **kwargs",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 328,
                                            "end_token": 339,
                                            "label": "self, input_data: Input, *, credentials: APIKeyCredentials,",
                                            "children": []
                                        },
                                        {
                                            "type": "tuple",
                                            "start_token": 337,
                                            "end_token": 341,
                                            "label": ": APIKeyCredentials, **",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "start_token": 348,
                                    "end_token": 395,
                                    "label": ":\n        try:\n            result = self._make_request(\n                \"GET\", \"filament\", credentials.api_key.get_secret_value()\n            )\n            yield \"filaments\", result[\"filaments\"]\n        except Exception as e:\n            yield \"error\", str(e)\n",
                                    "children": [
                                        {
                                            "type": "try_statement",
                                            "start_token": 350,
                                            "end_token": 394,
                                            "label": "try:\n            result = self._make_request(\n                \"GET\", \"filament\", credentials.api_key.get_secret_value()\n            )\n            yield \"filaments\", result[\"filaments\"]\n        except Exception as e:\n            yield \"error\", str(e)",
                                            "children": [
                                                {
                                                    "type": "block",
                                                    "start_token": 351,
                                                    "end_token": 381,
                                                    "label": ":\n            result = self._make_request(\n                \"GET\", \"filament\", credentials.api_key.get_secret_value()\n            )\n            yield \"filaments\", result[\"filaments\"]\n",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "start_token": 353,
                                                            "end_token": 372,
                                                            "label": "result = self._make_request(\n                \"GET\", \"filament\", credentials.api_key.get_secret_value()\n            )",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "yield",
                                                            "start_token": 374,
                                                            "end_token": 380,
                                                            "label": "yield \"filaments\", result[\"filaments\"]",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "except_clause",
                                                    "start_token": 382,
                                                    "end_token": 393,
                                                    "label": "except Exception as e:\n            yield \"error\", str(e",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 384,
                                                            "end_token": 385,
                                                            "label": "as e",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "block",
                                                            "start_token": 386,
                                                            "end_token": 393,
                                                            "label": ":\n            yield \"error\", str(e",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}