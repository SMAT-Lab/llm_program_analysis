{
    "type": "module",
    "start_token": 0,
    "end_token": 588,
    "label": "from backend.blocks.hubspot._auth import (\n    HubSpotCredentials,\n    HubSpotCredentialsField,\n    HubSpotCredentialsInput,\n)\nfrom backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema\nfrom backend.data.model import SchemaField\nfrom backend.util.request import requests\n\n\nclass HubSpotContactBlock(Block):\n    class Input(BlockSchema):\n        credentials: HubSpotCredentialsInput = HubSpotCredentialsField()\n        operation: str = SchemaField(\n            description=\"Operation to perform (create, update, get)\", default=\"get\"\n        )\n        contact_data: dict = SchemaField(\n            description=\"Contact data for create/update operations\", default={}\n        )\n        email: str = SchemaField(\n            description=\"Email address for get/update operations\", default=\"\"\n        )\n\n    class Output(BlockSchema):\n        contact: dict = SchemaField(description=\"Contact information\")\n        status: str = SchemaField(description=\"Operation status\")\n\n    def __init__(self):\n        super().__init__(\n            id=\"5267326e-c4c1-4016-9f54-4e72ad02f813\",\n            description=\"Manages HubSpot contacts - create, update, and retrieve contact information\",\n            categories={BlockCategory.CRM},\n            input_schema=HubSpotContactBlock.Input,\n            output_schema=HubSpotContactBlock.Output,\n        )\n\n    def run(\n        self, input_data: Input, *, credentials: HubSpotCredentials, **kwargs\n    ) -> BlockOutput:\n        base_url = \"https://api.hubapi.com/crm/v3/objects/contacts\"\n        headers = {\n            \"Authorization\": f\"Bearer {credentials.api_key.get_secret_value()}\",\n            \"Content-Type\": \"application/json\",\n        }\n\n        if input_data.operation == \"create\":\n            response = requests.post(\n                base_url, headers=headers, json={\"properties\": input_data.contact_data}\n            )\n            result = response.json()\n            yield \"contact\", result\n            yield \"status\", \"created\"\n\n        elif input_data.operation == \"get\":\n            # Search for contact by email\n            search_url = f\"{base_url}/search\"\n            search_data = {\n                \"filterGroups\": [\n                    {\n                        \"filters\": [\n                            {\n                                \"propertyName\": \"email\",\n                                \"operator\": \"EQ\",\n                                \"value\": input_data.email,\n                            }\n                        ]\n                    }\n                ]\n            }\n            response = requests.post(search_url, headers=headers, json=search_data)\n            result = response.json()\n            yield \"contact\", result.get(\"results\", [{}])[0]\n            yield \"status\", \"retrieved\"\n\n        elif input_data.operation == \"update\":\n            search_response = requests.post(\n                f\"{base_url}/search\",\n                headers=headers,\n                json={\n                    \"filterGroups\": [\n                        {\n                            \"filters\": [\n                                {\n                                    \"propertyName\": \"email\",\n                                    \"operator\": \"EQ\",\n                                    \"value\": input_data.email,\n                                }\n                            ]\n                        }\n                    ]\n                },\n            )\n            contact_id = search_response.json().get(\"results\", [{}])[0].get(\"id\")\n\n            if contact_id:\n                response = requests.patch(\n                    f\"{base_url}/{contact_id}\",\n                    headers=headers,\n                    json={\"properties\": input_data.contact_data},\n                )\n                result = response.json()\n                yield \"contact\", result\n                yield \"status\", \"updated\"\n            else:\n                yield \"contact\", {}\n                yield \"status\", \"contact_not_found\"\n",
    "children": [
        {
            "type": "import_from_statement",
            "start_token": 0,
            "end_token": 20,
            "label": "from backend.blocks.hubspot._auth import (\n    HubSpotCredentials,\n    HubSpotCredentialsField,\n    HubSpotCredentialsInput,\n)",
            "children": [
                {
                    "type": "import_prefix",
                    "start_token": 0,
                    "end_token": 8,
                    "label": "from backend.blocks.hubspot._auth import",
                    "children": []
                },
                {
                    "type": "parenthesized_expression",
                    "start_token": 9,
                    "end_token": 20,
                    "label": "(\n    HubSpotCredentials,\n    HubSpotCredentialsField,\n    HubSpotCredentialsInput,\n)",
                    "children": [
                        {
                            "type": "expression_list",
                            "start_token": 11,
                            "end_token": 20,
                            "label": "HubSpotCredentials,\n    HubSpotCredentialsField,\n    HubSpotCredentialsInput,\n)",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 22,
            "end_token": 36,
            "label": "from backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema\n",
            "children": [
                {
                    "type": "import_prefix",
                    "start_token": 22,
                    "end_token": 28,
                    "label": "from backend.data.block import",
                    "children": []
                },
                {
                    "type": "expression_list",
                    "start_token": 29,
                    "end_token": 35,
                    "label": "Block, BlockCategory, BlockOutput, BlockSchema",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 37,
            "end_token": 45,
            "label": "from backend.data.model import SchemaField\n",
            "children": [
                {
                    "type": "import_prefix",
                    "start_token": 37,
                    "end_token": 43,
                    "label": "from backend.data.model import",
                    "children": []
                },
                {
                    "type": "expression_list",
                    "start_token": 44,
                    "end_token": 45,
                    "label": "SchemaField\n",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 46,
            "end_token": 54,
            "label": "from backend.util.request import requests\n",
            "children": [
                {
                    "type": "import_prefix",
                    "start_token": 46,
                    "end_token": 52,
                    "label": "from backend.util.request import",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 53,
                    "end_token": 53,
                    "label": "requests",
                    "children": []
                }
            ]
        },
        {
            "type": "class_definition",
            "start_token": 57,
            "end_token": 252,
            "label": "class HubSpotContactBlock(Block):\n    class Input(BlockSchema):\n        credentials: HubSpotCredentialsInput = HubSpotCredentialsField()\n        operation: str = SchemaField(\n            description=\"Operation to perform (create, update, get)\", default=\"get\"\n        )\n        contact_data: dict = SchemaField(\n            description=\"Contact data for create/update operations\", default={}\n        )\n        email: str = SchemaField(\n            description=\"Email address for get/update operations\", default=\"\"\n        )\n\n    class Output(BlockSchema):\n        contact: dict = SchemaField(description=\"Contact information\")\n        status: str = SchemaField(description=\"Operation status\")\n\n    def __init__(self):\n        super().__init__(\n            id=\"5267326e-c4c1-4016-9f54-4e72ad02f813\",\n            description=\"Manages HubSpot contacts - create, update, and retrieve contact information\",\n            categories={BlockCategory.CRM},\n            input_schema=HubSpotContactBlock.Input,\n            output_schema=HubSpotContactBlock.Output,\n        )\n\n    def run(\n        self, input_data: Input, *, credentials: HubSpotCredentials, **kwargs\n    ) -> BlockOutput:\n        base_url = \"https://api.hubapi.com/crm/v3/objects/contacts\"\n        headers = {\n            \"Authorization\": f\"Bearer {credentials.api_key.get_secret_value()}\",\n            \"Content-Type\"",
            "children": [
                {
                    "type": "identifier",
                    "start_token": 57,
                    "end_token": 61,
                    "label": "class HubSpotContactBlock(Block)",
                    "children": []
                },
                {
                    "type": "block",
                    "start_token": 62,
                    "end_token": 252,
                    "label": ":\n    class Input(BlockSchema):\n        credentials: HubSpotCredentialsInput = HubSpotCredentialsField()\n        operation: str = SchemaField(\n            description=\"Operation to perform (create, update, get)\", default=\"get\"\n        )\n        contact_data: dict = SchemaField(\n            description=\"Contact data for create/update operations\", default={}\n        )\n        email: str = SchemaField(\n            description=\"Email address for get/update operations\", default=\"\"\n        )\n\n    class Output(BlockSchema):\n        contact: dict = SchemaField(description=\"Contact information\")\n        status: str = SchemaField(description=\"Operation status\")\n\n    def __init__(self):\n        super().__init__(\n            id=\"5267326e-c4c1-4016-9f54-4e72ad02f813\",\n            description=\"Manages HubSpot contacts - create, update, and retrieve contact information\",\n            categories={BlockCategory.CRM},\n            input_schema=HubSpotContactBlock.Input,\n            output_schema=HubSpotContactBlock.Output,\n        )\n\n    def run(\n        self, input_data: Input, *, credentials: HubSpotCredentials, **kwargs\n    ) -> BlockOutput:\n        base_url = \"https://api.hubapi.com/crm/v3/objects/contacts\"\n        headers = {\n            \"Authorization\": f\"Bearer {credentials.api_key.get_secret_value()}\",\n            \"Content-Type\"",
                    "children": [
                        {
                            "type": "class_definition",
                            "start_token": 64,
                            "end_token": 129,
                            "label": "class Input(BlockSchema):\n        credentials: HubSpotCredentialsInput = HubSpotCredentialsField()\n        operation: str = SchemaField(\n            description=\"Operation to perform (create, update, get)\", default=\"get\"\n        )\n        contact_data: dict = SchemaField(\n            description=\"Contact data for create/update operations\", default={}\n        )\n        email: str = SchemaField(\n            description=\"Email address for get/update operations\", default=\"\"\n        )",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 64,
                                    "end_token": 68,
                                    "label": "class Input(BlockSchema)",
                                    "children": []
                                },
                                {
                                    "type": "block",
                                    "start_token": 69,
                                    "end_token": 129,
                                    "label": ":\n        credentials: HubSpotCredentialsInput = HubSpotCredentialsField()\n        operation: str = SchemaField(\n            description=\"Operation to perform (create, update, get)\", default=\"get\"\n        )\n        contact_data: dict = SchemaField(\n            description=\"Contact data for create/update operations\", default={}\n        )\n        email: str = SchemaField(\n            description=\"Email address for get/update operations\", default=\"\"\n        )",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "start_token": 71,
                                            "end_token": 77,
                                            "label": "credentials: HubSpotCredentialsInput = HubSpotCredentialsField()",
                                            "children": []
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 79,
                                            "end_token": 95,
                                            "label": "operation: str = SchemaField(\n            description=\"Operation to perform (create, update, get)\", default=\"get\"\n        )\n",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 79,
                                                    "end_token": 82,
                                                    "label": "operation: str =",
                                                    "children": []
                                                },
                                                {
                                                    "type": "function_call",
                                                    "start_token": 83,
                                                    "end_token": 95,
                                                    "label": "SchemaField(\n            description=\"Operation to perform (create, update, get)\", default=\"get\"\n        )\n",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 96,
                                            "end_token": 112,
                                            "label": "contact_data: dict = SchemaField(\n            description=\"Contact data for create/update operations\", default={}\n        )",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 96,
                                                    "end_token": 99,
                                                    "label": "contact_data: dict =",
                                                    "children": []
                                                },
                                                {
                                                    "type": "function_call",
                                                    "start_token": 100,
                                                    "end_token": 112,
                                                    "label": "SchemaField(\n            description=\"Contact data for create/update operations\", default={}\n        )",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 114,
                                            "end_token": 129,
                                            "label": "email: str = SchemaField(\n            description=\"Email address for get/update operations\", default=\"\"\n        )",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 114,
                                                    "end_token": 117,
                                                    "label": "email: str =",
                                                    "children": []
                                                },
                                                {
                                                    "type": "function_call",
                                                    "start_token": 118,
                                                    "end_token": 129,
                                                    "label": "SchemaField(\n            description=\"Email address for get/update operations\", default=\"\"\n        )",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "class_definition",
                            "start_token": 132,
                            "end_token": 159,
                            "label": "class Output(BlockSchema):\n        contact: dict = SchemaField(description=\"Contact information\")\n        status: str = SchemaField(description=\"Operation status\")",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 132,
                                    "end_token": 136,
                                    "label": "class Output(BlockSchema)",
                                    "children": []
                                },
                                {
                                    "type": "block",
                                    "start_token": 137,
                                    "end_token": 159,
                                    "label": ":\n        contact: dict = SchemaField(description=\"Contact information\")\n        status: str = SchemaField(description=\"Operation status\")",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "start_token": 139,
                                            "end_token": 148,
                                            "label": "contact: dict = SchemaField(description=\"Contact information\")",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 139,
                                                    "end_token": 141,
                                                    "label": "contact: dict",
                                                    "children": []
                                                },
                                                {
                                                    "type": "function_call",
                                                    "start_token": 142,
                                                    "end_token": 148,
                                                    "label": "= SchemaField(description=\"Contact information\")",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 150,
                                            "end_token": 159,
                                            "label": "status: str = SchemaField(description=\"Operation status\")",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 150,
                                                    "end_token": 152,
                                                    "label": "status: str",
                                                    "children": []
                                                },
                                                {
                                                    "type": "function_call",
                                                    "start_token": 153,
                                                    "end_token": 159,
                                                    "label": "= SchemaField(description=\"Operation status\")",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "start_token": 162,
                            "end_token": 210,
                            "label": "def __init__(self):\n        super().__init__(\n            id=\"5267326e-c4c1-4016-9f54-4e72ad02f813\",\n            description=\"Manages HubSpot contacts - create, update, and retrieve contact information\",\n            categories={BlockCategory.CRM},\n            input_schema=HubSpotContactBlock.Input,\n            output_schema=HubSpotContactBlock.Output,\n        )\n",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 162,
                                    "end_token": 166,
                                    "label": "def __init__(self)",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "start_token": 167,
                                    "end_token": 167,
                                    "label": ":",
                                    "children": []
                                },
                                {
                                    "type": "block",
                                    "start_token": 168,
                                    "end_token": 210,
                                    "label": "\n        super().__init__(\n            id=\"5267326e-c4c1-4016-9f54-4e72ad02f813\",\n            description=\"Manages HubSpot contacts - create, update, and retrieve contact information\",\n            categories={BlockCategory.CRM},\n            input_schema=HubSpotContactBlock.Input,\n            output_schema=HubSpotContactBlock.Output,\n        )\n",
                                    "children": [
                                        {
                                            "type": "function_call",
                                            "start_token": 169,
                                            "end_token": 209,
                                            "label": "super().__init__(\n            id=\"5267326e-c4c1-4016-9f54-4e72ad02f813\",\n            description=\"Manages HubSpot contacts - create, update, and retrieve contact information\",\n            categories={BlockCategory.CRM},\n            input_schema=HubSpotContactBlock.Input,\n            output_schema=HubSpotContactBlock.Output,\n        )",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 169,
                                                    "end_token": 173,
                                                    "label": "super().__init__",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call_argument_list",
                                                    "start_token": 174,
                                                    "end_token": 209,
                                                    "label": "(\n            id=\"5267326e-c4c1-4016-9f54-4e72ad02f813\",\n            description=\"Manages HubSpot contacts - create, update, and retrieve contact information\",\n            categories={BlockCategory.CRM},\n            input_schema=HubSpotContactBlock.Input,\n            output_schema=HubSpotContactBlock.Output,\n        )",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "start_token": 212,
                            "end_token": 587,
                            "label": "def run(\n        self, input_data: Input, *, credentials: HubSpotCredentials, **kwargs\n    ) -> BlockOutput:\n        base_url = \"https://api.hubapi.com/crm/v3/objects/contacts\"\n        headers = {\n            \"Authorization\": f\"Bearer {credentials.api_key.get_secret_value()}\",\n            \"Content-Type\": \"application/json\",\n        }\n\n        if input_data.operation == \"create\":\n            response = requests.post(\n                base_url, headers=headers, json={\"properties\": input_data.contact_data}\n            )\n            result = response.json()\n            yield \"contact\", result\n            yield \"status\", \"created\"\n\n        elif input_data.operation == \"get\":\n            # Search for contact by email\n            search_url = f\"{base_url}/search\"\n            search_data = {\n                \"filterGroups\": [\n                    {\n                        \"filters\": [\n                            {\n                                \"propertyName\": \"email\",\n                                \"operator\": \"EQ\",\n                                \"value\": input_data.email,\n                            }\n                        ]\n                    }\n                ]\n            }\n            response = requests.post(search_url, headers=headers, json=search_data)\n            result = response.json()\n            yield \"contact\", result.get(\"results\", [{}])[0]\n            yield \"status\", \"retrieved\"\n\n        elif input_data.operation == \"update\":\n            search_response = requests.post(\n                f\"{base_url}/search\",\n                headers=headers,\n                json={\n                    \"filterGroups\": [\n                        {\n                            \"filters\": [\n                                {\n                                    \"propertyName\": \"email\",\n                                    \"operator\": \"EQ\",\n                                    \"value\": input_data.email,\n                                }\n                            ]\n                        }\n                    ]\n                },\n            )\n            contact_id = search_response.json().get(\"results\", [{}])[0].get(\"id\")\n\n            if contact_id:\n                response = requests.patch(\n                    f\"{base_url}/{contact_id}\",\n                    headers=headers,\n                    json={\"properties\": input_data.contact_data},\n                )\n                result = response.json()\n                yield \"contact\", result\n                yield \"status\", \"updated\"\n            else:\n                yield \"contact\", {}\n                yield \"status\", \"contact_not_found\"",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 212,
                                    "end_token": 218,
                                    "label": "def run(\n        self, input_data",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "start_token": 219,
                                    "end_token": 231,
                                    "label": ": Input, *, credentials: HubSpotCredentials, **kwargs\n",
                                    "children": []
                                },
                                {
                                    "type": "block",
                                    "start_token": 236,
                                    "end_token": 587,
                                    "label": ":\n        base_url = \"https://api.hubapi.com/crm/v3/objects/contacts\"\n        headers = {\n            \"Authorization\": f\"Bearer {credentials.api_key.get_secret_value()}\",\n            \"Content-Type\": \"application/json\",\n        }\n\n        if input_data.operation == \"create\":\n            response = requests.post(\n                base_url, headers=headers, json={\"properties\": input_data.contact_data}\n            )\n            result = response.json()\n            yield \"contact\", result\n            yield \"status\", \"created\"\n\n        elif input_data.operation == \"get\":\n            # Search for contact by email\n            search_url = f\"{base_url}/search\"\n            search_data = {\n                \"filterGroups\": [\n                    {\n                        \"filters\": [\n                            {\n                                \"propertyName\": \"email\",\n                                \"operator\": \"EQ\",\n                                \"value\": input_data.email,\n                            }\n                        ]\n                    }\n                ]\n            }\n            response = requests.post(search_url, headers=headers, json=search_data)\n            result = response.json()\n            yield \"contact\", result.get(\"results\", [{}])[0]\n            yield \"status\", \"retrieved\"\n\n        elif input_data.operation == \"update\":\n            search_response = requests.post(\n                f\"{base_url}/search\",\n                headers=headers,\n                json={\n                    \"filterGroups\": [\n                        {\n                            \"filters\": [\n                                {\n                                    \"propertyName\": \"email\",\n                                    \"operator\": \"EQ\",\n                                    \"value\": input_data.email,\n                                }\n                            ]\n                        }\n                    ]\n                },\n            )\n            contact_id = search_response.json().get(\"results\", [{}])[0].get(\"id\")\n\n            if contact_id:\n                response = requests.patch(\n                    f\"{base_url}/{contact_id}\",\n                    headers=headers,\n                    json={\"properties\": input_data.contact_data},\n                )\n                result = response.json()\n                yield \"contact\", result\n                yield \"status\", \"updated\"\n            else:\n                yield \"contact\", {}\n                yield \"status\", \"contact_not_found\"",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "start_token": 238,
                                            "end_token": 240,
                                            "label": "base_url = \"https://api.hubapi.com/crm/v3/objects/contacts\"",
                                            "children": []
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 242,
                                            "end_token": 257,
                                            "label": "headers = {\n            \"Authorization\": f\"Bearer {credentials.api_key.get_secret_value()}\",\n            \"Content-Type\": \"application/json\",\n        }",
                                            "children": []
                                        },
                                        {
                                            "type": "conditional_expression",
                                            "start_token": 260,
                                            "end_token": 310,
                                            "label": "if input_data.operation == \"create\":\n            response = requests.post(\n                base_url, headers=headers, json={\"properties\": input_data.contact_data}\n            )\n            result = response.json()\n            yield \"contact\", result\n            yield \"status\", \"created\"",
                                            "children": [
                                                {
                                                    "type": "comparison_operator",
                                                    "start_token": 260,
                                                    "end_token": 266,
                                                    "label": "if input_data.operation == \"create\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "block",
                                                    "start_token": 267,
                                                    "end_token": 310,
                                                    "label": ":\n            response = requests.post(\n                base_url, headers=headers, json={\"properties\": input_data.contact_data}\n            )\n            result = response.json()\n            yield \"contact\", result\n            yield \"status\", \"created\"",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "start_token": 269,
                                                            "end_token": 291,
                                                            "label": "response = requests.post(\n                base_url, headers=headers, json={\"properties\": input_data.contact_data}\n",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "assignment",
                                                            "start_token": 294,
                                                            "end_token": 310,
                                                            "label": "result = response.json()\n            yield \"contact\", result\n            yield \"status\", \"created\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "conditional_expression",
                                            "start_token": 313,
                                            "end_token": 423,
                                            "label": "elif input_data.operation == \"get\":\n            # Search for contact by email\n            search_url = f\"{base_url}/search\"\n            search_data = {\n                \"filterGroups\": [\n                    {\n                        \"filters\": [\n                            {\n                                \"propertyName\": \"email\",\n                                \"operator\": \"EQ\",\n                                \"value\": input_data.email,\n                            }\n                        ]\n                    }\n                ]\n            }\n            response = requests.post(search_url, headers=headers, json=search_data)\n            result = response.json()\n            yield \"contact\", result.get(\"results\", [{}])[0]\n            yield \"status\", \"retrieved\"",
                                            "children": [
                                                {
                                                    "type": "comparison_operator",
                                                    "start_token": 313,
                                                    "end_token": 319,
                                                    "label": "elif input_data.operation == \"get\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "block",
                                                    "start_token": 320,
                                                    "end_token": 423,
                                                    "label": ":\n            # Search for contact by email\n            search_url = f\"{base_url}/search\"\n            search_data = {\n                \"filterGroups\": [\n                    {\n                        \"filters\": [\n                            {\n                                \"propertyName\": \"email\",\n                                \"operator\": \"EQ\",\n                                \"value\": input_data.email,\n                            }\n                        ]\n                    }\n                ]\n            }\n            response = requests.post(search_url, headers=headers, json=search_data)\n            result = response.json()\n            yield \"contact\", result.get(\"results\", [{}])[0]\n            yield \"status\", \"retrieved\"",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "start_token": 329,
                                                            "end_token": 333,
                                                            "label": "search_url = f\"{base_url}/search\"\n",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "assignment",
                                                            "start_token": 334,
                                                            "end_token": 375,
                                                            "label": "search_data = {\n                \"filterGroups\": [\n                    {\n                        \"filters\": [\n                            {\n                                \"propertyName\": \"email\",\n                                \"operator\": \"EQ\",\n                                \"value\": input_data.email,\n                            }\n                        ]\n                    }\n                ]\n            }",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "assignment",
                                                            "start_token": 377,
                                                            "end_token": 392,
                                                            "label": "response = requests.post(search_url, headers=headers, json=search_data)",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "assignment",
                                                            "start_token": 394,
                                                            "end_token": 419,
                                                            "label": "result = response.json()\n            yield \"contact\", result.get(\"results\", [{}])[0]\n",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "assignment",
                                                            "start_token": 420,
                                                            "end_token": 423,
                                                            "label": "yield \"status\", \"retrieved\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "conditional_expression",
                                            "start_token": 426,
                                            "end_token": 587,
                                            "label": "elif input_data.operation == \"update\":\n            search_response = requests.post(\n                f\"{base_url}/search\",\n                headers=headers,\n                json={\n                    \"filterGroups\": [\n                        {\n                            \"filters\": [\n                                {\n                                    \"propertyName\": \"email\",\n                                    \"operator\": \"EQ\",\n                                    \"value\": input_data.email,\n                                }\n                            ]\n                        }\n                    ]\n                },\n            )\n            contact_id = search_response.json().get(\"results\", [{}])[0].get(\"id\")\n\n            if contact_id:\n                response = requests.patch(\n                    f\"{base_url}/{contact_id}\",\n                    headers=headers,\n                    json={\"properties\": input_data.contact_data},\n                )\n                result = response.json()\n                yield \"contact\", result\n                yield \"status\", \"updated\"\n            else:\n                yield \"contact\", {}\n                yield \"status\", \"contact_not_found\"",
                                            "children": [
                                                {
                                                    "type": "comparison_operator",
                                                    "start_token": 426,
                                                    "end_token": 432,
                                                    "label": "elif input_data.operation == \"update\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "block",
                                                    "start_token": 433,
                                                    "end_token": 587,
                                                    "label": ":\n            search_response = requests.post(\n                f\"{base_url}/search\",\n                headers=headers,\n                json={\n                    \"filterGroups\": [\n                        {\n                            \"filters\": [\n                                {\n                                    \"propertyName\": \"email\",\n                                    \"operator\": \"EQ\",\n                                    \"value\": input_data.email,\n                                }\n                            ]\n                        }\n                    ]\n                },\n            )\n            contact_id = search_response.json().get(\"results\", [{}])[0].get(\"id\")\n\n            if contact_id:\n                response = requests.patch(\n                    f\"{base_url}/{contact_id}\",\n                    headers=headers,\n                    json={\"properties\": input_data.contact_data},\n                )\n                result = response.json()\n                yield \"contact\", result\n                yield \"status\", \"updated\"\n            else:\n                yield \"contact\", {}\n                yield \"status\", \"contact_not_found\"",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "start_token": 435,
                                                            "end_token": 495,
                                                            "label": "search_response = requests.post(\n                f\"{base_url}/search\",\n                headers=headers,\n                json={\n                    \"filterGroups\": [\n                        {\n                            \"filters\": [\n                                {\n                                    \"propertyName\": \"email\",\n                                    \"operator\": \"EQ\",\n                                    \"value\": input_data.email,\n                                }\n                            ]\n                        }\n                    ]\n                },\n            )",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "assignment",
                                                            "start_token": 497,
                                                            "end_token": 521,
                                                            "label": "contact_id = search_response.json().get(\"results\", [{}])[0].get(\"id\")",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "conditional_expression",
                                                            "start_token": 524,
                                                            "end_token": 573,
                                                            "label": "if contact_id:\n                response = requests.patch(\n                    f\"{base_url}/{contact_id}\",\n                    headers=headers,\n                    json={\"properties\": input_data.contact_data},\n                )\n                result = response.json()\n                yield \"contact\", result\n                yield \"status\", \"updated\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "block",
                                                            "start_token": 575,
                                                            "end_token": 587,
                                                            "label": "else:\n                yield \"contact\", {}\n                yield \"status\", \"contact_not_found\"",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "start_token": 578,
                                                                    "end_token": 583,
                                                                    "label": "yield \"contact\", {}\n",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "assignment",
                                                                    "start_token": 584,
                                                                    "end_token": 587,
                                                                    "label": "yield \"status\", \"contact_not_found\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}