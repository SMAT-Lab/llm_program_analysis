{
    "type": "module",
    "start_token": 0,
    "end_token": 474,
    "label": "from typing import Any\n\nfrom backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema\nfrom backend.data.model import SchemaField\nfrom backend.util.json import json\n\n\nclass StepThroughItemsBlock(Block):\n    class Input(BlockSchema):\n        items: list = SchemaField(\n            advanced=False,\n            description=\"The list or dictionary of items to iterate over\",\n            placeholder=\"[1, 2, 3, 4, 5] or {'key1': 'value1', 'key2': 'value2'}\",\n            default=[],\n        )\n        items_object: dict = SchemaField(\n            advanced=False,\n            description=\"The list or dictionary of items to iterate over\",\n            placeholder=\"[1, 2, 3, 4, 5] or {'key1': 'value1', 'key2': 'value2'}\",\n            default={},\n        )\n        items_str: str = SchemaField(\n            advanced=False,\n            description=\"The list or dictionary of items to iterate over\",\n            placeholder=\"[1, 2, 3, 4, 5] or {'key1': 'value1', 'key2': 'value2'}\",\n            default=\"\",\n        )\n\n    class Output(BlockSchema):\n        item: Any = SchemaField(description=\"The current item in the iteration\")\n        key: Any = SchemaField(\n            description=\"The key or index of the current item in the iteration\",\n        )\n\n    def __init__(self):\n        super().__init__(\n            id=\"f66a3543-28d3-4ab5-8945-9b336371e2ce\",\n            input_schema=StepThroughItemsBlock.Input,\n            output_schema=StepThroughItemsBlock.Output,\n            categories={BlockCategory.LOGIC},\n            description=\"Iterates over a list or dictionary and outputs each item.\",\n            test_input={\"items\": [1, 2, 3, {\"key1\": \"value1\", \"key2\": \"value2\"}]},\n            test_output=[\n                (\"item\", 1),\n                (\"key\", 0),\n                (\"item\", 2),\n                (\"key\", 1),\n                (\"item\", 3),\n                (\"key\", 2),\n                (\"item\", {\"key1\": \"value1\", \"key2\": \"value2\"}),\n                (\"key\", 3),\n            ],\n            test_mock={},\n        )\n\n    def run(self, input_data: Input, **kwargs) -> BlockOutput:\n        for data in [input_data.items, input_data.items_object, input_data.items_str]:\n            if not data:\n                continue\n            if isinstance(data, str):\n                items = json.loads(data)\n            else:\n                items = data\n            if isinstance(items, dict):\n                # If items is a dictionary, iterate over its values\n                for item in items.values():\n                    yield \"item\", item\n                    yield \"key\", item\n            else:\n                # If items is a list, iterate over the list\n                for index, item in enumerate(items):\n                    yield \"item\", item\n                    yield \"key\", index\n",
    "children": [
        {
            "type": "relative_import",
            "start_token": 0,
            "end_token": 3,
            "label": "from typing import Any",
            "children": [
                {
                    "type": "import_prefix",
                    "start_token": 0,
                    "end_token": 1,
                    "label": "from typing",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 2,
                    "end_token": 3,
                    "label": "import Any",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 6,
            "end_token": 19,
            "label": "from backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema",
            "children": [
                {
                    "type": "relative_import",
                    "start_token": 6,
                    "end_token": 7,
                    "label": "from backend",
                    "children": []
                },
                {
                    "type": "dotted_name",
                    "start_token": 8,
                    "end_token": 11,
                    "label": ".data.block",
                    "children": []
                },
                {
                    "type": "import_statement",
                    "start_token": 12,
                    "end_token": 19,
                    "label": "import Block, BlockCategory, BlockOutput, BlockSchema",
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 13,
                            "end_token": 14,
                            "label": "Block,",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "start_token": 15,
                            "end_token": 16,
                            "label": "BlockCategory,",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "start_token": 17,
                            "end_token": 18,
                            "label": "BlockOutput,",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 21,
            "end_token": 28,
            "label": "from backend.data.model import SchemaField",
            "children": [
                {
                    "type": "relative_import",
                    "start_token": 21,
                    "end_token": 22,
                    "label": "from backend",
                    "children": []
                },
                {
                    "type": "dotted_name",
                    "start_token": 23,
                    "end_token": 26,
                    "label": ".data.model",
                    "children": []
                },
                {
                    "type": "import_statement",
                    "start_token": 27,
                    "end_token": 28,
                    "label": "import SchemaField",
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 28,
                            "end_token": 28,
                            "label": "SchemaField",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 30,
            "end_token": 37,
            "label": "from backend.util.json import json",
            "children": [
                {
                    "type": "relative_import",
                    "start_token": 30,
                    "end_token": 31,
                    "label": "from backend",
                    "children": []
                },
                {
                    "type": "dotted_name",
                    "start_token": 32,
                    "end_token": 35,
                    "label": ".util.json",
                    "children": []
                },
                {
                    "type": "import_statement",
                    "start_token": 36,
                    "end_token": 37,
                    "label": "import json",
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 37,
                            "end_token": 37,
                            "label": "json",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "class_definition",
            "start_token": 41,
            "end_token": 474,
            "label": "class StepThroughItemsBlock(Block):\n    class Input(BlockSchema):\n        items: list = SchemaField(\n            advanced=False,\n            description=\"The list or dictionary of items to iterate over\",\n            placeholder=\"[1, 2, 3, 4, 5] or {'key1': 'value1', 'key2': 'value2'}\",\n            default=[],\n        )\n        items_object: dict = SchemaField(\n            advanced=False,\n            description=\"The list or dictionary of items to iterate over\",\n            placeholder=\"[1, 2, 3, 4, 5] or {'key1': 'value1', 'key2': 'value2'}\",\n            default={},\n        )\n        items_str: str = SchemaField(\n            advanced=False,\n            description=\"The list or dictionary of items to iterate over\",\n            placeholder=\"[1, 2, 3, 4, 5] or {'key1': 'value1', 'key2': 'value2'}\",\n            default=\"\",\n        )\n\n    class Output(BlockSchema):\n        item: Any = SchemaField(description=\"The current item in the iteration\")\n        key: Any = SchemaField(\n            description=\"The key or index of the current item in the iteration\",\n        )\n\n    def __init__(self):\n        super().__init__(\n            id=\"f66a3543-28d3-4ab5-8945-9b336371e2ce\",\n            input_schema=StepThroughItemsBlock.Input,\n            output_schema=StepThroughItemsBlock.Output,\n            categories={BlockCategory.LOGIC},\n            description=\"Iterates over a list or dictionary and outputs each item.\",\n            test_input={\"items\": [1, 2, 3, {\"key1\": \"value1\", \"key2\": \"value2\"}]},\n            test_output=[\n                (\"item\", 1),\n                (\"key\", 0),\n                (\"item\", 2),\n                (\"key\", 1),\n                (\"item\", 3),\n                (\"key\", 2),\n                (\"item\", {\"key1\": \"value1\", \"key2\": \"value2\"}),\n                (\"key\", 3),\n            ],\n            test_mock={},\n        )\n\n    def run(self, input_data: Input, **kwargs) -> BlockOutput:\n        for data in [input_data.items, input_data.items_object, input_data.items_str]:\n            if not data:\n                continue\n            if isinstance(data, str):\n                items = json.loads(data)\n            else:\n                items = data\n            if isinstance(items, dict):\n                # If items is a dictionary, iterate over its values\n                for item in items.values():\n                    yield \"item\", item\n                    yield \"key\", item\n            else:\n                # If items is a list, iterate over the list\n                for index, item in enumerate(items):\n                    yield \"item\", item\n                    yield \"key\", index\n",
            "children": [
                {
                    "type": "identifier",
                    "start_token": 41,
                    "end_token": 42,
                    "label": "class StepThroughItemsBlock",
                    "children": []
                },
                {
                    "type": "parameters",
                    "start_token": 43,
                    "end_token": 45,
                    "label": "(Block)",
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 44,
                            "end_token": 44,
                            "label": "Block",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "start_token": 46,
                    "end_token": 474,
                    "label": ":\n    class Input(BlockSchema):\n        items: list = SchemaField(\n            advanced=False,\n            description=\"The list or dictionary of items to iterate over\",\n            placeholder=\"[1, 2, 3, 4, 5] or {'key1': 'value1', 'key2': 'value2'}\",\n            default=[],\n        )\n        items_object: dict = SchemaField(\n            advanced=False,\n            description=\"The list or dictionary of items to iterate over\",\n            placeholder=\"[1, 2, 3, 4, 5] or {'key1': 'value1', 'key2': 'value2'}\",\n            default={},\n        )\n        items_str: str = SchemaField(\n            advanced=False,\n            description=\"The list or dictionary of items to iterate over\",\n            placeholder=\"[1, 2, 3, 4, 5] or {'key1': 'value1', 'key2': 'value2'}\",\n            default=\"\",\n        )\n\n    class Output(BlockSchema):\n        item: Any = SchemaField(description=\"The current item in the iteration\")\n        key: Any = SchemaField(\n            description=\"The key or index of the current item in the iteration\",\n        )\n\n    def __init__(self):\n        super().__init__(\n            id=\"f66a3543-28d3-4ab5-8945-9b336371e2ce\",\n            input_schema=StepThroughItemsBlock.Input,\n            output_schema=StepThroughItemsBlock.Output,\n            categories={BlockCategory.LOGIC},\n            description=\"Iterates over a list or dictionary and outputs each item.\",\n            test_input={\"items\": [1, 2, 3, {\"key1\": \"value1\", \"key2\": \"value2\"}]},\n            test_output=[\n                (\"item\", 1),\n                (\"key\", 0),\n                (\"item\", 2),\n                (\"key\", 1),\n                (\"item\", 3),\n                (\"key\", 2),\n                (\"item\", {\"key1\": \"value1\", \"key2\": \"value2\"}),\n                (\"key\", 3),\n            ],\n            test_mock={},\n        )\n\n    def run(self, input_data: Input, **kwargs) -> BlockOutput:\n        for data in [input_data.items, input_data.items_object, input_data.items_str]:\n            if not data:\n                continue\n            if isinstance(data, str):\n                items = json.loads(data)\n            else:\n                items = data\n            if isinstance(items, dict):\n                # If items is a dictionary, iterate over its values\n                for item in items.values():\n                    yield \"item\", item\n                    yield \"key\", item\n            else:\n                # If items is a list, iterate over the list\n                for index, item in enumerate(items):\n                    yield \"item\", item\n                    yield \"key\", index\n",
                    "children": [
                        {
                            "type": "class_definition",
                            "start_token": 48,
                            "end_token": 142,
                            "label": "class Input(BlockSchema):\n        items: list = SchemaField(\n            advanced=False,\n            description=\"The list or dictionary of items to iterate over\",\n            placeholder=\"[1, 2, 3, 4, 5] or {'key1': 'value1', 'key2': 'value2'}\",\n            default=[],\n        )\n        items_object: dict = SchemaField(\n            advanced=False,\n            description=\"The list or dictionary of items to iterate over\",\n            placeholder=\"[1, 2, 3, 4, 5] or {'key1': 'value1', 'key2': 'value2'}\",\n            default={},\n        )\n        items_str: str = SchemaField(\n            advanced=False,\n            description=\"The list or dictionary of items to iterate over\",\n            placeholder=\"[1, 2, 3, 4, 5] or {'key1': 'value1', 'key2': 'value2'}\",\n            default=\"\",\n        )",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 48,
                                    "end_token": 49,
                                    "label": "class Input",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "start_token": 50,
                                    "end_token": 52,
                                    "label": "(BlockSchema)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 51,
                                            "end_token": 51,
                                            "label": "BlockSchema",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "start_token": 53,
                                    "end_token": 142,
                                    "label": ":\n        items: list = SchemaField(\n            advanced=False,\n            description=\"The list or dictionary of items to iterate over\",\n            placeholder=\"[1, 2, 3, 4, 5] or {'key1': 'value1', 'key2': 'value2'}\",\n            default=[],\n        )\n        items_object: dict = SchemaField(\n            advanced=False,\n            description=\"The list or dictionary of items to iterate over\",\n            placeholder=\"[1, 2, 3, 4, 5] or {'key1': 'value1', 'key2': 'value2'}\",\n            default={},\n        )\n        items_str: str = SchemaField(\n            advanced=False,\n            description=\"The list or dictionary of items to iterate over\",\n            placeholder=\"[1, 2, 3, 4, 5] or {'key1': 'value1', 'key2': 'value2'}\",\n            default=\"\",\n        )",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "start_token": 55,
                                            "end_token": 83,
                                            "label": "items: list = SchemaField(\n            advanced=False,\n            description=\"The list or dictionary of items to iterate over\",\n            placeholder=\"[1, 2, 3, 4, 5] or {'key1': 'value1', 'key2': 'value2'}\",\n            default=[],\n        )",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 55,
                                                    "end_token": 56,
                                                    "label": "items:",
                                                    "children": []
                                                },
                                                {
                                                    "type": "default_parameter",
                                                    "start_token": 57,
                                                    "end_token": 83,
                                                    "label": "list = SchemaField(\n            advanced=False,\n            description=\"The list or dictionary of items to iterate over\",\n            placeholder=\"[1, 2, 3, 4, 5] or {'key1': 'value1', 'key2': 'value2'}\",\n            default=[],\n        )",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "start_token": 59,
                                                            "end_token": 83,
                                                            "label": "SchemaField(\n            advanced=False,\n            description=\"The list or dictionary of items to iterate over\",\n            placeholder=\"[1, 2, 3, 4, 5] or {'key1': 'value1', 'key2': 'value2'}\",\n            default=[],\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 59,
                                                                    "end_token": 59,
                                                                    "label": "SchemaField",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "start_token": 60,
                                                                    "end_token": 83,
                                                                    "label": "(\n            advanced=False,\n            description=\"The list or dictionary of items to iterate over\",\n            placeholder=\"[1, 2, 3, 4, 5] or {'key1': 'value1', 'key2': 'value2'}\",\n            default=[],\n        )",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 85,
                                            "end_token": 113,
                                            "label": "items_object: dict = SchemaField(\n            advanced=False,\n            description=\"The list or dictionary of items to iterate over\",\n            placeholder=\"[1, 2, 3, 4, 5] or {'key1': 'value1', 'key2': 'value2'}\",\n            default={},\n        )",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 85,
                                                    "end_token": 86,
                                                    "label": "items_object:",
                                                    "children": []
                                                },
                                                {
                                                    "type": "default_parameter",
                                                    "start_token": 87,
                                                    "end_token": 113,
                                                    "label": "dict = SchemaField(\n            advanced=False,\n            description=\"The list or dictionary of items to iterate over\",\n            placeholder=\"[1, 2, 3, 4, 5] or {'key1': 'value1', 'key2': 'value2'}\",\n            default={},\n        )",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "start_token": 89,
                                                            "end_token": 113,
                                                            "label": "SchemaField(\n            advanced=False,\n            description=\"The list or dictionary of items to iterate over\",\n            placeholder=\"[1, 2, 3, 4, 5] or {'key1': 'value1', 'key2': 'value2'}\",\n            default={},\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 89,
                                                                    "end_token": 89,
                                                                    "label": "SchemaField",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "start_token": 90,
                                                                    "end_token": 113,
                                                                    "label": "(\n            advanced=False,\n            description=\"The list or dictionary of items to iterate over\",\n            placeholder=\"[1, 2, 3, 4, 5] or {'key1': 'value1', 'key2': 'value2'}\",\n            default={},\n        )",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 115,
                                            "end_token": 142,
                                            "label": "items_str: str = SchemaField(\n            advanced=False,\n            description=\"The list or dictionary of items to iterate over\",\n            placeholder=\"[1, 2, 3, 4, 5] or {'key1': 'value1', 'key2': 'value2'}\",\n            default=\"\",\n        )",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 115,
                                                    "end_token": 116,
                                                    "label": "items_str:",
                                                    "children": []
                                                },
                                                {
                                                    "type": "default_parameter",
                                                    "start_token": 117,
                                                    "end_token": 142,
                                                    "label": "str = SchemaField(\n            advanced=False,\n            description=\"The list or dictionary of items to iterate over\",\n            placeholder=\"[1, 2, 3, 4, 5] or {'key1': 'value1', 'key2': 'value2'}\",\n            default=\"\",\n        )",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "start_token": 119,
                                                            "end_token": 142,
                                                            "label": "SchemaField(\n            advanced=False,\n            description=\"The list or dictionary of items to iterate over\",\n            placeholder=\"[1, 2, 3, 4, 5] or {'key1': 'value1', 'key2': 'value2'}\",\n            default=\"\",\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 119,
                                                                    "end_token": 119,
                                                                    "label": "SchemaField",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "start_token": 120,
                                                                    "end_token": 142,
                                                                    "label": "(\n            advanced=False,\n            description=\"The list or dictionary of items to iterate over\",\n            placeholder=\"[1, 2, 3, 4, 5] or {'key1': 'value1', 'key2': 'value2'}\",\n            default=\"\",\n        )",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "class_definition",
                            "start_token": 145,
                            "end_token": 175,
                            "label": "class Output(BlockSchema):\n        item: Any = SchemaField(description=\"The current item in the iteration\")\n        key: Any = SchemaField(\n            description=\"The key or index of the current item in the iteration\",\n        )",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 145,
                                    "end_token": 146,
                                    "label": "class Output",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "start_token": 147,
                                    "end_token": 149,
                                    "label": "(BlockSchema)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 148,
                                            "end_token": 148,
                                            "label": "BlockSchema",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "start_token": 150,
                                    "end_token": 175,
                                    "label": ":\n        item: Any = SchemaField(description=\"The current item in the iteration\")\n        key: Any = SchemaField(\n            description=\"The key or index of the current item in the iteration\",\n        )",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "start_token": 152,
                                            "end_token": 161,
                                            "label": "item: Any = SchemaField(description=\"The current item in the iteration\")",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 152,
                                                    "end_token": 153,
                                                    "label": "item:",
                                                    "children": []
                                                },
                                                {
                                                    "type": "default_parameter",
                                                    "start_token": 154,
                                                    "end_token": 161,
                                                    "label": "Any = SchemaField(description=\"The current item in the iteration\")",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "start_token": 156,
                                                            "end_token": 161,
                                                            "label": "SchemaField(description=\"The current item in the iteration\")",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 156,
                                                                    "end_token": 156,
                                                                    "label": "SchemaField",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "start_token": 157,
                                                                    "end_token": 161,
                                                                    "label": "(description=\"The current item in the iteration\")",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 163,
                                            "end_token": 175,
                                            "label": "key: Any = SchemaField(\n            description=\"The key or index of the current item in the iteration\",\n        )",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 163,
                                                    "end_token": 164,
                                                    "label": "key:",
                                                    "children": []
                                                },
                                                {
                                                    "type": "default_parameter",
                                                    "start_token": 165,
                                                    "end_token": 175,
                                                    "label": "Any = SchemaField(\n            description=\"The key or index of the current item in the iteration\",\n        )",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "start_token": 167,
                                                            "end_token": 175,
                                                            "label": "SchemaField(\n            description=\"The key or index of the current item in the iteration\",\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 167,
                                                                    "end_token": 167,
                                                                    "label": "SchemaField",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "start_token": 168,
                                                                    "end_token": 175,
                                                                    "label": "(\n            description=\"The key or index of the current item in the iteration\",\n        )",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "start_token": 178,
                            "end_token": 327,
                            "label": "def __init__(self):\n        super().__init__(\n            id=\"f66a3543-28d3-4ab5-8945-9b336371e2ce\",\n            input_schema=StepThroughItemsBlock.Input,\n            output_schema=StepThroughItemsBlock.Output,\n            categories={BlockCategory.LOGIC},\n            description=\"Iterates over a list or dictionary and outputs each item.\",\n            test_input={\"items\": [1, 2, 3, {\"key1\": \"value1\", \"key2\": \"value2\"}]},\n            test_output=[\n                (\"item\", 1),\n                (\"key\", 0),\n                (\"item\", 2),\n                (\"key\", 1),\n                (\"item\", 3),\n                (\"key\", 2),\n                (\"item\", {\"key1\": \"value1\", \"key2\": \"value2\"}),\n                (\"key\", 3),\n            ],\n            test_mock={},\n        )",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 178,
                                    "end_token": 179,
                                    "label": "def __init__",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "start_token": 180,
                                    "end_token": 182,
                                    "label": "(self)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 181,
                                            "end_token": 181,
                                            "label": "self",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "start_token": 183,
                                    "end_token": 327,
                                    "label": ":\n        super().__init__(\n            id=\"f66a3543-28d3-4ab5-8945-9b336371e2ce\",\n            input_schema=StepThroughItemsBlock.Input,\n            output_schema=StepThroughItemsBlock.Output,\n            categories={BlockCategory.LOGIC},\n            description=\"Iterates over a list or dictionary and outputs each item.\",\n            test_input={\"items\": [1, 2, 3, {\"key1\": \"value1\", \"key2\": \"value2\"}]},\n            test_output=[\n                (\"item\", 1),\n                (\"key\", 0),\n                (\"item\", 2),\n                (\"key\", 1),\n                (\"item\", 3),\n                (\"key\", 2),\n                (\"item\", {\"key1\": \"value1\", \"key2\": \"value2\"}),\n                (\"key\", 3),\n            ],\n            test_mock={},\n        )",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "start_token": 330,
                            "end_token": 474,
                            "label": "def run(self, input_data: Input, **kwargs) -> BlockOutput:\n        for data in [input_data.items, input_data.items_object, input_data.items_str]:\n            if not data:\n                continue\n            if isinstance(data, str):\n                items = json.loads(data)\n            else:\n                items = data\n            if isinstance(items, dict):\n                # If items is a dictionary, iterate over its values\n                for item in items.values():\n                    yield \"item\", item\n                    yield \"key\", item\n            else:\n                # If items is a list, iterate over the list\n                for index, item in enumerate(items):\n                    yield \"item\", item\n                    yield \"key\", index\n",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 330,
                                    "end_token": 331,
                                    "label": "def run",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "start_token": 332,
                                    "end_token": 342,
                                    "label": "(self, input_data: Input, **kwargs)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 333,
                                            "end_token": 334,
                                            "label": "self,",
                                            "children": []
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "start_token": 335,
                                            "end_token": 337,
                                            "label": "input_data: Input",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 335,
                                                    "end_token": 335,
                                                    "label": "input_data",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "start_token": 337,
                                                    "end_token": 337,
                                                    "label": "Input",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "parameters",
                                            "start_token": 339,
                                            "end_token": 341,
                                            "label": "**kwargs",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "start_token": 346,
                                    "end_token": 474,
                                    "label": ":\n        for data in [input_data.items, input_data.items_object, input_data.items_str]:\n            if not data:\n                continue\n            if isinstance(data, str):\n                items = json.loads(data)\n            else:\n                items = data\n            if isinstance(items, dict):\n                # If items is a dictionary, iterate over its values\n                for item in items.values():\n                    yield \"item\", item\n                    yield \"key\", item\n            else:\n                # If items is a list, iterate over the list\n                for index, item in enumerate(items):\n                    yield \"item\", item\n                    yield \"key\", index\n",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}