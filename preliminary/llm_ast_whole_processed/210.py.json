{
    "type": "module",
    "start_token": 0,
    "end_token": 75,
    "label": "def binary_coded_decimal(number: int) -> str:\n    \"\"\"\n    Find binary coded decimal (bcd) of integer base 10.\n    Each digit of the number is represented by a 4-bit binary.\n    Example:\n    >>> binary_coded_decimal(-2)\n    '0b0000'\n    >>> binary_coded_decimal(-1)\n    '0b0000'\n    >>> binary_coded_decimal(0)\n    '0b0000'\n    >>> binary_coded_decimal(3)\n    '0b0011'\n    >>> binary_coded_decimal(2)\n    '0b0010'\n    >>> binary_coded_decimal(12)\n    '0b00010010'\n    >>> binary_coded_decimal(987)\n    '0b100110000111'\n    \"\"\"\n    return \"0b\" + \"\".join(\n        str(bin(int(digit)))[2:].zfill(4) for digit in str(max(0, number))\n    )\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
    "children": [
        {
            "type": "function_definition",
            "start_token": 0,
            "end_token": 55,
            "label": "def binary_coded_decimal(number: int) -> str:\n    \"\"\"\n    Find binary coded decimal (bcd) of integer base 10.\n    Each digit of the number is represented by a 4-bit binary.\n    Example:\n    >>> binary_coded_decimal(-2)\n    '0b0000'\n    >>> binary_coded_decimal(-1)\n    '0b0000'\n    >>> binary_coded_decimal(0)\n    '0b0000'\n    >>> binary_coded_decimal(3)\n    '0b0011'\n    >>> binary_coded_decimal(2)\n    '0b0010'\n    >>> binary_coded_decimal(12)\n    '0b00010010'\n    >>> binary_coded_decimal(987)\n    '0b100110000111'\n    \"\"\"\n    return \"0b\" + \"\".join(\n        str(bin(int(digit)))[2:].zfill(4) for digit in str(max(0, number))\n",
            "children": [
                {
                    "type": "identifier",
                    "start_token": 0,
                    "end_token": 0,
                    "label": "def",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 1,
                    "end_token": 1,
                    "label": "binary_coded_decimal",
                    "children": []
                },
                {
                    "type": "parameters",
                    "start_token": 2,
                    "end_token": 6,
                    "label": "(number: int)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "start_token": 3,
                            "end_token": 5,
                            "label": "number: int",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 3,
                                    "end_token": 3,
                                    "label": "number",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "start_token": 5,
                                    "end_token": 5,
                                    "label": "int",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "start_token": 8,
                    "end_token": 9,
                    "label": "> str",
                    "children": []
                },
                {
                    "type": "block",
                    "start_token": 10,
                    "end_token": 55,
                    "label": ":\n    \"\"\"\n    Find binary coded decimal (bcd) of integer base 10.\n    Each digit of the number is represented by a 4-bit binary.\n    Example:\n    >>> binary_coded_decimal(-2)\n    '0b0000'\n    >>> binary_coded_decimal(-1)\n    '0b0000'\n    >>> binary_coded_decimal(0)\n    '0b0000'\n    >>> binary_coded_decimal(3)\n    '0b0011'\n    >>> binary_coded_decimal(2)\n    '0b0010'\n    >>> binary_coded_decimal(12)\n    '0b00010010'\n    >>> binary_coded_decimal(987)\n    '0b100110000111'\n    \"\"\"\n    return \"0b\" + \"\".join(\n        str(bin(int(digit)))[2:].zfill(4) for digit in str(max(0, number))\n",
                    "children": [
                        {
                            "type": "comment",
                            "start_token": 12,
                            "end_token": 14,
                            "label": "\"\"\"\n    Find binary coded decimal (bcd) of integer base 10.\n    Each digit of the number is represented by a 4-bit binary.\n    Example:\n    >>> binary_coded_decimal(-2)\n    '0b0000'\n    >>> binary_coded_decimal(-1)\n    '0b0000'\n    >>> binary_coded_decimal(0)\n    '0b0000'\n    >>> binary_coded_decimal(3)\n    '0b0011'\n    >>> binary_coded_decimal(2)\n    '0b0010'\n    >>> binary_coded_decimal(12)\n    '0b00010010'\n    >>> binary_coded_decimal(987)\n    '0b100110000111'\n    \"\"\"",
                            "children": []
                        },
                        {
                            "type": "return_statement",
                            "start_token": 16,
                            "end_token": 56,
                            "label": "return \"0b\" + \"\".join(\n        str(bin(int(digit)))[2:].zfill(4) for digit in str(max(0, number))\n    )",
                            "children": [
                                {
                                    "type": "binary_operator",
                                    "start_token": 17,
                                    "end_token": 56,
                                    "label": "\"0b\" + \"\".join(\n        str(bin(int(digit)))[2:].zfill(4) for digit in str(max(0, number))\n    )",
                                    "children": [
                                        {
                                            "type": "string",
                                            "start_token": 17,
                                            "end_token": 17,
                                            "label": "\"0b\"",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "start_token": 19,
                                            "end_token": 56,
                                            "label": "\"\".join(\n        str(bin(int(digit)))[2:].zfill(4) for digit in str(max(0, number))\n    )",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "start_token": 20,
                                                    "end_token": 21,
                                                    "label": ".join",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "start_token": 19,
                                                            "end_token": 19,
                                                            "label": "\"\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 21,
                                                            "end_token": 21,
                                                            "label": "join",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "start_token": 22,
                                                    "end_token": 56,
                                                    "label": "(\n        str(bin(int(digit)))[2:].zfill(4) for digit in str(max(0, number))\n    )",
                                                    "children": [
                                                        {
                                                            "type": "comprehension",
                                                            "start_token": 23,
                                                            "end_token": 56,
                                                            "label": "\n        str(bin(int(digit)))[2:].zfill(4) for digit in str(max(0, number))\n    )",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "start_token": 24,
                                                                    "end_token": 42,
                                                                    "label": "str(bin(int(digit)))[2:].zfill(4)",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "start_token": 30,
                                                                            "end_token": 31,
                                                                            "label": "digit)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 24,
                                                                                    "end_token": 24,
                                                                                    "label": "str",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "call",
                                                                                    "start_token": 26,
                                                                                    "end_token": 32,
                                                                                    "label": "bin(int(digit))",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 27,
                                                                                            "end_token": 27,
                                                                                            "label": "(",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "start_token": 28,
                                                                                                    "end_token": 29,
                                                                                                    "label": "int(",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "slice",
                                                                            "start_token": 34,
                                                                            "end_token": 37,
                                                                            "label": "[2:]",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "call",
                                                                            "start_token": 38,
                                                                            "end_token": 42,
                                                                            "label": ".zfill(4)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "integer",
                                                                                    "start_token": 41,
                                                                                    "end_token": 41,
                                                                                    "label": "4",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "for_in_clause",
                                                                    "start_token": 43,
                                                                    "end_token": 55,
                                                                    "label": "for digit in str(max(0, number))\n",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 44,
                                                                            "end_token": 44,
                                                                            "label": "digit",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "call",
                                                                            "start_token": 46,
                                                                            "end_token": 54,
                                                                            "label": "str(max(0, number))",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 45,
                                                                                    "end_token": 45,
                                                                                    "label": "in",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "call",
                                                                                    "start_token": 48,
                                                                                    "end_token": 53,
                                                                                    "label": "max(0, number)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "integer",
                                                                                            "start_token": 50,
                                                                                            "end_token": 50,
                                                                                            "label": "0",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 52,
                                                                                            "end_token": 52,
                                                                                            "label": "number",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "if_statement",
            "start_token": 60,
            "end_token": 75,
            "label": "if __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
            "children": [
                {
                    "type": "if_clause",
                    "start_token": 60,
                    "end_token": 65,
                    "label": "if __name__ == \"__main__\":",
                    "children": [
                        {
                            "type": "comparison_operator",
                            "start_token": 61,
                            "end_token": 64,
                            "label": "__name__ == \"__main__\"",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 61,
                                    "end_token": 61,
                                    "label": "__name__",
                                    "children": []
                                },
                                {
                                    "type": "string",
                                    "start_token": 64,
                                    "end_token": 64,
                                    "label": "\"__main__\"",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "start_token": 66,
                    "end_token": 75,
                    "label": "\n    import doctest\n\n    doctest.testmod()",
                    "children": [
                        {
                            "type": "import_statement",
                            "start_token": 67,
                            "end_token": 67,
                            "label": "import",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 67,
                                    "end_token": 67,
                                    "label": "import",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "call",
                            "start_token": 71,
                            "end_token": 75,
                            "label": "doctest.testmod()",
                            "children": [
                                {
                                    "type": "attribute",
                                    "start_token": 71,
                                    "end_token": 73,
                                    "label": "doctest.testmod",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 71,
                                            "end_token": 71,
                                            "label": "doctest",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "start_token": 73,
                                            "end_token": 73,
                                            "label": "testmod",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "start_token": 74,
                                    "end_token": 75,
                                    "label": "()",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}