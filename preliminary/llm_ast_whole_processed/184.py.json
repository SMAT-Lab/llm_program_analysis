{
    "type": "module",
    "start_token": 0,
    "end_token": 327,
    "label": "from typing import Dict, Set\n\nfrom fastapi import WebSocket\n\nfrom backend.data import execution\nfrom backend.server.model import Methods, WsMessage\n\n\nclass ConnectionManager:\n    def __init__(self):\n        self.active_connections: Set[WebSocket] = set()\n        self.subscriptions: Dict[str, Set[WebSocket]] = {}\n\n    async def connect(self, websocket: WebSocket):\n        await websocket.accept()\n        self.active_connections.add(websocket)\n\n    def disconnect(self, websocket: WebSocket):\n        self.active_connections.remove(websocket)\n        for subscribers in self.subscriptions.values():\n            subscribers.discard(websocket)\n\n    async def subscribe(self, graph_id: str, websocket: WebSocket):\n        if graph_id not in self.subscriptions:\n            self.subscriptions[graph_id] = set()\n        self.subscriptions[graph_id].add(websocket)\n\n    async def unsubscribe(self, graph_id: str, websocket: WebSocket):\n        if graph_id in self.subscriptions:\n            self.subscriptions[graph_id].discard(websocket)\n            if not self.subscriptions[graph_id]:\n                del self.subscriptions[graph_id]\n\n    async def send_execution_result(self, result: execution.ExecutionResult):\n        graph_id = result.graph_id\n        if graph_id in self.subscriptions:\n            message = WsMessage(\n                method=Methods.EXECUTION_EVENT,\n                channel=graph_id,\n                data=result.model_dump(),\n            ).model_dump_json()\n            for connection in self.subscriptions[graph_id]:\n                await connection.send_text(message)\n",
    "children": [
        {
            "type": "import_from_statement",
            "start_token": 0,
            "end_token": 5,
            "label": "from typing import Dict, Set",
            "children": [
                {
                    "type": "import_prefix",
                    "start_token": 0,
                    "end_token": 0,
                    "label": "from",
                    "children": []
                },
                {
                    "type": "dotted_name",
                    "start_token": 1,
                    "end_token": 1,
                    "label": "typing",
                    "children": []
                },
                {
                    "type": "import_prefix",
                    "start_token": 2,
                    "end_token": 2,
                    "label": "import",
                    "children": []
                },
                {
                    "type": "import_list",
                    "start_token": 3,
                    "end_token": 5,
                    "label": "Dict, Set",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 8,
            "end_token": 11,
            "label": "from fastapi import WebSocket",
            "children": [
                {
                    "type": "import_prefix",
                    "start_token": 8,
                    "end_token": 8,
                    "label": "from",
                    "children": []
                },
                {
                    "type": "dotted_name",
                    "start_token": 9,
                    "end_token": 9,
                    "label": "fastapi",
                    "children": []
                },
                {
                    "type": "import_prefix",
                    "start_token": 10,
                    "end_token": 10,
                    "label": "import",
                    "children": []
                },
                {
                    "type": "import_list",
                    "start_token": 11,
                    "end_token": 11,
                    "label": "WebSocket",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 14,
            "end_token": 19,
            "label": "from backend.data import execution",
            "children": [
                {
                    "type": "import_prefix",
                    "start_token": 14,
                    "end_token": 14,
                    "label": "from",
                    "children": []
                },
                {
                    "type": "dotted_name",
                    "start_token": 15,
                    "end_token": 17,
                    "label": "backend.data",
                    "children": []
                },
                {
                    "type": "import_prefix",
                    "start_token": 18,
                    "end_token": 18,
                    "label": "import",
                    "children": []
                },
                {
                    "type": "import_list",
                    "start_token": 19,
                    "end_token": 19,
                    "label": "execution",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 21,
            "end_token": 30,
            "label": "from backend.server.model import Methods, WsMessage",
            "children": [
                {
                    "type": "import_prefix",
                    "start_token": 21,
                    "end_token": 21,
                    "label": "from",
                    "children": []
                },
                {
                    "type": "dotted_name",
                    "start_token": 22,
                    "end_token": 26,
                    "label": "backend.server.model",
                    "children": []
                },
                {
                    "type": "import_prefix",
                    "start_token": 27,
                    "end_token": 27,
                    "label": "import",
                    "children": []
                },
                {
                    "type": "import_list",
                    "start_token": 28,
                    "end_token": 30,
                    "label": "Methods, WsMessage",
                    "children": []
                }
            ]
        },
        {
            "type": "class_definition",
            "start_token": 34,
            "end_token": 326,
            "label": "class ConnectionManager:\n    def __init__(self):\n        self.active_connections: Set[WebSocket] = set()\n        self.subscriptions: Dict[str, Set[WebSocket]] = {}\n\n    async def connect(self, websocket: WebSocket):\n        await websocket.accept()\n        self.active_connections.add(websocket)\n\n    def disconnect(self, websocket: WebSocket):\n        self.active_connections.remove(websocket)\n        for subscribers in self.subscriptions.values():\n            subscribers.discard(websocket)\n\n    async def subscribe(self, graph_id: str, websocket: WebSocket):\n        if graph_id not in self.subscriptions:\n            self.subscriptions[graph_id] = set()\n        self.subscriptions[graph_id].add(websocket)\n\n    async def unsubscribe(self, graph_id: str, websocket: WebSocket):\n        if graph_id in self.subscriptions:\n            self.subscriptions[graph_id].discard(websocket)\n            if not self.subscriptions[graph_id]:\n                del self.subscriptions[graph_id]\n\n    async def send_execution_result(self, result: execution.ExecutionResult):\n        graph_id = result.graph_id\n        if graph_id in self.subscriptions:\n            message = WsMessage(\n                method=Methods.EXECUTION_EVENT,\n                channel=graph_id,\n                data=result.model_dump(),\n            ).model_dump_json()\n            for connection in self.subscriptions[graph_id]:\n                await connection.send_text(message)",
            "children": [
                {
                    "type": "identifier",
                    "start_token": 34,
                    "end_token": 35,
                    "label": "class ConnectionManager",
                    "children": []
                },
                {
                    "type": "block",
                    "start_token": 36,
                    "end_token": 326,
                    "label": ":\n    def __init__(self):\n        self.active_connections: Set[WebSocket] = set()\n        self.subscriptions: Dict[str, Set[WebSocket]] = {}\n\n    async def connect(self, websocket: WebSocket):\n        await websocket.accept()\n        self.active_connections.add(websocket)\n\n    def disconnect(self, websocket: WebSocket):\n        self.active_connections.remove(websocket)\n        for subscribers in self.subscriptions.values():\n            subscribers.discard(websocket)\n\n    async def subscribe(self, graph_id: str, websocket: WebSocket):\n        if graph_id not in self.subscriptions:\n            self.subscriptions[graph_id] = set()\n        self.subscriptions[graph_id].add(websocket)\n\n    async def unsubscribe(self, graph_id: str, websocket: WebSocket):\n        if graph_id in self.subscriptions:\n            self.subscriptions[graph_id].discard(websocket)\n            if not self.subscriptions[graph_id]:\n                del self.subscriptions[graph_id]\n\n    async def send_execution_result(self, result: execution.ExecutionResult):\n        graph_id = result.graph_id\n        if graph_id in self.subscriptions:\n            message = WsMessage(\n                method=Methods.EXECUTION_EVENT,\n                channel=graph_id,\n                data=result.model_dump(),\n            ).model_dump_json()\n            for connection in self.subscriptions[graph_id]:\n                await connection.send_text(message)",
                    "children": [
                        {
                            "type": "function_definition",
                            "start_token": 38,
                            "end_token": 73,
                            "label": "def __init__(self):\n        self.active_connections: Set[WebSocket] = set()\n        self.subscriptions: Dict[str, Set[WebSocket]] = {}",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 38,
                                    "end_token": 39,
                                    "label": "def __init__",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "start_token": 40,
                                    "end_token": 42,
                                    "label": "(self)",
                                    "children": []
                                },
                                {
                                    "type": "block",
                                    "start_token": 43,
                                    "end_token": 73,
                                    "label": ":\n        self.active_connections: Set[WebSocket] = set()\n        self.subscriptions: Dict[str, Set[WebSocket]] = {}",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "start_token": 45,
                                            "end_token": 56,
                                            "label": "self.active_connections: Set[WebSocket] = set()",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "start_token": 45,
                                                    "end_token": 47,
                                                    "label": "self.active_connections",
                                                    "children": []
                                                },
                                                {
                                                    "type": "typing",
                                                    "start_token": 48,
                                                    "end_token": 52,
                                                    "label": ": Set[WebSocket]",
                                                    "children": []
                                                },
                                                {
                                                    "type": "set",
                                                    "start_token": 54,
                                                    "end_token": 56,
                                                    "label": "set()",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 58,
                                            "end_token": 73,
                                            "label": "self.subscriptions: Dict[str, Set[WebSocket]] = {}",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "start_token": 58,
                                                    "end_token": 60,
                                                    "label": "self.subscriptions",
                                                    "children": []
                                                },
                                                {
                                                    "type": "typing",
                                                    "start_token": 62,
                                                    "end_token": 70,
                                                    "label": "Dict[str, Set[WebSocket]]",
                                                    "children": []
                                                },
                                                {
                                                    "type": "dictionary",
                                                    "start_token": 72,
                                                    "end_token": 73,
                                                    "label": "{}",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "start_token": 76,
                            "end_token": 102,
                            "label": "async def connect(self, websocket: WebSocket):\n        await websocket.accept()\n        self.active_connections.add(websocket)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 76,
                                    "end_token": 78,
                                    "label": "async def connect",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "start_token": 79,
                                    "end_token": 85,
                                    "label": "(self, websocket: WebSocket)",
                                    "children": []
                                },
                                {
                                    "type": "block",
                                    "start_token": 86,
                                    "end_token": 102,
                                    "label": ":\n        await websocket.accept()\n        self.active_connections.add(websocket)",
                                    "children": [
                                        {
                                            "type": "await",
                                            "start_token": 88,
                                            "end_token": 93,
                                            "label": "await websocket.accept()",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "start_token": 89,
                                                    "end_token": 92,
                                                    "label": "websocket.accept(",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "start_token": 89,
                                                            "end_token": 91,
                                                            "label": "websocket.accept",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "call",
                                            "start_token": 95,
                                            "end_token": 102,
                                            "label": "self.active_connections.add(websocket)",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "start_token": 95,
                                                    "end_token": 97,
                                                    "label": "self.active_connections",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "start_token": 100,
                                                    "end_token": 101,
                                                    "label": "(websocket",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "start_token": 105,
                            "end_token": 143,
                            "label": "def disconnect(self, websocket: WebSocket):\n        self.active_connections.remove(websocket)\n        for subscribers in self.subscriptions.values():\n            subscribers.discard(websocket)\n",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 105,
                                    "end_token": 107,
                                    "label": "def disconnect(",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "start_token": 108,
                                    "end_token": 113,
                                    "label": "self, websocket: WebSocket)",
                                    "children": []
                                },
                                {
                                    "type": "block",
                                    "start_token": 114,
                                    "end_token": 143,
                                    "label": ":\n        self.active_connections.remove(websocket)\n        for subscribers in self.subscriptions.values():\n            subscribers.discard(websocket)\n",
                                    "children": [
                                        {
                                            "type": "call",
                                            "start_token": 116,
                                            "end_token": 123,
                                            "label": "self.active_connections.remove(websocket)",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "start_token": 116,
                                                    "end_token": 118,
                                                    "label": "self.active_connections",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "start_token": 121,
                                                    "end_token": 122,
                                                    "label": "(websocket",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "for_in_clause",
                                            "start_token": 125,
                                            "end_token": 135,
                                            "label": "for subscribers in self.subscriptions.values():",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 125,
                                                    "end_token": 127,
                                                    "label": "for subscribers in",
                                                    "children": []
                                                },
                                                {
                                                    "type": "attribute",
                                                    "start_token": 128,
                                                    "end_token": 132,
                                                    "label": "self.subscriptions.values",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 133,
                                                    "end_token": 134,
                                                    "label": "()",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "call",
                                            "start_token": 137,
                                            "end_token": 142,
                                            "label": "subscribers.discard(websocket)",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "start_token": 137,
                                                    "end_token": 139,
                                                    "label": "subscribers.discard",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "start_token": 140,
                                                    "end_token": 141,
                                                    "label": "(websocket",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "start_token": 145,
                            "end_token": 191,
                            "label": "async def subscribe(self, graph_id: str, websocket: WebSocket):\n        if graph_id not in self.subscriptions:\n            self.subscriptions[graph_id] = set()\n        self.subscriptions[graph_id].add(websocket)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 145,
                                    "end_token": 147,
                                    "label": "async def subscribe",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "start_token": 148,
                                    "end_token": 158,
                                    "label": "(self, graph_id: str, websocket: WebSocket)",
                                    "children": []
                                },
                                {
                                    "type": "block",
                                    "start_token": 159,
                                    "end_token": 191,
                                    "label": ":\n        if graph_id not in self.subscriptions:\n            self.subscriptions[graph_id] = set()\n        self.subscriptions[graph_id].add(websocket)",
                                    "children": [
                                        {
                                            "type": "if_clause",
                                            "start_token": 161,
                                            "end_token": 179,
                                            "label": "if graph_id not in self.subscriptions:\n            self.subscriptions[graph_id] = set()",
                                            "children": [
                                                {
                                                    "type": "comparison_operator",
                                                    "start_token": 162,
                                                    "end_token": 164,
                                                    "label": "graph_id not in",
                                                    "children": []
                                                },
                                                {
                                                    "type": "attribute",
                                                    "start_token": 165,
                                                    "end_token": 167,
                                                    "label": "self.subscriptions",
                                                    "children": []
                                                },
                                                {
                                                    "type": "block",
                                                    "start_token": 168,
                                                    "end_token": 179,
                                                    "label": ":\n            self.subscriptions[graph_id] = set()",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "start_token": 170,
                                                            "end_token": 179,
                                                            "label": "self.subscriptions[graph_id] = set()",
                                                            "children": [
                                                                {
                                                                    "type": "subscript",
                                                                    "start_token": 170,
                                                                    "end_token": 175,
                                                                    "label": "self.subscriptions[graph_id]",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "set",
                                                                    "start_token": 177,
                                                                    "end_token": 179,
                                                                    "label": "set()",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "call",
                                            "start_token": 181,
                                            "end_token": 190,
                                            "label": "self.subscriptions[graph_id].add(websocket",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "start_token": 181,
                                                    "end_token": 185,
                                                    "label": "self.subscriptions[graph_id",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "start_token": 188,
                                                    "end_token": 189,
                                                    "label": "add(",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "start_token": 194,
                            "end_token": 246,
                            "label": "async def unsubscribe(self, graph_id: str, websocket: WebSocket):\n        if graph_id in self.subscriptions:\n            self.subscriptions[graph_id].discard(websocket)\n            if not self.subscriptions[graph_id]:\n                del self.subscriptions[graph_id]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 194,
                                    "end_token": 196,
                                    "label": "async def unsubscribe",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "start_token": 197,
                                    "end_token": 207,
                                    "label": "(self, graph_id: str, websocket: WebSocket)",
                                    "children": []
                                },
                                {
                                    "type": "block",
                                    "start_token": 208,
                                    "end_token": 246,
                                    "label": ":\n        if graph_id in self.subscriptions:\n            self.subscriptions[graph_id].discard(websocket)\n            if not self.subscriptions[graph_id]:\n                del self.subscriptions[graph_id]",
                                    "children": [
                                        {
                                            "type": "if_clause",
                                            "start_token": 210,
                                            "end_token": 228,
                                            "label": "if graph_id in self.subscriptions:\n            self.subscriptions[graph_id].discard(websocket)",
                                            "children": [
                                                {
                                                    "type": "comparison_operator",
                                                    "start_token": 211,
                                                    "end_token": 213,
                                                    "label": "graph_id in self",
                                                    "children": []
                                                },
                                                {
                                                    "type": "attribute",
                                                    "start_token": 214,
                                                    "end_token": 215,
                                                    "label": ".subscriptions",
                                                    "children": []
                                                },
                                                {
                                                    "type": "block",
                                                    "start_token": 216,
                                                    "end_token": 228,
                                                    "label": ":\n            self.subscriptions[graph_id].discard(websocket)",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "start_token": 218,
                                                            "end_token": 227,
                                                            "label": "self.subscriptions[graph_id].discard(websocket",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "start_token": 218,
                                                                    "end_token": 222,
                                                                    "label": "self.subscriptions[graph_id",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "start_token": 225,
                                                                    "end_token": 226,
                                                                    "label": "discard(",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "if_clause",
                                            "start_token": 230,
                                            "end_token": 246,
                                            "label": "if not self.subscriptions[graph_id]:\n                del self.subscriptions[graph_id]",
                                            "children": [
                                                {
                                                    "type": "unary_operator",
                                                    "start_token": 231,
                                                    "end_token": 231,
                                                    "label": "not",
                                                    "children": []
                                                },
                                                {
                                                    "type": "comparison_operator",
                                                    "start_token": 232,
                                                    "end_token": 232,
                                                    "label": "self",
                                                    "children": []
                                                },
                                                {
                                                    "type": "attribute",
                                                    "start_token": 233,
                                                    "end_token": 237,
                                                    "label": ".subscriptions[graph_id]",
                                                    "children": []
                                                },
                                                {
                                                    "type": "block",
                                                    "start_token": 238,
                                                    "end_token": 246,
                                                    "label": ":\n                del self.subscriptions[graph_id]",
                                                    "children": [
                                                        {
                                                            "type": "delete_statement",
                                                            "start_token": 240,
                                                            "end_token": 246,
                                                            "label": "del self.subscriptions[graph_id]",
                                                            "children": [
                                                                {
                                                                    "type": "subscript",
                                                                    "start_token": 241,
                                                                    "end_token": 245,
                                                                    "label": "self.subscriptions[graph_id",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "start_token": 249,
                            "end_token": 326,
                            "label": "async def send_execution_result(self, result: execution.ExecutionResult):\n        graph_id = result.graph_id\n        if graph_id in self.subscriptions:\n            message = WsMessage(\n                method=Methods.EXECUTION_EVENT,\n                channel=graph_id,\n                data=result.model_dump(),\n            ).model_dump_json()\n            for connection in self.subscriptions[graph_id]:\n                await connection.send_text(message)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 249,
                                    "end_token": 251,
                                    "label": "async def send_execution_result",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "start_token": 252,
                                    "end_token": 260,
                                    "label": "(self, result: execution.ExecutionResult)",
                                    "children": []
                                },
                                {
                                    "type": "block",
                                    "start_token": 261,
                                    "end_token": 326,
                                    "label": ":\n        graph_id = result.graph_id\n        if graph_id in self.subscriptions:\n            message = WsMessage(\n                method=Methods.EXECUTION_EVENT,\n                channel=graph_id,\n                data=result.model_dump(),\n            ).model_dump_json()\n            for connection in self.subscriptions[graph_id]:\n                await connection.send_text(message)",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "start_token": 263,
                                            "end_token": 267,
                                            "label": "graph_id = result.graph_id",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 263,
                                                    "end_token": 263,
                                                    "label": "graph_id",
                                                    "children": []
                                                },
                                                {
                                                    "type": "attribute",
                                                    "start_token": 265,
                                                    "end_token": 267,
                                                    "label": "result.graph_id",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "if_clause",
                                            "start_token": 269,
                                            "end_token": 327,
                                            "label": "if graph_id in self.subscriptions:\n            message = WsMessage(\n                method=Methods.EXECUTION_EVENT,\n                channel=graph_id,\n                data=result.model_dump(),\n            ).model_dump_json()\n            for connection in self.subscriptions[graph_id]:\n                await connection.send_text(message)\n",
                                            "children": [
                                                {
                                                    "type": "comparison_operator",
                                                    "start_token": 270,
                                                    "end_token": 271,
                                                    "label": "graph_id in",
                                                    "children": []
                                                },
                                                {
                                                    "type": "attribute",
                                                    "start_token": 272,
                                                    "end_token": 276,
                                                    "label": "self.subscriptions:\n",
                                                    "children": []
                                                },
                                                {
                                                    "type": "block",
                                                    "start_token": 277,
                                                    "end_token": 326,
                                                    "label": "message = WsMessage(\n                method=Methods.EXECUTION_EVENT,\n                channel=graph_id,\n                data=result.model_dump(),\n            ).model_dump_json()\n            for connection in self.subscriptions[graph_id]:\n                await connection.send_text(message)",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "start_token": 277,
                                                            "end_token": 292,
                                                            "label": "message = WsMessage(\n                method=Methods.EXECUTION_EVENT,\n                channel=graph_id,",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 277,
                                                                    "end_token": 278,
                                                                    "label": "message =",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "start_token": 279,
                                                                    "end_token": 292,
                                                                    "label": "WsMessage(\n                method=Methods.EXECUTION_EVENT,\n                channel=graph_id,",
                                                                    "children": [
                                                                        {
                                                                            "type": "dotted_name",
                                                                            "start_token": 279,
                                                                            "end_token": 284,
                                                                            "label": "WsMessage(\n                method=Methods",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "start_token": 285,
                                                                            "end_token": 292,
                                                                            "label": ".EXECUTION_EVENT,\n                channel=graph_id,",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}