{
    "type": "module",
    "start_token": 0,
    "end_token": 403,
    "label": "import functools\nimport logging\nimport os\nimport time\nfrom typing import Callable, ParamSpec, Tuple, TypeVar\n\nfrom pydantic import BaseModel\n\n\nclass TimingInfo(BaseModel):\n    cpu_time: float\n    wall_time: float\n\n\ndef _start_measurement() -> Tuple[float, float]:\n    return time.time(), os.times()[0] + os.times()[1]\n\n\ndef _end_measurement(\n    start_wall_time: float, start_cpu_time: float\n) -> Tuple[float, float]:\n    end_wall_time = time.time()\n    end_cpu_time = os.times()[0] + os.times()[1]\n    return end_wall_time - start_wall_time, end_cpu_time - start_cpu_time\n\n\nP = ParamSpec(\"P\")\nT = TypeVar(\"T\")\n\nlogger = logging.getLogger(__name__)\n\n\ndef time_measured(func: Callable[P, T]) -> Callable[P, Tuple[TimingInfo, T]]:\n    \"\"\"\n    Decorator to measure the time taken by a function to execute.\n    \"\"\"\n\n    @functools.wraps(func)\n    def wrapper(*args: P.args, **kwargs: P.kwargs) -> Tuple[TimingInfo, T]:\n        start_wall_time, start_cpu_time = _start_measurement()\n        try:\n            result = func(*args, **kwargs)\n        finally:\n            wall_duration, cpu_duration = _end_measurement(\n                start_wall_time, start_cpu_time\n            )\n            timing_info = TimingInfo(cpu_time=cpu_duration, wall_time=wall_duration)\n        return timing_info, result\n\n    return wrapper\n\n\ndef error_logged(func: Callable[P, T]) -> Callable[P, T | None]:\n    \"\"\"\n    Decorator to suppress and log any exceptions raised by a function.\n    \"\"\"\n\n    @functools.wraps(func)\n    def wrapper(*args: P.args, **kwargs: P.kwargs) -> T | None:\n        try:\n            return func(*args, **kwargs)\n        except Exception as e:\n            logger.exception(\n                f\"Error when calling function {func.__name__} with arguments {args} {kwargs}: {e}\"\n            )\n\n    return wrapper\n",
    "children": [
        {
            "type": "block",
            "start_token": 0,
            "end_token": 403,
            "label": "import functools\nimport logging\nimport os\nimport time\nfrom typing import Callable, ParamSpec, Tuple, TypeVar\n\nfrom pydantic import BaseModel\n\n\nclass TimingInfo(BaseModel):\n    cpu_time: float\n    wall_time: float\n\n\ndef _start_measurement() -> Tuple[float, float]:\n    return time.time(), os.times()[0] + os.times()[1]\n\n\ndef _end_measurement(\n    start_wall_time: float, start_cpu_time: float\n) -> Tuple[float, float]:\n    end_wall_time = time.time()\n    end_cpu_time = os.times()[0] + os.times()[1]\n    return end_wall_time - start_wall_time, end_cpu_time - start_cpu_time\n\n\nP = ParamSpec(\"P\")\nT = TypeVar(\"T\")\n\nlogger = logging.getLogger(__name__)\n\n\ndef time_measured(func: Callable[P, T]) -> Callable[P, Tuple[TimingInfo, T]]:\n    \"\"\"\n    Decorator to measure the time taken by a function to execute.\n    \"\"\"\n\n    @functools.wraps(func)\n    def wrapper(*args: P.args, **kwargs: P.kwargs) -> Tuple[TimingInfo, T]:\n        start_wall_time, start_cpu_time = _start_measurement()\n        try:\n            result = func(*args, **kwargs)\n        finally:\n            wall_duration, cpu_duration = _end_measurement(\n                start_wall_time, start_cpu_time\n            )\n            timing_info = TimingInfo(cpu_time=cpu_duration, wall_time=wall_duration)\n        return timing_info, result\n\n    return wrapper\n\n\ndef error_logged(func: Callable[P, T]) -> Callable[P, T | None]:\n    \"\"\"\n    Decorator to suppress and log any exceptions raised by a function.\n    \"\"\"\n\n    @functools.wraps(func)\n    def wrapper(*args: P.args, **kwargs: P.kwargs) -> T | None:\n        try:\n            return func(*args, **kwargs)\n        except Exception as e:\n            logger.exception(\n                f\"Error when calling function {func.__name__} with arguments {args} {kwargs}: {e}\"\n            )\n\n    return wrapper\n",
            "children": [
                {
                    "type": "import_statement",
                    "start_token": 0,
                    "end_token": 1,
                    "label": "import functools",
                    "children": []
                },
                {
                    "type": "import_statement",
                    "start_token": 3,
                    "end_token": 4,
                    "label": "import logging",
                    "children": []
                },
                {
                    "type": "import_statement",
                    "start_token": 6,
                    "end_token": 7,
                    "label": "import os",
                    "children": []
                },
                {
                    "type": "import_statement",
                    "start_token": 9,
                    "end_token": 10,
                    "label": "import time",
                    "children": []
                },
                {
                    "type": "import_from_statement",
                    "start_token": 12,
                    "end_token": 21,
                    "label": "from typing import Callable, ParamSpec, Tuple, TypeVar",
                    "children": []
                },
                {
                    "type": "import_from_statement",
                    "start_token": 24,
                    "end_token": 27,
                    "label": "from pydantic import BaseModel",
                    "children": []
                },
                {
                    "type": "class_definition",
                    "start_token": 31,
                    "end_token": 45,
                    "label": "class TimingInfo(BaseModel):\n    cpu_time: float\n    wall_time: float\n",
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 32,
                            "end_token": 32,
                            "label": "TimingInfo",
                            "children": []
                        },
                        {
                            "type": "class_body",
                            "start_token": 36,
                            "end_token": 45,
                            "label": ":\n    cpu_time: float\n    wall_time: float\n",
                            "children": [
                                {
                                    "type": "assignment",
                                    "start_token": 38,
                                    "end_token": 40,
                                    "label": "cpu_time: float",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 38,
                                            "end_token": 38,
                                            "label": "cpu_time",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "start_token": 40,
                                            "end_token": 40,
                                            "label": "float",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "assignment",
                                    "start_token": 42,
                                    "end_token": 44,
                                    "label": "wall_time: float",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 42,
                                            "end_token": 42,
                                            "label": "wall_time",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "start_token": 44,
                                            "end_token": 44,
                                            "label": "float",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "start_token": 48,
                    "end_token": 86,
                    "label": "def _start_measurement() -> Tuple[float, float]:\n    return time.time(), os.times()[0] + os.times()[1]\n",
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 49,
                            "end_token": 49,
                            "label": "_start_measurement",
                            "children": []
                        },
                        {
                            "type": "parameters",
                            "start_token": 50,
                            "end_token": 51,
                            "label": "()",
                            "children": []
                        },
                        {
                            "type": "return_statement",
                            "start_token": 62,
                            "end_token": 86,
                            "label": "return time.time(), os.times()[0] + os.times()[1]\n",
                            "children": [
                                {
                                    "type": "call",
                                    "start_token": 63,
                                    "end_token": 67,
                                    "label": "time.time()",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 63,
                                            "end_token": 65,
                                            "label": "time.time",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "binary_operator",
                                    "start_token": 69,
                                    "end_token": 77,
                                    "label": "os.times()[0] +",
                                    "children": [
                                        {
                                            "type": "call",
                                            "start_token": 69,
                                            "end_token": 73,
                                            "label": "os.times()",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 69,
                                                    "end_token": 71,
                                                    "label": "os.times",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "subscript",
                                            "start_token": 74,
                                            "end_token": 76,
                                            "label": "[0]",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "start_token": 89,
                    "end_token": 148,
                    "label": "def _end_measurement(\n    start_wall_time: float, start_cpu_time: float\n) -> Tuple[float, float]:\n    end_wall_time = time.time()\n    end_cpu_time = os.times()[0] + os.times()[1]\n    return end_wall_time - start_wall_time, end_cpu_time - start_cpu_time\n",
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 90,
                            "end_token": 90,
                            "label": "_end_measurement",
                            "children": []
                        },
                        {
                            "type": "parameters",
                            "start_token": 91,
                            "end_token": 101,
                            "label": "(\n    start_wall_time: float, start_cpu_time: float\n)",
                            "children": []
                        },
                        {
                            "type": "block",
                            "start_token": 111,
                            "end_token": 148,
                            "label": "\n    end_wall_time = time.time()\n    end_cpu_time = os.times()[0] + os.times()[1]\n    return end_wall_time - start_wall_time, end_cpu_time - start_cpu_time\n",
                            "children": [
                                {
                                    "type": "assignment",
                                    "start_token": 112,
                                    "end_token": 118,
                                    "label": "end_wall_time = time.time()",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 112,
                                            "end_token": 112,
                                            "label": "end_wall_time",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "start_token": 114,
                                            "end_token": 118,
                                            "label": "time.time()",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 114,
                                                    "end_token": 116,
                                                    "label": "time.time",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "assignment",
                                    "start_token": 120,
                                    "end_token": 136,
                                    "label": "end_cpu_time = os.times()[0] + os.times()[",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 120,
                                            "end_token": 120,
                                            "label": "end_cpu_time",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "start_token": 122,
                                            "end_token": 131,
                                            "label": "os.times()[0] + os",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "start_token": 122,
                                                    "end_token": 126,
                                                    "label": "os.times()",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 122,
                                                            "end_token": 124,
                                                            "label": "os.times",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "subscript",
                                                    "start_token": 127,
                                                    "end_token": 129,
                                                    "label": "[0]",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "return_statement",
                                    "start_token": 140,
                                    "end_token": 147,
                                    "label": "return end_wall_time - start_wall_time, end_cpu_time - start_cpu_time",
                                    "children": [
                                        {
                                            "type": "binary_operator",
                                            "start_token": 140,
                                            "end_token": 143,
                                            "label": "return end_wall_time - start_wall_time",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "start_token": 145,
                                            "end_token": 147,
                                            "label": "end_cpu_time - start_cpu_time",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "assignment",
                    "start_token": 151,
                    "end_token": 156,
                    "label": "P = ParamSpec(\"P\")",
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 151,
                            "end_token": 151,
                            "label": "P",
                            "children": []
                        },
                        {
                            "type": "call",
                            "start_token": 153,
                            "end_token": 156,
                            "label": "ParamSpec(\"P\")",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 153,
                                    "end_token": 155,
                                    "label": "ParamSpec(\"P\"",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "assignment",
                    "start_token": 158,
                    "end_token": 163,
                    "label": "T = TypeVar(\"T\")",
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 158,
                            "end_token": 158,
                            "label": "T",
                            "children": []
                        },
                        {
                            "type": "call",
                            "start_token": 160,
                            "end_token": 163,
                            "label": "TypeVar(\"T\")",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 160,
                                    "end_token": 162,
                                    "label": "TypeVar(\"T\"",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "assignment",
                    "start_token": 166,
                    "end_token": 173,
                    "label": "logger = logging.getLogger(__name__)",
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 166,
                            "end_token": 166,
                            "label": "logger",
                            "children": []
                        },
                        {
                            "type": "call",
                            "start_token": 168,
                            "end_token": 173,
                            "label": "logging.getLogger(__name__)",
                            "children": [
                                {
                                    "type": "attribute",
                                    "start_token": 168,
                                    "end_token": 170,
                                    "label": "logging.getLogger",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 168,
                                            "end_token": 168,
                                            "label": "logging",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "start_token": 170,
                                            "end_token": 170,
                                            "label": "getLogger",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "decorated_definition",
                    "start_token": 177,
                    "end_token": 305,
                    "label": "def time_measured(func: Callable[P, T]) -> Callable[P, Tuple[TimingInfo, T]]:\n    \"\"\"\n    Decorator to measure the time taken by a function to execute.\n    \"\"\"\n\n    @functools.wraps(func)\n    def wrapper(*args: P.args, **kwargs: P.kwargs) -> Tuple[TimingInfo, T]:\n        start_wall_time, start_cpu_time = _start_measurement()\n        try:\n            result = func(*args, **kwargs)\n        finally:\n            wall_duration, cpu_duration = _end_measurement(\n                start_wall_time, start_cpu_time\n            )\n            timing_info = TimingInfo(cpu_time=cpu_duration, wall_time=wall_duration)\n        return timing_info, result\n\n    return wrapper\n",
                    "children": [
                        {
                            "type": "decorator",
                            "start_token": 209,
                            "end_token": 215,
                            "label": "@functools.wraps(func)",
                            "children": [
                                {
                                    "type": "dotted_name",
                                    "start_token": 210,
                                    "end_token": 212,
                                    "label": "functools.wraps",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "start_token": 177,
                            "end_token": 305,
                            "label": "def time_measured(func: Callable[P, T]) -> Callable[P, Tuple[TimingInfo, T]]:\n    \"\"\"\n    Decorator to measure the time taken by a function to execute.\n    \"\"\"\n\n    @functools.wraps(func)\n    def wrapper(*args: P.args, **kwargs: P.kwargs) -> Tuple[TimingInfo, T]:\n        start_wall_time, start_cpu_time = _start_measurement()\n        try:\n            result = func(*args, **kwargs)\n        finally:\n            wall_duration, cpu_duration = _end_measurement(\n                start_wall_time, start_cpu_time\n            )\n            timing_info = TimingInfo(cpu_time=cpu_duration, wall_time=wall_duration)\n        return timing_info, result\n\n    return wrapper\n",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 178,
                                    "end_token": 178,
                                    "label": "time_measured",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "start_token": 179,
                                    "end_token": 188,
                                    "label": "(func: Callable[P, T])",
                                    "children": []
                                },
                                {
                                    "type": "block",
                                    "start_token": 217,
                                    "end_token": 305,
                                    "label": "def wrapper(*args: P.args, **kwargs: P.kwargs) -> Tuple[TimingInfo, T]:\n        start_wall_time, start_cpu_time = _start_measurement()\n        try:\n            result = func(*args, **kwargs)\n        finally:\n            wall_duration, cpu_duration = _end_measurement(\n                start_wall_time, start_cpu_time\n            )\n            timing_info = TimingInfo(cpu_time=cpu_duration, wall_time=wall_duration)\n        return timing_info, result\n\n    return wrapper\n",
                                    "children": [
                                        {
                                            "type": "try_statement",
                                            "start_token": 253,
                                            "end_token": 300,
                                            "label": "try:\n            result = func(*args, **kwargs)\n        finally:\n            wall_duration, cpu_duration = _end_measurement(\n                start_wall_time, start_cpu_time\n            )\n            timing_info = TimingInfo(cpu_time=cpu_duration, wall_time=wall_duration)\n        return timing_info, result",
                                            "children": [
                                                {
                                                    "type": "block",
                                                    "start_token": 254,
                                                    "end_token": 300,
                                                    "label": ":\n            result = func(*args, **kwargs)\n        finally:\n            wall_duration, cpu_duration = _end_measurement(\n                start_wall_time, start_cpu_time\n            )\n            timing_info = TimingInfo(cpu_time=cpu_duration, wall_time=wall_duration)\n        return timing_info, result",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "start_token": 256,
                                                            "end_token": 266,
                                                            "label": "result = func(*args, **kwargs)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 256,
                                                                    "end_token": 256,
                                                                    "label": "result",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "start_token": 258,
                                                                    "end_token": 266,
                                                                    "label": "func(*args, **kwargs)",
                                                                    "children": [
                                                                        {
                                                                            "type": "dotted_name",
                                                                            "start_token": 258,
                                                                            "end_token": 260,
                                                                            "label": "func(*",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "finally_clause",
                                                            "start_token": 268,
                                                            "end_token": 300,
                                                            "label": "finally:\n            wall_duration, cpu_duration = _end_measurement(\n                start_wall_time, start_cpu_time\n            )\n            timing_info = TimingInfo(cpu_time=cpu_duration, wall_time=wall_duration)\n        return timing_info, result",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "return_statement",
                                            "start_token": 303,
                                            "end_token": 305,
                                            "label": "return wrapper\n",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 304,
                                                    "end_token": 304,
                                                    "label": "wrapper",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "decorated_definition",
                    "start_token": 308,
                    "end_token": 402,
                    "label": "def error_logged(func: Callable[P, T]) -> Callable[P, T | None]:\n    \"\"\"\n    Decorator to suppress and log any exceptions raised by a function.\n    \"\"\"\n\n    @functools.wraps(func)\n    def wrapper(*args: P.args, **kwargs: P.kwargs) -> T | None:\n        try:\n            return func(*args, **kwargs)\n        except Exception as e:\n            logger.exception(\n                f\"Error when calling function {func.__name__} with arguments {args} {kwargs}: {e}\"\n            )\n\n    return wrapper",
                    "children": [
                        {
                            "type": "decorator",
                            "start_token": 337,
                            "end_token": 343,
                            "label": "@functools.wraps(func)",
                            "children": [
                                {
                                    "type": "dotted_name",
                                    "start_token": 338,
                                    "end_token": 340,
                                    "label": "functools.wraps",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "start_token": 308,
                            "end_token": 402,
                            "label": "def error_logged(func: Callable[P, T]) -> Callable[P, T | None]:\n    \"\"\"\n    Decorator to suppress and log any exceptions raised by a function.\n    \"\"\"\n\n    @functools.wraps(func)\n    def wrapper(*args: P.args, **kwargs: P.kwargs) -> T | None:\n        try:\n            return func(*args, **kwargs)\n        except Exception as e:\n            logger.exception(\n                f\"Error when calling function {func.__name__} with arguments {args} {kwargs}: {e}\"\n            )\n\n    return wrapper",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 309,
                                    "end_token": 309,
                                    "label": "error_logged",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "start_token": 310,
                                    "end_token": 319,
                                    "label": "(func: Callable[P, T])",
                                    "children": []
                                },
                                {
                                    "type": "block",
                                    "start_token": 345,
                                    "end_token": 402,
                                    "label": "def wrapper(*args: P.args, **kwargs: P.kwargs) -> T | None:\n        try:\n            return func(*args, **kwargs)\n        except Exception as e:\n            logger.exception(\n                f\"Error when calling function {func.__name__} with arguments {args} {kwargs}: {e}\"\n            )\n\n    return wrapper",
                                    "children": [
                                        {
                                            "type": "try_statement",
                                            "start_token": 370,
                                            "end_token": 401,
                                            "label": "try:\n            return func(*args, **kwargs)\n        except Exception as e:\n            logger.exception(\n                f\"Error when calling function {func.__name__} with arguments {args} {kwargs}: {e}\"\n            )\n\n    return",
                                            "children": [
                                                {
                                                    "type": "block",
                                                    "start_token": 371,
                                                    "end_token": 401,
                                                    "label": ":\n            return func(*args, **kwargs)\n        except Exception as e:\n            logger.exception(\n                f\"Error when calling function {func.__name__} with arguments {args} {kwargs}: {e}\"\n            )\n\n    return",
                                                    "children": [
                                                        {
                                                            "type": "return_statement",
                                                            "start_token": 373,
                                                            "end_token": 382,
                                                            "label": "return func(*args, **kwargs)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 374,
                                                                    "end_token": 374,
                                                                    "label": "func",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "start_token": 375,
                                                                    "end_token": 381,
                                                                    "label": "(*args, **kwargs",
                                                                    "children": [
                                                                        {
                                                                            "type": "dotted_name",
                                                                            "start_token": 375,
                                                                            "end_token": 377,
                                                                            "label": "(*args",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "except_clause",
                                            "start_token": 384,
                                            "end_token": 398,
                                            "label": "except Exception as e:\n            logger.exception(\n                f\"Error when calling function {func.__name__} with arguments {args} {kwargs}: {e}\"\n            )",
                                            "children": [
                                                {
                                                    "type": "expression_list",
                                                    "start_token": 384,
                                                    "end_token": 386,
                                                    "label": "except Exception as",
                                                    "children": []
                                                },
                                                {
                                                    "type": "block",
                                                    "start_token": 369,
                                                    "end_token": 399,
                                                    "label": "\n        try:\n            return func(*args, **kwargs)\n        except Exception as e:\n            logger.exception(\n                f\"Error when calling function {func.__name__} with arguments {args} {kwargs}: {e}\"\n            )\n",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "start_token": 390,
                                                            "end_token": 393,
                                                            "label": "logger.exception(",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "start_token": 391,
                                                                    "end_token": 393,
                                                                    "label": ".exception(",
                                                                    "children": [
                                                                        {
                                                                            "type": "dotted_name",
                                                                            "start_token": 391,
                                                                            "end_token": 391,
                                                                            "label": ".",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "return_statement",
                                            "start_token": 401,
                                            "end_token": 402,
                                            "label": "return wrapper",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}