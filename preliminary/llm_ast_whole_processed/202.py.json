{
    "type": "module",
    "start_token": 0,
    "end_token": 279,
    "label": "import fastapi\n\nfrom .config import Settings\nfrom .middleware import auth_middleware\nfrom .models import DEFAULT_USER_ID, User\n\n\ndef requires_user(payload: dict = fastapi.Depends(auth_middleware)) -> User:\n    return verify_user(payload, admin_only=False)\n\n\ndef requires_admin_user(\n    payload: dict = fastapi.Depends(auth_middleware),\n) -> User:\n    return verify_user(payload, admin_only=True)\n\n\ndef verify_user(payload: dict | None, admin_only: bool) -> User:\n    if not payload:\n        if Settings.ENABLE_AUTH:\n            raise fastapi.HTTPException(\n                status_code=401, detail=\"Authorization header is missing\"\n            )\n        # This handles the case when authentication is disabled\n        payload = {\"sub\": DEFAULT_USER_ID, \"role\": \"admin\"}\n\n    user_id = payload.get(\"sub\")\n\n    if not user_id:\n        raise fastapi.HTTPException(\n            status_code=401, detail=\"User ID not found in token\"\n        )\n\n    if admin_only and payload[\"role\"] != \"admin\":\n        raise fastapi.HTTPException(status_code=403, detail=\"Admin access required\")\n\n    return User.from_payload(payload)\n\n\ndef get_user_id(payload: dict = fastapi.Depends(auth_middleware)) -> str:\n    user_id = payload.get(\"sub\")\n    if not user_id:\n        raise fastapi.HTTPException(\n            status_code=401, detail=\"User ID not found in token\"\n        )\n    return user_id\n",
    "children": [
        {
            "type": "import_statement",
            "start_token": 0,
            "end_token": 1,
            "label": "import fastapi",
            "children": []
        },
        {
            "type": "import_from_statement",
            "start_token": 4,
            "end_token": 8,
            "label": "from .config import Settings",
            "children": []
        },
        {
            "type": "import_from_statement",
            "start_token": 10,
            "end_token": 14,
            "label": "from .middleware import auth_middleware",
            "children": []
        },
        {
            "type": "import_from_statement",
            "start_token": 16,
            "end_token": 22,
            "label": "from .models import DEFAULT_USER_ID, User",
            "children": []
        },
        {
            "type": "block",
            "start_token": 26,
            "end_token": 278,
            "label": "def requires_user(payload: dict = fastapi.Depends(auth_middleware)) -> User:\n    return verify_user(payload, admin_only=False)\n\n\ndef requires_admin_user(\n    payload: dict = fastapi.Depends(auth_middleware),\n) -> User:\n    return verify_user(payload, admin_only=True)\n\n\ndef verify_user(payload: dict | None, admin_only: bool) -> User:\n    if not payload:\n        if Settings.ENABLE_AUTH:\n            raise fastapi.HTTPException(\n                status_code=401, detail=\"Authorization header is missing\"\n            )\n        # This handles the case when authentication is disabled\n        payload = {\"sub\": DEFAULT_USER_ID, \"role\": \"admin\"}\n\n    user_id = payload.get(\"sub\")\n\n    if not user_id:\n        raise fastapi.HTTPException(\n            status_code=401, detail=\"User ID not found in token\"\n        )\n\n    if admin_only and payload[\"role\"] != \"admin\":\n        raise fastapi.HTTPException(status_code=403, detail=\"Admin access required\")\n\n    return User.from_payload(payload)\n\n\ndef get_user_id(payload: dict = fastapi.Depends(auth_middleware)) -> str:\n    user_id = payload.get(\"sub\")\n    if not user_id:\n        raise fastapi.HTTPException(\n            status_code=401, detail=\"User ID not found in token\"\n        )\n    return user_id",
            "children": [
                {
                    "type": "function_definition",
                    "start_token": 26,
                    "end_token": 54,
                    "label": "def requires_user(payload: dict = fastapi.Depends(auth_middleware)) -> User:\n    return verify_user(payload, admin_only=False)\n",
                    "children": [
                        {
                            "type": "parameters",
                            "start_token": 28,
                            "end_token": 39,
                            "label": "(payload: dict = fastapi.Depends(auth_middleware))",
                            "children": [
                                {
                                    "type": "typed_default_parameter",
                                    "start_token": 29,
                                    "end_token": 38,
                                    "label": "payload: dict = fastapi.Depends(auth_middleware)",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "start_token": 45,
                            "end_token": 53,
                            "label": "return verify_user(payload, admin_only=False)",
                            "children": [
                                {
                                    "type": "call",
                                    "start_token": 46,
                                    "end_token": 53,
                                    "label": "verify_user(payload, admin_only=False)",
                                    "children": [
                                        {
                                            "type": "argument_list",
                                            "start_token": 47,
                                            "end_token": 53,
                                            "label": "(payload, admin_only=False)",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "start_token": 57,
                    "end_token": 87,
                    "label": "def requires_admin_user(\n    payload: dict = fastapi.Depends(auth_middleware),\n) -> User:\n    return verify_user(payload, admin_only=True)",
                    "children": [
                        {
                            "type": "parameters",
                            "start_token": 59,
                            "end_token": 73,
                            "label": "(\n    payload: dict = fastapi.Depends(auth_middleware),\n)",
                            "children": [
                                {
                                    "type": "typed_default_parameter",
                                    "start_token": 61,
                                    "end_token": 70,
                                    "label": "payload: dict = fastapi.Depends(auth_middleware)",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "start_token": 79,
                            "end_token": 87,
                            "label": "return verify_user(payload, admin_only=True)",
                            "children": [
                                {
                                    "type": "call",
                                    "start_token": 80,
                                    "end_token": 87,
                                    "label": "verify_user(payload, admin_only=True)",
                                    "children": [
                                        {
                                            "type": "argument_list",
                                            "start_token": 81,
                                            "end_token": 87,
                                            "label": "(payload, admin_only=True)",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "start_token": 91,
                    "end_token": 224,
                    "label": "def verify_user(payload: dict | None, admin_only: bool) -> User:\n    if not payload:\n        if Settings.ENABLE_AUTH:\n            raise fastapi.HTTPException(\n                status_code=401, detail=\"Authorization header is missing\"\n            )\n        # This handles the case when authentication is disabled\n        payload = {\"sub\": DEFAULT_USER_ID, \"role\": \"admin\"}\n\n    user_id = payload.get(\"sub\")\n\n    if not user_id:\n        raise fastapi.HTTPException(\n            status_code=401, detail=\"User ID not found in token\"\n        )\n\n    if admin_only and payload[\"role\"] != \"admin\":\n        raise fastapi.HTTPException(status_code=403, detail=\"Admin access required\")\n\n    return User.from_payload(payload)",
                    "children": [
                        {
                            "type": "parameters",
                            "start_token": 93,
                            "end_token": 103,
                            "label": "(payload: dict | None, admin_only: bool)",
                            "children": [
                                {
                                    "type": "typed_parameter",
                                    "start_token": 95,
                                    "end_token": 98,
                                    "label": ": dict | None",
                                    "children": []
                                },
                                {
                                    "type": "typed_parameter",
                                    "start_token": 101,
                                    "end_token": 102,
                                    "label": ": bool",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "block",
                            "start_token": 109,
                            "end_token": 224,
                            "label": "if not payload:\n        if Settings.ENABLE_AUTH:\n            raise fastapi.HTTPException(\n                status_code=401, detail=\"Authorization header is missing\"\n            )\n        # This handles the case when authentication is disabled\n        payload = {\"sub\": DEFAULT_USER_ID, \"role\": \"admin\"}\n\n    user_id = payload.get(\"sub\")\n\n    if not user_id:\n        raise fastapi.HTTPException(\n            status_code=401, detail=\"User ID not found in token\"\n        )\n\n    if admin_only and payload[\"role\"] != \"admin\":\n        raise fastapi.HTTPException(status_code=403, detail=\"Admin access required\")\n\n    return User.from_payload(payload)",
                            "children": [
                                {
                                    "type": "if_statement",
                                    "start_token": 109,
                                    "end_token": 133,
                                    "label": "if not payload:\n        if Settings.ENABLE_AUTH:\n            raise fastapi.HTTPException(\n                status_code=401, detail=\"Authorization header is missing\"\n",
                                    "children": [
                                        {
                                            "type": "if_clause",
                                            "start_token": 109,
                                            "end_token": 112,
                                            "label": "if not payload:",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "if_statement",
                                    "start_token": 114,
                                    "end_token": 134,
                                    "label": "if Settings.ENABLE_AUTH:\n            raise fastapi.HTTPException(\n                status_code=401, detail=\"Authorization header is missing\"\n            )",
                                    "children": [
                                        {
                                            "type": "if_clause",
                                            "start_token": 114,
                                            "end_token": 118,
                                            "label": "if Settings.ENABLE_AUTH:",
                                            "children": []
                                        },
                                        {
                                            "type": "block",
                                            "start_token": 120,
                                            "end_token": 134,
                                            "label": "raise fastapi.HTTPException(\n                status_code=401, detail=\"Authorization header is missing\"\n            )",
                                            "children": [
                                                {
                                                    "type": "raise_statement",
                                                    "start_token": 120,
                                                    "end_token": 134,
                                                    "label": "raise fastapi.HTTPException(\n                status_code=401, detail=\"Authorization header is missing\"\n            )",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "assignment",
                                    "start_token": 146,
                                    "end_token": 156,
                                    "label": "payload = {\"sub\": DEFAULT_USER_ID, \"role\": \"admin\"}",
                                    "children": [
                                        {
                                            "type": "dictionary",
                                            "start_token": 148,
                                            "end_token": 156,
                                            "label": "{\"sub\": DEFAULT_USER_ID, \"role\": \"admin\"}",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "assignment",
                                    "start_token": 159,
                                    "end_token": 166,
                                    "label": "user_id = payload.get(\"sub\")",
                                    "children": [
                                        {
                                            "type": "call",
                                            "start_token": 163,
                                            "end_token": 166,
                                            "label": "get(\"sub\")",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "if_statement",
                                    "start_token": 169,
                                    "end_token": 188,
                                    "label": "if not user_id:\n        raise fastapi.HTTPException(\n            status_code=401, detail=\"User ID not found in token\"\n        )",
                                    "children": [
                                        {
                                            "type": "if_clause",
                                            "start_token": 169,
                                            "end_token": 172,
                                            "label": "if not user_id:",
                                            "children": []
                                        },
                                        {
                                            "type": "raise_statement",
                                            "start_token": 174,
                                            "end_token": 188,
                                            "label": "raise fastapi.HTTPException(\n            status_code=401, detail=\"User ID not found in token\"\n        )",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "if_statement",
                                    "start_token": 191,
                                    "end_token": 215,
                                    "label": "if admin_only and payload[\"role\"] != \"admin\":\n        raise fastapi.HTTPException(status_code=403, detail=\"Admin access required\")",
                                    "children": [
                                        {
                                            "type": "if_clause",
                                            "start_token": 191,
                                            "end_token": 201,
                                            "label": "if admin_only and payload[\"role\"] != \"admin\":",
                                            "children": []
                                        },
                                        {
                                            "type": "raise_statement",
                                            "start_token": 203,
                                            "end_token": 215,
                                            "label": "raise fastapi.HTTPException(status_code=403, detail=\"Admin access required\")",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "return_statement",
                                    "start_token": 218,
                                    "end_token": 224,
                                    "label": "return User.from_payload(payload)",
                                    "children": [
                                        {
                                            "type": "call",
                                            "start_token": 219,
                                            "end_token": 224,
                                            "label": "User.from_payload(payload)",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "start_token": 228,
                    "end_token": 278,
                    "label": "def get_user_id(payload: dict = fastapi.Depends(auth_middleware)) -> str:\n    user_id = payload.get(\"sub\")\n    if not user_id:\n        raise fastapi.HTTPException(\n            status_code=401, detail=\"User ID not found in token\"\n        )\n    return user_id",
                    "children": [
                        {
                            "type": "parameters",
                            "start_token": 230,
                            "end_token": 241,
                            "label": "(payload: dict = fastapi.Depends(auth_middleware))",
                            "children": [
                                {
                                    "type": "typed_default_parameter",
                                    "start_token": 232,
                                    "end_token": 240,
                                    "label": ": dict = fastapi.Depends(auth_middleware)",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "assignment",
                            "start_token": 247,
                            "end_token": 253,
                            "label": "user_id = payload.get(\"sub\"",
                            "children": [
                                {
                                    "type": "call",
                                    "start_token": 250,
                                    "end_token": 253,
                                    "label": ".get(\"sub\"",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "if_statement",
                            "start_token": 256,
                            "end_token": 275,
                            "label": "if not user_id:\n        raise fastapi.HTTPException(\n            status_code=401, detail=\"User ID not found in token\"\n        )",
                            "children": [
                                {
                                    "type": "if_clause",
                                    "start_token": 256,
                                    "end_token": 259,
                                    "label": "if not user_id:",
                                    "children": []
                                },
                                {
                                    "type": "raise_statement",
                                    "start_token": 261,
                                    "end_token": 275,
                                    "label": "raise fastapi.HTTPException(\n            status_code=401, detail=\"User ID not found in token\"\n        )",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "start_token": 277,
                            "end_token": 278,
                            "label": "return user_id",
                            "children": []
                        }
                    ]
                }
            ]
        }
    ]
}