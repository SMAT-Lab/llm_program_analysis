{
    "type": "module",
    "start_token": 0,
    "end_token": 402,
    "label": "from backend.blocks.jina._auth import (\n    JinaCredentials,\n    JinaCredentialsField,\n    JinaCredentialsInput,\n)\nfrom backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema\nfrom backend.data.model import SchemaField\nfrom backend.util.request import requests\n\n\nclass JinaChunkingBlock(Block):\n    class Input(BlockSchema):\n        texts: list = SchemaField(description=\"List of texts to chunk\")\n\n        credentials: JinaCredentialsInput = JinaCredentialsField()\n        max_chunk_length: int = SchemaField(\n            description=\"Maximum length of each chunk\", default=1000\n        )\n        return_tokens: bool = SchemaField(\n            description=\"Whether to return token information\", default=False\n        )\n\n    class Output(BlockSchema):\n        chunks: list = SchemaField(description=\"List of chunked texts\")\n        tokens: list = SchemaField(\n            description=\"List of token information for each chunk\", optional=True\n        )\n\n    def __init__(self):\n        super().__init__(\n            id=\"806fb15e-830f-4796-8692-557d300ff43c\",\n            description=\"Chunks texts using Jina AI's segmentation service\",\n            categories={BlockCategory.AI, BlockCategory.TEXT},\n            input_schema=JinaChunkingBlock.Input,\n            output_schema=JinaChunkingBlock.Output,\n        )\n\n    def run(\n        self, input_data: Input, *, credentials: JinaCredentials, **kwargs\n    ) -> BlockOutput:\n        url = \"https://segment.jina.ai/\"\n        headers = {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": f\"Bearer {credentials.api_key.get_secret_value()}\",\n        }\n\n        all_chunks = []\n        all_tokens = []\n\n        for text in input_data.texts:\n            data = {\n                \"content\": text,\n                \"return_tokens\": str(input_data.return_tokens).lower(),\n                \"return_chunks\": \"true\",\n                \"max_chunk_length\": str(input_data.max_chunk_length),\n            }\n\n            response = requests.post(url, headers=headers, json=data)\n            result = response.json()\n\n            all_chunks.extend(result.get(\"chunks\", []))\n            if input_data.return_tokens:\n                all_tokens.extend(result.get(\"tokens\", []))\n\n        yield \"chunks\", all_chunks\n        if input_data.return_tokens:\n            yield \"tokens\", all_tokens\n",
    "children": [
        {
            "type": "import_from_statement",
            "start_token": 0,
            "end_token": 20,
            "label": "from backend.blocks.jina._auth import (\n    JinaCredentials,\n    JinaCredentialsField,\n    JinaCredentialsInput,\n)",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 1,
                    "end_token": 7,
                    "label": "backend.blocks.jina._auth",
                    "children": []
                },
                {
                    "type": "import_statement",
                    "start_token": 8,
                    "end_token": 20,
                    "label": "import (\n    JinaCredentials,\n    JinaCredentialsField,\n    JinaCredentialsInput,\n)",
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 11,
                            "end_token": 11,
                            "label": "JinaCredentials",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "start_token": 14,
                            "end_token": 14,
                            "label": "JinaCredentialsField",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "start_token": 17,
                            "end_token": 17,
                            "label": "JinaCredentialsInput",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 22,
            "end_token": 35,
            "label": "from backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 23,
                    "end_token": 27,
                    "label": "backend.data.block",
                    "children": []
                },
                {
                    "type": "import_statement",
                    "start_token": 28,
                    "end_token": 35,
                    "label": "import Block, BlockCategory, BlockOutput, BlockSchema",
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 29,
                            "end_token": 29,
                            "label": "Block",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "start_token": 31,
                            "end_token": 31,
                            "label": "BlockCategory",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "start_token": 33,
                            "end_token": 33,
                            "label": "BlockOutput",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 37,
            "end_token": 45,
            "label": "from backend.data.model import SchemaField\n",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 38,
                    "end_token": 42,
                    "label": "backend.data.model",
                    "children": []
                },
                {
                    "type": "import_statement",
                    "start_token": 43,
                    "end_token": 45,
                    "label": "import SchemaField\n",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 46,
            "end_token": 54,
            "label": "from backend.util.request import requests\n",
            "children": [
                {
                    "type": "dotted_name",
                    "start_token": 47,
                    "end_token": 52,
                    "label": "backend.util.request import",
                    "children": []
                },
                {
                    "type": "import_statement",
                    "start_token": 53,
                    "end_token": 53,
                    "label": "requests",
                    "children": []
                }
            ]
        },
        {
            "type": "class_definition",
            "start_token": 57,
            "end_token": 63,
            "label": "class JinaChunkingBlock(Block):\n",
            "children": [
                {
                    "type": "identifier",
                    "start_token": 58,
                    "end_token": 58,
                    "label": "JinaChunkingBlock",
                    "children": []
                },
                {
                    "type": "parenthesized_expression",
                    "start_token": 59,
                    "end_token": 61,
                    "label": "(Block)",
                    "children": []
                }
            ]
        },
        {
            "type": "class_definition",
            "start_token": 64,
            "end_token": 90,
            "block": {
                "start_token": 70,
                "end_token": 90,
                "children": [
                    {
                        "type": "assignment",
                        "start_token": 71,
                        "end_token": 80,
                        "children": []
                    },
                    {
                        "type": "assignment",
                        "start_token": 83,
                        "end_token": 89,
                        "children": [
                            {
                                "type": "identifier",
                                "start_token": 84,
                                "end_token": 85
                            }
                        ]
                    }
                ]
            },
            "label": "class Input(BlockSchema):\n        texts: list = SchemaField(description=\"List of texts to chunk\")\n\n        credentials: JinaCredentialsInput = JinaCredentialsField()\n",
            "children": []
        },
        {
            "type": "class_definition",
            "start_token": 126,
            "end_token": 143,
            "block": {
                "start_token": 132,
                "end_token": 143,
                "children": [
                    {
                        "type": "assignment",
                        "start_token": 133,
                        "end_token": 142,
                        "children": []
                    }
                ]
            },
            "label": "class Output(BlockSchema):\n        chunks: list = SchemaField(description=\"List of chunked texts\")\n",
            "children": []
        },
        {
            "type": "function_definition",
            "start_token": 162,
            "end_token": 213,
            "block": {
                "start_token": 167,
                "end_token": 213,
                "children": [
                    {
                        "type": "call",
                        "start_token": 169,
                        "end_token": 213,
                        "children": [
                            {
                                "type": "argument_list",
                                "start_token": 170,
                                "end_token": 213,
                                "children": []
                            }
                        ]
                    }
                ]
            },
            "label": "def __init__(self):\n        super().__init__(\n            id=\"806fb15e-830f-4796-8692-557d300ff43c\",\n            description=\"Chunks texts using Jina AI's segmentation service\",\n            categories={BlockCategory.AI, BlockCategory.TEXT},\n            input_schema=JinaChunkingBlock.Input,\n            output_schema=JinaChunkingBlock.Output,\n        )",
            "children": []
        },
        {
            "type": "function_definition",
            "start_token": 216,
            "end_token": 401,
            "block": {
                "start_token": 240,
                "end_token": 401,
                "children": [
                    {
                        "type": "assignment",
                        "start_token": 242,
                        "end_token": 244,
                        "children": []
                    },
                    {
                        "type": "assignment",
                        "start_token": 246,
                        "end_token": 261,
                        "children": []
                    },
                    {
                        "type": "for_statement",
                        "start_token": 275,
                        "end_token": 384,
                        "block": {
                            "start_token": 276,
                            "end_token": 384,
                            "children": [
                                {
                                    "type": "assignment",
                                    "start_token": 283,
                                    "end_token": 321,
                                    "children": []
                                },
                                {
                                    "type": "call",
                                    "start_token": 324,
                                    "end_token": 339,
                                    "children": []
                                },
                                {
                                    "type": "assignment",
                                    "start_token": 341,
                                    "end_token": 347,
                                    "children": []
                                },
                                {
                                    "type": "call",
                                    "start_token": 350,
                                    "end_token": 362,
                                    "children": []
                                },
                                {
                                    "type": "if_statement",
                                    "start_token": 365,
                                    "end_token": 384,
                                    "block": {
                                        "start_token": 370,
                                        "end_token": 384,
                                        "children": []
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "type": "yield",
                        "start_token": 387,
                        "end_token": 401,
                        "children": []
                    }
                ]
            },
            "label": "def run(\n        self, input_data: Input, *, credentials: JinaCredentials, **kwargs\n    ) -> BlockOutput:\n        url = \"https://segment.jina.ai/\"\n        headers = {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": f\"Bearer {credentials.api_key.get_secret_value()}\",\n        }\n\n        all_chunks = []\n        all_tokens = []\n\n        for text in input_data.texts:\n            data = {\n                \"content\": text,\n                \"return_tokens\": str(input_data.return_tokens).lower(),\n                \"return_chunks\": \"true\",\n                \"max_chunk_length\": str(input_data.max_chunk_length),\n            }\n\n            response = requests.post(url, headers=headers, json=data)\n            result = response.json()\n\n            all_chunks.extend(result.get(\"chunks\", []))\n            if input_data.return_tokens:\n                all_tokens.extend(result.get(\"tokens\", []))\n\n        yield \"chunks\", all_chunks\n        if input_data.return_tokens:\n            yield \"tokens\", all_tokens",
            "children": []
        }
    ]
}