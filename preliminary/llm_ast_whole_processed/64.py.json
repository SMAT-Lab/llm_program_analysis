{
    "type": "module",
    "start_token": 0,
    "end_token": 191,
    "label": "\"\"\"\nIn this problem, we want to determine all possible subsequences\nof the given sequence. We use backtracking to solve this problem.\n\nTime complexity: O(2^n),\nwhere n denotes the length of the given sequence.\n\"\"\"\n\nfrom __future__ import annotations\n\nfrom typing import Any\n\n\ndef generate_all_subsequences(sequence: list[Any]) -> None:\n    create_state_space_tree(sequence, [], 0)\n\n\ndef create_state_space_tree(\n    sequence: list[Any], current_subsequence: list[Any], index: int\n) -> None:\n    \"\"\"\n    Creates a state space tree to iterate through each branch using DFS.\n    We know that each state has exactly two children.\n    It terminates when it reaches the end of the given sequence.\n\n    :param sequence: The input sequence for which subsequences are generated.\n    :param current_subsequence: The current subsequence being built.\n    :param index: The current index in the sequence.\n\n    Example:\n    >>> sequence = [3, 2, 1]\n    >>> current_subsequence = []\n    >>> create_state_space_tree(sequence, current_subsequence, 0)\n    []\n    [1]\n    [2]\n    [2, 1]\n    [3]\n    [3, 1]\n    [3, 2]\n    [3, 2, 1]\n\n    >>> sequence = [\"A\", \"B\"]\n    >>> current_subsequence = []\n    >>> create_state_space_tree(sequence, current_subsequence, 0)\n    []\n    ['B']\n    ['A']\n    ['A', 'B']\n\n    >>> sequence = []\n    >>> current_subsequence = []\n    >>> create_state_space_tree(sequence, current_subsequence, 0)\n    []\n\n    >>> sequence = [1, 2, 3, 4]\n    >>> current_subsequence = []\n    >>> create_state_space_tree(sequence, current_subsequence, 0)\n    []\n    [4]\n    [3]\n    [3, 4]\n    [2]\n    [2, 4]\n    [2, 3]\n    [2, 3, 4]\n    [1]\n    [1, 4]\n    [1, 3]\n    [1, 3, 4]\n    [1, 2]\n    [1, 2, 4]\n    [1, 2, 3]\n    [1, 2, 3, 4]\n    \"\"\"\n\n    if index == len(sequence):\n        print(current_subsequence)\n        return\n\n    create_state_space_tree(sequence, current_subsequence, index + 1)\n    current_subsequence.append(sequence[index])\n    create_state_space_tree(sequence, current_subsequence, index + 1)\n    current_subsequence.pop()\n\n\nif __name__ == \"__main__\":\n    seq: list[Any] = [1, 2, 3]\n    generate_all_subsequences(seq)\n\n    seq.clear()\n    seq.extend([\"A\", \"B\", \"C\"])\n    generate_all_subsequences(seq)\n",
    "children": [
        {
            "type": "future_import_statement",
            "start_token": 5,
            "end_token": 8,
            "label": "from __future__ import annotations",
            "children": [
                {
                    "type": "identifier",
                    "start_token": 5,
                    "end_token": 5,
                    "label": "from",
                    "children": []
                },
                {
                    "type": "import_prefix",
                    "start_token": 6,
                    "end_token": 6,
                    "label": "__future__",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 8,
                    "end_token": 8,
                    "label": "annotations",
                    "children": []
                }
            ]
        },
        {
            "type": "import_from_statement",
            "start_token": 11,
            "end_token": 14,
            "label": "from typing import Any",
            "children": [
                {
                    "type": "identifier",
                    "start_token": 11,
                    "end_token": 11,
                    "label": "from",
                    "children": []
                },
                {
                    "type": "import_prefix",
                    "start_token": 12,
                    "end_token": 12,
                    "label": "typing",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 14,
                    "end_token": 14,
                    "label": "Any",
                    "children": []
                }
            ]
        },
        {
            "type": "function_definition",
            "start_token": 18,
            "end_token": 42,
            "label": "def generate_all_subsequences(sequence: list[Any]) -> None:\n    create_state_space_tree(sequence, [], 0)\n",
            "children": [
                {
                    "type": "identifier",
                    "start_token": 18,
                    "end_token": 18,
                    "label": "def",
                    "children": []
                },
                {
                    "type": "parameters",
                    "start_token": 19,
                    "end_token": 30,
                    "label": "generate_all_subsequences(sequence: list[Any]) -> None",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "start_token": 21,
                            "end_token": 26,
                            "label": "sequence: list[Any]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 21,
                                    "end_token": 21,
                                    "label": "sequence",
                                    "children": []
                                },
                                {
                                    "type": "generic_type",
                                    "start_token": 23,
                                    "end_token": 25,
                                    "label": "list[Any",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 24,
                                            "end_token": 24,
                                            "label": "[",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "start_token": 31,
                    "end_token": 42,
                    "label": ":\n    create_state_space_tree(sequence, [], 0)\n",
                    "children": [
                        {
                            "type": "call",
                            "start_token": 33,
                            "end_token": 41,
                            "label": "create_state_space_tree(sequence, [], 0)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 33,
                                    "end_token": 33,
                                    "label": "create_state_space_tree",
                                    "children": []
                                },
                                {
                                    "type": "argument_list",
                                    "start_token": 34,
                                    "end_token": 41,
                                    "label": "(sequence, [], 0)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 35,
                                            "end_token": 35,
                                            "label": "sequence",
                                            "children": []
                                        },
                                        {
                                            "type": "list",
                                            "start_token": 37,
                                            "end_token": 38,
                                            "label": "[]",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "start_token": 40,
                                            "end_token": 40,
                                            "label": "0",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "start_token": 45,
            "end_token": 137,
            "label": "def create_state_space_tree(\n    sequence: list[Any], current_subsequence: list[Any], index: int\n) -> None:\n    \"\"\"\n    Creates a state space tree to iterate through each branch using DFS.\n    We know that each state has exactly two children.\n    It terminates when it reaches the end of the given sequence.\n\n    :param sequence: The input sequence for which subsequences are generated.\n    :param current_subsequence: The current subsequence being built.\n    :param index: The current index in the sequence.\n\n    Example:\n    >>> sequence = [3, 2, 1]\n    >>> current_subsequence = []\n    >>> create_state_space_tree(sequence, current_subsequence, 0)\n    []\n    [1]\n    [2]\n    [2, 1]\n    [3]\n    [3, 1]\n    [3, 2]\n    [3, 2, 1]\n\n    >>> sequence = [\"A\", \"B\"]\n    >>> current_subsequence = []\n    >>> create_state_space_tree(sequence, current_subsequence, 0)\n    []\n    ['B']\n    ['A']\n    ['A', 'B']\n\n    >>> sequence = []\n    >>> current_subsequence = []\n    >>> create_state_space_tree(sequence, current_subsequence, 0)\n    []\n\n    >>> sequence = [1, 2, 3, 4]\n    >>> current_subsequence = []\n    >>> create_state_space_tree(sequence, current_subsequence, 0)\n    []\n    [4]\n    [3]\n    [3, 4]\n    [2]\n    [2, 4]\n    [2, 3]\n    [2, 3, 4]\n    [1]\n    [1, 4]\n    [1, 3]\n    [1, 3, 4]\n    [1, 2]\n    [1, 2, 4]\n    [1, 2, 3]\n    [1, 2, 3, 4]\n    \"\"\"\n\n    if index == len(sequence):\n        print(current_subsequence)\n        return\n\n    create_state_space_tree(sequence, current_subsequence, index + 1)\n    current_subsequence.append(sequence[index])\n    create_state_space_tree(sequence, current_subsequence, index + 1)\n    current_subsequence.pop()\n",
            "children": [
                {
                    "type": "identifier",
                    "start_token": 45,
                    "end_token": 45,
                    "label": "def",
                    "children": []
                },
                {
                    "type": "parameters",
                    "start_token": 47,
                    "end_token": 66,
                    "label": "(\n    sequence: list[Any], current_subsequence: list[Any], index: int\n",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "start_token": 49,
                            "end_token": 54,
                            "label": "sequence: list[Any]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 49,
                                    "end_token": 49,
                                    "label": "sequence",
                                    "children": []
                                },
                                {
                                    "type": "generic_type",
                                    "start_token": 51,
                                    "end_token": 53,
                                    "label": "list[Any",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 52,
                                            "end_token": 52,
                                            "label": "[",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "start_token": 56,
                            "end_token": 61,
                            "label": "current_subsequence: list[Any]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 56,
                                    "end_token": 56,
                                    "label": "current_subsequence",
                                    "children": []
                                },
                                {
                                    "type": "generic_type",
                                    "start_token": 58,
                                    "end_token": 60,
                                    "label": "list[Any",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 59,
                                            "end_token": 59,
                                            "label": "[",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "start_token": 63,
                            "end_token": 65,
                            "label": "index: int",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 63,
                                    "end_token": 63,
                                    "label": "index",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "start_token": 65,
                                    "end_token": 65,
                                    "label": "int",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "start_token": 71,
                    "end_token": 137,
                    "label": ":\n    \"\"\"\n    Creates a state space tree to iterate through each branch using DFS.\n    We know that each state has exactly two children.\n    It terminates when it reaches the end of the given sequence.\n\n    :param sequence: The input sequence for which subsequences are generated.\n    :param current_subsequence: The current subsequence being built.\n    :param index: The current index in the sequence.\n\n    Example:\n    >>> sequence = [3, 2, 1]\n    >>> current_subsequence = []\n    >>> create_state_space_tree(sequence, current_subsequence, 0)\n    []\n    [1]\n    [2]\n    [2, 1]\n    [3]\n    [3, 1]\n    [3, 2]\n    [3, 2, 1]\n\n    >>> sequence = [\"A\", \"B\"]\n    >>> current_subsequence = []\n    >>> create_state_space_tree(sequence, current_subsequence, 0)\n    []\n    ['B']\n    ['A']\n    ['A', 'B']\n\n    >>> sequence = []\n    >>> current_subsequence = []\n    >>> create_state_space_tree(sequence, current_subsequence, 0)\n    []\n\n    >>> sequence = [1, 2, 3, 4]\n    >>> current_subsequence = []\n    >>> create_state_space_tree(sequence, current_subsequence, 0)\n    []\n    [4]\n    [3]\n    [3, 4]\n    [2]\n    [2, 4]\n    [2, 3]\n    [2, 3, 4]\n    [1]\n    [1, 4]\n    [1, 3]\n    [1, 3, 4]\n    [1, 2]\n    [1, 2, 4]\n    [1, 2, 3]\n    [1, 2, 3, 4]\n    \"\"\"\n\n    if index == len(sequence):\n        print(current_subsequence)\n        return\n\n    create_state_space_tree(sequence, current_subsequence, index + 1)\n    current_subsequence.append(sequence[index])\n    create_state_space_tree(sequence, current_subsequence, index + 1)\n    current_subsequence.pop()\n",
                    "children": [
                        {
                            "type": "if_statement",
                            "start_token": 82,
                            "end_token": 98,
                            "label": "if index == len(sequence):\n        print(current_subsequence)\n        return\n",
                            "children": [
                                {
                                    "type": "comparison_operator",
                                    "start_token": 83,
                                    "end_token": 89,
                                    "label": "index == len(sequence)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 83,
                                            "end_token": 83,
                                            "label": "index",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "start_token": 84,
                                            "end_token": 88,
                                            "label": "== len(sequence",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 86,
                                                    "end_token": 88,
                                                    "label": "len(sequence",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "start_token": 90,
                                    "end_token": 98,
                                    "label": ":\n        print(current_subsequence)\n        return\n",
                                    "children": [
                                        {
                                            "type": "call",
                                            "start_token": 92,
                                            "end_token": 95,
                                            "label": "print(current_subsequence)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 92,
                                                    "end_token": 92,
                                                    "label": "print",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "start_token": 93,
                                                    "end_token": 95,
                                                    "label": "(current_subsequence)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 94,
                                                            "end_token": 94,
                                                            "label": "current_subsequence",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "return_statement",
                                            "start_token": 97,
                                            "end_token": 97,
                                            "label": "return",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "call",
                            "start_token": 100,
                            "end_token": 109,
                            "label": "create_state_space_tree(sequence, current_subsequence, index + 1)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 100,
                                    "end_token": 100,
                                    "label": "create_state_space_tree",
                                    "children": []
                                },
                                {
                                    "type": "argument_list",
                                    "start_token": 101,
                                    "end_token": 109,
                                    "label": "(sequence, current_subsequence, index + 1)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 102,
                                            "end_token": 102,
                                            "label": "sequence",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "start_token": 104,
                                            "end_token": 104,
                                            "label": "current_subsequence",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "start_token": 106,
                                            "end_token": 108,
                                            "label": "index + 1",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 106,
                                                    "end_token": 106,
                                                    "label": "index",
                                                    "children": []
                                                },
                                                {
                                                    "type": "integer",
                                                    "start_token": 108,
                                                    "end_token": 108,
                                                    "label": "1",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "start_token": 111,
                            "end_token": 119,
                            "label": "current_subsequence.append(sequence[index])",
                            "children": [
                                {
                                    "type": "attribute",
                                    "start_token": 111,
                                    "end_token": 118,
                                    "label": "current_subsequence.append(sequence[index]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 111,
                                            "end_token": 111,
                                            "label": "current_subsequence",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "start_token": 113,
                                            "end_token": 117,
                                            "label": "append(sequence[index",
                                            "children": [
                                                {
                                                    "type": "subscript",
                                                    "start_token": 115,
                                                    "end_token": 117,
                                                    "label": "sequence[index",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 115,
                                                            "end_token": 115,
                                                            "label": "sequence",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 117,
                                                            "end_token": 117,
                                                            "label": "index",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "call",
                            "start_token": 121,
                            "end_token": 130,
                            "label": "create_state_space_tree(sequence, current_subsequence, index + 1)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 121,
                                    "end_token": 121,
                                    "label": "create_state_space_tree",
                                    "children": []
                                },
                                {
                                    "type": "argument_list",
                                    "start_token": 122,
                                    "end_token": 130,
                                    "label": "(sequence, current_subsequence, index + 1)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 123,
                                            "end_token": 123,
                                            "label": "sequence",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "start_token": 125,
                                            "end_token": 125,
                                            "label": "current_subsequence",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "start_token": 127,
                                            "end_token": 129,
                                            "label": "index + 1",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 127,
                                                    "end_token": 127,
                                                    "label": "index",
                                                    "children": []
                                                },
                                                {
                                                    "type": "integer",
                                                    "start_token": 129,
                                                    "end_token": 129,
                                                    "label": "1",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "start_token": 132,
                            "end_token": 135,
                            "label": "current_subsequence.pop(",
                            "children": [
                                {
                                    "type": "attribute",
                                    "start_token": 132,
                                    "end_token": 134,
                                    "label": "current_subsequence.pop",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 132,
                                            "end_token": 132,
                                            "label": "current_subsequence",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "start_token": 134,
                                            "end_token": 134,
                                            "label": "pop",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "call",
                                    "start_token": 135,
                                    "end_token": 135,
                                    "label": "(",
                                    "children": [
                                        {
                                            "type": "subscript",
                                            "start_token": 135,
                                            "end_token": 135,
                                            "label": "(",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "if_statement",
            "start_token": 140,
            "end_token": 191,
            "label": "if __name__ == \"__main__\":\n    seq: list[Any] = [1, 2, 3]\n    generate_all_subsequences(seq)\n\n    seq.clear()\n    seq.extend([\"A\", \"B\", \"C\"])\n    generate_all_subsequences(seq)\n",
            "children": [
                {
                    "type": "comparison_operator",
                    "start_token": 141,
                    "end_token": 144,
                    "label": "__name__ == \"__main__\"",
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 141,
                            "end_token": 141,
                            "label": "__name__",
                            "children": []
                        },
                        {
                            "type": "string",
                            "start_token": 144,
                            "end_token": 144,
                            "label": "\"__main__\"",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "start_token": 145,
                    "end_token": 191,
                    "label": ":\n    seq: list[Any] = [1, 2, 3]\n    generate_all_subsequences(seq)\n\n    seq.clear()\n    seq.extend([\"A\", \"B\", \"C\"])\n    generate_all_subsequences(seq)\n",
                    "children": [
                        {
                            "type": "assignment",
                            "start_token": 147,
                            "end_token": 160,
                            "label": "seq: list[Any] = [1, 2, 3]",
                            "children": [
                                {
                                    "type": "generic_type",
                                    "start_token": 149,
                                    "end_token": 151,
                                    "label": "list[Any",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 150,
                                            "end_token": 150,
                                            "label": "[",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "list",
                                    "start_token": 154,
                                    "end_token": 159,
                                    "label": "[1, 2, 3",
                                    "children": [
                                        {
                                            "type": "integer",
                                            "start_token": 155,
                                            "end_token": 155,
                                            "label": "1",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "start_token": 157,
                                            "end_token": 157,
                                            "label": "2",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "start_token": 159,
                                            "end_token": 159,
                                            "label": "3",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "start_token": 162,
                            "end_token": 165,
                            "label": "generate_all_subsequences(seq)",
                            "children": [
                                {
                                    "type": "call",
                                    "start_token": 162,
                                    "end_token": 165,
                                    "label": "generate_all_subsequences(seq)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 162,
                                            "end_token": 162,
                                            "label": "generate_all_subsequences",
                                            "children": []
                                        },
                                        {
                                            "type": "argument_list",
                                            "start_token": 163,
                                            "end_token": 165,
                                            "label": "(seq)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 164,
                                                    "end_token": 164,
                                                    "label": "seq",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "start_token": 168,
                            "end_token": 172,
                            "label": "seq.clear()",
                            "children": [
                                {
                                    "type": "attribute",
                                    "start_token": 168,
                                    "end_token": 169,
                                    "label": "seq.",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 168,
                                            "end_token": 168,
                                            "label": "seq",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "start_token": 169,
                                            "end_token": 169,
                                            "label": ".",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "call",
                                    "start_token": 170,
                                    "end_token": 172,
                                    "label": "clear()",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "start_token": 174,
                            "end_token": 184,
                            "label": "seq.extend([\"A\", \"B\", \"C\"]",
                            "children": [
                                {
                                    "type": "attribute",
                                    "start_token": 174,
                                    "end_token": 175,
                                    "label": "seq.",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 174,
                                            "end_token": 174,
                                            "label": "seq",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "start_token": 175,
                                            "end_token": 175,
                                            "label": ".",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "call",
                                    "start_token": 176,
                                    "end_token": 184,
                                    "label": "extend([\"A\", \"B\", \"C\"]",
                                    "children": [
                                        {
                                            "type": "list",
                                            "start_token": 178,
                                            "end_token": 183,
                                            "label": "[\"A\", \"B\", \"C\"",
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "start_token": 179,
                                                    "end_token": 179,
                                                    "label": "\"A\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string",
                                                    "start_token": 181,
                                                    "end_token": 181,
                                                    "label": "\"B\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string",
                                                    "start_token": 183,
                                                    "end_token": 183,
                                                    "label": "\"C\"",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "start_token": 187,
                            "end_token": 190,
                            "label": "generate_all_subsequences(seq)",
                            "children": [
                                {
                                    "type": "call",
                                    "start_token": 187,
                                    "end_token": 190,
                                    "label": "generate_all_subsequences(seq)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 187,
                                            "end_token": 187,
                                            "label": "generate_all_subsequences",
                                            "children": []
                                        },
                                        {
                                            "type": "argument_list",
                                            "start_token": 188,
                                            "end_token": 190,
                                            "label": "(seq)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 189,
                                                    "end_token": 189,
                                                    "label": "seq",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}