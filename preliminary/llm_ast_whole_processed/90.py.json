{
    "type": "module",
    "start_token": 0,
    "end_token": 1169,
    "label": "import time\nfrom datetime import datetime, timedelta\nfrom typing import Any, Union\n\nfrom backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema\nfrom backend.data.model import SchemaField\n\n\nclass GetCurrentTimeBlock(Block):\n    class Input(BlockSchema):\n        trigger: str = SchemaField(\n            description=\"Trigger any data to output the current time\"\n        )\n        format: str = SchemaField(\n            description=\"Format of the time to output\", default=\"%H:%M:%S\"\n        )\n\n    class Output(BlockSchema):\n        time: str = SchemaField(\n            description=\"Current time in the specified format (default: %H:%M:%S)\"\n        )\n\n    def __init__(self):\n        super().__init__(\n            id=\"a892b8d9-3e4e-4e9c-9c1e-75f8efcf1bfa\",\n            description=\"This block outputs the current time.\",\n            categories={BlockCategory.TEXT},\n            input_schema=GetCurrentTimeBlock.Input,\n            output_schema=GetCurrentTimeBlock.Output,\n            test_input=[\n                {\"trigger\": \"Hello\"},\n                {\"trigger\": \"Hello\", \"format\": \"%H:%M\"},\n            ],\n            test_output=[\n                (\"time\", lambda _: time.strftime(\"%H:%M:%S\")),\n                (\"time\", lambda _: time.strftime(\"%H:%M\")),\n            ],\n        )\n\n    def run(self, input_data: Input, **kwargs) -> BlockOutput:\n        current_time = time.strftime(input_data.format)\n        yield \"time\", current_time\n\n\nclass GetCurrentDateBlock(Block):\n    class Input(BlockSchema):\n        trigger: str = SchemaField(\n            description=\"Trigger any data to output the current date\"\n        )\n        offset: Union[int, str] = SchemaField(\n            title=\"Days Offset\",\n            description=\"Offset in days from the current date\",\n            default=0,\n        )\n        format: str = SchemaField(\n            description=\"Format of the date to output\", default=\"%Y-%m-%d\"\n        )\n\n    class Output(BlockSchema):\n        date: str = SchemaField(\n            description=\"Current date in the specified format (default: YYYY-MM-DD)\"\n        )\n\n    def __init__(self):\n        super().__init__(\n            id=\"b29c1b50-5d0e-4d9f-8f9d-1b0e6fcbf0b1\",\n            description=\"This block outputs the current date with an optional offset.\",\n            categories={BlockCategory.TEXT},\n            input_schema=GetCurrentDateBlock.Input,\n            output_schema=GetCurrentDateBlock.Output,\n            test_input=[\n                {\"trigger\": \"Hello\", \"offset\": \"7\"},\n                {\"trigger\": \"Hello\", \"offset\": \"7\", \"format\": \"%m/%d/%Y\"},\n            ],\n            test_output=[\n                (\n                    \"date\",\n                    lambda t: abs(datetime.now() - datetime.strptime(t, \"%Y-%m-%d\"))\n                    < timedelta(days=8),  # 7 days difference + 1 day error margin.\n                ),\n                (\n                    \"date\",\n                    lambda t: abs(datetime.now() - datetime.strptime(t, \"%m/%d/%Y\"))\n                    < timedelta(days=8),\n                    # 7 days difference + 1 day error margin.\n                ),\n            ],\n        )\n\n    def run(self, input_data: Input, **kwargs) -> BlockOutput:\n        try:\n            offset = int(input_data.offset)\n        except ValueError:\n            offset = 0\n        current_date = datetime.now() - timedelta(days=offset)\n        yield \"date\", current_date.strftime(input_data.format)\n\n\nclass GetCurrentDateAndTimeBlock(Block):\n    class Input(BlockSchema):\n        trigger: str = SchemaField(\n            description=\"Trigger any data to output the current date and time\"\n        )\n        format: str = SchemaField(\n            description=\"Format of the date and time to output\",\n            default=\"%Y-%m-%d %H:%M:%S\",\n        )\n\n    class Output(BlockSchema):\n        date_time: str = SchemaField(\n            description=\"Current date and time in the specified format (default: YYYY-MM-DD HH:MM:SS)\"\n        )\n\n    def __init__(self):\n        super().__init__(\n            id=\"716a67b3-6760-42e7-86dc-18645c6e00fc\",\n            description=\"This block outputs the current date and time.\",\n            categories={BlockCategory.TEXT},\n            input_schema=GetCurrentDateAndTimeBlock.Input,\n            output_schema=GetCurrentDateAndTimeBlock.Output,\n            test_input=[\n                {\"trigger\": \"Hello\"},\n            ],\n            test_output=[\n                (\n                    \"date_time\",\n                    lambda t: abs(\n                        datetime.now() - datetime.strptime(t, \"%Y-%m-%d %H:%M:%S\")\n                    )\n                    < timedelta(seconds=10),  # 10 seconds error margin.\n                ),\n            ],\n        )\n\n    def run(self, input_data: Input, **kwargs) -> BlockOutput:\n        current_date_time = time.strftime(input_data.format)\n        yield \"date_time\", current_date_time\n\n\nclass CountdownTimerBlock(Block):\n    class Input(BlockSchema):\n        input_message: Any = SchemaField(\n            advanced=False,\n            description=\"Message to output after the timer finishes\",\n            default=\"timer finished\",\n        )\n        seconds: Union[int, str] = SchemaField(\n            advanced=False, description=\"Duration in seconds\", default=0\n        )\n        minutes: Union[int, str] = SchemaField(\n            advanced=False, description=\"Duration in minutes\", default=0\n        )\n        hours: Union[int, str] = SchemaField(\n            advanced=False, description=\"Duration in hours\", default=0\n        )\n        days: Union[int, str] = SchemaField(\n            advanced=False, description=\"Duration in days\", default=0\n        )\n\n    class Output(BlockSchema):\n        output_message: Any = SchemaField(\n            description=\"Message after the timer finishes\"\n        )\n\n    def __init__(self):\n        super().__init__(\n            id=\"d67a9c52-5e4e-11e2-bcfd-0800200c9a71\",\n            description=\"This block triggers after a specified duration.\",\n            categories={BlockCategory.TEXT},\n            input_schema=CountdownTimerBlock.Input,\n            output_schema=CountdownTimerBlock.Output,\n            test_input=[\n                {\"seconds\": 1},\n                {\"input_message\": \"Custom message\"},\n            ],\n            test_output=[\n                (\"output_message\", \"timer finished\"),\n                (\"output_message\", \"Custom message\"),\n            ],\n        )\n\n    def run(self, input_data: Input, **kwargs) -> BlockOutput:\n        seconds = int(input_data.seconds)\n        minutes = int(input_data.minutes)\n        hours = int(input_data.hours)\n        days = int(input_data.days)\n\n        total_seconds = seconds + minutes * 60 + hours * 3600 + days * 86400\n\n        time.sleep(total_seconds)\n        yield \"output_message\", input_data.input_message\n",
    "children": [
        {
            "type": "import_statement",
            "start_token": 0,
            "end_token": 1,
            "label": "import time",
            "children": []
        },
        {
            "type": "import_from_statement",
            "start_token": 3,
            "end_token": 8,
            "label": "from datetime import datetime, timedelta",
            "children": []
        },
        {
            "type": "import_from_statement",
            "start_token": 10,
            "end_token": 15,
            "label": "from typing import Any, Union",
            "children": []
        },
        {
            "type": "import_from_statement",
            "start_token": 18,
            "end_token": 31,
            "label": "from backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema",
            "children": []
        },
        {
            "type": "import_from_statement",
            "start_token": 33,
            "end_token": 40,
            "label": "from backend.data.model import SchemaField",
            "children": []
        },
        {
            "type": "class_definition",
            "start_token": 44,
            "end_token": 255,
            "label": "class GetCurrentTimeBlock(Block):\n    class Input(BlockSchema):\n        trigger: str = SchemaField(\n            description=\"Trigger any data to output the current time\"\n        )\n        format: str = SchemaField(\n            description=\"Format of the time to output\", default=\"%H:%M:%S\"\n        )\n\n    class Output(BlockSchema):\n        time: str = SchemaField(\n            description=\"Current time in the specified format (default: %H:%M:%S)\"\n        )\n\n    def __init__(self):\n        super().__init__(\n            id=\"a892b8d9-3e4e-4e9c-9c1e-75f8efcf1bfa\",\n            description=\"This block outputs the current time.\",\n            categories={BlockCategory.TEXT},\n            input_schema=GetCurrentTimeBlock.Input,\n            output_schema=GetCurrentTimeBlock.Output,\n            test_input=[\n                {\"trigger\": \"Hello\"},\n                {\"trigger\": \"Hello\", \"format\": \"%H:%M\"},\n            ],\n            test_output=[\n                (\"time\", lambda _: time.strftime(\"%H:%M:%S\")),\n                (\"time\", lambda _: time.strftime(\"%H:%M\")),\n            ],\n        )\n\n    def run(self, input_data: Input, **kwargs) -> BlockOutput:\n        current_time = time.strftime(input_data.format)\n        yield \"time\", current_time\n",
            "children": [
                {
                    "type": "block",
                    "start_token": 51,
                    "end_token": 87,
                    "label": "class Input(BlockSchema):\n        trigger: str = SchemaField(\n            description=\"Trigger any data to output the current time\"\n        )\n        format: str = SchemaField(\n            description=\"Format of the time to output\", default=\"%H:%M:%S\"\n        )\n",
                    "children": [
                        {
                            "type": "assignment",
                            "start_token": 58,
                            "end_token": 69,
                            "label": "trigger: str = SchemaField(\n            description=\"Trigger any data to output the current time\"\n        )",
                            "children": []
                        },
                        {
                            "type": "assignment",
                            "start_token": 71,
                            "end_token": 86,
                            "label": "format: str = SchemaField(\n            description=\"Format of the time to output\", default=\"%H:%M:%S\"\n        )",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "start_token": 89,
                    "end_token": 108,
                    "label": "class Output(BlockSchema):\n        time: str = SchemaField(\n            description=\"Current time in the specified format (default: %H:%M:%S)\"\n        )\n",
                    "children": [
                        {
                            "type": "assignment",
                            "start_token": 96,
                            "end_token": 107,
                            "label": "time: str = SchemaField(\n            description=\"Current time in the specified format (default: %H:%M:%S)\"\n        )",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "start_token": 110,
                    "end_token": 219,
                    "label": "def __init__(self):\n        super().__init__(\n            id=\"a892b8d9-3e4e-4e9c-9c1e-75f8efcf1bfa\",\n            description=\"This block outputs the current time.\",\n            categories={BlockCategory.TEXT},\n            input_schema=GetCurrentTimeBlock.Input,\n            output_schema=GetCurrentTimeBlock.Output,\n            test_input=[\n                {\"trigger\": \"Hello\"},\n                {\"trigger\": \"Hello\", \"format\": \"%H:%M\"},\n            ],\n            test_output=[\n                (\"time\", lambda _: time.strftime(\"%H:%M:%S\")),\n                (\"time\", lambda _: time.strftime(\"%H:%M\")),\n            ],\n        )",
                    "children": [
                        {
                            "type": "parameters",
                            "start_token": 112,
                            "end_token": 114,
                            "label": "(self)",
                            "children": []
                        },
                        {
                            "type": "block",
                            "start_token": 115,
                            "end_token": 219,
                            "label": ":\n        super().__init__(\n            id=\"a892b8d9-3e4e-4e9c-9c1e-75f8efcf1bfa\",\n            description=\"This block outputs the current time.\",\n            categories={BlockCategory.TEXT},\n            input_schema=GetCurrentTimeBlock.Input,\n            output_schema=GetCurrentTimeBlock.Output,\n            test_input=[\n                {\"trigger\": \"Hello\"},\n                {\"trigger\": \"Hello\", \"format\": \"%H:%M\"},\n            ],\n            test_output=[\n                (\"time\", lambda _: time.strftime(\"%H:%M:%S\")),\n                (\"time\", lambda _: time.strftime(\"%H:%M\")),\n            ],\n        )",
                            "children": [
                                {
                                    "type": "call",
                                    "start_token": 117,
                                    "end_token": 219,
                                    "label": "super().__init__(\n            id=\"a892b8d9-3e4e-4e9c-9c1e-75f8efcf1bfa\",\n            description=\"This block outputs the current time.\",\n            categories={BlockCategory.TEXT},\n            input_schema=GetCurrentTimeBlock.Input,\n            output_schema=GetCurrentTimeBlock.Output,\n            test_input=[\n                {\"trigger\": \"Hello\"},\n                {\"trigger\": \"Hello\", \"format\": \"%H:%M\"},\n            ],\n            test_output=[\n                (\"time\", lambda _: time.strftime(\"%H:%M:%S\")),\n                (\"time\", lambda _: time.strftime(\"%H:%M\")),\n            ],\n        )",
                                    "children": [
                                        {
                                            "type": "keyword_argument",
                                            "start_token": 124,
                                            "end_token": 127,
                                            "label": "id=\"a892b8d9-3e4e-4e9c-9c1e-75f8efcf1bfa\",",
                                            "children": []
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "start_token": 129,
                                            "end_token": 132,
                                            "label": "description=\"This block outputs the current time.\",",
                                            "children": []
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "start_token": 134,
                                            "end_token": 140,
                                            "label": "categories={BlockCategory.TEXT}",
                                            "children": []
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "start_token": 143,
                                            "end_token": 148,
                                            "label": "input_schema=GetCurrentTimeBlock.Input,",
                                            "children": []
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "start_token": 150,
                                            "end_token": 155,
                                            "label": "output_schema=GetCurrentTimeBlock.Output,",
                                            "children": []
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "start_token": 157,
                                            "end_token": 179,
                                            "label": "test_input=[\n                {\"trigger\": \"Hello\"},\n                {\"trigger\": \"Hello\", \"format\": \"%H:%M\"},\n            ]",
                                            "children": []
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "start_token": 182,
                                            "end_token": 216,
                                            "label": "test_output=[\n                (\"time\", lambda _: time.strftime(\"%H:%M:%S\")),\n                (\"time\", lambda _: time.strftime(\"%H:%M\")),\n            ]",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "start_token": 222,
                    "end_token": 255,
                    "label": "def run(self, input_data: Input, **kwargs) -> BlockOutput:\n        current_time = time.strftime(input_data.format)\n        yield \"time\", current_time\n",
                    "children": [
                        {
                            "type": "parameters",
                            "start_token": 224,
                            "end_token": 234,
                            "label": "(self, input_data: Input, **kwargs)",
                            "children": []
                        },
                        {
                            "type": "block",
                            "start_token": 238,
                            "end_token": 255,
                            "label": ":\n        current_time = time.strftime(input_data.format)\n        yield \"time\", current_time\n",
                            "children": [
                                {
                                    "type": "yield",
                                    "start_token": 251,
                                    "end_token": 254,
                                    "label": "yield \"time\", current_time",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "class_definition",
            "start_token": 258,
            "end_token": 604,
            "label": "class GetCurrentDateBlock(Block):\n    class Input(BlockSchema):\n        trigger: str = SchemaField(\n            description=\"Trigger any data to output the current date\"\n        )\n        offset: Union[int, str] = SchemaField(\n            title=\"Days Offset\",\n            description=\"Offset in days from the current date\",\n            default=0,\n        )\n        format: str = SchemaField(\n            description=\"Format of the date to output\", default=\"%Y-%m-%d\"\n        )\n\n    class Output(BlockSchema):\n        date: str = SchemaField(\n            description=\"Current date in the specified format (default: YYYY-MM-DD)\"\n        )\n\n    def __init__(self):\n        super().__init__(\n            id=\"b29c1b50-5d0e-4d9f-8f9d-1b0e6fcbf0b1\",\n            description=\"This block outputs the current date with an optional offset.\",\n            categories={BlockCategory.TEXT},\n            input_schema=GetCurrentDateBlock.Input,\n            output_schema=GetCurrentDateBlock.Output,\n            test_input=[\n                {\"trigger\": \"Hello\", \"offset\": \"7\"},\n                {\"trigger\": \"Hello\", \"offset\": \"7\", \"format\": \"%m/%d/%Y\"},\n            ],\n            test_output=[\n                (\n                    \"date\",\n                    lambda t: abs(datetime.now() - datetime.strptime(t, \"%Y-%m-%d\"))\n                    < timedelta(days=8),  # 7 days difference + 1 day error margin.\n                ),\n                (\n                    \"date\",\n                    lambda t: abs(datetime.now() - datetime.strptime(t, \"%m/%d/%Y\"))\n                    < timedelta(days=8),\n                    # 7 days difference + 1 day error margin.\n                ),\n            ],\n        )\n\n    def run(self, input_data: Input, **kwargs) -> BlockOutput:\n        try:\n            offset = int(input_data.offset)\n        except ValueError:\n            offset = 0\n        current_date = datetime.now() - timedelta(days=offset)\n        yield \"date\", current_date.strftime(input_data.format)\n",
            "children": [
                {
                    "type": "block",
                    "start_token": 265,
                    "end_token": 330,
                    "label": "class Input(BlockSchema):\n        trigger: str = SchemaField(\n            description=\"Trigger any data to output the current date\"\n        )\n        offset: Union[int, str] = SchemaField(\n            title=\"Days Offset\",\n            description=\"Offset in days from the current date\",\n            default=0,\n        )\n        format: str = SchemaField(\n            description=\"Format of the date to output\", default=\"%Y-%m-%d\"\n        )\n",
                    "children": [
                        {
                            "type": "assignment",
                            "start_token": 272,
                            "end_token": 283,
                            "label": "trigger: str = SchemaField(\n            description=\"Trigger any data to output the current date\"\n        )",
                            "children": []
                        },
                        {
                            "type": "assignment",
                            "start_token": 285,
                            "end_token": 312,
                            "label": "offset: Union[int, str] = SchemaField(\n            title=\"Days Offset\",\n            description=\"Offset in days from the current date\",\n            default=0,\n        )",
                            "children": []
                        },
                        {
                            "type": "assignment",
                            "start_token": 314,
                            "end_token": 329,
                            "label": "format: str = SchemaField(\n            description=\"Format of the date to output\", default=\"%Y-%m-%d\"\n        )",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "start_token": 332,
                    "end_token": 351,
                    "label": "class Output(BlockSchema):\n        date: str = SchemaField(\n            description=\"Current date in the specified format (default: YYYY-MM-DD)\"\n        )\n",
                    "children": [
                        {
                            "type": "assignment",
                            "start_token": 339,
                            "end_token": 350,
                            "label": "date: str = SchemaField(\n            description=\"Current date in the specified format (default: YYYY-MM-DD)\"\n        )",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "start_token": 353,
                    "end_token": 537,
                    "label": "def __init__(self):\n        super().__init__(\n            id=\"b29c1b50-5d0e-4d9f-8f9d-1b0e6fcbf0b1\",\n            description=\"This block outputs the current date with an optional offset.\",\n            categories={BlockCategory.TEXT},\n            input_schema=GetCurrentDateBlock.Input,\n            output_schema=GetCurrentDateBlock.Output,\n            test_input=[\n                {\"trigger\": \"Hello\", \"offset\": \"7\"},\n                {\"trigger\": \"Hello\", \"offset\": \"7\", \"format\": \"%m/%d/%Y\"},\n            ],\n            test_output=[\n                (\n                    \"date\",\n                    lambda t: abs(datetime.now() - datetime.strptime(t, \"%Y-%m-%d\"))\n                    < timedelta(days=8),  # 7 days difference + 1 day error margin.\n                ),\n                (\n                    \"date\",\n                    lambda t: abs(datetime.now() - datetime.strptime(t, \"%m/%d/%Y\"))\n                    < timedelta(days=8),\n                    # 7 days difference + 1 day error margin.\n                ),\n            ],\n        )",
                    "children": [
                        {
                            "type": "parameters",
                            "start_token": 355,
                            "end_token": 357,
                            "label": "(self)",
                            "children": []
                        },
                        {
                            "type": "block",
                            "start_token": 358,
                            "end_token": 537,
                            "label": ":\n        super().__init__(\n            id=\"b29c1b50-5d0e-4d9f-8f9d-1b0e6fcbf0b1\",\n            description=\"This block outputs the current date with an optional offset.\",\n            categories={BlockCategory.TEXT},\n            input_schema=GetCurrentDateBlock.Input,\n            output_schema=GetCurrentDateBlock.Output,\n            test_input=[\n                {\"trigger\": \"Hello\", \"offset\": \"7\"},\n                {\"trigger\": \"Hello\", \"offset\": \"7\", \"format\": \"%m/%d/%Y\"},\n            ],\n            test_output=[\n                (\n                    \"date\",\n                    lambda t: abs(datetime.now() - datetime.strptime(t, \"%Y-%m-%d\"))\n                    < timedelta(days=8),  # 7 days difference + 1 day error margin.\n                ),\n                (\n                    \"date\",\n                    lambda t: abs(datetime.now() - datetime.strptime(t, \"%m/%d/%Y\"))\n                    < timedelta(days=8),\n                    # 7 days difference + 1 day error margin.\n                ),\n            ],\n        )",
                            "children": [
                                {
                                    "type": "call",
                                    "start_token": 360,
                                    "end_token": 530,
                                    "label": "super().__init__(\n            id=\"b29c1b50-5d0e-4d9f-8f9d-1b0e6fcbf0b1\",\n            description=\"This block outputs the current date with an optional offset.\",\n            categories={BlockCategory.TEXT},\n            input_schema=GetCurrentDateBlock.Input,\n            output_schema=GetCurrentDateBlock.Output,\n            test_input=[\n                {\"trigger\": \"Hello\", \"offset\": \"7\"},\n                {\"trigger\": \"Hello\", \"offset\": \"7\", \"format\": \"%m/%d/%Y\"},\n            ],\n            test_output=[\n                (\n                    \"date\",\n                    lambda t: abs(datetime.now() - datetime.strptime(t, \"%Y-%m-%d\"))\n                    < timedelta(days=8),  # 7 days difference + 1 day error margin.\n                ),\n                (\n                    \"date\",\n                    lambda t: abs(datetime.now() - datetime.strptime(t, \"%m/%d/%Y\"))\n                    < timedelta(days=8),\n                    # 7 days difference + 1 day error margin.\n",
                                    "children": [
                                        {
                                            "type": "keyword_argument",
                                            "start_token": 367,
                                            "end_token": 370,
                                            "label": "id=\"b29c1b50-5d0e-4d9f-8f9d-1b0e6fcbf0b1\",",
                                            "children": []
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "start_token": 372,
                                            "end_token": 375,
                                            "label": "description=\"This block outputs the current date with an optional offset.\",",
                                            "children": []
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "start_token": 377,
                                            "end_token": 383,
                                            "label": "categories={BlockCategory.TEXT}",
                                            "children": []
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "start_token": 386,
                                            "end_token": 391,
                                            "label": "input_schema=GetCurrentDateBlock.Input,",
                                            "children": []
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "start_token": 393,
                                            "end_token": 398,
                                            "label": "output_schema=GetCurrentDateBlock.Output,",
                                            "children": []
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "start_token": 400,
                                            "end_token": 429,
                                            "label": "test_input=[\n                {\"trigger\": \"Hello\", \"offset\": \"7\"},\n                {\"trigger\": \"Hello\", \"offset\": \"7\", \"format\": \"%m/%d/%Y\"},\n",
                                            "children": []
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "start_token": 433,
                                            "end_token": 531,
                                            "label": "test_output=[\n                (\n                    \"date\",\n                    lambda t: abs(datetime.now() - datetime.strptime(t, \"%Y-%m-%d\"))\n                    < timedelta(days=8),  # 7 days difference + 1 day error margin.\n                ),\n                (\n                    \"date\",\n                    lambda t: abs(datetime.now() - datetime.strptime(t, \"%m/%d/%Y\"))\n                    < timedelta(days=8),\n                    # 7 days difference + 1 day error margin.\n                )",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "start_token": 540,
                    "end_token": 604,
                    "label": "def run(self, input_data: Input, **kwargs) -> BlockOutput:\n        try:\n            offset = int(input_data.offset)\n        except ValueError:\n            offset = 0\n        current_date = datetime.now() - timedelta(days=offset)\n        yield \"date\", current_date.strftime(input_data.format)\n",
                    "children": [
                        {
                            "type": "parameters",
                            "start_token": 542,
                            "end_token": 552,
                            "label": "(self, input_data: Input, **kwargs)",
                            "children": []
                        },
                        {
                            "type": "block",
                            "start_token": 556,
                            "end_token": 604,
                            "label": ":\n        try:\n            offset = int(input_data.offset)\n        except ValueError:\n            offset = 0\n        current_date = datetime.now() - timedelta(days=offset)\n        yield \"date\", current_date.strftime(input_data.format)\n",
                            "children": [
                                {
                                    "type": "try_statement",
                                    "start_token": 558,
                                    "end_token": 577,
                                    "label": "try:\n            offset = int(input_data.offset)\n        except ValueError:\n            offset = 0\n",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "start_token": 561,
                                            "end_token": 568,
                                            "label": "offset = int(input_data.offset)",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "yield",
                                    "start_token": 593,
                                    "end_token": 603,
                                    "label": "yield \"date\", current_date.strftime(input_data.format)",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "class_definition",
            "start_token": 607,
            "end_token": 825,
            "label": "class GetCurrentDateAndTimeBlock(Block):\n    class Input(BlockSchema):\n        trigger: str = SchemaField(\n            description=\"Trigger any data to output the current date and time\"\n        )\n        format: str = SchemaField(\n            description=\"Format of the date and time to output\",\n            default=\"%Y-%m-%d %H:%M:%S\",\n        )\n\n    class Output(BlockSchema):\n        date_time: str = SchemaField(\n            description=\"Current date and time in the specified format (default: YYYY-MM-DD HH:MM:SS)\"\n        )\n\n    def __init__(self):\n        super().__init__(\n            id=\"716a67b3-6760-42e7-86dc-18645c6e00fc\",\n            description=\"This block outputs the current date and time.\",\n            categories={BlockCategory.TEXT},\n            input_schema=GetCurrentDateAndTimeBlock.Input,\n            output_schema=GetCurrentDateAndTimeBlock.Output,\n            test_input=[\n                {\"trigger\": \"Hello\"},\n            ],\n            test_output=[\n                (\n                    \"date_time\",\n                    lambda t: abs(\n                        datetime.now() - datetime.strptime(t, \"%Y-%m-%d %H:%M:%S\")\n                    )\n                    < timedelta(seconds=10),  # 10 seconds error margin.\n                ),\n            ],\n        )\n\n    def run(self, input_data: Input, **kwargs) -> BlockOutput:\n        current_date_time = time.strftime(input_data.format)\n        yield \"date_time\", current_date_time\n",
            "children": [
                {
                    "type": "block",
                    "start_token": 614,
                    "end_token": 652,
                    "label": "class Input(BlockSchema):\n        trigger: str = SchemaField(\n            description=\"Trigger any data to output the current date and time\"\n        )\n        format: str = SchemaField(\n            description=\"Format of the date and time to output\",\n            default=\"%Y-%m-%d %H:%M:%S\",\n        )\n",
                    "children": [
                        {
                            "type": "assignment",
                            "start_token": 621,
                            "end_token": 632,
                            "label": "trigger: str = SchemaField(\n            description=\"Trigger any data to output the current date and time\"\n        )",
                            "children": []
                        },
                        {
                            "type": "assignment",
                            "start_token": 634,
                            "end_token": 651,
                            "label": "format: str = SchemaField(\n            description=\"Format of the date and time to output\",\n            default=\"%Y-%m-%d %H:%M:%S\",\n        )",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "start_token": 654,
                    "end_token": 673,
                    "label": "class Output(BlockSchema):\n        date_time: str = SchemaField(\n            description=\"Current date and time in the specified format (default: YYYY-MM-DD HH:MM:SS)\"\n        )\n",
                    "children": [
                        {
                            "type": "assignment",
                            "start_token": 661,
                            "end_token": 672,
                            "label": "date_time: str = SchemaField(\n            description=\"Current date and time in the specified format (default: YYYY-MM-DD HH:MM:SS)\"\n        )",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "start_token": 675,
                    "end_token": 789,
                    "label": "def __init__(self):\n        super().__init__(\n            id=\"716a67b3-6760-42e7-86dc-18645c6e00fc\",\n            description=\"This block outputs the current date and time.\",\n            categories={BlockCategory.TEXT},\n            input_schema=GetCurrentDateAndTimeBlock.Input,\n            output_schema=GetCurrentDateAndTimeBlock.Output,\n            test_input=[\n                {\"trigger\": \"Hello\"},\n            ],\n            test_output=[\n                (\n                    \"date_time\",\n                    lambda t: abs(\n                        datetime.now() - datetime.strptime(t, \"%Y-%m-%d %H:%M:%S\")\n                    )\n                    < timedelta(seconds=10),  # 10 seconds error margin.\n                ),\n            ],\n        )",
                    "children": [
                        {
                            "type": "parameters",
                            "start_token": 677,
                            "end_token": 679,
                            "label": "(self)",
                            "children": []
                        },
                        {
                            "type": "block",
                            "start_token": 680,
                            "end_token": 789,
                            "label": ":\n        super().__init__(\n            id=\"716a67b3-6760-42e7-86dc-18645c6e00fc\",\n            description=\"This block outputs the current date and time.\",\n            categories={BlockCategory.TEXT},\n            input_schema=GetCurrentDateAndTimeBlock.Input,\n            output_schema=GetCurrentDateAndTimeBlock.Output,\n            test_input=[\n                {\"trigger\": \"Hello\"},\n            ],\n            test_output=[\n                (\n                    \"date_time\",\n                    lambda t: abs(\n                        datetime.now() - datetime.strptime(t, \"%Y-%m-%d %H:%M:%S\")\n                    )\n                    < timedelta(seconds=10),  # 10 seconds error margin.\n                ),\n            ],\n        )",
                            "children": [
                                {
                                    "type": "call",
                                    "start_token": 682,
                                    "end_token": 786,
                                    "label": "super().__init__(\n            id=\"716a67b3-6760-42e7-86dc-18645c6e00fc\",\n            description=\"This block outputs the current date and time.\",\n            categories={BlockCategory.TEXT},\n            input_schema=GetCurrentDateAndTimeBlock.Input,\n            output_schema=GetCurrentDateAndTimeBlock.Output,\n            test_input=[\n                {\"trigger\": \"Hello\"},\n            ],\n            test_output=[\n                (\n                    \"date_time\",\n                    lambda t: abs(\n                        datetime.now() - datetime.strptime(t, \"%Y-%m-%d %H:%M:%S\")\n                    )\n                    < timedelta(seconds=10),  # 10 seconds error margin.\n                ),\n            ]",
                                    "children": [
                                        {
                                            "type": "keyword_argument",
                                            "start_token": 689,
                                            "end_token": 692,
                                            "label": "id=\"716a67b3-6760-42e7-86dc-18645c6e00fc\",",
                                            "children": []
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "start_token": 694,
                                            "end_token": 697,
                                            "label": "description=\"This block outputs the current date and time.\",",
                                            "children": []
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "start_token": 699,
                                            "end_token": 705,
                                            "label": "categories={BlockCategory.TEXT}",
                                            "children": []
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "start_token": 708,
                                            "end_token": 713,
                                            "label": "input_schema=GetCurrentDateAndTimeBlock.Input,",
                                            "children": []
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "start_token": 715,
                                            "end_token": 720,
                                            "label": "output_schema=GetCurrentDateAndTimeBlock.Output,",
                                            "children": []
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "start_token": 722,
                                            "end_token": 732,
                                            "label": "test_input=[\n                {\"trigger\": \"Hello\"},\n",
                                            "children": []
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "start_token": 736,
                                            "end_token": 788,
                                            "label": "test_output=[\n                (\n                    \"date_time\",\n                    lambda t: abs(\n                        datetime.now() - datetime.strptime(t, \"%Y-%m-%d %H:%M:%S\")\n                    )\n                    < timedelta(seconds=10),  # 10 seconds error margin.\n                ),\n            ],\n",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "start_token": 792,
                    "end_token": 825,
                    "label": "def run(self, input_data: Input, **kwargs) -> BlockOutput:\n        current_date_time = time.strftime(input_data.format)\n        yield \"date_time\", current_date_time\n",
                    "children": [
                        {
                            "type": "parameters",
                            "start_token": 794,
                            "end_token": 804,
                            "label": "(self, input_data: Input, **kwargs)",
                            "children": []
                        },
                        {
                            "type": "block",
                            "start_token": 808,
                            "end_token": 825,
                            "label": ":\n        current_date_time = time.strftime(input_data.format)\n        yield \"date_time\", current_date_time\n",
                            "children": [
                                {
                                    "type": "yield",
                                    "start_token": 821,
                                    "end_token": 824,
                                    "label": "yield \"date_time\", current_date_time",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "class_definition",
            "start_token": 828,
            "end_token": 1169,
            "label": "class CountdownTimerBlock(Block):\n    class Input(BlockSchema):\n        input_message: Any = SchemaField(\n            advanced=False,\n            description=\"Message to output after the timer finishes\",\n            default=\"timer finished\",\n        )\n        seconds: Union[int, str] = SchemaField(\n            advanced=False, description=\"Duration in seconds\", default=0\n        )\n        minutes: Union[int, str] = SchemaField(\n            advanced=False, description=\"Duration in minutes\", default=0\n        )\n        hours: Union[int, str] = SchemaField(\n            advanced=False, description=\"Duration in hours\", default=0\n        )\n        days: Union[int, str] = SchemaField(\n            advanced=False, description=\"Duration in days\", default=0\n        )\n\n    class Output(BlockSchema):\n        output_message: Any = SchemaField(\n            description=\"Message after the timer finishes\"\n        )\n\n    def __init__(self):\n        super().__init__(\n            id=\"d67a9c52-5e4e-11e2-bcfd-0800200c9a71\",\n            description=\"This block triggers after a specified duration.\",\n            categories={BlockCategory.TEXT},\n            input_schema=CountdownTimerBlock.Input,\n            output_schema=CountdownTimerBlock.Output,\n            test_input=[\n                {\"seconds\": 1},\n                {\"input_message\": \"Custom message\"},\n            ],\n            test_output=[\n                (\"output_message\", \"timer finished\"),\n                (\"output_message\", \"Custom message\"),\n            ],\n        )\n\n    def run(self, input_data: Input, **kwargs) -> BlockOutput:\n        seconds = int(input_data.seconds)\n        minutes = int(input_data.minutes)\n        hours = int(input_data.hours)\n        days = int(input_data.days)\n\n        total_seconds = seconds + minutes * 60 + hours * 3600 + days * 86400\n\n        time.sleep(total_seconds)\n        yield \"output_message\", input_data.input_message\n",
            "children": [
                {
                    "type": "block",
                    "start_token": 835,
                    "end_token": 968,
                    "label": "class Input(BlockSchema):\n        input_message: Any = SchemaField(\n            advanced=False,\n            description=\"Message to output after the timer finishes\",\n            default=\"timer finished\",\n        )\n        seconds: Union[int, str] = SchemaField(\n            advanced=False, description=\"Duration in seconds\", default=0\n        )\n        minutes: Union[int, str] = SchemaField(\n            advanced=False, description=\"Duration in minutes\", default=0\n        )\n        hours: Union[int, str] = SchemaField(\n            advanced=False, description=\"Duration in hours\", default=0\n        )\n        days: Union[int, str] = SchemaField(\n            advanced=False, description=\"Duration in days\", default=0\n        )",
                    "children": [
                        {
                            "type": "assignment",
                            "start_token": 842,
                            "end_token": 864,
                            "label": "input_message: Any = SchemaField(\n            advanced=False,\n            description=\"Message to output after the timer finishes\",\n            default=\"timer finished\",\n        )",
                            "children": []
                        },
                        {
                            "type": "assignment",
                            "start_token": 866,
                            "end_token": 889,
                            "label": "seconds: Union[int, str] = SchemaField(\n            advanced=False, description=\"Duration in seconds\", default=0\n",
                            "children": []
                        },
                        {
                            "type": "assignment",
                            "start_token": 892,
                            "end_token": 915,
                            "label": "minutes: Union[int, str] = SchemaField(\n            advanced=False, description=\"Duration in minutes\", default=0\n",
                            "children": []
                        },
                        {
                            "type": "assignment",
                            "start_token": 918,
                            "end_token": 941,
                            "label": "hours: Union[int, str] = SchemaField(\n            advanced=False, description=\"Duration in hours\", default=0\n",
                            "children": []
                        },
                        {
                            "type": "assignment",
                            "start_token": 944,
                            "end_token": 967,
                            "label": "days: Union[int, str] = SchemaField(\n            advanced=False, description=\"Duration in days\", default=0\n",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "start_token": 971,
                    "end_token": 990,
                    "label": "class Output(BlockSchema):\n        output_message: Any = SchemaField(\n            description=\"Message after the timer finishes\"\n        )\n",
                    "children": [
                        {
                            "type": "assignment",
                            "start_token": 978,
                            "end_token": 989,
                            "label": "output_message: Any = SchemaField(\n            description=\"Message after the timer finishes\"\n        )",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "start_token": 992,
                    "end_token": 1081,
                    "label": "def __init__(self):\n        super().__init__(\n            id=\"d67a9c52-5e4e-11e2-bcfd-0800200c9a71\",\n            description=\"This block triggers after a specified duration.\",\n            categories={BlockCategory.TEXT},\n            input_schema=CountdownTimerBlock.Input,\n            output_schema=CountdownTimerBlock.Output,\n            test_input=[\n                {\"seconds\": 1},\n                {\"input_message\": \"Custom message\"},\n            ],\n            test_output=[\n                (\"output_message\", \"timer finished\"),\n                (\"output_message\", \"Custom message\"),\n            ],\n        )",
                    "children": [
                        {
                            "type": "parameters",
                            "start_token": 994,
                            "end_token": 996,
                            "label": "(self)",
                            "children": []
                        },
                        {
                            "type": "block",
                            "start_token": 997,
                            "end_token": 1081,
                            "label": ":\n        super().__init__(\n            id=\"d67a9c52-5e4e-11e2-bcfd-0800200c9a71\",\n            description=\"This block triggers after a specified duration.\",\n            categories={BlockCategory.TEXT},\n            input_schema=CountdownTimerBlock.Input,\n            output_schema=CountdownTimerBlock.Output,\n            test_input=[\n                {\"seconds\": 1},\n                {\"input_message\": \"Custom message\"},\n            ],\n            test_output=[\n                (\"output_message\", \"timer finished\"),\n                (\"output_message\", \"Custom message\"),\n            ],\n        )",
                            "children": [
                                {
                                    "type": "call",
                                    "start_token": 999,
                                    "end_token": 1078,
                                    "label": "super().__init__(\n            id=\"d67a9c52-5e4e-11e2-bcfd-0800200c9a71\",\n            description=\"This block triggers after a specified duration.\",\n            categories={BlockCategory.TEXT},\n            input_schema=CountdownTimerBlock.Input,\n            output_schema=CountdownTimerBlock.Output,\n            test_input=[\n                {\"seconds\": 1},\n                {\"input_message\": \"Custom message\"},\n            ],\n            test_output=[\n                (\"output_message\", \"timer finished\"),\n                (\"output_message\", \"Custom message\"),\n            ]",
                                    "children": [
                                        {
                                            "type": "keyword_argument",
                                            "start_token": 1006,
                                            "end_token": 1009,
                                            "label": "id=\"d67a9c52-5e4e-11e2-bcfd-0800200c9a71\",",
                                            "children": []
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "start_token": 1011,
                                            "end_token": 1014,
                                            "label": "description=\"This block triggers after a specified duration.\",",
                                            "children": []
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "start_token": 1016,
                                            "end_token": 1022,
                                            "label": "categories={BlockCategory.TEXT}",
                                            "children": []
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "start_token": 1025,
                                            "end_token": 1030,
                                            "label": "input_schema=CountdownTimerBlock.Input,",
                                            "children": []
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "start_token": 1032,
                                            "end_token": 1037,
                                            "label": "output_schema=CountdownTimerBlock.Output,",
                                            "children": []
                                        },
                                        {
                                            "type": "keyword_argument",
                                            "start_token": 1039,
                                            "end_token": 1076,
                                            "label": "test_input=[\n                {\"seconds\": 1},\n                {\"input_message\": \"Custom message\"},\n            ],\n            test_output=[\n                (\"output_message\", \"timer finished\"),\n                (\"output_message\", \"Custom message\"),",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "start_token": 1084,
                    "end_token": 1169,
                    "label": "def run(self, input_data: Input, **kwargs) -> BlockOutput:\n        seconds = int(input_data.seconds)\n        minutes = int(input_data.minutes)\n        hours = int(input_data.hours)\n        days = int(input_data.days)\n\n        total_seconds = seconds + minutes * 60 + hours * 3600 + days * 86400\n\n        time.sleep(total_seconds)\n        yield \"output_message\", input_data.input_message\n",
                    "children": [
                        {
                            "type": "parameters",
                            "start_token": 1086,
                            "end_token": 1096,
                            "label": "(self, input_data: Input, **kwargs)",
                            "children": []
                        },
                        {
                            "type": "block",
                            "start_token": 1100,
                            "end_token": 1169,
                            "label": ":\n        seconds = int(input_data.seconds)\n        minutes = int(input_data.minutes)\n        hours = int(input_data.hours)\n        days = int(input_data.days)\n\n        total_seconds = seconds + minutes * 60 + hours * 3600 + days * 86400\n\n        time.sleep(total_seconds)\n        yield \"output_message\", input_data.input_message\n",
                            "children": [
                                {
                                    "type": "assignment",
                                    "start_token": 1102,
                                    "end_token": 1109,
                                    "label": "seconds = int(input_data.seconds)",
                                    "children": []
                                },
                                {
                                    "type": "assignment",
                                    "start_token": 1111,
                                    "end_token": 1118,
                                    "label": "minutes = int(input_data.minutes)",
                                    "children": []
                                },
                                {
                                    "type": "assignment",
                                    "start_token": 1120,
                                    "end_token": 1127,
                                    "label": "hours = int(input_data.hours)",
                                    "children": []
                                },
                                {
                                    "type": "assignment",
                                    "start_token": 1129,
                                    "end_token": 1136,
                                    "label": "days = int(input_data.days)",
                                    "children": []
                                },
                                {
                                    "type": "binary_operator",
                                    "start_token": 1140,
                                    "end_token": 1153,
                                    "label": "= seconds + minutes * 60 + hours * 3600 + days * 86400",
                                    "children": []
                                },
                                {
                                    "type": "call",
                                    "start_token": 1156,
                                    "end_token": 1161,
                                    "label": "time.sleep(total_seconds)",
                                    "children": []
                                },
                                {
                                    "type": "yield",
                                    "start_token": 1163,
                                    "end_token": 1168,
                                    "label": "yield \"output_message\", input_data.input_message",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}