{
    "type": "module",
    "start_token": 0,
    "end_token": 3516,
    "label": "import datetime\n\nimport autogpt_libs.auth.depends\nimport autogpt_libs.auth.middleware\nimport fastapi\nimport fastapi.testclient\nimport prisma.enums\nimport pytest_mock\n\nimport backend.server.v2.store.model\nimport backend.server.v2.store.routes\n\napp = fastapi.FastAPI()\napp.include_router(backend.server.v2.store.routes.router)\n\nclient = fastapi.testclient.TestClient(app)\n\n\ndef override_auth_middleware():\n    \"\"\"Override auth middleware for testing\"\"\"\n    return {\"sub\": \"test-user-id\"}\n\n\ndef override_get_user_id():\n    \"\"\"Override get_user_id for testing\"\"\"\n    return \"test-user-id\"\n\n\napp.dependency_overrides[autogpt_libs.auth.middleware.auth_middleware] = (\n    override_auth_middleware\n)\napp.dependency_overrides[autogpt_libs.auth.depends.get_user_id] = override_get_user_id\n\n\ndef test_get_agents_defaults(mocker: pytest_mock.MockFixture):\n    mocked_value = backend.server.v2.store.model.StoreAgentsResponse(\n        agents=[],\n        pagination=backend.server.v2.store.model.Pagination(\n            current_page=0,\n            total_items=0,\n            total_pages=0,\n            page_size=10,\n        ),\n    )\n    mock_db_call = mocker.patch(\"backend.server.v2.store.db.get_store_agents\")\n    mock_db_call.return_value = mocked_value\n    response = client.get(\"/agents\")\n    assert response.status_code == 200\n\n    data = backend.server.v2.store.model.StoreAgentsResponse.model_validate(\n        response.json()\n    )\n    assert data.pagination.total_pages == 0\n    assert data.agents == []\n    mock_db_call.assert_called_once_with(\n        featured=False,\n        creator=None,\n        sorted_by=None,\n        search_query=None,\n        category=None,\n        page=1,\n        page_size=20,\n    )\n\n\ndef test_get_agents_featured(mocker: pytest_mock.MockFixture):\n    mocked_value = backend.server.v2.store.model.StoreAgentsResponse(\n        agents=[\n            backend.server.v2.store.model.StoreAgent(\n                slug=\"featured-agent\",\n                agent_name=\"Featured Agent\",\n                agent_image=\"featured.jpg\",\n                creator=\"creator1\",\n                creator_avatar=\"avatar1.jpg\",\n                sub_heading=\"Featured agent subheading\",\n                description=\"Featured agent description\",\n                runs=100,\n                rating=4.5,\n            )\n        ],\n        pagination=backend.server.v2.store.model.Pagination(\n            current_page=1,\n            total_items=1,\n            total_pages=1,\n            page_size=20,\n        ),\n    )\n    mock_db_call = mocker.patch(\"backend.server.v2.store.db.get_store_agents\")\n    mock_db_call.return_value = mocked_value\n    response = client.get(\"/agents?featured=true\")\n    assert response.status_code == 200\n    data = backend.server.v2.store.model.StoreAgentsResponse.model_validate(\n        response.json()\n    )\n    assert len(data.agents) == 1\n    assert data.agents[0].slug == \"featured-agent\"\n    mock_db_call.assert_called_once_with(\n        featured=True,\n        creator=None,\n        sorted_by=None,\n        search_query=None,\n        category=None,\n        page=1,\n        page_size=20,\n    )\n\n\ndef test_get_agents_by_creator(mocker: pytest_mock.MockFixture):\n    mocked_value = backend.server.v2.store.model.StoreAgentsResponse(\n        agents=[\n            backend.server.v2.store.model.StoreAgent(\n                slug=\"creator-agent\",\n                agent_name=\"Creator Agent\",\n                agent_image=\"agent.jpg\",\n                creator=\"specific-creator\",\n                creator_avatar=\"avatar.jpg\",\n                sub_heading=\"Creator agent subheading\",\n                description=\"Creator agent description\",\n                runs=50,\n                rating=4.0,\n            )\n        ],\n        pagination=backend.server.v2.store.model.Pagination(\n            current_page=1,\n            total_items=1,\n            total_pages=1,\n            page_size=20,\n        ),\n    )\n    mock_db_call = mocker.patch(\"backend.server.v2.store.db.get_store_agents\")\n    mock_db_call.return_value = mocked_value\n    response = client.get(\"/agents?creator=specific-creator\")\n    assert response.status_code == 200\n    data = backend.server.v2.store.model.StoreAgentsResponse.model_validate(\n        response.json()\n    )\n    assert len(data.agents) == 1\n    assert data.agents[0].creator == \"specific-creator\"\n    mock_db_call.assert_called_once_with(\n        featured=False,\n        creator=\"specific-creator\",\n        sorted_by=None,\n        search_query=None,\n        category=None,\n        page=1,\n        page_size=20,\n    )\n\n\ndef test_get_agents_sorted(mocker: pytest_mock.MockFixture):\n    mocked_value = backend.server.v2.store.model.StoreAgentsResponse(\n        agents=[\n            backend.server.v2.store.model.StoreAgent(\n                slug=\"top-agent\",\n                agent_name=\"Top Agent\",\n                agent_image=\"top.jpg\",\n                creator=\"creator1\",\n                creator_avatar=\"avatar1.jpg\",\n                sub_heading=\"Top agent subheading\",\n                description=\"Top agent description\",\n                runs=1000,\n                rating=5.0,\n            )\n        ],\n        pagination=backend.server.v2.store.model.Pagination(\n            current_page=1,\n            total_items=1,\n            total_pages=1,\n            page_size=20,\n        ),\n    )\n    mock_db_call = mocker.patch(\"backend.server.v2.store.db.get_store_agents\")\n    mock_db_call.return_value = mocked_value\n    response = client.get(\"/agents?sorted_by=runs\")\n    assert response.status_code == 200\n    data = backend.server.v2.store.model.StoreAgentsResponse.model_validate(\n        response.json()\n    )\n    assert len(data.agents) == 1\n    assert data.agents[0].runs == 1000\n    mock_db_call.assert_called_once_with(\n        featured=False,\n        creator=None,\n        sorted_by=\"runs\",\n        search_query=None,\n        category=None,\n        page=1,\n        page_size=20,\n    )\n\n\ndef test_get_agents_search(mocker: pytest_mock.MockFixture):\n    mocked_value = backend.server.v2.store.model.StoreAgentsResponse(\n        agents=[\n            backend.server.v2.store.model.StoreAgent(\n                slug=\"search-agent\",\n                agent_name=\"Search Agent\",\n                agent_image=\"search.jpg\",\n                creator=\"creator1\",\n                creator_avatar=\"avatar1.jpg\",\n                sub_heading=\"Search agent subheading\",\n                description=\"Specific search term description\",\n                runs=75,\n                rating=4.2,\n            )\n        ],\n        pagination=backend.server.v2.store.model.Pagination(\n            current_page=1,\n            total_items=1,\n            total_pages=1,\n            page_size=20,\n        ),\n    )\n    mock_db_call = mocker.patch(\"backend.server.v2.store.db.get_store_agents\")\n    mock_db_call.return_value = mocked_value\n    response = client.get(\"/agents?search_query=specific\")\n    assert response.status_code == 200\n    data = backend.server.v2.store.model.StoreAgentsResponse.model_validate(\n        response.json()\n    )\n    assert len(data.agents) == 1\n    assert \"specific\" in data.agents[0].description.lower()\n    mock_db_call.assert_called_once_with(\n        featured=False,\n        creator=None,\n        sorted_by=None,\n        search_query=\"specific\",\n        category=None,\n        page=1,\n        page_size=20,\n    )\n\n\ndef test_get_agents_category(mocker: pytest_mock.MockFixture):\n    mocked_value = backend.server.v2.store.model.StoreAgentsResponse(\n        agents=[\n            backend.server.v2.store.model.StoreAgent(\n                slug=\"category-agent\",\n                agent_name=\"Category Agent\",\n                agent_image=\"category.jpg\",\n                creator=\"creator1\",\n                creator_avatar=\"avatar1.jpg\",\n                sub_heading=\"Category agent subheading\",\n                description=\"Category agent description\",\n                runs=60,\n                rating=4.1,\n            )\n        ],\n        pagination=backend.server.v2.store.model.Pagination(\n            current_page=1,\n            total_items=1,\n            total_pages=1,\n            page_size=20,\n        ),\n    )\n    mock_db_call = mocker.patch(\"backend.server.v2.store.db.get_store_agents\")\n    mock_db_call.return_value = mocked_value\n    response = client.get(\"/agents?category=test-category\")\n    assert response.status_code == 200\n    data = backend.server.v2.store.model.StoreAgentsResponse.model_validate(\n        response.json()\n    )\n    assert len(data.agents) == 1\n    mock_db_call.assert_called_once_with(\n        featured=False,\n        creator=None,\n        sorted_by=None,\n        search_query=None,\n        category=\"test-category\",\n        page=1,\n        page_size=20,\n    )\n\n\ndef test_get_agents_pagination(mocker: pytest_mock.MockFixture):\n    mocked_value = backend.server.v2.store.model.StoreAgentsResponse(\n        agents=[\n            backend.server.v2.store.model.StoreAgent(\n                slug=f\"agent-{i}\",\n                agent_name=f\"Agent {i}\",\n                agent_image=f\"agent{i}.jpg\",\n                creator=\"creator1\",\n                creator_avatar=\"avatar1.jpg\",\n                sub_heading=f\"Agent {i} subheading\",\n                description=f\"Agent {i} description\",\n                runs=i * 10,\n                rating=4.0,\n            )\n            for i in range(5)\n        ],\n        pagination=backend.server.v2.store.model.Pagination(\n            current_page=2,\n            total_items=15,\n            total_pages=3,\n            page_size=5,\n        ),\n    )\n    mock_db_call = mocker.patch(\"backend.server.v2.store.db.get_store_agents\")\n    mock_db_call.return_value = mocked_value\n    response = client.get(\"/agents?page=2&page_size=5\")\n    assert response.status_code == 200\n    data = backend.server.v2.store.model.StoreAgentsResponse.model_validate(\n        response.json()\n    )\n    assert len(data.agents) == 5\n    assert data.pagination.current_page == 2\n    assert data.pagination.page_size == 5\n    mock_db_call.assert_called_once_with(\n        featured=False,\n        creator=None,\n        sorted_by=None,\n        search_query=None,\n        category=None,\n        page=2,\n        page_size=5,\n    )\n\n\ndef test_get_agents_malformed_request(mocker: pytest_mock.MockFixture):\n    # Test with invalid page number\n    response = client.get(\"/agents?page=-1\")\n    assert response.status_code == 422\n\n    # Test with invalid page size\n    response = client.get(\"/agents?page_size=0\")\n    assert response.status_code == 422\n\n    # Test with non-numeric values\n    response = client.get(\"/agents?page=abc&page_size=def\")\n    assert response.status_code == 422\n\n    # Verify no DB calls were made\n    mock_db_call = mocker.patch(\"backend.server.v2.store.db.get_store_agents\")\n    mock_db_call.assert_not_called()\n\n\ndef test_get_agent_details(mocker: pytest_mock.MockFixture):\n    mocked_value = backend.server.v2.store.model.StoreAgentDetails(\n        store_listing_version_id=\"test-version-id\",\n        slug=\"test-agent\",\n        agent_name=\"Test Agent\",\n        agent_video=\"video.mp4\",\n        agent_image=[\"image1.jpg\", \"image2.jpg\"],\n        creator=\"creator1\",\n        creator_avatar=\"avatar1.jpg\",\n        sub_heading=\"Test agent subheading\",\n        description=\"Test agent description\",\n        categories=[\"category1\", \"category2\"],\n        runs=100,\n        rating=4.5,\n        versions=[\"1.0.0\", \"1.1.0\"],\n        last_updated=datetime.datetime.now(),\n    )\n    mock_db_call = mocker.patch(\"backend.server.v2.store.db.get_store_agent_details\")\n    mock_db_call.return_value = mocked_value\n\n    response = client.get(\"/agents/creator1/test-agent\")\n    assert response.status_code == 200\n\n    data = backend.server.v2.store.model.StoreAgentDetails.model_validate(\n        response.json()\n    )\n    assert data.agent_name == \"Test Agent\"\n    assert data.creator == \"creator1\"\n    mock_db_call.assert_called_once_with(username=\"creator1\", agent_name=\"test-agent\")\n\n\ndef test_get_creators_defaults(mocker: pytest_mock.MockFixture):\n    mocked_value = backend.server.v2.store.model.CreatorsResponse(\n        creators=[],\n        pagination=backend.server.v2.store.model.Pagination(\n            current_page=0,\n            total_items=0,\n            total_pages=0,\n            page_size=10,\n        ),\n    )\n    mock_db_call = mocker.patch(\"backend.server.v2.store.db.get_store_creators\")\n    mock_db_call.return_value = mocked_value\n\n    response = client.get(\"/creators\")\n    assert response.status_code == 200\n\n    data = backend.server.v2.store.model.CreatorsResponse.model_validate(\n        response.json()\n    )\n    assert data.pagination.total_pages == 0\n    assert data.creators == []\n    mock_db_call.assert_called_once_with(\n        featured=False, search_query=None, sorted_by=None, page=1, page_size=20\n    )\n\n\ndef test_get_creators_pagination(mocker: pytest_mock.MockFixture):\n    mocked_value = backend.server.v2.store.model.CreatorsResponse(\n        creators=[\n            backend.server.v2.store.model.Creator(\n                name=f\"Creator {i}\",\n                username=f\"creator{i}\",\n                description=f\"Creator {i} description\",\n                avatar_url=f\"avatar{i}.jpg\",\n                num_agents=1,\n                agent_rating=4.5,\n                agent_runs=100,\n                is_featured=False,\n            )\n            for i in range(5)\n        ],\n        pagination=backend.server.v2.store.model.Pagination(\n            current_page=2,\n            total_items=15,\n            total_pages=3,\n            page_size=5,\n        ),\n    )\n    mock_db_call = mocker.patch(\"backend.server.v2.store.db.get_store_creators\")\n    mock_db_call.return_value = mocked_value\n\n    response = client.get(\"/creators?page=2&page_size=5\")\n    assert response.status_code == 200\n\n    data = backend.server.v2.store.model.CreatorsResponse.model_validate(\n        response.json()\n    )\n    assert len(data.creators) == 5\n    assert data.pagination.current_page == 2\n    assert data.pagination.page_size == 5\n    mock_db_call.assert_called_once_with(\n        featured=False, search_query=None, sorted_by=None, page=2, page_size=5\n    )\n\n\ndef test_get_creators_malformed_request(mocker: pytest_mock.MockFixture):\n    # Test with invalid page number\n    response = client.get(\"/creators?page=-1\")\n    assert response.status_code == 422\n\n    # Test with invalid page size\n    response = client.get(\"/creators?page_size=0\")\n    assert response.status_code == 422\n\n    # Test with non-numeric values\n    response = client.get(\"/creators?page=abc&page_size=def\")\n    assert response.status_code == 422\n\n    # Verify no DB calls were made\n    mock_db_call = mocker.patch(\"backend.server.v2.store.db.get_store_creators\")\n    mock_db_call.assert_not_called()\n\n\ndef test_get_creator_details(mocker: pytest_mock.MockFixture):\n    mocked_value = backend.server.v2.store.model.CreatorDetails(\n        name=\"Test User\",\n        username=\"creator1\",\n        description=\"Test creator description\",\n        links=[\"link1.com\", \"link2.com\"],\n        avatar_url=\"avatar.jpg\",\n        agent_rating=4.8,\n        agent_runs=1000,\n        top_categories=[\"category1\", \"category2\"],\n    )\n    mock_db_call = mocker.patch(\"backend.server.v2.store.db.get_store_creator_details\")\n    mock_db_call.return_value = mocked_value\n\n    response = client.get(\"/creator/creator1\")\n    assert response.status_code == 200\n\n    data = backend.server.v2.store.model.CreatorDetails.model_validate(response.json())\n    assert data.username == \"creator1\"\n    assert data.name == \"Test User\"\n    mock_db_call.assert_called_once_with(username=\"creator1\")\n\n\ndef test_get_submissions_success(mocker: pytest_mock.MockFixture):\n    mocked_value = backend.server.v2.store.model.StoreSubmissionsResponse(\n        submissions=[\n            backend.server.v2.store.model.StoreSubmission(\n                name=\"Test Agent\",\n                description=\"Test agent description\",\n                image_urls=[\"test.jpg\"],\n                date_submitted=datetime.datetime.now(),\n                status=prisma.enums.SubmissionStatus.APPROVED,\n                runs=50,\n                rating=4.2,\n                agent_id=\"test-agent-id\",\n                agent_version=1,\n                sub_heading=\"Test agent subheading\",\n                slug=\"test-agent\",\n            )\n        ],\n        pagination=backend.server.v2.store.model.Pagination(\n            current_page=1,\n            total_items=1,\n            total_pages=1,\n            page_size=20,\n        ),\n    )\n    mock_db_call = mocker.patch(\"backend.server.v2.store.db.get_store_submissions\")\n    mock_db_call.return_value = mocked_value\n\n    response = client.get(\"/submissions\")\n    assert response.status_code == 200\n\n    data = backend.server.v2.store.model.StoreSubmissionsResponse.model_validate(\n        response.json()\n    )\n    assert len(data.submissions) == 1\n    assert data.submissions[0].name == \"Test Agent\"\n    assert data.pagination.current_page == 1\n    mock_db_call.assert_called_once_with(user_id=\"test-user-id\", page=1, page_size=20)\n\n\ndef test_get_submissions_pagination(mocker: pytest_mock.MockFixture):\n    mocked_value = backend.server.v2.store.model.StoreSubmissionsResponse(\n        submissions=[],\n        pagination=backend.server.v2.store.model.Pagination(\n            current_page=2,\n            total_items=10,\n            total_pages=2,\n            page_size=5,\n        ),\n    )\n    mock_db_call = mocker.patch(\"backend.server.v2.store.db.get_store_submissions\")\n    mock_db_call.return_value = mocked_value\n\n    response = client.get(\"/submissions?page=2&page_size=5\")\n    assert response.status_code == 200\n\n    data = backend.server.v2.store.model.StoreSubmissionsResponse.model_validate(\n        response.json()\n    )\n    assert data.pagination.current_page == 2\n    assert data.pagination.page_size == 5\n    mock_db_call.assert_called_once_with(user_id=\"test-user-id\", page=2, page_size=5)\n\n\ndef test_get_submissions_malformed_request(mocker: pytest_mock.MockFixture):\n    # Test with invalid page number\n    response = client.get(\"/submissions?page=-1\")\n    assert response.status_code == 422\n\n    # Test with invalid page size\n    response = client.get(\"/submissions?page_size=0\")\n    assert response.status_code == 422\n\n    # Test with non-numeric values\n    response = client.get(\"/submissions?page=abc&page_size=def\")\n    assert response.status_code == 422\n\n    # Verify no DB calls were made\n    mock_db_call = mocker.patch(\"backend.server.v2.store.db.get_store_submissions\")\n    mock_db_call.assert_not_called()\n",
    "children": [
        {
            "type": "block",
            "start_token": 0,
            "end_token": 3516,
            "label": "import datetime\n\nimport autogpt_libs.auth.depends\nimport autogpt_libs.auth.middleware\nimport fastapi\nimport fastapi.testclient\nimport prisma.enums\nimport pytest_mock\n\nimport backend.server.v2.store.model\nimport backend.server.v2.store.routes\n\napp = fastapi.FastAPI()\napp.include_router(backend.server.v2.store.routes.router)\n\nclient = fastapi.testclient.TestClient(app)\n\n\ndef override_auth_middleware():\n    \"\"\"Override auth middleware for testing\"\"\"\n    return {\"sub\": \"test-user-id\"}\n\n\ndef override_get_user_id():\n    \"\"\"Override get_user_id for testing\"\"\"\n    return \"test-user-id\"\n\n\napp.dependency_overrides[autogpt_libs.auth.middleware.auth_middleware] = (\n    override_auth_middleware\n)\napp.dependency_overrides[autogpt_libs.auth.depends.get_user_id] = override_get_user_id\n\n\ndef test_get_agents_defaults(mocker: pytest_mock.MockFixture):\n    mocked_value = backend.server.v2.store.model.StoreAgentsResponse(\n        agents=[],\n        pagination=backend.server.v2.store.model.Pagination(\n            current_page=0,\n            total_items=0,\n            total_pages=0,\n            page_size=10,\n        ),\n    )\n    mock_db_call = mocker.patch(\"backend.server.v2.store.db.get_store_agents\")\n    mock_db_call.return_value = mocked_value\n    response = client.get(\"/agents\")\n    assert response.status_code == 200\n\n    data = backend.server.v2.store.model.StoreAgentsResponse.model_validate(\n        response.json()\n    )\n    assert data.pagination.total_pages == 0\n    assert data.agents == []\n    mock_db_call.assert_called_once_with(\n        featured=False,\n        creator=None,\n        sorted_by=None,\n        search_query=None,\n        category=None,\n        page=1,\n        page_size=20,\n    )\n\n\ndef test_get_agents_featured(mocker: pytest_mock.MockFixture):\n    mocked_value = backend.server.v2.store.model.StoreAgentsResponse(\n        agents=[\n            backend.server.v2.store.model.StoreAgent(\n                slug=\"featured-agent\",\n                agent_name=\"Featured Agent\",\n                agent_image=\"featured.jpg\",\n                creator=\"creator1\",\n                creator_avatar=\"avatar1.jpg\",\n                sub_heading=\"Featured agent subheading\",\n                description=\"Featured agent description\",\n                runs=100,\n                rating=4.5,\n            )\n        ],\n        pagination=backend.server.v2.store.model.Pagination(\n            current_page=1,\n            total_items=1,\n            total_pages=1,\n            page_size=20,\n        ),\n    )\n    mock_db_call = mocker.patch(\"backend.server.v2.store.db.get_store_agents\")\n    mock_db_call.return_value = mocked_value\n    response = client.get(\"/agents?featured=true\")\n    assert response.status_code == 200\n    data = backend.server.v2.store.model.StoreAgentsResponse.model_validate(\n        response.json()\n    )\n    assert len(data.agents) == 1\n    assert data.agents[0].slug == \"featured-agent\"\n    mock_db_call.assert_called_once_with(\n        featured=True,\n        creator=None,\n        sorted_by=None,\n        search_query=None,\n        category=None,\n        page=1,\n        page_size=20,\n    )\n\n\ndef test_get_agents_by_creator(mocker: pytest_mock.MockFixture):\n    mocked_value = backend.server.v2.store.model.StoreAgentsResponse(\n        agents=[\n            backend.server.v2.store.model.StoreAgent(\n                slug=\"creator-agent\",\n                agent_name=\"Creator Agent\",\n                agent_image=\"agent.jpg\",\n                creator=\"specific-creator\",\n                creator_avatar=\"avatar.jpg\",\n                sub_heading=\"Creator agent subheading\",\n                description=\"Creator agent description\",\n                runs=50,\n                rating=4.0,\n            )\n        ],\n        pagination=backend.server.v2.store.model.Pagination(\n            current_page=1,\n            total_items=1,\n            total_pages=1,\n            page_size=20,\n        ),\n    )\n    mock_db_call = mocker.patch(\"backend.server.v2.store.db.get_store_agents\")\n    mock_db_call.return_value = mocked_value\n    response = client.get(\"/agents?creator=specific-creator\")\n    assert response.status_code == 200\n    data = backend.server.v2.store.model.StoreAgentsResponse.model_validate(\n        response.json()\n    )\n    assert len(data.agents) == 1\n    assert data.agents[0].creator == \"specific-creator\"\n    mock_db_call.assert_called_once_with(\n        featured=False,\n        creator=\"specific-creator\",\n        sorted_by=None,\n        search_query=None,\n        category=None,\n        page=1,\n        page_size=20,\n    )\n\n\ndef test_get_agents_sorted(mocker: pytest_mock.MockFixture):\n    mocked_value = backend.server.v2.store.model.StoreAgentsResponse(\n        agents=[\n            backend.server.v2.store.model.StoreAgent(\n                slug=\"top-agent\",\n                agent_name=\"Top Agent\",\n                agent_image=\"top.jpg\",\n                creator=\"creator1\",\n                creator_avatar=\"avatar1.jpg\",\n                sub_heading=\"Top agent subheading\",\n                description=\"Top agent description\",\n                runs=1000,\n                rating=5.0,\n            )\n        ],\n        pagination=backend.server.v2.store.model.Pagination(\n            current_page=1,\n            total_items=1,\n            total_pages=1,\n            page_size=20,\n        ),\n    )\n    mock_db_call = mocker.patch(\"backend.server.v2.store.db.get_store_agents\")\n    mock_db_call.return_value = mocked_value\n    response = client.get(\"/agents?sorted_by=runs\")\n    assert response.status_code == 200\n    data = backend.server.v2.store.model.StoreAgentsResponse.model_validate(\n        response.json()\n    )\n    assert len(data.agents) == 1\n    assert data.agents[0].runs == 1000\n    mock_db_call.assert_called_once_with(\n        featured=False,\n        creator=None,\n        sorted_by=\"runs\",\n        search_query=None,\n        category=None,\n        page=1,\n        page_size=20,\n    )\n\n\ndef test_get_agents_search(mocker: pytest_mock.MockFixture):\n    mocked_value = backend.server.v2.store.model.StoreAgentsResponse(\n        agents=[\n            backend.server.v2.store.model.StoreAgent(\n                slug=\"search-agent\",\n                agent_name=\"Search Agent\",\n                agent_image=\"search.jpg\",\n                creator=\"creator1\",\n                creator_avatar=\"avatar1.jpg\",\n                sub_heading=\"Search agent subheading\",\n                description=\"Specific search term description\",\n                runs=75,\n                rating=4.2,\n            )\n        ],\n        pagination=backend.server.v2.store.model.Pagination(\n            current_page=1,\n            total_items=1,\n            total_pages=1,\n            page_size=20,\n        ),\n    )\n    mock_db_call = mocker.patch(\"backend.server.v2.store.db.get_store_agents\")\n    mock_db_call.return_value = mocked_value\n    response = client.get(\"/agents?search_query=specific\")\n    assert response.status_code == 200\n    data = backend.server.v2.store.model.StoreAgentsResponse.model_validate(\n        response.json()\n    )\n    assert len(data.agents) == 1\n    assert \"specific\" in data.agents[0].description.lower()\n    mock_db_call.assert_called_once_with(\n        featured=False,\n        creator=None,\n        sorted_by=None,\n        search_query=\"specific\",\n        category=None,\n        page=1,\n        page_size=20,\n    )\n\n\ndef test_get_agents_category(mocker: pytest_mock.MockFixture):\n    mocked_value = backend.server.v2.store.model.StoreAgentsResponse(\n        agents=[\n            backend.server.v2.store.model.StoreAgent(\n                slug=\"category-agent\",\n                agent_name=\"Category Agent\",\n                agent_image=\"category.jpg\",\n                creator=\"creator1\",\n                creator_avatar=\"avatar1.jpg\",\n                sub_heading=\"Category agent subheading\",\n                description=\"Category agent description\",\n                runs=60,\n                rating=4.1,\n            )\n        ],\n        pagination=backend.server.v2.store.model.Pagination(\n            current_page=1,\n            total_items=1,\n            total_pages=1,\n            page_size=20,\n        ),\n    )\n    mock_db_call = mocker.patch(\"backend.server.v2.store.db.get_store_agents\")\n    mock_db_call.return_value = mocked_value\n    response = client.get(\"/agents?category=test-category\")\n    assert response.status_code == 200\n    data = backend.server.v2.store.model.StoreAgentsResponse.model_validate(\n        response.json()\n    )\n    assert len(data.agents) == 1\n    mock_db_call.assert_called_once_with(\n        featured=False,\n        creator=None,\n        sorted_by=None,\n        search_query=None,\n        category=\"test-category\",\n        page=1,\n        page_size=20,\n    )\n\n\ndef test_get_agents_pagination(mocker: pytest_mock.MockFixture):\n    mocked_value = backend.server.v2.store.model.StoreAgentsResponse(\n        agents=[\n            backend.server.v2.store.model.StoreAgent(\n                slug=f\"agent-{i}\",\n                agent_name=f\"Agent {i}\",\n                agent_image=f\"agent{i}.jpg\",\n                creator=\"creator1\",\n                creator_avatar=\"avatar1.jpg\",\n                sub_heading=f\"Agent {i} subheading\",\n                description=f\"Agent {i} description\",\n                runs=i * 10,\n                rating=4.0,\n            )\n            for i in range(5)\n        ],\n        pagination=backend.server.v2.store.model.Pagination(\n            current_page=2,\n            total_items=15,\n            total_pages=3,\n            page_size=5,\n        ),\n    )\n    mock_db_call = mocker.patch(\"backend.server.v2.store.db.get_store_agents\")\n    mock_db_call.return_value = mocked_value\n    response = client.get(\"/agents?page=2&page_size=5\")\n    assert response.status_code == 200\n    data = backend.server.v2.store.model.StoreAgentsResponse.model_validate(\n        response.json()\n    )\n    assert len(data.agents) == 5\n    assert data.pagination.current_page == 2\n    assert data.pagination.page_size == 5\n    mock_db_call.assert_called_once_with(\n        featured=False,\n        creator=None,\n        sorted_by=None,\n        search_query=None,\n        category=None,\n        page=2,\n        page_size=5,\n    )\n\n\ndef test_get_agents_malformed_request(mocker: pytest_mock.MockFixture):\n    # Test with invalid page number\n    response = client.get(\"/agents?page=-1\")\n    assert response.status_code == 422\n\n    # Test with invalid page size\n    response = client.get(\"/agents?page_size=0\")\n    assert response.status_code == 422\n\n    # Test with non-numeric values\n    response = client.get(\"/agents?page=abc&page_size=def\")\n    assert response.status_code == 422\n\n    # Verify no DB calls were made\n    mock_db_call = mocker.patch(\"backend.server.v2.store.db.get_store_agents\")\n    mock_db_call.assert_not_called()\n\n\ndef test_get_agent_details(mocker: pytest_mock.MockFixture):\n    mocked_value = backend.server.v2.store.model.StoreAgentDetails(\n        store_listing_version_id=\"test-version-id\",\n        slug=\"test-agent\",\n        agent_name=\"Test Agent\",\n        agent_video=\"video.mp4\",\n        agent_image=[\"image1.jpg\", \"image2.jpg\"],\n        creator=\"creator1\",\n        creator_avatar=\"avatar1.jpg\",\n        sub_heading=\"Test agent subheading\",\n        description=\"Test agent description\",\n        categories=[\"category1\", \"category2\"],\n        runs=100,\n        rating=4.5,\n        versions=[\"1.0.0\", \"1.1.0\"],\n        last_updated=datetime.datetime.now(),\n    )\n    mock_db_call = mocker.patch(\"backend.server.v2.store.db.get_store_agent_details\")\n    mock_db_call.return_value = mocked_value\n\n    response = client.get(\"/agents/creator1/test-agent\")\n    assert response.status_code == 200\n\n    data = backend.server.v2.store.model.StoreAgentDetails.model_validate(\n        response.json()\n    )\n    assert data.agent_name == \"Test Agent\"\n    assert data.creator == \"creator1\"\n    mock_db_call.assert_called_once_with(username=\"creator1\", agent_name=\"test-agent\")\n\n\ndef test_get_creators_defaults(mocker: pytest_mock.MockFixture):\n    mocked_value = backend.server.v2.store.model.CreatorsResponse(\n        creators=[],\n        pagination=backend.server.v2.store.model.Pagination(\n            current_page=0,\n            total_items=0,\n            total_pages=0,\n            page_size=10,\n        ),\n    )\n    mock_db_call = mocker.patch(\"backend.server.v2.store.db.get_store_creators\")\n    mock_db_call.return_value = mocked_value\n\n    response = client.get(\"/creators\")\n    assert response.status_code == 200\n\n    data = backend.server.v2.store.model.CreatorsResponse.model_validate(\n        response.json()\n    )\n    assert data.pagination.total_pages == 0\n    assert data.creators == []\n    mock_db_call.assert_called_once_with(\n        featured=False, search_query=None, sorted_by=None, page=1, page_size=20\n    )\n\n\ndef test_get_creators_pagination(mocker: pytest_mock.MockFixture):\n    mocked_value = backend.server.v2.store.model.CreatorsResponse(\n        creators=[\n            backend.server.v2.store.model.Creator(\n                name=f\"Creator {i}\",\n                username=f\"creator{i}\",\n                description=f\"Creator {i} description\",\n                avatar_url=f\"avatar{i}.jpg\",\n                num_agents=1,\n                agent_rating=4.5,\n                agent_runs=100,\n                is_featured=False,\n            )\n            for i in range(5)\n        ],\n        pagination=backend.server.v2.store.model.Pagination(\n            current_page=2,\n            total_items=15,\n            total_pages=3,\n            page_size=5,\n        ),\n    )\n    mock_db_call = mocker.patch(\"backend.server.v2.store.db.get_store_creators\")\n    mock_db_call.return_value = mocked_value\n\n    response = client.get(\"/creators?page=2&page_size=5\")\n    assert response.status_code == 200\n\n    data = backend.server.v2.store.model.CreatorsResponse.model_validate(\n        response.json()\n    )\n    assert len(data.creators) == 5\n    assert data.pagination.current_page == 2\n    assert data.pagination.page_size == 5\n    mock_db_call.assert_called_once_with(\n        featured=False, search_query=None, sorted_by=None, page=2, page_size=5\n    )\n\n\ndef test_get_creators_malformed_request(mocker: pytest_mock.MockFixture):\n    # Test with invalid page number\n    response = client.get(\"/creators?page=-1\")\n    assert response.status_code == 422\n\n    # Test with invalid page size\n    response = client.get(\"/creators?page_size=0\")\n    assert response.status_code == 422\n\n    # Test with non-numeric values\n    response = client.get(\"/creators?page=abc&page_size=def\")\n    assert response.status_code == 422\n\n    # Verify no DB calls were made\n    mock_db_call = mocker.patch(\"backend.server.v2.store.db.get_store_creators\")\n    mock_db_call.assert_not_called()\n\n\ndef test_get_creator_details(mocker: pytest_mock.MockFixture):\n    mocked_value = backend.server.v2.store.model.CreatorDetails(\n        name=\"Test User\",\n        username=\"creator1\",\n        description=\"Test creator description\",\n        links=[\"link1.com\", \"link2.com\"],\n        avatar_url=\"avatar.jpg\",\n        agent_rating=4.8,\n        agent_runs=1000,\n        top_categories=[\"category1\", \"category2\"],\n    )\n    mock_db_call = mocker.patch(\"backend.server.v2.store.db.get_store_creator_details\")\n    mock_db_call.return_value = mocked_value\n\n    response = client.get(\"/creator/creator1\")\n    assert response.status_code == 200\n\n    data = backend.server.v2.store.model.CreatorDetails.model_validate(response.json())\n    assert data.username == \"creator1\"\n    assert data.name == \"Test User\"\n    mock_db_call.assert_called_once_with(username=\"creator1\")\n\n\ndef test_get_submissions_success(mocker: pytest_mock.MockFixture):\n    mocked_value = backend.server.v2.store.model.StoreSubmissionsResponse(\n        submissions=[\n            backend.server.v2.store.model.StoreSubmission(\n                name=\"Test Agent\",\n                description=\"Test agent description\",\n                image_urls=[\"test.jpg\"],\n                date_submitted=datetime.datetime.now(),\n                status=prisma.enums.SubmissionStatus.APPROVED,\n                runs=50,\n                rating=4.2,\n                agent_id=\"test-agent-id\",\n                agent_version=1,\n                sub_heading=\"Test agent subheading\",\n                slug=\"test-agent\",\n            )\n        ],\n        pagination=backend.server.v2.store.model.Pagination(\n            current_page=1,\n            total_items=1,\n            total_pages=1,\n            page_size=20,\n        ),\n    )\n    mock_db_call = mocker.patch(\"backend.server.v2.store.db.get_store_submissions\")\n    mock_db_call.return_value = mocked_value\n\n    response = client.get(\"/submissions\")\n    assert response.status_code == 200\n\n    data = backend.server.v2.store.model.StoreSubmissionsResponse.model_validate(\n        response.json()\n    )\n    assert len(data.submissions) == 1\n    assert data.submissions[0].name == \"Test Agent\"\n    assert data.pagination.current_page == 1\n    mock_db_call.assert_called_once_with(user_id=\"test-user-id\", page=1, page_size=20)\n\n\ndef test_get_submissions_pagination(mocker: pytest_mock.MockFixture):\n    mocked_value = backend.server.v2.store.model.StoreSubmissionsResponse(\n        submissions=[],\n        pagination=backend.server.v2.store.model.Pagination(\n            current_page=2,\n            total_items=10,\n            total_pages=2,\n            page_size=5,\n        ),\n    )\n    mock_db_call = mocker.patch(\"backend.server.v2.store.db.get_store_submissions\")\n    mock_db_call.return_value = mocked_value\n\n    response = client.get(\"/submissions?page=2&page_size=5\")\n    assert response.status_code == 200\n\n    data = backend.server.v2.store.model.StoreSubmissionsResponse.model_validate(\n        response.json()\n    )\n    assert data.pagination.current_page == 2\n    assert data.pagination.page_size == 5\n    mock_db_call.assert_called_once_with(user_id=\"test-user-id\", page=2, page_size=5)\n\n\ndef test_get_submissions_malformed_request(mocker: pytest_mock.MockFixture):\n    # Test with invalid page number\n    response = client.get(\"/submissions?page=-1\")\n    assert response.status_code == 422\n\n    # Test with invalid page size\n    response = client.get(\"/submissions?page_size=0\")\n    assert response.status_code == 422\n\n    # Test with non-numeric values\n    response = client.get(\"/submissions?page=abc&page_size=def\")\n    assert response.status_code == 422\n\n    # Verify no DB calls were made\n    mock_db_call = mocker.patch(\"backend.server.v2.store.db.get_store_submissions\")\n    mock_db_call.assert_not_called()\n",
            "children": [
                {
                    "type": "import_statement",
                    "start_token": 0,
                    "end_token": 1,
                    "label": "import datetime",
                    "children": []
                },
                {
                    "type": "import_statement",
                    "start_token": 4,
                    "end_token": 9,
                    "label": "import autogpt_libs.auth.depends",
                    "children": [
                        {
                            "type": "dotted_name",
                            "start_token": 5,
                            "end_token": 9,
                            "label": "autogpt_libs.auth.depends",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "import_statement",
                    "start_token": 11,
                    "end_token": 16,
                    "label": "import autogpt_libs.auth.middleware",
                    "children": [
                        {
                            "type": "dotted_name",
                            "start_token": 12,
                            "end_token": 16,
                            "label": "autogpt_libs.auth.middleware",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "import_statement",
                    "start_token": 18,
                    "end_token": 19,
                    "label": "import fastapi",
                    "children": []
                },
                {
                    "type": "import_statement",
                    "start_token": 21,
                    "end_token": 25,
                    "label": "import fastapi.testclient\n",
                    "children": [
                        {
                            "type": "dotted_name",
                            "start_token": 22,
                            "end_token": 25,
                            "label": "fastapi.testclient\n",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "import_statement",
                    "start_token": 26,
                    "end_token": 29,
                    "label": "import prisma.enums",
                    "children": [
                        {
                            "type": "dotted_name",
                            "start_token": 27,
                            "end_token": 29,
                            "label": "prisma.enums",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "import_statement",
                    "start_token": 31,
                    "end_token": 32,
                    "label": "import pytest_mock",
                    "children": []
                },
                {
                    "type": "import_statement",
                    "start_token": 35,
                    "end_token": 44,
                    "label": "import backend.server.v2.store.model",
                    "children": [
                        {
                            "type": "dotted_name",
                            "start_token": 36,
                            "end_token": 44,
                            "label": "backend.server.v2.store.model",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "import_statement",
                    "start_token": 46,
                    "end_token": 55,
                    "label": "import backend.server.v2.store.routes",
                    "children": [
                        {
                            "type": "dotted_name",
                            "start_token": 47,
                            "end_token": 55,
                            "label": "backend.server.v2.store.routes",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "assignment",
                    "start_token": 58,
                    "end_token": 64,
                    "label": "app = fastapi.FastAPI()",
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 58,
                            "end_token": 58,
                            "label": "app",
                            "children": []
                        },
                        {
                            "type": "call",
                            "start_token": 60,
                            "end_token": 64,
                            "label": "fastapi.FastAPI()",
                            "children": [
                                {
                                    "type": "attribute",
                                    "start_token": 60,
                                    "end_token": 62,
                                    "label": "fastapi.FastAPI",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 60,
                                            "end_token": 60,
                                            "label": "fastapi",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "start_token": 62,
                                            "end_token": 62,
                                            "label": "FastAPI",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "start_token": 63,
                                    "end_token": 64,
                                    "label": "()",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "call",
                    "start_token": 66,
                    "end_token": 81,
                    "label": "app.include_router(backend.server.v2.store.routes.router)",
                    "children": [
                        {
                            "type": "attribute",
                            "start_token": 66,
                            "end_token": 68,
                            "label": "app.include_router",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 66,
                                    "end_token": 66,
                                    "label": "app",
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "start_token": 68,
                                    "end_token": 68,
                                    "label": "include_router",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "argument_list",
                            "start_token": 69,
                            "end_token": 81,
                            "label": "(backend.server.v2.store.routes.router)",
                            "children": [
                                {
                                    "type": "attribute",
                                    "start_token": 70,
                                    "end_token": 80,
                                    "label": "backend.server.v2.store.routes.router",
                                    "children": [
                                        {
                                            "type": "dotted_name",
                                            "start_token": 70,
                                            "end_token": 78,
                                            "label": "backend.server.v2.store.routes",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "start_token": 80,
                                            "end_token": 80,
                                            "label": "router",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "assignment",
                    "start_token": 84,
                    "end_token": 93,
                    "label": "client = fastapi.testclient.TestClient(app)",
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 84,
                            "end_token": 84,
                            "label": "client",
                            "children": []
                        },
                        {
                            "type": "call",
                            "start_token": 86,
                            "end_token": 93,
                            "label": "fastapi.testclient.TestClient(app)",
                            "children": [
                                {
                                    "type": "attribute",
                                    "start_token": 86,
                                    "end_token": 90,
                                    "label": "fastapi.testclient.TestClient",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "start_token": 86,
                                            "end_token": 88,
                                            "label": "fastapi.testclient",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 86,
                                                    "end_token": 86,
                                                    "label": "fastapi",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "start_token": 88,
                                                    "end_token": 88,
                                                    "label": "testclient",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "identifier",
                                            "start_token": 90,
                                            "end_token": 90,
                                            "label": "TestClient",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "start_token": 91,
                                    "end_token": 93,
                                    "label": "(app)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 92,
                                            "end_token": 92,
                                            "label": "app",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "start_token": 97,
                    "end_token": 112,
                    "label": "def override_auth_middleware():\n    \"\"\"Override auth middleware for testing\"\"\"\n    return {\"sub\": \"test-user-id\"}",
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 97,
                            "end_token": 98,
                            "label": "def override_auth_middleware",
                            "children": []
                        },
                        {
                            "type": "parameters",
                            "start_token": 99,
                            "end_token": 100,
                            "label": "()",
                            "children": []
                        },
                        {
                            "type": "block",
                            "start_token": 101,
                            "end_token": 112,
                            "label": ":\n    \"\"\"Override auth middleware for testing\"\"\"\n    return {\"sub\": \"test-user-id\"}",
                            "children": [
                                {
                                    "type": "string",
                                    "start_token": 103,
                                    "end_token": 105,
                                    "label": "\"\"\"Override auth middleware for testing\"\"\"",
                                    "children": []
                                },
                                {
                                    "type": "return_statement",
                                    "start_token": 107,
                                    "end_token": 112,
                                    "label": "return {\"sub\": \"test-user-id\"}",
                                    "children": [
                                        {
                                            "type": "dictionary",
                                            "start_token": 108,
                                            "end_token": 112,
                                            "label": "{\"sub\": \"test-user-id\"}",
                                            "children": [
                                                {
                                                    "type": "pair",
                                                    "start_token": 109,
                                                    "end_token": 112,
                                                    "label": "\"sub\": \"test-user-id\"}",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "start_token": 109,
                                                            "end_token": 109,
                                                            "label": "\"sub\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string",
                                                            "start_token": 111,
                                                            "end_token": 111,
                                                            "label": "\"test-user-id\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "start_token": 116,
                    "end_token": 128,
                    "label": "def override_get_user_id():\n    \"\"\"Override get_user_id for testing\"\"\"\n    return \"test-user-id\"\n",
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 116,
                            "end_token": 117,
                            "label": "def override_get_user_id",
                            "children": []
                        },
                        {
                            "type": "parameters",
                            "start_token": 118,
                            "end_token": 119,
                            "label": "()",
                            "children": []
                        },
                        {
                            "type": "block",
                            "start_token": 120,
                            "end_token": 128,
                            "label": ":\n    \"\"\"Override get_user_id for testing\"\"\"\n    return \"test-user-id\"\n",
                            "children": [
                                {
                                    "type": "string",
                                    "start_token": 122,
                                    "end_token": 124,
                                    "label": "\"\"\"Override get_user_id for testing\"\"\"",
                                    "children": []
                                },
                                {
                                    "type": "return_statement",
                                    "start_token": 126,
                                    "end_token": 127,
                                    "label": "return \"test-user-id\"",
                                    "children": [
                                        {
                                            "type": "string",
                                            "start_token": 127,
                                            "end_token": 127,
                                            "label": "\"test-user-id\"",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "assignment",
                    "start_token": 131,
                    "end_token": 148,
                    "label": "app.dependency_overrides[autogpt_libs.auth.middleware.auth_middleware] = (\n    override_auth_middleware\n)",
                    "children": [
                        {
                            "type": "attribute",
                            "start_token": 131,
                            "end_token": 141,
                            "label": "app.dependency_overrides[autogpt_libs.auth.middleware.auth_middleware",
                            "children": [
                                {
                                    "type": "attribute",
                                    "start_token": 131,
                                    "end_token": 139,
                                    "label": "app.dependency_overrides[autogpt_libs.auth.middleware",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "start_token": 131,
                                            "end_token": 137,
                                            "label": "app.dependency_overrides[autogpt_libs.auth",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 131,
                                                    "end_token": 131,
                                                    "label": "app",
                                                    "children": []
                                                },
                                                {
                                                    "type": "dotted_name",
                                                    "start_token": 133,
                                                    "end_token": 137,
                                                    "label": "dependency_overrides[autogpt_libs.auth",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "identifier",
                                            "start_token": 139,
                                            "end_token": 139,
                                            "label": "middleware",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "identifier",
                                    "start_token": 141,
                                    "end_token": 141,
                                    "label": "auth_middleware",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "parenthesized_expression",
                            "start_token": 144,
                            "end_token": 147,
                            "label": "(\n    override_auth_middleware\n",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 146,
                                    "end_token": 146,
                                    "label": "override_auth_middleware",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "assignment",
                    "start_token": 150,
                    "end_token": 164,
                    "label": "app.dependency_overrides[autogpt_libs.auth.depends.get_user_id] = override_get_user_id\n",
                    "children": [
                        {
                            "type": "attribute",
                            "start_token": 150,
                            "end_token": 160,
                            "label": "app.dependency_overrides[autogpt_libs.auth.depends.get_user_id",
                            "children": [
                                {
                                    "type": "attribute",
                                    "start_token": 150,
                                    "end_token": 158,
                                    "label": "app.dependency_overrides[autogpt_libs.auth.depends",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "start_token": 150,
                                            "end_token": 156,
                                            "label": "app.dependency_overrides[autogpt_libs.auth",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 150,
                                                    "end_token": 150,
                                                    "label": "app",
                                                    "children": []
                                                },
                                                {
                                                    "type": "dotted_name",
                                                    "start_token": 152,
                                                    "end_token": 156,
                                                    "label": "dependency_overrides[autogpt_libs.auth",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "identifier",
                                            "start_token": 158,
                                            "end_token": 158,
                                            "label": "depends",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "identifier",
                                    "start_token": 160,
                                    "end_token": 160,
                                    "label": "get_user_id",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "identifier",
                            "start_token": 163,
                            "end_token": 163,
                            "label": "override_get_user_id",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "start_token": 167,
                    "end_token": 356,
                    "label": "def test_get_agents_defaults(mocker: pytest_mock.MockFixture):\n    mocked_value = backend.server.v2.store.model.StoreAgentsResponse(\n        agents=[],\n        pagination=backend.server.v2.store.model.Pagination(\n            current_page=0,\n            total_items=0,\n            total_pages=0,\n            page_size=10,\n        ),\n    )\n    mock_db_call = mocker.patch(\"backend.server.v2.store.db.get_store_agents\")\n    mock_db_call.return_value = mocked_value\n    response = client.get(\"/agents\")\n    assert response.status_code == 200\n\n    data = backend.server.v2.store.model.StoreAgentsResponse.model_validate(\n        response.json()\n    )\n    assert data.pagination.total_pages == 0\n    assert data.agents == []\n    mock_db_call.assert_called_once_with(\n        featured=False,\n        creator=None,\n        sorted_by=None,\n        search_query=None,\n        category=None,\n        page=1,\n        page_size=20,\n    )",
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 167,
                            "end_token": 168,
                            "label": "def test_get_agents_defaults",
                            "children": []
                        },
                        {
                            "type": "parameters",
                            "start_token": 169,
                            "end_token": 175,
                            "label": "(mocker: pytest_mock.MockFixture)",
                            "children": [
                                {
                                    "type": "default_parameter",
                                    "start_token": 170,
                                    "end_token": 174,
                                    "label": "mocker: pytest_mock.MockFixture",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 170,
                                            "end_token": 170,
                                            "label": "mocker",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "start_token": 172,
                                            "end_token": 174,
                                            "label": "pytest_mock.MockFixture",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "block",
                            "start_token": 176,
                            "end_token": 356,
                            "label": ":\n    mocked_value = backend.server.v2.store.model.StoreAgentsResponse(\n        agents=[],\n        pagination=backend.server.v2.store.model.Pagination(\n            current_page=0,\n            total_items=0,\n            total_pages=0,\n            page_size=10,\n        ),\n    )\n    mock_db_call = mocker.patch(\"backend.server.v2.store.db.get_store_agents\")\n    mock_db_call.return_value = mocked_value\n    response = client.get(\"/agents\")\n    assert response.status_code == 200\n\n    data = backend.server.v2.store.model.StoreAgentsResponse.model_validate(\n        response.json()\n    )\n    assert data.pagination.total_pages == 0\n    assert data.agents == []\n    mock_db_call.assert_called_once_with(\n        featured=False,\n        creator=None,\n        sorted_by=None,\n        search_query=None,\n        category=None,\n        page=1,\n        page_size=20,\n    )",
                            "children": [
                                {
                                    "type": "assignment",
                                    "start_token": 178,
                                    "end_token": 252,
                                    "label": "mocked_value = backend.server.v2.store.model.StoreAgentsResponse(\n        agents=[],\n        pagination=backend.server.v2.store.model.Pagination(\n            current_page=0,\n            total_items=0,\n            total_pages=0,\n            page_size=10,\n        ),\n    )\n    mock_db_call = mocker.patch(\"backend.server.v2.store.db.get_store_agents\")\n    mock_db_call.return_value = mocked_value",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 178,
                                            "end_token": 178,
                                            "label": "mocked_value",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "start_token": 180,
                                            "end_token": 252,
                                            "label": "backend.server.v2.store.model.StoreAgentsResponse(\n        agents=[],\n        pagination=backend.server.v2.store.model.Pagination(\n            current_page=0,\n            total_items=0,\n            total_pages=0,\n            page_size=10,\n        ),\n    )\n    mock_db_call = mocker.patch(\"backend.server.v2.store.db.get_store_agents\")\n    mock_db_call.return_value = mocked_value",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "start_token": 180,
                                                    "end_token": 190,
                                                    "label": "backend.server.v2.store.model.StoreAgentsResponse",
                                                    "children": [
                                                        {
                                                            "type": "dotted_name",
                                                            "start_token": 180,
                                                            "end_token": 188,
                                                            "label": "backend.server.v2.store.model",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 190,
                                                            "end_token": 190,
                                                            "label": "StoreAgentsResponse",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "start_token": 191,
                                                    "end_token": 237,
                                                    "label": "(\n        agents=[],\n        pagination=backend.server.v2.store.model.Pagination(\n            current_page=0,\n            total_items=0,\n            total_pages=0,\n            page_size=10,\n        ),\n    )",
                                                    "children": [
                                                        {
                                                            "type": "pair",
                                                            "start_token": 193,
                                                            "end_token": 196,
                                                            "label": "agents=[]",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 193,
                                                                    "end_token": 193,
                                                                    "label": "agents",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "pair",
                                                            "start_token": 199,
                                                            "end_token": 234,
                                                            "label": "pagination=backend.server.v2.store.model.Pagination(\n            current_page=0,\n            total_items=0,\n            total_pages=0,\n            page_size=10,\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 199,
                                                                    "end_token": 199,
                                                                    "label": "pagination",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "start_token": 200,
                                                                    "end_token": 234,
                                                                    "label": "=backend.server.v2.store.model.Pagination(\n            current_page=0,\n            total_items=0,\n            total_pages=0,\n            page_size=10,\n        )",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "start_token": 200,
                                                                            "end_token": 210,
                                                                            "label": "=backend.server.v2.store.model.",
                                                                            "children": [
                                                                                {
                                                                                    "type": "dotted_name",
                                                                                    "start_token": 200,
                                                                                    "end_token": 208,
                                                                                    "label": "=backend.server.v2.store.",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 210,
                                                                                    "end_token": 210,
                                                                                    "label": ".",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "start_token": 211,
                                                                            "end_token": 234,
                                                                            "label": "Pagination(\n            current_page=0,\n            total_items=0,\n            total_pages=0,\n            page_size=10,\n        )",
                                                                            "children": [
                                                                                {
                                                                                    "type": "pair",
                                                                                    "start_token": 213,
                                                                                    "end_token": 232,
                                                                                    "label": "\n            current_page=0,\n            total_items=0,\n            total_pages=0,\n            page_size=10,",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 213,
                                                                                            "end_token": 213,
                                                                                            "label": "\n",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "integer",
                                                                                            "start_token": 215,
                                                                                            "end_token": 215,
                                                                                            "label": "=",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "assignment",
                                    "start_token": 239,
                                    "end_token": 247,
                                    "label": "mock_db_call = mocker.patch(\"backend.server.v2.store.db.get_store_agents\")\n",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 239,
                                            "end_token": 239,
                                            "label": "mock_db_call",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "start_token": 241,
                                            "end_token": 247,
                                            "label": "mocker.patch(\"backend.server.v2.store.db.get_store_agents\")\n",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "start_token": 241,
                                                    "end_token": 243,
                                                    "label": "mocker.patch",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 241,
                                                            "end_token": 241,
                                                            "label": "mocker",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 243,
                                                            "end_token": 243,
                                                            "label": "patch",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "start_token": 244,
                                                    "end_token": 244,
                                                    "label": "(",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "start_token": 244,
                                                            "end_token": 244,
                                                            "label": "(",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "assignment",
                                    "start_token": 254,
                                    "end_token": 261,
                                    "label": "response = client.get(\"/agents\")",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 254,
                                            "end_token": 254,
                                            "label": "response",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "start_token": 256,
                                            "end_token": 261,
                                            "label": "client.get(\"/agents\")",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "start_token": 256,
                                                    "end_token": 258,
                                                    "label": "client.get",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 256,
                                                            "end_token": 256,
                                                            "label": "client",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 258,
                                                            "end_token": 258,
                                                            "label": "get",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "start_token": 259,
                                                    "end_token": 260,
                                                    "label": "(\"/agents\"",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "start_token": 259,
                                                            "end_token": 259,
                                                            "label": "(",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "assert_statement",
                                    "start_token": 263,
                                    "end_token": 269,
                                    "label": "assert response.status_code == 200",
                                    "children": [
                                        {
                                            "type": "comparison_operator",
                                            "start_token": 264,
                                            "end_token": 268,
                                            "label": "response.status_code ==",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "start_token": 264,
                                                    "end_token": 266,
                                                    "label": "response.status_code",
                                                    "children": []
                                                },
                                                {
                                                    "type": "integer",
                                                    "start_token": 268,
                                                    "end_token": 268,
                                                    "label": "=",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "assignment",
                                    "start_token": 272,
                                    "end_token": 295,
                                    "label": "data = backend.server.v2.store.model.StoreAgentsResponse.model_validate(\n        response.json()\n    )",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 272,
                                            "end_token": 272,
                                            "label": "data",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "start_token": 274,
                                            "end_token": 295,
                                            "label": "backend.server.v2.store.model.StoreAgentsResponse.model_validate(\n        response.json()\n    )",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "start_token": 274,
                                                    "end_token": 284,
                                                    "label": "backend.server.v2.store.model.StoreAgentsResponse",
                                                    "children": [
                                                        {
                                                            "type": "dotted_name",
                                                            "start_token": 274,
                                                            "end_token": 282,
                                                            "label": "backend.server.v2.store.model",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 284,
                                                            "end_token": 284,
                                                            "label": "StoreAgentsResponse",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "start_token": 286,
                                                    "end_token": 294,
                                                    "label": "model_validate(\n        response.json()\n",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "start_token": 289,
                                                            "end_token": 293,
                                                            "label": "response.json()",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "start_token": 289,
                                                                    "end_token": 291,
                                                                    "label": "response.json",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 289,
                                                                            "end_token": 289,
                                                                            "label": "response",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 291,
                                                                            "end_token": 291,
                                                                            "label": "json",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "assert_statement",
                                    "start_token": 297,
                                    "end_token": 305,
                                    "label": "assert data.pagination.total_pages == 0",
                                    "children": [
                                        {
                                            "type": "comparison_operator",
                                            "start_token": 298,
                                            "end_token": 304,
                                            "label": "data.pagination.total_pages ==",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "start_token": 298,
                                                    "end_token": 302,
                                                    "label": "data.pagination.total_pages",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 298,
                                                            "end_token": 298,
                                                            "label": "data",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "attribute",
                                                            "start_token": 300,
                                                            "end_token": 302,
                                                            "label": "pagination.total_pages",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "integer",
                                                    "start_token": 304,
                                                    "end_token": 304,
                                                    "label": "=",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "assert_statement",
                                    "start_token": 307,
                                    "end_token": 315,
                                    "label": "assert data.agents == []\n",
                                    "children": [
                                        {
                                            "type": "comparison_operator",
                                            "start_token": 308,
                                            "end_token": 314,
                                            "label": "data.agents == []",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "start_token": 308,
                                                    "end_token": 312,
                                                    "label": "data.agents ==",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "start_token": 313,
                                                    "end_token": 313,
                                                    "label": "[",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "call",
                                    "start_token": 316,
                                    "end_token": 356,
                                    "label": "mock_db_call.assert_called_once_with(\n        featured=False,\n        creator=None,\n        sorted_by=None,\n        search_query=None,\n        category=None,\n        page=1,\n        page_size=20,\n    )",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "start_token": 316,
                                            "end_token": 318,
                                            "label": "mock_db_call.assert_called_once_with",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 316,
                                                    "end_token": 316,
                                                    "label": "mock_db_call",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "start_token": 318,
                                                    "end_token": 318,
                                                    "label": "assert_called_once_with",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "start_token": 319,
                                            "end_token": 355,
                                            "label": "(\n        featured=False,\n        creator=None,\n        sorted_by=None,\n        search_query=None,\n        category=None,\n        page=1,\n        page_size=20,\n",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "start_token": 360,
                    "end_token": 574,
                    "label": "def test_get_agents_featured(mocker: pytest_mock.MockFixture):\n    mocked_value = backend.server.v2.store.model.StoreAgentsResponse(\n        agents=[\n            backend.server.v2.store.model.StoreAgent(\n                slug=\"featured-agent\",\n                agent_name=\"Featured Agent\",\n                agent_image=\"featured.jpg\",\n                creator=\"creator1\",\n                creator_avatar=\"avatar1.jpg\",\n                sub_heading=\"Featured agent subheading\",\n                description=\"Featured agent description\",\n                runs=100,\n                rating=4.5,\n            )\n        ],\n        pagination=backend.server.v2.store.model.Pagination(\n            current_page=1,\n            total_items=1,\n            total_pages=1,\n            page_size=20,\n        ),\n    )\n    mock_db_call = mocker.patch(\"backend.server.v2.store.db.get_store_agents\")\n    mock_db_call.return_value = mocked_value\n    response = client.get(\"/agents?featured=true\")\n    assert response.status_code == 200\n    data = backend.server.v2.store.model.StoreAgentsResponse.model_validate(\n        response.json()\n    )\n    assert len(data.agents) == 1\n    assert data.agents[0].slug == \"featured-agent\"",
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 360,
                            "end_token": 361,
                            "label": "def test_get_agents_featured",
                            "children": []
                        },
                        {
                            "type": "parameters",
                            "start_token": 362,
                            "end_token": 368,
                            "label": "(mocker: pytest_mock.MockFixture)",
                            "children": [
                                {
                                    "type": "default_parameter",
                                    "start_token": 363,
                                    "end_token": 367,
                                    "label": "mocker: pytest_mock.MockFixture",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 363,
                                            "end_token": 363,
                                            "label": "mocker",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "start_token": 365,
                                            "end_token": 367,
                                            "label": "pytest_mock.MockFixture",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "block",
                            "start_token": 369,
                            "end_token": 574,
                            "label": ":\n    mocked_value = backend.server.v2.store.model.StoreAgentsResponse(\n        agents=[\n            backend.server.v2.store.model.StoreAgent(\n                slug=\"featured-agent\",\n                agent_name=\"Featured Agent\",\n                agent_image=\"featured.jpg\",\n                creator=\"creator1\",\n                creator_avatar=\"avatar1.jpg\",\n                sub_heading=\"Featured agent subheading\",\n                description=\"Featured agent description\",\n                runs=100,\n                rating=4.5,\n            )\n        ],\n        pagination=backend.server.v2.store.model.Pagination(\n            current_page=1,\n            total_items=1,\n            total_pages=1,\n            page_size=20,\n        ),\n    )\n    mock_db_call = mocker.patch(\"backend.server.v2.store.db.get_store_agents\")\n    mock_db_call.return_value = mocked_value\n    response = client.get(\"/agents?featured=true\")\n    assert response.status_code == 200\n    data = backend.server.v2.store.model.StoreAgentsResponse.model_validate(\n        response.json()\n    )\n    assert len(data.agents) == 1\n    assert data.agents[0].slug == \"featured-agent\"",
                            "children": [
                                {
                                    "type": "assignment",
                                    "start_token": 371,
                                    "end_token": 508,
                                    "label": "mocked_value = backend.server.v2.store.model.StoreAgentsResponse(\n        agents=[\n            backend.server.v2.store.model.StoreAgent(\n                slug=\"featured-agent\",\n                agent_name=\"Featured Agent\",\n                agent_image=\"featured.jpg\",\n                creator=\"creator1\",\n                creator_avatar=\"avatar1.jpg\",\n                sub_heading=\"Featured agent subheading\",\n                description=\"Featured agent description\",\n                runs=100,\n                rating=4.5,\n            )\n        ],\n        pagination=backend.server.v2.store.model.Pagination(\n            current_page=1,\n            total_items=1,\n            total_pages=1,\n            page_size=20,\n        ),\n    )\n    mock_db_call = mocker.patch(\"backend.server.v2.store.db.get_store_agents\")\n    mock_db_call.return_value = mocked_value",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 371,
                                            "end_token": 371,
                                            "label": "mocked_value",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "start_token": 373,
                                            "end_token": 508,
                                            "label": "backend.server.v2.store.model.StoreAgentsResponse(\n        agents=[\n            backend.server.v2.store.model.StoreAgent(\n                slug=\"featured-agent\",\n                agent_name=\"Featured Agent\",\n                agent_image=\"featured.jpg\",\n                creator=\"creator1\",\n                creator_avatar=\"avatar1.jpg\",\n                sub_heading=\"Featured agent subheading\",\n                description=\"Featured agent description\",\n                runs=100,\n                rating=4.5,\n            )\n        ],\n        pagination=backend.server.v2.store.model.Pagination(\n            current_page=1,\n            total_items=1,\n            total_pages=1,\n            page_size=20,\n        ),\n    )\n    mock_db_call = mocker.patch(\"backend.server.v2.store.db.get_store_agents\")\n    mock_db_call.return_value = mocked_value",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "start_token": 373,
                                                    "end_token": 383,
                                                    "label": "backend.server.v2.store.model.StoreAgentsResponse",
                                                    "children": [
                                                        {
                                                            "type": "dotted_name",
                                                            "start_token": 373,
                                                            "end_token": 381,
                                                            "label": "backend.server.v2.store.model",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 383,
                                                            "end_token": 383,
                                                            "label": "StoreAgentsResponse",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "start_token": 384,
                                                    "end_token": 493,
                                                    "label": "(\n        agents=[\n            backend.server.v2.store.model.StoreAgent(\n                slug=\"featured-agent\",\n                agent_name=\"Featured Agent\",\n                agent_image=\"featured.jpg\",\n                creator=\"creator1\",\n                creator_avatar=\"avatar1.jpg\",\n                sub_heading=\"Featured agent subheading\",\n                description=\"Featured agent description\",\n                runs=100,\n                rating=4.5,\n            )\n        ],\n        pagination=backend.server.v2.store.model.Pagination(\n            current_page=1,\n            total_items=1,\n            total_pages=1,\n            page_size=20,\n        ),\n    )",
                                                    "children": [
                                                        {
                                                            "type": "pair",
                                                            "start_token": 386,
                                                            "end_token": 450,
                                                            "label": "agents=[\n            backend.server.v2.store.model.StoreAgent(\n                slug=\"featured-agent\",\n                agent_name=\"Featured Agent\",\n                agent_image=\"featured.jpg\",\n                creator=\"creator1\",\n                creator_avatar=\"avatar1.jpg\",\n                sub_heading=\"Featured agent subheading\",\n                description=\"Featured agent description\",\n                runs=100,\n                rating=4.5,\n            )",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 386,
                                                                    "end_token": 386,
                                                                    "label": "agents",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "list",
                                                                    "start_token": 388,
                                                                    "end_token": 450,
                                                                    "label": "[\n            backend.server.v2.store.model.StoreAgent(\n                slug=\"featured-agent\",\n                agent_name=\"Featured Agent\",\n                agent_image=\"featured.jpg\",\n                creator=\"creator1\",\n                creator_avatar=\"avatar1.jpg\",\n                sub_heading=\"Featured agent subheading\",\n                description=\"Featured agent description\",\n                runs=100,\n                rating=4.5,\n            )",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "start_token": 390,
                                                                            "end_token": 450,
                                                                            "label": "backend.server.v2.store.model.StoreAgent(\n                slug=\"featured-agent\",\n                agent_name=\"Featured Agent\",\n                agent_image=\"featured.jpg\",\n                creator=\"creator1\",\n                creator_avatar=\"avatar1.jpg\",\n                sub_heading=\"Featured agent subheading\",\n                description=\"Featured agent description\",\n                runs=100,\n                rating=4.5,\n            )",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "start_token": 390,
                                                                                    "end_token": 400,
                                                                                    "label": "backend.server.v2.store.model.StoreAgent",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "dotted_name",
                                                                                            "start_token": 390,
                                                                                            "end_token": 398,
                                                                                            "label": "backend.server.v2.store.model",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 400,
                                                                                            "end_token": 400,
                                                                                            "label": "StoreAgent",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "start_token": 401,
                                                                                    "end_token": 449,
                                                                                    "label": "(\n                slug=\"featured-agent\",\n                agent_name=\"Featured Agent\",\n                agent_image=\"featured.jpg\",\n                creator=\"creator1\",\n                creator_avatar=\"avatar1.jpg\",\n                sub_heading=\"Featured agent subheading\",\n                description=\"Featured agent description\",\n                runs=100,\n                rating=4.5,\n",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "pair",
                                                                                            "start_token": 403,
                                                                                            "end_token": 448,
                                                                                            "label": "slug=\"featured-agent\",\n                agent_name=\"Featured Agent\",\n                agent_image=\"featured.jpg\",\n                creator=\"creator1\",\n                creator_avatar=\"avatar1.jpg\",\n                sub_heading=\"Featured agent subheading\",\n                description=\"Featured agent description\",\n                runs=100,\n                rating=4.5,",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "start_token": 403,
                                                                                                    "end_token": 403,
                                                                                                    "label": "slug",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "start_token": 405,
                                                                                                    "end_token": 405,
                                                                                                    "label": "\"featured-agent\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "pair",
                                                            "start_token": 455,
                                                            "end_token": 491,
                                                            "label": "pagination=backend.server.v2.store.model.Pagination(\n            current_page=1,\n            total_items=1,\n            total_pages=1,\n            page_size=20,\n        ),",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 455,
                                                                    "end_token": 455,
                                                                    "label": "pagination",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "start_token": 457,
                                                                    "end_token": 491,
                                                                    "label": "backend.server.v2.store.model.Pagination(\n            current_page=1,\n            total_items=1,\n            total_pages=1,\n            page_size=20,\n        ),",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "start_token": 457,
                                                                            "end_token": 467,
                                                                            "label": "backend.server.v2.store.model.Pagination",
                                                                            "children": [
                                                                                {
                                                                                    "type": "dotted_name",
                                                                                    "start_token": 457,
                                                                                    "end_token": 465,
                                                                                    "label": "backend.server.v2.store.model",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 467,
                                                                                    "end_token": 467,
                                                                                    "label": "Pagination",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "start_token": 468,
                                                                            "end_token": 490,
                                                                            "label": "(\n            current_page=1,\n            total_items=1,\n            total_pages=1,\n            page_size=20,\n        )",
                                                                            "children": [
                                                                                {
                                                                                    "type": "pair",
                                                                                    "start_token": 470,
                                                                                    "end_token": 489,
                                                                                    "label": "current_page=1,\n            total_items=1,\n            total_pages=1,\n            page_size=20,\n",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 470,
                                                                                            "end_token": 470,
                                                                                            "label": "current_page",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "integer",
                                                                                            "start_token": 472,
                                                                                            "end_token": 472,
                                                                                            "label": "1",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "assignment",
                                    "start_token": 510,
                                    "end_token": 517,
                                    "label": "response = client.get(\"/agents?featured=true\")",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 510,
                                            "end_token": 510,
                                            "label": "response",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "start_token": 512,
                                            "end_token": 517,
                                            "label": "client.get(\"/agents?featured=true\")",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "start_token": 512,
                                                    "end_token": 514,
                                                    "label": "client.get",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 512,
                                                            "end_token": 512,
                                                            "label": "client",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 514,
                                                            "end_token": 514,
                                                            "label": "get",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "start_token": 515,
                                                    "end_token": 516,
                                                    "label": "(\"/agents?featured=true\"",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "start_token": 515,
                                                            "end_token": 515,
                                                            "label": "(",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "assert_statement",
                                    "start_token": 519,
                                    "end_token": 525,
                                    "label": "assert response.status_code == 200",
                                    "children": [
                                        {
                                            "type": "comparison_operator",
                                            "start_token": 520,
                                            "end_token": 524,
                                            "label": "response.status_code ==",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "start_token": 520,
                                                    "end_token": 522,
                                                    "label": "response.status_code",
                                                    "children": []
                                                },
                                                {
                                                    "type": "integer",
                                                    "start_token": 524,
                                                    "end_token": 524,
                                                    "label": "=",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "assignment",
                                    "start_token": 527,
                                    "end_token": 550,
                                    "label": "data = backend.server.v2.store.model.StoreAgentsResponse.model_validate(\n        response.json()\n    )",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 527,
                                            "end_token": 527,
                                            "label": "data",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "start_token": 529,
                                            "end_token": 550,
                                            "label": "backend.server.v2.store.model.StoreAgentsResponse.model_validate(\n        response.json()\n    )",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "start_token": 529,
                                                    "end_token": 539,
                                                    "label": "backend.server.v2.store.model.StoreAgentsResponse",
                                                    "children": [
                                                        {
                                                            "type": "dotted_name",
                                                            "start_token": 529,
                                                            "end_token": 537,
                                                            "label": "backend.server.v2.store.model",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 539,
                                                            "end_token": 539,
                                                            "label": "StoreAgentsResponse",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "start_token": 541,
                                                    "end_token": 549,
                                                    "label": "model_validate(\n        response.json()\n",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "start_token": 544,
                                                            "end_token": 548,
                                                            "label": "response.json()",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "start_token": 544,
                                                                    "end_token": 546,
                                                                    "label": "response.json",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 544,
                                                                            "end_token": 544,
                                                                            "label": "response",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 546,
                                                                            "end_token": 546,
                                                                            "label": "json",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "assert_statement",
                                    "start_token": 552,
                                    "end_token": 561,
                                    "label": "assert len(data.agents) == 1",
                                    "children": [
                                        {
                                            "type": "comparison_operator",
                                            "start_token": 553,
                                            "end_token": 560,
                                            "label": "len(data.agents) ==",
                                            "children": [
                                                {
                                                    "type": "integer",
                                                    "start_token": 553,
                                                    "end_token": 553,
                                                    "label": "len",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "assert_statement",
                                    "start_token": 563,
                                    "end_token": 574,
                                    "label": "assert data.agents[0].slug == \"featured-agent\"",
                                    "children": [
                                        {
                                            "type": "comparison_operator",
                                            "start_token": 564,
                                            "end_token": 573,
                                            "label": "data.agents[0].slug ==",
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "start_token": 564,
                                                    "end_token": 565,
                                                    "label": "data.",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "start_token": 570,
                                                            "end_token": 570,
                                                            "label": ".",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "start_token": 620,
                    "end_token": 1045,
                    "label": "def test_get_agents_by_creator(mocker: pytest_mock.MockFixture):\n    mocked_value = backend.server.v2.store.model.StoreAgentsResponse(\n        agents=[\n            backend.server.v2.store.model.StoreAgent(\n                slug=\"creator-agent\",\n                agent_name=\"Creator Agent\",\n                agent_image=\"agent.jpg\",\n                creator=\"specific-creator\",\n                creator_avatar=\"avatar.jpg\",\n                sub_heading=\"Creator agent subheading\",\n                description=\"Creator agent description\",\n                runs=50,\n                rating=4.0,\n            )\n        ],\n        pagination=backend.server.v2.store.model.Pagination(\n            current_page=1,\n            total_items=1,\n            total_pages=1,\n            page_size=20,\n        ),\n    )\n    mock_db_call = mocker.patch(\"backend.server.v2.store.db.get_store_agents\")\n    mock_db_call.return_value = mocked_value\n    response = client.get(\"/agents?creator=specific-creator\")\n    assert response.status_code == 200\n    data = backend.server.v2.store.model.StoreAgentsResponse.model_validate(\n        response.json()\n    )\n    assert len(data.agents) == 1\n    assert data.agents[0].creator == \"specific-creator\"\n    mock_db_call.assert_called_once_with(\n        featured=False,\n        creator=\"specific-creator\",\n        sorted_by=None,\n        search_query=None,\n        category=None,\n        page=1,\n        page_size=20,\n    )\n\n\ndef test_get_agents_sorted(mocker: pytest_mock.MockFixture):\n    mocked_value = backend.server.v2.store.model.StoreAgentsResponse(\n        agents=[\n            backend.server.v2.store.model.StoreAgent(\n                slug=\"top-agent\",\n                agent_name=\"Top Agent\",\n                agent_image=\"top.jpg\",\n                creator=\"creator1\",\n                creator_avatar=\"avatar1.jpg\",\n                sub_heading=\"Top agent subheading\",\n                description=\"Top agent description\",\n                runs=1000,\n                rating=5.0,\n            )\n        ],\n        pagination=backend.server.v2.store.model.Pagination(\n            current_page=1,\n            total_items=1,\n            total_pages=1,\n            page_size=20,\n        ),\n    )\n    mock_db_call = mocker.patch(\"backend.server.v2.store.db.get_store_agents\")\n    mock_db_call.return_value = mocked_value\n    response = client.get(\"/agents?sorted_by=runs\")\n    assert response.status_code == 200",
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 620,
                            "end_token": 621,
                            "label": "def test_get_agents_by_creator",
                            "children": []
                        },
                        {
                            "type": "parameters",
                            "start_token": 622,
                            "end_token": 628,
                            "label": "(mocker: pytest_mock.MockFixture)",
                            "children": [
                                {
                                    "type": "default_parameter",
                                    "start_token": 623,
                                    "end_token": 627,
                                    "label": "mocker: pytest_mock.MockFixture",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 623,
                                            "end_token": 623,
                                            "label": "mocker",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "start_token": 625,
                                            "end_token": 627,
                                            "label": "pytest_mock.MockFixture",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "block",
                            "start_token": 629,
                            "end_token": 1045,
                            "label": ":\n    mocked_value = backend.server.v2.store.model.StoreAgentsResponse(\n        agents=[\n            backend.server.v2.store.model.StoreAgent(\n                slug=\"creator-agent\",\n                agent_name=\"Creator Agent\",\n                agent_image=\"agent.jpg\",\n                creator=\"specific-creator\",\n                creator_avatar=\"avatar.jpg\",\n                sub_heading=\"Creator agent subheading\",\n                description=\"Creator agent description\",\n                runs=50,\n                rating=4.0,\n            )\n        ],\n        pagination=backend.server.v2.store.model.Pagination(\n            current_page=1,\n            total_items=1,\n            total_pages=1,\n            page_size=20,\n        ),\n    )\n    mock_db_call = mocker.patch(\"backend.server.v2.store.db.get_store_agents\")\n    mock_db_call.return_value = mocked_value\n    response = client.get(\"/agents?creator=specific-creator\")\n    assert response.status_code == 200\n    data = backend.server.v2.store.model.StoreAgentsResponse.model_validate(\n        response.json()\n    )\n    assert len(data.agents) == 1\n    assert data.agents[0].creator == \"specific-creator\"\n    mock_db_call.assert_called_once_with(\n        featured=False,\n        creator=\"specific-creator\",\n        sorted_by=None,\n        search_query=None,\n        category=None,\n        page=1,\n        page_size=20,\n    )\n\n\ndef test_get_agents_sorted(mocker: pytest_mock.MockFixture):\n    mocked_value = backend.server.v2.store.model.StoreAgentsResponse(\n        agents=[\n            backend.server.v2.store.model.StoreAgent(\n                slug=\"top-agent\",\n                agent_name=\"Top Agent\",\n                agent_image=\"top.jpg\",\n                creator=\"creator1\",\n                creator_avatar=\"avatar1.jpg\",\n                sub_heading=\"Top agent subheading\",\n                description=\"Top agent description\",\n                runs=1000,\n                rating=5.0,\n            )\n        ],\n        pagination=backend.server.v2.store.model.Pagination(\n            current_page=1,\n            total_items=1,\n            total_pages=1,\n            page_size=20,\n        ),\n    )\n    mock_db_call = mocker.patch(\"backend.server.v2.store.db.get_store_agents\")\n    mock_db_call.return_value = mocked_value\n    response = client.get(\"/agents?sorted_by=runs\")\n    assert response.status_code == 200",
                            "children": [
                                {
                                    "type": "assignment",
                                    "start_token": 631,
                                    "end_token": 763,
                                    "label": "mocked_value = backend.server.v2.store.model.StoreAgentsResponse(\n        agents=[\n            backend.server.v2.store.model.StoreAgent(\n                slug=\"creator-agent\",\n                agent_name=\"Creator Agent\",\n                agent_image=\"agent.jpg\",\n                creator=\"specific-creator\",\n                creator_avatar=\"avatar.jpg\",\n                sub_heading=\"Creator agent subheading\",\n                description=\"Creator agent description\",\n                runs=50,\n                rating=4.0,\n            )\n        ],\n        pagination=backend.server.v2.store.model.Pagination(\n            current_page=1,\n            total_items=1,\n            total_pages=1,\n            page_size=20,\n        ),\n    )\n    mock_db_call = mocker.patch(\"backend.server.v2.store.db.get_store_agents\")\n",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 631,
                                            "end_token": 631,
                                            "label": "mocked_value",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "start_token": 633,
                                            "end_token": 763,
                                            "label": "backend.server.v2.store.model.StoreAgentsResponse(\n        agents=[\n            backend.server.v2.store.model.StoreAgent(\n                slug=\"creator-agent\",\n                agent_name=\"Creator Agent\",\n                agent_image=\"agent.jpg\",\n                creator=\"specific-creator\",\n                creator_avatar=\"avatar.jpg\",\n                sub_heading=\"Creator agent subheading\",\n                description=\"Creator agent description\",\n                runs=50,\n                rating=4.0,\n            )\n        ],\n        pagination=backend.server.v2.store.model.Pagination(\n            current_page=1,\n            total_items=1,\n            total_pages=1,\n            page_size=20,\n        ),\n    )\n    mock_db_call = mocker.patch(\"backend.server.v2.store.db.get_store_agents\")\n",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "start_token": 633,
                                                    "end_token": 643,
                                                    "label": "backend.server.v2.store.model.StoreAgentsResponse",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "start_token": 633,
                                                            "end_token": 641,
                                                            "label": "backend.server.v2.store.model",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 643,
                                                            "end_token": 643,
                                                            "label": "StoreAgentsResponse",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "start_token": 880,
                    "end_token": 1136,
                    "label": "def test_get_agents_sorted(mocker: pytest_mock.MockFixture):\n    mocked_value = backend.server.v2.store.model.StoreAgentsResponse(\n        agents=[\n            backend.server.v2.store.model.StoreAgent(\n                slug=\"top-agent\",\n                agent_name=\"Top Agent\",\n                agent_image=\"top.jpg\",\n                creator=\"creator1\",\n                creator_avatar=\"avatar1.jpg\",\n                sub_heading=\"Top agent subheading\",\n                description=\"Top agent description\",\n                runs=1000,\n                rating=5.0,\n            )\n        ],\n        pagination=backend.server.v2.store.model.Pagination(\n            current_page=1,\n            total_items=1,\n            total_pages=1,\n            page_size=20,\n        ),\n    )\n    mock_db_call = mocker.patch(\"backend.server.v2.store.db.get_store_agents\")\n    mock_db_call.return_value = mocked_value\n    response = client.get(\"/agents?sorted_by=runs\")\n    assert response.status_code == 200\n    data = backend.server.v2.store.model.StoreAgentsResponse.model_validate(\n        response.json()\n    )\n    assert len(data.agents) == 1\n    assert data.agents[0].runs == 1000\n    mock_db_call.assert_called_once_with(\n        featured=False,\n        creator=None,\n        sorted_by=\"runs\",\n        search_query=None,\n        category=None,\n        page=1,\n        page_size=20,\n    )",
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 880,
                            "end_token": 881,
                            "label": "def test_get_agents_sorted",
                            "children": []
                        },
                        {
                            "type": "parameters",
                            "start_token": 882,
                            "end_token": 888,
                            "label": "(mocker: pytest_mock.MockFixture)",
                            "children": [
                                {
                                    "type": "default_parameter",
                                    "start_token": 883,
                                    "end_token": 887,
                                    "label": "mocker: pytest_mock.MockFixture",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 883,
                                            "end_token": 883,
                                            "label": "mocker",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "start_token": 885,
                                            "end_token": 887,
                                            "label": "pytest_mock.MockFixture",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "block",
                            "start_token": 889,
                            "end_token": 1136,
                            "label": ":\n    mocked_value = backend.server.v2.store.model.StoreAgentsResponse(\n        agents=[\n            backend.server.v2.store.model.StoreAgent(\n                slug=\"top-agent\",\n                agent_name=\"Top Agent\",\n                agent_image=\"top.jpg\",\n                creator=\"creator1\",\n                creator_avatar=\"avatar1.jpg\",\n                sub_heading=\"Top agent subheading\",\n                description=\"Top agent description\",\n                runs=1000,\n                rating=5.0,\n            )\n        ],\n        pagination=backend.server.v2.store.model.Pagination(\n            current_page=1,\n            total_items=1,\n            total_pages=1,\n            page_size=20,\n        ),\n    )\n    mock_db_call = mocker.patch(\"backend.server.v2.store.db.get_store_agents\")\n    mock_db_call.return_value = mocked_value\n    response = client.get(\"/agents?sorted_by=runs\")\n    assert response.status_code == 200\n    data = backend.server.v2.store.model.StoreAgentsResponse.model_validate(\n        response.json()\n    )\n    assert len(data.agents) == 1\n    assert data.agents[0].runs == 1000\n    mock_db_call.assert_called_once_with(\n        featured=False,\n        creator=None,\n        sorted_by=\"runs\",\n        search_query=None,\n        category=None,\n        page=1,\n        page_size=20,\n    )",
                            "children": [
                                {
                                    "type": "assignment",
                                    "start_token": 891,
                                    "end_token": 1029,
                                    "label": "mocked_value = backend.server.v2.store.model.StoreAgentsResponse(\n        agents=[\n            backend.server.v2.store.model.StoreAgent(\n                slug=\"top-agent\",\n                agent_name=\"Top Agent\",\n                agent_image=\"top.jpg\",\n                creator=\"creator1\",\n                creator_avatar=\"avatar1.jpg\",\n                sub_heading=\"Top agent subheading\",\n                description=\"Top agent description\",\n                runs=1000,\n                rating=5.0,\n            )\n        ],\n        pagination=backend.server.v2.store.model.Pagination(\n            current_page=1,\n            total_items=1,\n            total_pages=1,\n            page_size=20,\n        ),\n    )\n    mock_db_call = mocker.patch(\"backend.server.v2.store.db.get_store_agents\")\n    mock_db_call.return_value = mocked_value\n",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 891,
                                            "end_token": 891,
                                            "label": "mocked_value",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "start_token": 893,
                                            "end_token": 1029,
                                            "label": "backend.server.v2.store.model.StoreAgentsResponse(\n        agents=[\n            backend.server.v2.store.model.StoreAgent(\n                slug=\"top-agent\",\n                agent_name=\"Top Agent\",\n                agent_image=\"top.jpg\",\n                creator=\"creator1\",\n                creator_avatar=\"avatar1.jpg\",\n                sub_heading=\"Top agent subheading\",\n                description=\"Top agent description\",\n                runs=1000,\n                rating=5.0,\n            )\n        ],\n        pagination=backend.server.v2.store.model.Pagination(\n            current_page=1,\n            total_items=1,\n            total_pages=1,\n            page_size=20,\n        ),\n    )\n    mock_db_call = mocker.patch(\"backend.server.v2.store.db.get_store_agents\")\n    mock_db_call.return_value = mocked_value\n",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "start_token": 893,
                                                    "end_token": 903,
                                                    "label": "backend.server.v2.store.model.StoreAgentsResponse",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "start_token": 893,
                                                            "end_token": 901,
                                                            "label": "backend.server.v2.store.model",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "start_token": 893,
                                                                    "end_token": 899,
                                                                    "label": "backend.server.v2.store",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 893,
                                                                            "end_token": 893,
                                                                            "label": "backend",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "dotted_name",
                                                                            "start_token": 895,
                                                                            "end_token": 899,
                                                                            "label": "server.v2.store",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 901,
                                                                    "end_token": 901,
                                                                    "label": "model",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 903,
                                                            "end_token": 903,
                                                            "label": "StoreAgentsResponse",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}