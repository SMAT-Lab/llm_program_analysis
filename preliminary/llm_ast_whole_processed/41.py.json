{
    "type": "module",
    "start_token": 0,
    "end_token": 589,
    "label": "#!/usr/bin/env python\n# coding: utf-8\n\n\"\"\"\n    The approach taken is explained below. I decided to do it simply.\n    Initially I was considering parsing the data into some sort of\n    structure and then generating an appropriate README. I am still\n    considering doing it - but for now this should work. The only issue\n    I see is that it only sorts the entries at the lowest level, and that\n    the order of the top-level contents do not match the order of the actual\n    entries.\n\n    This could be extended by having nested blocks, sorting them recursively\n    and flattening the end structure into a list of lines. Revision 2 maybe ^.^.\n\"\"\"\n\ndef sort_blocks():\n    # First, we load the current README into memory\n    with open('README.md', 'r') as read_me_file:\n        read_me = read_me_file.read()\n\n    # Separating the 'table of contents' from the contents (blocks)\n    table_of_contents = ''.join(read_me.split('- - -')[0])\n    blocks = ''.join(read_me.split('- - -')[1]).split('\\n# ')\n    for i in range(len(blocks)):\n        if i == 0:\n            blocks[i] = blocks[i] + '\\n'\n        else:\n            blocks[i] = '# ' + blocks[i] + '\\n'\n\n    # Sorting the libraries\n    inner_blocks = sorted(blocks[0].split('##'))\n    for i in range(1, len(inner_blocks)):\n        if inner_blocks[i][0] != '#':\n            inner_blocks[i] = '##' + inner_blocks[i]\n    inner_blocks = ''.join(inner_blocks)\n\n    # Replacing the non-sorted libraries by the sorted ones and gathering all at the final_README file\n    blocks[0] = inner_blocks\n    final_README = table_of_contents + '- - -' + ''.join(blocks)\n\n    with open('README.md', 'w+') as sorted_file:\n        sorted_file.write(final_README)\n\ndef main():\n    # First, we load the current README into memory as an array of lines\n    with open('README.md', 'r') as read_me_file:\n        read_me = read_me_file.readlines()\n\n    # Then we cluster the lines together as blocks\n    # Each block represents a collection of lines that should be sorted\n    # This was done by assuming only links ([...](...)) are meant to be sorted\n    # Clustering is done by indentation\n    blocks = []\n    last_indent = None\n    for line in read_me:\n        s_line = line.lstrip()\n        indent = len(line) - len(s_line)\n\n        if any([s_line.startswith(s) for s in ['* [', '- [']]):\n            if indent == last_indent:\n                blocks[-1].append(line)\n            else:\n                blocks.append([line])\n            last_indent = indent\n        else:\n            blocks.append([line])\n            last_indent = None\n\n    with open('README.md', 'w+') as sorted_file:\n        # Then all of the blocks are sorted individually\n        blocks = [\n            ''.join(sorted(block, key=str.lower)) for block in blocks\n        ]\n        # And the result is written back to README.md\n        sorted_file.write(''.join(blocks))\n\n    # Then we call the sorting method\n    sort_blocks()\n\n\nif __name__ == \"__main__\":\n    main()",
    "children": [
        {
            "type": "comment",
            "start_token": 0,
            "end_token": 16,
            "label": "#!/usr/bin/env python\n# coding: utf-8\n",
            "children": []
        },
        {
            "type": "string",
            "start_token": 18,
            "end_token": 20,
            "label": "\"\"\"\n    The approach taken is explained below. I decided to do it simply.\n    Initially I was considering parsing the data into some sort of\n    structure and then generating an appropriate README. I am still\n    considering doing it - but for now this should work. The only issue\n    I see is that it only sorts the entries at the lowest level, and that\n    the order of the top-level contents do not match the order of the actual\n    entries.\n\n    This could be extended by having nested blocks, sorting them recursively\n    and flattening the end structure into a list of lines. Revision 2 maybe ^.^.\n\"\"\"",
            "children": []
        },
        {
            "type": "function_definition",
            "start_token": 23,
            "end_token": 284,
            "label": "def sort_blocks():\n    # First, we load the current README into memory\n    with open('README.md', 'r') as read_me_file:\n        read_me = read_me_file.read()\n\n    # Separating the 'table of contents' from the contents (blocks)\n    table_of_contents = ''.join(read_me.split('- - -')[0])\n    blocks = ''.join(read_me.split('- - -')[1]).split('\\n# ')\n    for i in range(len(blocks)):\n        if i == 0:\n            blocks[i] = blocks[i] + '\\n'\n        else:\n            blocks[i] = '# ' + blocks[i] + '\\n'\n\n    # Sorting the libraries\n    inner_blocks = sorted(blocks[0].split('##'))\n    for i in range(1, len(inner_blocks)):\n        if inner_blocks[i][0] != '#':\n            inner_blocks[i] = '##' + inner_blocks[i]\n    inner_blocks = ''.join(inner_blocks)\n\n    # Replacing the non-sorted libraries by the sorted ones and gathering all at the final_README file\n    blocks[0] = inner_blocks\n    final_README = table_of_contents + '- - -' + ''.join(blocks)\n\n    with open('README.md', 'w+') as sorted_file:\n        sorted_file.write(final_README)",
            "children": [
                {
                    "type": "identifier",
                    "start_token": 24,
                    "end_token": 24,
                    "label": "sort_blocks",
                    "children": []
                },
                {
                    "type": "parameters",
                    "start_token": 25,
                    "end_token": 26,
                    "label": "()",
                    "children": []
                },
                {
                    "type": "block",
                    "start_token": 27,
                    "end_token": 284,
                    "label": ":\n    # First, we load the current README into memory\n    with open('README.md', 'r') as read_me_file:\n        read_me = read_me_file.read()\n\n    # Separating the 'table of contents' from the contents (blocks)\n    table_of_contents = ''.join(read_me.split('- - -')[0])\n    blocks = ''.join(read_me.split('- - -')[1]).split('\\n# ')\n    for i in range(len(blocks)):\n        if i == 0:\n            blocks[i] = blocks[i] + '\\n'\n        else:\n            blocks[i] = '# ' + blocks[i] + '\\n'\n\n    # Sorting the libraries\n    inner_blocks = sorted(blocks[0].split('##'))\n    for i in range(1, len(inner_blocks)):\n        if inner_blocks[i][0] != '#':\n            inner_blocks[i] = '##' + inner_blocks[i]\n    inner_blocks = ''.join(inner_blocks)\n\n    # Replacing the non-sorted libraries by the sorted ones and gathering all at the final_README file\n    blocks[0] = inner_blocks\n    final_README = table_of_contents + '- - -' + ''.join(blocks)\n\n    with open('README.md', 'w+') as sorted_file:\n        sorted_file.write(final_README)",
                    "children": [
                        {
                            "type": "comment",
                            "start_token": 29,
                            "end_token": 39,
                            "label": "# First, we load the current README into memory\n",
                            "children": []
                        },
                        {
                            "type": "with_statement",
                            "start_token": 40,
                            "end_token": 58,
                            "label": "with open('README.md', 'r') as read_me_file:\n        read_me = read_me_file.read()\n",
                            "children": [
                                {
                                    "type": "with_item",
                                    "start_token": 41,
                                    "end_token": 48,
                                    "label": "open('README.md', 'r') as read_me_file",
                                    "children": [
                                        {
                                            "type": "call",
                                            "start_token": 41,
                                            "end_token": 46,
                                            "label": "open('README.md', 'r')",
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "start_token": 43,
                                                    "end_token": 45,
                                                    "label": "'README.md', 'r'",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "identifier",
                                            "start_token": 48,
                                            "end_token": 48,
                                            "label": "read_me_file",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "start_token": 49,
                                    "end_token": 58,
                                    "label": ":\n        read_me = read_me_file.read()\n",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "start_token": 51,
                                            "end_token": 57,
                                            "label": "read_me = read_me_file.read()",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 51,
                                                    "end_token": 51,
                                                    "label": "read_me",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 53,
                                                    "end_token": 56,
                                                    "label": "read_me_file.read(",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "start_token": 60,
                            "end_token": 70,
                            "label": "# Separating the 'table of contents' from the contents (blocks)\n",
                            "children": []
                        },
                        {
                            "type": "assignment",
                            "start_token": 71,
                            "end_token": 86,
                            "label": "table_of_contents = ''.join(read_me.split('- - -')[0])",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 71,
                                    "end_token": 71,
                                    "label": "table_of_contents",
                                    "children": []
                                },
                                {
                                    "type": "call",
                                    "start_token": 73,
                                    "end_token": 86,
                                    "label": "''.join(read_me.split('- - -')[0])",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "start_token": 73,
                                            "end_token": 79,
                                            "label": "''.join(read_me.split",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 73,
                                                    "end_token": 77,
                                                    "label": "''.join(read_me",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "string",
                                            "start_token": 81,
                                            "end_token": 81,
                                            "label": "'- - -'",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "assignment",
                            "start_token": 88,
                            "end_token": 109,
                            "label": "blocks = ''.join(read_me.split('- - -')[1]).split('\\n# ')\n",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 88,
                                    "end_token": 88,
                                    "label": "blocks",
                                    "children": []
                                },
                                {
                                    "type": "call",
                                    "start_token": 90,
                                    "end_token": 109,
                                    "label": "''.join(read_me.split('- - -')[1]).split('\\n# ')\n",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "start_token": 90,
                                            "end_token": 96,
                                            "label": "''.join(read_me.split",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 90,
                                                    "end_token": 94,
                                                    "label": "''.join(read_me",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "string",
                                            "start_token": 98,
                                            "end_token": 98,
                                            "label": "'- - -'",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "for_statement",
                            "start_token": 110,
                            "end_token": 157,
                            "label": "for i in range(len(blocks)):\n        if i == 0:\n            blocks[i] = blocks[i] + '\\n'\n        else:\n            blocks[i] = '# ' + blocks[i] + '\\n'\n",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 111,
                                    "end_token": 111,
                                    "label": "i",
                                    "children": []
                                },
                                {
                                    "type": "call",
                                    "start_token": 113,
                                    "end_token": 119,
                                    "label": "range(len(blocks))",
                                    "children": [
                                        {
                                            "type": "call",
                                            "start_token": 115,
                                            "end_token": 118,
                                            "label": "len(blocks)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 115,
                                                    "end_token": 116,
                                                    "label": "len(",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "start_token": 120,
                                    "end_token": 157,
                                    "label": ":\n        if i == 0:\n            blocks[i] = blocks[i] + '\\n'\n        else:\n            blocks[i] = '# ' + blocks[i] + '\\n'\n",
                                    "children": [
                                        {
                                            "type": "if_statement",
                                            "start_token": 122,
                                            "end_token": 140,
                                            "label": "if i == 0:\n            blocks[i] = blocks[i] + '\\n'\n",
                                            "children": [
                                                {
                                                    "type": "comparison_operator",
                                                    "start_token": 124,
                                                    "end_token": 126,
                                                    "label": "== 0",
                                                    "children": []
                                                },
                                                {
                                                    "type": "block",
                                                    "start_token": 127,
                                                    "end_token": 140,
                                                    "label": ":\n            blocks[i] = blocks[i] + '\\n'\n",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "start_token": 129,
                                                            "end_token": 139,
                                                            "label": "blocks[i] = blocks[i] + '\\n'",
                                                            "children": [
                                                                {
                                                                    "type": "subscript",
                                                                    "start_token": 129,
                                                                    "end_token": 132,
                                                                    "label": "blocks[i]",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 129,
                                                                            "end_token": 129,
                                                                            "label": "blocks",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "binary_operator",
                                                                    "start_token": 134,
                                                                    "end_token": 138,
                                                                    "label": "blocks[i] +",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 134,
                                                                            "end_token": 136,
                                                                            "label": "blocks[i",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "else_clause",
                                            "start_token": 141,
                                            "end_token": 156,
                                            "label": "else:\n            blocks[i] = '# ' + blocks[i] + '\\n'",
                                            "children": [
                                                {
                                                    "type": "block",
                                                    "start_token": 142,
                                                    "end_token": 156,
                                                    "label": ":\n            blocks[i] = '# ' + blocks[i] + '\\n'",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "start_token": 144,
                                                            "end_token": 156,
                                                            "label": "blocks[i] = '# ' + blocks[i] + '\\n'",
                                                            "children": [
                                                                {
                                                                    "type": "subscript",
                                                                    "start_token": 144,
                                                                    "end_token": 147,
                                                                    "label": "blocks[i]",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 144,
                                                                            "end_token": 144,
                                                                            "label": "blocks",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "binary_operator",
                                                                    "start_token": 149,
                                                                    "end_token": 154,
                                                                    "label": "'# ' + blocks[i]",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 149,
                                                                            "end_token": 150,
                                                                            "label": "'# ' +",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "start_token": 159,
                            "end_token": 163,
                            "label": "# Sorting the libraries\n",
                            "children": []
                        },
                        {
                            "type": "assignment",
                            "start_token": 164,
                            "end_token": 177,
                            "label": "inner_blocks = sorted(blocks[0].split('##'))",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 164,
                                    "end_token": 164,
                                    "label": "inner_blocks",
                                    "children": []
                                },
                                {
                                    "type": "call",
                                    "start_token": 166,
                                    "end_token": 177,
                                    "label": "sorted(blocks[0].split('##'))",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "start_token": 166,
                                            "end_token": 172,
                                            "label": "sorted(blocks[0].",
                                            "children": [
                                                {
                                                    "type": "subscript",
                                                    "start_token": 168,
                                                    "end_token": 171,
                                                    "label": "blocks[0]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 168,
                                                            "end_token": 170,
                                                            "label": "blocks[0",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "string",
                                            "start_token": 175,
                                            "end_token": 175,
                                            "label": "'##'",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "for_statement",
                            "start_token": 179,
                            "end_token": 217,
                            "label": "for i in range(1, len(inner_blocks)):\n        if inner_blocks[i][0] != '#':\n            inner_blocks[i] = '##' + inner_blocks[i]\n",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 180,
                                    "end_token": 180,
                                    "label": "i",
                                    "children": []
                                },
                                {
                                    "type": "call",
                                    "start_token": 182,
                                    "end_token": 190,
                                    "label": "range(1, len(inner_blocks))",
                                    "children": [
                                        {
                                            "type": "call",
                                            "start_token": 184,
                                            "end_token": 188,
                                            "label": "1, len(inner_blocks",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 184,
                                                    "end_token": 185,
                                                    "label": "1,",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "start_token": 191,
                                    "end_token": 217,
                                    "label": ":\n        if inner_blocks[i][0] != '#':\n            inner_blocks[i] = '##' + inner_blocks[i]\n",
                                    "children": [
                                        {
                                            "type": "if_statement",
                                            "start_token": 193,
                                            "end_token": 203,
                                            "label": "if inner_blocks[i][0] != '#'",
                                            "children": [
                                                {
                                                    "type": "comparison_operator",
                                                    "start_token": 195,
                                                    "end_token": 201,
                                                    "label": "[i][0] !",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 199,
                                                            "end_token": 200,
                                                            "label": "0]",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "assignment",
                            "start_token": 218,
                            "end_token": 225,
                            "label": "inner_blocks = ''.join(inner_blocks)",
                            "children": [
                                {
                                    "type": "binary_operator",
                                    "start_token": 220,
                                    "end_token": 224,
                                    "label": "''.join(inner_blocks",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "start_token": 220,
                                            "end_token": 223,
                                            "label": "''.join(",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 220,
                                                    "end_token": 220,
                                                    "label": "''",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "start_token": 228,
                            "end_token": 246,
                            "label": "# Replacing the non-sorted libraries by the sorted ones and gathering all at the final_README file\n",
                            "children": []
                        },
                        {
                            "type": "assignment",
                            "start_token": 247,
                            "end_token": 265,
                            "label": "blocks[0] = inner_blocks\n    final_README = table_of_contents + '- - -' + ''.join(blocks)",
                            "children": [
                                {
                                    "type": "subscript",
                                    "start_token": 248,
                                    "end_token": 250,
                                    "label": "[0]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 248,
                                            "end_token": 248,
                                            "label": "[",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "binary_operator",
                                    "start_token": 252,
                                    "end_token": 263,
                                    "label": "inner_blocks\n    final_README = table_of_contents + '- - -' + ''.join(",
                                    "children": [
                                        {
                                            "type": "string",
                                            "start_token": 258,
                                            "end_token": 258,
                                            "label": "'- - -'",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "start_token": 268,
                            "end_token": 284,
                            "label": "with open('README.md', 'w+') as sorted_file:\n        sorted_file.write(final_README)",
                            "children": []
                        },
                        {
                            "type": "with_statement",
                            "start_token": 268,
                            "end_token": 284,
                            "label": "with open('README.md', 'w+') as sorted_file:\n        sorted_file.write(final_README)",
                            "children": [
                                {
                                    "type": "with_item",
                                    "start_token": 270,
                                    "end_token": 276,
                                    "label": "('README.md', 'w+') as sorted_file",
                                    "children": [
                                        {
                                            "type": "call",
                                            "start_token": 270,
                                            "end_token": 276,
                                            "label": "('README.md', 'w+') as sorted_file",
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "start_token": 271,
                                                    "end_token": 273,
                                                    "label": "'README.md', 'w+'",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "start_token": 277,
                                    "end_token": 284,
                                    "label": ":\n        sorted_file.write(final_README)",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "start_token": 279,
                                            "end_token": 284,
                                            "label": "sorted_file.write(final_README)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "start_token": 279,
                                                    "end_token": 283,
                                                    "label": "sorted_file.write(final_README",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "start_token": 279,
                                                            "end_token": 281,
                                                            "label": "sorted_file.write",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 279,
                                                                    "end_token": 279,
                                                                    "label": "sorted_file",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "start_token": 287,
            "end_token": 576,
            "label": "def main():\n    # First, we load the current README into memory as an array of lines\n    with open('README.md', 'r') as read_me_file:\n        read_me = read_me_file.readlines()\n\n    # Then we cluster the lines together as blocks\n    # Each block represents a collection of lines that should be sorted\n    # This was done by assuming only links ([...](...)) are meant to be sorted\n    # Clustering is done by indentation\n    blocks = []\n    last_indent = None\n    for line in read_me:\n        s_line = line.lstrip()\n        indent = len(line) - len(s_line)\n\n        if any([s_line.startswith(s) for s in ['* [', '- [']]):\n            if indent == last_indent:\n                blocks[-1].append(line)\n            else:\n                blocks.append([line])\n            last_indent = indent\n        else:\n            blocks.append([line])\n            last_indent = None\n\n    with open('README.md', 'w+') as sorted_file:\n        # Then all of the blocks are sorted individually\n        blocks = [\n            ''.join(sorted(block, key=str.lower)) for block in blocks\n        ]\n        # And the result is written back to README.md\n        sorted_file.write(''.join(blocks))\n\n    # Then we call the sorting method\n    sort_blocks()",
            "children": [
                {
                    "type": "identifier",
                    "start_token": 288,
                    "end_token": 288,
                    "label": "main",
                    "children": []
                },
                {
                    "type": "parameters",
                    "start_token": 289,
                    "end_token": 290,
                    "label": "()",
                    "children": []
                },
                {
                    "type": "block",
                    "start_token": 291,
                    "end_token": 576,
                    "label": ":\n    # First, we load the current README into memory as an array of lines\n    with open('README.md', 'r') as read_me_file:\n        read_me = read_me_file.readlines()\n\n    # Then we cluster the lines together as blocks\n    # Each block represents a collection of lines that should be sorted\n    # This was done by assuming only links ([...](...)) are meant to be sorted\n    # Clustering is done by indentation\n    blocks = []\n    last_indent = None\n    for line in read_me:\n        s_line = line.lstrip()\n        indent = len(line) - len(s_line)\n\n        if any([s_line.startswith(s) for s in ['* [', '- [']]):\n            if indent == last_indent:\n                blocks[-1].append(line)\n            else:\n                blocks.append([line])\n            last_indent = indent\n        else:\n            blocks.append([line])\n            last_indent = None\n\n    with open('README.md', 'w+') as sorted_file:\n        # Then all of the blocks are sorted individually\n        blocks = [\n            ''.join(sorted(block, key=str.lower)) for block in blocks\n        ]\n        # And the result is written back to README.md\n        sorted_file.write(''.join(blocks))\n\n    # Then we call the sorting method\n    sort_blocks()",
                    "children": [
                        {
                            "type": "comment",
                            "start_token": 293,
                            "end_token": 308,
                            "label": "# First, we load the current README into memory as an array of lines\n",
                            "children": []
                        },
                        {
                            "type": "with_statement",
                            "start_token": 309,
                            "end_token": 327,
                            "label": "with open('README.md', 'r') as read_me_file:\n        read_me = read_me_file.readlines()\n",
                            "children": [
                                {
                                    "type": "with_item",
                                    "start_token": 311,
                                    "end_token": 317,
                                    "label": "('README.md', 'r') as read_me_file",
                                    "children": [
                                        {
                                            "type": "call",
                                            "start_token": 311,
                                            "end_token": 316,
                                            "label": "('README.md', 'r') as",
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "start_token": 312,
                                                    "end_token": 314,
                                                    "label": "'README.md', 'r'",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "start_token": 318,
                                    "end_token": 327,
                                    "label": ":\n        read_me = read_me_file.readlines()\n",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "start_token": 320,
                                            "end_token": 326,
                                            "label": "read_me = read_me_file.readlines()",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 320,
                                                    "end_token": 320,
                                                    "label": "read_me",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 322,
                                                    "end_token": 325,
                                                    "label": "read_me_file.readlines(",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "start_token": 329,
                            "end_token": 338,
                            "label": "# Then we cluster the lines together as blocks\n",
                            "children": []
                        },
                        {
                            "type": "comment",
                            "start_token": 340,
                            "end_token": 351,
                            "label": "Each block represents a collection of lines that should be sorted\n",
                            "children": []
                        },
                        {
                            "type": "comment",
                            "start_token": 353,
                            "end_token": 377,
                            "label": "This was done by assuming only links ([...](...)) are meant to be sorted\n",
                            "children": []
                        },
                        {
                            "type": "comment",
                            "start_token": 379,
                            "end_token": 384,
                            "label": "Clustering is done by indentation\n",
                            "children": []
                        },
                        {
                            "type": "assignment",
                            "start_token": 385,
                            "end_token": 392,
                            "label": "blocks = []\n    last_indent = None",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 385,
                                    "end_token": 385,
                                    "label": "blocks",
                                    "children": []
                                },
                                {
                                    "type": "list",
                                    "start_token": 387,
                                    "end_token": 388,
                                    "label": "[]",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "assignment",
                            "start_token": 390,
                            "end_token": 392,
                            "label": "last_indent = None",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 390,
                                    "end_token": 390,
                                    "label": "last_indent",
                                    "children": []
                                },
                                {
                                    "type": "none",
                                    "start_token": 392,
                                    "end_token": 392,
                                    "label": "None",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "for_statement",
                            "start_token": 394,
                            "end_token": 492,
                            "label": "for line in read_me:\n        s_line = line.lstrip()\n        indent = len(line) - len(s_line)\n\n        if any([s_line.startswith(s) for s in ['* [', '- [']]):\n            if indent == last_indent:\n                blocks[-1].append(line)\n            else:\n                blocks.append([line])\n            last_indent = indent\n        else:\n            blocks.append([line])\n            last_indent = None\n",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 395,
                                    "end_token": 395,
                                    "label": "line",
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "start_token": 397,
                                    "end_token": 397,
                                    "label": "read_me",
                                    "children": []
                                },
                                {
                                    "type": "block",
                                    "start_token": 398,
                                    "end_token": 492,
                                    "label": ":\n        s_line = line.lstrip()\n        indent = len(line) - len(s_line)\n\n        if any([s_line.startswith(s) for s in ['* [', '- [']]):\n            if indent == last_indent:\n                blocks[-1].append(line)\n            else:\n                blocks.append([line])\n            last_indent = indent\n        else:\n            blocks.append([line])\n            last_indent = None\n",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "start_token": 400,
                                            "end_token": 406,
                                            "label": "s_line = line.lstrip()",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 400,
                                                    "end_token": 400,
                                                    "label": "s_line",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "start_token": 402,
                                                    "end_token": 405,
                                                    "label": "line.lstrip(",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 408,
                                            "end_token": 419,
                                            "label": "indent = len(line) - len(s_line)\n",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 408,
                                                    "end_token": 408,
                                                    "label": "indent",
                                                    "children": []
                                                },
                                                {
                                                    "type": "binary_operator",
                                                    "start_token": 410,
                                                    "end_token": 418,
                                                    "label": "len(line) - len(s_line)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 410,
                                                            "end_token": 412,
                                                            "label": "len(line",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "if_statement",
                                            "start_token": 421,
                                            "end_token": 476,
                                            "label": "if any([s_line.startswith(s) for s in ['* [', '- [']]):\n            if indent == last_indent:\n                blocks[-1].append(line)\n            else:\n                blocks.append([line])\n            last_indent = indent\n",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "start_token": 422,
                                                    "end_token": 440,
                                                    "label": "any([s_line.startswith(s) for s in ['* [', '- [']])",
                                                    "children": [
                                                        {
                                                            "type": "binary_operator",
                                                            "start_token": 424,
                                                            "end_token": 439,
                                                            "label": "[s_line.startswith(s) for s in ['* [', '- [']]",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "start_token": 426,
                                                                    "end_token": 437,
                                                                    "label": ".startswith(s) for s in ['* [', '- ['",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 426,
                                                                            "end_token": 426,
                                                                            "label": ".",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "start_token": 441,
                                                    "end_token": 476,
                                                    "label": ":\n            if indent == last_indent:\n                blocks[-1].append(line)\n            else:\n                blocks.append([line])\n            last_indent = indent\n",
                                                    "children": [
                                                        {
                                                            "type": "if_statement",
                                                            "start_token": 443,
                                                            "end_token": 475,
                                                            "label": "if indent == last_indent:\n                blocks[-1].append(line)\n            else:\n                blocks.append([line])\n            last_indent = indent",
                                                            "children": [
                                                                {
                                                                    "type": "comparison_operator",
                                                                    "start_token": 445,
                                                                    "end_token": 447,
                                                                    "label": "== last_indent",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 445,
                                                                            "end_token": 445,
                                                                            "label": "=",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "start_token": 494,
                            "end_token": 563,
                            "label": "with open('README.md', 'w+') as sorted_file:\n        # Then all of the blocks are sorted individually\n        blocks = [\n            ''.join(sorted(block, key=str.lower)) for block in blocks\n        ]\n        # And the result is written back to README.md\n        sorted_file.write(''.join(blocks))",
                            "children": []
                        },
                        {
                            "type": "with_statement",
                            "start_token": 494,
                            "end_token": 563,
                            "label": "with open('README.md', 'w+') as sorted_file:\n        # Then all of the blocks are sorted individually\n        blocks = [\n            ''.join(sorted(block, key=str.lower)) for block in blocks\n        ]\n        # And the result is written back to README.md\n        sorted_file.write(''.join(blocks))",
                            "children": [
                                {
                                    "type": "with_item",
                                    "start_token": 496,
                                    "end_token": 502,
                                    "label": "('README.md', 'w+') as sorted_file",
                                    "children": [
                                        {
                                            "type": "call",
                                            "start_token": 496,
                                            "end_token": 502,
                                            "label": "('README.md', 'w+') as sorted_file",
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "start_token": 497,
                                                    "end_token": 499,
                                                    "label": "'README.md', 'w+'",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "start_token": 503,
                                    "end_token": 563,
                                    "label": ":\n        # Then all of the blocks are sorted individually\n        blocks = [\n            ''.join(sorted(block, key=str.lower)) for block in blocks\n        ]\n        # And the result is written back to README.md\n        sorted_file.write(''.join(blocks))",
                                    "children": [
                                        {
                                            "type": "comment",
                                            "start_token": 505,
                                            "end_token": 514,
                                            "label": "# Then all of the blocks are sorted individually\n",
                                            "children": []
                                        },
                                        {
                                            "type": "assignment",
                                            "start_token": 515,
                                            "end_token": 561,
                                            "label": "blocks = [\n            ''.join(sorted(block, key=str.lower)) for block in blocks\n        ]\n        # And the result is written back to README.md\n        sorted_file.write(''.join(blocks",
                                            "children": [
                                                {
                                                    "type": "list_comprehension",
                                                    "start_token": 516,
                                                    "end_token": 538,
                                                    "label": "= [\n            ''.join(sorted(block, key=str.lower)) for block in blocks\n",
                                                    "children": [
                                                        {
                                                            "type": "binary_operator",
                                                            "start_token": 518,
                                                            "end_token": 533,
                                                            "label": "\n            ''.join(sorted(block, key=str.lower))",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "start_token": 520,
                                                                    "end_token": 532,
                                                                    "label": ".join(sorted(block, key=str.lower)",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "start_token": 520,
                                                                            "end_token": 530,
                                                                            "label": ".join(sorted(block, key=str.",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "for_in_clause",
                                                            "start_token": 534,
                                                            "end_token": 538,
                                                            "label": "for block in blocks\n",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "start_token": 566,
                            "end_token": 573,
                            "label": "# Then we call the sorting method\n",
                            "children": []
                        },
                        {
                            "type": "expression_statement",
                            "start_token": 574,
                            "end_token": 576,
                            "label": "sort_blocks()",
                            "children": [
                                {
                                    "type": "call",
                                    "start_token": 574,
                                    "end_token": 575,
                                    "label": "sort_blocks(",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "if_statement",
            "start_token": 580,
            "end_token": 589,
            "label": "if __name__ == \"__main__\":\n    main()",
            "children": [
                {
                    "type": "comparison_operator",
                    "start_token": 582,
                    "end_token": 584,
                    "label": "== \"__main__\"",
                    "children": []
                },
                {
                    "type": "block",
                    "start_token": 585,
                    "end_token": 589,
                    "label": ":\n    main()",
                    "children": [
                        {
                            "type": "call",
                            "start_token": 587,
                            "end_token": 588,
                            "label": "main(",
                            "children": []
                        }
                    ]
                }
            ]
        }
    ]
}