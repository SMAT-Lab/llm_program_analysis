{
    "type": "module",
    "code": "",
    "children": [
        {
            "type": "future_import_statement",
            "code": "from __future__ import annotations",
            "children": []
        },
        {
            "type": "function_definition",
            "code": "def depth_first_search(possible_board: list[int], diagonal_right_collisions: list[int], diagonal_left_collisions: list[int], boards: list[list[str]], n: int) -> None:",
            "children": [
                {
                    "type": "comment",
                    "code": "\"\"\"\n>>> boards = []\n>>> depth_first_search([], [], [], boards, 4)\n>>> for board in boards:\n...     print(board)\n['. Q . . ', '. . . Q ', 'Q . . . ', '. . Q . ']\n['. . Q . ', 'Q . . . ', '. . . Q ', '. Q . . ']\n\"\"\"",
                    "children": []
                },
                {
                    "type": "assignment",
                    "code": "row = len(possible_board)",
                    "children": [
                        {
                            "type": "identifier",
                            "code": "row",
                            "children": []
                        },
                        {
                            "type": "call",
                            "code": "len(possible_board)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "code": "len",
                                    "children": []
                                },
                                {
                                    "type": "argument_list",
                                    "code": "possible_board",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "code": "possible_board",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "if_statement",
                    "code": "if row == n:",
                    "children": [
                        {
                            "type": "block",
                            "code": "",
                            "children": [
                                {
                                    "type": "call",
                                    "code": "boards.append([\". \" * i + \"Q \" + \". \" * (n - 1 - i) for i in possible_board])",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "code": "boards.append",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "code": "boards",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "code": "append",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "list_comprehension",
                                            "code": "[\". \" * i + \"Q \" + \". \" * (n - 1 - i) for i in possible_board]",
                                            "children": [
                                                {
                                                    "type": "binary_operator",
                                                    "code": "\". \" * i + \"Q \" + \". \" * (n - 1 - i)",
                                                    "children": [
                                                        {
                                                            "type": "binary_operator",
                                                            "code": "\". \" * i + \"Q \"",
                                                            "children": [
                                                                {
                                                                    "type": "binary_operator",
                                                                    "code": "\". \" * i",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "code": "\". \"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "code": "i",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "code": "\"Q \"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "binary_operator",
                                                            "code": "\". \" * (n - 1 - i)",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "code": "\". \"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "parenthesized_expression",
                                                                    "code": "n - 1 - i",
                                                                    "children": [
                                                                        {
                                                                            "type": "binary_operator",
                                                                            "code": "n - 1",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "code": "n",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "integer",
                                                                                    "code": "1",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "code": "i",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "for_in_clause",
                                                    "code": "for i in possible_board",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "code": "i",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "code": "possible_board",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "return_statement",
                                    "code": "return",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "for_statement",
                    "code": "for col in range(n):",
                    "children": [
                        {
                            "type": "block",
                            "code": "",
                            "children": [
                                {
                                    "type": "if_statement",
                                    "code": "if (col in possible_board or row - col in diagonal_right_collisions or row + col in diagonal_left_collisions):",
                                    "children": [
                                        {
                                            "type": "block",
                                            "code": "",
                                            "children": [
                                                {
                                                    "type": "continue_statement",
                                                    "code": "continue",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "call",
                                    "code": "depth_first_search([*possible_board, col], [*diagonal_right_collisions, row - col], [*diagonal_left_collisions, row + col], boards, n)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "code": "depth_first_search",
                                            "children": []
                                        },
                                        {
                                            "type": "argument_list",
                                            "code": "[*possible_board, col], [*diagonal_right_collisions, row - col], [*diagonal_left_collisions, row + col], boards, n",
                                            "children": [
                                                {
                                                    "type": "list_splat",
                                                    "code": "[*possible_board, col]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "code": "possible_board",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "code": "col",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "list_splat",
                                                    "code": "[*diagonal_right_collisions, row - col]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "code": "diagonal_right_collisions",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "binary_operator",
                                                            "code": "row - col",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "code": "row",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "code": "col",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "list_splat",
                                                    "code": "[*diagonal_left_collisions, row + col]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "code": "diagonal_left_collisions",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "binary_operator",
                                                            "code": "row + col",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "code": "row",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "code": "col",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "identifier",
                                                    "code": "boards",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "code": "n",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "code": "def n_queens_solution(n: int) -> None:",
            "children": [
                {
                    "type": "assignment",
                    "code": "boards: list[list[str]] = []",
                    "children": [
                        {
                            "type": "identifier",
                            "code": "boards",
                            "children": []
                        },
                        {
                            "type": "type_annotation",
                            "code": "list[list[str]]",
                            "children": [
                                {
                                    "type": "generic_type",
                                    "code": "list[list[str]]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "code": "list",
                                            "children": []
                                        },
                                        {
                                            "type": "generic_type",
                                            "code": "list[str]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "code": "list",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "code": "str",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "list",
                            "code": "[]",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "call",
                    "code": "depth_first_search([], [], [], boards, n)",
                    "children": [
                        {
                            "type": "identifier",
                            "code": "depth_first_search",
                            "children": []
                        },
                        {
                            "type": "argument_list",
                            "code": "[], [], [], boards, n",
                            "children": [
                                {
                                    "type": "list",
                                    "code": "[]",
                                    "children": []
                                },
                                {
                                    "type": "list",
                                    "code": "[]",
                                    "children": []
                                },
                                {
                                    "type": "list",
                                    "code": "[]",
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "code": "boards",
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "code": "n",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "for_statement",
                    "code": "for board in boards:",
                    "children": [
                        {
                            "type": "block",
                            "code": "",
                            "children": [
                                {
                                    "type": "for_statement",
                                    "code": "for column in board:",
                                    "children": [
                                        {
                                            "type": "block",
                                            "code": "",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "code": "print(column)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "code": "print",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "code": "column",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "code": "column",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "code": "print(\"\")",
                                    "children": [
                                        {
                                            "type": "call",
                                            "code": "print(\"\")",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "code": "print",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "code": "\"\"",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "code": "\"\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "expression_statement",
                    "code": "print(len(boards), \"solutions were found.\")",
                    "children": [
                        {
                            "type": "call",
                            "code": "print(len(boards), \"solutions were found.\")",
                            "children": [
                                {
                                    "type": "identifier",
                                    "code": "print",
                                    "children": []
                                },
                                {
                                    "type": "argument_list",
                                    "code": "len(boards), \"solutions were found.\"",
                                    "children": [
                                        {
                                            "type": "call",
                                            "code": "len(boards)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "code": "len",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "code": "boards",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "code": "boards",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "string",
                                            "code": "\"solutions were found.\"",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "if_statement",
            "code": "if __name__ == \"__main__\":",
            "children": [
                {
                    "type": "block",
                    "code": "",
                    "children": [
                        {
                            "type": "import_statement",
                            "code": "import doctest",
                            "children": []
                        },
                        {
                            "type": "expression_statement",
                            "code": "doctest.testmod()",
                            "children": [
                                {
                                    "type": "call",
                                    "code": "doctest.testmod()",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "code": "doctest.testmod",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "code": "doctest",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "code": "testmod",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "code": "n_queens_solution(4)",
                            "children": [
                                {
                                    "type": "call",
                                    "code": "n_queens_solution(4)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "code": "n_queens_solution",
                                            "children": []
                                        },
                                        {
                                            "type": "argument_list",
                                            "code": "4",
                                            "children": [
                                                {
                                                    "type": "integer",
                                                    "code": "4",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}