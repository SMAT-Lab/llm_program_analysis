{
    "type": "module",
    "code": "",
    "children": [
        {
            "type": "import_statement",
            "code": "from abc import ABCMeta, abstractmethod",
            "children": []
        },
        {
            "type": "import_statement",
            "code": "from enum import Enum",
            "children": []
        },
        {
            "type": "import_statement",
            "code": "import sys",
            "children": []
        },
        {
            "type": "class_definition",
            "code": "class Suit(Enum):",
            "children": [
                {
                    "type": "block",
                    "code": "",
                    "children": [
                        {
                            "type": "assignment",
                            "code": "HEART = 0",
                            "children": []
                        },
                        {
                            "type": "assignment",
                            "code": "DIAMOND = 1",
                            "children": []
                        },
                        {
                            "type": "assignment",
                            "code": "CLUBS = 2",
                            "children": []
                        },
                        {
                            "type": "assignment",
                            "code": "SPADE = 3",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "class_definition",
            "code": "class Card(metaclass=ABCMeta):",
            "children": [
                {
                    "type": "block",
                    "code": "",
                    "children": [
                        {
                            "type": "function_definition",
                            "code": "def __init__(self, value, suit):",
                            "children": [
                                {
                                    "type": "block",
                                    "code": "",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "code": "self.value = value",
                                            "children": []
                                        },
                                        {
                                            "type": "assignment",
                                            "code": "self.suit = suit",
                                            "children": []
                                        },
                                        {
                                            "type": "assignment",
                                            "code": "self.is_available = True",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "property",
                            "code": "@property",
                            "children": [
                                {
                                    "type": "function_definition",
                                    "code": "def value(self):",
                                    "children": [
                                        {
                                            "type": "block",
                                            "code": "pass",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "code": "def value(self, other):",
                            "children": [
                                {
                                    "type": "block",
                                    "code": "pass",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "class_definition",
            "code": "class BlackJackCard(Card):",
            "children": [
                {
                    "type": "block",
                    "code": "",
                    "children": [
                        {
                            "type": "function_definition",
                            "code": "def __init__(self, value, suit):",
                            "children": [
                                {
                                    "type": "block",
                                    "code": "super(BlackJackCard, self).__init__(value, suit)",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "code": "def is_ace(self):",
                            "children": [
                                {
                                    "type": "block",
                                    "code": "return True if self._value == 1 else False",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "code": "def is_face_card(self):",
                            "children": [
                                {
                                    "type": "block",
                                    "code": "return True if 10 < self._value <= 13 else False",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "property",
                            "code": "@property",
                            "children": [
                                {
                                    "type": "function_definition",
                                    "code": "def value(self):",
                                    "children": [
                                        {
                                            "type": "block",
                                            "code": [
                                                "if self.is_ace() == 1:",
                                                "    return 1",
                                                "elif self.is_face_card():",
                                                "    return 10",
                                                "else:",
                                                "    return self._value"
                                            ],
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "code": "def value(self, new_value):",
                            "children": [
                                {
                                    "type": "block",
                                    "code": [
                                        "if 1 <= new_value <= 13:",
                                        "    self._value = new_value",
                                        "else:",
                                        "    raise ValueError('Invalid card value: {}'.format(new_value))"
                                    ],
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "class_definition",
            "code": "class Hand(object):",
            "children": [
                {
                    "type": "block",
                    "code": "",
                    "children": [
                        {
                            "type": "function_definition",
                            "code": "def __init__(self, cards):",
                            "children": [
                                {
                                    "type": "block",
                                    "code": "self.cards = cards",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "code": "def add_card(self, card):",
                            "children": [
                                {
                                    "type": "block",
                                    "code": "self.cards.append(card)",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "code": "def score(self):",
                            "children": [
                                {
                                    "type": "block",
                                    "code": "total_value = 0\nfor card in self.cards:\n    total_value += card.value\nreturn total_value",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "class_definition",
            "code": "class BlackJackHand(Hand):",
            "children": [
                {
                    "type": "assignment",
                    "code": "BLACKJACK = 21",
                    "children": []
                },
                {
                    "type": "function_definition",
                    "code": "def __init__(self, cards):",
                    "children": [
                        {
                            "type": "block",
                            "code": "super(BlackJackHand, self).__init__(cards)",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "code": "def score(self):",
                    "children": [
                        {
                            "type": "block",
                            "code": [
                                "min_over = sys.MAXSIZE",
                                "max_under = -sys.MAXSIZE",
                                "for score in self.possible_scores():",
                                "    if self.BLACKJACK < score < min_over:",
                                "        min_over = score",
                                "    elif max_under < score <= self.BLACKJACK:",
                                "        max_under = score",
                                "return max_under if max_under != -sys.MAXSIZE else min_over"
                            ],
                            "children": []
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "code": "def possible_scores(self):",
                    "children": [
                        {
                            "type": "block",
                            "code": "pass",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "class_definition",
            "code": "class Deck(object):",
            "children": [
                {
                    "type": "block",
                    "code": "",
                    "children": [
                        {
                            "type": "function_definition",
                            "code": "def __init__(self, cards):",
                            "children": [
                                {
                                    "type": "block",
                                    "code": [
                                        "self.cards = cards",
                                        "self.deal_index = 0"
                                    ],
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "code": "def remaining_cards(self):",
                            "children": [
                                {
                                    "type": "block",
                                    "code": "return len(self.cards) - self.deal_index",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "code": "def deal_card(self):",
                            "children": [
                                {
                                    "type": "block",
                                    "code": [
                                        "try:",
                                        "    card = self.cards[self.deal_index]",
                                        "    card.is_available = False",
                                        "    self.deal_index += 1",
                                        "except IndexError:",
                                        "    return None",
                                        "return card"
                                    ],
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "code": "def shuffle(self):",
                            "children": [
                                {
                                    "type": "block",
                                    "code": "pass",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}