{
    "type": "module",
    "code": "",
    "children": [
        {
            "type": "comment",
            "code": "# -*- coding: utf-8 -*-"
        },
        {
            "type": "import_statement",
            "code": "from mrjob.job import MRJob",
            "children": [
                {
                    "type": "import_prefix",
                    "code": "from mrjob"
                },
                {
                    "type": "aliased_import",
                    "code": "import MRJob"
                }
            ]
        },
        {
            "type": "class_definition",
            "code": "class SpendingByCategory(MRJob):",
            "children": [
                {
                    "type": "decorated_definition",
                    "code": "",
                    "children": [
                        {
                            "type": "function_definition",
                            "code": "def __init__(self, categorizer):",
                            "children": [
                                {
                                    "type": "parameters",
                                    "code": "(self, categorizer)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "code": "self"
                                        },
                                        {
                                            "type": "identifier",
                                            "code": "categorizer"
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "code": "",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "code": "self.categorizer = categorizer",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "code": "self.categorizer"
                                                },
                                                {
                                                    "type": "identifier",
                                                    "code": "categorizer"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "decorated_definition",
                    "code": "",
                    "children": [
                        {
                            "type": "function_definition",
                            "code": "def current_year_month(self):",
                            "children": [
                                {
                                    "type": "parameters",
                                    "code": "(self)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "code": "self"
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "code": "...",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "decorated_definition",
                    "code": "",
                    "children": [
                        {
                            "type": "function_definition",
                            "code": "def extract_year_month(self, timestamp):",
                            "children": [
                                {
                                    "type": "parameters",
                                    "code": "(self, timestamp)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "code": "self"
                                        },
                                        {
                                            "type": "identifier",
                                            "code": "timestamp"
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "code": "...",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "decorated_definition",
                    "code": "",
                    "children": [
                        {
                            "type": "function_definition",
                            "code": "def handle_budget_notifications(self, key, total):",
                            "children": [
                                {
                                    "type": "parameters",
                                    "code": "(self, key, total)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "code": "self"
                                        },
                                        {
                                            "type": "identifier",
                                            "code": "key"
                                        },
                                        {
                                            "type": "identifier",
                                            "code": "total"
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "code": "...",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "decorated_definition",
                    "code": "",
                    "children": [
                        {
                            "type": "function_definition",
                            "code": "def mapper(self, _, line):",
                            "children": [
                                {
                                    "type": "parameters",
                                    "code": "(self, _, line)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "code": "self"
                                        },
                                        {
                                            "type": "identifier",
                                            "code": "_"
                                        },
                                        {
                                            "type": "identifier",
                                            "code": "line"
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "code": "\"\"\"Parse each log line, extract and transform relevant lines.\n\nEmit key value pairs of the form:\n\n(2016-01, shopping), 25\n(2016-01, shopping), 100\n(2016-01, gas), 50\n\"\"\"",
                                    "children": [
                                        {
                                            "type": "string",
                                            "code": "\"\"\"Parse each log line, extract and transform relevant lines.\n\nEmit key value pairs of the form:\n\n(2016-01, shopping), 25\n(2016-01, shopping), 100\n(2016-01, gas), 50\n\"\"\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "code": "\"\"\""
                                                },
                                                {
                                                    "type": "string_content",
                                                    "code": "Parse each log line, extract and transform relevant lines.\n\nEmit key value pairs of the form:\n\n(2016-01, shopping), 25\n(2016-01, shopping), 100\n(2016-01, gas), 50"
                                                },
                                                {
                                                    "type": "string_end",
                                                    "code": "\"\"\""
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "code": "timestamp, category, amount = line.split('\t')",
                                            "children": [
                                                {
                                                    "type": "expression_list",
                                                    "code": "timestamp, category, amount",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "code": "timestamp"
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "code": "category"
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "code": "amount"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "call",
                                                    "code": "line.split('\t')",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "code": "line.split"
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "code": "('\t')",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "code": "'\t'",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "code": "'"
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "code": "\t"
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "code": "'"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "code": "period = self.extract_year_month(timestamp)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "code": "period"
                                                },
                                                {
                                                    "type": "call",
                                                    "code": "self.extract_year_month(timestamp)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "code": "self.extract_year_month"
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "code": "(timestamp)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "code": "timestamp"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "conditional_expression",
                                            "code": "if period == self.current_year_month():",
                                            "children": [
                                                {
                                                    "type": "comparison_operator",
                                                    "code": "period == self.current_year_month()",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "code": "period"
                                                        },
                                                        {
                                                            "type": "call",
                                                            "code": "self.current_year_month()",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "code": "self.current_year_month"
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "code": "()",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "code": "",
                                                    "children": [
                                                        {
                                                            "type": "yield",
                                                            "code": "yield (period, category), amount",
                                                            "children": [
                                                                {
                                                                    "type": "pair",
                                                                    "code": "(period, category), amount",
                                                                    "children": [
                                                                        {
                                                                            "type": "tuple",
                                                                            "code": "(period, category)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "code": "period"
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "code": "category"
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "code": "amount"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "decorated_definition",
                    "code": "",
                    "children": [
                        {
                            "type": "function_definition",
                            "code": "def reducer(self, key, values):",
                            "children": [
                                {
                                    "type": "parameters",
                                    "code": "(self, key, values)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "code": "self"
                                        },
                                        {
                                            "type": "identifier",
                                            "code": "key"
                                        },
                                        {
                                            "type": "identifier",
                                            "code": "values"
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "code": "\"\"\"Sum values for each key.\n\n(2016-01, shopping), 125\n(2016-01, gas), 50\n\"\"\"",
                                    "children": [
                                        {
                                            "type": "string",
                                            "code": "\"\"\"Sum values for each key.\n\n(2016-01, shopping), 125\n(2016-01, gas), 50\n\"\"\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "code": "\"\"\""
                                                },
                                                {
                                                    "type": "string_content",
                                                    "code": "Sum values for each key.\n\n(2016-01, shopping), 125\n(2016-01, gas), 50"
                                                },
                                                {
                                                    "type": "string_end",
                                                    "code": "\"\"\""
                                                }
                                            ]
                                        },
                                        {
                                            "type": "assignment",
                                            "code": "total = sum(values)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "code": "total"
                                                },
                                                {
                                                    "type": "call",
                                                    "code": "sum(values)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "code": "sum"
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "code": "(values)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "code": "values"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "code": "self.handle_budget_notifications(key, total)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "code": "self.handle_budget_notifications(key, total)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "code": "self.handle_budget_notifications"
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "code": "(key, total)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "code": "key"
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "code": "total"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "yield",
                                            "code": "yield key, sum(values)",
                                            "children": [
                                                {
                                                    "type": "pair",
                                                    "code": "key, sum(values)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "code": "key"
                                                        },
                                                        {
                                                            "type": "call",
                                                            "code": "sum(values)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "code": "sum"
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "code": "(values)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "code": "values"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "decorated_definition",
                    "code": "",
                    "children": [
                        {
                            "type": "function_definition",
                            "code": "def steps(self):",
                            "children": [
                                {
                                    "type": "parameters",
                                    "code": "(self)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "code": "self"
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "code": "\"\"\"Run the map and reduce steps.\"\"\"",
                                    "children": [
                                        {
                                            "type": "string",
                                            "code": "\"\"\"Run the map and reduce steps.\"\"\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "code": "\"\"\""
                                                },
                                                {
                                                    "type": "string_content",
                                                    "code": "Run the map and reduce steps."
                                                },
                                                {
                                                    "type": "string_end",
                                                    "code": "\"\"\""
                                                }
                                            ]
                                        },
                                        {
                                            "type": "return_statement",
                                            "code": "return [self.mr(mapper=self.mapper, reducer=self.reducer)]",
                                            "children": [
                                                {
                                                    "type": "list",
                                                    "code": "[self.mr(mapper=self.mapper, reducer=self.reducer)]",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "code": "self.mr(mapper=self.mapper, reducer=self.reducer)",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "code": "self.mr"
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "code": "(mapper=self.mapper, reducer=self.reducer)",
                                                                    "children": [
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "code": "mapper=self.mapper",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "code": "mapper"
                                                                                },
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "code": "self.mapper"
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "code": "reducer=self.reducer",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "code": "reducer"
                                                                                },
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "code": "self.reducer"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "conditional_expression",
            "code": "if __name__ == '__main__':",
            "children": [
                {
                    "type": "comparison_operator",
                    "code": "__name__ == '__main__'",
                    "children": [
                        {
                            "type": "identifier",
                            "code": "__name__"
                        },
                        {
                            "type": "string",
                            "code": "'__main__'",
                            "children": [
                                {
                                    "type": "string_start",
                                    "code": "'"
                                },
                                {
                                    "type": "string_content",
                                    "code": "__main__"
                                },
                                {
                                    "type": "string_end",
                                    "code": "'"
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "code": "",
                    "children": [
                        {
                            "type": "expression_statement",
                            "code": "SpendingByCategory.run()",
                            "children": [
                                {
                                    "type": "call",
                                    "code": "SpendingByCategory.run()",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "code": "SpendingByCategory.run"
                                        },
                                        {
                                            "type": "argument_list",
                                            "code": "()",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}