{
    "type": "module",
    "code": null,
    "children": [
        {
            "type": "function_definition",
            "code": "def excess_3_code(number: int) -> str:",
            "children": [
                {
                    "type": "string",
                    "code": "\"\"\"\nFind excess-3 code of integer base 10.\nAdd 3 to all digits in a decimal number then convert to a binary-coded decimal.\nhttps://en.wikipedia.org/wiki/Excess-3\n\n>>> excess_3_code(0)\n'0b0011'\n>>> excess_3_code(3)\n'0b0110'\n>>> excess_3_code(2)\n'0b0101'\n>>> excess_3_code(20)\n'0b01010011'\n>>> excess_3_code(120)\n'0b010001010011'\n\"\"\"",
                    "children": []
                },
                {
                    "type": "block",
                    "code": null,
                    "children": [
                        {
                            "type": "assignment",
                            "code": "num = \"\"",
                            "children": [
                                {
                                    "type": "identifier",
                                    "code": "num"
                                },
                                {
                                    "type": "string",
                                    "code": "\"\""
                                }
                            ]
                        },
                        {
                            "type": "for_statement",
                            "code": "for digit in str(max(0, number)):",
                            "children": [
                                {
                                    "type": "block",
                                    "code": null,
                                    "children": [
                                        {
                                            "type": "augmented_assignment",
                                            "code": "num += str(bin(int(digit) + 3))[2:].zfill(4)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "code": "num"
                                                },
                                                {
                                                    "type": "call",
                                                    "code": "str(bin(int(digit) + 3))[2:].zfill(4)",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "code": "str(bin(int(digit) + 3))",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "code": "bin(int(digit) + 3)",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "code": "int(digit)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "code": "digit"
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "binary_operator",
                                                                            "code": "+",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "code": "int(digit)"
                                                                                },
                                                                                {
                                                                                    "type": "integer",
                                                                                    "code": "3"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "subscript",
                                                            "code": "[2:]",
                                                            "children": [
                                                                {
                                                                    "type": "slice",
                                                                    "code": "2:",
                                                                    "children": [
                                                                        {
                                                                            "type": "integer",
                                                                            "code": "2"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "call",
                                                            "code": ".zfill(4)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "code": "zfill(4)"
                                                                },
                                                                {
                                                                    "type": "integer",
                                                                    "code": "4"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "code": "return \"0b\" + num",
                            "children": [
                                {
                                    "type": "binary_operator",
                                    "code": "+",
                                    "children": [
                                        {
                                            "type": "string",
                                            "code": "\"0b\""
                                        },
                                        {
                                            "type": "identifier",
                                            "code": "num"
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "if_statement",
            "code": "if __name__ == \"__main__\":",
            "children": [
                {
                    "type": "block",
                    "code": null,
                    "children": [
                        {
                            "type": "import_statement",
                            "code": "import doctest",
                            "children": [
                                {
                                    "type": "identifier",
                                    "code": "doctest"
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "code": "doctest.testmod()",
                            "children": [
                                {
                                    "type": "call",
                                    "code": "doctest.testmod()",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "code": "doctest.testmod"
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}