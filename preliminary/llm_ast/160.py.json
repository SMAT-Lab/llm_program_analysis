{
    "type": "module",
    "code": "",
    "children": [
        {
            "type": "import_statement",
            "code": "import datetime, typing",
            "children": []
        },
        {
            "type": "import_from_statement",
            "code": "from enum import Enum",
            "children": []
        },
        {
            "type": "import_from_statement",
            "code": "from typing import Generic, Literal, TypeVar, Union",
            "children": []
        },
        {
            "type": "import_statement",
            "code": "import prisma.enums",
            "children": []
        },
        {
            "type": "import_statement",
            "code": "import pydantic",
            "children": []
        },
        {
            "type": "class_definition",
            "code": "class InstallationLocation(str, Enum):",
            "children": [
                {
                    "type": "assignment",
                    "code": "LOCAL = 'local'",
                    "children": []
                },
                {
                    "type": "assignment",
                    "code": "CLOUD = 'cloud'",
                    "children": []
                }
            ]
        },
        {
            "type": "class_definition",
            "code": "class AgentInstalledFromMarketplaceEventData(pydantic.BaseModel):",
            "children": [
                {
                    "type": "assignment",
                    "code": "marketplace_agent_id: str",
                    "children": []
                },
                {
                    "type": "assignment",
                    "code": "installed_agent_id: str",
                    "children": []
                },
                {
                    "type": "assignment",
                    "code": "installation_location: InstallationLocation",
                    "children": []
                }
            ]
        },
        {
            "type": "class_definition",
            "code": "class AgentInstalledFromTemplateEventData(pydantic.BaseModel):",
            "children": [
                {
                    "type": "assignment",
                    "code": "template_id: str",
                    "children": []
                },
                {
                    "type": "assignment",
                    "code": "installed_agent_id: str",
                    "children": []
                },
                {
                    "type": "assignment",
                    "code": "installation_location: InstallationLocation",
                    "children": []
                }
            ]
        },
        {
            "type": "class_definition",
            "code": "class AgentInstalledFromMarketplaceEvent(pydantic.BaseModel):",
            "children": [
                {
                    "type": "assignment",
                    "code": "event_name: Literal['agent_installed_from_marketplace']",
                    "children": []
                },
                {
                    "type": "assignment",
                    "code": "event_data: AgentInstalledFromMarketplaceEventData",
                    "children": []
                }
            ]
        },
        {
            "type": "class_definition",
            "code": "class AgentInstalledFromTemplateEvent(pydantic.BaseModel):",
            "children": [
                {
                    "type": "assignment",
                    "code": "event_name: Literal['agent_installed_from_template']",
                    "children": []
                },
                {
                    "type": "assignment",
                    "code": "event_data: AgentInstalledFromTemplateEventData",
                    "children": []
                }
            ]
        },
        {
            "type": "assignment",
            "code": "AnalyticsEvent = Union[AgentInstalledFromMarketplaceEvent, AgentInstalledFromTemplateEvent]",
            "children": []
        },
        {
            "type": "class_definition",
            "code": "class AnalyticsRequest(pydantic.BaseModel):",
            "children": [
                {
                    "type": "assignment",
                    "code": "event: AnalyticsEvent",
                    "children": []
                }
            ]
        },
        {
            "type": "class_definition",
            "code": "class AddAgentRequest(pydantic.BaseModel):",
            "children": [
                {
                    "type": "assignment",
                    "code": "graph: dict[str, typing.Any]",
                    "children": []
                },
                {
                    "type": "assignment",
                    "code": "author: str",
                    "children": []
                },
                {
                    "type": "assignment",
                    "code": "keywords: list[str]",
                    "children": []
                },
                {
                    "type": "assignment",
                    "code": "categories: list[str]",
                    "children": []
                }
            ]
        },
        {
            "type": "class_definition",
            "code": "class SubmissionReviewRequest(pydantic.BaseModel):",
            "children": [
                {
                    "type": "assignment",
                    "code": "agent_id: str",
                    "children": []
                },
                {
                    "type": "assignment",
                    "code": "version: int",
                    "children": []
                },
                {
                    "type": "assignment",
                    "code": "status: prisma.enums.SubmissionStatus",
                    "children": []
                },
                {
                    "type": "assignment",
                    "code": "comments: str | None",
                    "children": []
                }
            ]
        },
        {
            "type": "class_definition",
            "code": "class AgentResponse(pydantic.BaseModel):",
            "children": [
                {
                    "type": "comment",
                    "code": "Represents a response from an agent.",
                    "children": []
                },
                {
                    "type": "comment",
                    "code": "Attributes:",
                    "children": []
                },
                {
                    "type": "comment",
                    "code": "id (str): The ID of the agent.",
                    "children": []
                },
                {
                    "type": "comment",
                    "code": "name (str, optional): The name of the agent.",
                    "children": []
                },
                {
                    "type": "comment",
                    "code": "description (str, optional): The description of the agent.",
                    "children": []
                },
                {
                    "type": "comment",
                    "code": "author (str, optional): The author of the agent.",
                    "children": []
                },
                {
                    "type": "comment",
                    "code": "keywords (list[str]): The keywords associated with the agent.",
                    "children": []
                },
                {
                    "type": "comment",
                    "code": "categories (list[str]): The categories the agent belongs to.",
                    "children": []
                },
                {
                    "type": "comment",
                    "code": "version (int): The version of the agent.",
                    "children": []
                },
                {
                    "type": "comment",
                    "code": "createdAt (str): The creation date of the agent.",
                    "children": []
                },
                {
                    "type": "comment",
                    "code": "updatedAt (str): The last update date of the agent.",
                    "children": []
                },
                {
                    "type": "assignment",
                    "code": "id: str",
                    "children": []
                },
                {
                    "type": "assignment",
                    "code": "name: typing.Optional[str]",
                    "children": []
                },
                {
                    "type": "assignment",
                    "code": "description: typing.Optional[str]",
                    "children": []
                },
                {
                    "type": "assignment",
                    "code": "author: typing.Optional[str]",
                    "children": []
                },
                {
                    "type": "assignment",
                    "code": "keywords: list[str]",
                    "children": []
                },
                {
                    "type": "assignment",
                    "code": "categories: list[str]",
                    "children": []
                },
                {
                    "type": "assignment",
                    "code": "version: int",
                    "children": []
                },
                {
                    "type": "assignment",
                    "code": "createdAt: datetime.datetime",
                    "children": []
                },
                {
                    "type": "assignment",
                    "code": "updatedAt: datetime.datetime",
                    "children": []
                },
                {
                    "type": "assignment",
                    "code": "submissionStatus: str",
                    "children": []
                },
                {
                    "type": "assignment",
                    "code": "views: int = 0",
                    "children": []
                },
                {
                    "type": "assignment",
                    "code": "downloads: int = 0",
                    "children": []
                }
            ]
        },
        {
            "type": "class_definition",
            "code": "class AgentDetailResponse(pydantic.BaseModel):",
            "children": [
                {
                    "type": "comment",
                    "code": "Represents the response data for an agent detail.",
                    "children": []
                },
                {
                    "type": "comment",
                    "code": "Attributes:",
                    "children": []
                },
                {
                    "type": "comment",
                    "code": "id (str): The ID of the agent.",
                    "children": []
                },
                {
                    "type": "comment",
                    "code": "name (Optional[str]): The name of the agent.",
                    "children": []
                },
                {
                    "type": "comment",
                    "code": "description (Optional[str]): The description of the agent.",
                    "children": []
                },
                {
                    "type": "comment",
                    "code": "author (Optional[str]): The author of the agent.",
                    "children": []
                },
                {
                    "type": "comment",
                    "code": "keywords (List[str]): The keywords associated with the agent.",
                    "children": []
                },
                {
                    "type": "comment",
                    "code": "categories (List[str]): The categories the agent belongs to.",
                    "children": []
                },
                {
                    "type": "comment",
                    "code": "version (int): The version of the agent.",
                    "children": []
                },
                {
                    "type": "comment",
                    "code": "createdAt (str): The creation date of the agent.",
                    "children": []
                },
                {
                    "type": "comment",
                    "code": "updatedAt (str): The last update date of the agent.",
                    "children": []
                },
                {
                    "type": "comment",
                    "code": "graph (Dict[str, Any]): The graph data of the agent.",
                    "children": []
                },
                {
                    "type": "assignment",
                    "code": "id: str",
                    "children": []
                },
                {
                    "type": "assignment",
                    "code": "name: typing.Optional[str]",
                    "children": []
                },
                {
                    "type": "assignment",
                    "code": "description: typing.Optional[str]",
                    "children": []
                },
                {
                    "type": "assignment",
                    "code": "author: typing.Optional[str]",
                    "children": []
                },
                {
                    "type": "assignment",
                    "code": "keywords: list[str]",
                    "children": []
                },
                {
                    "type": "assignment",
                    "code": "categories: list[str]",
                    "children": []
                },
                {
                    "type": "assignment",
                    "code": "version: int",
                    "children": []
                },
                {
                    "type": "assignment",
                    "code": "createdAt: datetime.datetime",
                    "children": []
                },
                {
                    "type": "assignment",
                    "code": "updatedAt: datetime.datetime",
                    "children": []
                },
                {
                    "type": "assignment",
                    "code": "graph: dict[str, typing.Any]",
                    "children": []
                }
            ]
        },
        {
            "type": "class_definition",
            "code": "class FeaturedAgentResponse(pydantic.BaseModel):",
            "children": [
                {
                    "type": "comment",
                    "code": "Represents the response data for an agent detail.",
                    "children": []
                },
                {
                    "type": "assignment",
                    "code": "agentId: str",
                    "children": []
                },
                {
                    "type": "assignment",
                    "code": "featuredCategories: list[str]",
                    "children": []
                },
                {
                    "type": "assignment",
                    "code": "createdAt: datetime.datetime",
                    "children": []
                },
                {
                    "type": "assignment",
                    "code": "updatedAt: datetime.datetime",
                    "children": []
                },
                {
                    "type": "assignment",
                    "code": "isActive: bool",
                    "children": []
                }
            ]
        },
        {
            "type": "class_definition",
            "code": "class CategoriesResponse(pydantic.BaseModel):",
            "children": [
                {
                    "type": "comment",
                    "code": "Represents the response data for a list of categories.",
                    "children": []
                },
                {
                    "type": "comment",
                    "code": "Attributes:",
                    "children": []
                },
                {
                    "type": "comment",
                    "code": "unique_categories (list[str]): The list of unique categories.",
                    "children": []
                },
                {
                    "type": "assignment",
                    "code": "unique_categories: list[str]",
                    "children": []
                }
            ]
        },
        {
            "type": "type_parameter",
            "code": "T = TypeVar('T')",
            "children": []
        },
        {
            "type": "class_definition",
            "code": "class ListResponse(pydantic.BaseModel, Generic[T]):",
            "children": [
                {
                    "type": "comment",
                    "code": "Represents a list response.",
                    "children": []
                },
                {
                    "type": "comment",
                    "code": "Attributes:",
                    "children": []
                },
                {
                    "type": "comment",
                    "code": "items (list[T]): The list of items.",
                    "children": []
                },
                {
                    "type": "comment",
                    "code": "total_count (int): The total count of items.",
                    "children": []
                },
                {
                    "type": "comment",
                    "code": "page (int): The current page number.",
                    "children": []
                },
                {
                    "type": "comment",
                    "code": "page_size (int): The number of items per page.",
                    "children": []
                },
                {
                    "type": "comment",
                    "code": "total_pages (int): The total number of pages.",
                    "children": []
                },
                {
                    "type": "assignment",
                    "code": "items: list[T]",
                    "children": []
                },
                {
                    "type": "assignment",
                    "code": "total_count: int",
                    "children": []
                },
                {
                    "type": "assignment",
                    "code": "page: int",
                    "children": []
                },
                {
                    "type": "assignment",
                    "code": "page_size: int",
                    "children": []
                },
                {
                    "type": "assignment",
                    "code": "total_pages: int",
                    "children": []
                }
            ]
        }
    ]
}