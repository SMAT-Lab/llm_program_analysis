{
    "type": "module",
    "code": "",
    "children": [
        {
            "type": "function_definition",
            "code": "def match_word_pattern(pattern: str, input_string: str) -> bool:",
            "children": [
                {
                    "type": "string",
                    "code": "\"\"\"\nDetermine if a given pattern matches a string using backtracking.\n\npattern: The pattern to match.\ninput_string: The string to match against the pattern.\nreturn: True if the pattern matches the string, False otherwise.\n\n>>> match_word_pattern(\"aba\", \"GraphTreesGraph\")\nTrue\n\n>>> match_word_pattern(\"xyx\", \"PythonRubyPython\")\nTrue\n\n>>> match_word_pattern(\"GG\", \"PythonJavaPython\")\nFalse\n\"\"\"",
                    "children": []
                },
                {
                    "type": "function_definition",
                    "code": "def backtrack(pattern_index: int, str_index: int) -> bool:",
                    "children": [
                        {
                            "type": "string",
                            "code": "\"\"\"\n>>> backtrack(0, 0)\nTrue\n\n>>> backtrack(0, 1)\nTrue\n\n>>> backtrack(0, 4)\nFalse\n\"\"\"",
                            "children": []
                        },
                        {
                            "type": "block",
                            "code": "",
                            "children": [
                                {
                                    "type": "if_statement",
                                    "code": "if pattern_index == len(pattern) and str_index == len(input_string):",
                                    "children": [
                                        {
                                            "type": "block",
                                            "code": "",
                                            "children": [
                                                {
                                                    "type": "return_statement",
                                                    "code": "return True",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "if_statement",
                                    "code": "if pattern_index == len(pattern) or str_index == len(input_string):",
                                    "children": [
                                        {
                                            "type": "block",
                                            "code": "",
                                            "children": [
                                                {
                                                    "type": "return_statement",
                                                    "code": "return False",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "assignment",
                                    "code": "char = pattern[pattern_index]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "code": "char",
                                            "children": []
                                        },
                                        {
                                            "type": "subscript",
                                            "code": "pattern[pattern_index]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "code": "pattern",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "code": "pattern_index",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "if_statement",
                                    "code": "if char in pattern_map:",
                                    "children": [
                                        {
                                            "type": "block",
                                            "code": "",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "code": "mapped_str = pattern_map[char]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "code": "mapped_str",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "subscript",
                                                            "code": "pattern_map[char]",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "code": "pattern_map",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "code": "char",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "if_statement",
                                                    "code": "if input_string.startswith(mapped_str, str_index):",
                                                    "children": [
                                                        {
                                                            "type": "block",
                                                            "code": "",
                                                            "children": [
                                                                {
                                                                    "type": "return_statement",
                                                                    "code": "return backtrack(pattern_index + 1, str_index + len(mapped_str))",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "code": "backtrack(pattern_index + 1, str_index + len(mapped_str))",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "code": "backtrack",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "code": "pattern_index + 1, str_index + len(mapped_str)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "binary_operator",
                                                                                            "code": "pattern_index + 1",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "code": "pattern_index",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "integer",
                                                                                                    "code": "1",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "binary_operator",
                                                                                            "code": "str_index + len(mapped_str)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "code": "str_index",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "call",
                                                                                                    "code": "len(mapped_str)",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "code": "len",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "argument_list",
                                                                                                            "code": "mapped_str",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "code": "mapped_str",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "else_clause",
                                                            "code": "else:",
                                                            "children": [
                                                                {
                                                                    "type": "block",
                                                                    "code": "",
                                                                    "children": [
                                                                        {
                                                                            "type": "return_statement",
                                                                            "code": "return False",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "for_statement",
                                    "code": "for end in range(str_index + 1, len(input_string) + 1):",
                                    "children": [
                                        {
                                            "type": "block",
                                            "code": "",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "code": "substr = input_string[str_index:end]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "code": "substr",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "slice",
                                                            "code": "input_string[str_index:end]",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "code": "input_string",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "code": "str_index",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "code": "end",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "if_statement",
                                                    "code": "if substr in str_map:",
                                                    "children": [
                                                        {
                                                            "type": "block",
                                                            "code": "",
                                                            "children": [
                                                                {
                                                                    "type": "continue_statement",
                                                                    "code": "continue",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "assignment",
                                                    "code": "pattern_map[char] = substr",
                                                    "children": [
                                                        {
                                                            "type": "subscript",
                                                            "code": "pattern_map[char]",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "code": "pattern_map",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "code": "char",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "code": "substr",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "assignment",
                                                    "code": "str_map[substr] = char",
                                                    "children": [
                                                        {
                                                            "type": "subscript",
                                                            "code": "str_map[substr]",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "code": "str_map",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "code": "substr",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "code": "char",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "if_statement",
                                                    "code": "if backtrack(pattern_index + 1, end):",
                                                    "children": [
                                                        {
                                                            "type": "block",
                                                            "code": "",
                                                            "children": [
                                                                {
                                                                    "type": "return_statement",
                                                                    "code": "return True",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "delete_statement",
                                                    "code": "del pattern_map[char]",
                                                    "children": [
                                                        {
                                                            "type": "subscript",
                                                            "code": "pattern_map[char]",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "code": "pattern_map",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "code": "char",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "delete_statement",
                                                    "code": "del str_map[substr]",
                                                    "children": [
                                                        {
                                                            "type": "subscript",
                                                            "code": "str_map[substr]",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "code": "str_map",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "code": "substr",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "return_statement",
                                    "code": "return False",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "assignment",
                    "code": "pattern_map: dict[str, str] = {}",
                    "children": [
                        {
                            "type": "identifier",
                            "code": "pattern_map",
                            "children": []
                        },
                        {
                            "type": "type",
                            "code": "dict[str, str]",
                            "children": [
                                {
                                    "type": "generic_type",
                                    "code": "dict",
                                    "children": []
                                },
                                {
                                    "type": "type_parameter",
                                    "code": "str",
                                    "children": []
                                },
                                {
                                    "type": "type_parameter",
                                    "code": "str",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "dictionary",
                            "code": "{}",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "assignment",
                    "code": "str_map: dict[str, str] = {}",
                    "children": [
                        {
                            "type": "identifier",
                            "code": "str_map",
                            "children": []
                        },
                        {
                            "type": "type",
                            "code": "dict[str, str]",
                            "children": [
                                {
                                    "type": "generic_type",
                                    "code": "dict",
                                    "children": []
                                },
                                {
                                    "type": "type_parameter",
                                    "code": "str",
                                    "children": []
                                },
                                {
                                    "type": "type_parameter",
                                    "code": "str",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "dictionary",
                            "code": "{}",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "return_statement",
                    "code": "return backtrack(0, 0)",
                    "children": [
                        {
                            "type": "call",
                            "code": "backtrack(0, 0)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "code": "backtrack",
                                    "children": []
                                },
                                {
                                    "type": "argument_list",
                                    "code": "0, 0",
                                    "children": [
                                        {
                                            "type": "integer",
                                            "code": "0",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "code": "0",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "if_statement",
            "code": "if __name__ == \"__main__\":",
            "children": [
                {
                    "type": "block",
                    "code": "",
                    "children": [
                        {
                            "type": "import_statement",
                            "code": "import doctest",
                            "children": []
                        },
                        {
                            "type": "expression_statement",
                            "code": "doctest.testmod()",
                            "children": [
                                {
                                    "type": "call",
                                    "code": "doctest.testmod()",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "code": "doctest.testmod",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "code": "doctest",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "code": "testmod",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "code": "",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}