{
    "type": "module",
    "code": "",
    "children": [
        {
            "type": "import_statement",
            "code": "import time",
            "children": []
        },
        {
            "type": "import_from_statement",
            "code": "from backend.util.decorator import error_logged, time_measured",
            "children": [
                {
                    "type": "import_prefix",
                    "code": "from backend.util.decorator",
                    "children": []
                },
                {
                    "type": "import_list",
                    "code": "import error_logged, time_measured",
                    "children": [
                        {
                            "type": "identifier",
                            "code": "error_logged",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "code": "time_measured",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "decorated_definition",
            "code": "@time_measured\ndef example_function(a: int, b: int, c: int) -> int:\n    time.sleep(0.5)\n    return a + b + c",
            "children": [
                {
                    "type": "decorator",
                    "code": "@time_measured",
                    "children": [
                        {
                            "type": "identifier",
                            "code": "time_measured",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "code": "def example_function(a: int, b: int, c: int) -> int:\n    time.sleep(0.5)\n    return a + b + c",
                    "children": [
                        {
                            "type": "parameters",
                            "code": "(a: int, b: int, c: int)",
                            "children": [
                                {
                                    "type": "typed_parameter",
                                    "code": "a: int",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "code": "a",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "code": "int",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "typed_parameter",
                                    "code": "b: int",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "code": "b",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "code": "int",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "typed_parameter",
                                    "code": "c: int",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "code": "c",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "code": "int",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "type",
                            "code": "int",
                            "children": []
                        },
                        {
                            "type": "block",
                            "code": "time.sleep(0.5)\n    return a + b + c",
                            "children": [
                                {
                                    "type": "expression_statement",
                                    "code": "time.sleep(0.5)",
                                    "children": [
                                        {
                                            "type": "call",
                                            "code": "time.sleep(0.5)",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "code": "time.sleep",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "code": "time",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "code": "sleep",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "code": "(0.5)",
                                                    "children": [
                                                        {
                                                            "type": "float",
                                                            "code": "0.5",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "return_statement",
                                    "code": "return a + b + c",
                                    "children": [
                                        {
                                            "type": "binary_operator",
                                            "code": "a + b + c",
                                            "children": [
                                                {
                                                    "type": "binary_operator",
                                                    "code": "a + b",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "code": "a",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "code": "b",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "identifier",
                                                    "code": "c",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "decorated_definition",
            "code": "@error_logged\ndef example_function_with_error(a: int, b: int, c: int) -> int:\n    raise ValueError(\"This is a test error\")",
            "children": [
                {
                    "type": "decorator",
                    "code": "@error_logged",
                    "children": [
                        {
                            "type": "identifier",
                            "code": "error_logged",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "code": "def example_function_with_error(a: int, b: int, c: int) -> int:\n    raise ValueError(\"This is a test error\")",
                    "children": [
                        {
                            "type": "parameters",
                            "code": "(a: int, b: int, c: int)",
                            "children": [
                                {
                                    "type": "typed_parameter",
                                    "code": "a: int",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "code": "a",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "code": "int",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "typed_parameter",
                                    "code": "b: int",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "code": "b",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "code": "int",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "typed_parameter",
                                    "code": "c: int",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "code": "c",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "code": "int",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "type",
                            "code": "int",
                            "children": []
                        },
                        {
                            "type": "block",
                            "code": "raise ValueError(\"This is a test error\")",
                            "children": [
                                {
                                    "type": "raise_statement",
                                    "code": "raise ValueError(\"This is a test error\")",
                                    "children": [
                                        {
                                            "type": "call",
                                            "code": "ValueError(\"This is a test error\")",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "code": "ValueError",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "code": "(\"This is a test error\")",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "code": "\"This is a test error\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "code": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "code": "This is a test error",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "code": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "code": "def test_timer_decorator():\n    info, res = example_function(1, 2, 3)\n    assert info.cpu_time >= 0\n    assert info.wall_time >= 0.4\n    assert res == 6",
            "children": [
                {
                    "type": "parameters",
                    "code": "()",
                    "children": []
                },
                {
                    "type": "block",
                    "code": "info, res = example_function(1, 2, 3)\n    assert info.cpu_time >= 0\n    assert info.wall_time >= 0.4\n    assert res == 6",
                    "children": [
                        {
                            "type": "assignment",
                            "code": "info, res = example_function(1, 2, 3)",
                            "children": [
                                {
                                    "type": "expression_list",
                                    "code": "info, res",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "code": "info",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "code": "res",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "call",
                                    "code": "example_function(1, 2, 3)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "code": "example_function",
                                            "children": []
                                        },
                                        {
                                            "type": "argument_list",
                                            "code": "(1, 2, 3)",
                                            "children": [
                                                {
                                                    "type": "integer",
                                                    "code": "1",
                                                    "children": []
                                                },
                                                {
                                                    "type": "integer",
                                                    "code": "2",
                                                    "children": []
                                                },
                                                {
                                                    "type": "integer",
                                                    "code": "3",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "assert_statement",
                            "code": "assert info.cpu_time >= 0",
                            "children": [
                                {
                                    "type": "comparison_operator",
                                    "code": "info.cpu_time >= 0",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "code": "info.cpu_time",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "code": "info",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "code": "cpu_time",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "integer",
                                            "code": "0",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "assert_statement",
                            "code": "assert info.wall_time >= 0.4",
                            "children": [
                                {
                                    "type": "comparison_operator",
                                    "code": "info.wall_time >= 0.4",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "code": "info.wall_time",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "code": "info",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "code": "wall_time",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "float",
                                            "code": "0.4",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "assert_statement",
                            "code": "assert res == 6",
                            "children": [
                                {
                                    "type": "comparison_operator",
                                    "code": "res == 6",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "code": "res",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "code": "6",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "code": "def test_error_decorator():\n    res = example_function_with_error(1, 2, 3)\n    assert res is None",
            "children": [
                {
                    "type": "parameters",
                    "code": "()",
                    "children": []
                },
                {
                    "type": "block",
                    "code": "res = example_function_with_error(1, 2, 3)\n    assert res is None",
                    "children": [
                        {
                            "type": "assignment",
                            "code": "res = example_function_with_error(1, 2, 3)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "code": "res",
                                    "children": []
                                },
                                {
                                    "type": "call",
                                    "code": "example_function_with_error(1, 2, 3)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "code": "example_function_with_error",
                                            "children": []
                                        },
                                        {
                                            "type": "argument_list",
                                            "code": "(1, 2, 3)",
                                            "children": [
                                                {
                                                    "type": "integer",
                                                    "code": "1",
                                                    "children": []
                                                },
                                                {
                                                    "type": "integer",
                                                    "code": "2",
                                                    "children": []
                                                },
                                                {
                                                    "type": "integer",
                                                    "code": "3",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "assert_statement",
                            "code": "assert res is None",
                            "children": [
                                {
                                    "type": "comparison_operator",
                                    "code": "res is None",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "code": "res",
                                            "children": []
                                        },
                                        {
                                            "type": "none",
                                            "code": "None",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}