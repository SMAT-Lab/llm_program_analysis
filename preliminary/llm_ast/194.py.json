{
    "type": "module",
    "code": "",
    "children": [
        {
            "type": "comment",
            "code": "In this problem, we want to determine all possible permutations\nof the given sequence. We use backtracking to solve this problem.\n\nTime complexity: O(n! * n),\nwhere n denotes the length of the given sequence."
        },
        {
            "type": "future_import_statement",
            "code": "from __future__ import annotations"
        },
        {
            "type": "function_definition",
            "code": "def generate_all_permutations(sequence: list[int | str]) -> None:",
            "children": [
                {
                    "type": "block",
                    "code": "",
                    "children": [
                        {
                            "type": "call",
                            "code": "create_state_space_tree(sequence, [], 0, [0 for i in range(len(sequence))])",
                            "children": [
                                {
                                    "type": "identifier",
                                    "code": "create_state_space_tree"
                                },
                                {
                                    "type": "argument_list",
                                    "code": "(sequence, [], 0, [0 for i in range(len(sequence))])",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "code": "sequence"
                                        },
                                        {
                                            "type": "list",
                                            "code": "[]"
                                        },
                                        {
                                            "type": "integer",
                                            "code": "0"
                                        },
                                        {
                                            "type": "list_comprehension",
                                            "code": "[0 for i in range(len(sequence))]",
                                            "children": [
                                                {
                                                    "type": "integer",
                                                    "code": "0"
                                                },
                                                {
                                                    "type": "for_in_clause",
                                                    "code": "for i in range(len(sequence))",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "code": "i"
                                                        },
                                                        {
                                                            "type": "call",
                                                            "code": "range(len(sequence))",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "code": "range"
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "code": "(len(sequence))",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "code": "len(sequence)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "code": "len"
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "code": "(sequence)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "code": "sequence"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "code": "def create_state_space_tree(sequence: list[int | str], current_sequence: list[int | str], index: int, index_used: list[int]) -> None:",
            "children": [
                {
                    "type": "docstring",
                    "code": "\"\"\"\nCreates a state space tree to iterate through each branch using DFS.\nWe know that each state has exactly len(sequence) - index children.\nIt terminates when it reaches the end of the given sequence.\n\n:param sequence: The input sequence for which permutations are generated.\n:param current_sequence: The current permutation being built.\n:param index: The current index in the sequence.\n:param index_used: list to track which elements are used in permutation.\n\nExample 1:\n>>> sequence = [1, 2, 3]\n>>> current_sequence = []\n>>> index_used = [False, False, False]\n>>> create_state_space_tree(sequence, current_sequence, 0, index_used)\n[1, 2, 3]\n[1, 3, 2]\n[2, 1, 3]\n[2, 3, 1]\n[3, 1, 2]\n[3, 2, 1]\n\nExample 2:\n>>> sequence = [\"A\", \"B\", \"C\"]\n>>> current_sequence = []\n>>> index_used = [False, False, False]\n>>> create_state_space_tree(sequence, current_sequence, 0, index_used)\n['A', 'B', 'C']\n['A', 'C', 'B']\n['B', 'A', 'C']\n['B', 'C', 'A']\n['C', 'A', 'B']\n['C', 'B', 'A']\n\nExample 3:\n>>> sequence = [1]\n>>> current_sequence = []\n>>> index_used = [False]\n>>> create_state_space_tree(sequence, current_sequence, 0, index_used)\n[1]\n\"\"\""
                },
                {
                    "type": "block",
                    "code": "",
                    "children": [
                        {
                            "type": "if_statement",
                            "code": "if index == len(sequence):",
                            "children": [
                                {
                                    "type": "block",
                                    "code": "",
                                    "children": [
                                        {
                                            "type": "call",
                                            "code": "print(current_sequence)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "code": "print"
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "code": "(current_sequence)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "code": "current_sequence"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "return_statement",
                                            "code": "return"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "for_statement",
                            "code": "for i in range(len(sequence)):",
                            "children": [
                                {
                                    "type": "block",
                                    "code": "",
                                    "children": [
                                        {
                                            "type": "if_statement",
                                            "code": "if not index_used[i]:",
                                            "children": [
                                                {
                                                    "type": "block",
                                                    "code": "",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "code": "current_sequence.append(sequence[i])",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "code": "current_sequence.append"
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "code": "(sequence[i])",
                                                                    "children": [
                                                                        {
                                                                            "type": "subscript",
                                                                            "code": "sequence[i]",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "code": "sequence"
                                                                                },
                                                                                {
                                                                                    "type": "index",
                                                                                    "code": "[i]",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "code": "i"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "assignment",
                                                            "code": "index_used[i] = True",
                                                            "children": [
                                                                {
                                                                    "type": "subscript",
                                                                    "code": "index_used[i]",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "code": "index_used"
                                                                        },
                                                                        {
                                                                            "type": "index",
                                                                            "code": "[i]",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "code": "i"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "true",
                                                                    "code": "True"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "call",
                                                            "code": "create_state_space_tree(sequence, current_sequence, index + 1, index_used)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "code": "create_state_space_tree"
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "code": "(sequence, current_sequence, index + 1, index_used)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "code": "sequence"
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "code": "current_sequence"
                                                                        },
                                                                        {
                                                                            "type": "binary_operator",
                                                                            "code": "index + 1",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "code": "index"
                                                                                },
                                                                                {
                                                                                    "type": "integer",
                                                                                    "code": "1"
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "code": "index_used"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "call",
                                                            "code": "current_sequence.pop()",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "code": "current_sequence.pop"
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "code": "()"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "assignment",
                                                            "code": "index_used[i] = False",
                                                            "children": [
                                                                {
                                                                    "type": "subscript",
                                                                    "code": "index_used[i]",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "code": "index_used"
                                                                        },
                                                                        {
                                                                            "type": "index",
                                                                            "code": "[i]",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "code": "i"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "false",
                                                                    "code": "False"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "comment",
            "code": "remove the comment to take an input from the user\n\nprint(\"Enter the elements\")\nsequence = list(map(int, input().split()))"
        },
        {
            "type": "assignment",
            "code": "sequence: list[int | str] = [3, 1, 2, 4]",
            "children": [
                {
                    "type": "identifier",
                    "code": "sequence"
                },
                {
                    "type": "type",
                    "code": "list[int | str]"
                },
                {
                    "type": "list",
                    "code": "[3, 1, 2, 4]",
                    "children": [
                        {
                            "type": "integer",
                            "code": "3"
                        },
                        {
                            "type": "integer",
                            "code": "1"
                        },
                        {
                            "type": "integer",
                            "code": "2"
                        },
                        {
                            "type": "integer",
                            "code": "4"
                        }
                    ]
                }
            ]
        },
        {
            "type": "call",
            "code": "generate_all_permutations(sequence)",
            "children": [
                {
                    "type": "identifier",
                    "code": "generate_all_permutations"
                },
                {
                    "type": "argument_list",
                    "code": "(sequence)",
                    "children": [
                        {
                            "type": "identifier",
                            "code": "sequence"
                        }
                    ]
                }
            ]
        },
        {
            "type": "assignment",
            "code": "sequence_2: list[int | str] = [\"A\", \"B\", \"C\"]",
            "children": [
                {
                    "type": "identifier",
                    "code": "sequence_2"
                },
                {
                    "type": "type",
                    "code": "list[int | str]"
                },
                {
                    "type": "list",
                    "code": "[\"A\", \"B\", \"C\"]",
                    "children": [
                        {
                            "type": "string",
                            "code": "\"A\""
                        },
                        {
                            "type": "string",
                            "code": "\"B\""
                        },
                        {
                            "type": "string",
                            "code": "\"C\""
                        }
                    ]
                }
            ]
        },
        {
            "type": "call",
            "code": "generate_all_permutations(sequence_2)",
            "children": [
                {
                    "type": "identifier",
                    "code": "generate_all_permutations"
                },
                {
                    "type": "argument_list",
                    "code": "(sequence_2)",
                    "children": [
                        {
                            "type": "identifier",
                            "code": "sequence_2"
                        }
                    ]
                }
            ]
        }
    ]
}