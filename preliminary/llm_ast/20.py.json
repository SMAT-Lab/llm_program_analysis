{
    "type": "module",
    "code": "",
    "children": [
        {
            "type": "comment",
            "code": "Calculates the sum of two non-negative integers using bitwise operators",
            "children": []
        },
        {
            "type": "comment",
            "code": "Wikipedia explanation: https://en.wikipedia.org/wiki/Binary_number",
            "children": []
        },
        {
            "type": "function_definition",
            "code": "def bitwise_addition_recursive(number: int, other_number: int) -> int:",
            "children": [
                {
                    "type": "string",
                    "code": "\"\"\"\n>>> bitwise_addition_recursive(4, 5)\n9\n>>> bitwise_addition_recursive(8, 9)\n17\n>>> bitwise_addition_recursive(0, 4)\n4\n>>> bitwise_addition_recursive(4.5, 9)\nTraceback (most recent call last):\n...\nTypeError: Both arguments MUST be integers!\n>>> bitwise_addition_recursive('4', 9)\nTraceback (most recent call last):\n...\nTypeError: Both arguments MUST be integers!\n>>> bitwise_addition_recursive('4.5', 9)\nTraceback (most recent call last):\n...\nTypeError: Both arguments MUST be integers!\n>>> bitwise_addition_recursive(-1, 9)\nTraceback (most recent call last):\n...\nValueError: Both arguments MUST be non-negative!\n>>> bitwise_addition_recursive(1, -9)\nTraceback (most recent call last):\n...\nValueError: Both arguments MUST be non-negative!\n\"\"\"",
                    "children": []
                },
                {
                    "type": "if_statement",
                    "code": "if not isinstance(number, int) or not isinstance(other_number, int):",
                    "children": [
                        {
                            "type": "raise_statement",
                            "code": "raise TypeError(\"Both arguments MUST be integers!\")",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "if_statement",
                    "code": "if number < 0 or other_number < 0:",
                    "children": [
                        {
                            "type": "raise_statement",
                            "code": "raise ValueError(\"Both arguments MUST be non-negative!\")",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "assignment",
                    "code": "bitwise_sum = number ^ other_number",
                    "children": []
                },
                {
                    "type": "assignment",
                    "code": "carry = number & other_number",
                    "children": []
                },
                {
                    "type": "if_statement",
                    "code": "if carry == 0:",
                    "children": [
                        {
                            "type": "return_statement",
                            "code": "return bitwise_sum",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "return_statement",
                    "code": "return bitwise_addition_recursive(bitwise_sum, carry << 1)",
                    "children": []
                }
            ]
        },
        {
            "type": "if_statement",
            "code": "if __name__ == \"__main__\":",
            "children": [
                {
                    "type": "import_statement",
                    "code": "import doctest",
                    "children": []
                },
                {
                    "type": "expression_statement",
                    "code": "doctest.testmod()",
                    "children": []
                }
            ]
        }
    ]
}