{
    "type": "module",
    "code": "from __future__ import annotations\n\nimport json\nimport logging\n\n\nclass JsonFileHandler(logging.FileHandler):\n    def format(self, record: logging.LogRecord) -> str:\n        record.json_data = json.loads(record.getMessage())\n        return json.dumps(getattr(record, \"json_data\"), ensure_ascii=False, indent=4)\n\n    def emit(self, record: logging.LogRecord) -> None:\n        with open(self.baseFilename, \"w\", encoding=\"utf-8\") as f:\n            f.write(self.format(record))\n",
    "children": [
        {
            "type": "future_import_statement",
            "code": "from __future__ import annotations",
            "children": []
        },
        {
            "type": "import_statement",
            "code": "import json",
            "children": []
        },
        {
            "type": "import_statement",
            "code": "import logging",
            "children": []
        },
        {
            "type": "class_definition",
            "code": "class JsonFileHandler(logging.FileHandler):",
            "children": [
                {
                    "type": "block",
                    "code": "",
                    "children": [
                        {
                            "type": "function_definition",
                            "code": "def format(self, record: logging.LogRecord) -> str:",
                            "children": [
                                {
                                    "type": "block",
                                    "code": "",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "code": "record.json_data = json.loads(record.getMessage())",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "code": "record.json_data",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "code": "json.loads(record.getMessage())",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "code": "json.loads",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "code": "record.getMessage()",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "code": "record.getMessage",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "return_statement",
                                            "code": "return json.dumps(getattr(record, \"json_data\"), ensure_ascii=False, indent=4)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "code": "json.dumps(getattr(record, \"json_data\"), ensure_ascii=False, indent=4)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "code": "json.dumps",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "code": "getattr(record, \"json_data\")",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "code": "getattr",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "code": "record",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "code": "\"json_data\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "keyword_argument",
                                                            "code": "ensure_ascii=False",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "code": "ensure_ascii",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "false",
                                                                    "code": "False",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "keyword_argument",
                                                            "code": "indent=4",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "code": "indent",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "integer",
                                                                    "code": "4",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "code": "def emit(self, record: logging.LogRecord) -> None:",
                            "children": [
                                {
                                    "type": "block",
                                    "code": "",
                                    "children": [
                                        {
                                            "type": "with_statement",
                                            "code": "with open(self.baseFilename, \"w\", encoding=\"\"utf-8\"\") as f:",
                                            "children": [
                                                {
                                                    "type": "block",
                                                    "code": "",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "code": "f.write(self.format(record))",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "code": "f.write",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "code": "self.format(record)",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "code": "self.format",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "code": "record",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "call",
                                                    "code": "open(self.baseFilename, \"w\", encoding=\"utf-8\")",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "code": "open",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "attribute",
                                                            "code": "self.baseFilename",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string",
                                                            "code": "\"w\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "keyword_argument",
                                                            "code": "encoding=\"utf-8\"",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "code": "encoding",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "code": "\"utf-8\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "identifier",
                                                    "code": "f",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}