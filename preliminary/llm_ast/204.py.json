{
    "type": "module",
    "code": "",
    "children": [
        {
            "type": "import_from_statement",
            "code": "from backend.blocks.hubspot._auth import",
            "children": [
                {
                    "type": "identifier",
                    "code": "HubSpotCredentials"
                },
                {
                    "type": "identifier",
                    "code": "HubSpotCredentialsField"
                },
                {
                    "type": "identifier",
                    "code": "HubSpotCredentialsInput"
                }
            ]
        },
        {
            "type": "import_from_statement",
            "code": "from backend.data.block import",
            "children": [
                {
                    "type": "identifier",
                    "code": "Block"
                },
                {
                    "type": "identifier",
                    "code": "BlockCategory"
                },
                {
                    "type": "identifier",
                    "code": "BlockOutput"
                },
                {
                    "type": "identifier",
                    "code": "BlockSchema"
                }
            ]
        },
        {
            "type": "import_from_statement",
            "code": "from backend.data.model import",
            "children": [
                {
                    "type": "identifier",
                    "code": "SchemaField"
                }
            ]
        },
        {
            "type": "import_from_statement",
            "code": "from backend.util.request import",
            "children": [
                {
                    "type": "identifier",
                    "code": "requests"
                }
            ]
        },
        {
            "type": "class_definition",
            "code": "class HubSpotCompanyBlock(Block):",
            "children": [
                {
                    "type": "class_definition",
                    "code": "class Input(BlockSchema):",
                    "children": [
                        {
                            "type": "assignment",
                            "code": "credentials: HubSpotCredentialsInput = HubSpotCredentialsField()"
                        },
                        {
                            "type": "assignment",
                            "code": "operation: str = SchemaField(description='Operation to perform (create, update, get)', default='get')"
                        },
                        {
                            "type": "assignment",
                            "code": "company_data: dict = SchemaField(description='Company data for create/update operations', default={})"
                        },
                        {
                            "type": "assignment",
                            "code": "domain: str = SchemaField(description='Company domain for get/update operations', default='')"
                        }
                    ]
                },
                {
                    "type": "class_definition",
                    "code": "class Output(BlockSchema):",
                    "children": [
                        {
                            "type": "assignment",
                            "code": "company: dict = SchemaField(description='Company information')"
                        },
                        {
                            "type": "assignment",
                            "code": "status: str = SchemaField(description='Operation status')"
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "code": "def __init__(self):",
                    "children": [
                        {
                            "type": "block",
                            "code": "super().__init__(id='3ae02219-d540-47cd-9c78-3ad6c7d9820a', description='Manages HubSpot companies - create, update, and retrieve company information', categories={BlockCategory.CRM}, input_schema=HubSpotCompanyBlock.Input, output_schema=HubSpotCompanyBlock.Output)"
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "code": "def run(self, input_data: Input, *, credentials: HubSpotCredentials, **kwargs) -> BlockOutput:",
                    "children": [
                        {
                            "type": "block",
                            "code": "",
                            "children": [
                                {
                                    "type": "assignment",
                                    "code": "base_url = 'https://api.hubapi.com/crm/v3/objects/companies'"
                                },
                                {
                                    "type": "assignment",
                                    "code": "headers = {'Authorization': f'Bearer {credentials.api_key.get_secret_value()}', 'Content-Type': 'application/json'}"
                                },
                                {
                                    "type": "if_statement",
                                    "code": "if input_data.operation == 'create':",
                                    "children": [
                                        {
                                            "type": "block",
                                            "code": "",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "code": "response = requests.post(base_url, headers=headers, json={'properties': input_data.company_data})"
                                                },
                                                {
                                                    "type": "assignment",
                                                    "code": "result = response.json()"
                                                },
                                                {
                                                    "type": "yield",
                                                    "code": "yield 'company', result"
                                                },
                                                {
                                                    "type": "yield",
                                                    "code": "yield 'status', 'created'"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "elif_clause",
                                    "code": "elif input_data.operation == 'get':",
                                    "children": [
                                        {
                                            "type": "block",
                                            "code": "",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "code": "search_url = f'{base_url}/search'"
                                                },
                                                {
                                                    "type": "assignment",
                                                    "code": "search_data = {'filterGroups': [{'filters': [{'propertyName': 'domain', 'operator': 'EQ', 'value': input_data.domain}]}]}"
                                                },
                                                {
                                                    "type": "assignment",
                                                    "code": "response = requests.post(search_url, headers=headers, json=search_data)"
                                                },
                                                {
                                                    "type": "assignment",
                                                    "code": "result = response.json()"
                                                },
                                                {
                                                    "type": "yield",
                                                    "code": "yield 'company', result.get('results', [{}])[0]"
                                                },
                                                {
                                                    "type": "yield",
                                                    "code": "yield 'status', 'retrieved'"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "elif_clause",
                                    "code": "elif input_data.operation == 'update':",
                                    "children": [
                                        {
                                            "type": "block",
                                            "code": "",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "code": "search_response = requests.post(f'{base_url}/search', headers=headers, json={'filterGroups': [{'filters': [{'propertyName': 'domain', 'operator': 'EQ', 'value': input_data.domain}]}]})"
                                                },
                                                {
                                                    "type": "assignment",
                                                    "code": "company_id = search_response.json().get('results', [{}])[0].get('id')"
                                                },
                                                {
                                                    "type": "if_statement",
                                                    "code": "if company_id:",
                                                    "children": [
                                                        {
                                                            "type": "block",
                                                            "code": "",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "code": "response = requests.patch(f'{base_url}/{company_id}', headers=headers, json={'properties': input_data.company_data})"
                                                                },
                                                                {
                                                                    "type": "assignment",
                                                                    "code": "result = response.json()"
                                                                },
                                                                {
                                                                    "type": "yield",
                                                                    "code": "yield 'company', result"
                                                                },
                                                                {
                                                                    "type": "yield",
                                                                    "code": "yield 'status', 'updated'"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "else_clause",
                                                    "code": "else:",
                                                    "children": [
                                                        {
                                                            "type": "block",
                                                            "code": "",
                                                            "children": [
                                                                {
                                                                    "type": "yield",
                                                                    "code": "yield 'company', {}"
                                                                },
                                                                {
                                                                    "type": "yield",
                                                                    "code": "yield 'status', 'company_not_found'"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}