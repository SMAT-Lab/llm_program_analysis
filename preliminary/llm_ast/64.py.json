{
    "type": "module",
    "code": "",
    "children": [
        {
            "type": "future_import_statement",
            "code": "from __future__ import annotations",
            "children": []
        },
        {
            "type": "import_statement",
            "code": "from typing import Any",
            "children": []
        },
        {
            "type": "function_definition",
            "code": "def generate_all_subsequences(sequence: list[Any]) -> None:",
            "children": [
                {
                    "type": "block",
                    "code": "",
                    "children": [
                        {
                            "type": "expression_statement",
                            "code": "create_state_space_tree(sequence, [], 0)",
                            "children": [
                                {
                                    "type": "call",
                                    "code": "create_state_space_tree(sequence, [], 0)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "code": "create_state_space_tree",
                                            "children": []
                                        },
                                        {
                                            "type": "argument_list",
                                            "code": "(sequence, [], 0)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "code": "sequence",
                                                    "children": []
                                                },
                                                {
                                                    "type": "list",
                                                    "code": "[]",
                                                    "children": []
                                                },
                                                {
                                                    "type": "integer",
                                                    "code": "0",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "code": "def create_state_space_tree(sequence: list[Any], current_subsequence: list[Any], index: int) -> None:",
            "children": [
                {
                    "type": "string",
                    "code": "\"\"\" Creates a state space tree to iterate through each branch using DFS. We know that each state has exactly two children. It terminates when it reaches the end of the given sequence.\n\n:param sequence: The input sequence for which subsequences are generated.\n:param current_subsequence: The current subsequence being built.\n:param index: The current index in the sequence.\n\nExample:\n>>> sequence = [3, 2, 1]\n>>> current_subsequence = []\n>>> create_state_space_tree(sequence, current_subsequence, 0)\n[]\n[1]\n[2]\n[2, 1]\n[3]\n[3, 1]\n[3, 2]\n[3, 2, 1]\n\n>>> sequence = [\"A\", \"B\"]\n>>> current_subsequence = []\n>>> create_state_space_tree(sequence, current_subsequence, 0)\n[]\n['B']\n['A']\n['A', 'B']\n\n>>> sequence = []\n>>> current_subsequence = []\n>>> create_state_space_tree(sequence, current_subsequence, 0)\n[]\n\n>>> sequence = [1, 2, 3, 4]\n>>> current_subsequence = []\n>>> create_state_space_tree(sequence, current_subsequence, 0)\n[]\n[4]\n[3]\n[3, 4]\n[2]\n[2, 4]\n[2, 3]\n[2, 3, 4]\n[1]\n[1, 4]\n[1, 3]\n[1, 3, 4]\n[1, 2]\n[1, 2, 4]\n[1, 2, 3]\n[1, 2, 3, 4]\n\"\"\"",
                    "children": []
                },
                {
                    "type": "if_statement",
                    "code": "if index == len(sequence):",
                    "children": [
                        {
                            "type": "block",
                            "code": "",
                            "children": [
                                {
                                    "type": "expression_statement",
                                    "code": "print(current_subsequence)",
                                    "children": [
                                        {
                                            "type": "call",
                                            "code": "print(current_subsequence)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "code": "print",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "code": "(current_subsequence)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "code": "current_subsequence",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "return_statement",
                                    "code": "return",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "expression_statement",
                    "code": "create_state_space_tree(sequence, current_subsequence, index + 1)",
                    "children": [
                        {
                            "type": "call",
                            "code": "create_state_space_tree(sequence, current_subsequence, index + 1)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "code": "create_state_space_tree",
                                    "children": []
                                },
                                {
                                    "type": "argument_list",
                                    "code": "(sequence, current_subsequence, index + 1)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "code": "sequence",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "code": "current_subsequence",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "code": "index + 1",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "code": "index",
                                                    "children": []
                                                },
                                                {
                                                    "type": "integer",
                                                    "code": "1",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "expression_statement",
                    "code": "current_subsequence.append(sequence[index])",
                    "children": [
                        {
                            "type": "call",
                            "code": "current_subsequence.append(sequence[index])",
                            "children": [
                                {
                                    "type": "attribute",
                                    "code": "current_subsequence.append",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "code": "current_subsequence",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "code": "append",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "code": "(sequence[index])",
                                    "children": [
                                        {
                                            "type": "subscript",
                                            "code": "sequence[index]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "code": "sequence",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "code": "index",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "expression_statement",
                    "code": "create_state_space_tree(sequence, current_subsequence, index + 1)",
                    "children": [
                        {
                            "type": "call",
                            "code": "create_state_space_tree(sequence, current_subsequence, index + 1)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "code": "create_state_space_tree",
                                    "children": []
                                },
                                {
                                    "type": "argument_list",
                                    "code": "(sequence, current_subsequence, index + 1)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "code": "sequence",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "code": "current_subsequence",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "code": "index + 1",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "code": "index",
                                                    "children": []
                                                },
                                                {
                                                    "type": "integer",
                                                    "code": "1",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "expression_statement",
                    "code": "current_subsequence.pop()",
                    "children": [
                        {
                            "type": "call",
                            "code": "current_subsequence.pop()",
                            "children": [
                                {
                                    "type": "attribute",
                                    "code": "current_subsequence.pop",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "code": "current_subsequence",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "code": "pop",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "code": "()",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "if_statement",
            "code": "if __name__ == \"__main__\":",
            "children": [
                {
                    "type": "block",
                    "code": "",
                    "children": [
                        {
                            "type": "assignment",
                            "code": "seq: list[Any] = [1, 2, 3]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "code": "seq",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "code": "list[Any]",
                                    "children": [
                                        {
                                            "type": "generic_type",
                                            "code": "list[Any]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "code": "list",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "code": "Any",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "list",
                                    "code": "[1, 2, 3]",
                                    "children": [
                                        {
                                            "type": "integer",
                                            "code": "1",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "code": "2",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "code": "3",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "code": "generate_all_subsequences(seq)",
                            "children": [
                                {
                                    "type": "call",
                                    "code": "generate_all_subsequences(seq)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "code": "generate_all_subsequences",
                                            "children": []
                                        },
                                        {
                                            "type": "argument_list",
                                            "code": "(seq)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "code": "seq",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "code": "seq.clear()",
                            "children": [
                                {
                                    "type": "call",
                                    "code": "seq.clear()",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "code": "seq.clear",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "code": "seq",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "code": "clear",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "code": "()",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "code": "seq.extend([\"A\", \"B\", \"C\"])",
                            "children": [
                                {
                                    "type": "call",
                                    "code": "seq.extend([\"A\", \"B\", \"C\"])",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "code": "seq.extend",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "code": "seq",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "code": "extend",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "code": "([\"A\", \"B\", \"C\"])",
                                            "children": [
                                                {
                                                    "type": "list",
                                                    "code": "[\"A\", \"B\", \"C\"]",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "code": "\"A\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string",
                                                            "code": "\"B\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string",
                                                            "code": "\"C\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "code": "generate_all_subsequences(seq)",
                            "children": [
                                {
                                    "type": "call",
                                    "code": "generate_all_subsequences(seq)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "code": "generate_all_subsequences",
                                            "children": []
                                        },
                                        {
                                            "type": "argument_list",
                                            "code": "(seq)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "code": "seq",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}