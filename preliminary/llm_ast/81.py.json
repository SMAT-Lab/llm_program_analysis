{
    "type": "module",
    "code": "",
    "children": [
        {
            "type": "aliased_import",
            "code": "import pytest",
            "children": []
        },
        {
            "type": "aliased_import",
            "code": "from backend.util.service import AppService, expose, get_service_client",
            "children": []
        },
        {
            "type": "assignment",
            "code": "TEST_SERVICE_PORT = 8765",
            "children": [
                {
                    "type": "identifier",
                    "code": "TEST_SERVICE_PORT",
                    "children": []
                },
                {
                    "type": "integer",
                    "code": "8765",
                    "children": []
                }
            ]
        },
        {
            "type": "class_definition",
            "code": "class ServiceTest(AppService):",
            "children": [
                {
                    "type": "block",
                    "code": "",
                    "children": [
                        {
                            "type": "function_definition",
                            "code": "def __init__(self):",
                            "children": [
                                {
                                    "type": "block",
                                    "code": "",
                                    "children": [
                                        {
                                            "type": "call",
                                            "code": "super().__init__()",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "code": "super().__init__",
                                                    "children": [
                                                        {
                                                            "type": "dotted_name",
                                                            "code": "super",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "code": "__init__",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "code": "@classmethod\ndef get_port(cls) -> int:",
                            "children": [
                                {
                                    "type": "decorated_definition",
                                    "code": "classmethod",
                                    "children": []
                                },
                                {
                                    "type": "block",
                                    "code": "",
                                    "children": [
                                        {
                                            "type": "return_statement",
                                            "code": "return TEST_SERVICE_PORT",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "code": "TEST_SERVICE_PORT",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "code": "@expose\ndef add(self, a: int, b: int) -> int:",
                            "children": [
                                {
                                    "type": "decorated_definition",
                                    "code": "expose",
                                    "children": []
                                },
                                {
                                    "type": "block",
                                    "code": "",
                                    "children": [
                                        {
                                            "type": "return_statement",
                                            "code": "return a + b",
                                            "children": [
                                                {
                                                    "type": "binary_operator",
                                                    "code": "a + b",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "code": "a",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "code": "b",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "code": "@expose\ndef subtract(self, a: int, b: int) -> int:",
                            "children": [
                                {
                                    "type": "decorated_definition",
                                    "code": "expose",
                                    "children": []
                                },
                                {
                                    "type": "block",
                                    "code": "",
                                    "children": [
                                        {
                                            "type": "return_statement",
                                            "code": "return a - b",
                                            "children": [
                                                {
                                                    "type": "binary_operator",
                                                    "code": "a - b",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "code": "a",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "code": "b",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "code": "@expose\ndef fun_with_async(self, a: int, b: int) -> int:",
                            "children": [
                                {
                                    "type": "decorated_definition",
                                    "code": "expose",
                                    "children": []
                                },
                                {
                                    "type": "block",
                                    "code": "",
                                    "children": [
                                        {
                                            "type": "function_definition",
                                            "code": "async def add_async(a: int, b: int) -> int:",
                                            "children": [
                                                {
                                                    "type": "block",
                                                    "code": "",
                                                    "children": [
                                                        {
                                                            "type": "return_statement",
                                                            "code": "return a + b",
                                                            "children": [
                                                                {
                                                                    "type": "binary_operator",
                                                                    "code": "a + b",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "code": "a",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "code": "b",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "return_statement",
                                            "code": "return self.run_and_wait(add_async(a, b))",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "code": "self.run_and_wait(add_async(a, b))",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "code": "self.run_and_wait",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "code": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "code": "run_and_wait",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "call",
                                                            "code": "add_async(a, b)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "code": "add_async",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "code": "a, b",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "code": "a",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "code": "b",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "decorated_definition",
            "code": "@pytest.mark.asyncio(scope=\"session\")\nasync def test_service_creation(server):",
            "children": [
                {
                    "type": "decorator",
                    "code": "pytest.mark.asyncio(scope=\"session\")",
                    "children": [
                        {
                            "type": "attribute",
                            "code": "pytest.mark.asyncio",
                            "children": [
                                {
                                    "type": "identifier",
                                    "code": "pytest",
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "code": "mark",
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "code": "asyncio",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "argument_list",
                            "code": "scope=\"session\"",
                            "children": [
                                {
                                    "type": "keyword_argument",
                                    "code": "scope=\"session\"",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "code": "scope",
                                            "children": []
                                        },
                                        {
                                            "type": "string",
                                            "code": "\"session\"",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "code": "async def test_service_creation(server):",
                    "children": [
                        {
                            "type": "block",
                            "code": "",
                            "children": [
                                {
                                    "type": "with_statement",
                                    "code": "with ServiceTest():",
                                    "children": [
                                        {
                                            "type": "with_clause",
                                            "code": "ServiceTest():",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "code": "ServiceTest()",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "code": "ServiceTest",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "code": "",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "code": "client = get_service_client(ServiceTest)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "code": "client",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "code": "get_service_client(ServiceTest)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "code": "get_service_client",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "code": "ServiceTest",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "code": "ServiceTest",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "assert_statement",
                                                    "code": "assert client.add(5, 3) == 8",
                                                    "children": [
                                                        {
                                                            "type": "comparison_operator",
                                                            "code": "client.add(5, 3) == 8",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "code": "client.add(5, 3)",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "code": "client.add",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "code": "client",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "code": "add",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "code": "5, 3",
                                                                            "children": [
                                                                                {
                                                                                    "type": "integer",
                                                                                    "code": "5",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "integer",
                                                                                    "code": "3",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "integer",
                                                                    "code": "8",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "assert_statement",
                                                    "code": "assert client.subtract(10, 4) == 6",
                                                    "children": [
                                                        {
                                                            "type": "comparison_operator",
                                                            "code": "client.subtract(10, 4) == 6",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "code": "client.subtract(10, 4)",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "code": "client.subtract",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "code": "client",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "code": "subtract",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "code": "10, 4",
                                                                            "children": [
                                                                                {
                                                                                    "type": "integer",
                                                                                    "code": "10",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "integer",
                                                                                    "code": "4",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "integer",
                                                                    "code": "6",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "assert_statement",
                                                    "code": "assert client.fun_with_async(5, 3) == 8",
                                                    "children": [
                                                        {
                                                            "type": "comparison_operator",
                                                            "code": "client.fun_with_async(5, 3) == 8",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "code": "client.fun_with_async(5, 3)",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "code": "client.fun_with_async",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "code": "client",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "code": "fun_with_async",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "code": "5, 3",
                                                                            "children": [
                                                                                {
                                                                                    "type": "integer",
                                                                                    "code": "5",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "integer",
                                                                                    "code": "3",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "integer",
                                                                    "code": "8",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}