{
    "type": "module",
    "code": "",
    "children": [
        {
            "type": "import_statement",
            "code": "import time",
            "children": []
        },
        {
            "type": "import_statement",
            "code": "from datetime import datetime, timedelta",
            "children": []
        },
        {
            "type": "import_statement",
            "code": "from typing import Any, Union",
            "children": []
        },
        {
            "type": "import_from_statement",
            "code": "from backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema",
            "children": []
        },
        {
            "type": "import_from_statement",
            "code": "from backend.data.model import SchemaField",
            "children": []
        },
        {
            "type": "class_definition",
            "code": "class GetCurrentTimeBlock(Block):",
            "children": [
                {
                    "type": "class_definition",
                    "code": "class Input(BlockSchema):",
                    "children": [
                        {
                            "type": "assignment",
                            "code": "trigger: str = SchemaField(description='Trigger any data to output the current time')",
                            "children": []
                        },
                        {
                            "type": "assignment",
                            "code": "format: str = SchemaField(description='Format of the time to output', default='%H:%M:%S')",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "class_definition",
                    "code": "class Output(BlockSchema):",
                    "children": [
                        {
                            "type": "assignment",
                            "code": "time: str = SchemaField(description='Current time in the specified format (default: %H:%M:%S)')",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "code": "def __init__(self):",
                    "children": [
                        {
                            "type": "call",
                            "code": "super().__init__(id='a892b8d9-3e4e-4e9c-9c1e-75f8efcf1bfa', description='This block outputs the current time.', categories={BlockCategory.TEXT}, input_schema=GetCurrentTimeBlock.Input, output_schema=GetCurrentTimeBlock.Output, test_input=[{'trigger': 'Hello'}, {'trigger': 'Hello', 'format': '%H:%M'}], test_output=[('time', lambda _: time.strftime('%H:%M:%S')), ('time', lambda _: time.strftime('%H:%M'))])",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "code": "def run(self, input_data: Input, **kwargs) -> BlockOutput:",
                    "children": [
                        {
                            "type": "assignment",
                            "code": "current_time = time.strftime(input_data.format)",
                            "children": []
                        },
                        {
                            "type": "yield",
                            "code": "yield 'time', current_time",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "class_definition",
            "code": "class GetCurrentDateBlock(Block):",
            "children": [
                {
                    "type": "class_definition",
                    "code": "class Input(BlockSchema):",
                    "children": [
                        {
                            "type": "assignment",
                            "code": "trigger: str = SchemaField(description='Trigger any data to output the current date')",
                            "children": []
                        },
                        {
                            "type": "assignment",
                            "code": "offset: Union[int, str] = SchemaField(title='Days Offset', description='Offset in days from the current date', default=0)",
                            "children": []
                        },
                        {
                            "type": "assignment",
                            "code": "format: str = SchemaField(description='Format of the date to output', default='%Y-%m-%d')",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "class_definition",
                    "code": "class Output(BlockSchema):",
                    "children": [
                        {
                            "type": "assignment",
                            "code": "date: str = SchemaField(description='Current date in the specified format (default: YYYY-MM-DD)')",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "code": "def __init__(self):",
                    "children": [
                        {
                            "type": "call",
                            "code": "super().__init__(id='b29c1b50-5d0e-4d9f-8f9d-1b0e6fcbf0b1', description='This block outputs the current date with an optional offset.', categories={BlockCategory.TEXT}, input_schema=GetCurrentDateBlock.Input, output_schema=GetCurrentDateBlock.Output, test_input=[{'trigger': 'Hello', 'offset': '7'}, {'trigger': 'Hello', 'offset': '7', 'format': '%m/%d/%Y'}], test_output=[('date', lambda t: abs(datetime.now() - datetime.strptime(t, '%Y-%m-%d')) < timedelta(days=8)), ('date', lambda t: abs(datetime.now() - datetime.strptime(t, '%m/%d/%Y')) < timedelta(days=8))])",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "code": "def run(self, input_data: Input, **kwargs) -> BlockOutput:",
                    "children": [
                        {
                            "type": "try_statement",
                            "code": "try:",
                            "children": [
                                {
                                    "type": "assignment",
                                    "code": "offset = int(input_data.offset)",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "except_clause",
                            "code": "except ValueError:",
                            "children": [
                                {
                                    "type": "assignment",
                                    "code": "offset = 0",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "assignment",
                            "code": "current_date = datetime.now() - timedelta(days=offset)",
                            "children": []
                        },
                        {
                            "type": "yield",
                            "code": "yield 'date', current_date.strftime(input_data.format)",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "class_definition",
            "code": "class GetCurrentDateAndTimeBlock(Block):",
            "children": [
                {
                    "type": "class_definition",
                    "code": "class Input(BlockSchema):",
                    "children": [
                        {
                            "type": "assignment",
                            "code": "trigger: str = SchemaField(description='Trigger any data to output the current date and time')",
                            "children": []
                        },
                        {
                            "type": "assignment",
                            "code": "format: str = SchemaField(description='Format of the date and time to output', default='%Y-%m-%d %H:%M:%S')",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "class_definition",
                    "code": "class Output(BlockSchema):",
                    "children": [
                        {
                            "type": "assignment",
                            "code": "date_time: str = SchemaField(description='Current date and time in the specified format (default: YYYY-MM-DD HH:MM:SS)')",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "code": "def __init__(self):",
                    "children": [
                        {
                            "type": "call",
                            "code": "super().__init__(id='716a67b3-6760-42e7-86dc-18645c6e00fc', description='This block outputs the current date and time.', categories={BlockCategory.TEXT}, input_schema=GetCurrentDateAndTimeBlock.Input, output_schema=GetCurrentDateAndTimeBlock.Output, test_input=[{'trigger': 'Hello'}], test_output=[('date_time', lambda t: abs(datetime.now() - datetime.strptime(t, '%Y-%m-%d %H:%M:%S')) < timedelta(seconds=10))])",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "code": "def run(self, input_data: Input, **kwargs) -> BlockOutput:",
                    "children": [
                        {
                            "type": "assignment",
                            "code": "current_date_time = time.strftime(input_data.format)",
                            "children": []
                        },
                        {
                            "type": "yield",
                            "code": "yield 'date_time', current_date_time",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "class_definition",
            "code": "class CountdownTimerBlock(Block):",
            "children": [
                {
                    "type": "class_definition",
                    "code": "class Input(BlockSchema):",
                    "children": [
                        {
                            "type": "assignment",
                            "code": "input_message: Any = SchemaField(advanced=False, description='Message to output after the timer finishes', default='timer finished')",
                            "children": []
                        },
                        {
                            "type": "assignment",
                            "code": "seconds: Union[int, str] = SchemaField(advanced=False, description='Duration in seconds', default=0)",
                            "children": []
                        },
                        {
                            "type": "assignment",
                            "code": "minutes: Union[int, str] = SchemaField(advanced=False, description='Duration in minutes', default=0)",
                            "children": []
                        },
                        {
                            "type": "assignment",
                            "code": "hours: Union[int, str] = SchemaField(advanced=False, description='Duration in hours', default=0)",
                            "children": []
                        },
                        {
                            "type": "assignment",
                            "code": "days: Union[int, str] = SchemaField(advanced=False, description='Duration in days', default=0)",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "class_definition",
                    "code": "class Output(BlockSchema):",
                    "children": [
                        {
                            "type": "assignment",
                            "code": "output_message: Any = SchemaField(description='Message after the timer finishes')",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "code": "def __init__(self):",
                    "children": [
                        {
                            "type": "call",
                            "code": "super().__init__(id='d67a9c52-5e4e-11e2-bcfd-0800200c9a71', description='This block triggers after a specified duration.', categories={BlockCategory.TEXT}, input_schema=CountdownTimerBlock.Input, output_schema=CountdownTimerBlock.Output, test_input=[{'seconds': 1}, {'input_message': 'Custom message'}], test_output=[('output_message', 'timer finished'), ('output_message', 'Custom message')])",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "code": "def run(self, input_data: Input, **kwargs) -> BlockOutput:",
                    "children": [
                        {
                            "type": "assignment",
                            "code": "seconds = int(input_data.seconds)",
                            "children": []
                        },
                        {
                            "type": "assignment",
                            "code": "minutes = int(input_data.minutes)",
                            "children": []
                        },
                        {
                            "type": "assignment",
                            "code": "hours = int(input_data.hours)",
                            "children": []
                        },
                        {
                            "type": "assignment",
                            "code": "days = int(input_data.days)",
                            "children": []
                        },
                        {
                            "type": "assignment",
                            "code": "total_seconds = seconds + minutes * 60 + hours * 3600 + days * 86400",
                            "children": []
                        },
                        {
                            "type": "call",
                            "code": "time.sleep(total_seconds)",
                            "children": []
                        },
                        {
                            "type": "yield",
                            "code": "yield 'output_message', input_data.input_message",
                            "children": []
                        }
                    ]
                }
            ]
        }
    ]
}