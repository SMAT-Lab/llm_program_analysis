{
    "type": "module",
    "code": null,
    "children": [
        {
            "type": "aliased_import",
            "code": "import time",
            "children": []
        },
        {
            "type": "aliased_import",
            "code": "from typing import Literal",
            "children": []
        },
        {
            "type": "aliased_import",
            "code": "from pydantic import SecretStr",
            "children": []
        },
        {
            "type": "aliased_import",
            "code": "from backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema",
            "children": []
        },
        {
            "type": "aliased_import",
            "code": "from backend.data.model import APIKeyCredentials, CredentialsField, CredentialsMetaInput, SchemaField",
            "children": []
        },
        {
            "type": "aliased_import",
            "code": "from backend.integrations.providers import ProviderName",
            "children": []
        },
        {
            "type": "aliased_import",
            "code": "from backend.util.request import requests",
            "children": []
        },
        {
            "type": "assignment",
            "code": "TEST_CREDENTIALS = APIKeyCredentials(...)",
            "children": []
        },
        {
            "type": "assignment",
            "code": "TEST_CREDENTIALS_INPUT = {...}",
            "children": []
        },
        {
            "type": "class_definition",
            "code": "class CreateTalkingAvatarVideoBlock(Block):",
            "children": [
                {
                    "type": "class_definition",
                    "code": "class Input(BlockSchema):",
                    "children": [
                        {
                            "type": "assignment",
                            "code": "credentials = CredentialsField(description=...)",
                            "children": []
                        },
                        {
                            "type": "assignment",
                            "code": "script_input = SchemaField(description=..., placeholder=...)",
                            "children": []
                        },
                        {
                            "type": "assignment",
                            "code": "provider = SchemaField(description=..., default=...)",
                            "children": []
                        },
                        {
                            "type": "assignment",
                            "code": "voice_id = SchemaField(description=..., default=...)",
                            "children": []
                        },
                        {
                            "type": "assignment",
                            "code": "presenter_id = SchemaField(description=..., default=...)",
                            "children": []
                        },
                        {
                            "type": "assignment",
                            "code": "driver_id = SchemaField(description=..., default=...)",
                            "children": []
                        },
                        {
                            "type": "assignment",
                            "code": "result_format = SchemaField(description=..., default=...)",
                            "children": []
                        },
                        {
                            "type": "assignment",
                            "code": "crop_type = SchemaField(description=..., default=...)",
                            "children": []
                        },
                        {
                            "type": "assignment",
                            "code": "subtitles = SchemaField(description=..., default=...)",
                            "children": []
                        },
                        {
                            "type": "assignment",
                            "code": "ssml = SchemaField(description=..., default=...)",
                            "children": []
                        },
                        {
                            "type": "assignment",
                            "code": "max_polling_attempts = SchemaField(description=..., default=..., ge=...)",
                            "children": []
                        },
                        {
                            "type": "assignment",
                            "code": "polling_interval = SchemaField(description=..., default=..., ge=...)",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "class_definition",
                    "code": "class Output(BlockSchema):",
                    "children": [
                        {
                            "type": "assignment",
                            "code": "video_url = SchemaField(description=...)",
                            "children": []
                        },
                        {
                            "type": "assignment",
                            "code": "error = SchemaField(description=...)",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "code": "def __init__(self):",
                    "children": []
                },
                {
                    "type": "function_definition",
                    "code": "def create_clip(self, api_key: SecretStr, payload: dict) -> dict:",
                    "children": []
                },
                {
                    "type": "function_definition",
                    "code": "def get_clip_status(self, api_key: SecretStr, clip_id: str) -> dict:",
                    "children": []
                },
                {
                    "type": "function_definition",
                    "code": "def run(self, input_data: Input, *, credentials: APIKeyCredentials, **kwargs) -> BlockOutput:",
                    "children": [
                        {
                            "type": "block",
                            "code": null,
                            "children": [
                                {
                                    "type": "assignment",
                                    "code": "payload = {...}",
                                    "children": []
                                },
                                {
                                    "type": "assignment",
                                    "code": "response = self.create_clip(credentials.api_key, payload)",
                                    "children": []
                                },
                                {
                                    "type": "assignment",
                                    "code": "clip_id = response['id']",
                                    "children": []
                                },
                                {
                                    "type": "for_statement",
                                    "code": "for _ in range(input_data.max_polling_attempts):",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "code": "status_response = self.get_clip_status(credentials.api_key, clip_id)",
                                            "children": []
                                        },
                                        {
                                            "type": "if_statement",
                                            "code": "if status_response['status'] == 'done':",
                                            "children": [
                                                {
                                                    "type": "yield",
                                                    "code": "yield 'video_url', status_response['result_url']",
                                                    "children": []
                                                },
                                                {
                                                    "type": "return_statement",
                                                    "code": "return",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "elif_clause",
                                            "code": "elif status_response['status'] == 'error':",
                                            "children": [
                                                {
                                                    "type": "raise_statement",
                                                    "code": "raise RuntimeError(...)",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "code": "time.sleep(input_data.polling_interval)",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "raise_statement",
                                    "code": "raise TimeoutError('Clip creation timed out')",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}