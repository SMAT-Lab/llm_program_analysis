{
    "type": "module",
    "code": "",
    "children": [
        {
            "type": "comment",
            "code": "# -*- coding: utf-8 -*-"
        },
        {
            "type": "import_statement",
            "code": "from mrjob.job import MRJob"
        },
        {
            "type": "class_definition",
            "code": "class HitCounts(MRJob):",
            "children": [
                {
                    "type": "function_definition",
                    "code": "def extract_url(self, line):",
                    "children": [
                        {
                            "type": "string",
                            "code": "\"\"\"Extract the generated url from the log line.\"\"\""
                        },
                        {
                            "type": "pass_statement",
                            "code": "pass"
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "code": "def extract_year_month(self, line):",
                    "children": [
                        {
                            "type": "string",
                            "code": "\"\"\"Return the year and month portions of the timestamp.\"\"\""
                        },
                        {
                            "type": "pass_statement",
                            "code": "pass"
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "code": "def mapper(self, _, line):",
                    "children": [
                        {
                            "type": "string",
                            "code": "\"\"\"Parse each log line, extract and transform relevant lines.\"",
                            "children": [
                                {
                                    "type": "string",
                                    "code": "Emit key value pairs of the form:"
                                },
                                {
                                    "type": "string",
                                    "code": "(2016-01, url0), 1"
                                },
                                {
                                    "type": "string",
                                    "code": "(2016-01, url0), 1"
                                },
                                {
                                    "type": "string",
                                    "code": "(2016-01, url1), 1\""
                                }
                            ]
                        },
                        {
                            "type": "assignment",
                            "code": "url = self.extract_url(line)"
                        },
                        {
                            "type": "assignment",
                            "code": "period = self.extract_year_month(line)"
                        },
                        {
                            "type": "yield",
                            "code": "yield (period, url), 1"
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "code": "def reducer(self, key, values):",
                    "children": [
                        {
                            "type": "string",
                            "code": "\"\"\"Sum values for each key.\"",
                            "children": [
                                {
                                    "type": "string",
                                    "code": "(2016-01, url0), 2"
                                },
                                {
                                    "type": "string",
                                    "code": "(2016-01, url1), 1\""
                                }
                            ]
                        },
                        {
                            "type": "yield",
                            "code": "yield key, sum(values)"
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "code": "def steps(self):",
                    "children": [
                        {
                            "type": "string",
                            "code": "\"\"\"Run the map and reduce steps.\"\"\""
                        },
                        {
                            "type": "return_statement",
                            "code": "return [self.mr(mapper=self.mapper, reducer=self.reducer)]"
                        }
                    ]
                }
            ]
        },
        {
            "type": "if_statement",
            "code": "if __name__ == '__main__':",
            "children": [
                {
                    "type": "expression_statement",
                    "code": "HitCounts.run()"
                }
            ]
        }
    ]
}