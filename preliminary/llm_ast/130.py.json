{
    "type": "module",
    "code": "",
    "children": [
        {
            "type": "aliased_import",
            "code": "from typing import List, Optional",
            "children": []
        },
        {
            "type": "aliased_import",
            "code": "from pydantic import BaseModel",
            "children": []
        },
        {
            "type": "aliased_import",
            "code": "from backend.blocks.exa._auth import ( ExaCredentials, ExaCredentialsField, ExaCredentialsInput )",
            "children": []
        },
        {
            "type": "aliased_import",
            "code": "from backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema",
            "children": []
        },
        {
            "type": "aliased_import",
            "code": "from backend.data.model import SchemaField",
            "children": []
        },
        {
            "type": "aliased_import",
            "code": "from backend.util.request import requests",
            "children": []
        },
        {
            "type": "class_definition",
            "code": "class ContentRetrievalSettings(BaseModel):",
            "children": [
                {
                    "type": "assignment",
                    "code": "text: Optional[dict] = SchemaField( description=\"Text content settings\", default={\"maxCharacters\": 1000, \"includeHtmlTags\": False}, advanced=True )",
                    "children": []
                },
                {
                    "type": "assignment",
                    "code": "highlights: Optional[dict] = SchemaField( description=\"Highlight settings\", default={ \"numSentences\": 3, \"highlightsPerUrl\": 3, \"query\": \"\", }, advanced=True )",
                    "children": []
                },
                {
                    "type": "assignment",
                    "code": "summary: Optional[dict] = SchemaField( description=\"Summary settings\", default={\"query\": \"\"}, advanced=True )",
                    "children": []
                }
            ]
        },
        {
            "type": "class_definition",
            "code": "class ExaContentsBlock(Block):",
            "children": [
                {
                    "type": "class_definition",
                    "code": "class Input(BlockSchema):",
                    "children": [
                        {
                            "type": "assignment",
                            "code": "credentials: ExaCredentialsInput = ExaCredentialsField()",
                            "children": []
                        },
                        {
                            "type": "assignment",
                            "code": "ids: List[str] = SchemaField( description=\"Array of document IDs obtained from searches\" )",
                            "children": []
                        },
                        {
                            "type": "assignment",
                            "code": "contents: ContentRetrievalSettings = SchemaField( description=\"Content retrieval settings\", default=ContentRetrievalSettings(), advanced=True )",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "class_definition",
                    "code": "class Output(BlockSchema):",
                    "children": [
                        {
                            "type": "assignment",
                            "code": "results: list = SchemaField( description=\"List of document contents\", default=[] )",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "code": "def __init__(self):",
                    "children": [
                        {
                            "type": "call",
                            "code": "super().__init__( id=\"c52be83f-f8cd-4180-b243-af35f986b461\", description=\"Retrieves document contents using Exa's contents API\", categories={BlockCategory.SEARCH}, input_schema=ExaContentsBlock.Input, output_schema=ExaContentsBlock.Output )",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "code": "def run(self, input_data: Input, *, credentials: ExaCredentials, **kwargs) -> BlockOutput:",
                    "children": [
                        {
                            "type": "assignment",
                            "code": "url = \"https://api.exa.ai/contents\"",
                            "children": []
                        },
                        {
                            "type": "assignment",
                            "code": "headers = { \"Content-Type\": \"application/json\", \"x-api-key\": credentials.api_key.get_secret_value() }",
                            "children": []
                        },
                        {
                            "type": "assignment",
                            "code": "payload = { \"ids\": input_data.ids, \"text\": input_data.contents.text, \"highlights\": input_data.contents.highlights, \"summary\": input_data.contents.summary }",
                            "children": []
                        },
                        {
                            "type": "try_statement",
                            "code": "try:",
                            "children": [
                                {
                                    "type": "assignment",
                                    "code": "response = requests.post(url, headers=headers, json=payload)",
                                    "children": []
                                },
                                {
                                    "type": "call",
                                    "code": "response.raise_for_status()",
                                    "children": []
                                },
                                {
                                    "type": "assignment",
                                    "code": "data = response.json()",
                                    "children": []
                                },
                                {
                                    "type": "yield",
                                    "code": "yield \"results\", data.get(\"results\", [])",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "except_clause",
                            "code": "except Exception as e:",
                            "children": [
                                {
                                    "type": "yield",
                                    "code": "yield \"error\", str(e)",
                                    "children": []
                                },
                                {
                                    "type": "yield",
                                    "code": "yield \"results\", []",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}