{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 56,
  "functions": [
    {
      "name": "parse",
      "type": "function",
      "start_line": 36,
      "end_line": 42,
      "functions": [],
      "classes": [],
      "simplified_code": "func parse(text: String) {\n    let json = JsonValue.fromStr(text).asObject()\n    let choices = json.getFields()['choices'].asArray()\n    let message = choices[0].asObject().getFields()['message'].asObject()\n    let content = message.getFields()['content'].asString().getValue()\n    return content\n}",
      "blocks": [
        {
          "id": 1,
          "label": "func parse(text: String) {\n    let json = JsonValue.fromStr(text).asObject()",
          "successors": [
            {
              "id": 3,
              "label": "    let choices = json.getFields()['choices'].asArray()\n    let message = choices[0].asObject().getFields()['message'].asObject()",
              "successors": [
                {
                  "id": 5,
                  "label": "    let content = message.getFields()['content'].asString().getValue()\n    return content",
                  "successors": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "main",
      "type": "function",
      "start_line": 44,
      "end_line": 56,
      "functions": [],
      "classes": [],
      "simplified_code": "main() {\n    var config = TlsClientConfig()\n    config.verifyMode = TrustAll\n    let client = ClientBuilder()\n        .tlsConfig(config)\n        .readTimeout(Duration.Max) // AI 服务响应有时候比较慢，这里设置为无限等待\n        .build()\n    println(client.chat(\"你好呀，请做个自我介绍吧\"))\n    println(client.chat(\"周杰伦在 2000 到 2010 年之间出过哪些专辑\"))\n    println(client.chat(\"请背诵《卜算子·送鲍浩然之浙东》\"))\n    println(client.chat(\"在编程框架中，网络拦截器的作用是什么\"))\n    client.close()\n}",
      "blocks": [
        {
          "id": 1,
          "label": "main() {\nvar config = TlsClientConfig()",
          "successors": [
            {
              "id": 3,
              "label": "config.verifyMode = TrustAll\nlet client = ClientBuilder()\n    .tlsConfig(config)\n    .readTimeout(Duration.Max) // AI 服务响应有时候比较慢，这里设置为无限等待\n    .build()",
              "successors": [
                {
                  "id": 5,
                  "label": "println(client.chat(\"你好呀，请做个自我介绍吧\"))\nprintln(client.chat(\"周杰伦在 2000 到 2010 年之间出过哪些专辑\"))",
                  "successors": [
                    {
                      "id": 7,
                      "label": "println(client.chat(\"请背诵《卜算子·送鲍浩然之浙东》\"))\nprintln(client.chat(\"在编程框架中，网络拦截器的作用是什么\"))",
                      "successors": [
                        {
                          "id": 9,
                          "label": "client.close()\n}",
                          "successors": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ],
  "classes": [
    {
      "name": "Client",
      "type": "class",
      "start_line": 11,
      "end_line": 34,
      "functions": [
        {
          "name": "chat",
          "type": "function",
          "start_line": 12,
          "end_line": 33,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func chat(question: String) {\n        let info = \"\"\"\n        {\n            \"model\": \"deepseek-chat\",\n            \"messages\": [\n                {\"role\": \"system\", \"content\": \"你是我的全能助手，你的名字叫仓颉\"},\n                {\"role\": \"user\", \"content\": \"${question}\"}\n            ],\n            \"stream\": false\n        }\n        \"\"\"\n        let request = HttpRequestBuilder()\n            .url('https://api.deepseek.com/chat/completions')\n            .header('Authorization', 'Bearer ${DEEPSEEK_API_KEY}')\n            .header('Content-Type', 'application/json')\n            .body(info)\n            .post()\n            .build()\n        let response = this.send(request)\n        let text = StringReader(response.body).readToEnd()\n        return parse(text) + '\\n---------------------------'\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func chat(question: String) {\n    let info = \"\"\"\n    {\n        \"model\": \"deepseek-chat\",\n        \"messages\": [\n            {\"role\": \"system\", \"content\": \"你是我的全能助手，你的名字叫仓颉\"},\n            {\"role\": \"user\", \"content\": \"${question}\"}\n        ],\n        \"stream\": false\n    }\n    \"\"\"",
              "successors": [
                {
                  "id": 3,
                  "label": "    let request = HttpRequestBuilder()\n        .url('https://api.deepseek.com/chat/completions')\n        .header('Authorization', 'Bearer ${DEEPSEEK_API_KEY}')\n        .header('Content-Type', 'application/json')\n        .body(info)\n        .post()\n        .build()\n    let response = this.send(request)",
                  "successors": [
                    {
                      "id": 5,
                      "label": "    let text = StringReader(response.body).readToEnd()\n    return parse(text) + '\\n---------------------------'",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "classes": [],
      "simplified_code": "extend Client {\n    }\n}",
      "blocks": []
    }
  ],
  "simplified_code": "// 本示例演示访问 DeepSeek 大模型，可前往以下网址申请 API Key\n// https://platform.deepseek.com/api_keys\n// 仓颉语言团队 刘俊杰 2024.10.24\nimport std.io.*\nimport net.http.*\nimport net.tls.*\nimport encoding.json.*\n\nconst DEEPSEEK_API_KEY = '-------Your DeepSeek Key--------'\n\n}\n\n}\n\n}",
  "blocks": [
    {
      "id": 1,
      "label": "// 本示例演示访问 DeepSeek 大模型，可前往以下网址申请 API Key",
      "successors": []
    }
  ]
}