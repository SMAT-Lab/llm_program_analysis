{
  "name": "cangjie_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 49,
  "functions": [],
  "classes": [
    {
      "name": "MySqlTransaction",
      "type": "class",
      "start_line": 3,
      "end_line": 49,
      "functions": [
        {
          "name": "accessMode",
          "type": "function",
          "start_line": 7,
          "end_line": 14,
          "functions": [],
          "classes": [],
          "simplified_code": "    public mut prop accessMode: TransactionAccessMode {\n        get() {\n            _accessMode\n        }\n        set(accessMode) {\n            _accessMode = accessMode\n        }\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public mut prop accessMode: TransactionAccessMode {",
              "successors": [
                {
                  "id": 2,
                  "label": "    get() {\n        _accessMode",
                  "successors": [
                    {
                      "id": 4,
                      "label": "    }",
                      "successors": []
                    }
                  ]
                },
                {
                  "id": 5,
                  "label": "    set(accessMode) {\n        _accessMode = accessMode",
                  "successors": [
                    {
                      "id": 7,
                      "label": "    }",
                      "successors": []
                    }
                  ]
                },
                {
                  "id": 8,
                  "label": "}",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "deferrableMode",
          "type": "function",
          "start_line": 15,
          "end_line": 22,
          "functions": [],
          "classes": [],
          "simplified_code": "    public mut prop deferrableMode: TransactionDeferrableMode {\n        get() {\n            _deferrableMode\n        }\n        set(deferrableMode) {\n            _deferrableMode = deferrableMode\n        }\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public mut prop deferrableMode: TransactionDeferrableMode {",
              "successors": [
                {
                  "id": 2,
                  "label": "get() {\n_deferrableMode",
                  "successors": []
                },
                {
                  "id": 4,
                  "label": "set(deferrableMode) {\n_deferrableMode = deferrableMode",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "isoLevel",
          "type": "function",
          "start_line": 23,
          "end_line": 30,
          "functions": [],
          "classes": [],
          "simplified_code": "    public mut prop isoLevel: TransactionIsoLevel {\n        get() {\n            _isoLevel\n        }\n        set(isoLevel) {\n            _isoLevel = isoLevel\n        }\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public mut prop isoLevel: TransactionIsoLevel {",
              "successors": [
                {
                  "id": 2,
                  "label": "get() {\n_isoLevel",
                  "successors": [
                    {
                      "id": 4,
                      "label": "}",
                      "successors": []
                    }
                  ]
                },
                {
                  "id": 5,
                  "label": "set(isoLevel) {\n_isoLevel = isoLevel",
                  "successors": [
                    {
                      "id": 7,
                      "label": "}",
                      "successors": []
                    }
                  ]
                },
                {
                  "id": 8,
                  "label": "}",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "begin",
          "type": "function",
          "start_line": 31,
          "end_line": 33,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func begin(): Unit {\n\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func begin(): Unit {",
              "successors": []
            }
          ]
        },
        {
          "name": "commit",
          "type": "function",
          "start_line": 34,
          "end_line": 36,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func commit(): Unit {\n\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func commit(): Unit {",
              "successors": []
            }
          ]
        },
        {
          "name": "release",
          "type": "function",
          "start_line": 37,
          "end_line": 39,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func release(savePointName: String): Unit {\n\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func release(savePointName: String): Unit {",
              "successors": []
            }
          ]
        },
        {
          "name": "rollback",
          "type": "function",
          "start_line": 40,
          "end_line": 42,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func rollback(): Unit {\n\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func rollback(): Unit {",
              "successors": []
            }
          ]
        },
        {
          "name": "rollback",
          "type": "function",
          "start_line": 43,
          "end_line": 45,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func rollback(savePointName: String): Unit {\n\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func rollback(savePointName: String): Unit {",
              "successors": []
            }
          ]
        },
        {
          "name": "save",
          "type": "function",
          "start_line": 46,
          "end_line": 48,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func save(savePointName: String): Unit {\n\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func save(savePointName: String): Unit {",
              "successors": []
            }
          ]
        }
      ],
      "simplified_code": "public class MySqlTransaction <: Transaction {\n    private var _accessMode: TransactionAccessMode = TransactionAccessMode.ReadOnly\n    private var _deferrableMode: TransactionDeferrableMode = TransactionDeferrableMode.Deferrable\n    private var _isoLevel: TransactionIsoLevel = TransactionIsoLevel.RepeatableRead\n    }\n    }\n    }\n    }\n    }\n    }\n    }\n    }\n    }\n}",
      "blocks": [
        {
          "id": 1,
          "label": "public class MySqlTransaction <: Transaction {\nprivate var _accessMode: TransactionAccessMode = TransactionAccessMode.ReadOnly",
          "successors": [
            {
              "id": 3,
              "label": "private var _deferrableMode: TransactionDeferrableMode = TransactionDeferrableMode.Deferrable\nprivate var _isoLevel: TransactionIsoLevel = TransactionIsoLevel.RepeatableRead",
              "successors": []
            }
          ]
        }
      ]
    }
  ],
  "simplified_code": "package cangjieWeb.mysql\nimport std.database.sql.{Transaction, TransactionAccessMode, TransactionDeferrableMode, TransactionIsoLevel}\n}",
  "blocks": [
    {
      "id": 1,
      "label": "package cangjieWeb.mysql",
      "successors": []
    }
  ]
}