{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 26,
  "functions": [
    {
      "name": "parseInt",
      "type": "function",
      "start_line": 3,
      "end_line": 17,
      "functions": [],
      "classes": [],
      "simplified_code": "func parseInt(text: String): Option<Int64> {\n    if (text.isEmpty() || text == \"-\") {\n        return None\n    }\n    var sign = if (text[0] == 45u8) { 1 } else { 0 }\n    var sum = 0\n    for (i in sign..text.size) {\n        if (text[i] > 57u8 || text[i] < 48u8) {\n            return None\n        }\n        let digit = Int64(text[i] - 48u8)\n        sum = 10 * sum + digit\n    }\n    return if (sign == 1) { -sum } else { sum }\n}",
      "blocks": [
        {
          "id": 1,
          "label": "if (text.isEmpty() || text == \"-\")",
          "successors": [
            {
              "id": 2,
              "label": "return None",
              "successors": []
            },
            {
              "id": 3,
              "label": "var sign = if (text[0] == 45u8) { 1 } else { 0 }\nvar sum = 0",
              "successors": [
                {
                  "id": 5,
                  "label": "for (i in sign..text.size)",
                  "successors": [
                    {
                      "id": 6,
                      "label": "if (text[i] > 57u8 || text[i] < 48u8)",
                      "successors": [
                        {
                          "id": 7,
                          "label": "return None",
                          "successors": []
                        },
                        {
                          "id": 8,
                          "label": "let digit = Int64(text[i] - 48u8)\nsum = 10 * sum + digit",
                          "successors": [
                            {
                              "id": 5,
                              "label": "for (i in sign..text.size)",
                              "successors": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "id": 9,
                  "label": "return if (sign == 1) { -sum } else { sum }",
                  "successors": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "main",
      "type": "function",
      "start_line": 19,
      "end_line": 26,
      "functions": [],
      "classes": [],
      "simplified_code": "main() {\n    let number = parseInt(\"-123456\")\n    println(number.getOrThrow())\n    let result = parseInt(\"123-456\")\n    if (result.isNone()) {\n        println(\"parse failed\")\n    }\n}",
      "blocks": [
        {
          "id": 1,
          "label": "main() {\n    let number = parseInt(\"-123456\")",
          "successors": [
            {
              "id": 3,
              "label": "    println(number.getOrThrow())\n    let result = parseInt(\"123-456\")",
              "successors": [
                {
                  "id": 5,
                  "label": "if (result.isNone()) {\n    println(\"parse failed\")",
                  "successors": []
                }
              ]
            }
          ]
        }
      ]
    }
  ],
  "classes": [],
  "simplified_code": "// 从字符串解析整数，演示基于 Option 的异常处理\n// cjc version: 0.53.13\n}\n\n}",
  "blocks": []
}