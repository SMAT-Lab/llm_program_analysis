{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 25,
  "functions": [
    {
      "name": "split",
      "type": "function",
      "start_line": 14,
      "end_line": 18,
      "functions": [],
      "classes": [],
      "simplified_code": "func split(words: Array<String>, separator: Rune): Array<String> {\n    words |> map { text =>\n        text.split(String(separator), removeEmpty: true)\n    } |> flatten |> collectArray\n}",
      "blocks": [
        {
          "id": 1,
          "label": "func split(words: Array<String>, separator: Rune): Array<String> {\n    words |> map { text =>",
          "successors": [
            {
              "id": 3,
              "label": "        text.split(String(separator), removeEmpty: true)",
              "successors": []
            }
          ]
        }
      ]
    },
    {
      "name": "main",
      "type": "function",
      "start_line": 20,
      "end_line": 25,
      "functions": [],
      "classes": [],
      "simplified_code": "main() {\n    let words = [\"one.two.three\", \".four.five\", \"six.\", \"seven\"]\n    let separator = r'.'\n    let result = split(words, separator)\n    println(result)\n}",
      "blocks": [
        {
          "id": 1,
          "label": "let words = [\"one.two.three\", \".four.five\", \"six.\", \"seven\"]\nlet separator = r'.'\nlet result = split(words, separator)\nprintln(result)",
          "successors": []
        }
      ]
    }
  ],
  "classes": [],
  "simplified_code": "/*\n题目描述\n给你一个字符串数组 words 和一个字符 separator ，请你按 separator 拆分 words 中的每个字符串。\n返回一个由拆分后的新字符串组成的字符串数组，不包括空字符串 。\n- separator 用于决定拆分发生的位置，但它不包含在结果字符串中。\n- 拆分可能形成两个以上的字符串。\n- 结果字符串必须保持初始相同的先后顺序。\n\n仓颉语言团队 刘俊杰 2024.10.24\n*/\n\nimport std.collection.*\n\n}\n\n}",
  "blocks": [
    {
      "id": 1,
      "label": "题目描述\n给你一个字符串数组 words 和一个字符 separator ，请你按 separator 拆分 words 中的每个字符串。",
      "successors": [
        {
          "id": 3,
          "label": "返回一个由拆分后的新字符串组成的字符串数组，不包括空字符串 。\n- separator 用于决定拆分发生的位置，但它不包含在结果字符串中。",
          "successors": [
            {
              "id": 5,
              "label": "- 拆分可能形成两个以上的字符串。\n- 结果字符串必须保持初始相同的先后顺序。",
              "successors": [
                {
                  "id": 7,
                  "label": "仓颉语言团队 刘俊杰 2024.10.24\nimport std.collection.*",
                  "successors": []
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}