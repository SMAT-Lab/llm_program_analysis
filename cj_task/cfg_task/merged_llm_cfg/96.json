{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 55,
  "functions": [],
  "classes": [
    {
      "name": "RepeaterMode",
      "type": "class",
      "start_line": 12,
      "end_line": 38,
      "functions": [
        {
          "name": "config",
          "type": "function",
          "start_line": 17,
          "end_line": 37,
          "functions": [],
          "classes": [],
          "simplified_code": "    public prop config: RepeaterConfig {\n        get() {\n            match (this) {\n                case Leading(interval) => RepeaterConfig(\n                    interval: Duration.millisecond * interval,\n                    leading: true,\n                    trailing: false\n                )\n                case Trailing(interval) => RepeaterConfig(\n                    interval: Duration.millisecond * interval,\n                    leading: false,\n                    trailing: true\n                )\n                case Both(interval) => RepeaterConfig(\n                    interval: Duration.millisecond * interval,\n                    leading: true,\n                    trailing: true\n                )\n            }\n        }\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public prop config: RepeaterConfig {\nget() {",
              "successors": [
                {
                  "id": 3,
                  "label": "match (this) {",
                  "successors": [
                    {
                      "id": 4,
                      "label": "case Leading(interval) => RepeaterConfig(interval: Duration.millisecond * interval, leading: true, trailing: false)",
                      "successors": []
                    },
                    {
                      "id": 5,
                      "label": "case Trailing(interval) => RepeaterConfig(interval: Duration.millisecond * interval, leading: false, trailing: true)",
                      "successors": []
                    },
                    {
                      "id": 6,
                      "label": "case Both(interval) => RepeaterConfig(interval: Duration.millisecond * interval, leading: true, trailing: true)",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "classes": [],
      "simplified_code": "public enum RepeaterMode {\n    | Leading(Int)\n    | Trailing(Int)\n    | Both(Int)\n\n    }\n}",
      "blocks": [
        {
          "id": 1,
          "label": "public enum RepeaterMode {",
          "successors": [
            {
              "id": 2,
              "label": "| Leading(Int)",
              "successors": []
            },
            {
              "id": 3,
              "label": "| Trailing(Int)",
              "successors": []
            },
            {
              "id": 4,
              "label": "| Both(Int)",
              "successors": []
            }
          ]
        }
      ]
    },
    {
      "name": "RepeaterConfig",
      "type": "class",
      "start_line": 43,
      "end_line": 54,
      "functions": [],
      "classes": [],
      "simplified_code": "public struct RepeaterConfig {\n    /**\n     * interval 等待间隔时间(毫秒)\n     * leading在开头调用\n     * trailing在最后调用\n     */\n    public RepeaterConfig(\n        var interval!: Duration,\n        var leading!: Bool = false,\n        var trailing!: Bool = true\n    ) {}\n}",
      "blocks": [
        {
          "id": 1,
          "label": "public struct RepeaterConfig {\n/**\n     * interval 等待间隔时间(毫秒)\n     * leading在开头调用\n     * trailing在最后调用\n     */",
          "successors": [
            {
              "id": 3,
              "label": "public RepeaterConfig(\n        var interval!: Duration,\n        var leading!: Bool = false,\n        var trailing!: Bool = true\n    ) {}",
              "successors": []
            }
          ]
        }
      ]
    }
  ],
  "simplified_code": "// cjlint-ignore -start !G.NAM.02\npackage cj_debounce_throttle.repeater\n\n/**\n * 任务类型\n */\npublic type RepeaterTask = () -> Unit\n\n/**\n * 模式,时间为毫秒\n */\n}\n\n/**\n * 属性配置\n */\n}\n// cjlint-ignore -end",
  "blocks": [
    {
      "id": 1,
      "label": "// cjlint-ignore -start !G.NAM.02\npackage cj_debounce_throttle.repeater",
      "successors": [
        {
          "id": 3,
          "label": "/**\n * 任务类型\n */\npublic type RepeaterTask = () -> Unit",
          "successors": [
            {
              "id": 5,
              "label": "/**\n * 模式,时间为毫秒\n */\n}",
              "successors": [
                {
                  "id": 7,
                  "label": "/**\n * 属性配置\n */\n}",
                  "successors": [
                    {
                      "id": 9,
                      "label": "// cjlint-ignore -end",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}