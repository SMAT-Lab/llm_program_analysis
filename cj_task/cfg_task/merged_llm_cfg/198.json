{
  "name": "cbor4cj_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 120,
  "functions": [],
  "classes": [
    {
      "name": "MapBuilder<T>",
      "type": "class",
      "start_line": 2,
      "end_line": 120,
      "functions": [
        {
          "name": "init",
          "type": "function",
          "start_line": 4,
          "end_line": 7,
          "functions": [],
          "classes": [],
          "simplified_code": "    public init(parent: T, map: CborMap) {\n        super(parent)\n        this.map = map\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public init(parent: T, map: CborMap) {\n    super(parent)",
              "successors": [
                {
                  "id": 3,
                  "label": "    this.map = map\n}",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "put",
          "type": "function",
          "start_line": 8,
          "end_line": 11,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func put(key: DataItem, value: DataItem): MapBuilder<T> {\n        map.put(key, value)\n        return this\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func put(key: DataItem, value: DataItem): MapBuilder<T> {\n    map.put(key, value)",
              "successors": [
                {
                  "id": 3,
                  "label": "    return this",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "put",
          "type": "function",
          "start_line": 12,
          "end_line": 15,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func put(key: Int64, value: Int64): MapBuilder<T> {\n        put(convert(key), convert(value))\n        return this\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func put(key: Int64, value: Int64): MapBuilder<T> {\nput(convert(key), convert(value))",
              "successors": [
                {
                  "id": 3,
                  "label": "return this",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "put",
          "type": "function",
          "start_line": 16,
          "end_line": 19,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func put(key: Int64, value: Bool): MapBuilder<T> {\n        put(convert(key), convert(value))\n        return this\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func put(key: Int64, value: Bool): MapBuilder<T> {\n    put(convert(key), convert(value))",
              "successors": [
                {
                  "id": 3,
                  "label": "    return this",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "put",
          "type": "function",
          "start_line": 20,
          "end_line": 23,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func put(key: Int64, value: Float32): MapBuilder<T> {\n        put(convert(key), convert(value))\n        return this\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func put(key: Int64, value: Float32): MapBuilder<T> {\nput(convert(key), convert(value))",
              "successors": [
                {
                  "id": 3,
                  "label": "return this",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "put",
          "type": "function",
          "start_line": 24,
          "end_line": 27,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func put(key: Int64, value: Float64): MapBuilder<T> {\n        put(convert(key), convert(value))\n        return this\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func put(key: Int64, value: Float64): MapBuilder<T> {\n    put(convert(key), convert(value))",
              "successors": [
                {
                  "id": 3,
                  "label": "    return this",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "put",
          "type": "function",
          "start_line": 28,
          "end_line": 31,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func put(key: Int64, value: Array<UInt8>): MapBuilder<T> {\n        put(convert(key), convert(value))\n        return this\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func put(key: Int64, value: Array<UInt8>): MapBuilder<T> {\nput(convert(key), convert(value))",
              "successors": [
                {
                  "id": 3,
                  "label": "return this",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "put",
          "type": "function",
          "start_line": 32,
          "end_line": 35,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func put(key: Int64, value: String): MapBuilder<T> {\n        put(convert(key), convert(value))\n        return this\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func put(key: Int64, value: String): MapBuilder<T> {\n    put(convert(key), convert(value))",
              "successors": [
                {
                  "id": 3,
                  "label": "    return this",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "put",
          "type": "function",
          "start_line": 36,
          "end_line": 39,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func put(key: String, value: Int64): MapBuilder<T> {\n        put(convert(key), convert(value))\n        return this\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func put(key: String, value: Int64): MapBuilder<T> {\n    put(convert(key), convert(value))",
              "successors": [
                {
                  "id": 3,
                  "label": "    return this",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "put",
          "type": "function",
          "start_line": 40,
          "end_line": 43,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func put(key: String, value: Bool): MapBuilder<T> {\n        put(convert(key), convert(value))\n        return this\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func put(key: String, value: Bool): MapBuilder<T> {\n    put(convert(key), convert(value))",
              "successors": [
                {
                  "id": 3,
                  "label": "    return this",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "put",
          "type": "function",
          "start_line": 44,
          "end_line": 47,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func put(key: String, value: Float32): MapBuilder<T> {\n        put(convert(key), convert(value))\n        return this\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func put(key: String, value: Float32): MapBuilder<T> {\n    put(convert(key), convert(value))",
              "successors": [
                {
                  "id": 3,
                  "label": "    return this",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "put",
          "type": "function",
          "start_line": 48,
          "end_line": 51,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func put(key: String, value: Float64): MapBuilder<T> {\n        put(convert(key), convert(value))\n        return this\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func put(key: String, value: Float64): MapBuilder<T> {\n    put(convert(key), convert(value))",
              "successors": [
                {
                  "id": 3,
                  "label": "    return this",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "put",
          "type": "function",
          "start_line": 52,
          "end_line": 55,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func put(key: String, value: Array<UInt8>): MapBuilder<T> {\n        map.put(convert(key), convert(value))\n        return this\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func put(key: String, value: Array<UInt8>): MapBuilder<T> {\nmap.put(convert(key), convert(value))",
              "successors": [
                {
                  "id": 3,
                  "label": "return this",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "put",
          "type": "function",
          "start_line": 56,
          "end_line": 59,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func put(key: String, value: String): MapBuilder<T> {\n        put(convert(key), convert(value))\n        return this\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func put(key: String, value: String): MapBuilder<T> {\nput(convert(key), convert(value))",
              "successors": [
                {
                  "id": 3,
                  "label": "return this",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "putArray",
          "type": "function",
          "start_line": 60,
          "end_line": 64,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func putArray(key: DataItem): ArrayBuilder<MapBuilder<T>> {\n        let array = CborArray()\n        put(key, array)\n        return ArrayBuilder<MapBuilder<T>>(this, array)\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func putArray(key: DataItem): ArrayBuilder<MapBuilder<T>> {\n    let array = CborArray()",
              "successors": [
                {
                  "id": 3,
                  "label": "    put(key, array)\n    return ArrayBuilder<MapBuilder<T>>(this, array)",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "putArray",
          "type": "function",
          "start_line": 65,
          "end_line": 69,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func putArray(key: Int64): ArrayBuilder<MapBuilder<T>> {\n        let array = CborArray()\n        put(convert(key), array)\n        return ArrayBuilder<MapBuilder<T>>(this, array)\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func putArray(key: Int64): ArrayBuilder<MapBuilder<T>> {\n    let array = CborArray()",
              "successors": [
                {
                  "id": 3,
                  "label": "    put(convert(key), array)\n    return ArrayBuilder<MapBuilder<T>>(this, array)",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "putArray",
          "type": "function",
          "start_line": 70,
          "end_line": 74,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func putArray(key: String): ArrayBuilder<MapBuilder<T>> {\n        let array = CborArray()\n        put(convert(key), array)\n        return ArrayBuilder<MapBuilder<T>>(this, array)\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func putArray(key: String): ArrayBuilder<MapBuilder<T>> {\n    let array = CborArray()\n    put(convert(key), array)\n    return ArrayBuilder<MapBuilder<T>>(this, array)",
              "successors": []
            }
          ]
        },
        {
          "name": "startArray",
          "type": "function",
          "start_line": 75,
          "end_line": 80,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func startArray(key: DataItem): ArrayBuilder<MapBuilder<T>> {\n        let array = CborArray()\n        array.setChunked(true)\n        put(key, array)\n        return ArrayBuilder<MapBuilder<T>>(this, array)\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func startArray(key: DataItem): ArrayBuilder<MapBuilder<T>> {\nlet array = CborArray()",
              "successors": [
                {
                  "id": 3,
                  "label": "array.setChunked(true)\nput(key, array)",
                  "successors": [
                    {
                      "id": 5,
                      "label": "return ArrayBuilder<MapBuilder<T>>(this, array)",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "startArray",
          "type": "function",
          "start_line": 81,
          "end_line": 83,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func startArray(key: Int64): ArrayBuilder<MapBuilder<T>> {\n        return startArray(convert(key))\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func startArray(key: Int64): ArrayBuilder<MapBuilder<T>> {\n    return startArray(convert(key))",
              "successors": []
            }
          ]
        },
        {
          "name": "startArray",
          "type": "function",
          "start_line": 84,
          "end_line": 89,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func startArray(key: String): ArrayBuilder<MapBuilder<T>> {\n        let array = CborArray()\n        array.setChunked(true)\n        put(convert(key), array)\n        return ArrayBuilder<MapBuilder<T>>(this, array)\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func startArray(key: String): ArrayBuilder<MapBuilder<T>> {\n    let array = CborArray()",
              "successors": [
                {
                  "id": 3,
                  "label": "    array.setChunked(true)\n    put(convert(key), array)",
                  "successors": [
                    {
                      "id": 5,
                      "label": "    return ArrayBuilder<MapBuilder<T>>(this, array)",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "putMap",
          "type": "function",
          "start_line": 90,
          "end_line": 94,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func putMap(key: DataItem): MapBuilder<Object> {\n        let nestedMap = CborMap()\n        put(key, nestedMap)\n        return MapBuilder<Object>(this, nestedMap)\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func putMap(key: DataItem): MapBuilder<Object> {\nlet nestedMap = CborMap()",
              "successors": [
                {
                  "id": 3,
                  "label": "put(key, nestedMap)\nreturn MapBuilder<Object>(this, nestedMap)",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "putMap",
          "type": "function",
          "start_line": 95,
          "end_line": 99,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func putMap(key: Int64): MapBuilder<Object> {\n        let nestedMap = CborMap()\n        put(convert(key), nestedMap)\n        return MapBuilder<Object>(this, nestedMap)\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func putMap(key: Int64): MapBuilder<Object> {\n    let nestedMap = CborMap()",
              "successors": [
                {
                  "id": 3,
                  "label": "    put(convert(key), nestedMap)\n    return MapBuilder<Object>(this, nestedMap)",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "putMap",
          "type": "function",
          "start_line": 100,
          "end_line": 104,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func putMap(key: String): MapBuilder<Object> {\n        let nestedMap = CborMap()\n        put(convert(key), nestedMap)\n        return MapBuilder<Object>(this, nestedMap)\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func putMap(key: String): MapBuilder<Object> {\n    let nestedMap = CborMap()",
              "successors": [
                {
                  "id": 3,
                  "label": "    put(convert(key), nestedMap)\n    return MapBuilder<Object>(this, nestedMap)",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "startMap",
          "type": "function",
          "start_line": 105,
          "end_line": 110,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func startMap(key: DataItem): MapBuilder<Object> {\n        let nestedMap = CborMap()\n        nestedMap.setChunked(true)\n        put(key, nestedMap)\n        return MapBuilder<Object>(this, nestedMap)\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func startMap(key: DataItem): MapBuilder<Object> {\n    let nestedMap = CborMap()",
              "successors": [
                {
                  "id": 3,
                  "label": "    nestedMap.setChunked(true)\n    put(key, nestedMap)",
                  "successors": [
                    {
                      "id": 5,
                      "label": "    return MapBuilder<Object>(this, nestedMap)",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "startMap",
          "type": "function",
          "start_line": 111,
          "end_line": 113,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func startMap(key: Int64): MapBuilder<Object> {\n        return startMap(convert(key))\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func startMap(key: Int64): MapBuilder<Object> {\nreturn startMap(convert(key))",
              "successors": []
            }
          ]
        },
        {
          "name": "startMap",
          "type": "function",
          "start_line": 114,
          "end_line": 116,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func startMap(key: String): MapBuilder<Object> {\n        return startMap(convert(key))\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func startMap(key: String): MapBuilder<Object> {\n    return startMap(convert(key))",
              "successors": []
            }
          ]
        },
        {
          "name": "end",
          "type": "function",
          "start_line": 117,
          "end_line": 119,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func end(): ?T {\n        return getParent()\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func end(): ?T {\nreturn getParent()",
              "successors": []
            }
          ]
        }
      ],
      "classes": [],
      "simplified_code": "public class MapBuilder<T> <: AbstractBuilder<T> {\n    private let map: CborMap\n    }\n    }\n    }\n    }\n    }\n    }\n    }\n    }\n    }\n    }\n    }\n    }\n    }\n    }\n    }\n    }\n    }\n    }\n    }\n    }\n    }\n    }\n    }\n    }\n    }\n    }\n    }\n}",
      "blocks": [
        {
          "id": 1,
          "label": "public class MapBuilder<T> <: AbstractBuilder<T> {\n    private let map: CborMap",
          "successors": []
        }
      ]
    }
  ],
  "simplified_code": "package cbor4cj\n}",
  "blocks": [
    {
      "id": 1,
      "label": "package cbor4cj",
      "successors": []
    }
  ]
}