{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 19,
  "functions": [
    {
      "name": "main",
      "type": "function",
      "start_line": 11,
      "end_line": 19,
      "functions": [],
      "classes": [],
      "simplified_code": "main (){\n    try {\n        let arr: Array<Byte> = Array<Byte>(1024, item: 0)\n        OutputStreamConn(ByteArrayStream()).read(arr)\n    } catch (e: Exception) {\n        return 0\n    }\n    return -1\n}",
      "blocks": [
        {
          "id": 1,
          "label": "try {",
          "successors": [
            {
              "id": 2,
              "label": "    let arr: Array<Byte> = Array<Byte>(1024, item: 0)\n    OutputStreamConn(ByteArrayStream()).read(arr)\nreturn -1",
              "successors": []
            },
            {
              "id": 3,
              "label": "} catch (e: Exception) {\n    return 0\n}",
              "successors": []
            }
          ]
        }
      ]
    }
  ],
  "classes": [],
  "simplified_code": "// EXEC: cjc %import-path %L %l %f  %project-path %project-L/protobuf  -l protobuf-cj\n// EXEC: ./main\nfrom rpc4cj import grpc.*\nfrom rpc4cj import transport.*\nfrom rpc4cj import exceptions.*\nfrom rpc4cj import util.*\nfrom std import io.*\nfrom std import socket.*\nfrom net import tls.*\nfrom std import time.*\n}",
  "blocks": [
    {
      "id": 1,
      "label": "from rpc4cj import grpc.*\nfrom rpc4cj import transport.*",
      "successors": [
        {
          "id": 3,
          "label": "from rpc4cj import exceptions.*\nfrom rpc4cj import util.*",
          "successors": [
            {
              "id": 5,
              "label": "from std import io.*\nfrom std import socket.*",
              "successors": [
                {
                  "id": 7,
                  "label": "from net import tls.*\nfrom std import time.*",
                  "successors": []
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}