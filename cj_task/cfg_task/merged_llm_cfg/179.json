{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 39,
  "functions": [],
  "classes": [
    {
      "name": "HttpMethod",
      "type": "class",
      "start_line": 2,
      "end_line": 39,
      "functions": [
        {
          "name": "==",
          "type": "function",
          "start_line": 11,
          "end_line": 23,
          "functions": [],
          "classes": [],
          "simplified_code": "    public operator func == (that: HttpMethod): Bool {\n        match ((this, that)) {\n            case (GET, GET) => true\n            case (POST, POST) => true\n            case (PUT, PUT) => true\n            case (DELETE, DELETE) => true\n            case (HEAD, HEAD) => true\n            case (PATCH, PATCH) => true\n            case (OPTIONS, OPTIONS) => true\n            case (TRACE, TRACE) => true\n            case _ => false\n        }\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public operator func == (that: HttpMethod): Bool {\nmatch ((this, that)) {",
              "successors": [
                {
                  "id": 3,
                  "label": "case (GET, GET) => true\n}",
                  "successors": []
                },
                {
                  "id": 4,
                  "label": "case (POST, POST) => true\n}",
                  "successors": []
                },
                {
                  "id": 5,
                  "label": "case (PUT, PUT) => true\n}",
                  "successors": []
                },
                {
                  "id": 6,
                  "label": "case (DELETE, DELETE) => true\n}",
                  "successors": []
                },
                {
                  "id": 7,
                  "label": "case (HEAD, HEAD) => true\n}",
                  "successors": []
                },
                {
                  "id": 8,
                  "label": "case (PATCH, PATCH) => true\n}",
                  "successors": []
                },
                {
                  "id": 9,
                  "label": "case (OPTIONS, OPTIONS) => true\n}",
                  "successors": []
                },
                {
                  "id": 10,
                  "label": "case (TRACE, TRACE) => true\n}",
                  "successors": []
                },
                {
                  "id": 11,
                  "label": "case _ => false",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "!=",
          "type": "function",
          "start_line": 24,
          "end_line": 26,
          "functions": [],
          "classes": [],
          "simplified_code": "    public operator func != (that: HttpMethod): Bool {\n        return !(this == that)\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public operator func != (that: HttpMethod): Bool {\n    return !(this == that)",
              "successors": []
            }
          ]
        },
        {
          "name": "toString",
          "type": "function",
          "start_line": 27,
          "end_line": 38,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func toString(): String {\n        return match(this) {\n            case GET                => \"GET\"\n            case POST          => \"POST\"\n            case PUT               => \"PUT\"\n            case DELETE   => \"DELETE\"\n            case HEAD            => \"HEAD\"\n            case PATCH       => \"PATCH\"\n            case OPTIONS       => \"OPTIONS\"\n            case TRACE       => \"TRACE\"\n        }\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func toString(): String {\nreturn match(this) {",
              "successors": [
                {
                  "id": 3,
                  "label": "case GET => \"GET\"",
                  "successors": []
                },
                {
                  "id": 4,
                  "label": "case POST => \"POST\"",
                  "successors": []
                },
                {
                  "id": 5,
                  "label": "case PUT => \"PUT\"",
                  "successors": []
                },
                {
                  "id": 6,
                  "label": "case DELETE => \"DELETE\"",
                  "successors": []
                },
                {
                  "id": 7,
                  "label": "case HEAD => \"HEAD\"",
                  "successors": []
                },
                {
                  "id": 8,
                  "label": "case PATCH => \"PATCH\"",
                  "successors": []
                },
                {
                  "id": 9,
                  "label": "case OPTIONS => \"OPTIONS\"",
                  "successors": []
                },
                {
                  "id": 10,
                  "label": "case TRACE => \"TRACE\"",
                  "successors": []
                }
              ]
            }
          ]
        }
      ],
      "simplified_code": "public enum HttpMethod {\n    GET |\n    POST |\n    PUT |\n    DELETE |\n    HEAD |\n    PATCH |\n    OPTIONS |\n    TRACE\n    }\n    }\n    }\n}",
      "blocks": [
        {
          "id": 1,
          "label": "public enum HttpMethod {\n    GET |",
          "successors": [
            {
              "id": 3,
              "label": "    POST |\n    PUT |",
              "successors": [
                {
                  "id": 5,
                  "label": "    DELETE |\n    HEAD |",
                  "successors": [
                    {
                      "id": 7,
                      "label": "    PATCH |\n    OPTIONS |",
                      "successors": [
                        {
                          "id": 9,
                          "label": "    TRACE",
                          "successors": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ],
  "simplified_code": "package okhttp_okcj\n}",
  "blocks": [
    {
      "id": 1,
      "label": "package okhttp_okcj",
      "successors": []
    }
  ]
}