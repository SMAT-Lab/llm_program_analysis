{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 28,
  "functions": [],
  "classes": [
    {
      "name": "CompressorInputStream",
      "type": "class",
      "start_line": 3,
      "end_line": 28,
      "functions": [
        {
          "name": "length",
          "type": "function",
          "start_line": 5,
          "end_line": 9,
          "functions": [
            {
              "name": "get",
              "type": "function",
              "start_line": 6,
              "end_line": 8,
              "functions": [],
              "classes": [],
              "simplified_code": "        get() {\n            -1\n        }",
              "blocks": [
                {
                  "id": 1,
                  "label": "get() {\n    -1",
                  "successors": []
                }
              ]
            }
          ],
          "classes": [],
          "simplified_code": "    public open prop length: Int64 {\n        }\n    }",
          "blocks": []
        },
        {
          "name": "count",
          "type": "function",
          "start_line": 10,
          "end_line": 14,
          "functions": [],
          "classes": [],
          "simplified_code": "    protected func count(read: Int64) {\n        if (read != -1) {\n            bytesRead += read\n        }\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "protected func count(read: Int64) {\nif (read != -1) {",
              "successors": [
                {
                  "id": 3,
                  "label": "    bytesRead += read",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "pushedBackBytes",
          "type": "function",
          "start_line": 15,
          "end_line": 17,
          "functions": [],
          "classes": [],
          "simplified_code": "    protected func pushedBackBytes(pushBack: Int64) {\n        bytesRead -= pushBack\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "protected func pushedBackBytes(pushBack: Int64) {\n    bytesRead -= pushBack",
              "successors": []
            }
          ]
        },
        {
          "name": "getBytesRead",
          "type": "function",
          "start_line": 18,
          "end_line": 20,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func getBytesRead(): Int64 {\n        return bytesRead\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func getBytesRead(): Int64 {\n    return bytesRead",
              "successors": []
            }
          ]
        },
        {
          "name": "getUncompressedCount",
          "type": "function",
          "start_line": 21,
          "end_line": 23,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func getUncompressedCount(): Int64 {\n        return getBytesRead()\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func getUncompressedCount(): Int64 {\nreturn getBytesRead()",
              "successors": []
            }
          ]
        },
        {
          "name": "isClosed",
          "type": "function",
          "start_line": 24,
          "end_line": 26,
          "functions": [],
          "classes": [],
          "simplified_code": "    public open func isClosed(): Bool {\n        false\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public open func isClosed(): Bool {\n    false",
              "successors": []
            }
          ]
        },
        {
          "name": "close",
          "type": "function",
          "start_line": 27,
          "end_line": 27,
          "functions": [],
          "classes": [],
          "simplified_code": "    public open func close(): Unit {}",
          "blocks": [
            {
              "id": 1,
              "label": "public open func close(): Unit {}",
              "successors": []
            }
          ]
        }
      ],
      "classes": [],
      "simplified_code": "public abstract class CompressorInputStream <: InputStream & Resource {\n    private var bytesRead: Int64 = 0\n    }\n    }\n    }\n    }\n    }\n    }\n    public open func close(): Unit {}\n}",
      "blocks": [
        {
          "id": 1,
          "label": "public abstract class CompressorInputStream <: InputStream & Resource {\n    private var bytesRead: Int64 = 0",
          "successors": [
            {
              "id": 3,
              "label": "public open func close(): Unit {}",
              "successors": []
            }
          ]
        }
      ]
    }
  ],
  "simplified_code": "package compress4cj.compressors\nimport std.io.InputStream\n}",
  "blocks": [
    {
      "id": 1,
      "label": "package compress4cj.compressors",
      "successors": []
    }
  ]
}