{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 15,
  "functions": [
    {
      "name": "node",
      "type": "function",
      "start_line": 1,
      "end_line": 8,
      "functions": [],
      "classes": [],
      "simplified_code": "func node(value: Rune,\n    left!: () -> Unit = {=>}, right!: () -> Unit = {=>}) {\n    return { =>\n        left()\n        print(value)\n        right()\n    }\n}",
      "blocks": [
        {
          "id": 1,
          "label": "func node(value: Rune,\n    left!: () -> Unit = {=>}, right!: () -> Unit = {=>}) {\nreturn { =>",
          "successors": [
            {
              "id": 3,
              "label": "left()\nprint(value)",
              "successors": [
                {
                  "id": 5,
                  "label": "right()",
                  "successors": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "main",
      "type": "function",
      "start_line": 10,
      "end_line": 15,
      "functions": [],
      "classes": [],
      "simplified_code": "main() {\n    let tree = node('A',\n        left: node('B', left: node('C', right: node('D'))),\n        right: node('E', left: node('F'), right: node('G')))\n    tree()\n}",
      "blocks": [
        {
          "id": 1,
          "label": "main() {\nlet tree = node('A', left: node('B', left: node('C', right: node('D'))), right: node('E', left: node('F'), right: node('G')))",
          "successors": [
            {
              "id": 3,
              "label": "tree()",
              "successors": []
            }
          ]
        }
      ]
    }
  ],
  "classes": [],
  "simplified_code": "}\n\n}",
  "blocks": [
    {
      "id": 1,
      "label": "if a > 2:",
      "successors": [
        {
          "id": 2,
          "label": "    print(a)\nprint(\"done\")",
          "successors": []
        },
        {
          "id": 3,
          "label": "    print(1)\nprint(\"done\")",
          "successors": []
        }
      ]
    }
  ]
}