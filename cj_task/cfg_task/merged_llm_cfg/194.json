{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 35,
  "functions": [],
  "classes": [
    {
      "name": "BubbleChartModel",
      "type": "class",
      "start_line": 2,
      "end_line": 35,
      "functions": [
        {
          "name": "init",
          "type": "function",
          "start_line": 4,
          "end_line": 6,
          "functions": [],
          "classes": [],
          "simplified_code": "    init() {\n        super();\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "init() {\n    super();",
              "successors": [
                {
                  "id": 3,
                  "label": "}",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "build",
          "type": "function",
          "start_line": 7,
          "end_line": 13,
          "functions": [],
          "classes": [],
          "simplified_code": "    public static func build(): BubbleChartModel {\n        let model: BubbleChartModel = BubbleChartModel()\n        var mAnimator: ChartAnimator = ChartAnimator(model)\n        model.mRenderer = BubbleChartRenderer(model, mAnimator, model.mViewPortHandler)\n        model.setHighlighter(ChartHighlighter(model))\n        return model\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public static func build(): BubbleChartModel {\nlet model: BubbleChartModel = BubbleChartModel()",
              "successors": [
                {
                  "id": 3,
                  "label": "var mAnimator: ChartAnimator = ChartAnimator(model)\nmodel.mRenderer = BubbleChartRenderer(model, mAnimator, model.mViewPortHandler)",
                  "successors": [
                    {
                      "id": 5,
                      "label": "model.setHighlighter(ChartHighlighter(model))\nreturn model",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "invalidate",
          "type": "function",
          "start_line": 14,
          "end_line": 18,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func invalidate() {\n        if (let Some(context2d) <- this.context2d) {\n            this.onDraw(context2d);\n        }\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func invalidate() {",
              "successors": [
                {
                  "id": 2,
                  "label": "if (let Some(context2d) <- this.context2d) {\nthis.onDraw(context2d);",
                  "successors": []
                },
                {
                  "id": 4,
                  "label": "}",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "setContext2D",
          "type": "function",
          "start_line": 19,
          "end_line": 21,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func setContext2D(context2d: CanvasRenderingContext2D) {\n        this.context2d = context2d\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func setContext2D(context2d: CanvasRenderingContext2D) {\n    this.context2d = context2d",
              "successors": []
            }
          ]
        },
        {
          "name": "onChartSizeChanged",
          "type": "function",
          "start_line": 22,
          "end_line": 24,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func onChartSizeChanged(newWidth: Float64, newHeight: Float64, oldWidth: Float64, oldHeight: Float64) {\n        super.onSizeChanged(newWidth, newHeight, oldWidth, oldHeight);\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func onChartSizeChanged(newWidth: Float64, newHeight: Float64, oldWidth: Float64, oldHeight: Float64) {",
              "successors": [
                {
                  "id": 2,
                  "label": "    super.onSizeChanged(newWidth, newHeight, oldWidth, oldHeight);",
                  "successors": []
                },
                {
                  "id": 3,
                  "label": "}",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "onDraw",
          "type": "function",
          "start_line": 25,
          "end_line": 27,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func onDraw(c: CanvasRenderingContext2D): Unit {\n        super.onDraw(c);\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func onDraw(c: CanvasRenderingContext2D): Unit {\n    super.onDraw(c);",
              "successors": [
                {
                  "id": 3,
                  "label": "}",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "getBubbleData",
          "type": "function",
          "start_line": 28,
          "end_line": 34,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func getBubbleData(): ?BubbleData {\n        if (let Some(data: BubbleData) <- this.mData) {\n            return data\n        } else {\n            return None;\n        }\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func getBubbleData(): ?BubbleData {\nif (let Some(data: BubbleData) <- this.mData) {",
              "successors": [
                {
                  "id": 3,
                  "label": "return data",
                  "successors": []
                },
                {
                  "id": 4,
                  "label": "return None;",
                  "successors": []
                }
              ]
            }
          ]
        }
      ],
      "classes": [],
      "simplified_code": "public class BubbleChartModel <: BarLineChartBaseModel<BubbleData, IBubbleDataSet, BubbleEntry> & BubbleDataProvider {\n    public var context2d: ?CanvasRenderingContext2D = None;\n    }\n    }\n    }\n    }\n    }\n    }\n    }\n}",
      "blocks": [
        {
          "id": 1,
          "label": "public class BubbleChartModel <: BarLineChartBaseModel<BubbleData, IBubbleDataSet, BubbleEntry> & BubbleDataProvider {\npublic var context2d: ?CanvasRenderingContext2D = None;",
          "successors": []
        }
      ]
    }
  ],
  "simplified_code": "package core.bubble\n}",
  "blocks": [
    {
      "id": 1,
      "label": "package core.bubble",
      "successors": []
    }
  ]
}