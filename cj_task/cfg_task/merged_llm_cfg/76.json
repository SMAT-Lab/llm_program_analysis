{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 39,
  "functions": [],
  "classes": [
    {
      "name": "Latest",
      "type": "class",
      "start_line": 3,
      "end_line": 39,
      "functions": [
        {
          "name": "init",
          "type": "function",
          "start_line": 7,
          "end_line": 16,
          "functions": [],
          "classes": [],
          "simplified_code": "    public init(host!: String = \"127.0.0.1\", page!: Int64 = 0) {\n        var now = DateTime.now()\n        metadata = Metadata(\"All libraries - Latest Books\", itemsPerPage: 20, currentPage: page + 1,\n            numberOfItems: Books.getCount(), modified: now.toString())\n        links = Links(host, \"libraries/books/latest\", page: page)\n        var obj = Books.formDatabase(baseConfig.database, page: page + 1, count: 20)\n        for (i in obj) {\n            publications.append(Publication(i, host))\n        }\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public init(host!: String = \"127.0.0.1\", page!: Int64 = 0) {\nvar now = DateTime.now()",
              "successors": [
                {
                  "id": 3,
                  "label": "metadata = Metadata(\"All libraries - Latest Books\", itemsPerPage: 20, currentPage: page + 1, numberOfItems: Books.getCount(), modified: now.toString())\nlinks = Links(host, \"libraries/books/latest\", page: page)",
                  "successors": [
                    {
                      "id": 5,
                      "label": "var obj = Books.formDatabase(baseConfig.database, page: page + 1, count: 20)",
                      "successors": [
                        {
                          "id": 6,
                          "label": "for (i in obj) {",
                          "successors": [
                            {
                              "id": 7,
                              "label": "publications.append(Publication(i, host))\n}",
                              "successors": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "init",
          "type": "function",
          "start_line": 17,
          "end_line": 27,
          "functions": [],
          "classes": [],
          "simplified_code": "    public init(id: String, host!: String = \"127.0.0.1\",  page!: Int64 = 0) {\n        let library = Librarys.fromId(id)\n        var now = DateTime.now()\n        metadata = Metadata(\"${library.name} - Latest Books\", itemsPerPage: 20, currentPage: page + 1,\n            numberOfItems: Books.getCount(libraryId: id), modified: now.toString())\n        links = Links(host, \"libraries/${id}/books/latest\", page: page)\n        var obj = Books.formDatabase(baseConfig.database, page: page + 1, count: 20, libId: id)\n        for (i in obj) {\n            publications.append(Publication(i, host))\n        }\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public init(id: String, host!: String = \"127.0.0.1\",  page!: Int64 = 0) {\nlet library = Librarys.fromId(id)",
              "successors": [
                {
                  "id": 3,
                  "label": "var now = DateTime.now()\nmetadata = Metadata(\"${library.name} - Latest Books\", itemsPerPage: 20, currentPage: page + 1, numberOfItems: Books.getCount(libraryId: id), modified: now.toString())",
                  "successors": [
                    {
                      "id": 5,
                      "label": "links = Links(host, \"libraries/${id}/books/latest\", page: page)\nvar obj = Books.formDatabase(baseConfig.database, page: page + 1, count: 20, libId: id)",
                      "successors": [
                        {
                          "id": 7,
                          "label": "for (i in obj) {",
                          "successors": [
                            {
                              "id": 8,
                              "label": "publications.append(Publication(i, host))\n}",
                              "successors": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "toJson",
          "type": "function",
          "start_line": 28,
          "end_line": 38,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func toJson(): String {\n        let stream = ByteBuffer()\n        let w = JsonWriter(stream)\n        w.startObject()\n        w.writeName(\"metadata\").writeValue(metadata)\n        w.writeName(\"links\").writeValue(links)\n        w.writeName(\"publications\").writeValue<ArrayList<Publication>>(publications)\n        w.endObject()\n        w.flush()\n        return String.fromUtf8(readToEnd(stream))\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func toJson(): String {\nlet stream = ByteBuffer()",
              "successors": [
                {
                  "id": 3,
                  "label": "let w = JsonWriter(stream)\nw.startObject()",
                  "successors": [
                    {
                      "id": 5,
                      "label": "w.writeName(\"metadata\").writeValue(metadata)\nw.writeName(\"links\").writeValue(links)",
                      "successors": [
                        {
                          "id": 7,
                          "label": "w.writeName(\"publications\").writeValue<ArrayList<Publication>>(publications)\nw.endObject()",
                          "successors": [
                            {
                              "id": 9,
                              "label": "w.flush()\nreturn String.fromUtf8(readToEnd(stream))",
                              "successors": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "classes": [],
      "simplified_code": "class Latest {\n    var metadata: Metadata\n    var links: Links\n    var publications: ArrayList<Publication> = ArrayList<Publication>()\n    }\n    }\n    }\n}",
      "blocks": [
        {
          "id": 1,
          "label": "class Latest {\n    var metadata: Metadata",
          "successors": [
            {
              "id": 3,
              "label": "    var links: Links\n    var publications: ArrayList<Publication> = ArrayList<Publication>()",
              "successors": []
            }
          ]
        }
      ]
    }
  ],
  "simplified_code": "package opds_cj.path.opds.v2.libraries\n\n}",
  "blocks": [
    {
      "id": 1,
      "label": "package opds_cj.path.opds.v2.libraries",
      "successors": []
    }
  ]
}