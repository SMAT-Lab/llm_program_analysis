{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 31,
  "functions": [
    {
      "name": "main",
      "type": "function",
      "start_line": 26,
      "end_line": 31,
      "functions": [],
      "classes": [],
      "simplified_code": "main() {\n    var tree = NodeA('A',\n        left: NodeA('B', left: NodeA('C', right: NodeA('D'))),\n        right: NodeB('E', left: NodeB('F'), right: NodeB('G')))\n    tree.traverse()\n}",
      "blocks": [
        {
          "id": 1,
          "label": "main() {\n    var tree = NodeA('A',\n        left: NodeA('B', left: NodeA('C', right: NodeA('D'))),\n        right: NodeB('E', left: NodeB('F'), right: NodeB('G')))",
          "successors": [
            {
              "id": 3,
              "label": "    tree.traverse()\n}",
              "successors": []
            }
          ]
        }
      ]
    }
  ],
  "classes": [
    {
      "name": "NodeA",
      "type": "class",
      "start_line": 1,
      "end_line": 11,
      "functions": [
        {
          "name": "traverse",
          "type": "function",
          "start_line": 6,
          "end_line": 10,
          "functions": [],
          "classes": [],
          "simplified_code": "    public open func traverse(): Unit {\n        left?.traverse()\n        print(value)\n        right?.traverse()\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public open func traverse(): Unit {\nleft?.traverse()",
              "successors": [
                {
                  "id": 3,
                  "label": "print(value)\nright?.traverse()",
                  "successors": []
                }
              ]
            }
          ]
        }
      ],
      "classes": [],
      "simplified_code": "open class NodeA {\n    public NodeA(protected var value: Rune,\n        protected let left!: ?NodeA = None,\n        protected let right!: ?NodeA = None) {}\n\n    }\n}",
      "blocks": [
        {
          "id": 1,
          "label": "open class NodeA {",
          "successors": [
            {
              "id": 2,
              "label": "public NodeA(protected var value: Rune,\nprotected let left!: ?NodeA = None,",
              "successors": [
                {
                  "id": 4,
                  "label": "protected let right!: ?NodeA = None) {}\n}",
                  "successors": []
                },
                {
                  "id": 5,
                  "label": "}",
                  "successors": []
                }
              ]
            },
            {
              "id": 5,
              "label": "}",
              "successors": []
            }
          ]
        }
      ]
    },
    {
      "name": "NodeB",
      "type": "class",
      "start_line": 13,
      "end_line": 24,
      "functions": [
        {
          "name": "traverse",
          "type": "function",
          "start_line": 19,
          "end_line": 23,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func traverse(): Unit {\n        print(value)\n        left?.traverse()\n        right?.traverse()\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func traverse(): Unit {\n    print(value)",
              "successors": [
                {
                  "id": 3,
                  "label": "    left?.traverse()\n    right?.traverse()",
                  "successors": []
                }
              ]
            }
          ]
        }
      ],
      "classes": [],
      "simplified_code": "class NodeB <: NodeA {\n    public init(value: Rune,\n        left!: ?NodeA = None, right!: ?NodeA = None) {\n        super(value, left: left, right: right)\n    }\n\n    }\n}",
      "blocks": [
        {
          "id": 1,
          "label": "class NodeB <: NodeA {\npublic init(value: Rune,",
          "successors": [
            {
              "id": 3,
              "label": "left!: ?NodeA = None, right!: ?NodeA = None) {\nsuper(value, left: left, right: right)",
              "successors": [
                {
                  "id": 5,
                  "label": "}\n}",
                  "successors": []
                }
              ]
            }
          ]
        }
      ]
    }
  ],
  "simplified_code": "}\n\n}\n\n}",
  "blocks": []
}