{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 33,
  "functions": [],
  "classes": [
    {
      "name": "ParseComplete",
      "type": "class",
      "start_line": 2,
      "end_line": 33,
      "functions": [
        {
          "name": "init",
          "type": "function",
          "start_line": 5,
          "end_line": 5,
          "functions": [],
          "classes": [],
          "simplified_code": "    public init() {}",
          "blocks": [
            {
              "id": 1,
              "label": "public init() {}",
              "successors": []
            }
          ]
        },
        {
          "name": "decode",
          "type": "function",
          "start_line": 6,
          "end_line": 8,
          "functions": [],
          "classes": [],
          "simplified_code": "    public mut func decode(data: Array<UInt8>): Unit {\n        var buf = ByteBuffer(data)\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public mut func decode(data: Array<UInt8>): Unit {\n    var buf = ByteBuffer(data)",
              "successors": []
            }
          ]
        },
        {
          "name": "encode",
          "type": "function",
          "start_line": 9,
          "end_line": 15,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func encode(): Array<UInt8> {\n        var buf = ByteBuffer()\n        buf.add(kind)\n        buf.add(len)\n        var arr = Array<UInt8>(buf.getBuf())\n        return arr\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func encode(): Array<UInt8> {\n    var buf = ByteBuffer()",
              "successors": [
                {
                  "id": 3,
                  "label": "    buf.add(kind)\n    buf.add(len)",
                  "successors": [
                    {
                      "id": 5,
                      "label": "    var arr = Array<UInt8>(buf.getBuf())\n    return arr",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "serialize",
          "type": "function",
          "start_line": 16,
          "end_line": 19,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func serialize(): DataModel {\n        let t: Char = Char(UInt32(kind))\n        return DataModelStruct().add(field<Char>(\"type\", t)).add(field<Int32>(\"len\", len))\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func serialize(): DataModel {\n    let t: Char = Char(UInt32(kind))",
              "successors": [
                {
                  "id": 3,
                  "label": "    return DataModelStruct().add(field<Char>(\"type\", t)).add(field<Int32>(\"len\", len))",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "deserialize",
          "type": "function",
          "start_line": 20,
          "end_line": 29,
          "functions": [],
          "classes": [],
          "simplified_code": "    public static func deserialize(dm: DataModel): ParseComplete {\n        var dms = match (dm) {\n            case data: DataModelStruct => data\n            case _ => throw Exception(\"this data is not DataModelStruct\")\n        }\n        var result = ParseComplete()\n        result.kind = Byte.deserialize(dms.get(\"kind\"))\n        result.len = Int32.deserialize(dms.get(\"len\"))\n        return result\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public static func deserialize(dm: DataModel): ParseComplete {\n    var dms = match (dm) {",
              "successors": [
                {
                  "id": 3,
                  "label": "        case data: DataModelStruct => data\n    var result = ParseComplete()",
                  "successors": [
                    {
                      "id": 6,
                      "label": "    result.kind = Byte.deserialize(dms.get(\"kind\"))\n    result.len = Int32.deserialize(dms.get(\"len\"))",
                      "successors": [
                        {
                          "id": 8,
                          "label": "    return result",
                          "successors": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "id": 4,
                  "label": "        case _ => throw Exception(\"this data is not DataModelStruct\")",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "toString",
          "type": "function",
          "start_line": 30,
          "end_line": 32,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func toString() {\n        return this.serialize().toJson().toJsonString()\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func toString() {\n    return this.serialize().toJson().toJsonString()",
              "successors": []
            }
          ]
        }
      ],
      "classes": [],
      "simplified_code": "public struct ParseComplete <: BackendMessage & Serializable<ParseComplete> {\n    var kind = b'1'\n    var len: Int32 = 4\n    public init() {}\n    }\n    }\n    }\n    }\n    }\n}",
      "blocks": [
        {
          "id": 1,
          "label": "public struct ParseComplete <: BackendMessage & Serializable<ParseComplete> {\nvar kind = b'1'",
          "successors": [
            {
              "id": 3,
              "label": "var len: Int32 = 4\npublic init() {}",
              "successors": []
            }
          ]
        }
      ]
    }
  ],
  "simplified_code": "package proto3\n}",
  "blocks": [
    {
      "id": 1,
      "label": "package proto3",
      "successors": []
    }
  ]
}