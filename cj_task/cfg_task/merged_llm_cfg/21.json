{
  "name": "cj_easy_data.macros",
  "type": "CFG",
  "start_line": 1,
  "end_line": 20,
  "functions": [
    {
      "name": "Data",
      "type": "function",
      "start_line": 7,
      "end_line": 12,
      "functions": [],
      "classes": [],
      "simplified_code": "public macro Data(input: Tokens): Tokens {\n    var classDecl =getClassDecl(input)\n    let handler = addToString ~> addDefaultNones\n    classDecl = handler(classDecl)\n    return classDecl.toTokens()\n}",
      "blocks": [
        {
          "id": 1,
          "label": "public macro Data(input: Tokens): Tokens {\nvar classDecl = getClassDecl(input)",
          "successors": [
            {
              "id": 3,
              "label": "let handler = addToString ~> addDefaultNones\nclassDecl = handler(classDecl)",
              "successors": [
                {
                  "id": 5,
                  "label": "return classDecl.toTokens()",
                  "successors": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "isFunc",
      "type": "function",
      "start_line": 14,
      "end_line": 16,
      "functions": [],
      "classes": [],
      "simplified_code": "func isFunc(token: Token): Bool {\n    return token.kind==FUNC;\n}",
      "blocks": [
        {
          "id": 1,
          "label": "func isFunc(token: Token): Bool {\n    return token.kind==FUNC;",
          "successors": []
        }
      ]
    },
    {
      "name": "getClassDecl",
      "type": "function",
      "start_line": 17,
      "end_line": 20,
      "functions": [],
      "classes": [],
      "simplified_code": "func getClassDecl(input: Tokens):ClassDecl{\n    let varDecl = parseDecl(input)\n   return (varDecl as ClassDecl).getOrThrow()\n}",
      "blocks": [
        {
          "id": 1,
          "label": "func getClassDecl(input: Tokens):ClassDecl{\n    let varDecl = parseDecl(input)",
          "successors": [
            {
              "id": 3,
              "label": "   return (varDecl as ClassDecl).getOrThrow()",
              "successors": []
            }
          ]
        }
      ]
    }
  ],
  "classes": [],
  "simplified_code": "macro package cj_easy_data.macros\n\nimport std.ast.*\nimport std.collection.*\n\n//支持一次添加ToString和默认None\n}\n\n}\n}",
  "blocks": [
    {
      "id": 1,
      "label": "macro package cj_easy_data.macros\nimport std.ast.*",
      "successors": [
        {
          "id": 3,
          "label": "import std.collection.*",
          "successors": []
        }
      ]
    }
  ]
}