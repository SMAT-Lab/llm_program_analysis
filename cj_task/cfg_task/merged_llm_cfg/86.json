{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 21,
  "functions": [],
  "classes": [
    {
      "name": "JsonArrayTest",
      "type": "class",
      "start_line": 8,
      "end_line": 21,
      "functions": [
        {
          "name": "test",
          "type": "function",
          "start_line": 11,
          "end_line": 20,
          "functions": [],
          "classes": [],
          "simplified_code": "    func test() {\n        let jsonStr = #\"\n        {\n            \"array\": [1, \"2\", 3.0, {\"key\": \"value\"}]\n        }\n        \"#\n        let json = Json(str: jsonStr)\n        @Expect(json[\"array\"].arrayValue.size, 4)\n        @Expect(json[\"array\"].arrayValue[3][\"key\"].stringValue, \"value\")\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "func test() {\nlet jsonStr = #\"\n {\n \"array\": [1, \"2\", 3.0, {\"key\": \"value\"}]\n }\n \"#",
              "successors": [
                {
                  "id": 3,
                  "label": "let json = Json(str: jsonStr)\n@Expect(json[\"array\"].arrayValue.size, 4)",
                  "successors": [
                    {
                      "id": 5,
                      "label": "@Expect(json[\"array\"].arrayValue[3][\"key\"].stringValue, \"value\")",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "classes": [],
      "simplified_code": "class JsonArrayTest {\n\n    @TestCase\n    }\n}",
      "blocks": []
    }
  ],
  "simplified_code": "package SimpleJsonReader\n\nimport std.unittest.*\nimport std.unittest.testmacro.*\nimport encoding.json.*\n\n@Test\n}",
  "blocks": [
    {
      "id": 1,
      "label": "package SimpleJsonReader\nimport std.unittest.*",
      "successors": [
        {
          "id": 3,
          "label": "import std.unittest.testmacro.*\nimport encoding.json.*",
          "successors": [
            {
              "id": 5,
              "label": "@Test\n}",
              "successors": []
            }
          ]
        }
      ]
    }
  ]
}