{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 14,
  "functions": [
    {
      "name": "CBindings",
      "type": "function",
      "start_line": 7,
      "end_line": 14,
      "functions": [],
      "classes": [],
      "simplified_code": "public macro CBindings(attr: Tokens, input: Tokens): Tokens {\n    let filepath = parseExpr(input).checkStringLiteral()\n    if (!File.exists(filepath)) {\n        throw IllegalArgumentException(\"File ${filepath} does not exist\")\n    }\n    let ctx = attr.parseTranslationContext()\n    parseForeignCDecls(filepath, context: ctx)\n}",
      "blocks": [
        {
          "id": 1,
          "label": "public macro CBindings(attr: Tokens, input: Tokens): Tokens {\nlet filepath = parseExpr(input).checkStringLiteral()",
          "successors": [
            {
              "id": 3,
              "label": "if (!File.exists(filepath)) {\nthrow IllegalArgumentException(\"File ${filepath} does not exist\")",
              "successors": []
            },
            {
              "id": 5,
              "label": "let ctx = attr.parseTranslationContext()\nparseForeignCDecls(filepath, context: ctx)",
              "successors": []
            }
          ]
        }
      ]
    }
  ],
  "classes": [],
  "simplified_code": "macro package bindings.runner.macros\nfrom std import ast.*\nfrom std import collection.HashMap\nfrom std import fs.File\nimport bindings.common.*\nimport bindings.clang.parseForeignCDecls\n}",
  "blocks": [
    {
      "id": 1,
      "label": "macro package bindings.runner.macros\nfrom std import ast.*",
      "successors": [
        {
          "id": 3,
          "label": "from std import collection.HashMap\nfrom std import fs.File",
          "successors": [
            {
              "id": 5,
              "label": "import bindings.common.*\nimport bindings.clang.parseForeignCDecls",
              "successors": []
            }
          ]
        }
      ]
    }
  ]
}