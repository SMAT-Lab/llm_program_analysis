{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 31,
  "functions": [],
  "classes": [
    {
      "name": "Simple",
      "type": "class",
      "start_line": 3,
      "end_line": 15,
      "functions": [
        {
          "name": "Simple",
          "type": "function",
          "start_line": 6,
          "end_line": 8,
          "functions": [],
          "classes": [],
          "simplified_code": "    public Simple(x: Int64) {\n        this.x = x\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public Simple(x: Int64) {\n    this.x = x",
              "successors": []
            }
          ]
        },
        {
          "name": "init",
          "type": "function",
          "start_line": 9,
          "end_line": 11,
          "functions": [],
          "classes": [],
          "simplified_code": "    public init(a: String) {\n        this.x = 1\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public init(a: String) {\n    this.x = 1",
              "successors": []
            }
          ]
        },
        {
          "name": "buildDefault",
          "type": "function",
          "start_line": 12,
          "end_line": 14,
          "functions": [],
          "classes": [],
          "simplified_code": "    public static func buildDefault() {\n        Simple(0)\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public static func buildDefault() {\n    Simple(0)",
              "successors": []
            }
          ]
        }
      ],
      "classes": [],
      "simplified_code": "class Simple {\n    let str = \"\"\n    var x: Int64\n    }\n    }\n    }\n}",
      "blocks": [
        {
          "id": 1,
          "label": "class Simple {\nlet str = \"\"",
          "successors": [
            {
              "id": 3,
              "label": "var x: Int64\n}",
              "successors": []
            }
          ]
        }
      ]
    },
    {
      "name": "Base",
      "type": "class",
      "start_line": 16,
      "end_line": 16,
      "functions": [],
      "classes": [],
      "simplified_code": "open class Base {}",
      "blocks": [
        {
          "id": 1,
          "label": "open class Base {}",
          "successors": []
        }
      ]
    },
    {
      "name": "Child",
      "type": "class",
      "start_line": 17,
      "end_line": 17,
      "functions": [],
      "classes": [],
      "simplified_code": "class Child <: Base {}",
      "blocks": [
        {
          "id": 1,
          "label": "class Child <: Base {}",
          "successors": []
        }
      ]
    },
    {
      "name": "WithGeneric<T>",
      "type": "class",
      "start_line": 18,
      "end_line": 18,
      "functions": [],
      "classes": [],
      "simplified_code": "class WithGeneric<T> {}",
      "blocks": [
        {
          "id": 1,
          "label": "class WithGeneric<T> {}",
          "successors": []
        }
      ]
    },
    {
      "name": "WithThis",
      "type": "class",
      "start_line": 19,
      "end_line": 23,
      "functions": [
        {
          "name": "returnThis",
          "type": "function",
          "start_line": 20,
          "end_line": 22,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func returnThis(): This {\n        this\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func returnThis(): This {\n    this",
              "successors": [
                {
                  "id": 3,
                  "label": "}",
                  "successors": []
                }
              ]
            }
          ]
        }
      ],
      "classes": [],
      "simplified_code": "class WithThis {\n    }\n}",
      "blocks": [
        {
          "id": 1,
          "label": "class WithThis {\n}",
          "successors": []
        }
      ]
    },
    {
      "name": "SimpleStruct",
      "type": "class",
      "start_line": 24,
      "end_line": 26,
      "functions": [
        {
          "name": "funcInStrcut",
          "type": "function",
          "start_line": 25,
          "end_line": 25,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func funcInStrcut(): Unit {}",
          "blocks": [
            {
              "id": 1,
              "label": "public func funcInStrcut(): Unit {}",
              "successors": []
            }
          ]
        }
      ],
      "classes": [],
      "simplified_code": "struct SimpleStruct {\n    public func funcInStrcut(): Unit {}\n}",
      "blocks": [
        {
          "id": 1,
          "label": "struct SimpleStruct {\n    public func funcInStrcut(): Unit {}",
          "successors": []
        }
      ]
    },
    {
      "name": "SimpleEnum",
      "type": "class",
      "start_line": 27,
      "end_line": 30,
      "functions": [],
      "classes": [],
      "simplified_code": "enum SimpleEnum {\n    | EnumA\n    | EnumB\n}",
      "blocks": [
        {
          "id": 1,
          "label": "enum SimpleEnum {",
          "successors": [
            {
              "id": 2,
              "label": "    | EnumA",
              "successors": []
            },
            {
              "id": 3,
              "label": "    | EnumB",
              "successors": []
            }
          ]
        }
      ]
    },
    {
      "name": "SimpleInterface",
      "type": "class",
      "start_line": 31,
      "end_line": 31,
      "functions": [],
      "classes": [],
      "simplified_code": "interface SimpleInterface {}",
      "blocks": [
        {
          "id": 1,
          "label": "interface SimpleInterface {}",
          "successors": []
        }
      ]
    }
  ],
  "simplified_code": "package test\n// main declaration\n}\nopen class Base {}\nclass Child <: Base {}\nclass WithGeneric<T> {}\n}\n}\n}\ninterface SimpleInterface {}",
  "blocks": [
    {
      "id": 1,
      "label": "package test\nopen class Base {}",
      "successors": [
        {
          "id": 3,
          "label": "class Child <: Base {}\nclass WithGeneric<T> {}",
          "successors": [
            {
              "id": 5,
              "label": "interface SimpleInterface {}",
              "successors": []
            }
          ]
        }
      ]
    }
  ]
}