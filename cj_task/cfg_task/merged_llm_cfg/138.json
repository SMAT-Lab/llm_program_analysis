{
  "name": "droplet.droplet",
  "type": "CFG",
  "start_line": 1,
  "end_line": 72,
  "functions": [],
  "classes": [
    {
      "name": "Drawable",
      "type": "class",
      "start_line": 2,
      "end_line": 7,
      "functions": [
        {
          "name": "getPixelMap",
          "type": "function",
          "start_line": 3,
          "end_line": 3,
          "functions": [],
          "classes": [],
          "simplified_code": "    func getPixelMap(): PixelMap;",
          "blocks": [
            {
              "id": 1,
              "label": "func getPixelMap(): PixelMap;",
              "successors": []
            }
          ]
        },
        {
          "name": "draw",
          "type": "function",
          "start_line": 4,
          "end_line": 4,
          "functions": [],
          "classes": [],
          "simplified_code": "    func draw(isErrorPic:Bool): Unit;",
          "blocks": [
            {
              "id": 1,
              "label": "func draw(isErrorPic:Bool): Unit;",
              "successors": []
            }
          ]
        },
        {
          "name": "setDrawFunc",
          "type": "function",
          "start_line": 5,
          "end_line": 5,
          "functions": [],
          "classes": [],
          "simplified_code": "    func setDrawFunc(drawFunc: (PixelMap) -> Unit): Unit",
          "blocks": [
            {
              "id": 1,
              "label": "func setDrawFunc(drawFunc: (PixelMap) -> Unit): Unit",
              "successors": []
            }
          ]
        },
        {
          "name": "getType",
          "type": "function",
          "start_line": 6,
          "end_line": 6,
          "functions": [],
          "classes": [],
          "simplified_code": "    func getType(): Int64",
          "blocks": [
            {
              "id": 1,
              "label": "func getType(): Int64",
              "successors": []
            }
          ]
        }
      ],
      "simplified_code": "public interface Drawable {\n    func getPixelMap(): PixelMap;\n    func draw(isErrorPic:Bool): Unit;\n    func setDrawFunc(drawFunc: (PixelMap) -> Unit): Unit\n    func getType(): Int64\n}",
      "blocks": [
        {
          "id": 1,
          "label": "public interface Drawable {",
          "successors": [
            {
              "id": 2,
              "label": "    func getPixelMap(): PixelMap;",
              "successors": []
            },
            {
              "id": 3,
              "label": "    func draw(isErrorPic:Bool): Unit;",
              "successors": []
            },
            {
              "id": 4,
              "label": "    func setDrawFunc(drawFunc: (PixelMap) -> Unit): Unit",
              "successors": []
            },
            {
              "id": 5,
              "label": "    func getType(): Int64",
              "successors": []
            }
          ]
        }
      ]
    },
    {
      "name": "NoneDrawable",
      "type": "class",
      "start_line": 8,
      "end_line": 19,
      "functions": [
        {
          "name": "getPixelMap",
          "type": "function",
          "start_line": 9,
          "end_line": 13,
          "functions": [],
          "classes": [],
          "simplified_code": "    public override func getPixelMap(): PixelMap {\n        let size: Size = Size(width: 1, height: 1)\n        let arr: Array<UInt8> = Array<UInt8>(96, item: 0)\n        return createPixelMap(arr, InitializationOptions(size: size))\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public override func getPixelMap(): PixelMap {\nlet size: Size = Size(width: 1, height: 1)",
              "successors": [
                {
                  "id": 3,
                  "label": "let arr: Array<UInt8> = Array<UInt8>(96, item: 0)\nreturn createPixelMap(arr, InitializationOptions(size: size))",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "draw",
          "type": "function",
          "start_line": 14,
          "end_line": 14,
          "functions": [],
          "classes": [],
          "simplified_code": "    public override func draw(isErrorPic:Bool): Unit {}",
          "blocks": [
            {
              "id": 1,
              "label": "public override func draw(isErrorPic:Bool): Unit {}",
              "successors": []
            }
          ]
        },
        {
          "name": "setDrawFunc",
          "type": "function",
          "start_line": 15,
          "end_line": 15,
          "functions": [],
          "classes": [],
          "simplified_code": "    public override func setDrawFunc(drawFunc: (PixelMap) -> Unit): Unit {}",
          "blocks": [
            {
              "id": 1,
              "label": "public override func setDrawFunc(drawFunc: (PixelMap) -> Unit): Unit {}",
              "successors": []
            }
          ]
        },
        {
          "name": "getType",
          "type": "function",
          "start_line": 16,
          "end_line": 18,
          "functions": [],
          "classes": [],
          "simplified_code": "    public override func getType(): Int64 {\n        return -1\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public override func getType(): Int64 {\n    return -1",
              "successors": []
            }
          ]
        }
      ],
      "simplified_code": "public class NoneDrawable <: Drawable {\n    }\n    public override func draw(isErrorPic:Bool): Unit {}\n    public override func setDrawFunc(drawFunc: (PixelMap) -> Unit): Unit {}\n    }\n}",
      "blocks": [
        {
          "id": 1,
          "label": "public class NoneDrawable <: Drawable {",
          "successors": [
            {
              "id": 2,
              "label": "public override func draw(isErrorPic:Bool): Unit {}",
              "successors": []
            },
            {
              "id": 3,
              "label": "public override func setDrawFunc(drawFunc: (PixelMap) -> Unit): Unit {}",
              "successors": []
            }
          ]
        }
      ]
    },
    {
      "name": "PixelMapDrawable",
      "type": "class",
      "start_line": 20,
      "end_line": 42,
      "functions": [
        {
          "name": "init",
          "type": "function",
          "start_line": 23,
          "end_line": 25,
          "functions": [],
          "classes": [],
          "simplified_code": "    public init(pixelMap: PixelMap) {\n        this.pixelMap = pixelMap\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public init(pixelMap: PixelMap) {\n    this.pixelMap = pixelMap",
              "successors": []
            }
          ]
        },
        {
          "name": "getType",
          "type": "function",
          "start_line": 26,
          "end_line": 28,
          "functions": [],
          "classes": [],
          "simplified_code": "    public override func getType(): Int64 {\n        return 1\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public override func getType(): Int64 {\n    return 1",
              "successors": []
            }
          ]
        },
        {
          "name": "getPixelMap",
          "type": "function",
          "start_line": 29,
          "end_line": 31,
          "functions": [],
          "classes": [],
          "simplified_code": "    public override func getPixelMap(): PixelMap {\n        return this.pixelMap\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public override func getPixelMap(): PixelMap {\n    return this.pixelMap",
              "successors": []
            }
          ]
        },
        {
          "name": "draw",
          "type": "function",
          "start_line": 32,
          "end_line": 38,
          "functions": [],
          "classes": [],
          "simplified_code": "    public override func draw(isErrorPic:Bool): Unit {\n        if(this.drawFunc.size > 0) {\n            for(f in this.drawFunc) {\n                f(this.pixelMap)\n            }\n        }\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "if(this.drawFunc.size > 0) {\nfor(f in this.drawFunc) {",
              "successors": [
                {
                  "id": 3,
                  "label": "f(this.pixelMap)",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "setDrawFunc",
          "type": "function",
          "start_line": 39,
          "end_line": 41,
          "functions": [],
          "classes": [],
          "simplified_code": "    public override func setDrawFunc(drawFunc: (PixelMap) -> Unit): Unit {\n        this.drawFunc.append(drawFunc)\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public override func setDrawFunc(drawFunc: (PixelMap) -> Unit): Unit {\n    this.drawFunc.append(drawFunc)",
              "successors": []
            }
          ]
        }
      ],
      "simplified_code": "public class PixelMapDrawable <: Drawable {\n    private let pixelMap: PixelMap\n    private var drawFunc: ArrayList<(PixelMap) -> Unit> = ArrayList<(PixelMap) -> Unit>()\n    }\n    }\n    }\n    }\n    }\n}",
      "blocks": [
        {
          "id": 1,
          "label": "public class PixelMapDrawable <: Drawable {\nprivate let pixelMap: PixelMap\nprivate var drawFunc: ArrayList<(PixelMap) -> Unit> = ArrayList<(PixelMap) -> Unit>()",
          "successors": []
        }
      ]
    },
    {
      "name": "CJResourceDrawable",
      "type": "class",
      "start_line": 43,
      "end_line": 72,
      "functions": [
        {
          "name": "getCJResource",
          "type": "function",
          "start_line": 46,
          "end_line": 48,
          "functions": [],
          "classes": [],
          "simplified_code": "     func getCJResource(): CJResource {\n        return cjResource\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "func getCJResource(): CJResource {\n    return cjResource",
              "successors": []
            }
          ]
        },
        {
          "name": "init",
          "type": "function",
          "start_line": 49,
          "end_line": 51,
          "functions": [],
          "classes": [],
          "simplified_code": "    public init(cjResource: CJResource) {\n        this.cjResource = cjResource\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public init(cjResource: CJResource) {\n    this.cjResource = cjResource",
              "successors": [
                {
                  "id": 3,
                  "label": "}",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "getType",
          "type": "function",
          "start_line": 52,
          "end_line": 54,
          "functions": [],
          "classes": [],
          "simplified_code": "    public override func getType(): Int64 {\n        return 3\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public override func getType(): Int64 {\nreturn 3",
              "successors": [
                {
                  "id": 3,
                  "label": "}",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "getPixelMap",
          "type": "function",
          "start_line": 55,
          "end_line": 59,
          "functions": [],
          "classes": [],
          "simplified_code": "    public override func getPixelMap(): PixelMap {\n        let size: Size = Size(width: 1, height: 1)\n        let arr: Array<UInt8> = Array<UInt8>(96, item: 0)\n        return createPixelMap(arr, InitializationOptions(size: size))\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public override func getPixelMap(): PixelMap {\nlet size: Size = Size(width: 1, height: 1)",
              "successors": [
                {
                  "id": 3,
                  "label": "let arr: Array<UInt8> = Array<UInt8>(96, item: 0)\nreturn createPixelMap(arr, InitializationOptions(size: size))",
                  "successors": [
                    {
                      "id": 5,
                      "label": "}",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "draw",
          "type": "function",
          "start_line": 60,
          "end_line": 66,
          "functions": [],
          "classes": [],
          "simplified_code": "    public override func draw(isErrorPic:Bool): Unit {\n        if(this.drawFunc.size > 0) {\n            for(f in this.drawFunc) {\n                f(this.cjResource,isErrorPic)\n            }\n        }\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public override func draw(isErrorPic:Bool): Unit {\nif(this.drawFunc.size > 0) {",
              "successors": [
                {
                  "id": 3,
                  "label": "for(f in this.drawFunc) {\nf(this.cjResource,isErrorPic)",
                  "successors": [
                    {
                      "id": 5,
                      "label": "}\n}",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "setDrawFunc",
          "type": "function",
          "start_line": 67,
          "end_line": 68,
          "functions": [],
          "classes": [],
          "simplified_code": "    public override func setDrawFunc(drawFunc: (PixelMap) -> Unit): Unit {\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public override func setDrawFunc(drawFunc: (PixelMap) -> Unit): Unit {",
              "successors": []
            }
          ]
        },
        {
          "name": "setDrawFuncCJResource",
          "type": "function",
          "start_line": 69,
          "end_line": 71,
          "functions": [],
          "classes": [],
          "simplified_code": "     func setDrawFuncCJResource(drawFunc: (CJResource,Bool) -> Unit): Unit {\n        this.drawFunc.append(drawFunc)\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "func setDrawFuncCJResource(drawFunc: (CJResource,Bool) -> Unit): Unit {\n    this.drawFunc.append(drawFunc)",
              "successors": [
                {
                  "id": 3,
                  "label": "}",
                  "successors": []
                }
              ]
            }
          ]
        }
      ],
      "simplified_code": "public class CJResourceDrawable <: Drawable {\n    private let cjResource: CJResource\n    private var drawFunc: ArrayList<(CJResource,Bool) -> Unit> = ArrayList<(CJResource,Bool) -> Unit>()\n    }\n    }\n    }\n    }\n    }\n    }\n    }\n}",
      "blocks": [
        {
          "id": 1,
          "label": "public class CJResourceDrawable <: Drawable {",
          "successors": [
            {
              "id": 2,
              "label": "private let cjResource: CJResource",
              "successors": []
            },
            {
              "id": 3,
              "label": "private var drawFunc: ArrayList<(CJResource, Bool) -> Unit> = ArrayList<(CJResource, Bool) -> Unit>()",
              "successors": []
            }
          ]
        }
      ]
    }
  ],
  "simplified_code": "package droplet.droplet\n}\n}\n}\n}",
  "blocks": []
}