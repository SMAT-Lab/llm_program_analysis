{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 142,
  "functions": [
    {
      "name": "getRubyTOKENFromStr",
      "type": "function",
      "start_line": 2,
      "end_line": 142,
      "functions": [],
      "classes": [],
      "simplified_code": "func getRubyTOKENFromStr(str: String): RUBYTOKEN {\n    let rubyTypeStr: String = str\n    var token: RUBYTOKEN = match (rubyTypeStr) {\n        case \"integer\" | \"float\" | \"i\" | \"ri\" => RUBYTOKEN.NUMBER_LITERAL\n        case \"instance_variable\" | \"class_variable\" => RUBYTOKEN.INSTANCE_VARIABLE\n        case \"alias\" => RUBYTOKEN.ALIAS\n        case \"super\" => RUBYTOKEN.SUPER\n        case \"self\" => RUBYTOKEN.SELF\n        case \"undef\" => RUBYTOKEN.UNDEF\n        case \"class\" => RUBYTOKEN.CLASS\n        case \"def\" => RUBYTOKEN.DEF\n        case \"end\" => RUBYTOKEN.END\n        case \"module\" => RUBYTOKEN.MODULE\n        case \"return\" => RUBYTOKEN.RETURN\n        case \"and\" => RUBYTOKEN.AND\n        case \"begin\" | \"BEGIN\" => RUBYTOKEN.BEGIN\n        case \"break\" => RUBYTOKEN.BREAK\n        case \"do\" => RUBYTOKEN.DO\n        case \"ensure\" => RUBYTOKEN.ENSURE\n        case \"for\" => RUBYTOKEN.FOR\n        case \"in\" => RUBYTOKEN.IN\n        case \"next\" => RUBYTOKEN.NEXT\n        case \"not\" => RUBYTOKEN.NOT\n        case \"or\" => RUBYTOKEN.OR\n        case \"redo\" => RUBYTOKEN.REDO\n        case \"rescue\" => RUBYTOKEN.RESCUE\n        case \"retry\" => RUBYTOKEN.RETRY\n        case \"yield\" => RUBYTOKEN.YIELD\n        case \"until\" => RUBYTOKEN.UNTIL\n        case \"unless\" => RUBYTOKEN.UNLESS\n        case \"while\" => RUBYTOKEN.WHILE\n        case \"if\" => RUBYTOKEN.IF\n        case \"case\" => RUBYTOKEN.CASE\n        case \"when\" => RUBYTOKEN.WHEN\n        case \"then\" => RUBYTOKEN.THEN\n        case \"else\" => RUBYTOKEN.ELSE\n        case \"elsif\" => RUBYTOKEN.ELSIF\n        case \"end\" | \"END\" => RUBYTOKEN.END\n        case \"until\" => RUBYTOKEN.UNTIL\n        case \"constant\" => RUBYTOKEN.CONSTANT\n        case \"abort\" |\n           \"catch\" |\n           \"chomp\" |\n           \"chop\" |\n           \"eval\" |\n           \"exec\" |\n           \"exit\" |\n           \"fail\" |\n           \"fork\" |\n           \"format\" |\n           \"gets\" |\n           \"gsub\" |\n           \"Integer\" |\n           \"proc\" |\n           \"lambda\" |\n           \"load\" |\n           \"loop\" |\n           \"open\" |\n           \"p\" |\n           \"print\" |\n           \"proc\" |\n           \"puts\" |\n           \"putc\" |\n           \"pp\" |\n           \"raise\" |\n           \"fail\" |\n           \"rand\" |\n           \"readline\" |\n           \"readlines\" |\n           \"require\" |\n           \"scan\" |\n           \"select\" |\n           \"sleep\" |\n           \"srand\" |\n           \"system\" |\n           \"sub\" |\n           \"throw\" => RUBYTOKEN.METHOD\n        case \"nil\" => RUBYTOKEN.NIL\n        case \"true\" => RUBYTOKEN.TRUE\n        case \"false\" => RUBYTOKEN.FALSE\n        case \"__ENCODING__\" | \"encoding\" => RUBYTOKEN._ENCODING\n        case \"__LINE__\" | \"line\"=> RUBYTOKEN._LINE\n        case \"__FILE__\" | \"file\" => RUBYTOKEN._FILE\n        case \"defined?\" => RUBYTOKEN.DEFINED\n        case \"(\" | \"%w(\" => RUBYTOKEN.LPAREN\n        case \")\" => RUBYTOKEN.RPAREN\n        case \"{\" | \"#{\" => RUBYTOKEN.LBRACE\n        case \"}\" => RUBYTOKEN.RBRACE\n        case \"[\" | \"[]\" | \"[]=\" => RUBYTOKEN.LBRACK\n        case \"]\" => RUBYTOKEN.RBRACK\n        case \"+\" => RUBYTOKEN.PLUS\n        case \"-\" => RUBYTOKEN.MINUS\n        case \"*\" => RUBYTOKEN.MULT\n        case \"**\" => RUBYTOKEN.POW\n        case \"/\" => RUBYTOKEN.DIV\n        case \"%\" | \"%i(\" => RUBYTOKEN.MOD\n        case \"<<\" => RUBYTOKEN.LTLT\n        case \">>\" => RUBYTOKEN.GTGT\n        case \"&\" | \"&.\"=> RUBYTOKEN.AND\n        case \"|\" => RUBYTOKEN.OR\n        case \"!\" => RUBYTOKEN.NOT\n        case \"NOT\" => RUBYTOKEN.NOT_KEYWORD\n        case \"&&\" | \"&&=\" => RUBYTOKEN.ANDAND\n        case \"AND\" => RUBYTOKEN.AND_KEYWORD\n        case \"||\" | \"||=\"=> RUBYTOKEN.OROR\n        case \"OR\" => RUBYTOKEN.OR_KEYWORD\n        case \"^\"  => RUBYTOKEN.XOR\n        case \"~\" | \"~@\" => RUBYTOKEN.TILDE\n        case \"<\"  => RUBYTOKEN.LT\n        case \">\" | \"->\"  => RUBYTOKEN.GT\n        case \"<=\" => RUBYTOKEN.LTEQ\n        case \">=\" | \"=>\" => RUBYTOKEN.GTEQ\n        case \"==\" | \"===\"=> RUBYTOKEN.EQEQ\n        case \"!=\" | \"!~\" => RUBYTOKEN.NOTEQ\n        case \"<>\" | \"<=>\"=> RUBYTOKEN.LTGT\n        case \",\" => RUBYTOKEN.COMMA\n        case \":\" | \"::\" => RUBYTOKEN.COLON\n        case \".\" => RUBYTOKEN.DOT\n        case \"..\" | \"...\" => RUBYTOKEN.RANGE\n        case \"`\"  => RUBYTOKEN.BACKTICK\n        case \"=\" | \"=~\"=> RUBYTOKEN.EQ\n        case \";\" => RUBYTOKEN.SEMICOLON\n        case \"+=\" | \"+@\" => RUBYTOKEN.PLUSEQ\n        case \"-=\" | \"-@\" => RUBYTOKEN.MINUSEQ\n        case \"*=\" => RUBYTOKEN.MULTEQ\n        case \"/=\"  => RUBYTOKEN.DIVEQ\n        case \"%=\"  => RUBYTOKEN.MODEQ\n        case \"&=\"  => RUBYTOKEN.ANDEQ\n        case \"|=\"  => RUBYTOKEN.OREQ\n        case \"^=\"  => RUBYTOKEN.XOREQ\n        case \">>=\"  => RUBYTOKEN.GTGTEQ\n        case \"<<=\"  => RUBYTOKEN.LTLTEQ\n        case \"**=\"  => RUBYTOKEN.POWEQ\n        case \"identifier\" => RUBYTOKEN.IDENTIFIER\n        case \"comment\" => RUBYTOKEN.COMMENT\n        case \"simple_symbol\" | \"string_content\" | \"heredoc_content\" | \"heredoc_beginning\" | \"heredoc_end\" | \"string\" | \"\\\"\"=> RUBYTOKEN.QUOTED_STRING\n        case \"escape_sequence\" => RUBYTOKEN.WHITESPACE\n        case _ => RUBYTOKEN.BAD_CHARACTER\n    }\n    token\n}",
      "blocks": [
        {
          "id": 1,
          "label": "func getRubyTOKENFromStr(str: String): RUBYTOKEN {\nlet rubyTypeStr: String = str",
          "successors": [
            {
              "id": 3,
              "label": "var token: RUBYTOKEN = match (rubyTypeStr) {",
              "successors": [
                {
                  "id": 4,
                  "label": "case \"integer\" | \"float\" | \"i\" | \"ri\" => RUBYTOKEN.NUMBER_LITERAL",
                  "successors": []
                },
                {
                  "id": 5,
                  "label": "case \"instance_variable\" | \"class_variable\" => RUBYTOKEN.INSTANCE_VARIABLE",
                  "successors": []
                },
                {
                  "id": 6,
                  "label": "case \"alias\" => RUBYTOKEN.ALIAS",
                  "successors": []
                },
                {
                  "id": 7,
                  "label": "case \"super\" => RUBYTOKEN.SUPER",
                  "successors": []
                },
                {
                  "id": 8,
                  "label": "case \"self\" => RUBYTOKEN.SELF",
                  "successors": []
                },
                {
                  "id": 9,
                  "label": "case \"undef\" => RUBYTOKEN.UNDEF",
                  "successors": []
                },
                {
                  "id": 10,
                  "label": "case \"class\" => RUBYTOKEN.CLASS",
                  "successors": []
                },
                {
                  "id": 11,
                  "label": "case \"def\" => RUBYTOKEN.DEF",
                  "successors": []
                },
                {
                  "id": 12,
                  "label": "case \"end\" => RUBYTOKEN.END",
                  "successors": []
                },
                {
                  "id": 13,
                  "label": "case \"module\" => RUBYTOKEN.MODULE",
                  "successors": []
                },
                {
                  "id": 14,
                  "label": "case \"return\" => RUBYTOKEN.RETURN",
                  "successors": []
                },
                {
                  "id": 15,
                  "label": "case \"and\" => RUBYTOKEN.AND",
                  "successors": []
                },
                {
                  "id": 16,
                  "label": "case \"begin\" | \"BEGIN\" => RUBYTOKEN.BEGIN",
                  "successors": []
                },
                {
                  "id": 17,
                  "label": "case \"break\" => RUBYTOKEN.BREAK",
                  "successors": []
                },
                {
                  "id": 18,
                  "label": "case \"do\" => RUBYTOKEN.DO",
                  "successors": []
                },
                {
                  "id": 19,
                  "label": "case \"ensure\" => RUBYTOKEN.ENSURE",
                  "successors": []
                },
                {
                  "id": 20,
                  "label": "case \"for\" => RUBYTOKEN.FOR",
                  "successors": []
                },
                {
                  "id": 21,
                  "label": "case \"in\" => RUBYTOKEN.IN",
                  "successors": []
                },
                {
                  "id": 22,
                  "label": "case \"next\" => RUBYTOKEN.NEXT",
                  "successors": []
                },
                {
                  "id": 23,
                  "label": "case \"not\" => RUBYTOKEN.NOT",
                  "successors": []
                },
                {
                  "id": 24,
                  "label": "case \"or\" => RUBYTOKEN.OR",
                  "successors": []
                },
                {
                  "id": 25,
                  "label": "case \"redo\" => RUBYTOKEN.REDO",
                  "successors": []
                },
                {
                  "id": 26,
                  "label": "case \"rescue\" => RUBYTOKEN.RESCUE",
                  "successors": []
                },
                {
                  "id": 27,
                  "label": "case \"retry\" => RUBYTOKEN.RETRY",
                  "successors": []
                },
                {
                  "id": 28,
                  "label": "case \"yield\" => RUBYTOKEN.YIELD",
                  "successors": []
                },
                {
                  "id": 29,
                  "label": "case \"until\" => RUBYTOKEN.UNTIL",
                  "successors": []
                },
                {
                  "id": 30,
                  "label": "case \"unless\" => RUBYTOKEN.UNLESS",
                  "successors": []
                },
                {
                  "id": 31,
                  "label": "case \"while\" => RUBYTOKEN.WHILE",
                  "successors": []
                },
                {
                  "id": 32,
                  "label": "case \"if\" => RUBYTOKEN.IF",
                  "successors": []
                },
                {
                  "id": 33,
                  "label": "case \"case\" => RUBYTOKEN.CASE",
                  "successors": []
                },
                {
                  "id": 34,
                  "label": "case \"when\" => RUBYTOKEN.WHEN",
                  "successors": []
                },
                {
                  "id": 35,
                  "label": "case \"then\" => RUBYTOKEN.THEN",
                  "successors": []
                },
                {
                  "id": 36,
                  "label": "case \"else\" => RUBYTOKEN.ELSE",
                  "successors": []
                },
                {
                  "id": 37,
                  "label": "case \"elsif\" => RUBYTOKEN.ELSIF",
                  "successors": []
                },
                {
                  "id": 38,
                  "label": "case \"end\" | \"END\" => RUBYTOKEN.END",
                  "successors": []
                },
                {
                  "id": 39,
                  "label": "case \"constant\" => RUBYTOKEN.CONSTANT",
                  "successors": []
                },
                {
                  "id": 40,
                  "label": "case \"abort\" |\n           \"catch\" |\n           \"chomp\" |\n           \"chop\" |\n           \"eval\" |\n           \"exec\" |\n           \"exit\" |\n           \"fail\" |\n           \"fork\" |\n           \"format\" |\n           \"gets\" |\n           \"gsub\" |\n           \"Integer\" |\n           \"proc\" |\n           \"lambda\" |\n           \"load\" |\n           \"loop\" |\n           \"open\" |\n           \"p\" |\n           \"print\" |\n           \"proc\" |\n           \"puts\" |\n           \"putc\" |\n           \"pp\" |\n           \"raise\" |\n           \"fail\" |\n           \"rand\" |\n           \"readline\" |\n           \"readlines\" |\n           \"require\" |\n           \"scan\" |\n           \"select\" |\n           \"sleep\" |\n           \"srand\" |\n           \"system\" |\n           \"sub\" |\n           \"throw\" => RUBYTOKEN.METHOD",
                  "successors": []
                },
                {
                  "id": 41,
                  "label": "case \"nil\" => RUBYTOKEN.NIL",
                  "successors": []
                },
                {
                  "id": 42,
                  "label": "case \"true\" => RUBYTOKEN.TRUE",
                  "successors": []
                },
                {
                  "id": 43,
                  "label": "case \"false\" => RUBYTOKEN.FALSE",
                  "successors": []
                },
                {
                  "id": 44,
                  "label": "case \"__ENCODING__\" | \"encoding\" => RUBYTOKEN._ENCODING",
                  "successors": []
                },
                {
                  "id": 45,
                  "label": "case \"__LINE__\" | \"line\"=> RUBYTOKEN._LINE",
                  "successors": []
                },
                {
                  "id": 46,
                  "label": "case \"__FILE__\" | \"file\" => RUBYTOKEN._FILE",
                  "successors": []
                },
                {
                  "id": 47,
                  "label": "case \"defined?\" => RUBYTOKEN.DEFINED",
                  "successors": []
                },
                {
                  "id": 48,
                  "label": "case \"(\" | \"%w(\" => RUBYTOKEN.LPAREN",
                  "successors": []
                },
                {
                  "id": 49,
                  "label": "case \")\" => RUBYTOKEN.RPAREN",
                  "successors": []
                },
                {
                  "id": 50,
                  "label": "case \"{\" | \"#{\" => RUBYTOKEN.LBRACE",
                  "successors": []
                },
                {
                  "id": 51,
                  "label": "case \"}\" => RUBYTOKEN.RBRACE",
                  "successors": []
                },
                {
                  "id": 52,
                  "label": "case \"[\" | \"[]\" | \"[]=\" => RUBYTOKEN.LBRACK",
                  "successors": []
                },
                {
                  "id": 53,
                  "label": "case \"]\" => RUBYTOKEN.RBRACK",
                  "successors": []
                },
                {
                  "id": 54,
                  "label": "case \"+\" => RUBYTOKEN.PLUS",
                  "successors": []
                },
                {
                  "id": 55,
                  "label": "case \"-\" => RUBYTOKEN.MINUS",
                  "successors": []
                },
                {
                  "id": 56,
                  "label": "case \"*\" => RUBYTOKEN.MULT",
                  "successors": []
                },
                {
                  "id": 57,
                  "label": "case \"**\" => RUBYTOKEN.POW",
                  "successors": []
                },
                {
                  "id": 58,
                  "label": "case \"/\" => RUBYTOKEN.DIV",
                  "successors": []
                },
                {
                  "id": 59,
                  "label": "case \"%\" | \"%i(\" => RUBYTOKEN.MOD",
                  "successors": []
                },
                {
                  "id": 60,
                  "label": "case \"<<\" => RUBYTOKEN.LTLT",
                  "successors": []
                },
                {
                  "id": 61,
                  "label": "case \">>\" => RUBYTOKEN.GTGT",
                  "successors": []
                },
                {
                  "id": 62,
                  "label": "case \"&\" | \"&.\"=> RUBYTOKEN.AND",
                  "successors": []
                },
                {
                  "id": 63,
                  "label": "case \"|\" => RUBYTOKEN.OR",
                  "successors": []
                },
                {
                  "id": 64,
                  "label": "case \"!\" => RUBYTOKEN.NOT",
                  "successors": []
                },
                {
                  "id": 65,
                  "label": "case \"NOT\" => RUBYTOKEN.NOT_KEYWORD",
                  "successors": []
                },
                {
                  "id": 66,
                  "label": "case \"&&\" | \"&&=\" => RUBYTOKEN.ANDAND",
                  "successors": []
                },
                {
                  "id": 67,
                  "label": "case \"AND\" => RUBYTOKEN.AND_KEYWORD",
                  "successors": []
                },
                {
                  "id": 68,
                  "label": "case \"||\" | \"||=\"=> RUBYTOKEN.OROR",
                  "successors": []
                },
                {
                  "id": 69,
                  "label": "case \"OR\" => RUBYTOKEN.OR_KEYWORD",
                  "successors": []
                },
                {
                  "id": 70,
                  "label": "case \"^\"  => RUBYTOKEN.XOR",
                  "successors": []
                },
                {
                  "id": 71,
                  "label": "case \"~\" | \"~@\" => RUBYTOKEN.TILDE",
                  "successors": []
                },
                {
                  "id": 72,
                  "label": "case \"<\"  => RUBYTOKEN.LT",
                  "successors": []
                },
                {
                  "id": 73,
                  "label": "case \">\" | \"->\"  => RUBYTOKEN.GT",
                  "successors": []
                },
                {
                  "id": 74,
                  "label": "case \"<=\" => RUBYTOKEN.LTEQ",
                  "successors": []
                },
                {
                  "id": 75,
                  "label": "case \">=\" | \"=>\" => RUBYTOKEN.GTEQ",
                  "successors": []
                },
                {
                  "id": 76,
                  "label": "case \"==\" | \"===\"=> RUBYTOKEN.EQEQ",
                  "successors": []
                },
                {
                  "id": 77,
                  "label": "case \"!=\" | \"!~\" => RUBYTOKEN.NOTEQ",
                  "successors": []
                },
                {
                  "id": 78,
                  "label": "case \"<>\" | \"<=>\"=> RUBYTOKEN.LTGT",
                  "successors": []
                },
                {
                  "id": 79,
                  "label": "case \",\" => RUBYTOKEN.COMMA",
                  "successors": []
                },
                {
                  "id": 80,
                  "label": "case \":\" | \"::\" => RUBYTOKEN.COLON",
                  "successors": []
                },
                {
                  "id": 81,
                  "label": "case \".\" => RUBYTOKEN.DOT",
                  "successors": []
                },
                {
                  "id": 82,
                  "label": "case \"..\" | \"...\" => RUBYTOKEN.RANGE",
                  "successors": []
                },
                {
                  "id": 83,
                  "label": "case \"`\"  => RUBYTOKEN.BACKTICK",
                  "successors": []
                },
                {
                  "id": 84,
                  "label": "case \"=\" | \"=~\"=> RUBYTOKEN.EQ",
                  "successors": []
                },
                {
                  "id": 85,
                  "label": "case \";\" => RUBYTOKEN.SEMICOLON",
                  "successors": []
                },
                {
                  "id": 86,
                  "label": "case \"+=\" | \"+@\" => RUBYTOKEN.PLUSEQ",
                  "successors": []
                },
                {
                  "id": 87,
                  "label": "case \"-=\" | \"-@\" => RUBYTOKEN.MINUSEQ",
                  "successors": []
                },
                {
                  "id": 88,
                  "label": "case \"*=\" => RUBYTOKEN.MULTEQ",
                  "successors": []
                },
                {
                  "id": 89,
                  "label": "case \"/=\"  => RUBYTOKEN.DIVEQ",
                  "successors": []
                },
                {
                  "id": 90,
                  "label": "case \"%=\"  => RUBYTOKEN.MODEQ",
                  "successors": []
                },
                {
                  "id": 91,
                  "label": "case \"&=\"  => RUBYTOKEN.ANDEQ",
                  "successors": []
                },
                {
                  "id": 92,
                  "label": "case \"|=\"  => RUBYTOKEN.OREQ",
                  "successors": []
                },
                {
                  "id": 93,
                  "label": "case \"^=\"  => RUBYTOKEN.XOREQ",
                  "successors": []
                },
                {
                  "id": 94,
                  "label": "case \">>=\"  => RUBYTOKEN.GTGTEQ",
                  "successors": []
                },
                {
                  "id": 95,
                  "label": "case \"<<=\"  => RUBYTOKEN.LTLTEQ",
                  "successors": []
                },
                {
                  "id": 96,
                  "label": "case \"**=\"  => RUBYTOKEN.POWEQ",
                  "successors": []
                },
                {
                  "id": 97,
                  "label": "case \"identifier\" => RUBYTOKEN.IDENTIFIER",
                  "successors": []
                },
                {
                  "id": 98,
                  "label": "case \"comment\" => RUBYTOKEN.COMMENT",
                  "successors": []
                },
                {
                  "id": 99,
                  "label": "case \"simple_symbol\" | \"string_content\" | \"heredoc_content\" | \"heredoc_beginning\" | \"heredoc_end\" | \"string\" | \"\\\"\"=> RUBYTOKEN.QUOTED_STRING",
                  "successors": []
                },
                {
                  "id": 100,
                  "label": "case \"escape_sequence\" => RUBYTOKEN.WHITESPACE",
                  "successors": []
                },
                {
                  "id": 101,
                  "label": "case _ => RUBYTOKEN.BAD_CHARACTER",
                  "successors": []
                }
              ]
            },
            {
              "id": 102,
              "label": "token",
              "successors": []
            }
          ]
        }
      ]
    }
  ],
  "classes": [],
  "simplified_code": "package editorkit.language_ruby.lexer\n}",
  "blocks": [
    {
      "id": 1,
      "label": "package editorkit.language_ruby.lexer",
      "successors": []
    }
  ]
}