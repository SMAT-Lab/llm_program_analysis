{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 31,
  "functions": [
    {
      "name": "main",
      "type": "function",
      "start_line": 10,
      "end_line": 31,
      "functions": [],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 10,
          "line": "main() {"
        },
        {
          "lineno": 11,
          "line": "    let soc = TcpSocket(\"okhttp\", portTrans(50066))"
        },
        {
          "lineno": 12,
          "line": "    soc.connect()"
        },
        {
          "lineno": 13,
          "line": "    let sc = SocketClient.SocketC(soc)"
        },
        {
          "lineno": 14,
          "line": "    let socket = OKSocket(sc, Option<Duration>.None, Option<Duration>.None)"
        },
        {
          "lineno": 15,
          "line": "    let h2conn = H2Connection(sc, BufferedOutputStream(socket), OkBuffer(socket))"
        },
        {
          "lineno": 16,
          "line": "    let formBody = FormBody.builder().add(\"username\", \"admin\").add(\"password\", \"123456\").add(\"host\", \"%6D\").build()"
        },
        {
          "lineno": 17,
          "line": "    let request = httpclient4cj.Request.builder()"
        },
        {
          "lineno": 18,
          "line": "        .url(\"http://okhttp:${portTrans(50066)}/cangjie_test-1.0-SNAPSHOT/hello\")"
        },
        {
          "lineno": 19,
          "line": "        .header(\"User-Agent\", \"OkHttp-Example\")"
        },
        {
          "lineno": 20,
          "line": "        .put(formBody)"
        },
        {
          "lineno": 21,
          "line": "        .header(\"content-type\", formBody.contentType().getOrThrow().toString())"
        },
        {
          "lineno": 22,
          "line": "        .build()"
        },
        {
          "lineno": 23,
          "line": "    h2conn.start()"
        },
        {
          "lineno": 24,
          "line": "    let h1 = h2conn.isHealthy()"
        },
        {
          "lineno": 25,
          "line": "    h2conn.close()"
        },
        {
          "lineno": 26,
          "line": "    let h2 = h2conn.isHealthy()"
        },
        {
          "lineno": 27,
          "line": "    if (h1 == true && h2 == false) {"
        },
        {
          "lineno": 28,
          "line": "        return 0"
        },
        {
          "lineno": 29,
          "line": "    }"
        },
        {
          "lineno": 30,
          "line": "    return 1"
        },
        {
          "lineno": 31,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "main() {\n    let soc = TcpSocket(\"okhttp\", portTrans(50066))\n    soc.connect()\n    let sc = SocketClient.SocketC(soc)\n    let socket = OKSocket(sc, Option<Duration>.None, Option<Duration>.None)\n    let h2conn = H2Connection(sc, BufferedOutputStream(socket), OkBuffer(socket))\n    let formBody = FormBody.builder().add(\"username\", \"admin\").add(\"password\", \"123456\").add(\"host\", \"%6D\").build()\nlet request = httpclient4cj.Request.builder()\n    .url(\"http://okhttp:${portTrans(50066)}/cangjie_test-1.0-SNAPSHOT/hello\")\n    .header(\"User-Agent\", \"OkHttp-Example\")\n    .put(formBody)\n    .header(\"content-type\", formBody.contentType().getOrThrow().toString())\n    .build()",
          "successors": [
            {
              "id": 3,
              "label": "h2conn.start()\nlet h1 = h2conn.isHealthy()\nh2conn.close()\nlet h2 = h2conn.isHealthy()\nif (h1 == true && h2 == false) {\n    return 0\n}",
              "successors": [
                {
                  "id": 5,
                  "label": "return 1",
                  "successors": []
                }
              ]
            }
          ]
        }
      ]
    }
  ],
  "classes": [],
  "simplified_code": [
    {
      "lineno": 1,
      "line": "// DEPENDENCE: ../z_test.cj"
    },
    {
      "lineno": 2,
      "line": "// EXEC: cjc %import-path %L %l %f z_test.cj"
    },
    {
      "lineno": 3,
      "line": "// EXEC: ./main"
    },
    {
      "lineno": 4,
      "line": "from httpclient4cj import httpclient4cj.*"
    },
    {
      "lineno": 5,
      "line": "from std import collection.*"
    },
    {
      "lineno": 6,
      "line": "from std import io.*"
    },
    {
      "lineno": 7,
      "line": "from std import time.*"
    },
    {
      "lineno": 8,
      "line": "from net import http.*"
    },
    {
      "lineno": 9,
      "line": "from std import socket.*"
    }
  ],
  "blocks": [
    {
      "id": 1,
      "label": "// DEPENDENCE: ../z_test.cj\n// EXEC: cjc %import-path %L %l %f z_test.cj\n// EXEC: ./main\nfrom httpclient4cj import httpclient4cj.*\nfrom std import collection.*\nfrom std import io.*\nfrom std import time.*\nfrom net import http.*\nfrom std import socket.*",
      "successors": []
    }
  ]
}