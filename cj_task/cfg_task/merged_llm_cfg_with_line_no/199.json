{
  "name": "CJson.jsonmacro",
  "type": "CFG",
  "start_line": 1,
  "end_line": 8,
  "functions": [
    {
      "name": "JsonCust",
      "type": "function",
      "start_line": 2,
      "end_line": 8,
      "functions": [],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 2,
          "line": "public macro JsonCust(attr_Tk: Tokens, input_Tk: Tokens): Tokens {"
        },
        {
          "lineno": 3,
          "line": "    var decl = TokenVerifier.verifyVarDecl(input_Tk, Const.JSON_NAME_MARCO_NAME)"
        },
        {
          "lineno": 4,
          "line": "    assertParentContext(\"JsonSerializable\")"
        },
        {
          "lineno": 5,
          "line": "    setItem(\"prop\", decl.identifier.value)"
        },
        {
          "lineno": 6,
          "line": "    setItem(\"serializer\", attr_Tk.toString())"
        },
        {
          "lineno": 7,
          "line": "    return input_Tk"
        },
        {
          "lineno": 8,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "public macro JsonCust(attr_Tk: Tokens, input_Tk: Tokens): Tokens {\n    var decl = TokenVerifier.verifyVarDecl(input_Tk, Const.JSON_NAME_MARCO_NAME)\n    assertParentContext(\"JsonSerializable\")\n    setItem(\"prop\", decl.identifier.value)\n    setItem(\"serializer\", attr_Tk.toString())",
          "successors": [
            {
              "id": 2,
              "label": "return input_Tk",
              "successors": []
            },
            {
              "id": 3,
              "label": "}",
              "successors": []
            }
          ]
        }
      ]
    }
  ],
  "classes": [],
  "simplified_code": [
    {
      "lineno": 1,
      "line": "macro package CJson.jsonmacro"
    }
  ],
  "blocks": [
    {
      "id": 1,
      "label": "macro package CJson.jsonmacro",
      "successors": []
    }
  ]
}