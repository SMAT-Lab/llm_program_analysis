{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 25,
  "functions": [
    {
      "name": "main",
      "type": "function",
      "start_line": 8,
      "end_line": 19,
      "functions": [],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 8,
          "line": "main (){"
        },
        {
          "lineno": 9,
          "line": "    try {"
        },
        {
          "lineno": 10,
          "line": "        let er: EmptyResponseWriteStream = EmptyResponseWriteStream()"
        },
        {
          "lineno": 11,
          "line": "        er.header()"
        },
        {
          "lineno": 12,
          "line": "        er.write(Array<UInt8>(16, item: 0))"
        },
        {
          "lineno": 13,
          "line": "        er.writeStatusCode(200)"
        },
        {
          "lineno": 14,
          "line": "        er.flush()"
        },
        {
          "lineno": 15,
          "line": "    } catch (e: Exception) {"
        },
        {
          "lineno": 16,
          "line": "        return -1"
        },
        {
          "lineno": 17,
          "line": "    }"
        },
        {
          "lineno": 18,
          "line": "    return 0"
        },
        {
          "lineno": 19,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "main (){\ntry {\n    let er: EmptyResponseWriteStream = EmptyResponseWriteStream()\n    er.header()\n    er.write(Array<UInt8>(16, item: 0))\n    er.writeStatusCode(200)\n    er.flush()",
          "successors": [
            {
              "id": 3,
              "label": "catch (e: Exception) {\n    return -1\n}\nreturn 0",
              "successors": []
            },
            {
              "id": 4,
              "label": "return 0",
              "successors": []
            }
          ]
        }
      ]
    }
  ],
  "classes": [
    {
      "name": "EmptyResponseWriteStream",
      "type": "class",
      "start_line": 20,
      "end_line": 25,
      "functions": [
        {
          "name": "header",
          "type": "function",
          "start_line": 21,
          "end_line": 21,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 21,
              "line": "    public func header(): HttpHeaders{ return HttpHeaders() }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    public func header(): HttpHeaders{ return HttpHeaders() }",
              "successors": []
            }
          ]
        },
        {
          "name": "write",
          "type": "function",
          "start_line": 22,
          "end_line": 22,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 22,
              "line": "    public func write(_: Array<UInt8>): Unit {}"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    public func write(_: Array<UInt8>): Unit {}",
              "successors": []
            }
          ]
        },
        {
          "name": "writeStatusCode",
          "type": "function",
          "start_line": 23,
          "end_line": 23,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 23,
              "line": "    public func writeStatusCode(_: Int64): Unit {}"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    public func writeStatusCode(_: Int64): Unit {}",
              "successors": []
            }
          ]
        },
        {
          "name": "flush",
          "type": "function",
          "start_line": 24,
          "end_line": 24,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 24,
              "line": "    public func flush(): Unit {}"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    public func flush(): Unit {}",
              "successors": []
            }
          ]
        }
      ],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 20,
          "line": "public class EmptyResponseWriteStream <: ResponseWriteStream {"
        },
        {
          "lineno": 25,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "public class EmptyResponseWriteStream <: ResponseWriteStream {\n}",
          "successors": []
        }
      ]
    }
  ],
  "simplified_code": [
    {
      "lineno": 1,
      "line": "// EXEC: cjc %import-path %L %l %f  %project-path %project-L/protobuf  -l protobuf-cj"
    },
    {
      "lineno": 2,
      "line": "// EXEC: ./main"
    },
    {
      "lineno": 3,
      "line": "from rpc4cj import http2.frame.*"
    },
    {
      "lineno": 4,
      "line": "from rpc4cj import util.*"
    },
    {
      "lineno": 5,
      "line": "from rpc4cj import transport.*"
    },
    {
      "lineno": 6,
      "line": "from std import collection.*"
    },
    {
      "lineno": 7,
      "line": "from net import http.*"
    }
  ],
  "blocks": [
    {
      "id": 1,
      "label": "// EXEC: cjc %import-path %L %l %f  %project-path %project-L/protobuf  -l protobuf-cj\n// EXEC: ./main\nfrom rpc4cj import http2.frame.*\nfrom rpc4cj import util.*\nfrom rpc4cj import transport.*\nfrom std import collection.*\nfrom net import http.*",
      "successors": []
    }
  ]
}