{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 45,
  "functions": [],
  "classes": [
    {
      "name": "GIFFrame",
      "type": "class",
      "start_line": 2,
      "end_line": 25,
      "functions": [
        {
          "name": "toString",
          "type": "function",
          "start_line": 19,
          "end_line": 24,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 19,
              "line": "    public func toString(): String {"
            },
            {
              "lineno": 20,
              "line": "        return \"GIFFrame = [(colorTable.size = ${colorTable.size}),  (delay = ${delay}), \\n\" +"
            },
            {
              "lineno": 21,
              "line": "                        \"(dims = ${dims.toString()}), \\n\" +"
            },
            {
              "lineno": 22,
              "line": "                        \"(disposalType = ${disposalType}), (pixels.size = ${pixels.size}), (transparentIndex = ${transparentIndex}), \\n\" +"
            },
            {
              "lineno": 23,
              "line": "                        \"(patch.size = ${patch.size},  (pixels.size = ${pixels.size}]\\n\""
            },
            {
              "lineno": 24,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    public func toString(): String {\n        return \"GIFFrame = [(colorTable.size = ${colorTable.size}),  (delay = ${delay}), \\n\" +\n                        \"(dims = ${dims.toString()}), \\n\" +\n                        \"(disposalType = ${disposalType}), (pixels.size = ${pixels.size}), (transparentIndex = ${transparentIndex}), \\n\" +\n                        \"(patch.size = ${patch.size},  (pixels.size = ${pixels.size}]\\n\"\n    }",
              "successors": []
            }
          ]
        }
      ],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 2,
          "line": "public class GIFFrame <: ToString {"
        },
        {
          "lineno": 3,
          "line": "    //This float doesn't have a leading digit/Display frame width, height, top margin, left margin"
        },
        {
          "lineno": 4,
          "line": "    public var dims: Dims = Dims()"
        },
        {
          "lineno": 5,
          "line": "    //The color array pointed to by the pixel data of the current frame. Group of 3 lengths."
        },
        {
          "lineno": 6,
          "line": "    public var colorTable: Array<UInt8> = Array<UInt8>()"
        },
        {
          "lineno": 7,
          "line": "    //The duration of the interval from the current frame to the next frame"
        },
        {
          "lineno": 8,
          "line": "    public var delay: Int64 = 0"
        },
        {
          "lineno": 9,
          "line": "    public var disposalType: Int32 = 0"
        },
        {
          "lineno": 10,
          "line": "    //The patch information after color conversion is used for drawing"
        },
        {
          "lineno": 11,
          "line": "    public var patch: Array<UInt8> = Array<UInt8>()"
        },
        {
          "lineno": 12,
          "line": "    //PixelMap image generated by patch (not used before UI encapsulation)"
        },
        {
          "lineno": 13,
          "line": "    //public var drawPixelMap: ?PixelMap = None"
        },
        {
          "lineno": 14,
          "line": "    public var drawPixelMap: ?Any = None"
        },
        {
          "lineno": 15,
          "line": "    //Color table lookup index for each pixel in the current frame"
        },
        {
          "lineno": 16,
          "line": "    public var pixels: Array<UInt8> = Array<UInt8>()"
        },
        {
          "lineno": 17,
          "line": "    //Optional color index representing transparency"
        },
        {
          "lineno": 18,
          "line": "    public var transparentIndex: Int32 = -1"
        },
        {
          "lineno": 25,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "public class GIFFrame <: ToString {\n    //This float doesn't have a leading digit/Display frame width, height, top margin, left margin\n    public var dims: Dims = Dims()\n    //The color array pointed to by the pixel data of the current frame. Group of 3 lengths.\n    public var colorTable: Array<UInt8> = Array<UInt8>()\n    //The duration of the interval from the current frame to the next frame\n    public var delay: Int64 = 0\n    public var disposalType: Int32 = 0\n    //The patch information after color conversion is used for drawing\n    public var patch: Array<UInt8> = Array<UInt8>()\n    //PixelMap image generated by patch (not used before UI encapsulation)\n    //public var drawPixelMap: ?PixelMap = None\n    public var drawPixelMap: ?Any = None\n    //Color table lookup index for each pixel in the current frame\n    public var pixels: Array<UInt8> = Array<UInt8>()\n    //Optional color index representing transparency\n    public var transparentIndex: Int32 = -1\n}",
          "successors": []
        }
      ]
    },
    {
      "name": "Dims",
      "type": "class",
      "start_line": 26,
      "end_line": 45,
      "functions": [
        {
          "name": "init",
          "type": "function",
          "start_line": 35,
          "end_line": 35,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 35,
              "line": "    public init(){}"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": " public init(){}",
              "successors": []
            }
          ]
        },
        {
          "name": "init",
          "type": "function",
          "start_line": 36,
          "end_line": 41,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 36,
              "line": "    public init(width!: Int32, height!: Int32, top!: Int32, left!: Int32) {"
            },
            {
              "lineno": 37,
              "line": "        this.width = width"
            },
            {
              "lineno": 38,
              "line": "        this.height = height"
            },
            {
              "lineno": 39,
              "line": "        this.top = top"
            },
            {
              "lineno": 40,
              "line": "        this.left = left"
            },
            {
              "lineno": 41,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    public init(width!: Int32, height!: Int32, top!: Int32, left!: Int32) {\n        this.width = width\n        this.height = height\n        this.top = top\n        this.left = left\n    }",
              "successors": []
            }
          ]
        },
        {
          "name": "toString",
          "type": "function",
          "start_line": 42,
          "end_line": 44,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 42,
              "line": "    public func toString(): String {"
            },
            {
              "lineno": 43,
              "line": "        return \"Dims = {(top = ${top}), (left = ${left}), (width = ${width}), (height = ${height})}\""
            },
            {
              "lineno": 44,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    public func toString(): String {\n        return \"Dims = {(top = ${top}), (left = ${left}), (width = ${width}), (height = ${height})}\"\n    }",
              "successors": []
            }
          ]
        }
      ],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 26,
          "line": "public class Dims <: ToString {"
        },
        {
          "lineno": 27,
          "line": "    //The width of GIF frames."
        },
        {
          "lineno": 28,
          "line": "    public var width: Int32 = 0"
        },
        {
          "lineno": 29,
          "line": "    //The height of GIF frames."
        },
        {
          "lineno": 30,
          "line": "    public var height: Int32 = 0"
        },
        {
          "lineno": 31,
          "line": "    //Top margin of GIF frames"
        },
        {
          "lineno": 32,
          "line": "    public var top: Int32 = 0"
        },
        {
          "lineno": 33,
          "line": "    //Left margin of GIF frame."
        },
        {
          "lineno": 34,
          "line": "    public var left: Int32 = 0"
        },
        {
          "lineno": 45,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "public class Dims <: ToString {\n    //The width of GIF frames.\n    public var width: Int32 = 0\n    //The height of GIF frames.\n    public var height: Int32 = 0\n    //Top margin of GIF frames\n    public var top: Int32 = 0\n    //Left margin of GIF frame.\n    public var left: Int32 = 0\n\n}",
          "successors": []
        }
      ]
    }
  ],
  "simplified_code": [
    {
      "lineno": 1,
      "line": "package parser"
    }
  ],
  "blocks": [
    {
      "id": 1,
      "label": "package parser",
      "successors": []
    }
  ]
}