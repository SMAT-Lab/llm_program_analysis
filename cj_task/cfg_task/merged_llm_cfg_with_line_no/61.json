{
  "name": "opds_cj.data_stru",
  "type": "CFG",
  "start_line": 1,
  "end_line": 36,
  "functions": [],
  "classes": [
    {
      "name": "User",
      "type": "class",
      "start_line": 7,
      "end_line": 36,
      "functions": [
        {
          "name": "init",
          "type": "function",
          "start_line": 11,
          "end_line": 21,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 11,
              "line": "    public init(authStr:Option<String>){"
            },
            {
              "lineno": 12,
              "line": "        var auth:String=\"\""
            },
            {
              "lineno": 13,
              "line": "        match(authStr){"
            },
            {
              "lineno": 14,
              "line": "            case Some(x) => auth = x.trimStart(\"Basic \")"
            },
            {
              "lineno": 15,
              "line": "            case None => return"
            },
            {
              "lineno": 16,
              "line": "        }"
            },
            {
              "lineno": 17,
              "line": "        let decode = String.fromUtf8(fromBase64String(auth).getOrThrow()).split(\":\")"
            },
            {
              "lineno": 18,
              "line": "        this.email = decode[0]"
            },
            {
              "lineno": 19,
              "line": "        this.password = decode[1]"
            },
            {
              "lineno": 20,
              "line": "        this.id = getID(this.email)"
            },
            {
              "lineno": 21,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "public init(authStr:Option<String>){\n    var auth:String=\"\"\nmatch(authStr){\n    case Some(x) => auth = x.trimStart(\"Basic \")\n    case None => return",
              "successors": [
                {
                  "id": 3,
                  "label": "}\nlet decode = String.fromUtf8(fromBase64String(auth).getOrThrow()).split(\":\")\nthis.email = decode[0]\nthis.password = decode[1]\nthis.id = getID(this.email)",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "getID",
          "type": "function",
          "start_line": 23,
          "end_line": 35,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 23,
              "line": "    func getID(email:String):String{"
            },
            {
              "lineno": 24,
              "line": "        var sql = \"SELECT ID FROM USER WHERE EMAIL='${email}';\""
            },
            {
              "lineno": 25,
              "line": "        var ppDb: CPointer<CPointer<Unit>> = sqlOpen(baseConfig.database)"
            },
            {
              "lineno": 26,
              "line": "        var ppStmt = sqlPrepare(ppDb, sql)"
            },
            {
              "lineno": 27,
              "line": "        var id = \"\""
            },
            {
              "lineno": 28,
              "line": "        while (sqlStep(ppStmt) != SQLITE_DONE) {"
            },
            {
              "lineno": 29,
              "line": "            id = sqlColumnText(ppStmt, 0)"
            },
            {
              "lineno": 30,
              "line": "        }"
            },
            {
              "lineno": 31,
              "line": "        sqlFinalize(ppStmt)"
            },
            {
              "lineno": 32,
              "line": "        sqlClose(ppDb)"
            },
            {
              "lineno": 33,
              "line": ""
            },
            {
              "lineno": 34,
              "line": "        return id"
            },
            {
              "lineno": 35,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    func getID(email:String):String{\n        var sql = \"SELECT ID FROM USER WHERE EMAIL='${email}';\"\n        var ppDb: CPointer<CPointer<Unit>> = sqlOpen(baseConfig.database)\n        var ppStmt = sqlPrepare(ppDb, sql)\n        var id = \"\"",
              "successors": [
                {
                  "id": 2,
                  "label": "        while (sqlStep(ppStmt) != SQLITE_DONE) {\n            id = sqlColumnText(ppStmt, 0)\n        }",
                  "successors": [
                    {
                      "id": 3,
                      "label": "        sqlFinalize(ppStmt)\n        sqlClose(ppDb)\n        return id",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 7,
          "line": "public class User{"
        },
        {
          "lineno": 8,
          "line": "    public var id:String = \"\""
        },
        {
          "lineno": 9,
          "line": "    public var email:String = \"\""
        },
        {
          "lineno": 10,
          "line": "    var password:String = \"\""
        },
        {
          "lineno": 22,
          "line": ""
        },
        {
          "lineno": 36,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "public class User{\n    public var id:String = \"\"\n    public var email:String = \"\"\n    var password:String = \"\"",
          "successors": []
        }
      ]
    }
  ],
  "simplified_code": [
    {
      "lineno": 1,
      "line": "package opds_cj.data_stru"
    },
    {
      "lineno": 2,
      "line": ""
    },
    {
      "lineno": 3,
      "line": "import encoding.base64.*"
    },
    {
      "lineno": 4,
      "line": "import opds_cj.sqlite.*"
    },
    {
      "lineno": 5,
      "line": "import opds_cj.config.baseConfig"
    },
    {
      "lineno": 6,
      "line": ""
    }
  ],
  "blocks": [
    {
      "id": 1,
      "label": "package opds_cj.data_stru\n\nimport encoding.base64.*",
      "successors": [
        {
          "id": 3,
          "label": "import opds_cj.sqlite.*\nimport opds_cj.config.baseConfig",
          "successors": [
            {
              "id": 5,
              "label": "",
              "successors": []
            }
          ]
        }
      ]
    }
  ]
}