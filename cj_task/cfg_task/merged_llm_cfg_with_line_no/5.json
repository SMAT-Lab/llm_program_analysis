{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 182,
  "functions": [
    {
      "name": "matchValue",
      "type": "function",
      "start_line": 130,
      "end_line": 136,
      "functions": [],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 130,
          "line": "func matchValue<T>(v: T): JsonValue {"
        },
        {
          "lineno": 131,
          "line": "    match (v) {"
        },
        {
          "lineno": 132,
          "line": "        case vv: ToJson => return vv.toJson()"
        },
        {
          "lineno": 133,
          "line": "        case vv: ToJsonValue => return vv.toJsonValue()"
        },
        {
          "lineno": 134,
          "line": "        case _ => throw Exception(\"Value must implement ToJson or ToJsonValue\")"
        },
        {
          "lineno": 135,
          "line": "    }"
        },
        {
          "lineno": 136,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "func matchValue<T>(v: T): JsonValue {\nmatch (v) {",
          "successors": [
            {
              "id": 3,
              "label": "case vv: ToJson => return vv.toJson()",
              "successors": []
            },
            {
              "id": 4,
              "label": "case vv: ToJsonValue => return vv.toJsonValue()",
              "successors": []
            },
            {
              "id": 5,
              "label": "case _ => throw Exception(\"Value must implement ToJson or ToJsonValue\")",
              "successors": []
            }
          ]
        }
      ]
    },
    {
      "name": "castJsonValue",
      "type": "function",
      "start_line": 172,
      "end_line": 174,
      "functions": [],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 172,
          "line": "public func castJsonValue(t: ToJsonValue): JsonValue {"
        },
        {
          "lineno": 173,
          "line": "    return t.toJsonValue()"
        },
        {
          "lineno": 174,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "public func castJsonValue(t: ToJsonValue): JsonValue {\n    return t.toJsonValue()\n}",
          "successors": []
        }
      ]
    },
    {
      "name": "castJsonValue",
      "type": "function",
      "start_line": 176,
      "end_line": 178,
      "functions": [],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 176,
          "line": "public func castJsonValue(t: JsonValue): JsonValue {"
        },
        {
          "lineno": 177,
          "line": "    return t"
        },
        {
          "lineno": 178,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "public func castJsonValue(t: JsonValue): JsonValue {\n    return t\n}",
          "successors": []
        }
      ]
    },
    {
      "name": "castJsonValue",
      "type": "function",
      "start_line": 180,
      "end_line": 182,
      "functions": [],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 180,
          "line": "public func castJsonValue(t: ToJson): JsonValue {"
        },
        {
          "lineno": 181,
          "line": "    return t.toJson()"
        },
        {
          "lineno": 182,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "public func castJsonValue(t: ToJson): JsonValue {\n    return t.toJson()",
          "successors": []
        }
      ]
    }
  ],
  "classes": [
    {
      "name": "ToJsonValue",
      "type": "class",
      "start_line": 6,
      "end_line": 8,
      "functions": [
        {
          "name": "toJsonValue",
          "type": "function",
          "start_line": 7,
          "end_line": 7,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 7,
              "line": "    func toJsonValue(): JsonValue"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    func toJsonValue(): JsonValue",
              "successors": []
            }
          ]
        }
      ],
      "simplified_code": [
        {
          "lineno": 6,
          "line": "public interface ToJsonValue {"
        },
        {
          "lineno": 8,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "public interface ToJsonValue {\n}",
          "successors": []
        }
      ]
    },
    {
      "name": "Bool",
      "type": "class",
      "start_line": 10,
      "end_line": 14,
      "functions": [
        {
          "name": "toJsonValue",
          "type": "function",
          "start_line": 11,
          "end_line": 13,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 11,
              "line": "    public func toJsonValue(): JsonValue {"
            },
            {
              "lineno": 12,
              "line": "        return JsonBool(this)"
            },
            {
              "lineno": 13,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "public func toJsonValue(): JsonValue {\n    return JsonBool(this)\n}",
              "successors": []
            }
          ]
        }
      ],
      "simplified_code": [
        {
          "lineno": 10,
          "line": "extend Bool <: ToJsonValue {"
        },
        {
          "lineno": 14,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "extend Bool <: ToJsonValue {\n}",
          "successors": []
        }
      ]
    },
    {
      "name": "Int8",
      "type": "class",
      "start_line": 16,
      "end_line": 20,
      "functions": [
        {
          "name": "toJsonValue",
          "type": "function",
          "start_line": 17,
          "end_line": 19,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 17,
              "line": "    public func toJsonValue(): JsonValue {"
            },
            {
              "lineno": 18,
              "line": "        return JsonInt(Int64(this))"
            },
            {
              "lineno": 19,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    public func toJsonValue(): JsonValue {\n        return JsonInt(Int64(this))\n    }",
              "successors": []
            }
          ]
        }
      ],
      "simplified_code": [
        {
          "lineno": 16,
          "line": "extend Int8 <: ToJsonValue {"
        },
        {
          "lineno": 20,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "extend Int8 <: ToJsonValue { ... }",
          "successors": []
        }
      ]
    },
    {
      "name": "Int16",
      "type": "class",
      "start_line": 22,
      "end_line": 26,
      "functions": [
        {
          "name": "toJsonValue",
          "type": "function",
          "start_line": 23,
          "end_line": 25,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 23,
              "line": "    public func toJsonValue(): JsonValue {"
            },
            {
              "lineno": 24,
              "line": "        return JsonInt(Int64(this))"
            },
            {
              "lineno": 25,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    public func toJsonValue(): JsonValue {\n        return JsonInt(Int64(this))\n    }",
              "successors": []
            }
          ]
        }
      ],
      "simplified_code": [
        {
          "lineno": 22,
          "line": "extend Int16 <: ToJsonValue {"
        },
        {
          "lineno": 26,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "extend Int16 <: ToJsonValue {\n}",
          "successors": []
        }
      ]
    },
    {
      "name": "Int32",
      "type": "class",
      "start_line": 28,
      "end_line": 32,
      "functions": [
        {
          "name": "toJsonValue",
          "type": "function",
          "start_line": 29,
          "end_line": 31,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 29,
              "line": "    public func toJsonValue(): JsonValue {"
            },
            {
              "lineno": 30,
              "line": "        return JsonInt(Int64(this))"
            },
            {
              "lineno": 31,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    public func toJsonValue(): JsonValue {\n        return JsonInt(Int64(this))\n    }",
              "successors": []
            }
          ]
        }
      ],
      "simplified_code": [
        {
          "lineno": 28,
          "line": "extend Int32 <: ToJsonValue {"
        },
        {
          "lineno": 32,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "extend Int32 <: ToJsonValue {\n}",
          "successors": []
        }
      ]
    },
    {
      "name": "Int64",
      "type": "class",
      "start_line": 34,
      "end_line": 38,
      "functions": [
        {
          "name": "toJsonValue",
          "type": "function",
          "start_line": 35,
          "end_line": 37,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 35,
              "line": "    public func toJsonValue(): JsonValue {"
            },
            {
              "lineno": 36,
              "line": "        return JsonInt(this)"
            },
            {
              "lineno": 37,
              "line": "    }"
            }
          ],
          "blocks": []
        }
      ],
      "simplified_code": [
        {
          "lineno": 34,
          "line": "extend Int64 <: ToJsonValue {"
        },
        {
          "lineno": 38,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "extend Int64 <: ToJsonValue {\n}",
          "successors": []
        }
      ]
    },
    {
      "name": "IntNative",
      "type": "class",
      "start_line": 40,
      "end_line": 44,
      "functions": [
        {
          "name": "toJsonValue",
          "type": "function",
          "start_line": 41,
          "end_line": 43,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 41,
              "line": "    public func toJsonValue(): JsonValue {"
            },
            {
              "lineno": 42,
              "line": "        return JsonInt(Int64(this))"
            },
            {
              "lineno": 43,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    public func toJsonValue(): JsonValue {\n        return JsonInt(Int64(this))",
              "successors": []
            }
          ]
        }
      ],
      "simplified_code": [
        {
          "lineno": 40,
          "line": "extend IntNative <: ToJsonValue {"
        },
        {
          "lineno": 44,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "extend IntNative <: ToJsonValue {\n}",
          "successors": []
        }
      ]
    },
    {
      "name": "UInt8",
      "type": "class",
      "start_line": 46,
      "end_line": 50,
      "functions": [
        {
          "name": "toJsonValue",
          "type": "function",
          "start_line": 47,
          "end_line": 49,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 47,
              "line": "    public func toJsonValue(): JsonValue {"
            },
            {
              "lineno": 48,
              "line": "        return JsonInt(Int64(this))"
            },
            {
              "lineno": 49,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    public func toJsonValue(): JsonValue {\n        return JsonInt(Int64(this))\n    }",
              "successors": []
            }
          ]
        }
      ],
      "simplified_code": [
        {
          "lineno": 46,
          "line": "extend UInt8 <: ToJsonValue {"
        },
        {
          "lineno": 50,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "extend UInt8 <: ToJsonValue {\n}",
          "successors": []
        }
      ]
    },
    {
      "name": "UInt16",
      "type": "class",
      "start_line": 52,
      "end_line": 56,
      "functions": [
        {
          "name": "toJsonValue",
          "type": "function",
          "start_line": 53,
          "end_line": 55,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 53,
              "line": "    public func toJsonValue(): JsonValue {"
            },
            {
              "lineno": 54,
              "line": "        return JsonInt(Int64(this))"
            },
            {
              "lineno": 55,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    public func toJsonValue(): JsonValue {\n        return JsonInt(Int64(this))\n    }",
              "successors": []
            }
          ]
        }
      ],
      "simplified_code": [
        {
          "lineno": 52,
          "line": "extend UInt16 <: ToJsonValue {"
        },
        {
          "lineno": 56,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "extend UInt16 <: ToJsonValue {\n}",
          "successors": []
        }
      ]
    },
    {
      "name": "UInt32",
      "type": "class",
      "start_line": 58,
      "end_line": 62,
      "functions": [
        {
          "name": "toJsonValue",
          "type": "function",
          "start_line": 59,
          "end_line": 61,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 59,
              "line": "    public func toJsonValue(): JsonValue {"
            },
            {
              "lineno": 60,
              "line": "        return JsonInt(Int64(this))"
            },
            {
              "lineno": 61,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    public func toJsonValue(): JsonValue {\n        return JsonInt(Int64(this))\n    }",
              "successors": []
            }
          ]
        }
      ],
      "simplified_code": [
        {
          "lineno": 58,
          "line": "extend UInt32 <: ToJsonValue {"
        },
        {
          "lineno": 62,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "extend UInt32 <: ToJsonValue {\n}",
          "successors": []
        }
      ]
    },
    {
      "name": "UInt64",
      "type": "class",
      "start_line": 64,
      "end_line": 68,
      "functions": [
        {
          "name": "toJsonValue",
          "type": "function",
          "start_line": 65,
          "end_line": 67,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 65,
              "line": "    public func toJsonValue(): JsonValue {"
            },
            {
              "lineno": 66,
              "line": "        return JsonInt(Int64(this))"
            },
            {
              "lineno": 67,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    public func toJsonValue(): JsonValue {\n        return JsonInt(Int64(this))\n    }",
              "successors": []
            }
          ]
        }
      ],
      "simplified_code": [
        {
          "lineno": 64,
          "line": "extend UInt64 <: ToJsonValue {"
        },
        {
          "lineno": 68,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "extend UInt64 <: ToJsonValue {\n}",
          "successors": []
        }
      ]
    },
    {
      "name": "UIntNative",
      "type": "class",
      "start_line": 70,
      "end_line": 74,
      "functions": [
        {
          "name": "toJsonValue",
          "type": "function",
          "start_line": 71,
          "end_line": 73,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 71,
              "line": "    public func toJsonValue(): JsonValue {"
            },
            {
              "lineno": 72,
              "line": "        return JsonInt(Int64(this))"
            },
            {
              "lineno": 73,
              "line": "    }"
            }
          ],
          "blocks": []
        }
      ],
      "simplified_code": [
        {
          "lineno": 70,
          "line": "extend UIntNative <: ToJsonValue {"
        },
        {
          "lineno": 74,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "extend UIntNative <: ToJsonValue {\n}",
          "successors": []
        }
      ]
    },
    {
      "name": "Float16",
      "type": "class",
      "start_line": 76,
      "end_line": 80,
      "functions": [
        {
          "name": "toJsonValue",
          "type": "function",
          "start_line": 77,
          "end_line": 79,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 77,
              "line": "    public func toJsonValue(): JsonValue {"
            },
            {
              "lineno": 78,
              "line": "        return JsonFloat(Float64(this))"
            },
            {
              "lineno": 79,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    public func toJsonValue(): JsonValue {\n        return JsonFloat(Float64(this))",
              "successors": []
            }
          ]
        }
      ],
      "simplified_code": [
        {
          "lineno": 76,
          "line": "extend Float16 <: ToJsonValue {"
        },
        {
          "lineno": 80,
          "line": "}"
        }
      ],
      "blocks": []
    },
    {
      "name": "Float32",
      "type": "class",
      "start_line": 82,
      "end_line": 86,
      "functions": [
        {
          "name": "toJsonValue",
          "type": "function",
          "start_line": 83,
          "end_line": 85,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 83,
              "line": "    public func toJsonValue(): JsonValue {"
            },
            {
              "lineno": 84,
              "line": "        return JsonFloat(Float64(this))"
            },
            {
              "lineno": 85,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "public func toJsonValue(): JsonValue {\n    return JsonFloat(Float64(this))\n}",
              "successors": []
            }
          ]
        }
      ],
      "simplified_code": [
        {
          "lineno": 82,
          "line": "extend Float32 <: ToJsonValue {"
        },
        {
          "lineno": 86,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "extend Float32 <: ToJsonValue {\n}",
          "successors": []
        }
      ]
    },
    {
      "name": "Float64",
      "type": "class",
      "start_line": 88,
      "end_line": 92,
      "functions": [
        {
          "name": "toJsonValue",
          "type": "function",
          "start_line": 89,
          "end_line": 91,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 89,
              "line": "    public func toJsonValue(): JsonValue {"
            },
            {
              "lineno": 90,
              "line": "        return JsonFloat(this)"
            },
            {
              "lineno": 91,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    public func toJsonValue(): JsonValue {\n        return JsonFloat(this)\n    }",
              "successors": []
            }
          ]
        }
      ],
      "simplified_code": [
        {
          "lineno": 88,
          "line": "extend Float64 <: ToJsonValue {"
        },
        {
          "lineno": 92,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "extend Float64 <: ToJsonValue {\n}",
          "successors": []
        }
      ]
    },
    {
      "name": "String",
      "type": "class",
      "start_line": 94,
      "end_line": 98,
      "functions": [
        {
          "name": "toJsonValue",
          "type": "function",
          "start_line": 95,
          "end_line": 97,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 95,
              "line": "    public func toJsonValue(): JsonValue {"
            },
            {
              "lineno": 96,
              "line": "        return JsonString(this)"
            },
            {
              "lineno": 97,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    public func toJsonValue(): JsonValue {\n        return JsonString(this)\n    }",
              "successors": []
            }
          ]
        }
      ],
      "simplified_code": [
        {
          "lineno": 94,
          "line": "extend String <: ToJsonValue {"
        },
        {
          "lineno": 98,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "extend String <: ToJsonValue {\n}",
          "successors": []
        }
      ]
    },
    {
      "name": "Array<T>",
      "type": "class",
      "start_line": 100,
      "end_line": 108,
      "functions": [
        {
          "name": "toJsonValue",
          "type": "function",
          "start_line": 101,
          "end_line": 107,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 101,
              "line": "    public func toJsonValue(): JsonValue {"
            },
            {
              "lineno": 102,
              "line": "        let arr = JsonArray()"
            },
            {
              "lineno": 103,
              "line": "        for (i in this) {"
            },
            {
              "lineno": 104,
              "line": "            arr.add(i.toJsonValue())"
            },
            {
              "lineno": 105,
              "line": "        }"
            },
            {
              "lineno": 106,
              "line": "        return arr"
            },
            {
              "lineno": 107,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    public func toJsonValue(): JsonValue {\n        let arr = JsonArray()",
              "successors": [
                {
                  "id": 3,
                  "label": "        for (i in this) {\n            arr.add(i.toJsonValue())\n        }",
                  "successors": [
                    {
                      "id": 4,
                      "label": "        return arr\n    }",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "simplified_code": [
        {
          "lineno": 100,
          "line": "extend<T> Array<T> <: ToJsonValue where T <: ToJsonValue {"
        },
        {
          "lineno": 108,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "extend<T> Array<T> <: ToJsonValue where T <: ToJsonValue {\n}",
          "successors": []
        }
      ]
    },
    {
      "name": "ArrayList<T>",
      "type": "class",
      "start_line": 110,
      "end_line": 118,
      "functions": [
        {
          "name": "toJsonValue",
          "type": "function",
          "start_line": 111,
          "end_line": 117,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 111,
              "line": "    public func toJsonValue(): JsonValue {"
            },
            {
              "lineno": 112,
              "line": "        let arr = JsonArray()"
            },
            {
              "lineno": 113,
              "line": "        for (i in this) {"
            },
            {
              "lineno": 114,
              "line": "            arr.add(i.toJsonValue())"
            },
            {
              "lineno": 115,
              "line": "        }"
            },
            {
              "lineno": 116,
              "line": "        return arr"
            },
            {
              "lineno": 117,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    public func toJsonValue(): JsonValue {\n        let arr = JsonArray()",
              "successors": [
                {
                  "id": 2,
                  "label": "        for (i in this) {\n            arr.add(i.toJsonValue())\n        }",
                  "successors": [
                    {
                      "id": 3,
                      "label": "        return arr",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "simplified_code": [
        {
          "lineno": 110,
          "line": "extend<T> ArrayList<T> <: ToJsonValue where T <: ToJsonValue {"
        },
        {
          "lineno": 118,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "extend<T> ArrayList<T> <: ToJsonValue where T <: ToJsonValue {\n}",
          "successors": []
        }
      ]
    },
    {
      "name": "LinkedList<T>",
      "type": "class",
      "start_line": 120,
      "end_line": 128,
      "functions": [
        {
          "name": "toJsonValue",
          "type": "function",
          "start_line": 121,
          "end_line": 127,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 121,
              "line": "    public func toJsonValue(): JsonValue {"
            },
            {
              "lineno": 122,
              "line": "        let arr = JsonArray()"
            },
            {
              "lineno": 123,
              "line": "        for (i in this) {"
            },
            {
              "lineno": 124,
              "line": "            arr.add(i.toJsonValue())"
            },
            {
              "lineno": 125,
              "line": "        }"
            },
            {
              "lineno": 126,
              "line": "        return arr"
            },
            {
              "lineno": 127,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    public func toJsonValue(): JsonValue {\n        let arr = JsonArray()",
              "successors": [
                {
                  "id": 3,
                  "label": "        for (i in this) {\n            arr.add(i.toJsonValue())\n        }",
                  "successors": [
                    {
                      "id": 4,
                      "label": "        return arr",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "simplified_code": [
        {
          "lineno": 120,
          "line": "extend<T> LinkedList<T> <: ToJsonValue where T <: ToJsonValue {"
        },
        {
          "lineno": 128,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "extend<T> LinkedList<T> <: ToJsonValue where T <: ToJsonValue {\n}",
          "successors": []
        }
      ]
    },
    {
      "name": "Option<K>",
      "type": "class",
      "start_line": 138,
      "end_line": 145,
      "functions": [
        {
          "name": "toJsonValue",
          "type": "function",
          "start_line": 139,
          "end_line": 144,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 139,
              "line": "    public func toJsonValue(): JsonValue {"
            },
            {
              "lineno": 140,
              "line": "        match (this) {"
            },
            {
              "lineno": 141,
              "line": "            case Some(v) => return matchValue(v)"
            },
            {
              "lineno": 142,
              "line": "            case None => return JsonNull()"
            },
            {
              "lineno": 143,
              "line": "        }"
            },
            {
              "lineno": 144,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    public func toJsonValue(): JsonValue {\n        match (this) {",
              "successors": [
                {
                  "id": 3,
                  "label": "            case Some(v) => return matchValue(v)",
                  "successors": []
                },
                {
                  "id": 4,
                  "label": "            case None => return JsonNull()",
                  "successors": []
                }
              ]
            }
          ]
        }
      ],
      "simplified_code": [
        {
          "lineno": 138,
          "line": "extend<K> Option<K> <: ToJsonValue {"
        },
        {
          "lineno": 145,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "extend<K> Option<K> <: ToJsonValue {\n}",
          "successors": []
        }
      ]
    },
    {
      "name": "TreeMap<K, V>",
      "type": "class",
      "start_line": 148,
      "end_line": 158,
      "functions": [
        {
          "name": "toJsonValue",
          "type": "function",
          "start_line": 149,
          "end_line": 157,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 149,
              "line": "    public func toJsonValue(): JsonValue {"
            },
            {
              "lineno": 150,
              "line": "        let obj = JsonObject()"
            },
            {
              "lineno": 151,
              "line": "        "
            },
            {
              "lineno": 152,
              "line": "        for ((k,v) in this) {"
            },
            {
              "lineno": 153,
              "line": "            obj.put(k.toString(), matchValue(v))"
            },
            {
              "lineno": 154,
              "line": "        }"
            },
            {
              "lineno": 155,
              "line": ""
            },
            {
              "lineno": 156,
              "line": "        return obj"
            },
            {
              "lineno": 157,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    public func toJsonValue(): JsonValue {\n        let obj = JsonObject()",
              "successors": [
                {
                  "id": 2,
                  "label": "        for ((k,v) in this) {\n            obj.put(k.toString(), matchValue(v))\n        }",
                  "successors": [
                    {
                      "id": 3,
                      "label": "        return obj",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "simplified_code": [
        {
          "lineno": 148,
          "line": "extend<K, V> TreeMap<K, V> <: ToJsonValue where K <: ToString & Equatable<K> {"
        },
        {
          "lineno": 158,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "extend<K, V> TreeMap<K, V> <: ToJsonValue where K <: ToString & Equatable<K> {\n}",
          "successors": []
        }
      ]
    },
    {
      "name": "HashMap<K, V>",
      "type": "class",
      "start_line": 160,
      "end_line": 170,
      "functions": [
        {
          "name": "toJsonValue",
          "type": "function",
          "start_line": 161,
          "end_line": 169,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 161,
              "line": "    public func toJsonValue(): JsonValue {"
            },
            {
              "lineno": 162,
              "line": "        let obj = JsonObject()"
            },
            {
              "lineno": 163,
              "line": "        "
            },
            {
              "lineno": 164,
              "line": "        for ((k,v) in this) {"
            },
            {
              "lineno": 165,
              "line": "            obj.put(k.toString(), matchValue(v))"
            },
            {
              "lineno": 166,
              "line": "        }"
            },
            {
              "lineno": 167,
              "line": ""
            },
            {
              "lineno": 168,
              "line": "        return obj"
            },
            {
              "lineno": 169,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    public func toJsonValue(): JsonValue {\n        let obj = JsonObject()",
              "successors": [
                {
                  "id": 2,
                  "label": "        for ((k,v) in this) {\n            obj.put(k.toString(), matchValue(v))\n        }",
                  "successors": [
                    {
                      "id": 3,
                      "label": "        return obj",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "simplified_code": [
        {
          "lineno": 160,
          "line": "extend<K, V> HashMap<K, V> <: ToJsonValue where K <: ToString & Equatable<K> {"
        },
        {
          "lineno": 170,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "extend<K, V> HashMap<K, V> <: ToJsonValue where K <: ToString & Equatable<K> {\n}",
          "successors": []
        }
      ]
    }
  ],
  "simplified_code": [
    {
      "lineno": 1,
      "line": "package json_cj.helper"
    },
    {
      "lineno": 2,
      "line": ""
    },
    {
      "lineno": 3,
      "line": "import std.collection.*"
    },
    {
      "lineno": 4,
      "line": "import encoding.json.*"
    },
    {
      "lineno": 5,
      "line": ""
    },
    {
      "lineno": 9,
      "line": ""
    },
    {
      "lineno": 15,
      "line": ""
    },
    {
      "lineno": 21,
      "line": ""
    },
    {
      "lineno": 27,
      "line": ""
    },
    {
      "lineno": 33,
      "line": ""
    },
    {
      "lineno": 39,
      "line": ""
    },
    {
      "lineno": 45,
      "line": ""
    },
    {
      "lineno": 51,
      "line": ""
    },
    {
      "lineno": 57,
      "line": ""
    },
    {
      "lineno": 63,
      "line": ""
    },
    {
      "lineno": 69,
      "line": ""
    },
    {
      "lineno": 75,
      "line": ""
    },
    {
      "lineno": 81,
      "line": ""
    },
    {
      "lineno": 87,
      "line": ""
    },
    {
      "lineno": 93,
      "line": ""
    },
    {
      "lineno": 99,
      "line": ""
    },
    {
      "lineno": 109,
      "line": ""
    },
    {
      "lineno": 119,
      "line": ""
    },
    {
      "lineno": 129,
      "line": ""
    },
    {
      "lineno": 137,
      "line": ""
    },
    {
      "lineno": 146,
      "line": ""
    },
    {
      "lineno": 147,
      "line": ""
    },
    {
      "lineno": 159,
      "line": ""
    },
    {
      "lineno": 171,
      "line": ""
    },
    {
      "lineno": 175,
      "line": ""
    },
    {
      "lineno": 179,
      "line": ""
    }
  ],
  "blocks": [
    {
      "id": 1,
      "label": "package json_cj.helper\nimport std.collection.*\nimport encoding.json.*",
      "successors": []
    }
  ]
}