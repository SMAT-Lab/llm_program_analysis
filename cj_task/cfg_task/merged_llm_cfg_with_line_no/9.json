{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 25,
  "functions": [],
  "classes": [
    {
      "name": "StructToJsonFunctionGenerator",
      "type": "class",
      "start_line": 6,
      "end_line": 25,
      "functions": [
        {
          "name": "generate",
          "type": "function",
          "start_line": 8,
          "end_line": 24,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 8,
              "line": "    public func generate(context: Context): Unit {"
            },
            {
              "lineno": 9,
              "line": "        if (!findInterface(\"ToJson\", context.structDecl)) {"
            },
            {
              "lineno": 10,
              "line": "            return"
            },
            {
              "lineno": 11,
              "line": "        }"
            },
            {
              "lineno": 12,
              "line": "        let fromJsonFunc = FuncDecl(quote("
            },
            {
              "lineno": 13,
              "line": "            public static func fromJson(jv: JsonValue): DataModel {"
            },
            {
              "lineno": 14,
              "line": "                return DataModel.fromJson(jv)"
            },
            {
              "lineno": 15,
              "line": "            }"
            },
            {
              "lineno": 16,
              "line": "        ))"
            },
            {
              "lineno": 17,
              "line": "        context.structDecl.body.decls.append(fromJsonFunc)"
            },
            {
              "lineno": 18,
              "line": "        let toJsonFunc = FuncDecl(quote("
            },
            {
              "lineno": 19,
              "line": "            public func toJson(): JsonValue {"
            },
            {
              "lineno": 20,
              "line": "                return this.serialize().toJson()"
            },
            {
              "lineno": 21,
              "line": "            }"
            },
            {
              "lineno": 22,
              "line": "        ))"
            },
            {
              "lineno": 23,
              "line": "        context.structDecl.body.decls.append(toJsonFunc)"
            },
            {
              "lineno": 24,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    public func generate(context: Context): Unit {\n        if (!findInterface(\"ToJson\", context.structDecl)) {\n            return",
              "successors": [
                {
                  "id": 3,
                  "label": "        let fromJsonFunc = FuncDecl(quote(\n            public static func fromJson(jv: JsonValue): DataModel {\n                return DataModel.fromJson(jv)\n            }\n        ))\n        context.structDecl.body.decls.append(fromJsonFunc)\n        let toJsonFunc = FuncDecl(quote(\n            public func toJson(): JsonValue {\n                return this.serialize().toJson()\n            }\n        ))\n        context.structDecl.body.decls.append(toJsonFunc)\n    }",
                  "successors": []
                }
              ]
            }
          ]
        }
      ],
      "simplified_code": [
        {
          "lineno": 6,
          "line": "class StructToJsonFunctionGenerator <: Generator {"
        },
        {
          "lineno": 7,
          "line": ""
        },
        {
          "lineno": 25,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "class StructToJsonFunctionGenerator <: Generator {\n",
          "successors": [
            {
              "id": 3,
              "label": "}",
              "successors": []
            }
          ]
        }
      ]
    }
  ],
  "simplified_code": [
    {
      "lineno": 1,
      "line": "macro package Macro_JsonSerializable.macros"
    },
    {
      "lineno": 2,
      "line": ""
    },
    {
      "lineno": 3,
      "line": "import std.ast.*"
    },
    {
      "lineno": 4,
      "line": ""
    },
    {
      "lineno": 5,
      "line": "// 结构体 fromJson、toJson 方法生成器"
    }
  ],
  "blocks": [
    {
      "id": 1,
      "label": "macro package Macro_JsonSerializable.macros\n\nimport std.ast.*\n\n// 结构体 fromJson、toJson 方法生成器",
      "successors": []
    }
  ]
}