{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 26,
  "functions": [
    {
      "name": "main",
      "type": "function",
      "start_line": 20,
      "end_line": 26,
      "functions": [],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 20,
          "line": "main() {"
        },
        {
          "lineno": 21,
          "line": "    var tree = Node(r'A',"
        },
        {
          "lineno": 22,
          "line": "        left: Node(r'B', left: Node(r'C', right: Node(r'D'))),"
        },
        {
          "lineno": 23,
          "line": "        right: Node(r'E', left: Node(r'F'), right: Node(r'G')))"
        },
        {
          "lineno": 24,
          "line": "    println(tree.param)"
        },
        {
          "lineno": 25,
          "line": "    tree.param = 128"
        },
        {
          "lineno": 26,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "main() {\nvar tree = Node(r'A',\n    left: Node(r'B', left: Node(r'C', right: Node(r'D'))),\n    right: Node(r'E', left: Node(r'F'), right: Node(r'G')))",
          "successors": [
            {
              "id": 3,
              "label": "println(tree.param)\ntree.param = 128\n}",
              "successors": []
            }
          ]
        }
      ]
    }
  ],
  "classes": [
    {
      "name": "Node",
      "type": "class",
      "start_line": 3,
      "end_line": 18,
      "functions": [
        {
          "name": "Node",
          "type": "function",
          "start_line": 5,
          "end_line": 7,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 5,
              "line": "    public Node(private var name: Rune,"
            },
            {
              "lineno": 6,
              "line": "        private let left!: ?Node = None,"
            },
            {
              "lineno": 7,
              "line": "        private let right!: ?Node = None) {}"
            }
          ],
          "blocks": []
        },
        {
          "name": "param.set",
          "type": "function",
          "start_line": 10,
          "end_line": 15,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 10,
              "line": "        set(number) {"
            },
            {
              "lineno": 11,
              "line": "            value = number"
            },
            {
              "lineno": 12,
              "line": "            println(\"${name}: ${value}\")"
            },
            {
              "lineno": 13,
              "line": "            left?.param = number / 2"
            },
            {
              "lineno": 14,
              "line": "            right?.param = number / 2"
            },
            {
              "lineno": 15,
              "line": "        }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "        set(number) {\n            value = number\n            println(\"${name}: ${value}\")\n            left?.param = number / 2\n            right?.param = number / 2\n        }",
              "successors": []
            }
          ]
        },
        {
          "name": "param.get",
          "type": "function",
          "start_line": 16,
          "end_line": 16,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 16,
              "line": "        get() { value }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "        get() { value }",
              "successors": []
            }
          ]
        }
      ],
      "simplified_code": [
        {
          "lineno": 3,
          "line": "class Node {"
        },
        {
          "lineno": 4,
          "line": "    private var value: Int64 = 0"
        },
        {
          "lineno": 8,
          "line": ""
        },
        {
          "lineno": 9,
          "line": "    public mut prop param: Int64 {"
        },
        {
          "lineno": 17,
          "line": "    }"
        },
        {
          "lineno": 18,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "class Node {\n    private var value: Int64 = 0\n\n\n    public mut prop param: Int64 {\n    }\n}",
          "successors": []
        }
      ]
    }
  ],
  "simplified_code": [
    {
      "lineno": 1,
      "line": "// 基于 class 实现二叉树，基于 prop 特性实现各节点参数同步更新"
    },
    {
      "lineno": 2,
      "line": "// cjc version: 0.53.13"
    },
    {
      "lineno": 19,
      "line": ""
    }
  ],
  "blocks": [
    {
      "id": 1,
      "label": "// \\\\u57fa\\\\u4e8e class \\\\u5b9e\\\\u73b0\\\\u4e8c\\\\u53c9\\\\u6811\\\\uff0c\\\\u57fa\\\\u4e8e prop \\\\u7279\\\\u6027\\\\u5b9e\\\\u73b0\\\\u5404\\\\u8282\\\\u70b9\\\\u53c2\\\\u6570\\\\u540c\\\\u6b65\\\\u66f4\\\\u65b0\n// cjc version: 0.53.13",
      "successors": [
        {
          "id": 3,
          "label": "",
          "successors": []
        }
      ]
    }
  ]
}