{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 30,
  "functions": [
    {
      "name": "main",
      "type": "function",
      "start_line": 5,
      "end_line": 30,
      "functions": [],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 5,
          "line": "main(): Int64 {"
        },
        {
          "lineno": 6,
          "line": "    let fut = spawn { =>"
        },
        {
          "lineno": 7,
          "line": "        mon.lock()"
        },
        {
          "lineno": 8,
          "line": "        while (flag) {"
        },
        {
          "lineno": 9,
          "line": "            println(\"New thread: before wait\")"
        },
        {
          "lineno": 10,
          "line": "            // Monitor 对象执行 wait 时，必须在锁的保护下进行，"
        },
        {
          "lineno": 11,
          "line": "            // 否则 wait 中释放锁的操作会抛出异常。"
        },
        {
          "lineno": 12,
          "line": "            mon.wait()"
        },
        {
          "lineno": 13,
          "line": "            println(\"New thread: after wait\")"
        },
        {
          "lineno": 14,
          "line": "        }"
        },
        {
          "lineno": 15,
          "line": "        mon.unlock()"
        },
        {
          "lineno": 16,
          "line": "    }"
        },
        {
          "lineno": 17,
          "line": "    // sleep for 10ms, make sure the new thread can be executed"
        },
        {
          "lineno": 18,
          "line": "    sleep(10 * Duration.millisecond)"
        },
        {
          "lineno": 19,
          "line": "    mon.lock()"
        },
        {
          "lineno": 20,
          "line": "    println(\"Main thread: set flag\")"
        },
        {
          "lineno": 21,
          "line": "    flag = false"
        },
        {
          "lineno": 22,
          "line": "    mon.unlock()"
        },
        {
          "lineno": 23,
          "line": "    mon.lock()"
        },
        {
          "lineno": 24,
          "line": "    println(\"Main thread: notify\")"
        },
        {
          "lineno": 25,
          "line": "    mon.notify()"
        },
        {
          "lineno": 26,
          "line": "    mon.unlock()"
        },
        {
          "lineno": 27,
          "line": "    // wait for the new thread nished"
        },
        {
          "lineno": 28,
          "line": "    fut.get()"
        },
        {
          "lineno": 29,
          "line": "    return 0"
        },
        {
          "lineno": 30,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "main(): Int64 {\n    let fut = spawn { =>\n        mon.lock()",
          "successors": [
            {
              "id": 3,
              "label": "        while (flag) {\n            println(\"New thread: before wait\")\n            // Monitor 对象执行 wait 时，必须在锁的保护下进行，\n            // 否则 wait 中释放锁的操作会抛出异常。\n            mon.wait()\n            println(\"New thread: after wait\")\n        }",
              "successors": [
                {
                  "id": 4,
                  "label": "        mon.unlock()\n    }",
                  "successors": [
                    {
                      "id": 6,
                      "label": "    sleep(10 * Duration.millisecond)\n    mon.lock()\n    println(\"Main thread: set flag\")\n    flag = false\n    mon.unlock()",
                      "successors": [
                        {
                          "id": 8,
                          "label": "    mon.lock()\n    println(\"Main thread: notify\")\n    mon.notify()\n    mon.unlock()\n    fut.get()\n    return 0",
                          "successors": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ],
  "classes": [],
  "simplified_code": [
    {
      "lineno": 1,
      "line": "from std import sync.*"
    },
    {
      "lineno": 2,
      "line": "from std import time.*"
    },
    {
      "lineno": 3,
      "line": "var mon = Monitor()"
    },
    {
      "lineno": 4,
      "line": "var flag: Bool = true"
    }
  ],
  "blocks": [
    {
      "id": 1,
      "label": "from std import sync.*\nfrom std import time.*\nvar mon = Monitor()\nvar flag: Bool = true",
      "successors": []
    }
  ]
}