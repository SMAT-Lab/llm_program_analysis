{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 55,
  "functions": [],
  "classes": [
    {
      "name": "RepeaterMode",
      "type": "class",
      "start_line": 12,
      "end_line": 38,
      "functions": [
        {
          "name": "config_get",
          "type": "function",
          "start_line": 18,
          "end_line": 36,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 18,
              "line": "        get() {"
            },
            {
              "lineno": 19,
              "line": "            match (this) {"
            },
            {
              "lineno": 20,
              "line": "                case Leading(interval) => RepeaterConfig("
            },
            {
              "lineno": 21,
              "line": "                    interval: Duration.millisecond * interval,"
            },
            {
              "lineno": 22,
              "line": "                    leading: true,"
            },
            {
              "lineno": 23,
              "line": "                    trailing: false"
            },
            {
              "lineno": 24,
              "line": "                )"
            },
            {
              "lineno": 25,
              "line": "                case Trailing(interval) => RepeaterConfig("
            },
            {
              "lineno": 26,
              "line": "                    interval: Duration.millisecond * interval,"
            },
            {
              "lineno": 27,
              "line": "                    leading: false,"
            },
            {
              "lineno": 28,
              "line": "                    trailing: true"
            },
            {
              "lineno": 29,
              "line": "                )"
            },
            {
              "lineno": 30,
              "line": "                case Both(interval) => RepeaterConfig("
            },
            {
              "lineno": 31,
              "line": "                    interval: Duration.millisecond * interval,"
            },
            {
              "lineno": 32,
              "line": "                    leading: true,"
            },
            {
              "lineno": 33,
              "line": "                    trailing: true"
            },
            {
              "lineno": 34,
              "line": "                )"
            },
            {
              "lineno": 35,
              "line": "            }"
            },
            {
              "lineno": 36,
              "line": "        }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "        get() {\n            match (this) {",
              "successors": [
                {
                  "id": 3,
                  "label": "                case Leading(interval) => RepeaterConfig(\n                    interval: Duration.millisecond * interval,\n                    leading: true,\n                    trailing: false\n                )",
                  "successors": []
                },
                {
                  "id": 4,
                  "label": "                case Trailing(interval) => RepeaterConfig(\n                    interval: Duration.millisecond * interval,\n                    leading: false,\n                    trailing: true\n                )",
                  "successors": []
                },
                {
                  "id": 5,
                  "label": "                case Both(interval) => RepeaterConfig(\n                    interval: Duration.millisecond * interval,\n                    leading: true,\n                    trailing: true\n                )",
                  "successors": []
                }
              ]
            }
          ]
        }
      ],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 12,
          "line": "public enum RepeaterMode {"
        },
        {
          "lineno": 13,
          "line": "    | Leading(Int)"
        },
        {
          "lineno": 14,
          "line": "    | Trailing(Int)"
        },
        {
          "lineno": 15,
          "line": "    | Both(Int)"
        },
        {
          "lineno": 16,
          "line": ""
        },
        {
          "lineno": 17,
          "line": "    public prop config: RepeaterConfig {"
        },
        {
          "lineno": 37,
          "line": "    }"
        },
        {
          "lineno": 38,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "public enum RepeaterMode {\n    | Leading(Int)\n    | Trailing(Int)\n    | Both(Int)\n\n    public prop config: RepeaterConfig {\n    }\n}",
          "successors": []
        }
      ]
    },
    {
      "name": "RepeaterConfig",
      "type": "class",
      "start_line": 43,
      "end_line": 54,
      "functions": [],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 43,
          "line": "public struct RepeaterConfig {"
        },
        {
          "lineno": 44,
          "line": "    /**"
        },
        {
          "lineno": 45,
          "line": "     * interval 等待间隔时间(毫秒)"
        },
        {
          "lineno": 46,
          "line": "     * leading在开头调用"
        },
        {
          "lineno": 47,
          "line": "     * trailing在最后调用"
        },
        {
          "lineno": 48,
          "line": "     */"
        },
        {
          "lineno": 49,
          "line": "    public RepeaterConfig("
        },
        {
          "lineno": 50,
          "line": "        var interval!: Duration,"
        },
        {
          "lineno": 51,
          "line": "        var leading!: Bool = false,"
        },
        {
          "lineno": 52,
          "line": "        var trailing!: Bool = true"
        },
        {
          "lineno": 53,
          "line": "    ) {}"
        },
        {
          "lineno": 54,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "public struct RepeaterConfig {\n    /**\n     * interval 等待间隔时间(毫秒)\n     * leading在开头调用\n     * trailing在最后调用\n     */\n    public RepeaterConfig(\n        var interval!: Duration,\n        var leading!: Bool = false,\n        var trailing!: Bool = true\n    ) {}\n}",
          "successors": []
        }
      ]
    }
  ],
  "simplified_code": [
    {
      "lineno": 1,
      "line": "// cjlint-ignore -start !G.NAM.02"
    },
    {
      "lineno": 2,
      "line": "package cj_debounce_throttle.repeater"
    },
    {
      "lineno": 3,
      "line": ""
    },
    {
      "lineno": 4,
      "line": "/**"
    },
    {
      "lineno": 5,
      "line": " * 任务类型"
    },
    {
      "lineno": 6,
      "line": " */"
    },
    {
      "lineno": 7,
      "line": "public type RepeaterTask = () -> Unit"
    },
    {
      "lineno": 8,
      "line": ""
    },
    {
      "lineno": 9,
      "line": "/**"
    },
    {
      "lineno": 10,
      "line": " * 模式,时间为毫秒"
    },
    {
      "lineno": 11,
      "line": " */"
    },
    {
      "lineno": 39,
      "line": ""
    },
    {
      "lineno": 40,
      "line": "/**"
    },
    {
      "lineno": 41,
      "line": " * 属性配置"
    },
    {
      "lineno": 42,
      "line": " */"
    },
    {
      "lineno": 55,
      "line": "// cjlint-ignore -end"
    }
  ],
  "blocks": [
    {
      "id": 1,
      "label": "// cjlint-ignore -start !G.NAM.02\npackage cj_debounce_throttle.repeater",
      "successors": [
        {
          "id": 3,
          "label": "\n/**\n * 任務類型\n */\npublic type RepeaterTask = () -> Unit",
          "successors": [
            {
              "id": 5,
              "label": "\n/**\n * 模式,時間為毫秒\n */\n\n/**\n * 屬性配置\n */",
              "successors": [
                {
                  "id": 7,
                  "label": "// cjlint-ignore -end",
                  "successors": []
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}