{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 49,
  "functions": [
    {
      "name": "f_gold",
      "type": "function",
      "start_line": 2,
      "end_line": 17,
      "functions": [],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 2,
          "line": "func f_gold (seq:String):String{"
        },
        {
          "lineno": 3,
          "line": "  let n = seq.size"
        },
        {
          "lineno": 4,
          "line": "  if ( n >= 9 ) {return \"-1\"}"
        },
        {
          "lineno": 5,
          "line": "  let result = Array<Char>(n+1,item:' ')"
        },
        {
          "lineno": 6,
          "line": "  var count:Int32 = 1"
        },
        {
          "lineno": 7,
          "line": "  for(i in 0..n+1){"
        },
        {
          "lineno": 8,
          "line": "    if ( i == n || seq[i] == b'I' ) {"
        },
        {
          "lineno": 9,
          "line": "      for (j in i-1..-2:-1) {"
        },
        {
          "lineno": 10,
          "line": "        result [ j + 1 ] = Char( Int32(b'0') + count)"
        },
        {
          "lineno": 11,
          "line": "        count++"
        },
        {
          "lineno": 12,
          "line": "        if ( j >= 0 && seq[j] == b'I' ) {break}"
        },
        {
          "lineno": 13,
          "line": "      }"
        },
        {
          "lineno": 14,
          "line": "    }"
        },
        {
          "lineno": 15,
          "line": "  }"
        },
        {
          "lineno": 16,
          "line": "  return String(result)"
        },
        {
          "lineno": 17,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "func f_gold (seq:String):String{\n  let n = seq.size\nif ( n >= 9 ) {return \"-1\"}",
          "successors": [
            {
              "id": 3,
              "label": "let result = Array<Char>(n+1,item:' ')\n  var count:Int32 = 1\nfor(i in 0..n+1){\n    if ( i == n || seq[i] == b'I' ) {\n      for (j in i-1..-2:-1) {\n        result [ j + 1 ] = Char( Int32(b'0') + count)\n        count++\n        if ( j >= 0 && seq[j] == b'I' ) {break}\n      }\n    }\n  }",
              "successors": [
                {
                  "id": 5,
                  "label": "return String(result)\n}",
                  "successors": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "main",
      "type": "function",
      "start_line": 19,
      "end_line": 49,
      "functions": [],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 19,
          "line": "main(){"
        },
        {
          "lineno": 20,
          "line": "    var n_success = 0"
        },
        {
          "lineno": 21,
          "line": "    let param0 = ArrayList<String>()"
        },
        {
          "lineno": 22,
          "line": "    param0.append(\"D\")"
        },
        {
          "lineno": 23,
          "line": "    param0.append(\"I\")"
        },
        {
          "lineno": 24,
          "line": "    param0.append(\"DD\")"
        },
        {
          "lineno": 25,
          "line": "    param0.append(\"II\")"
        },
        {
          "lineno": 26,
          "line": "    param0.append(\"DIDI\")"
        },
        {
          "lineno": 27,
          "line": "    param0.append(\"IIDDD\")"
        },
        {
          "lineno": 28,
          "line": "    param0.append(\"DDIDDIID\")"
        },
        {
          "lineno": 29,
          "line": "    param0.append(\"176297\")"
        },
        {
          "lineno": 30,
          "line": "    param0.append(\"1\")"
        },
        {
          "lineno": 31,
          "line": "    param0.append(\"XHkhZq\")"
        },
        {
          "lineno": 32,
          "line": "    let param1 = ArrayList<String>()"
        },
        {
          "lineno": 33,
          "line": "    param1.append(\"D\")"
        },
        {
          "lineno": 34,
          "line": "    param1.append(\"I\")"
        },
        {
          "lineno": 35,
          "line": "    param1.append(\"DD\")"
        },
        {
          "lineno": 36,
          "line": "    param1.append(\"II\")"
        },
        {
          "lineno": 37,
          "line": "    param1.append(\"DIDI\")"
        },
        {
          "lineno": 38,
          "line": "    param1.append(\"IIDDD\")"
        },
        {
          "lineno": 39,
          "line": "    param1.append(\"DDIDDIID\")"
        },
        {
          "lineno": 40,
          "line": "    param1.append(\"176297\")"
        },
        {
          "lineno": 41,
          "line": "    param1.append(\"1\")"
        },
        {
          "lineno": 42,
          "line": "    param1.append(\"XHkhZq\")"
        },
        {
          "lineno": 43,
          "line": "    for (i in 0..param0.size){"
        },
        {
          "lineno": 44,
          "line": "        if (f_gold(param0[i]) == f_filled(param1[i])){"
        },
        {
          "lineno": 45,
          "line": "            n_success += 1"
        },
        {
          "lineno": 46,
          "line": "        }"
        },
        {
          "lineno": 47,
          "line": "    }"
        },
        {
          "lineno": 48,
          "line": "    println(\"#Results: ${n_success}, ${param0.size}\\n\")"
        },
        {
          "lineno": 49,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "main(){\n    var n_success = 0\n    let param0 = ArrayList<String>()\n    param0.append(\"D\")\n    param0.append(\"I\")\n    param0.append(\"DD\")\n    param0.append(\"II\")\n    param0.append(\"DIDI\")\n    param0.append(\"IIDDD\")\n    param0.append(\"DDIDDIID\")\n    param0.append(\"176297\")\n    param0.append(\"1\")\n    param0.append(\"XHkhZq\")\n    let param1 = ArrayList<String>()\nparam1.append(\"D\")\nparam1.append(\"I\")\nparam1.append(\"DD\")\nparam1.append(\"II\")\nparam1.append(\"DIDI\")\nparam1.append(\"IIDDD\")\nparam1.append(\"DDIDDIID\")\nparam1.append(\"176297\")\nparam1.append(\"1\")\nparam1.append(\"XHkhZq\")",
          "successors": [
            {
              "id": 3,
              "label": "for (i in 0..param0.size){\n    if (f_gold(param0[i]) == f_filled(param1[i])){\n        n_success += 1\n    }\n}",
              "successors": [
                {
                  "id": 4,
                  "label": "println(\"#Results: ${n_success}, ${param0.size}\\n\")\n}",
                  "successors": []
                }
              ]
            }
          ]
        }
      ]
    }
  ],
  "classes": [],
  "simplified_code": [
    {
      "lineno": 1,
      "line": " from std import collection.*"
    },
    {
      "lineno": 18,
      "line": "//TOFILL"
    }
  ],
  "blocks": [
    {
      "id": 1,
      "label": " from std import collection.*\n//TOFILL",
      "successors": []
    }
  ]
}