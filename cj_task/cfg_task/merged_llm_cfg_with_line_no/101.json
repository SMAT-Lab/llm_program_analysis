{
  "name": "openai_chat",
  "type": "CFG",
  "start_line": 1,
  "end_line": 55,
  "functions": [
    {
      "name": "cli_chat",
      "type": "function",
      "start_line": 5,
      "end_line": 40,
      "functions": [],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 5,
          "line": "func cli_chat(env_info: EnvInfo, stream!: Bool) {"
        },
        {
          "lineno": 6,
          "line": "  println(\"\\n欢迎使用AI聊天机器人，输入exit或者quit退出，输入clear清空历史记录\");"
        },
        {
          "lineno": 7,
          "line": "  var history: ArrayList<(String, String)> = ArrayList<(String, String)>();"
        },
        {
          "lineno": 8,
          "line": "  while (true) {"
        },
        {
          "lineno": 9,
          "line": "    print(\"Input: \");"
        },
        {
          "lineno": 10,
          "line": "    var prompt: String = \"\";"
        },
        {
          "lineno": 11,
          "line": "    match(Console.stdIn.readln()) {"
        },
        {
          "lineno": 12,
          "line": "      case Some(str1: String) => prompt=str1;"
        },
        {
          "lineno": 13,
          "line": "      case None => continue;"
        },
        {
          "lineno": 14,
          "line": "    }"
        },
        {
          "lineno": 15,
          "line": "    if (prompt == \"exit\" || prompt == \"exit()\") {"
        },
        {
          "lineno": 16,
          "line": "      break;"
        },
        {
          "lineno": 17,
          "line": "    }"
        },
        {
          "lineno": 18,
          "line": "    if (prompt == \"clear\") {"
        },
        {
          "lineno": 19,
          "line": "      history.clear();"
        },
        {
          "lineno": 20,
          "line": "      println(\"Output: 已清理历史对话信息。\");"
        },
        {
          "lineno": 21,
          "line": "      continue;"
        },
        {
          "lineno": 22,
          "line": "    }"
        },
        {
          "lineno": 23,
          "line": "    print(\"ChatBox: \")"
        },
        {
          "lineno": 24,
          "line": "    let response_option: Option<String> = if (stream) {"
        },
        {
          "lineno": 25,
          "line": "      stream_chat(prompt, env_info, history);"
        },
        {
          "lineno": 26,
          "line": "    } else {"
        },
        {
          "lineno": 27,
          "line": "      chat(prompt, env_info, history);"
        },
        {
          "lineno": 28,
          "line": "    }"
        },
        {
          "lineno": 29,
          "line": "    match (response_option) {"
        },
        {
          "lineno": 30,
          "line": "      case Some(response: String) => "
        },
        {
          "lineno": 31,
          "line": "        if (stream) {"
        },
        {
          "lineno": 32,
          "line": "           println(\"\") ;"
        },
        {
          "lineno": 33,
          "line": "        } else {"
        },
        {
          "lineno": 34,
          "line": "            println(\"${response}\");"
        },
        {
          "lineno": 35,
          "line": "        }"
        },
        {
          "lineno": 36,
          "line": "        history.append((prompt, response));"
        },
        {
          "lineno": 37,
          "line": "      case None => println(\"遇到错误，即将退出\"); break;"
        },
        {
          "lineno": 38,
          "line": "    }"
        },
        {
          "lineno": 39,
          "line": "  }"
        },
        {
          "lineno": 40,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "func cli_chat(env_info: EnvInfo, stream!: Bool) {\n  println(\"\\n欢迎使用AI聊天机器人，输入exit或者quit退出，输入clear清空历史记录\");\n  var history: ArrayList<(String, String)> = ArrayList<(String, String)>();",
          "successors": [
            {
              "id": 2,
              "label": "while (true) {",
              "successors": [
                {
                  "id": 3,
                  "label": "print(\"Input: \");\nvar prompt: String = \"\";\nmatch(Console.stdIn.readln()) {\n  case Some(str1: String) => prompt=str1;\n  case None => continue;",
                  "successors": [
                    {
                      "id": 4,
                      "label": "if (prompt == \"exit\" || prompt == \"exit()\") {\n  break;\n}",
                      "successors": []
                    },
                    {
                      "id": 5,
                      "label": "if (prompt == \"clear\") {\n  history.clear();\n  println(\"Output: 已清理历史对话信息。\");\n  continue;\n}\nprint(\"ChatBox: \")\nlet response_option: Option<String> = if (stream) {\n  stream_chat(prompt, env_info, history);\n} else {\n  chat(prompt, env_info, history);\n}\nmatch (response_option) {\n  case Some(response: String) => \n    if (stream) {\n      println(\"\") ;\n    } else {\n      println(\"${response}\");\n    }\n    history.append((prompt, response));\n  case None => println(\"遇到错误，即将退出\"); break;\n}",
                      "successors": [
                        {
                          "id": 7,
                          "label": "}\n}",
                          "successors": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "main",
      "type": "function",
      "start_line": 43,
      "end_line": 55,
      "functions": [],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 43,
          "line": "main(args: Array<String>): Int64 {"
        },
        {
          "lineno": 44,
          "line": "  let env_info = load_env_info();"
        },
        {
          "lineno": 45,
          "line": "  var stream: Bool = false;"
        },
        {
          "lineno": 46,
          "line": "  if (args.size == 1) {"
        },
        {
          "lineno": 47,
          "line": "    if (args[0] == \"--stream\") {"
        },
        {
          "lineno": 48,
          "line": "      stream = true;"
        },
        {
          "lineno": 49,
          "line": "    } else {"
        },
        {
          "lineno": 50,
          "line": "      println(\"Warning! you can only use `--stream` to use stream for response.\")"
        },
        {
          "lineno": 51,
          "line": "    }"
        },
        {
          "lineno": 52,
          "line": "  }"
        },
        {
          "lineno": 53,
          "line": "  cli_chat(env_info, stream: stream);"
        },
        {
          "lineno": 54,
          "line": "  return 0"
        },
        {
          "lineno": 55,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "main(args: Array<String>): Int64 {\n  let env_info = load_env_info();\n  var stream: Bool = false;\nif (args.size == 1) {\n    if (args[0] == \"--stream\") {\n      stream = true;\n    } else {\n      println(\"Warning! you can only use `--stream` to use stream for response.\")\n    }\n  }",
          "successors": [
            {
              "id": 3,
              "label": "cli_chat(env_info, stream: stream);\n  return 0",
              "successors": []
            }
          ]
        }
      ]
    }
  ],
  "classes": [],
  "simplified_code": [
    {
      "lineno": 1,
      "line": "package openai_chat"
    },
    {
      "lineno": 2,
      "line": "import std.console.Console"
    },
    {
      "lineno": 3,
      "line": "import std.collection.ArrayList"
    },
    {
      "lineno": 4,
      "line": ""
    },
    {
      "lineno": 41,
      "line": ""
    },
    {
      "lineno": 42,
      "line": ""
    }
  ],
  "blocks": [
    {
      "id": 1,
      "label": "package openai_chat\nimport std.console.Console\nimport std.collection.ArrayList",
      "successors": []
    }
  ]
}