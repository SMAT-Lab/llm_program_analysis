{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 27,
  "functions": [
    {
      "name": "main",
      "type": "function",
      "start_line": 7,
      "end_line": 27,
      "functions": [],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 7,
          "line": "main() {"
        },
        {
          "lineno": 8,
          "line": "    // 常量定义是为编译期数据命名，可用于常量表达式中"
        },
        {
          "lineno": 9,
          "line": "    const N = 100000u32"
        },
        {
          "lineno": 10,
          "line": "    // 变量定义是为运行时数据存储单元命名，以便后续程序引用"
        },
        {
          "lineno": 11,
          "line": "    // 如果需要对这份存储单元进行读/写，可使用 var 定义可变变量"
        },
        {
          "lineno": 12,
          "line": "    var n: UInt32 = 0 // 可以显式指定变量的类型"
        },
        {
          "lineno": 13,
          "line": "    let random = Random() // 如果省略类型标注，则以初值表达式的类型确定变量类型"
        },
        {
          "lineno": 14,
          "line": "    for (_ in 0..N) {"
        },
        {
          "lineno": 15,
          "line": "        // 如果对这份存储单元只读不写，可使用 let 定义不可变变量"
        },
        {
          "lineno": 16,
          "line": "        let x = random.nextFloat64()"
        },
        {
          "lineno": 17,
          "line": "        // 不可变变量的初值在运行时确定，这是它和常量的最大区别"
        },
        {
          "lineno": 18,
          "line": "        let y = random.nextFloat64()"
        },
        {
          "lineno": 19,
          "line": "        // 读取不可变变量的值"
        },
        {
          "lineno": 20,
          "line": "        if ((x - 0.5) ** 2 + (y - 0.5) ** 2 < 0.25) {"
        },
        {
          "lineno": 21,
          "line": "            n++ // 修改可变变量的值"
        },
        {
          "lineno": 22,
          "line": "        }"
        },
        {
          "lineno": 23,
          "line": "    }"
        },
        {
          "lineno": 24,
          "line": "    let pi = Float64(n) / Float64(N) * 4.0"
        },
        {
          "lineno": 25,
          "line": "    println(\"π ≈ ${pi}\")"
        },
        {
          "lineno": 26,
          "line": "    println(\"deviation: ${abs(Float64.PI - pi)}\")"
        },
        {
          "lineno": 27,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "main() {\n    const N = 100000u32\n    var n: UInt32 = 0\n    let random = Random()",
          "successors": [
            {
              "id": 2,
              "label": "for (_ in 0..N) {\n        let x = random.nextFloat64()\n        let y = random.nextFloat64()\n        if ((x - 0.5) ** 2 + (y - 0.5) ** 2 < 0.25) {\n            n++\n        }\n    }",
              "successors": [
                {
                  "id": 3,
                  "label": "let pi = Float64(n) / Float64(N) * 4.0\n    println(\"π ≈ ${pi}\")\n    println(\"deviation: ${abs(Float64.PI - pi)}\")\n}",
                  "successors": []
                }
              ]
            }
          ]
        }
      ]
    }
  ],
  "classes": [],
  "simplified_code": [
    {
      "lineno": 1,
      "line": "// 基于蒙特卡洛算法估算圆周率"
    },
    {
      "lineno": 2,
      "line": "// 涉及特性：常量，变量，可变性，类型转换，幂运算符"
    },
    {
      "lineno": 3,
      "line": "// cjc version: 0.53.13"
    },
    {
      "lineno": 4,
      "line": "import std.random.*"
    },
    {
      "lineno": 5,
      "line": "import std.math.*"
    },
    {
      "lineno": 6,
      "line": ""
    }
  ],
  "blocks": [
    {
      "id": 1,
      "label": "// 基于蒙特卡洛算法估算圆周率\n// 涉及特性：常量，变量，可变性，类型转换，幂运算符\n// cjc version: 0.53.13\nimport std.random.*\nimport std.math.*\n",
      "successors": []
    }
  ]
}