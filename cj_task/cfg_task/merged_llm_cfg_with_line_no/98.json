{
  "name": "cj_debounce_throttle.macros",
  "type": "CFG",
  "start_line": 1,
  "end_line": 34,
  "functions": [
    {
      "name": "Debounce",
      "type": "function",
      "start_line": 15,
      "end_line": 19,
      "functions": [],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 15,
          "line": "public macro Debounce(attr: Tokens, input: Tokens): Tokens {"
        },
        {
          "lineno": 16,
          "line": "    mustBeFunc(input) {"
        },
        {
          "lineno": 17,
          "line": "        funcDecl: FuncDecl => impDebounceOrThrottle(false, attr, funcDecl)"
        },
        {
          "lineno": 18,
          "line": "    }"
        },
        {
          "lineno": 19,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "public macro Debounce(attr: Tokens, input: Tokens): Tokens {\n    mustBeFunc(input) {\n        funcDecl: FuncDecl => impDebounceOrThrottle(false, attr, funcDecl)\n    }\n}",
          "successors": []
        }
      ]
    },
    {
      "name": "Throttle",
      "type": "function",
      "start_line": 30,
      "end_line": 34,
      "functions": [],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 30,
          "line": "public macro Throttle(attr: Tokens, input: Tokens): Tokens {"
        },
        {
          "lineno": 31,
          "line": "    mustBeFunc(input) {"
        },
        {
          "lineno": 32,
          "line": "        funcDecl: FuncDecl => impDebounceOrThrottle(true, attr, funcDecl)"
        },
        {
          "lineno": 33,
          "line": "    }"
        },
        {
          "lineno": 34,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "public macro Throttle(attr: Tokens, input: Tokens): Tokens {\n    mustBeFunc(input) {\n        funcDecl: FuncDecl => impDebounceOrThrottle(true, attr, funcDecl)\n    }",
          "successors": [
            {
              "id": 3,
              "label": "}",
              "successors": []
            }
          ]
        }
      ]
    }
  ],
  "classes": [],
  "simplified_code": [
    {
      "lineno": 1,
      "line": "macro package cj_debounce_throttle.macros"
    },
    {
      "lineno": 2,
      "line": "/**"
    },
    {
      "lineno": 3,
      "line": " * Debounce实现"
    },
    {
      "lineno": 4,
      "line": " * @author unravel"
    },
    {
      "lineno": 5,
      "line": " * @description"
    },
    {
      "lineno": 6,
      "line": ""
    },
    {
      "lineno": 7,
      "line": "    debounce简单实现，高频动作连续触发时，实际动作往后顺移"
    },
    {
      "lineno": 8,
      "line": ""
    },
    {
      "lineno": 9,
      "line": "    使用方式如下"
    },
    {
      "lineno": 10,
      "line": "    300毫秒,开始前和结束后都回调"
    },
    {
      "lineno": 11,
      "line": "    300这个数字是必须的，leading和trailing是可选的。他们三个使用逗号分割"
    },
    {
      "lineno": 12,
      "line": "    leading和trailing都没有时，默认为trailing"
    },
    {
      "lineno": 13,
      "line": "    @Debounce[300,leading, trailing]"
    },
    {
      "lineno": 14,
      "line": " */"
    },
    {
      "lineno": 20,
      "line": ""
    },
    {
      "lineno": 21,
      "line": "/**"
    },
    {
      "lineno": 22,
      "line": " * Throttle实现"
    },
    {
      "lineno": 23,
      "line": " * @author unravel"
    },
    {
      "lineno": 24,
      "line": " * @description"
    },
    {
      "lineno": 25,
      "line": ""
    },
    {
      "lineno": 26,
      "line": "    throttle简单实现，高频动作连续触发时，每隔interval调用一次实际动作"
    },
    {
      "lineno": 27,
      "line": ""
    },
    {
      "lineno": 28,
      "line": "    使用方式和 Debounce 一样"
    },
    {
      "lineno": 29,
      "line": " */"
    }
  ],
  "blocks": [
    {
      "id": 1,
      "label": "macro package cj_debounce_throttle.macros\n/**\n * Debounce实现\n * @author unravel\n * @description\n\n    debounce简单实现，高频动作连续触发时，实际动作往后顺移\n\n    使用方法如下\n    300毫秒,开始前和结束后都回调\n    300这个数字是必须的,leading和trailing是可选的。他们三个使用逗号分隔\n    leading和trailing都没有时，默认为trailing\n    @Debounce[300,leading, trailing]\n */\n/**\n * Throttle实现\n * @author unravel\n * @description\n\n    throttle简单实现，高频动作连续触发时，每隔interval调用一次实际动作\n\n    使用方法和 Debounce 一样\n */",
      "successors": []
    }
  ]
}