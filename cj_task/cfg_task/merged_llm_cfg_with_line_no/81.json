{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 65,
  "functions": [
    {
      "name": "pathLoad",
      "type": "function",
      "start_line": 47,
      "end_line": 65,
      "functions": [],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 47,
          "line": "public func pathLoad(): PathMap {"
        },
        {
          "lineno": 48,
          "line": "    var pathMap = PathMap("
        },
        {
          "lineno": 49,
          "line": "        \"/opds/v2/search\","
        },
        {
          "lineno": 50,
          "line": "        {"
        },
        {
          "lineno": 51,
          "line": "            httpContext =>"
        },
        {
          "lineno": 52,
          "line": "            let host = httpContext.request.headers.get(\"host\").toArray()[0]"
        },
        {
          "lineno": 53,
          "line": "            var query = \"\""
        },
        {
          "lineno": 54,
          "line": "            match (httpContext.request.url.query) {"
        },
        {
          "lineno": 55,
          "line": "                case Some(x) => query = x.trimStart(\"query=\")"
        },
        {
          "lineno": 56,
          "line": "                case None => ()"
        },
        {
          "lineno": 57,
          "line": "            }"
        },
        {
          "lineno": 58,
          "line": "            var cataLog = Search(query, host: host)"
        },
        {
          "lineno": 59,
          "line": "            httpContext.responseBuilder.header(\"content-type\", \"application/json;charset:utf-8;\")"
        },
        {
          "lineno": 60,
          "line": "            httpContext.responseBuilder.body(cataLog.toJson())"
        },
        {
          "lineno": 61,
          "line": "        }"
        },
        {
          "lineno": 62,
          "line": "    )"
        },
        {
          "lineno": 63,
          "line": ""
        },
        {
          "lineno": 64,
          "line": "    return pathMap"
        },
        {
          "lineno": 65,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "public func pathLoad(): PathMap {\n    var pathMap = PathMap(\n        \"/opds/v2/search\",\n        {",
          "successors": [
            {
              "id": 3,
              "label": "            httpContext =>\n            let host = httpContext.request.headers.get(\"host\").toArray()[0]\n            var query = \"\"\n            match (httpContext.request.url.query) {",
              "successors": [
                {
                  "id": 4,
                  "label": "                case Some(x) => query = x.trimStart(\"query=\")\n            var cataLog = Search(query, host: host)\n            httpContext.responseBuilder.header(\"content-type\", \"application/json;charset:utf-8;\")\n            httpContext.responseBuilder.body(cataLog.toJson())",
                  "successors": [
                    {
                      "id": 7,
                      "label": "        }\n    return pathMap\n}",
                      "successors": []
                    }
                  ]
                },
                {
                  "id": 5,
                  "label": "                case None => ()\n            }\n            var cataLog = Search(query, host: host)\n            httpContext.responseBuilder.header(\"content-type\", \"application/json;charset:utf-8;\")\n            httpContext.responseBuilder.body(cataLog.toJson())",
                  "successors": [
                    {
                      "id": 7,
                      "label": "        }\n    return pathMap\n}",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ],
  "classes": [
    {
      "name": "Search",
      "type": "class",
      "start_line": 10,
      "end_line": 45,
      "functions": [
        {
          "name": "init",
          "type": "function",
          "start_line": 14,
          "end_line": 19,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 14,
              "line": "    public init(query: String, host!: String = \"127.0.0.1\") {"
            },
            {
              "lineno": 15,
              "line": "        var now = DateTime.now()"
            },
            {
              "lineno": 16,
              "line": "        metadata = Metadata(\"Search results\", modified: now.toString())"
            },
            {
              "lineno": 17,
              "line": "        links = Links(host, \"catalog\", searchPage: true)"
            },
            {
              "lineno": 18,
              "line": "        initSeries(query, host: host)"
            },
            {
              "lineno": 19,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    public init(query: String, host!: String = \"127.0.0.1\") {\n        var now = DateTime.now()\n        metadata = Metadata(\"Search results\", modified: now.toString())\n        links = Links(host, \"catalog\", searchPage: true)\n        initSeries(query, host: host)\n    }",
              "successors": []
            }
          ]
        },
        {
          "name": "initSeries",
          "type": "function",
          "start_line": 21,
          "end_line": 32,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 21,
              "line": "    func initSeries(query: String, host!: String = \"127.0.0.1\") {"
            },
            {
              "lineno": 22,
              "line": "        var group = Group()"
            },
            {
              "lineno": 23,
              "line": "        group.metadata = Metadata(\"Series\")"
            },
            {
              "lineno": 24,
              "line": "        var obj = BookSeries.query(query)"
            },
            {
              "lineno": 25,
              "line": "        for (i in obj) {"
            },
            {
              "lineno": 26,
              "line": "            group"
            },
            {
              "lineno": 27,
              "line": "                .navigation"
            },
            {
              "lineno": 28,
              "line": "                .append("
            },
            {
              "lineno": 29,
              "line": "                    Link(title: i.name, href: \"http://${host}/opds/v2/series/${i.id}\", type_u: \"application/opds+json\"))"
            },
            {
              "lineno": 30,
              "line": "        }"
            },
            {
              "lineno": 31,
              "line": "        this.groups.append(group)"
            },
            {
              "lineno": 32,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "func initSeries(query: String, host!: String = \"127.0.0.1\") {\n    var group = Group()\n    group.metadata = Metadata(\"Series\")\n    var obj = BookSeries.query(query)",
              "successors": [
                {
                  "id": 2,
                  "label": "for (i in obj) {\n    group\n        .navigation\n        .append(\n            Link(title: i.name, href: \"http://${host}/opds/v2/series/${i.id}\", type_u: \"application/opds+json\"))\n}",
                  "successors": [
                    {
                      "id": 3,
                      "label": "this.groups.append(group)\n}",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "toJson",
          "type": "function",
          "start_line": 34,
          "end_line": 44,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 34,
              "line": "    public func toJson(): String {"
            },
            {
              "lineno": 35,
              "line": "        let stream = ByteBuffer()"
            },
            {
              "lineno": 36,
              "line": "        let w = JsonWriter(stream)"
            },
            {
              "lineno": 37,
              "line": "        w.startObject()"
            },
            {
              "lineno": 38,
              "line": "        w.writeName(\"metadata\").writeValue(metadata)"
            },
            {
              "lineno": 39,
              "line": "        w.writeName(\"links\").writeValue(links)"
            },
            {
              "lineno": 40,
              "line": "        w.writeName(\"groups\").writeValue<ArrayList<Group>>(groups)"
            },
            {
              "lineno": 41,
              "line": "        w.endObject()"
            },
            {
              "lineno": 42,
              "line": "        w.flush()"
            },
            {
              "lineno": 43,
              "line": "        return String.fromUtf8(readToEnd(stream))"
            },
            {
              "lineno": 44,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    public func toJson(): String {\n        let stream = ByteBuffer()\n        let w = JsonWriter(stream)\n        w.startObject()\n        w.writeName(\"metadata\").writeValue(metadata)\n        w.writeName(\"links\").writeValue(links)\n        w.writeName(\"groups\").writeValue<ArrayList<Group>>(groups)\n        w.endObject()\n        w.flush()\n        return String.fromUtf8(readToEnd(stream))",
              "successors": []
            }
          ]
        }
      ],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 10,
          "line": "class Search {"
        },
        {
          "lineno": 11,
          "line": "    var metadata: Metadata"
        },
        {
          "lineno": 12,
          "line": "    var links: Links"
        },
        {
          "lineno": 13,
          "line": "    var groups: ArrayList<Group> = ArrayList<Group>()"
        },
        {
          "lineno": 20,
          "line": ""
        },
        {
          "lineno": 33,
          "line": ""
        },
        {
          "lineno": 45,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "class Search {\n    var metadata: Metadata\n    var links: Links\n    var groups: ArrayList<Group> = ArrayList<Group>()\n}",
          "successors": []
        }
      ]
    }
  ],
  "simplified_code": [
    {
      "lineno": 1,
      "line": "package opds_cj.path.opds.v2.search"
    },
    {
      "lineno": 2,
      "line": ""
    },
    {
      "lineno": 3,
      "line": "import net.http.*"
    },
    {
      "lineno": 4,
      "line": "import std.{time.*, convert.*, collection.*, io.ByteBuffer, io.readToEnd}"
    },
    {
      "lineno": 5,
      "line": "import encoding.json.stream.*"
    },
    {
      "lineno": 6,
      "line": "import opds_cj.config.baseConfig"
    },
    {
      "lineno": 7,
      "line": "import opds_cj.router.PathMap"
    },
    {
      "lineno": 8,
      "line": "import opds_cj.data_stru.*"
    },
    {
      "lineno": 9,
      "line": ""
    },
    {
      "lineno": 46,
      "line": ""
    }
  ],
  "blocks": [
    {
      "id": 1,
      "label": "package opds_cj.path.opds.v2.search\nimport net.http.*\nimport std.{time.*, convert.*, collection.*, io.ByteBuffer, io.readToEnd}\nimport encoding.json.stream.*\nimport opds_cj.config.baseConfig\nimport opds_cj.router.PathMap\nimport opds_cj.data_stru.*\n",
      "successors": []
    }
  ]
}