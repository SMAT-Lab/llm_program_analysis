{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 56,
  "functions": [
    {
      "name": "parse",
      "type": "function",
      "start_line": 36,
      "end_line": 42,
      "functions": [],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 36,
          "line": "func parse(text: String) {"
        },
        {
          "lineno": 37,
          "line": "    let json = JsonValue.fromStr(text).asObject()"
        },
        {
          "lineno": 38,
          "line": "    let choices = json.getFields()['choices'].asArray()"
        },
        {
          "lineno": 39,
          "line": "    let message = choices[0].asObject().getFields()['message'].asObject()"
        },
        {
          "lineno": 40,
          "line": "    let content = message.getFields()['content'].asString().getValue()"
        },
        {
          "lineno": 41,
          "line": "    return content"
        },
        {
          "lineno": 42,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "func parse(text: String) {\n    let json = JsonValue.fromStr(text).asObject()\n    let choices = json.getFields()['choices'].asArray()\n    let message = choices[0].asObject().getFields()['message'].asObject()\n    let content = message.getFields()['content'].asString().getValue()\nreturn content",
          "successors": []
        }
      ]
    },
    {
      "name": "main",
      "type": "function",
      "start_line": 44,
      "end_line": 56,
      "functions": [],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 44,
          "line": "main() {"
        },
        {
          "lineno": 45,
          "line": "    var config = TlsClientConfig()"
        },
        {
          "lineno": 46,
          "line": "    config.verifyMode = TrustAll"
        },
        {
          "lineno": 47,
          "line": "    let client = ClientBuilder()"
        },
        {
          "lineno": 48,
          "line": "        .tlsConfig(config)"
        },
        {
          "lineno": 49,
          "line": "        .readTimeout(Duration.Max) // AI 服务响应有时候比较慢，这里设置为无限等待"
        },
        {
          "lineno": 50,
          "line": "        .build()"
        },
        {
          "lineno": 51,
          "line": "    println(client.chat(\"你好呀，请做个自我介绍吧\"))"
        },
        {
          "lineno": 52,
          "line": "    println(client.chat(\"周杰伦在 2000 到 2010 年之间出过哪些专辑\"))"
        },
        {
          "lineno": 53,
          "line": "    println(client.chat(\"请背诵《卜算子·送鲍浩然之浙东》\"))"
        },
        {
          "lineno": 54,
          "line": "    println(client.chat(\"在编程框架中，网络拦截器的作用是什么\"))"
        },
        {
          "lineno": 55,
          "line": "    client.close()"
        },
        {
          "lineno": 56,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": [
            "main() {",
            "    var config = TlsClientConfig()",
            "    config.verifyMode = TrustAll",
            "    let client = ClientBuilder()",
            "        .tlsConfig(config)",
            "        .readTimeout(Duration.Max) // AI 服务响应有时候比较慢，这里设置为无限等待",
            "        .build()",
            "    println(client.chat(\"你好呀，请做个自我介绍吧\"))",
            "    println(client.chat(\"周杰伦在 2000 到 2010 年之间出过哪些专辑\"))",
            "    println(client.chat(\"请背诵《卜算子·送鲍浩然之浙东》\"))",
            "    println(client.chat(\"在编程框架中，网络拦截器的作用是什么\"))",
            "    client.close()",
            "}"
          ],
          "successors": []
        }
      ]
    }
  ],
  "classes": [
    {
      "name": "Client",
      "type": "class",
      "start_line": 11,
      "end_line": 34,
      "functions": [
        {
          "name": "chat",
          "type": "function",
          "start_line": 12,
          "end_line": 33,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 12,
              "line": "    public func chat(question: String) {"
            },
            {
              "lineno": 13,
              "line": "        let info = \"\"\""
            },
            {
              "lineno": 14,
              "line": "        {"
            },
            {
              "lineno": 15,
              "line": "            \"model\": \"deepseek-chat\","
            },
            {
              "lineno": 16,
              "line": "            \"messages\": ["
            },
            {
              "lineno": 17,
              "line": "                {\"role\": \"system\", \"content\": \"你是我的全能助手，你的名字叫仓颉\"},"
            },
            {
              "lineno": 18,
              "line": "                {\"role\": \"user\", \"content\": \"${question}\"}"
            },
            {
              "lineno": 19,
              "line": "            ],"
            },
            {
              "lineno": 20,
              "line": "            \"stream\": false"
            },
            {
              "lineno": 21,
              "line": "        }"
            },
            {
              "lineno": 22,
              "line": "        \"\"\""
            },
            {
              "lineno": 23,
              "line": "        let request = HttpRequestBuilder()"
            },
            {
              "lineno": 24,
              "line": "            .url('https://api.deepseek.com/chat/completions')"
            },
            {
              "lineno": 25,
              "line": "            .header('Authorization', 'Bearer ${DEEPSEEK_API_KEY}')"
            },
            {
              "lineno": 26,
              "line": "            .header('Content-Type', 'application/json')"
            },
            {
              "lineno": 27,
              "line": "            .body(info)"
            },
            {
              "lineno": 28,
              "line": "            .post()"
            },
            {
              "lineno": 29,
              "line": "            .build()"
            },
            {
              "lineno": 30,
              "line": "        let response = this.send(request)"
            },
            {
              "lineno": 31,
              "line": "        let text = StringReader(response.body).readToEnd()"
            },
            {
              "lineno": 32,
              "line": "        return parse(text) + '\\n---------------------------'"
            },
            {
              "lineno": 33,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "public func chat(question: String) {\n        let info = \"\"\"\n        {\n            \"model\": \"deepseek-chat\",\n            \"messages\": [\n                {\"role\": \"system\", \"content\": \"\\u4f60\\u662f\\u6211\\u7684\\u5168\\u80fd\\u52a9\\u624b\\uff0c\\u4f60\\u7684\\u540d\\u5b57\\u53eb\\u4ed3\\u9889\"},\n                {\"role\": \"user\", \"content\": \"${question}\"}\n            ],\n            \"stream\": false\n        }\n        \"\"\"",
              "successors": [
                {
                  "id": 3,
                  "label": "        let request = HttpRequestBuilder()\n            .url('https://api.deepseek.com/chat/completions')\n            .header('Authorization', 'Bearer ${DEEPSEEK_API_KEY}')\n            .header('Content-Type', 'application/json')\n            .body(info)\n            .post()\n            .build()\n        let response = this.send(request)",
                  "successors": [
                    {
                      "id": 5,
                      "label": "        let text = StringReader(response.body).readToEnd()\n        return parse(text) + '\\n---------------------------'",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 11,
          "line": "extend Client {"
        },
        {
          "lineno": 34,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "extend Client {\n}",
          "successors": []
        }
      ]
    }
  ],
  "simplified_code": [
    {
      "lineno": 1,
      "line": "// 本示例演示访问 DeepSeek 大模型，可前往以下网址申请 API Key"
    },
    {
      "lineno": 2,
      "line": "// https://platform.deepseek.com/api_keys"
    },
    {
      "lineno": 3,
      "line": "// 仓颉语言团队 刘俊杰 2024.10.24"
    },
    {
      "lineno": 4,
      "line": "import std.io.*"
    },
    {
      "lineno": 5,
      "line": "import net.http.*"
    },
    {
      "lineno": 6,
      "line": "import net.tls.*"
    },
    {
      "lineno": 7,
      "line": "import encoding.json.*"
    },
    {
      "lineno": 8,
      "line": ""
    },
    {
      "lineno": 9,
      "line": "const DEEPSEEK_API_KEY = '-------Your DeepSeek Key--------'"
    },
    {
      "lineno": 10,
      "line": ""
    },
    {
      "lineno": 35,
      "line": ""
    },
    {
      "lineno": 43,
      "line": ""
    }
  ],
  "blocks": [
    {
      "id": 1,
      "label": "// \n// https://platform.deepseek.com/api_keys\n// \nimport std.io.*\nimport net.http.*\nimport net.tls.*\nimport encoding.json.*\n\nconst DEEPSEEK_API_KEY = '-------Your DeepSeek Key--------'\n",
      "successors": []
    }
  ]
}