{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 20,
  "functions": [
    {
      "name": "main",
      "type": "function",
      "start_line": 15,
      "end_line": 20,
      "functions": [],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 15,
          "line": "main() {"
        },
        {
          "lineno": 16,
          "line": "    var tree = Node(r'A',"
        },
        {
          "lineno": 17,
          "line": "        left: Node(r'B', left: Node(r'C', right: Node(r'D'))),"
        },
        {
          "lineno": 18,
          "line": "        right: Node(r'E', left: Node(r'F'), right: Node(r'G')))"
        },
        {
          "lineno": 19,
          "line": "    tree.traverse()"
        },
        {
          "lineno": 20,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "main() {\n    var tree = Node(r'A',\n        left: Node(r'B', left: Node(r'C', right: Node(r'D'))),\n        right: Node(r'E', left: Node(r'F'), right: Node(r'G')))",
          "successors": [
            {
              "id": 3,
              "label": "    tree.traverse()\n}",
              "successors": []
            }
          ]
        }
      ]
    }
  ],
  "classes": [
    {
      "name": "Node",
      "type": "class",
      "start_line": 3,
      "end_line": 13,
      "functions": [
        {
          "name": "traverse",
          "type": "function",
          "start_line": 8,
          "end_line": 12,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 8,
              "line": "    public func traverse(): Unit {"
            },
            {
              "lineno": 9,
              "line": "        left?.traverse()"
            },
            {
              "lineno": 10,
              "line": "        print(value)"
            },
            {
              "lineno": 11,
              "line": "        right?.traverse()"
            },
            {
              "lineno": 12,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    public func traverse(): Unit {\n        left?.traverse()\n        print(value)\n        right?.traverse()\n    }",
              "successors": []
            }
          ]
        }
      ],
      "simplified_code": [
        {
          "lineno": 3,
          "line": "struct Node {"
        },
        {
          "lineno": 4,
          "line": "    public Node(var value: Rune,"
        },
        {
          "lineno": 5,
          "line": "        let left!: ?Node = None,"
        },
        {
          "lineno": 6,
          "line": "        let right!: ?Node = None) {}"
        },
        {
          "lineno": 7,
          "line": ""
        },
        {
          "lineno": 13,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "struct Node {\n    public Node(var value: Rune,\n        let left!: ?Node = None,\n        let right!: ?Node = None) {}\n",
          "successors": []
        }
      ]
    }
  ],
  "simplified_code": [
    {
      "lineno": 1,
      "line": "// 基于 struct 实现二叉树"
    },
    {
      "lineno": 2,
      "line": "// cjc version: 0.53.13"
    },
    {
      "lineno": 14,
      "line": ""
    }
  ],
  "blocks": []
}