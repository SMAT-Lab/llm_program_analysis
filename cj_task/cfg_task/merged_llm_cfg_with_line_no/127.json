{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 150,
  "functions": [],
  "classes": [
    {
      "name": "CSVOutFormat",
      "type": "class",
      "start_line": 2,
      "end_line": 140,
      "functions": [
        {
          "name": "DEFAULT",
          "type": "function",
          "start_line": 27,
          "end_line": 43,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 27,
              "line": "    public static prop DEFAULT: CSVOutFormat {"
            },
            {
              "lineno": 28,
              "line": "        get() {"
            },
            {
              "lineno": 29,
              "line": "            CSVOutFormat("
            },
            {
              "lineno": 30,
              "line": "                Constants.COMMA_STRING,"
            },
            {
              "lineno": 31,
              "line": "                Constants.DOUBLE_QUOTE_CHAR,"
            },
            {
              "lineno": 32,
              "line": "                QuoteMode.SpecialValue,"
            },
            {
              "lineno": 33,
              "line": "                [],"
            },
            {
              "lineno": 34,
              "line": "                Constants.COMMENT_CHAR,"
            },
            {
              "lineno": 35,
              "line": "                Constants.BACKSLASH,"
            },
            {
              "lineno": 36,
              "line": "                true,"
            },
            {
              "lineno": 37,
              "line": "                true,"
            },
            {
              "lineno": 38,
              "line": "                Constants.CRLF,"
            },
            {
              "lineno": 39,
              "line": "                [],"
            },
            {
              "lineno": 40,
              "line": "                []"
            },
            {
              "lineno": 41,
              "line": "            )"
            },
            {
              "lineno": 42,
              "line": "        }"
            },
            {
              "lineno": 43,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "\n    public static prop DEFAULT: CSVOutFormat {\n        get() {\n            CSVOutFormat(\n                Constants.COMMA_STRING,\n                Constants.DOUBLE_QUOTE_CHAR,\n                QuoteMode.SpecialValue,\n                [],\n                Constants.COMMENT_CHAR,\n                Constants.BACKSLASH,\n                true,\n                true,\n                Constants.CRLF,\n                [],\n                []\n            )\n        }\n    }\n",
              "successors": []
            }
          ]
        },
        {
          "name": "CSVOutFormat",
          "type": "function",
          "start_line": 44,
          "end_line": 69,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 44,
              "line": "    CSVOutFormat("
            },
            {
              "lineno": 45,
              "line": "        delimiter: String,"
            },
            {
              "lineno": 46,
              "line": "        quoteChar: Rune,"
            },
            {
              "lineno": 47,
              "line": "        quoteMode: QuoteMode,"
            },
            {
              "lineno": 48,
              "line": "        quotedColsIndex: Array<Int64>,"
            },
            {
              "lineno": 49,
              "line": "        commentStart: Rune,"
            },
            {
              "lineno": 50,
              "line": "        escape: Rune,"
            },
            {
              "lineno": 51,
              "line": "        trim: Bool,"
            },
            {
              "lineno": 52,
              "line": "        ignoreEmptyRecord: Bool,"
            },
            {
              "lineno": 53,
              "line": "        recordSeparator: String,"
            },
            {
              "lineno": 54,
              "line": "        header: Array<String>,"
            },
            {
              "lineno": 55,
              "line": "        headerComments: Array<String>"
            },
            {
              "lineno": 56,
              "line": "    ) {"
            },
            {
              "lineno": 57,
              "line": "        this.delimiter = delimiter"
            },
            {
              "lineno": 58,
              "line": "        this.delimiterRune = delimiter.toRuneArray()"
            },
            {
              "lineno": 59,
              "line": "        this.quoteCharacter = quoteChar"
            },
            {
              "lineno": 60,
              "line": "        this.quoteMode = quoteMode"
            },
            {
              "lineno": 61,
              "line": "        this.quotedColsIndex = quotedColsIndex"
            },
            {
              "lineno": 62,
              "line": "        this.trim = trim"
            },
            {
              "lineno": 63,
              "line": "        this.ignoreEmptyRecord = ignoreEmptyRecord"
            },
            {
              "lineno": 64,
              "line": "        this.recordSeparator = recordSeparator"
            },
            {
              "lineno": 65,
              "line": "        this.commentMarker = commentStart"
            },
            {
              "lineno": 66,
              "line": "        this.escapeCharacter = escape"
            },
            {
              "lineno": 67,
              "line": "        this.header = header"
            },
            {
              "lineno": 68,
              "line": "        this.headerComments = headerComments"
            },
            {
              "lineno": 69,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    CSVOutFormat(\n        delimiter: String,\n        quoteChar: Rune,\n        quoteMode: QuoteMode,\n        quotedColsIndex: Array<Int64>,\n        commentStart: Rune,\n        escape: Rune,\n        trim: Bool,\n        ignoreEmptyRecord: Bool,\n        recordSeparator: String,\n        header: Array<String>,\n        headerComments: Array<String>\n    ) {\n        this.delimiter = delimiter\n        this.delimiterRune = delimiter.toRuneArray()\n        this.quoteCharacter = quoteChar\n        this.quoteMode = quoteMode\n        this.quotedColsIndex = quotedColsIndex\n        this.trim = trim\n        this.ignoreEmptyRecord = ignoreEmptyRecord\n        this.recordSeparator = recordSeparator\n        this.commentMarker = commentStart\n        this.escapeCharacter = escape\n        this.header = header\n        this.headerComments = headerComments\n    }",
              "successors": []
            }
          ]
        },
        {
          "name": "setEscapeCharacter",
          "type": "function",
          "start_line": 70,
          "end_line": 73,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 70,
              "line": "    public func setEscapeCharacter(escapeCharacter: Rune) {"
            },
            {
              "lineno": 71,
              "line": "        this.escapeCharacter = escapeCharacter"
            },
            {
              "lineno": 72,
              "line": "        return this"
            },
            {
              "lineno": 73,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    public func setEscapeCharacter(escapeCharacter: Rune) {\n        this.escapeCharacter = escapeCharacter\n        return this",
              "successors": []
            }
          ]
        },
        {
          "name": "getEscapeCharacter",
          "type": "function",
          "start_line": 74,
          "end_line": 76,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 74,
              "line": "    public func getEscapeCharacter(): Rune {"
            },
            {
              "lineno": 75,
              "line": "        return escapeCharacter"
            },
            {
              "lineno": 76,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    public func getEscapeCharacter(): Rune {\n        return escapeCharacter\n    }",
              "successors": []
            }
          ]
        },
        {
          "name": "setHeader",
          "type": "function",
          "start_line": 77,
          "end_line": 80,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 77,
              "line": "    public func setHeader(headerList: Array<String>) {"
            },
            {
              "lineno": 78,
              "line": "        this.header = headerList"
            },
            {
              "lineno": 79,
              "line": "        return this"
            },
            {
              "lineno": 80,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    public func setHeader(headerList: Array<String>) {\n        this.header = headerList\n        return this\n    }",
              "successors": []
            }
          ]
        },
        {
          "name": "getHeader",
          "type": "function",
          "start_line": 81,
          "end_line": 83,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 81,
              "line": "    public func getHeader() {"
            },
            {
              "lineno": 82,
              "line": "        return header"
            },
            {
              "lineno": 83,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    public func getHeader() {\n        return header",
              "successors": [
                {
                  "id": 3,
                  "label": "    }",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "setIgnoreEmptyRecord",
          "type": "function",
          "start_line": 84,
          "end_line": 87,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 84,
              "line": "    public func setIgnoreEmptyRecord(ignoreEmptyRecord: Bool) {"
            },
            {
              "lineno": 85,
              "line": "        this.ignoreEmptyRecord = ignoreEmptyRecord"
            },
            {
              "lineno": 86,
              "line": "        return this"
            },
            {
              "lineno": 87,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    public func setIgnoreEmptyRecord(ignoreEmptyRecord: Bool) {\n        this.ignoreEmptyRecord = ignoreEmptyRecord\n        return this\n    }",
              "successors": []
            }
          ]
        },
        {
          "name": "getIgnoreEmptyRecord",
          "type": "function",
          "start_line": 88,
          "end_line": 90,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 88,
              "line": "    public func getIgnoreEmptyRecord(): Bool {"
            },
            {
              "lineno": 89,
              "line": "        return ignoreEmptyRecord"
            },
            {
              "lineno": 90,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    public func getIgnoreEmptyRecord(): Bool {\n        return ignoreEmptyRecord\n    }",
              "successors": []
            }
          ]
        },
        {
          "name": "setTrim",
          "type": "function",
          "start_line": 91,
          "end_line": 94,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 91,
              "line": "    public func setTrim(trim: Bool) {"
            },
            {
              "lineno": 92,
              "line": "        this.trim = trim"
            },
            {
              "lineno": 93,
              "line": "        return this"
            },
            {
              "lineno": 94,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "public func setTrim(trim: Bool) {\n    this.trim = trim\nreturn this",
              "successors": []
            }
          ]
        },
        {
          "name": "getTrim",
          "type": "function",
          "start_line": 95,
          "end_line": 97,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 95,
              "line": "    public func getTrim(): Bool {"
            },
            {
              "lineno": 96,
              "line": "        return trim"
            },
            {
              "lineno": 97,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    public func getTrim(): Bool {\n        return trim\n    }",
              "successors": []
            }
          ]
        },
        {
          "name": "setQuoteCharacter",
          "type": "function",
          "start_line": 98,
          "end_line": 101,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 98,
              "line": "    public func setQuoteCharacter(quoteCharacter: Rune) {"
            },
            {
              "lineno": 99,
              "line": "        this.quoteCharacter = quoteCharacter"
            },
            {
              "lineno": 100,
              "line": "        return this"
            },
            {
              "lineno": 101,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    public func setQuoteCharacter(quoteCharacter: Rune) {\n        this.quoteCharacter = quoteCharacter\n        return this",
              "successors": [
                {
                  "id": 3,
                  "label": "    }",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "getQuoteCharacter",
          "type": "function",
          "start_line": 102,
          "end_line": 104,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 102,
              "line": "    public func getQuoteCharacter(): Rune {"
            },
            {
              "lineno": 103,
              "line": "        return quoteCharacter"
            },
            {
              "lineno": 104,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    public func getQuoteCharacter(): Rune {\n        return quoteCharacter\n    }",
              "successors": []
            }
          ]
        },
        {
          "name": "setQuoteMode",
          "type": "function",
          "start_line": 105,
          "end_line": 108,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 105,
              "line": "    public func setQuoteMode(quoteMode: QuoteMode) {"
            },
            {
              "lineno": 106,
              "line": "        this.quoteMode = quoteMode"
            },
            {
              "lineno": 107,
              "line": "        return this"
            },
            {
              "lineno": 108,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    public func setQuoteMode(quoteMode: QuoteMode) {\n        this.quoteMode = quoteMode\n        return this\n    }",
              "successors": []
            }
          ]
        },
        {
          "name": "getQuoteMode",
          "type": "function",
          "start_line": 109,
          "end_line": 111,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 109,
              "line": "    public func getQuoteMode(): QuoteMode {"
            },
            {
              "lineno": 110,
              "line": "        return quoteMode"
            },
            {
              "lineno": 111,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    public func getQuoteMode(): QuoteMode {\n        return quoteMode\n    }",
              "successors": []
            }
          ]
        },
        {
          "name": "setDelimiter",
          "type": "function",
          "start_line": 112,
          "end_line": 116,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 112,
              "line": "    public func setDelimiter(outdelimiter: String) {"
            },
            {
              "lineno": 113,
              "line": "        this.delimiter = outdelimiter"
            },
            {
              "lineno": 114,
              "line": "        this.delimiterRune = outdelimiter.toRuneArray()"
            },
            {
              "lineno": 115,
              "line": "        return this"
            },
            {
              "lineno": 116,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    public func setDelimiter(outdelimiter: String) {\n        this.delimiter = outdelimiter\n        this.delimiterRune = outdelimiter.toRuneArray()\n        return this",
              "successors": []
            }
          ]
        },
        {
          "name": "getDelimiterString",
          "type": "function",
          "start_line": 117,
          "end_line": 119,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 117,
              "line": "    public func getDelimiterString(): String {"
            },
            {
              "lineno": 118,
              "line": "        return delimiter"
            },
            {
              "lineno": 119,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    public func getDelimiterString(): String {\n        return delimiter\n    }",
              "successors": []
            }
          ]
        },
        {
          "name": "getDelimiterRune",
          "type": "function",
          "start_line": 120,
          "end_line": 122,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 120,
              "line": "    public func getDelimiterRune(): Array<Rune> {"
            },
            {
              "lineno": 121,
              "line": "        return delimiterRune"
            },
            {
              "lineno": 122,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    public func getDelimiterRune(): Array<Rune> {\n        return delimiterRune\n    }",
              "successors": []
            }
          ]
        },
        {
          "name": "setCommentMarker",
          "type": "function",
          "start_line": 123,
          "end_line": 126,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 123,
              "line": "    public func setCommentMarker(outcommentMarker: Rune) {"
            },
            {
              "lineno": 124,
              "line": "        this.commentMarker = outcommentMarker"
            },
            {
              "lineno": 125,
              "line": "        return this"
            },
            {
              "lineno": 126,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "public func setCommentMarker(outcommentMarker: Rune) {\n        this.commentMarker = outcommentMarker\n        return this",
              "successors": []
            }
          ]
        },
        {
          "name": "getCommentMarker",
          "type": "function",
          "start_line": 127,
          "end_line": 129,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 127,
              "line": "    public func getCommentMarker(): Rune {"
            },
            {
              "lineno": 128,
              "line": "        return commentMarker"
            },
            {
              "lineno": 129,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    public func getCommentMarker(): Rune {\n        return commentMarker\n    }",
              "successors": []
            }
          ]
        },
        {
          "name": "getRecordSeparator",
          "type": "function",
          "start_line": 130,
          "end_line": 132,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 130,
              "line": "    public func getRecordSeparator() {"
            },
            {
              "lineno": 131,
              "line": "        return recordSeparator"
            },
            {
              "lineno": 132,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    public func getRecordSeparator() {\n        return recordSeparator\n    }",
              "successors": []
            }
          ]
        },
        {
          "name": "setQuotedColsIndex",
          "type": "function",
          "start_line": 133,
          "end_line": 136,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 133,
              "line": "    public func setQuotedColsIndex(quotedColsIndex: Array<Int64>) {"
            },
            {
              "lineno": 134,
              "line": "        this.quotedColsIndex = quotedColsIndex"
            },
            {
              "lineno": 135,
              "line": "        return this"
            },
            {
              "lineno": 136,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    public func setQuotedColsIndex(quotedColsIndex: Array<Int64>) {\n        this.quotedColsIndex = quotedColsIndex\n        return this\n    }",
              "successors": []
            }
          ]
        },
        {
          "name": "getQuotedColsIndex",
          "type": "function",
          "start_line": 137,
          "end_line": 139,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 137,
              "line": "    public func getQuotedColsIndex() {"
            },
            {
              "lineno": 138,
              "line": "        return quotedColsIndex"
            },
            {
              "lineno": 139,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "label": "    public func getQuotedColsIndex() {\n        return quotedColsIndex\n    }",
              "successors": []
            }
          ]
        }
      ],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 2,
          "line": "public class CSVOutFormat {"
        },
        {
          "lineno": 3,
          "line": "    // Header title"
        },
        {
          "lineno": 4,
          "line": "    private var header: Array<String>"
        },
        {
          "lineno": 5,
          "line": "    // array of header column names"
        },
        {
          "lineno": 6,
          "line": "    private var headerComments: Array<String>"
        },
        {
          "lineno": 7,
          "line": "    // Annotation symbols"
        },
        {
          "lineno": 8,
          "line": "    private var commentMarker: Rune"
        },
        {
          "lineno": 9,
          "line": "    // Separator"
        },
        {
          "lineno": 10,
          "line": "    private var delimiter: String"
        },
        {
          "lineno": 11,
          "line": "    // Separator"
        },
        {
          "lineno": 12,
          "line": "    private var delimiterRune: Array<Rune>"
        },
        {
          "lineno": 13,
          "line": "    // Escape character"
        },
        {
          "lineno": 14,
          "line": "    private var escapeCharacter: Rune"
        },
        {
          "lineno": 15,
          "line": "    // Reference symbol"
        },
        {
          "lineno": 16,
          "line": "    private var quoteCharacter: Rune"
        },
        {
          "lineno": 17,
          "line": "    // Record split string"
        },
        {
          "lineno": 18,
          "line": "    private var recordSeparator: String"
        },
        {
          "lineno": 19,
          "line": "    // Ignore records without values"
        },
        {
          "lineno": 20,
          "line": "    private var ignoreEmptyRecord: Bool"
        },
        {
          "lineno": 21,
          "line": "    // Whether to remove white space characters outside the content"
        },
        {
          "lineno": 22,
          "line": "    private var trim: Bool"
        },
        {
          "lineno": 23,
          "line": "    // Add column ordinal for reference symbol"
        },
        {
          "lineno": 24,
          "line": "    private var quotedColsIndex: Array<Int64>"
        },
        {
          "lineno": 25,
          "line": "    // Reference mode of output content"
        },
        {
          "lineno": 26,
          "line": "    private var quoteMode: QuoteMode"
        },
        {
          "lineno": 140,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "public class CSVOutFormat {\n    // Header title\n    private var header: Array<String>\n    // array of header column names\n    private var headerComments: Array<String>\n    // Annotation symbols\n    private var commentMarker: Rune\n    // Separator\n    private var delimiter: String\n    // Separator\n    private var delimiterRune: Array<Rune>\n    // Escape character\n    private var escapeCharacter: Rune\n    // Reference symbol\n    private var quoteCharacter: Rune\n    // Record split string\n    private var recordSeparator: String\n    // Ignore records without values\n    private var ignoreEmptyRecord: Bool\n    // Whether to remove white space characters outside the content\n    private var trim: Bool\n    // Add column ordinal for reference symbol\n    private var quotedColsIndex: Array<Int64>\n    // Reference mode of output content\n    private var quoteMode: QuoteMode\n}",
          "successors": []
        }
      ]
    },
    {
      "name": "QuoteMode",
      "type": "class",
      "start_line": 141,
      "end_line": 150,
      "functions": [],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 141,
          "line": "public enum QuoteMode {"
        },
        {
          "lineno": 142,
          "line": "    // All columns"
        },
        {
          "lineno": 143,
          "line": "    All |"
        },
        {
          "lineno": 144,
          "line": "    // Configure the specified column"
        },
        {
          "lineno": 145,
          "line": "    CfgCols |"
        },
        {
          "lineno": 146,
          "line": "    // Column values with special characters"
        },
        {
          "lineno": 147,
          "line": "    SpecialValue |"
        },
        {
          "lineno": 148,
          "line": "    // No reference, escape if there are special symbols"
        },
        {
          "lineno": 149,
          "line": "    None"
        },
        {
          "lineno": 150,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "label": "public enum QuoteMode {\n    // All columns\n    All |\n    // Configure the specified column\n    CfgCols |\n    // Column values with special characters\n    SpecialValue |\n    // No reference, escape if there are special symbols\n    None\n}",
          "successors": []
        }
      ]
    }
  ],
  "simplified_code": [
    {
      "lineno": 1,
      "line": "package csv4cj"
    }
  ],
  "blocks": [
    {
      "id": 1,
      "label": "package csv4cj",
      "successors": []
    }
  ]
}