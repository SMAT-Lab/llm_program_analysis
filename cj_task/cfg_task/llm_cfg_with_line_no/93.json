{
  "name": "cj_debounce_throttle",
  "type": "CFG",
  "start_line": 1,
  "end_line": 84,
  "functions": [
    {
      "name": "debounceAction",
      "type": "function",
      "start_line": 4,
      "end_line": 15,
      "functions": [],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 4,
          "line": "func debounceAction(action: () -> Unit) {"
        },
        {
          "lineno": 5,
          "line": "    action()"
        },
        {
          "lineno": 6,
          "line": ""
        },
        {
          "lineno": 7,
          "line": "    sleep(Duration.millisecond * 10)"
        },
        {
          "lineno": 8,
          "line": "    action()"
        },
        {
          "lineno": 9,
          "line": ""
        },
        {
          "lineno": 10,
          "line": "    sleep(Duration.millisecond * 20)"
        },
        {
          "lineno": 11,
          "line": "    action()"
        },
        {
          "lineno": 12,
          "line": ""
        },
        {
          "lineno": 13,
          "line": "    sleep(Duration.millisecond * 30)"
        },
        {
          "lineno": 14,
          "line": "    action()"
        },
        {
          "lineno": 15,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "start_line": 4,
          "end_line": 15,
          "label": "func debounceAction(action: () -> Unit) {\n    action()\n\n    sleep(Duration.millisecond * 10)\n    action()\n\n    sleep(Duration.millisecond * 20)\n    action()\n\n    sleep(Duration.millisecond * 30)\n    action()\n}",
          "successors": []
        }
      ]
    },
    {
      "name": "throttleAction",
      "type": "function",
      "start_line": 17,
      "end_line": 28,
      "functions": [],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 17,
          "line": "func throttleAction(action: () -> Unit) {"
        },
        {
          "lineno": 18,
          "line": "    action()"
        },
        {
          "lineno": 19,
          "line": ""
        },
        {
          "lineno": 20,
          "line": "    sleep(Duration.millisecond * 20)"
        },
        {
          "lineno": 21,
          "line": "    action()"
        },
        {
          "lineno": 22,
          "line": ""
        },
        {
          "lineno": 23,
          "line": "    sleep(Duration.millisecond * 40)"
        },
        {
          "lineno": 24,
          "line": "    action()"
        },
        {
          "lineno": 25,
          "line": ""
        },
        {
          "lineno": 26,
          "line": "    sleep(Duration.millisecond * 80)"
        },
        {
          "lineno": 27,
          "line": "    action()"
        },
        {
          "lineno": 28,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "start_line": 17,
          "end_line": 17,
          "label": "func throttleAction(action: () -> Unit) {",
          "successors": [
            {
              "id": 2,
              "start_line": 18,
              "end_line": 18,
              "label": "    action()",
              "successors": [
                {
                  "id": 3,
                  "start_line": 20,
                  "end_line": 20,
                  "label": "    sleep(Duration.millisecond * 20)",
                  "successors": [
                    {
                      "id": 4,
                      "start_line": 21,
                      "end_line": 21,
                      "label": "    action()",
                      "successors": [
                        {
                          "id": 5,
                          "start_line": 23,
                          "end_line": 23,
                          "label": "    sleep(Duration.millisecond * 40)",
                          "successors": [
                            {
                              "id": 6,
                              "start_line": 24,
                              "end_line": 24,
                              "label": "    action()",
                              "successors": [
                                {
                                  "id": 7,
                                  "start_line": 26,
                                  "end_line": 26,
                                  "label": "    sleep(Duration.millisecond * 80)",
                                  "successors": [
                                    {
                                      "id": 8,
                                      "start_line": 27,
                                      "end_line": 27,
                                      "label": "    action()",
                                      "successors": [
                                        {
                                          "id": 9,
                                          "start_line": 28,
                                          "end_line": 28,
                                          "label": "}",
                                          "successors": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "debounceRepeater",
      "type": "function",
      "start_line": 30,
      "end_line": 37,
      "functions": [],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 30,
          "line": "func debounceRepeater() {"
        },
        {
          "lineno": 31,
          "line": "    let start = getNowTime()"
        },
        {
          "lineno": 32,
          "line": "    // let config = RepeaterConfig(interval: Duration.millisecond * 100, leading: false, trailing: true)"
        },
        {
          "lineno": 33,
          "line": "    // Repeater(throttle: false, config: config){}"
        },
        {
          "lineno": 34,
          "line": "    Repeater(throttle: false, mode: Trailing(100)) {"
        },
        {
          "lineno": 35,
          "line": "        println('testDebounce执行间隔 ${getNowTime()-start}')"
        },
        {
          "lineno": 36,
          "line": "    }"
        },
        {
          "lineno": 37,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "start_line": 30,
          "end_line": 37,
          "label": "func debounceRepeater() {\n    let start = getNowTime()\n    // let config = RepeaterConfig(interval: Duration.millisecond * 100, leading: false, trailing: true)\n    // Repeater(throttle: false, config: config){}\n    Repeater(throttle: false, mode: Trailing(100)) {\n        println('testDebounce执行间隔 ${getNowTime()-start}')\n    }\n}",
          "successors": []
        }
      ]
    },
    {
      "name": "throttleRepeater",
      "type": "function",
      "start_line": 39,
      "end_line": 44,
      "functions": [],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 39,
          "line": "func throttleRepeater() {"
        },
        {
          "lineno": 40,
          "line": "    let start = getNowTime()"
        },
        {
          "lineno": 41,
          "line": "    Repeater(throttle: true, mode: Trailing(50)) {"
        },
        {
          "lineno": 42,
          "line": "        println('testThrottle执行间隔 ${getNowTime()-start}')"
        },
        {
          "lineno": 43,
          "line": "    }"
        },
        {
          "lineno": 44,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "start_line": 39,
          "end_line": 44,
          "label": "func throttleRepeater() {\n    let start = getNowTime()\n    Repeater(throttle: true, mode: Trailing(50)) {\n        println('testThrottle执行间隔 ${getNowTime()-start}')\n    }\n}",
          "successors": []
        }
      ]
    },
    {
      "name": "debounceFunc",
      "type": "function",
      "start_line": 48,
      "end_line": 50,
      "functions": [],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 48,
          "line": "func debounceFunc() {"
        },
        {
          "lineno": 49,
          "line": "    println('myDebounce执行间隔 ${getNowTime()-start}')"
        },
        {
          "lineno": 50,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "start_line": 48,
          "end_line": 50,
          "label": "func debounceFunc() {\n    println('myDebounce执行间隔 ${getNowTime()-start}')\n}",
          "successors": []
        }
      ]
    },
    {
      "name": "throttleFunc",
      "type": "function",
      "start_line": 53,
      "end_line": 55,
      "functions": [],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 53,
          "line": "func throttleFunc() {"
        },
        {
          "lineno": 54,
          "line": "    println('myThrottle执行间隔 ${getNowTime()-start}')"
        },
        {
          "lineno": 55,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "start_line": 53,
          "end_line": 55,
          "label": "func throttleFunc() {\n    println('myThrottle执行间隔 ${getNowTime()-start}')\n}",
          "successors": []
        }
      ]
    },
    {
      "name": "main",
      "type": "function",
      "start_line": 71,
      "end_line": 84,
      "functions": [],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 71,
          "line": "main(): Int64 {"
        },
        {
          "lineno": 72,
          "line": "    // 直接使用Repeater"
        },
        {
          "lineno": 73,
          "line": "    // debounceAction(debounceRepeater().call)"
        },
        {
          "lineno": 74,
          "line": "    // throttleAction(throttleRepeater().call)"
        },
        {
          "lineno": 75,
          "line": "    // 全局函数 使用宏"
        },
        {
          "lineno": 76,
          "line": "    // debounceAction(debounceFunc)"
        },
        {
          "lineno": 77,
          "line": "    // throttleAction(throttleFunc)"
        },
        {
          "lineno": 78,
          "line": "    // 类的实例成员方法 使用宏"
        },
        {
          "lineno": 79,
          "line": "    // debounceAction(RepeaterMemberMacro().myDebounce)"
        },
        {
          "lineno": 80,
          "line": "    throttleAction(RepeaterMemberMacro().myThrottle)"
        },
        {
          "lineno": 81,
          "line": ""
        },
        {
          "lineno": 82,
          "line": "    sleep(Duration.second * 2)"
        },
        {
          "lineno": 83,
          "line": "    return 0"
        },
        {
          "lineno": 84,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "start_line": 71,
          "end_line": 71,
          "label": "main(): Int64 {",
          "successors": [
            {
              "id": 2,
              "start_line": 80,
              "end_line": 80,
              "label": "throttleAction(RepeaterMemberMacro().myThrottle)",
              "successors": [
                {
                  "id": 3,
                  "start_line": 82,
                  "end_line": 82,
                  "label": "sleep(Duration.second * 2)",
                  "successors": [
                    {
                      "id": 4,
                      "start_line": 83,
                      "end_line": 83,
                      "label": "return 0",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ],
  "classes": [
    {
      "name": "RepeaterMemberMacro",
      "type": "class",
      "start_line": 57,
      "end_line": 69,
      "functions": [
        {
          "name": "myDebounce",
          "type": "function",
          "start_line": 61,
          "end_line": 63,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 61,
              "line": "    func myDebounce() {"
            },
            {
              "lineno": 62,
              "line": "        println('myDebounce执行间隔 ${getNowTime()-start}')"
            },
            {
              "lineno": 63,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 61,
              "end_line": 63,
              "label": "    func myDebounce() {\n        println('myDebounce\\u6267\\u884c\\u95f4\\u9694 ${getNowTime()-start}')\n    }",
              "successors": []
            }
          ]
        },
        {
          "name": "myThrottle",
          "type": "function",
          "start_line": 66,
          "end_line": 68,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 66,
              "line": "    func myThrottle() {"
            },
            {
              "lineno": 67,
              "line": "        println('myThrottle执行间隔 ${getNowTime()-start}')"
            },
            {
              "lineno": 68,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 66,
              "end_line": 68,
              "label": "    func myThrottle() {\n        println('myThrottle\\u6267\\u884c\\u95f4\\u9694 ${getNowTime()-start}')\n    }",
              "successors": []
            }
          ]
        }
      ],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 57,
          "line": "class RepeaterMemberMacro {"
        },
        {
          "lineno": 58,
          "line": "    let start = getNowTime()"
        },
        {
          "lineno": 59,
          "line": ""
        },
        {
          "lineno": 60,
          "line": "    @Debounce[100]"
        },
        {
          "lineno": 64,
          "line": ""
        },
        {
          "lineno": 65,
          "line": "    @Throttle[50]"
        },
        {
          "lineno": 69,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "start_line": 57,
          "end_line": 69,
          "label": "class RepeaterMemberMacro {\n    let start = getNowTime()\n\n    @Debounce[100]\n\n    @Throttle[50]\n}",
          "successors": []
        }
      ]
    }
  ],
  "simplified_code": [
    {
      "lineno": 1,
      "line": "package cj_debounce_throttle"
    },
    {
      "lineno": 2,
      "line": "import cj_debounce_throttle.macros.*"
    },
    {
      "lineno": 3,
      "line": ""
    },
    {
      "lineno": 16,
      "line": ""
    },
    {
      "lineno": 29,
      "line": ""
    },
    {
      "lineno": 38,
      "line": ""
    },
    {
      "lineno": 45,
      "line": ""
    },
    {
      "lineno": 46,
      "line": "let start = getNowTime()"
    },
    {
      "lineno": 47,
      "line": "@Debounce[100]"
    },
    {
      "lineno": 51,
      "line": ""
    },
    {
      "lineno": 52,
      "line": "@Throttle[50]"
    },
    {
      "lineno": 56,
      "line": ""
    },
    {
      "lineno": 70,
      "line": ""
    }
  ],
  "blocks": [
    {
      "id": 1,
      "start_line": 1,
      "end_line": 1,
      "label": "package cj_debounce_throttle",
      "successors": [
        {
          "id": 2,
          "start_line": 2,
          "end_line": 2,
          "label": "import cj_debounce_throttle.macros.*",
          "successors": [
            {
              "id": 3,
              "start_line": 46,
              "end_line": 46,
              "label": "let start = getNowTime()",
              "successors": [
                {
                  "id": 4,
                  "start_line": 47,
                  "end_line": 47,
                  "label": "@Debounce[100]",
                  "successors": [
                    {
                      "id": 5,
                      "start_line": 52,
                      "end_line": 52,
                      "label": "@Throttle[50]",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}