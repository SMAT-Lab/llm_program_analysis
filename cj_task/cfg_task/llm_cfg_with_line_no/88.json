{
  "name": "SimpleJsonReader",
  "type": "CFG",
  "start_line": 1,
  "end_line": 150,
  "functions": [],
  "classes": [
    {
      "name": "Json",
      "type": "class",
      "start_line": 7,
      "end_line": 150,
      "functions": [
        {
          "name": "Json",
          "type": "function",
          "start_line": 10,
          "end_line": 12,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 10,
              "line": "    private init(value!: JsonValue) {"
            },
            {
              "lineno": 11,
              "line": "        this.value = value"
            },
            {
              "lineno": 12,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 10,
              "end_line": 12,
              "label": "    private init(value!: JsonValue) {\n        this.value = value\n    }",
              "successors": []
            }
          ]
        },
        {
          "name": "Json",
          "type": "function",
          "start_line": 14,
          "end_line": 22,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 14,
              "line": "    public init(str!: String) {"
            },
            {
              "lineno": 15,
              "line": "        var reval: JsonValue"
            },
            {
              "lineno": 16,
              "line": "        try {"
            },
            {
              "lineno": 17,
              "line": "            reval = JsonValue.fromStr(str)"
            },
            {
              "lineno": 18,
              "line": "        } catch (e: Exception) {"
            },
            {
              "lineno": 19,
              "line": "            reval = JsonNull()"
            },
            {
              "lineno": 20,
              "line": "        }"
            },
            {
              "lineno": 21,
              "line": "        this.value = reval"
            },
            {
              "lineno": 22,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 14,
              "end_line": 15,
              "label": "    public init(str!: String) {\n        var reval: JsonValue",
              "successors": [
                {
                  "id": 2,
                  "start_line": 16,
                  "end_line": 17,
                  "label": "        try {\n            reval = JsonValue.fromStr(str)",
                  "successors": [
                    {
                      "id": 3,
                      "start_line": 18,
                      "end_line": 19,
                      "label": "        } catch (e: Exception) {\n            reval = JsonNull()",
                      "successors": [
                        {
                          "id": 4,
                          "start_line": 20,
                          "end_line": 21,
                          "label": "        }\n        this.value = reval",
                          "successors": [
                            {
                              "id": 5,
                              "start_line": 22,
                              "end_line": 22,
                              "label": "    }",
                              "successors": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "deserialize",
          "type": "function",
          "start_line": 24,
          "end_line": 30,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 24,
              "line": "    public func deserialize<T>(): Option<T> where T <: Serializable<T> {"
            },
            {
              "lineno": 25,
              "line": "        try {"
            },
            {
              "lineno": 26,
              "line": "            return T.deserialize(this.dataModel)"
            },
            {
              "lineno": 27,
              "line": "        } catch (_: Exception) {"
            },
            {
              "lineno": 28,
              "line": "            return Option.None"
            },
            {
              "lineno": 29,
              "line": "        }"
            },
            {
              "lineno": 30,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 24,
              "end_line": 24,
              "label": "    public func deserialize<T>(): Option<T> where T <: Serializable<T> {",
              "successors": [
                {
                  "id": 2,
                  "start_line": 25,
                  "end_line": 26,
                  "label": "        try {\n            return T.deserialize(this.dataModel)",
                  "successors": [
                    {
                      "id": 3,
                      "start_line": 27,
                      "end_line": 28,
                      "label": "        } catch (_: Exception) {\n            return Option.None",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "operator[]",
          "type": "function",
          "start_line": 32,
          "end_line": 41,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 32,
              "line": "    public operator func [](arg: Int): Json {"
            },
            {
              "lineno": 33,
              "line": "        try {"
            },
            {
              "lineno": 34,
              "line": "            match (this.value.kind()) {"
            },
            {
              "lineno": 35,
              "line": "                case JsonKind.JsArray => Json(value: this.value.asArray()[arg])"
            },
            {
              "lineno": 36,
              "line": "                case _ => return Json(value: JsonNull())"
            },
            {
              "lineno": 37,
              "line": "            }"
            },
            {
              "lineno": 38,
              "line": "        } catch (_: Exception) {"
            },
            {
              "lineno": 39,
              "line": "            return Json(value: JsonNull())"
            },
            {
              "lineno": 40,
              "line": "        }"
            },
            {
              "lineno": 41,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 32,
              "end_line": 32,
              "label": "    public operator func [](arg: Int): Json {",
              "successors": [
                {
                  "id": 2,
                  "start_line": 33,
                  "end_line": 34,
                  "label": "        try {\n            match (this.value.kind()) {",
                  "successors": [
                    {
                      "id": 3,
                      "start_line": 35,
                      "end_line": 35,
                      "label": "                case JsonKind.JsArray => Json(value: this.value.asArray()[arg])",
                      "successors": []
                    },
                    {
                      "id": 4,
                      "start_line": 36,
                      "end_line": 36,
                      "label": "                case _ => return Json(value: JsonNull())",
                      "successors": []
                    }
                  ]
                },
                {
                  "id": 5,
                  "start_line": 38,
                  "end_line": 39,
                  "label": "        } catch (_: Exception) {\n            return Json(value: JsonNull())",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "operator[]",
          "type": "function",
          "start_line": 43,
          "end_line": 52,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 43,
              "line": "    public operator func [](arg: String): Json {"
            },
            {
              "lineno": 44,
              "line": "        try {"
            },
            {
              "lineno": 45,
              "line": "            match (this.value.kind()) {"
            },
            {
              "lineno": 46,
              "line": "                case JsonKind.JsObject => Json(value: this.value.asObject()[arg])"
            },
            {
              "lineno": 47,
              "line": "                case _ => return Json(value: JsonNull())"
            },
            {
              "lineno": 48,
              "line": "            }"
            },
            {
              "lineno": 49,
              "line": "        } catch (_: Exception) {"
            },
            {
              "lineno": 50,
              "line": "            return Json(value: JsonNull())"
            },
            {
              "lineno": 51,
              "line": "        }"
            },
            {
              "lineno": 52,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 43,
              "end_line": 43,
              "label": "    public operator func [](arg: String): Json {",
              "successors": [
                {
                  "id": 2,
                  "start_line": 44,
                  "end_line": 45,
                  "label": "        try {\n            match (this.value.kind()) {",
                  "successors": [
                    {
                      "id": 3,
                      "start_line": 46,
                      "end_line": 46,
                      "label": "                case JsonKind.JsObject => Json(value: this.value.asObject()[arg])",
                      "successors": []
                    },
                    {
                      "id": 4,
                      "start_line": 47,
                      "end_line": 47,
                      "label": "                case _ => return Json(value: JsonNull())",
                      "successors": []
                    },
                    {
                      "id": 5,
                      "start_line": 48,
                      "end_line": 48,
                      "label": "            }",
                      "successors": [
                        {
                          "id": 6,
                          "start_line": 49,
                          "end_line": 50,
                          "label": "        } catch (_: Exception) {\n            return Json(value: JsonNull())",
                          "successors": []
                        },
                        {
                          "id": 7,
                          "start_line": 51,
                          "end_line": 51,
                          "label": "        }",
                          "successors": [
                            {
                              "id": 8,
                              "start_line": 52,
                              "end_line": 52,
                              "label": "    }",
                              "successors": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 7,
          "line": "public struct Json {"
        },
        {
          "lineno": 8,
          "line": "    private let value: JsonValue"
        },
        {
          "lineno": 9,
          "line": ""
        },
        {
          "lineno": 13,
          "line": ""
        },
        {
          "lineno": 23,
          "line": ""
        },
        {
          "lineno": 31,
          "line": ""
        },
        {
          "lineno": 42,
          "line": ""
        },
        {
          "lineno": 53,
          "line": ""
        },
        {
          "lineno": 54,
          "line": "    public prop array: Option<Array<Json>> {"
        },
        {
          "lineno": 55,
          "line": "        get() {"
        },
        {
          "lineno": 56,
          "line": "            match (this.value.kind()) {"
        },
        {
          "lineno": 57,
          "line": "                case JsonKind.JsArray => return collectArray("
        },
        {
          "lineno": 58,
          "line": "                    this.value.asArray().getItems() |> map {e => Json(value: e)})"
        },
        {
          "lineno": 59,
          "line": "                case _ => return Option.None"
        },
        {
          "lineno": 60,
          "line": "            }"
        },
        {
          "lineno": 61,
          "line": "        }"
        },
        {
          "lineno": 62,
          "line": "    }"
        },
        {
          "lineno": 63,
          "line": ""
        },
        {
          "lineno": 64,
          "line": "    public prop arrayValue: Array<Json> {"
        },
        {
          "lineno": 65,
          "line": "        get() {"
        },
        {
          "lineno": 66,
          "line": "            match (this.array) {"
        },
        {
          "lineno": 67,
          "line": "                case Option.Some(v) => return v"
        },
        {
          "lineno": 68,
          "line": "                case Option.None => return Array()"
        },
        {
          "lineno": 69,
          "line": "            }"
        },
        {
          "lineno": 70,
          "line": "        }"
        },
        {
          "lineno": 71,
          "line": "    }"
        },
        {
          "lineno": 72,
          "line": ""
        },
        {
          "lineno": 73,
          "line": "    public prop dataModel: DataModel {"
        },
        {
          "lineno": 74,
          "line": "        get() {"
        },
        {
          "lineno": 75,
          "line": "            return DataModel.fromJson(this.value)"
        },
        {
          "lineno": 76,
          "line": "        }"
        },
        {
          "lineno": 77,
          "line": "    }"
        },
        {
          "lineno": 78,
          "line": ""
        },
        {
          "lineno": 79,
          "line": "    public prop bool: Option<Bool> {"
        },
        {
          "lineno": 80,
          "line": "        get() {"
        },
        {
          "lineno": 81,
          "line": "            match (this.value.kind()) {"
        },
        {
          "lineno": 82,
          "line": "                case JsonKind.JsBool => return Option.Some(this.value.asBool().getValue())"
        },
        {
          "lineno": 83,
          "line": "                case _ => return Option.None"
        },
        {
          "lineno": 84,
          "line": "            }"
        },
        {
          "lineno": 85,
          "line": "        }"
        },
        {
          "lineno": 86,
          "line": "    }"
        },
        {
          "lineno": 87,
          "line": ""
        },
        {
          "lineno": 88,
          "line": "    public prop boolValue: Bool {"
        },
        {
          "lineno": 89,
          "line": "        get() {"
        },
        {
          "lineno": 90,
          "line": "            match (this.bool) {"
        },
        {
          "lineno": 91,
          "line": "                case Option.Some(v) => return v"
        },
        {
          "lineno": 92,
          "line": "                case Option.None => return false"
        },
        {
          "lineno": 93,
          "line": "            }"
        },
        {
          "lineno": 94,
          "line": "        }"
        },
        {
          "lineno": 95,
          "line": "    }"
        },
        {
          "lineno": 96,
          "line": ""
        },
        {
          "lineno": 97,
          "line": "    public prop int64: Option<Int64> {"
        },
        {
          "lineno": 98,
          "line": "        get() {"
        },
        {
          "lineno": 99,
          "line": "            match (this.value.kind()) {"
        },
        {
          "lineno": 100,
          "line": "                case JsonKind.JsInt => return Option.Some(this.value.asInt().getValue())"
        },
        {
          "lineno": 101,
          "line": "                case _ => return Option.None"
        },
        {
          "lineno": 102,
          "line": "            }"
        },
        {
          "lineno": 103,
          "line": "        }"
        },
        {
          "lineno": 104,
          "line": "    }"
        },
        {
          "lineno": 105,
          "line": ""
        },
        {
          "lineno": 106,
          "line": "    public prop int64Value: Int64 {"
        },
        {
          "lineno": 107,
          "line": "        get() {"
        },
        {
          "lineno": 108,
          "line": "            match (this.int64) {"
        },
        {
          "lineno": 109,
          "line": "                case Option.Some(v) => return v"
        },
        {
          "lineno": 110,
          "line": "                case Option.None => return 0"
        },
        {
          "lineno": 111,
          "line": "            }"
        },
        {
          "lineno": 112,
          "line": "        }"
        },
        {
          "lineno": 113,
          "line": "    }"
        },
        {
          "lineno": 114,
          "line": ""
        },
        {
          "lineno": 115,
          "line": "    public prop float64: Option<Float64> {"
        },
        {
          "lineno": 116,
          "line": "        get() {"
        },
        {
          "lineno": 117,
          "line": "            match (this.value.kind()) {"
        },
        {
          "lineno": 118,
          "line": "                case JsonKind.JsFloat => return Option.Some(this.value.asFloat().getValue())"
        },
        {
          "lineno": 119,
          "line": "                case _ => return Option.None"
        },
        {
          "lineno": 120,
          "line": "            }"
        },
        {
          "lineno": 121,
          "line": "        }"
        },
        {
          "lineno": 122,
          "line": "    }"
        },
        {
          "lineno": 123,
          "line": ""
        },
        {
          "lineno": 124,
          "line": "    public prop float64Value: Float64 {"
        },
        {
          "lineno": 125,
          "line": "        get() {"
        },
        {
          "lineno": 126,
          "line": "            match (this.float64) {"
        },
        {
          "lineno": 127,
          "line": "                case Option.Some(v) => return v"
        },
        {
          "lineno": 128,
          "line": "                case Option.None => return 0.0"
        },
        {
          "lineno": 129,
          "line": "            }"
        },
        {
          "lineno": 130,
          "line": "        }"
        },
        {
          "lineno": 131,
          "line": "    }"
        },
        {
          "lineno": 132,
          "line": ""
        },
        {
          "lineno": 133,
          "line": "    public prop string: Option<String> {"
        },
        {
          "lineno": 134,
          "line": "        get() {"
        },
        {
          "lineno": 135,
          "line": "            match (this.value.kind()) {"
        },
        {
          "lineno": 136,
          "line": "                case JsonKind.JsString => return Option.Some(this.value.asString().getValue())"
        },
        {
          "lineno": 137,
          "line": "                case _ => return Option.None"
        },
        {
          "lineno": 138,
          "line": "            }"
        },
        {
          "lineno": 139,
          "line": "        }"
        },
        {
          "lineno": 140,
          "line": "    }"
        },
        {
          "lineno": 141,
          "line": ""
        },
        {
          "lineno": 142,
          "line": "    public prop stringValue: String {"
        },
        {
          "lineno": 143,
          "line": "        get() {"
        },
        {
          "lineno": 144,
          "line": "            match (this.string) {"
        },
        {
          "lineno": 145,
          "line": "                case Option.Some(v) => return v"
        },
        {
          "lineno": 146,
          "line": "                case Option.None => return \"\""
        },
        {
          "lineno": 147,
          "line": "            }"
        },
        {
          "lineno": 148,
          "line": "        }"
        },
        {
          "lineno": 149,
          "line": "    }"
        },
        {
          "lineno": 150,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "start_line": 7,
          "end_line": 8,
          "label": "public struct Json {\n    private let value: JsonValue",
          "successors": [
            {
              "id": 2,
              "start_line": 54,
              "end_line": 55,
              "label": "    public prop array: Option<Array<Json>> {\n        get() {",
              "successors": [
                {
                  "id": 3,
                  "start_line": 56,
                  "end_line": 56,
                  "label": "            match (this.value.kind()) {",
                  "successors": [
                    {
                      "id": 4,
                      "start_line": 57,
                      "end_line": 58,
                      "label": "                case JsonKind.JsArray => return collectArray(\n                    this.value.asArray().getItems() |> map {e => Json(value: e)})",
                      "successors": []
                    },
                    {
                      "id": 5,
                      "start_line": 59,
                      "end_line": 59,
                      "label": "                case _ => return Option.None",
                      "successors": []
                    }
                  ]
                },
                {
                  "id": 6,
                  "start_line": 60,
                  "end_line": 62,
                  "label": "            }\n        }\n    }",
                  "successors": []
                }
              ]
            },
            {
              "id": 7,
              "start_line": 64,
              "end_line": 65,
              "label": "    public prop arrayValue: Array<Json> {\n        get() {",
              "successors": [
                {
                  "id": 8,
                  "start_line": 66,
                  "end_line": 66,
                  "label": "            match (this.array) {",
                  "successors": [
                    {
                      "id": 9,
                      "start_line": 67,
                      "end_line": 67,
                      "label": "                case Option.Some(v) => return v",
                      "successors": []
                    },
                    {
                      "id": 10,
                      "start_line": 68,
                      "end_line": 68,
                      "label": "                case Option.None => return Array()",
                      "successors": []
                    }
                  ]
                },
                {
                  "id": 11,
                  "start_line": 69,
                  "end_line": 71,
                  "label": "            }\n        }\n    }",
                  "successors": []
                }
              ]
            },
            {
              "id": 12,
              "start_line": 73,
              "end_line": 77,
              "label": "    public prop dataModel: DataModel {\n        get() {\n            return DataModel.fromJson(this.value)\n        }\n    }",
              "successors": []
            },
            {
              "id": 13,
              "start_line": 79,
              "end_line": 80,
              "label": "    public prop bool: Option<Bool> {\n        get() {",
              "successors": [
                {
                  "id": 14,
                  "start_line": 81,
                  "end_line": 81,
                  "label": "            match (this.value.kind()) {",
                  "successors": [
                    {
                      "id": 15,
                      "start_line": 82,
                      "end_line": 82,
                      "label": "                case JsonKind.JsBool => return Option.Some(this.value.asBool().getValue())",
                      "successors": []
                    },
                    {
                      "id": 16,
                      "start_line": 83,
                      "end_line": 83,
                      "label": "                case _ => return Option.None",
                      "successors": []
                    }
                  ]
                },
                {
                  "id": 17,
                  "start_line": 84,
                  "end_line": 86,
                  "label": "            }\n        }\n    }",
                  "successors": []
                }
              ]
            },
            {
              "id": 18,
              "start_line": 88,
              "end_line": 89,
              "label": "    public prop boolValue: Bool {\n        get() {",
              "successors": [
                {
                  "id": 19,
                  "start_line": 90,
                  "end_line": 90,
                  "label": "            match (this.bool) {",
                  "successors": [
                    {
                      "id": 20,
                      "start_line": 91,
                      "end_line": 91,
                      "label": "                case Option.Some(v) => return v",
                      "successors": []
                    },
                    {
                      "id": 21,
                      "start_line": 92,
                      "end_line": 92,
                      "label": "                case Option.None => return false",
                      "successors": []
                    }
                  ]
                },
                {
                  "id": 22,
                  "start_line": 93,
                  "end_line": 95,
                  "label": "            }\n        }\n    }",
                  "successors": []
                }
              ]
            },
            {
              "id": 23,
              "start_line": 97,
              "end_line": 98,
              "label": "    public prop int64: Option<Int64> {\n        get() {",
              "successors": [
                {
                  "id": 24,
                  "start_line": 99,
                  "end_line": 99,
                  "label": "            match (this.value.kind()) {",
                  "successors": [
                    {
                      "id": 25,
                      "start_line": 100,
                      "end_line": 100,
                      "label": "                case JsonKind.JsInt => return Option.Some(this.value.asInt().getValue())",
                      "successors": []
                    },
                    {
                      "id": 26,
                      "start_line": 101,
                      "end_line": 101,
                      "label": "                case _ => return Option.None",
                      "successors": []
                    }
                  ]
                },
                {
                  "id": 27,
                  "start_line": 102,
                  "end_line": 104,
                  "label": "            }\n        }\n    }",
                  "successors": []
                }
              ]
            },
            {
              "id": 28,
              "start_line": 106,
              "end_line": 107,
              "label": "    public prop int64Value: Int64 {\n        get() {",
              "successors": [
                {
                  "id": 29,
                  "start_line": 108,
                  "end_line": 108,
                  "label": "            match (this.int64) {",
                  "successors": [
                    {
                      "id": 30,
                      "start_line": 109,
                      "end_line": 109,
                      "label": "                case Option.Some(v) => return v",
                      "successors": []
                    },
                    {
                      "id": 31,
                      "start_line": 110,
                      "end_line": 110,
                      "label": "                case Option.None => return 0",
                      "successors": []
                    }
                  ]
                },
                {
                  "id": 32,
                  "start_line": 111,
                  "end_line": 113,
                  "label": "            }\n        }\n    }",
                  "successors": []
                }
              ]
            },
            {
              "id": 33,
              "start_line": 115,
              "end_line": 116,
              "label": "    public prop float64: Option<Float64> {\n        get() {",
              "successors": [
                {
                  "id": 34,
                  "start_line": 117,
                  "end_line": 117,
                  "label": "            match (this.value.kind()) {",
                  "successors": [
                    {
                      "id": 35,
                      "start_line": 118,
                      "end_line": 118,
                      "label": "                case JsonKind.JsFloat => return Option.Some(this.value.asFloat().getValue())",
                      "successors": []
                    },
                    {
                      "id": 36,
                      "start_line": 119,
                      "end_line": 119,
                      "label": "                case _ => return Option.None",
                      "successors": []
                    }
                  ]
                },
                {
                  "id": 37,
                  "start_line": 120,
                  "end_line": 122,
                  "label": "            }\n        }\n    }",
                  "successors": []
                }
              ]
            },
            {
              "id": 38,
              "start_line": 124,
              "end_line": 125,
              "label": "    public prop float64Value: Float64 {\n        get() {",
              "successors": [
                {
                  "id": 39,
                  "start_line": 126,
                  "end_line": 126,
                  "label": "            match (this.float64) {",
                  "successors": [
                    {
                      "id": 40,
                      "start_line": 127,
                      "end_line": 127,
                      "label": "                case Option.Some(v) => return v",
                      "successors": []
                    },
                    {
                      "id": 41,
                      "start_line": 128,
                      "end_line": 128,
                      "label": "                case Option.None => return 0.0",
                      "successors": []
                    }
                  ]
                },
                {
                  "id": 42,
                  "start_line": 129,
                  "end_line": 131,
                  "label": "            }\n        }\n    }",
                  "successors": []
                }
              ]
            },
            {
              "id": 43,
              "start_line": 133,
              "end_line": 134,
              "label": "    public prop string: Option<String> {\n        get() {",
              "successors": [
                {
                  "id": 44,
                  "start_line": 135,
                  "end_line": 135,
                  "label": "            match (this.value.kind()) {",
                  "successors": [
                    {
                      "id": 45,
                      "start_line": 136,
                      "end_line": 136,
                      "label": "                case JsonKind.JsString => return Option.Some(this.value.asString().getValue())",
                      "successors": []
                    },
                    {
                      "id": 46,
                      "start_line": 137,
                      "end_line": 137,
                      "label": "                case _ => return Option.None",
                      "successors": []
                    }
                  ]
                },
                {
                  "id": 47,
                  "start_line": 138,
                  "end_line": 140,
                  "label": "            }\n        }\n    }",
                  "successors": []
                }
              ]
            },
            {
              "id": 48,
              "start_line": 142,
              "end_line": 143,
              "label": "    public prop stringValue: String {\n        get() {",
              "successors": [
                {
                  "id": 49,
                  "start_line": 144,
                  "end_line": 144,
                  "label": "            match (this.string) {",
                  "successors": [
                    {
                      "id": 50,
                      "start_line": 145,
                      "end_line": 145,
                      "label": "                case Option.Some(v) => return v",
                      "successors": []
                    },
                    {
                      "id": 51,
                      "start_line": 146,
                      "end_line": 146,
                      "label": "                case Option.None => return \"\"",
                      "successors": []
                    }
                  ]
                },
                {
                  "id": 52,
                  "start_line": 147,
                  "end_line": 149,
                  "label": "            }\n        }\n    }",
                  "successors": []
                }
              ]
            },
            {
              "id": 53,
              "start_line": 150,
              "end_line": 150,
              "label": "}",
              "successors": []
            }
          ]
        }
      ]
    }
  ],
  "simplified_code": [
    {
      "lineno": 1,
      "line": "package SimpleJsonReader"
    },
    {
      "lineno": 2,
      "line": ""
    },
    {
      "lineno": 3,
      "line": "import encoding.json.*"
    },
    {
      "lineno": 4,
      "line": "import std.collection.*"
    },
    {
      "lineno": 5,
      "line": "import serialization.serialization.*"
    },
    {
      "lineno": 6,
      "line": ""
    }
  ],
  "blocks": [
    {
      "id": 1,
      "start_line": 1,
      "end_line": 5,
      "label": "package SimpleJsonReader\n\nimport encoding.json.*\nimport std.collection.*\nimport serialization.serialization.*",
      "successors": []
    }
  ]
}