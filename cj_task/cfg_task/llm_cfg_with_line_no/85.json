{
  "name": "SimpleJsonReader",
  "type": "CFG",
  "start_line": 1,
  "end_line": 26,
  "functions": [],
  "classes": [
    {
      "name": "JsonChainTest",
      "type": "class",
      "start_line": 7,
      "end_line": 26,
      "functions": [
        {
          "name": "testExist",
          "type": "function",
          "start_line": 18,
          "end_line": 20,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 18,
              "line": "    func testExist() {        "
            },
            {
              "lineno": 19,
              "line": "        @Expect(json[\"struct\"][\"key\"].stringValue, \"value\")"
            },
            {
              "lineno": 20,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 18,
              "end_line": 20,
              "label": "    func testExist() {        \n        @Expect(json[\"struct\"][\"key\"].stringValue, \"value\")\n    }",
              "successors": []
            }
          ]
        },
        {
          "name": "testNotExist",
          "type": "function",
          "start_line": 23,
          "end_line": 25,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 23,
              "line": "    func testNotExist() {        "
            },
            {
              "lineno": 24,
              "line": "        @Expect(json[\"a\"][\"b\"][99][\"c\"][\"*\"][\"@\"][-1].stringValue, \"\")"
            },
            {
              "lineno": 25,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 23,
              "end_line": 25,
              "label": "    func testNotExist() {        \n        @Expect(json[\"a\"][\"b\"][99][\"c\"][\"*\"][\"@\"][-1].stringValue, \"\")\n    }",
              "successors": []
            }
          ]
        }
      ],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 7,
          "line": "class JsonChainTest {"
        },
        {
          "lineno": 8,
          "line": ""
        },
        {
          "lineno": 9,
          "line": "    private let json = Json(str: #\""
        },
        {
          "lineno": 10,
          "line": "    {"
        },
        {
          "lineno": 11,
          "line": "        \"array\": [1, 2, 3],"
        },
        {
          "lineno": 12,
          "line": "        \"struct\": {"
        },
        {
          "lineno": 13,
          "line": "            \"key\": \"value\""
        },
        {
          "lineno": 14,
          "line": "        }"
        },
        {
          "lineno": 15,
          "line": "    }\"#)"
        },
        {
          "lineno": 16,
          "line": ""
        },
        {
          "lineno": 17,
          "line": "    @TestCase"
        },
        {
          "lineno": 21,
          "line": ""
        },
        {
          "lineno": 22,
          "line": "    @TestCase"
        },
        {
          "lineno": 26,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "start_line": 7,
          "end_line": 26,
          "label": "class JsonChainTest {\n\n    private let json = Json(str: #\"\n    {\n        \"array\": [1, 2, 3],\n        \"struct\": {\n            \"key\": \"value\"\n        }\n    }\"#)\n\n    @TestCase\n\n    @TestCase\n}",
          "successors": []
        }
      ]
    }
  ],
  "simplified_code": [
    {
      "lineno": 1,
      "line": "package SimpleJsonReader"
    },
    {
      "lineno": 2,
      "line": ""
    },
    {
      "lineno": 3,
      "line": "import std.unittest.*"
    },
    {
      "lineno": 4,
      "line": "import std.unittest.testmacro.*"
    },
    {
      "lineno": 5,
      "line": ""
    },
    {
      "lineno": 6,
      "line": "@Test"
    }
  ],
  "blocks": [
    {
      "id": 1,
      "start_line": 1,
      "end_line": 4,
      "label": [
        "package SimpleJsonReader",
        "",
        "import std.unittest.*",
        "import std.unittest.testmacro.*"
      ],
      "successors": [
        {
          "id": 2,
          "start_line": 6,
          "end_line": 6,
          "label": [
            "@Test"
          ],
          "successors": []
        }
      ]
    }
  ]
}