{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 56,
  "functions": [],
  "classes": [
    {
      "name": "DropletOption<T>",
      "type": "class",
      "start_line": 2,
      "end_line": 56,
      "functions": [
        {
          "name": "init",
          "type": "function",
          "start_line": 7,
          "end_line": 12,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 7,
              "line": "    private init(key: String, defaultValue: T, cacheKeyUpdater: CacheKeyUpdater<T>) {"
            },
            {
              "lineno": 8,
              "line": "        super(key)"
            },
            {
              "lineno": 9,
              "line": "        this.defaultValue = Some(defaultValue)"
            },
            {
              "lineno": 10,
              "line": "        this.cacheKeyUpdater = cacheKeyUpdater"
            },
            {
              "lineno": 11,
              "line": "        this.keyBytes = key.toArray()"
            },
            {
              "lineno": 12,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 7,
              "end_line": 12,
              "label": "    private init(key: String, defaultValue: T, cacheKeyUpdater: CacheKeyUpdater<T>) {\n        super(key)\n        this.defaultValue = Some(defaultValue)\n        this.cacheKeyUpdater = cacheKeyUpdater\n        this.keyBytes = key.toArray()\n    }",
              "successors": []
            }
          ]
        },
        {
          "name": "init",
          "type": "function",
          "start_line": 13,
          "end_line": 18,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 13,
              "line": "    private init(key: String, cacheKeyUpdater: CacheKeyUpdater<T>) {"
            },
            {
              "lineno": 14,
              "line": "        super(key)"
            },
            {
              "lineno": 15,
              "line": "        this.defaultValue = None"
            },
            {
              "lineno": 16,
              "line": "        this.cacheKeyUpdater = cacheKeyUpdater"
            },
            {
              "lineno": 17,
              "line": "        this.keyBytes = key.toArray()"
            },
            {
              "lineno": 18,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 13,
              "end_line": 18,
              "label": "    private init(key: String, cacheKeyUpdater: CacheKeyUpdater<T>) {\n        super(key)\n        this.defaultValue = None\n        this.cacheKeyUpdater = cacheKeyUpdater\n        this.keyBytes = key.toArray()\n    }",
              "successors": []
            }
          ]
        },
        {
          "name": "getKeyBytes",
          "type": "function",
          "start_line": 19,
          "end_line": 21,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 19,
              "line": "    private func getKeyBytes(): Array<UInt8> {"
            },
            {
              "lineno": 20,
              "line": "        return keyBytes;"
            },
            {
              "lineno": 21,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 19,
              "end_line": 21,
              "label": "    private func getKeyBytes(): Array<UInt8> {\n        return keyBytes;\n    }",
              "successors": []
            }
          ]
        },
        {
          "name": "equals<V>",
          "type": "function",
          "start_line": 22,
          "end_line": 28,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 22,
              "line": "    public func equals<V>(o: Any): Bool where V <: AnyDropletOptionValue {"
            },
            {
              "lineno": 23,
              "line": "        if (o is DropletOption<V>) {"
            },
            {
              "lineno": 24,
              "line": "            var other: DropletOption<V> = (o as DropletOption<V>).getOrThrow();"
            },
            {
              "lineno": 25,
              "line": "            return key == other.key"
            },
            {
              "lineno": 26,
              "line": "        }"
            },
            {
              "lineno": 27,
              "line": "        return false;"
            },
            {
              "lineno": 28,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 22,
              "end_line": 22,
              "label": "public func equals<V>(o: Any): Bool where V <: AnyDropletOptionValue {",
              "successors": [
                {
                  "id": 2,
                  "start_line": 23,
                  "end_line": 23,
                  "label": "if (o is DropletOption<V>) {",
                  "successors": [
                    {
                      "id": 3,
                      "start_line": 24,
                      "end_line": 25,
                      "label": "var other: DropletOption<V> = (o as DropletOption<V>).getOrThrow();\nreturn key == other.key",
                      "successors": []
                    },
                    {
                      "id": 4,
                      "start_line": 27,
                      "end_line": 27,
                      "label": "return false;",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "emptyUpdater",
          "type": "function",
          "start_line": 29,
          "end_line": 31,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 29,
              "line": "    private static func emptyUpdater(): CacheKeyUpdater<T> {"
            },
            {
              "lineno": 30,
              "line": "        return EMPTY_UPDATER"
            },
            {
              "lineno": 31,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 29,
              "end_line": 30,
              "label": "    private static func emptyUpdater(): CacheKeyUpdater<T> {",
              "successors": [
                {
                  "id": 2,
                  "start_line": 30,
                  "end_line": 31,
                  "label": "        return EMPTY_UPDATER\n    }",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "update",
          "type": "function",
          "start_line": 32,
          "end_line": 34,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 32,
              "line": "     func update(value: T, md5: MD5) {"
            },
            {
              "lineno": 33,
              "line": "        cacheKeyUpdater.update(key, value, md5);"
            },
            {
              "lineno": 34,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 32,
              "end_line": 34,
              "label": "     func update(value: T, md5: MD5) {\n        cacheKeyUpdater.update(key, value, md5);\n    }",
              "successors": []
            }
          ]
        },
        {
          "name": "getDefaultValue",
          "type": "function",
          "start_line": 35,
          "end_line": 37,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 35,
              "line": "     func getDefaultValue(): Option<T> {"
            },
            {
              "lineno": 36,
              "line": "        return defaultValue;"
            },
            {
              "lineno": 37,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 35,
              "end_line": 37,
              "label": "func getDefaultValue(): Option<T> {\n return defaultValue;\n}",
              "successors": []
            }
          ]
        },
        {
          "name": "disk<V>",
          "type": "function",
          "start_line": 38,
          "end_line": 40,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 38,
              "line": "    public static func disk<V>(key: String, defaultValue: V, cacheKeyUpdater: CacheKeyUpdater<V>): DropletOption<V> where V <: AnyDropletOptionValue {"
            },
            {
              "lineno": 39,
              "line": "        return DropletOption<V>(key, defaultValue, cacheKeyUpdater);"
            },
            {
              "lineno": 40,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 38,
              "end_line": 39,
              "label": "    public static func disk<V>(key: String, defaultValue: V, cacheKeyUpdater: CacheKeyUpdater<V>): DropletOption<V> where V <: AnyDropletOptionValue {\n        return DropletOption<V>(key, defaultValue, cacheKeyUpdater);",
              "successors": [
                {
                  "id": 2,
                  "start_line": 40,
                  "end_line": 40,
                  "label": "    }",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "disk<V>",
          "type": "function",
          "start_line": 41,
          "end_line": 43,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 41,
              "line": "    public static func disk<V>(key: String, cacheKeyUpdater: CacheKeyUpdater<V>): DropletOption<V> where V <: AnyDropletOptionValue {"
            },
            {
              "lineno": 42,
              "line": "        return DropletOption<V>(key, cacheKeyUpdater);"
            },
            {
              "lineno": 43,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 41,
              "end_line": 43,
              "label": "    public static func disk<V>(key: String, cacheKeyUpdater: CacheKeyUpdater<V>): DropletOption<V> where V <: AnyDropletOptionValue {\n        return DropletOption<V>(key, cacheKeyUpdater);\n    }",
              "successors": []
            }
          ]
        },
        {
          "name": "memory",
          "type": "function",
          "start_line": 44,
          "end_line": 46,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 44,
              "line": "    public static func memory(key: String, defaultValue: T): DropletOption<T> {"
            },
            {
              "lineno": 45,
              "line": "        return DropletOption<T>(key, defaultValue, emptyUpdater());"
            },
            {
              "lineno": 46,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 44,
              "end_line": 45,
              "label": "    public static func memory(key: String, defaultValue: T): DropletOption<T> {\n        return DropletOption<T>(key, defaultValue, emptyUpdater());",
              "successors": [
                {
                  "id": 2,
                  "start_line": 46,
                  "end_line": 46,
                  "label": "    }",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "memory",
          "type": "function",
          "start_line": 47,
          "end_line": 49,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 47,
              "line": "    public static func memory(key: String): DropletOption<T> {"
            },
            {
              "lineno": 48,
              "line": "        return DropletOption<T>(key, emptyUpdater());"
            },
            {
              "lineno": 49,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 47,
              "end_line": 49,
              "label": "    public static func memory(key: String): DropletOption<T> {\n        return DropletOption<T>(key, emptyUpdater());\n    }",
              "successors": []
            }
          ]
        },
        {
          "name": "operator==",
          "type": "function",
          "start_line": 50,
          "end_line": 52,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 50,
              "line": "    public operator func ==(that: DropletOption<T>): Bool {"
            },
            {
              "lineno": 51,
              "line": "        return key == that.key"
            },
            {
              "lineno": 52,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 50,
              "end_line": 52,
              "label": "    public operator func ==(that: DropletOption<T>): Bool {\n        return key == that.key\n    }",
              "successors": []
            }
          ]
        },
        {
          "name": "operator!=",
          "type": "function",
          "start_line": 53,
          "end_line": 55,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 53,
              "line": "    public operator func !=(that: DropletOption<T>): Bool {"
            },
            {
              "lineno": 54,
              "line": "        return key != that.key"
            },
            {
              "lineno": 55,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 53,
              "end_line": 53,
              "label": "    public operator func !=(that: DropletOption<T>): Bool {",
              "successors": [
                {
                  "id": 2,
                  "start_line": 54,
                  "end_line": 54,
                  "label": "        return key != that.key",
                  "successors": [
                    {
                      "id": 3,
                      "start_line": 55,
                      "end_line": 55,
                      "label": "    }",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 2,
          "line": "public class DropletOption<T> <: AnyDropletOptionKey & Equatable<DropletOption<T>> where T <: AnyDropletOptionValue {"
        },
        {
          "lineno": 3,
          "line": "    private static let EMPTY_UPDATER: EmptyUpdater<T> = EmptyUpdater<T>()"
        },
        {
          "lineno": 4,
          "line": "    private let defaultValue: Option<T>"
        },
        {
          "lineno": 5,
          "line": "    private let cacheKeyUpdater: CacheKeyUpdater<T>"
        },
        {
          "lineno": 6,
          "line": "    private var keyBytes: Array<UInt8>"
        },
        {
          "lineno": 56,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "start_line": 2,
          "end_line": 6,
          "label": "public class DropletOption<T> <: AnyDropletOptionKey & Equatable<DropletOption<T>> where T <: AnyDropletOptionValue {\n    private static let EMPTY_UPDATER: EmptyUpdater<T> = EmptyUpdater<T>()\n    private let defaultValue: Option<T>\n    private let cacheKeyUpdater: CacheKeyUpdater<T>\n    private var keyBytes: Array<UInt8>\n}",
          "successors": []
        }
      ]
    }
  ],
  "simplified_code": [
    {
      "lineno": 1,
      "line": "package droplet.droplet"
    }
  ],
  "blocks": [
    {
      "id": 1,
      "start_line": 225,
      "end_line": 203452
    }
  ]
}