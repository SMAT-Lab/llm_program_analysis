{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 28,
  "functions": [],
  "classes": [
    {
      "name": "CompressorInputStream",
      "type": "class",
      "start_line": 3,
      "end_line": 28,
      "functions": [
        {
          "name": "length",
          "type": "function",
          "start_line": 5,
          "end_line": 9,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 5,
              "line": "    public open prop length: Int64 {"
            },
            {
              "lineno": 6,
              "line": "        get() {"
            },
            {
              "lineno": 7,
              "line": "            -1"
            },
            {
              "lineno": 8,
              "line": "        }"
            },
            {
              "lineno": 9,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 5,
              "end_line": 9,
              "label": "    public open prop length: Int64 {\n        get() {\n            -1\n        }\n    }",
              "successors": []
            }
          ]
        },
        {
          "name": "count",
          "type": "function",
          "start_line": 10,
          "end_line": 14,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 10,
              "line": "    protected func count(read: Int64) {"
            },
            {
              "lineno": 11,
              "line": "        if (read != -1) {"
            },
            {
              "lineno": 12,
              "line": "            bytesRead += read"
            },
            {
              "lineno": 13,
              "line": "        }"
            },
            {
              "lineno": 14,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 10,
              "end_line": 10,
              "label": "    protected func count(read: Int64) {",
              "successors": [
                {
                  "id": 2,
                  "start_line": 11,
                  "end_line": 11,
                  "label": "        if (read != -1) {",
                  "successors": [
                    {
                      "id": 3,
                      "start_line": 12,
                      "end_line": 12,
                      "label": "            bytesRead += read",
                      "successors": [
                        {
                          "id": 4,
                          "start_line": 13,
                          "end_line": 14,
                          "label": "        }\n    }",
                          "successors": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "pushedBackBytes",
          "type": "function",
          "start_line": 15,
          "end_line": 17,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 15,
              "line": "    protected func pushedBackBytes(pushBack: Int64) {"
            },
            {
              "lineno": 16,
              "line": "        bytesRead -= pushBack"
            },
            {
              "lineno": 17,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 15,
              "end_line": 17,
              "label": "    protected func pushedBackBytes(pushBack: Int64) {\n        bytesRead -= pushBack\n    }",
              "successors": []
            }
          ]
        },
        {
          "name": "getBytesRead",
          "type": "function",
          "start_line": 18,
          "end_line": 20,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 18,
              "line": "    public func getBytesRead(): Int64 {"
            },
            {
              "lineno": 19,
              "line": "        return bytesRead"
            },
            {
              "lineno": 20,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 18,
              "end_line": 19,
              "label": "    public func getBytesRead(): Int64 {\n        return bytesRead",
              "successors": [
                {
                  "id": 2,
                  "start_line": 20,
                  "end_line": 20,
                  "label": "    }",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "getUncompressedCount",
          "type": "function",
          "start_line": 21,
          "end_line": 23,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 21,
              "line": "    public func getUncompressedCount(): Int64 {"
            },
            {
              "lineno": 22,
              "line": "        return getBytesRead()"
            },
            {
              "lineno": 23,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 21,
              "end_line": 23,
              "label": "    public func getUncompressedCount(): Int64 {\n        return getBytesRead()\n    }",
              "successors": []
            }
          ]
        },
        {
          "name": "isClosed",
          "type": "function",
          "start_line": 24,
          "end_line": 26,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 24,
              "line": "    public open func isClosed(): Bool {"
            },
            {
              "lineno": 25,
              "line": "        false"
            },
            {
              "lineno": 26,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 24,
              "end_line": 25,
              "label": "    public open func isClosed(): Bool {\n        false",
              "successors": [
                {
                  "id": 2,
                  "start_line": 26,
                  "end_line": 26,
                  "label": "    }",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "close",
          "type": "function",
          "start_line": 27,
          "end_line": 27,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 27,
              "line": "    public open func close(): Unit {}"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 27,
              "end_line": 27,
              "label": "    public open func close(): Unit {}",
              "successors": []
            }
          ]
        }
      ],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 3,
          "line": "public abstract class CompressorInputStream <: InputStream & Resource {"
        },
        {
          "lineno": 4,
          "line": "    private var bytesRead: Int64 = 0"
        },
        {
          "lineno": 28,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "start_line": 3,
          "end_line": 28,
          "label": "public abstract class CompressorInputStream <: InputStream & Resource {\n    private var bytesRead: Int64 = 0\n}",
          "successors": []
        }
      ]
    }
  ],
  "simplified_code": [
    {
      "lineno": 1,
      "line": "package compress4cj.compressors"
    },
    {
      "lineno": 2,
      "line": "import std.io.InputStream"
    }
  ],
  "blocks": [
    {
      "id": 1,
      "start_line": 1,
      "end_line": 1,
      "label": "package compress4cj.compressors",
      "successors": [
        {
          "id": 2,
          "start_line": 2,
          "end_line": 2,
          "label": "import std.io.InputStream",
          "successors": []
        }
      ]
    }
  ]
}