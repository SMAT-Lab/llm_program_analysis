{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 69,
  "functions": [
    {
      "name": "readFile",
      "type": "function",
      "start_line": 26,
      "end_line": 28,
      "functions": [],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 26,
          "line": "func readFile(path: String): String {"
        },
        {
          "lineno": 27,
          "line": "    return String.fromUtf8(File.readFrom(path))"
        },
        {
          "lineno": 28,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "start_line": 26,
          "end_line": 27,
          "label": "func readFile(path: String): String {\n    return String.fromUtf8(File.readFrom(path))",
          "successors": [
            {
              "id": 2,
              "start_line": 28,
              "end_line": 28,
              "label": "}",
              "successors": []
            }
          ]
        }
      ]
    },
    {
      "name": "main",
      "type": "function",
      "start_line": 30,
      "end_line": 69,
      "functions": [],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 30,
          "line": "main() {"
        },
        {
          "lineno": 31,
          "line": "    let server = HttpServer(\"127.0.0.1\", 8080)"
        },
        {
          "lineno": 32,
          "line": "    // 响应 GET 请求"
        },
        {
          "lineno": 33,
          "line": "    server.route(\"/\", { req, res => "
        },
        {
          "lineno": 34,
          "line": "        if (req.method == \"GET\") {"
        },
        {
          "lineno": 35,
          "line": "            // 设置 http 响应头"
        },
        {
          "lineno": 36,
          "line": "            let Headers = HttpHeaders()"
        },
        {
          "lineno": 37,
          "line": "            Headers.add(\"Content-Type\", \"text/html;charset=utf-8;\")"
        },
        {
          "lineno": 38,
          "line": "            res.setHeaders(Headers)"
        },
        {
          "lineno": 39,
          "line": "            // 返回读取一个 html 文件，并返回给客户端"
        },
        {
          "lineno": 40,
          "line": "            res.body(readFile(\"./index.html\"))"
        },
        {
          "lineno": 41,
          "line": "        }"
        },
        {
          "lineno": 42,
          "line": "    })"
        },
        {
          "lineno": 43,
          "line": "    // 响应 POST 请求"
        },
        {
          "lineno": 44,
          "line": "    server.route(\"/testApi\", { req, res => "
        },
        {
          "lineno": 45,
          "line": "        if (req.method == \"POST\") {"
        },
        {
          "lineno": 46,
          "line": "            // 读取请求内容"
        },
        {
          "lineno": 47,
          "line": "            let data = Array<UInt8>(1024, repeat: 0)"
        },
        {
          "lineno": 48,
          "line": "            let length = req.body.read(data)"
        },
        {
          "lineno": 49,
          "line": "            let content = String.fromUtf8(data.slice(0, length))"
        },
        {
          "lineno": 50,
          "line": "            println(content)"
        },
        {
          "lineno": 51,
          "line": "            let object = JsonValue.fromStr(content).asObject()"
        },
        {
          "lineno": 52,
          "line": ""
        },
        {
          "lineno": 53,
          "line": "            // 初始化一个空的 JsonObject，并添加键值和信息"
        },
        {
          "lineno": 54,
          "line": "            let response = JsonObject()"
        },
        {
          "lineno": 55,
          "line": "            response.put(\"code\", JsonValue.fromStr(\"\\\"ok\\\"\"))"
        },
        {
          "lineno": 56,
          "line": "            let UserName = object.get(\"name\").getOrThrow().asString().getValue()"
        },
        {
          "lineno": 57,
          "line": "            response.put(\"msg\", JsonValue.fromStr(\"\\\"Cangjie：Hello ${UserName}\\\"\"))"
        },
        {
          "lineno": 58,
          "line": ""
        },
        {
          "lineno": 59,
          "line": "            // 设置 http 响应头"
        },
        {
          "lineno": 60,
          "line": "            let headers = HttpHeaders()"
        },
        {
          "lineno": 61,
          "line": "            headers.add(\"Content-Type\", \"applications/json;charset=utf-8;\")"
        },
        {
          "lineno": 62,
          "line": "            res.setHeaders(headers)"
        },
        {
          "lineno": 63,
          "line": ""
        },
        {
          "lineno": 64,
          "line": "            // 将 JsonObject 转为 Json 字符串文本并响应返回"
        },
        {
          "lineno": 65,
          "line": "            res.body(response.toJsonString())"
        },
        {
          "lineno": 66,
          "line": "        }"
        },
        {
          "lineno": 67,
          "line": "    })"
        },
        {
          "lineno": 68,
          "line": "    server.start()"
        },
        {
          "lineno": 69,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "start_line": 30,
          "end_line": 32,
          "label": "main() {\n    let server = HttpServer(\"127.0.0.1\", 8080)\n    // \\\\u54cd\\\\u5e94 GET \\\\u8bf7\\\\u6c42",
          "successors": [
            {
              "id": 2,
              "start_line": 33,
              "end_line": 33,
              "label": "server.route(\"/\", { req, res => ",
              "successors": [
                {
                  "id": 3,
                  "start_line": 34,
                  "end_line": 34,
                  "label": "if (req.method == \"GET\") {",
                  "successors": [
                    {
                      "id": 4,
                      "start_line": 35,
                      "end_line": 40,
                      "label": "// \\\\u8bbe\\\\u7f6e http \\\\u54cd\\\\u5e94\\\\u5934\n            let Headers = HttpHeaders()\n            Headers.add(\"Content-Type\", \"text/html;charset=utf-8;\")\n            res.setHeaders(Headers)\n            // \\\\u8fd4\\\\u56de\\\\u8bfb\\\\u53d6\\\\u4e00\\\\u4e2a html \\\\u6587\\\\u4ef6\\\\uff0c\\\\u5e76\\\\u8fd4\\\\u56de\\\\u7ed9\\\\u5ba2\\\\u6237\\\\u7aef\n            res.body(readFile(\"./index.html\"))",
                      "successors": [
                        {
                          "id": 5,
                          "start_line": 41,
                          "end_line": 42,
                          "label": "}\n    })",
                          "successors": [
                            {
                              "id": 6,
                              "start_line": 43,
                              "end_line": 43,
                              "label": "// \\\\u54cd\\\\u5e94 POST \\\\u8bf7\\\\u6c42",
                              "successors": [
                                {
                                  "id": 7,
                                  "start_line": 44,
                                  "end_line": 44,
                                  "label": "server.route(\"/testApi\", { req, res => ",
                                  "successors": [
                                    {
                                      "id": 8,
                                      "start_line": 45,
                                      "end_line": 45,
                                      "label": "if (req.method == \"POST\") {",
                                      "successors": [
                                        {
                                          "id": 9,
                                          "start_line": 46,
                                          "end_line": 64,
                                          "label": "// \\\\u8bfb\\\\u53d6\\\\u8bf7\\\\u6c42\\\\u5185\\\\u5bb9\n            let data = Array<UInt8>(1024, repeat: 0)\n            let length = req.body.read(data)\n            let content = String.fromUtf8(data.slice(0, length))\n            println(content)\n            let object = JsonValue.fromStr(content).asObject()\n\n            // \\\\u521d\\\\u59cb\\\\u5316\\\\u4e00\\\\u4e2a\\\\u7a7a\\\\u7684 JsonObject\\\\uff0c\\\\u5e76\\\\u6dfb\\\\u52a0\\\\u952e\\\\u503c\\\\u548c\\\\u4fe1\\\\u606f\n            let response = JsonObject()\n            response.put(\"code\", JsonValue.fromStr(\"\\\\\"ok\\\\\"\"))\n            let UserName = object.get(\"name\").getOrThrow().asString().getValue()\n            response.put(\"msg\", JsonValue.fromStr(\"\\\\\"Cangjie\\\\uff1aHello ${UserName}\\\\\"\"))\n\n            // \\\\u8bbe\\\\u7f6e http \\\\u54cd\\\\u5e94\\\\u5934\n            let headers = HttpHeaders()\n            headers.add(\"Content-Type\", \"applications/json;charset=utf-8;\")\n            res.setHeaders(headers)\n\n            // \\\\u5c06 JsonObject \\\\u8f6c\\\\u4e3a Json \\\\u5b57\\\\u7b26\\\\u4e32\\\\u6587\\\\u672c\\\\u5e76\\\\u54cd\\\\u5e94\\\\u8fd4\\\\u56de\n            res.body(response.toJsonString())",
                                          "successors": [
                                            {
                                              "id": 10,
                                              "start_line": 66,
                                              "end_line": 67,
                                              "label": "}\n    })",
                                              "successors": [
                                                {
                                                  "id": 11,
                                                  "start_line": 68,
                                                  "end_line": 69,
                                                  "label": "server.start()\n}",
                                                  "successors": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ],
  "classes": [
    {
      "name": "HttpServer",
      "type": "class",
      "start_line": 7,
      "end_line": 24,
      "functions": [
        {
          "name": "init",
          "type": "function",
          "start_line": 9,
          "end_line": 12,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 9,
              "line": "    public init(ip: String, port: UInt16) {"
            },
            {
              "lineno": 10,
              "line": "        server = ServerBuilder().addr(ip).port(port).build()"
            },
            {
              "lineno": 11,
              "line": "        println(\"http://${ip}:${port}\")"
            },
            {
              "lineno": 12,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 9,
              "end_line": 12,
              "label": "    public init(ip: String, port: UInt16) {\n        server = ServerBuilder().addr(ip).port(port).build()\n        println(\"http://${ip}:${port}\")\n    }",
              "successors": []
            }
          ]
        },
        {
          "name": "route",
          "type": "function",
          "start_line": 14,
          "end_line": 19,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 14,
              "line": "    public func route(route: String,"
            },
            {
              "lineno": 15,
              "line": "        callback: (req: HttpRequest, res: HttpResponseBuilder) -> Unit) {"
            },
            {
              "lineno": 16,
              "line": "        server.distributor.register(route, { context => "
            },
            {
              "lineno": 17,
              "line": "            callback(context.request, context.responseBuilder)"
            },
            {
              "lineno": 18,
              "line": "        })"
            },
            {
              "lineno": 19,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 14,
              "end_line": 19,
              "label": "    public func route(route: String,\n        callback: (req: HttpRequest, res: HttpResponseBuilder) -> Unit) {\n        server.distributor.register(route, { context => \n            callback(context.request, context.responseBuilder)\n        })\n    }",
              "successors": []
            }
          ]
        },
        {
          "name": "start",
          "type": "function",
          "start_line": 21,
          "end_line": 23,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 21,
              "line": "    public func start() {"
            },
            {
              "lineno": 22,
              "line": "        server.serve()"
            },
            {
              "lineno": 23,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 21,
              "end_line": 23,
              "label": "    public func start() {\n        server.serve()\n    }",
              "successors": []
            }
          ]
        }
      ],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 7,
          "line": "class HttpServer {"
        },
        {
          "lineno": 8,
          "line": "    let server: Server"
        },
        {
          "lineno": 13,
          "line": ""
        },
        {
          "lineno": 20,
          "line": ""
        },
        {
          "lineno": 24,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "start_line": 7,
          "end_line": 24,
          "label": "class HttpServer {\n    let server: Server\n\n\n}",
          "successors": []
        }
      ]
    }
  ],
  "simplified_code": [
    {
      "lineno": 1,
      "line": "// 构建一个简单的 HTTP 服务器，可以响应 GET 与 POST 请求，并支持 JSON 数据"
    },
    {
      "lineno": 2,
      "line": "// cjc version: 0.55.3"
    },
    {
      "lineno": 3,
      "line": "import std.fs.{ File, OpenOption }"
    },
    {
      "lineno": 4,
      "line": "import net.http.*"
    },
    {
      "lineno": 5,
      "line": "import encoding.json.{ JsonObject, JsonValue }"
    },
    {
      "lineno": 6,
      "line": ""
    },
    {
      "lineno": 25,
      "line": ""
    },
    {
      "lineno": 29,
      "line": ""
    }
  ],
  "blocks": [
    {
      "id": 1,
      "start_line": 1,
      "end_line": 5,
      "label": "// \n// cjc version: 0.55.3\nimport std.fs.{ File, OpenOption }\nimport net.http.*\nimport encoding.json.{ JsonObject, JsonValue }",
      "successors": []
    }
  ]
}