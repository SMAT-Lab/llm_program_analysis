{
  "name": "opds_cj_router",
  "type": "CFG",
  "start_line": 1,
  "end_line": 63,
  "functions": [],
  "classes": [
    {
      "name": "NaiveDistributor",
      "type": "class",
      "start_line": 6,
      "end_line": 38,
      "functions": [
        {
          "name": "register",
          "type": "function",
          "start_line": 8,
          "end_line": 10,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 8,
              "line": "    public func register(path: String, handler: HttpRequestHandler): Unit {"
            },
            {
              "lineno": 9,
              "line": "        routerMap.put(path, handler)"
            },
            {
              "lineno": 10,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 8,
              "end_line": 9,
              "label": "    public func register(path: String, handler: HttpRequestHandler): Unit {\n        routerMap.put(path, handler)",
              "successors": [
                {
                  "id": 2,
                  "start_line": 10,
                  "end_line": 10,
                  "label": "    }",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "distribute",
          "type": "function",
          "start_line": 12,
          "end_line": 37,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 12,
              "line": "    public func distribute(path: String): HttpRequestHandler {"
            },
            {
              "lineno": 13,
              "line": "        if (routerMap.contains(path)) {"
            },
            {
              "lineno": 14,
              "line": "            return routerMap[path]"
            },
            {
              "lineno": 15,
              "line": "        }"
            },
            {
              "lineno": 16,
              "line": "        for ((routerPath, handler) in routerMap) {"
            },
            {
              "lineno": 17,
              "line": "            var fail = false"
            },
            {
              "lineno": 18,
              "line": "            var partPath = path.trimEnd(\"/\").split(\"/\")"
            },
            {
              "lineno": 19,
              "line": "            var partRouterPath = routerPath.trimEnd(\"/\").split(\"/\")"
            },
            {
              "lineno": 20,
              "line": "            if (partPath.size != partRouterPath.size) {"
            },
            {
              "lineno": 21,
              "line": "                continue"
            },
            {
              "lineno": 22,
              "line": "            }"
            },
            {
              "lineno": 23,
              "line": "            for (i in 0..partPath.size) {"
            },
            {
              "lineno": 24,
              "line": "                if (partRouterPath[i].startsWith(\":\")) {"
            },
            {
              "lineno": 25,
              "line": "                    continue"
            },
            {
              "lineno": 26,
              "line": "                }"
            },
            {
              "lineno": 27,
              "line": "                if (partPath[i] != partRouterPath[i]) {"
            },
            {
              "lineno": 28,
              "line": "                    fail = true"
            },
            {
              "lineno": 29,
              "line": "                    break"
            },
            {
              "lineno": 30,
              "line": "                }"
            },
            {
              "lineno": 31,
              "line": "            }"
            },
            {
              "lineno": 32,
              "line": "            if (!fail) {"
            },
            {
              "lineno": 33,
              "line": "                return handler"
            },
            {
              "lineno": 34,
              "line": "            }"
            },
            {
              "lineno": 35,
              "line": "        }"
            },
            {
              "lineno": 36,
              "line": "        return NotFoundHandler()"
            },
            {
              "lineno": 37,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 12,
              "end_line": 12,
              "label": "    public func distribute(path: String): HttpRequestHandler {",
              "successors": [
                {
                  "id": 2,
                  "start_line": 13,
                  "end_line": 13,
                  "label": "        if (routerMap.contains(path)) {",
                  "successors": [
                    {
                      "id": 3,
                      "start_line": 14,
                      "end_line": 15,
                      "label": "            return routerMap[path]\n        }",
                      "successors": [
                        {
                          "id": 4,
                          "start_line": 16,
                          "end_line": 16,
                          "label": "        for ((routerPath, handler) in routerMap) {",
                          "successors": [
                            {
                              "id": 5,
                              "start_line": 17,
                              "end_line": 19,
                              "label": "            var fail = false\n            var partPath = path.trimEnd(\"/\").split(\"/\")\n            var partRouterPath = routerPath.trimEnd(\"/\").split(\"/\")",
                              "successors": [
                                {
                                  "id": 6,
                                  "start_line": 20,
                                  "end_line": 20,
                                  "label": "            if (partPath.size != partRouterPath.size) {",
                                  "successors": [
                                    {
                                      "id": 7,
                                      "start_line": 21,
                                      "end_line": 22,
                                      "label": "                continue\n            }",
                                      "successors": [
                                        {
                                          "id": 8,
                                          "start_line": 23,
                                          "end_line": 23,
                                          "label": "            for (i in 0..partPath.size) {",
                                          "successors": [
                                            {
                                              "id": 9,
                                              "start_line": 24,
                                              "end_line": 24,
                                              "label": "                if (partRouterPath[i].startsWith(\":\")) {",
                                              "successors": [
                                                {
                                                  "id": 10,
                                                  "start_line": 25,
                                                  "end_line": 26,
                                                  "label": "                    continue\n                }",
                                                  "successors": [
                                                    {
                                                      "id": 11,
                                                      "start_line": 27,
                                                      "end_line": 27,
                                                      "label": "                if (partPath[i] != partRouterPath[i]) {",
                                                      "successors": [
                                                        {
                                                          "id": 12,
                                                          "start_line": 28,
                                                          "end_line": 30,
                                                          "label": "                    fail = true\n                    break\n                }",
                                                          "successors": [
                                                            {
                                                              "id": 13,
                                                              "start_line": 31,
                                                              "end_line": 32,
                                                              "label": "            }\n            if (!fail) {",
                                                              "successors": [
                                                                {
                                                                  "id": 14,
                                                                  "start_line": 33,
                                                                  "end_line": 34,
                                                                  "label": "                return handler\n            }",
                                                                  "successors": [
                                                                    {
                                                                      "id": 15,
                                                                      "start_line": 35,
                                                                      "end_line": 36,
                                                                      "label": "        }\n        return NotFoundHandler()",
                                                                      "successors": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "simplified_code": [
        {
          "lineno": 6,
          "line": "public class NaiveDistributor <: HttpRequestDistributor {"
        },
        {
          "lineno": 7,
          "line": "    let routerMap = HashMap<String, HttpRequestHandler>()"
        },
        {
          "lineno": 11,
          "line": ""
        },
        {
          "lineno": 38,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "start_line": 6,
          "end_line": 11,
          "label": "public class NaiveDistributor <: HttpRequestDistributor {\n    let routerMap = HashMap<String, HttpRequestHandler>()\n",
          "successors": [
            {
              "id": 2,
              "start_line": 38,
              "end_line": 38,
              "label": "}",
              "successors": []
            }
          ]
        }
      ]
    },
    {
      "name": "NotFoundHandler",
      "type": "class",
      "start_line": 40,
      "end_line": 44,
      "functions": [
        {
          "name": "handle",
          "type": "function",
          "start_line": 41,
          "end_line": 43,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 41,
              "line": "    public func handle(httpContext: HttpContext): Unit {"
            },
            {
              "lineno": 42,
              "line": "        httpContext.responseBuilder.status(404).body(\"404 Not Found\".toArray())"
            },
            {
              "lineno": 43,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 41,
              "end_line": 43,
              "label": "    public func handle(httpContext: HttpContext): Unit {\n        httpContext.responseBuilder.status(404).body(\"404 Not Found\".toArray())\n    }",
              "successors": []
            }
          ]
        }
      ],
      "simplified_code": [
        {
          "lineno": 40,
          "line": "class NotFoundHandler <: HttpRequestHandler {"
        },
        {
          "lineno": 44,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "start_line": 40,
          "end_line": 40,
          "label": "class NotFoundHandler <: HttpRequestHandler {",
          "successors": [
            {
              "id": 2,
              "start_line": 44,
              "end_line": 44,
              "label": "}",
              "successors": []
            }
          ]
        }
      ]
    },
    {
      "name": "PathMap",
      "type": "class",
      "start_line": 46,
      "end_line": 63,
      "functions": [
        {
          "name": "init",
          "type": "function",
          "start_line": 49,
          "end_line": 50,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 49,
              "line": "    public init() {"
            },
            {
              "lineno": 50,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 49,
              "end_line": 50,
              "label": "    public init() {\n    }",
              "successors": []
            }
          ]
        },
        {
          "name": "init",
          "type": "function",
          "start_line": 52,
          "end_line": 54,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 52,
              "line": "    public init(path: String, handler: (HttpContext) -> Unit) {"
            },
            {
              "lineno": 53,
              "line": "        this.paths.put(path, handler)"
            },
            {
              "lineno": 54,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 52,
              "end_line": 53,
              "label": "    public init(path: String, handler: (HttpContext) -> Unit) {\n        this.paths.put(path, handler)",
              "successors": [
                {
                  "id": 2,
                  "start_line": 54,
                  "end_line": 54,
                  "label": "    }",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "add",
          "type": "function",
          "start_line": 56,
          "end_line": 58,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 56,
              "line": "    public func add(path: String, handler: (HttpContext) -> Unit): Unit {"
            },
            {
              "lineno": 57,
              "line": "        this.paths.put(path, handler)"
            },
            {
              "lineno": 58,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 56,
              "end_line": 56,
              "label": "    public func add(path: String, handler: (HttpContext) -> Unit): Unit {",
              "successors": [
                {
                  "id": 2,
                  "start_line": 57,
                  "end_line": 57,
                  "label": "        this.paths.put(path, handler)",
                  "successors": [
                    {
                      "id": 3,
                      "start_line": 58,
                      "end_line": 58,
                      "label": "    }",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "merge",
          "type": "function",
          "start_line": 60,
          "end_line": 62,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 60,
              "line": "    public func merge(addPathMap: PathMap): Unit {"
            },
            {
              "lineno": 61,
              "line": "        this.paths.putAll(addPathMap.paths)"
            },
            {
              "lineno": 62,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 60,
              "end_line": 62,
              "label": "    public func merge(addPathMap: PathMap): Unit {\n        this.paths.putAll(addPathMap.paths)\n    }",
              "successors": []
            }
          ]
        }
      ],
      "simplified_code": [
        {
          "lineno": 46,
          "line": "public struct PathMap {"
        },
        {
          "lineno": 47,
          "line": "    public var paths = HashMap<String, (HttpContext) -> Unit>()"
        },
        {
          "lineno": 48,
          "line": ""
        },
        {
          "lineno": 51,
          "line": "    "
        },
        {
          "lineno": 55,
          "line": ""
        },
        {
          "lineno": 59,
          "line": ""
        },
        {
          "lineno": 63,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "start_line": 46,
          "end_line": 63,
          "label": "public struct PathMap {\n    public var paths = HashMap<String, (HttpContext) -> Unit>()\n\n    \n\n\n}",
          "successors": []
        }
      ]
    }
  ],
  "simplified_code": [
    {
      "lineno": 1,
      "line": "package opds_cj.router"
    },
    {
      "lineno": 2,
      "line": ""
    },
    {
      "lineno": 3,
      "line": "import net.http.*"
    },
    {
      "lineno": 4,
      "line": "import std.collection.HashMap"
    },
    {
      "lineno": 5,
      "line": ""
    },
    {
      "lineno": 39,
      "line": ""
    },
    {
      "lineno": 45,
      "line": ""
    }
  ],
  "blocks": [
    {
      "id": 1,
      "start_line": 1,
      "end_line": 1,
      "label": "package opds_cj.router",
      "successors": []
    },
    {
      "id": 2,
      "start_line": 2,
      "end_line": 2,
      "label": "",
      "successors": []
    },
    {
      "id": 3,
      "start_line": 3,
      "end_line": 4,
      "label": "import net.http.*\nimport std.collection.HashMap",
      "successors": []
    },
    {
      "id": 4,
      "start_line": 5,
      "end_line": 5,
      "label": "",
      "successors": []
    },
    {
      "id": 5,
      "start_line": 39,
      "end_line": 39,
      "label": "",
      "successors": []
    },
    {
      "id": 6,
      "start_line": 45,
      "end_line": 45,
      "label": "",
      "successors": []
    }
  ]
}