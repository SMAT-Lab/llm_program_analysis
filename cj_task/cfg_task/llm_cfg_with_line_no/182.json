{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 72,
  "functions": [],
  "classes": [
    {
      "name": "UserGroup",
      "type": "class",
      "start_line": 2,
      "end_line": 72,
      "functions": [
        {
          "name": "init",
          "type": "function",
          "start_line": 8,
          "end_line": 12,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 8,
              "line": "    public init(name: String) {"
            },
            {
              "lineno": 9,
              "line": "        this.name = name"
            },
            {
              "lineno": 10,
              "line": "        this.userMap = HashMap<String, User>()"
            },
            {
              "lineno": 11,
              "line": "        this.policyMap = HashMap<String, Policy>()"
            },
            {
              "lineno": 12,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 8,
              "end_line": 12,
              "label": "    public init(name: String) {\n        this.name = name\n        this.userMap = HashMap<String, User>()\n        this.policyMap = HashMap<String, Policy>()\n    }",
              "successors": []
            }
          ]
        },
        {
          "name": "getName",
          "type": "function",
          "start_line": 13,
          "end_line": 15,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 13,
              "line": "    public func getName(): String {"
            },
            {
              "lineno": 14,
              "line": "        name"
            },
            {
              "lineno": 15,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 13,
              "end_line": 15,
              "label": "    public func getName(): String {\n        name\n    }",
              "successors": []
            }
          ]
        },
        {
          "name": "addUser",
          "type": "function",
          "start_line": 16,
          "end_line": 18,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 16,
              "line": "    public func addUser(user: User) {"
            },
            {
              "lineno": 17,
              "line": "        this.userMap[user.getName()] = user"
            },
            {
              "lineno": 18,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 16,
              "end_line": 18,
              "label": "    public func addUser(user: User) {\n        this.userMap[user.getName()] = user\n    }",
              "successors": []
            }
          ]
        },
        {
          "name": "addUser",
          "type": "function",
          "start_line": 19,
          "end_line": 21,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 19,
              "line": "    func addUser(user: String) {"
            },
            {
              "lineno": 20,
              "line": "        addUser(User(user))"
            },
            {
              "lineno": 21,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 19,
              "end_line": 21,
              "label": "    func addUser(user: String) {\n        addUser(User(user))\n    }",
              "successors": []
            }
          ]
        },
        {
          "name": "getUserMap",
          "type": "function",
          "start_line": 22,
          "end_line": 24,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 22,
              "line": "    func getUserMap(): Array<User> {"
            },
            {
              "lineno": 23,
              "line": "        userMap.values().toArray()"
            },
            {
              "lineno": 24,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 22,
              "end_line": 24,
              "label": "    func getUserMap(): Array<User> {\n        userMap.values().toArray()\n    }",
              "successors": []
            }
          ]
        },
        {
          "name": "removeUser",
          "type": "function",
          "start_line": 25,
          "end_line": 27,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 25,
              "line": "    func removeUser(user: User): ?User {"
            },
            {
              "lineno": 26,
              "line": "        removeUser(user.getName())"
            },
            {
              "lineno": 27,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 25,
              "end_line": 27,
              "label": "    func removeUser(user: User): ?User {\n        removeUser(user.getName())\n    }",
              "successors": []
            }
          ]
        },
        {
          "name": "removeUser",
          "type": "function",
          "start_line": 28,
          "end_line": 30,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 28,
              "line": "    func removeUser(user: String): ?User {"
            },
            {
              "lineno": 29,
              "line": "        this.userMap.remove(user)"
            },
            {
              "lineno": 30,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 28,
              "end_line": 30,
              "label": "    func removeUser(user: String): ?User {\n        this.userMap.remove(user)\n    }",
              "successors": []
            }
          ]
        },
        {
          "name": "addPolicy",
          "type": "function",
          "start_line": 31,
          "end_line": 33,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 31,
              "line": "    public func addPolicy(policy: Policy) {"
            },
            {
              "lineno": 32,
              "line": "        this.policyMap[policy.getName()] = policy"
            },
            {
              "lineno": 33,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 31,
              "end_line": 33,
              "label": "    public func addPolicy(policy: Policy) {\n        this.policyMap[policy.getName()] = policy\n    }",
              "successors": []
            }
          ]
        },
        {
          "name": "removePolicy",
          "type": "function",
          "start_line": 34,
          "end_line": 36,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 34,
              "line": "    func removePolicy(policy: Policy): ?Policy {"
            },
            {
              "lineno": 35,
              "line": "        removePolicy(policy.getName())"
            },
            {
              "lineno": 36,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 34,
              "end_line": 36,
              "label": "    func removePolicy(policy: Policy): ?Policy {\n        removePolicy(policy.getName())\n    }",
              "successors": []
            }
          ]
        },
        {
          "name": "removePolicy",
          "type": "function",
          "start_line": 37,
          "end_line": 39,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 37,
              "line": "    func removePolicy(policy: String): ?Policy {"
            },
            {
              "lineno": 38,
              "line": "        this.policyMap.remove(policy)"
            },
            {
              "lineno": 39,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 37,
              "end_line": 39,
              "label": "    func removePolicy(policy: String): ?Policy {\n        this.policyMap.remove(policy)\n    }",
              "successors": []
            }
          ]
        },
        {
          "name": "checkUser",
          "type": "function",
          "start_line": 40,
          "end_line": 46,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 40,
              "line": "    func checkUser(user: User): Bool {"
            },
            {
              "lineno": 41,
              "line": "        let result = userMap.contains(user.getName())"
            },
            {
              "lineno": 42,
              "line": "        if (!result) {"
            },
            {
              "lineno": 43,
              "line": "            user.removeUserGroup(this)"
            },
            {
              "lineno": 44,
              "line": "        }"
            },
            {
              "lineno": 45,
              "line": "        result"
            },
            {
              "lineno": 46,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 40,
              "end_line": 41,
              "label": "    func checkUser(user: User): Bool {\n        let result = userMap.contains(user.getName())",
              "successors": [
                {
                  "id": 2,
                  "start_line": 42,
                  "end_line": 42,
                  "label": "        if (!result) {",
                  "successors": [
                    {
                      "id": 3,
                      "start_line": 43,
                      "end_line": 43,
                      "label": "            user.removeUserGroup(this)",
                      "successors": [
                        {
                          "id": 4,
                          "start_line": 45,
                          "end_line": 45,
                          "label": "        result",
                          "successors": []
                        }
                      ]
                    },
                    {
                      "id": 5,
                      "start_line": 45,
                      "end_line": 45,
                      "label": "        result",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "checkPolicy",
          "type": "function",
          "start_line": 47,
          "end_line": 53,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 47,
              "line": "    func checkPolicy(policy: Policy): Bool {"
            },
            {
              "lineno": 48,
              "line": "        let result = policyMap.contains(policy.getName())"
            },
            {
              "lineno": 49,
              "line": "        if (!result) {"
            },
            {
              "lineno": 50,
              "line": "            policy.removeUserGroup(this)"
            },
            {
              "lineno": 51,
              "line": "        }"
            },
            {
              "lineno": 52,
              "line": "        result"
            },
            {
              "lineno": 53,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 47,
              "end_line": 48,
              "label": "    func checkPolicy(policy: Policy): Bool {\n        let result = policyMap.contains(policy.getName())",
              "successors": [
                {
                  "id": 2,
                  "start_line": 49,
                  "end_line": 51,
                  "label": "        if (!result) {\n            policy.removeUserGroup(this)\n        }",
                  "successors": [
                    {
                      "id": 3,
                      "start_line": 52,
                      "end_line": 52,
                      "label": "        result",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "reset",
          "type": "function",
          "start_line": 54,
          "end_line": 57,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 54,
              "line": "    public func reset() {"
            },
            {
              "lineno": 55,
              "line": "        this.userMap.clear()"
            },
            {
              "lineno": 56,
              "line": "        this.policyMap.clear()"
            },
            {
              "lineno": 57,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 54,
              "end_line": 57,
              "label": "    public func reset() {\n        this.userMap.clear()\n        this.policyMap.clear()\n    }",
              "successors": []
            }
          ]
        },
        {
          "name": "operator ==",
          "type": "function",
          "start_line": 58,
          "end_line": 64,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 58,
              "line": "    public operator func ==(other: AccessInfo): Bool {"
            },
            {
              "lineno": 59,
              "line": "        if (let Some(o) = (other as UserGroup)) {"
            },
            {
              "lineno": 60,
              "line": "            this.getName() == other.getName() || refEq(this, o)"
            },
            {
              "lineno": 61,
              "line": "        } else {"
            },
            {
              "lineno": 62,
              "line": "            false"
            },
            {
              "lineno": 63,
              "line": "        }"
            },
            {
              "lineno": 64,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 58,
              "end_line": 58,
              "label": "    public operator func ==(other: AccessInfo): Bool {",
              "successors": [
                {
                  "id": 2,
                  "start_line": 59,
                  "end_line": 60,
                  "label": "        if (let Some(o) = (other as UserGroup)) {\n            this.getName() == other.getName() || refEq(this, o)",
                  "successors": [
                    {
                      "id": 3,
                      "start_line": 61,
                      "end_line": 62,
                      "label": "        } else {\n            false",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "operator !=",
          "type": "function",
          "start_line": 65,
          "end_line": 67,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 65,
              "line": "    public operator func !=(other: AccessInfo): Bool {"
            },
            {
              "lineno": 66,
              "line": "        !(this == other)"
            },
            {
              "lineno": 67,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 65,
              "end_line": 67,
              "label": "    public operator func !=(other: AccessInfo): Bool {\n        !(this == other)\n    }",
              "successors": []
            }
          ]
        },
        {
          "name": "toString",
          "type": "function",
          "start_line": 68,
          "end_line": 70,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 68,
              "line": "    public func toString(): String {"
            },
            {
              "lineno": 69,
              "line": "        \"{\\\"name\\\": \\\"${getName()}\\\", \\\"user-list\\\": ${getUserMap()}}\""
            },
            {
              "lineno": 70,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 68,
              "end_line": 70,
              "label": "    public func toString(): String {\n        \"{\\\"name\\\": \\\"${getName()}\\\", \\\"user-list\\\": ${getUserMap()}}\"\n    }",
              "successors": []
            }
          ]
        },
        {
          "name": "addUserGroup",
          "type": "function",
          "start_line": 71,
          "end_line": 71,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 71,
              "line": "    public func addUserGroup(userGroup: UserGroup): Unit {}"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 71,
              "end_line": 71,
              "label": "    public func addUserGroup(userGroup: UserGroup): Unit {}",
              "successors": []
            }
          ]
        }
      ],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 2,
          "line": "public class UserGroup <: AccessInfo & AccessorContext {"
        },
        {
          "lineno": 3,
          "line": "    public let name: String"
        },
        {
          "lineno": 4,
          "line": "    // 用户"
        },
        {
          "lineno": 5,
          "line": "    let userMap: HashMap<String, User>"
        },
        {
          "lineno": 6,
          "line": "    // 策略"
        },
        {
          "lineno": 7,
          "line": "    let policyMap: HashMap<String, Policy>"
        },
        {
          "lineno": 72,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "start_line": 2,
          "end_line": 7,
          "label": "public class UserGroup <: AccessInfo & AccessorContext {\n    public let name: String\n    // \n7528\n6237\n    let userMap: HashMap<String, User>\n    // \n7b56\n7565\n    let policyMap: HashMap<String, Policy>",
          "successors": []
        },
        {
          "id": 2,
          "start_line": 72,
          "end_line": 72,
          "label": "}",
          "successors": []
        }
      ]
    }
  ],
  "simplified_code": [
    {
      "lineno": 1,
      "line": "package access"
    }
  ],
  "blocks": [
    {
      "id": 1,
      "start_line": 1,
      "end_line": 1,
      "label": "package access",
      "successors": []
    }
  ]
}