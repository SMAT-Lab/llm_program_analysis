{
  "name": "cj_easy_data_macros",
  "type": "CFG",
  "start_line": 1,
  "end_line": 20,
  "functions": [
    {
      "name": "Data",
      "type": "function",
      "start_line": 7,
      "end_line": 12,
      "functions": [],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 7,
          "line": "public macro Data(input: Tokens): Tokens {"
        },
        {
          "lineno": 8,
          "line": "    var classDecl =getClassDecl(input)"
        },
        {
          "lineno": 9,
          "line": "    let handler = addToString ~> addDefaultNones"
        },
        {
          "lineno": 10,
          "line": "    classDecl = handler(classDecl)"
        },
        {
          "lineno": 11,
          "line": "    return classDecl.toTokens()"
        },
        {
          "lineno": 12,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "start_line": 7,
          "end_line": 11,
          "label": "public macro Data(input: Tokens): Tokens {\n    var classDecl =getClassDecl(input)\n    let handler = addToString ~> addDefaultNones\n    classDecl = handler(classDecl)\n    return classDecl.toTokens()",
          "successors": [
            {
              "id": 2,
              "start_line": 12,
              "end_line": 12,
              "label": "}",
              "successors": []
            }
          ]
        }
      ]
    },
    {
      "name": "isFunc",
      "type": "function",
      "start_line": 14,
      "end_line": 16,
      "functions": [],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 14,
          "line": "func isFunc(token: Token): Bool {"
        },
        {
          "lineno": 15,
          "line": "    return token.kind==FUNC;"
        },
        {
          "lineno": 16,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "start_line": 14,
          "end_line": 16,
          "label": "func isFunc(token: Token): Bool {\n    return token.kind==FUNC;\n}",
          "successors": []
        }
      ]
    },
    {
      "name": "getClassDecl",
      "type": "function",
      "start_line": 17,
      "end_line": 20,
      "functions": [],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 17,
          "line": "func getClassDecl(input: Tokens):ClassDecl{"
        },
        {
          "lineno": 18,
          "line": "    let varDecl = parseDecl(input)"
        },
        {
          "lineno": 19,
          "line": "   return (varDecl as ClassDecl).getOrThrow()"
        },
        {
          "lineno": 20,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "start_line": 17,
          "end_line": 19,
          "label": "func getClassDecl(input: Tokens):ClassDecl{\n    let varDecl = parseDecl(input)\n   return (varDecl as ClassDecl).getOrThrow()",
          "successors": []
        }
      ]
    }
  ],
  "classes": [],
  "simplified_code": [
    {
      "lineno": 1,
      "line": "macro package cj_easy_data.macros"
    },
    {
      "lineno": 2,
      "line": ""
    },
    {
      "lineno": 3,
      "line": "import std.ast.*"
    },
    {
      "lineno": 4,
      "line": "import std.collection.*"
    },
    {
      "lineno": 5,
      "line": ""
    },
    {
      "lineno": 6,
      "line": "//支持一次添加ToString和默认None"
    },
    {
      "lineno": 13,
      "line": ""
    }
  ],
  "blocks": [
    {
      "id": 1,
      "start_line": 1,
      "end_line": 1,
      "label": "macro package cj_easy_data.macros",
      "successors": [
        {
          "id": 2,
          "start_line": 2,
          "end_line": 5,
          "label": "\nimport std.ast.*\nimport std.collection.*\n",
          "successors": [
            {
              "id": 3,
              "start_line": 6,
              "end_line": 6,
              "label": "//支持一次添加ToString和默认None",
              "successors": []
            }
          ]
        }
      ]
    }
  ]
}