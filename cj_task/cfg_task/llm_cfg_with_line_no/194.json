{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 35,
  "functions": [],
  "classes": [
    {
      "name": "BubbleChartModel",
      "type": "class",
      "start_line": 2,
      "end_line": 35,
      "functions": [
        {
          "name": "init",
          "type": "function",
          "start_line": 4,
          "end_line": 6,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 4,
              "line": "    init() {"
            },
            {
              "lineno": 5,
              "line": "        super();"
            },
            {
              "lineno": 6,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 4,
              "end_line": 6,
              "label": "    init() {\n        super();\n    }",
              "successors": []
            }
          ]
        },
        {
          "name": "build",
          "type": "function",
          "start_line": 7,
          "end_line": 13,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 7,
              "line": "    public static func build(): BubbleChartModel {"
            },
            {
              "lineno": 8,
              "line": "        let model: BubbleChartModel = BubbleChartModel()"
            },
            {
              "lineno": 9,
              "line": "        var mAnimator: ChartAnimator = ChartAnimator(model)"
            },
            {
              "lineno": 10,
              "line": "        model.mRenderer = BubbleChartRenderer(model, mAnimator, model.mViewPortHandler)"
            },
            {
              "lineno": 11,
              "line": "        model.setHighlighter(ChartHighlighter(model))"
            },
            {
              "lineno": 12,
              "line": "        return model"
            },
            {
              "lineno": 13,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 7,
              "end_line": 11,
              "label": "    public static func build(): BubbleChartModel {\n        let model: BubbleChartModel = BubbleChartModel()\n        var mAnimator: ChartAnimator = ChartAnimator(model)\n        model.mRenderer = BubbleChartRenderer(model, mAnimator, model.mViewPortHandler)\n        model.setHighlighter(ChartHighlighter(model))",
              "successors": [
                {
                  "id": 2,
                  "start_line": 12,
                  "end_line": 12,
                  "label": "        return model",
                  "successors": [
                    {
                      "id": 3,
                      "start_line": 13,
                      "end_line": 13,
                      "label": "    }",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "invalidate",
          "type": "function",
          "start_line": 14,
          "end_line": 18,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 14,
              "line": "    public func invalidate() {"
            },
            {
              "lineno": 15,
              "line": "        if (let Some(context2d) <- this.context2d) {"
            },
            {
              "lineno": 16,
              "line": "            this.onDraw(context2d);"
            },
            {
              "lineno": 17,
              "line": "        }"
            },
            {
              "lineno": 18,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 14,
              "end_line": 14,
              "label": "    public func invalidate() {",
              "successors": [
                {
                  "id": 2,
                  "start_line": 15,
                  "end_line": 15,
                  "label": "        if (let Some(context2d) <- this.context2d) {",
                  "successors": [
                    {
                      "id": 3,
                      "start_line": 16,
                      "end_line": 17,
                      "label": "            this.onDraw(context2d);\n        }",
                      "successors": []
                    }
                  ]
                },
                {
                  "id": 4,
                  "start_line": 18,
                  "end_line": 18,
                  "label": "    }",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "setContext2D",
          "type": "function",
          "start_line": 19,
          "end_line": 21,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 19,
              "line": "    public func setContext2D(context2d: CanvasRenderingContext2D) {"
            },
            {
              "lineno": 20,
              "line": "        this.context2d = context2d"
            },
            {
              "lineno": 21,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 19,
              "end_line": 21,
              "label": "    public func setContext2D(context2d: CanvasRenderingContext2D) {\n        this.context2d = context2d\n    }",
              "successors": []
            }
          ]
        },
        {
          "name": "onChartSizeChanged",
          "type": "function",
          "start_line": 22,
          "end_line": 24,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 22,
              "line": "    public func onChartSizeChanged(newWidth: Float64, newHeight: Float64, oldWidth: Float64, oldHeight: Float64) {"
            },
            {
              "lineno": 23,
              "line": "        super.onSizeChanged(newWidth, newHeight, oldWidth, oldHeight);"
            },
            {
              "lineno": 24,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 22,
              "end_line": 24,
              "label": "    public func onChartSizeChanged(newWidth: Float64, newHeight: Float64, oldWidth: Float64, oldHeight: Float64) {\n        super.onSizeChanged(newWidth, newHeight, oldWidth, oldHeight);\n    }",
              "successors": []
            }
          ]
        },
        {
          "name": "onDraw",
          "type": "function",
          "start_line": 25,
          "end_line": 27,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 25,
              "line": "    public func onDraw(c: CanvasRenderingContext2D): Unit {"
            },
            {
              "lineno": 26,
              "line": "        super.onDraw(c);"
            },
            {
              "lineno": 27,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 25,
              "end_line": 27,
              "label": "    public func onDraw(c: CanvasRenderingContext2D): Unit {\n        super.onDraw(c);\n    }",
              "successors": []
            }
          ]
        },
        {
          "name": "getBubbleData",
          "type": "function",
          "start_line": 28,
          "end_line": 34,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 28,
              "line": "    public func getBubbleData(): ?BubbleData {"
            },
            {
              "lineno": 29,
              "line": "        if (let Some(data: BubbleData) <- this.mData) {"
            },
            {
              "lineno": 30,
              "line": "            return data"
            },
            {
              "lineno": 31,
              "line": "        } else {"
            },
            {
              "lineno": 32,
              "line": "            return None;"
            },
            {
              "lineno": 33,
              "line": "        }"
            },
            {
              "lineno": 34,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 28,
              "end_line": 28,
              "label": "    public func getBubbleData(): ?BubbleData {",
              "successors": [
                {
                  "id": 2,
                  "start_line": 29,
                  "end_line": 30,
                  "label": "        if (let Some(data: BubbleData) <- this.mData) {\n            return data",
                  "successors": []
                },
                {
                  "id": 3,
                  "start_line": 31,
                  "end_line": 32,
                  "label": "        } else {\n            return None;",
                  "successors": []
                }
              ]
            }
          ]
        }
      ],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 2,
          "line": "public class BubbleChartModel <: BarLineChartBaseModel<BubbleData, IBubbleDataSet, BubbleEntry> & BubbleDataProvider {"
        },
        {
          "lineno": 3,
          "line": "    public var context2d: ?CanvasRenderingContext2D = None;"
        },
        {
          "lineno": 35,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "start_line": 2,
          "end_line": 3,
          "label": "public class BubbleChartModel <: BarLineChartBaseModel<BubbleData, IBubbleDataSet, BubbleEntry> {\n    public var context2d: ?CanvasRenderingContext2D = None;",
          "successors": [
            {
              "id": 2,
              "start_line": 35,
              "end_line": 35,
              "label": "}",
              "successors": []
            }
          ]
        }
      ]
    }
  ],
  "simplified_code": [
    {
      "lineno": 1,
      "line": "package core.bubble"
    }
  ],
  "blocks": [
    {
      "id": 1,
      "start_line": 1,
      "end_line": 1,
      "label": "package core.bubble",
      "successors": []
    }
  ]
}