{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 18,
  "functions": [
    {
      "name": "JsonSerializable",
      "type": "function",
      "start_line": 7,
      "end_line": 18,
      "functions": [],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 7,
          "line": "public macro JsonSerializable(attrs: Tokens, input: Tokens): Tokens {"
        },
        {
          "lineno": 8,
          "line": "    let context = Context(attrs, input)"
        },
        {
          "lineno": 9,
          "line": "    let generators: Array<Generator> = ["
        },
        {
          "lineno": 10,
          "line": "        StructValDeclTransfromGenerator(),"
        },
        {
          "lineno": 11,
          "line": "        StructInitFunctionGenerator(),"
        },
        {
          "lineno": 12,
          "line": "        StructSerializableFunctionGenerator(),"
        },
        {
          "lineno": 13,
          "line": "        StructToJsonFunctionGenerator(),"
        },
        {
          "lineno": 14,
          "line": "        StructToStringFunctionGenerator()"
        },
        {
          "lineno": 15,
          "line": "    ]"
        },
        {
          "lineno": 16,
          "line": "    generators |> forEach { g: Generator => g.generate(context) }"
        },
        {
          "lineno": 17,
          "line": "    return context.structDecl.toTokens()"
        },
        {
          "lineno": 18,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "start_line": 7,
          "end_line": 16,
          "label": "public macro JsonSerializable(attrs: Tokens, input: Tokens): Tokens {\n    let context = Context(attrs, input)\n    let generators: Array<Generator> = [\n        StructValDeclTransfromGenerator(),\n        StructInitFunctionGenerator(),\n        StructSerializableFunctionGenerator(),\n        StructToJsonFunctionGenerator(),\n        StructToStringFunctionGenerator()\n    ]\n    generators |> forEach { g: Generator => g.generate(context) }",
          "successors": [
            {
              "id": 2,
              "start_line": 17,
              "end_line": 17,
              "label": "return context.structDecl.toTokens()",
              "successors": []
            }
          ]
        }
      ]
    }
  ],
  "classes": [],
  "simplified_code": [
    {
      "lineno": 1,
      "line": "macro package Macro_JsonSerializable.macros"
    },
    {
      "lineno": 2,
      "line": ""
    },
    {
      "lineno": 3,
      "line": "import std.ast.*"
    },
    {
      "lineno": 4,
      "line": "import std.collection.*"
    },
    {
      "lineno": 5,
      "line": ""
    },
    {
      "lineno": 6,
      "line": "// 宏入口"
    }
  ],
  "blocks": [
    {
      "id": 1,
      "start_line": 1,
      "end_line": 1,
      "label": "macro package Macro_JsonSerializable.macros",
      "successors": [
        {
          "id": 2,
          "start_line": 2,
          "end_line": 4,
          "label": "\nimport std.ast.*\nimport std.collection.*",
          "successors": [
            {
              "id": 3,
              "start_line": 5,
              "end_line": 6,
              "label": "\n// \\\\u5b8f\\\\u5165\\\\u53e3",
              "successors": []
            }
          ]
        }
      ]
    }
  ]
}