{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 120,
  "functions": [],
  "classes": [
    {
      "name": "MapBuilder<T>",
      "type": "class",
      "start_line": 2,
      "end_line": 120,
      "functions": [
        {
          "name": "init",
          "type": "function",
          "start_line": 4,
          "end_line": 7,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 4,
              "line": "    public init(parent: T, map: CborMap) {"
            },
            {
              "lineno": 5,
              "line": "        super(parent)"
            },
            {
              "lineno": 6,
              "line": "        this.map = map"
            },
            {
              "lineno": 7,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 4,
              "end_line": 7,
              "label": "    public init(parent: T, map: CborMap) {\n        super(parent)\n        this.map = map\n    }",
              "successors": []
            }
          ]
        },
        {
          "name": "put",
          "type": "function",
          "start_line": 8,
          "end_line": 11,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 8,
              "line": "    public func put(key: DataItem, value: DataItem): MapBuilder<T> {"
            },
            {
              "lineno": 9,
              "line": "        map.put(key, value)"
            },
            {
              "lineno": 10,
              "line": "        return this"
            },
            {
              "lineno": 11,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 8,
              "end_line": 8,
              "label": "    public func put(key: DataItem, value: DataItem): MapBuilder<T> {",
              "successors": [
                {
                  "id": 2,
                  "start_line": 9,
                  "end_line": 10,
                  "label": "        map.put(key, value)\n        return this",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "put",
          "type": "function",
          "start_line": 12,
          "end_line": 15,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 12,
              "line": "    public func put(key: Int64, value: Int64): MapBuilder<T> {"
            },
            {
              "lineno": 13,
              "line": "        put(convert(key), convert(value))"
            },
            {
              "lineno": 14,
              "line": "        return this"
            },
            {
              "lineno": 15,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 12,
              "end_line": 14,
              "label": "    public func put(key: Int64, value: Int64): MapBuilder<T> {\n        put(convert(key), convert(value))\n        return this",
              "successors": []
            }
          ]
        },
        {
          "name": "put",
          "type": "function",
          "start_line": 16,
          "end_line": 19,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 16,
              "line": "    public func put(key: Int64, value: Bool): MapBuilder<T> {"
            },
            {
              "lineno": 17,
              "line": "        put(convert(key), convert(value))"
            },
            {
              "lineno": 18,
              "line": "        return this"
            },
            {
              "lineno": 19,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 16,
              "end_line": 18,
              "label": "    public func put(key: Int64, value: Bool): MapBuilder<T> {\n        put(convert(key), convert(value))\n        return this",
              "successors": []
            },
            {
              "id": 2,
              "start_line": 19,
              "end_line": 19,
              "label": "    }",
              "successors": []
            }
          ]
        },
        {
          "name": "put",
          "type": "function",
          "start_line": 20,
          "end_line": 23,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 20,
              "line": "    public func put(key: Int64, value: Float32): MapBuilder<T> {"
            },
            {
              "lineno": 21,
              "line": "        put(convert(key), convert(value))"
            },
            {
              "lineno": 22,
              "line": "        return this"
            },
            {
              "lineno": 23,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 20,
              "end_line": 21,
              "label": "    public func put(key: Int64, value: Float32): MapBuilder<T> {\n        put(convert(key), convert(value))",
              "successors": [
                {
                  "id": 2,
                  "start_line": 22,
                  "end_line": 22,
                  "label": "        return this",
                  "successors": [
                    {
                      "id": 3,
                      "start_line": 23,
                      "end_line": 23,
                      "label": "    }",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "put",
          "type": "function",
          "start_line": 24,
          "end_line": 27,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 24,
              "line": "    public func put(key: Int64, value: Float64): MapBuilder<T> {"
            },
            {
              "lineno": 25,
              "line": "        put(convert(key), convert(value))"
            },
            {
              "lineno": 26,
              "line": "        return this"
            },
            {
              "lineno": 27,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 24,
              "end_line": 26,
              "label": "    public func put(key: Int64, value: Float64): MapBuilder<T> {\n        put(convert(key), convert(value))\n        return this",
              "successors": []
            }
          ]
        },
        {
          "name": "put",
          "type": "function",
          "start_line": 28,
          "end_line": 31,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 28,
              "line": "    public func put(key: Int64, value: Array<UInt8>): MapBuilder<T> {"
            },
            {
              "lineno": 29,
              "line": "        put(convert(key), convert(value))"
            },
            {
              "lineno": 30,
              "line": "        return this"
            },
            {
              "lineno": 31,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 28,
              "end_line": 28,
              "label": "    public func put(key: Int64, value: Array<UInt8>): MapBuilder<T> {",
              "successors": [
                {
                  "id": 2,
                  "start_line": 29,
                  "end_line": 30,
                  "label": "        put(convert(key), convert(value))\n        return this",
                  "successors": [
                    {
                      "id": 3,
                      "start_line": 31,
                      "end_line": 31,
                      "label": "    }",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "put",
          "type": "function",
          "start_line": 32,
          "end_line": 35,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 32,
              "line": "    public func put(key: Int64, value: String): MapBuilder<T> {"
            },
            {
              "lineno": 33,
              "line": "        put(convert(key), convert(value))"
            },
            {
              "lineno": 34,
              "line": "        return this"
            },
            {
              "lineno": 35,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 32,
              "end_line": 34,
              "label": "    public func put(key: Int64, value: String): MapBuilder<T> {\n        put(convert(key), convert(value))\n        return this",
              "successors": []
            }
          ]
        },
        {
          "name": "put",
          "type": "function",
          "start_line": 36,
          "end_line": 39,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 36,
              "line": "    public func put(key: String, value: Int64): MapBuilder<T> {"
            },
            {
              "lineno": 37,
              "line": "        put(convert(key), convert(value))"
            },
            {
              "lineno": 38,
              "line": "        return this"
            },
            {
              "lineno": 39,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 36,
              "end_line": 39,
              "label": "    public func put(key: String, value: Int64): MapBuilder<T> {\n        put(convert(key), convert(value))\n        return this\n    }",
              "successors": []
            }
          ]
        },
        {
          "name": "put",
          "type": "function",
          "start_line": 40,
          "end_line": 43,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 40,
              "line": "    public func put(key: String, value: Bool): MapBuilder<T> {"
            },
            {
              "lineno": 41,
              "line": "        put(convert(key), convert(value))"
            },
            {
              "lineno": 42,
              "line": "        return this"
            },
            {
              "lineno": 43,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 40,
              "end_line": 40,
              "label": "    public func put(key: String, value: Bool): MapBuilder<T> {",
              "successors": [
                {
                  "id": 2,
                  "start_line": 41,
                  "end_line": 42,
                  "label": "        put(convert(key), convert(value))\n        return this",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "put",
          "type": "function",
          "start_line": 44,
          "end_line": 47,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 44,
              "line": "    public func put(key: String, value: Float32): MapBuilder<T> {"
            },
            {
              "lineno": 45,
              "line": "        put(convert(key), convert(value))"
            },
            {
              "lineno": 46,
              "line": "        return this"
            },
            {
              "lineno": 47,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 44,
              "end_line": 46,
              "label": "    public func put(key: String, value: Float32): MapBuilder<T> {\n        put(convert(key), convert(value))\n        return this",
              "successors": []
            }
          ]
        },
        {
          "name": "put",
          "type": "function",
          "start_line": 48,
          "end_line": 51,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 48,
              "line": "    public func put(key: String, value: Float64): MapBuilder<T> {"
            },
            {
              "lineno": 49,
              "line": "        put(convert(key), convert(value))"
            },
            {
              "lineno": 50,
              "line": "        return this"
            },
            {
              "lineno": 51,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 48,
              "end_line": 50,
              "label": "    public func put(key: String, value: Float64): MapBuilder<T> {\n        put(convert(key), convert(value))\n        return this",
              "successors": [
                {
                  "id": 2,
                  "start_line": 51,
                  "end_line": 51,
                  "label": "    }",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "put",
          "type": "function",
          "start_line": 52,
          "end_line": 55,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 52,
              "line": "    public func put(key: String, value: Array<UInt8>): MapBuilder<T> {"
            },
            {
              "lineno": 53,
              "line": "        map.put(convert(key), convert(value))"
            },
            {
              "lineno": 54,
              "line": "        return this"
            },
            {
              "lineno": 55,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 52,
              "end_line": 52,
              "label": "    public func put(key: String, value: Array<UInt8>): MapBuilder<T> {",
              "successors": [
                {
                  "id": 2,
                  "start_line": 53,
                  "end_line": 53,
                  "label": "        map.put(convert(key), convert(value))",
                  "successors": [
                    {
                      "id": 3,
                      "start_line": 54,
                      "end_line": 54,
                      "label": "        return this",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "put",
          "type": "function",
          "start_line": 56,
          "end_line": 59,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 56,
              "line": "    public func put(key: String, value: String): MapBuilder<T> {"
            },
            {
              "lineno": 57,
              "line": "        put(convert(key), convert(value))"
            },
            {
              "lineno": 58,
              "line": "        return this"
            },
            {
              "lineno": 59,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 56,
              "end_line": 56,
              "label": "    public func put(key: String, value: String): MapBuilder<T> {",
              "successors": [
                {
                  "id": 2,
                  "start_line": 57,
                  "end_line": 58,
                  "label": "        put(convert(key), convert(value))\n        return this",
                  "successors": [
                    {
                      "id": 3,
                      "start_line": 59,
                      "end_line": 59,
                      "label": "    }",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "putArray",
          "type": "function",
          "start_line": 60,
          "end_line": 64,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 60,
              "line": "    public func putArray(key: DataItem): ArrayBuilder<MapBuilder<T>> {"
            },
            {
              "lineno": 61,
              "line": "        let array = CborArray()"
            },
            {
              "lineno": 62,
              "line": "        put(key, array)"
            },
            {
              "lineno": 63,
              "line": "        return ArrayBuilder<MapBuilder<T>>(this, array)"
            },
            {
              "lineno": 64,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 60,
              "end_line": 64,
              "label": "    public func putArray(key: DataItem): ArrayBuilder<MapBuilder<T>> {\n        let array = CborArray()\n        put(key, array)\n        return ArrayBuilder<MapBuilder<T>>(this, array)\n    }",
              "successors": []
            }
          ]
        },
        {
          "name": "putArray",
          "type": "function",
          "start_line": 65,
          "end_line": 69,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 65,
              "line": "    public func putArray(key: Int64): ArrayBuilder<MapBuilder<T>> {"
            },
            {
              "lineno": 66,
              "line": "        let array = CborArray()"
            },
            {
              "lineno": 67,
              "line": "        put(convert(key), array)"
            },
            {
              "lineno": 68,
              "line": "        return ArrayBuilder<MapBuilder<T>>(this, array)"
            },
            {
              "lineno": 69,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 65,
              "end_line": 69,
              "label": "    public func putArray(key: Int64): ArrayBuilder<MapBuilder<T>> {\n        let array = CborArray()\n        put(convert(key), array)\n        return ArrayBuilder<MapBuilder<T>>(this, array)\n    }",
              "successors": []
            }
          ]
        },
        {
          "name": "putArray",
          "type": "function",
          "start_line": 70,
          "end_line": 74,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 70,
              "line": "    public func putArray(key: String): ArrayBuilder<MapBuilder<T>> {"
            },
            {
              "lineno": 71,
              "line": "        let array = CborArray()"
            },
            {
              "lineno": 72,
              "line": "        put(convert(key), array)"
            },
            {
              "lineno": 73,
              "line": "        return ArrayBuilder<MapBuilder<T>>(this, array)"
            },
            {
              "lineno": 74,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 70,
              "end_line": 73,
              "label": "    public func putArray(key: String): ArrayBuilder<MapBuilder<T>> {\n        let array = CborArray()\n        put(convert(key), array)\n        return ArrayBuilder<MapBuilder<T>>(this, array)",
              "successors": []
            }
          ]
        },
        {
          "name": "startArray",
          "type": "function",
          "start_line": 75,
          "end_line": 80,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 75,
              "line": "    public func startArray(key: DataItem): ArrayBuilder<MapBuilder<T>> {"
            },
            {
              "lineno": 76,
              "line": "        let array = CborArray()"
            },
            {
              "lineno": 77,
              "line": "        array.setChunked(true)"
            },
            {
              "lineno": 78,
              "line": "        put(key, array)"
            },
            {
              "lineno": 79,
              "line": "        return ArrayBuilder<MapBuilder<T>>(this, array)"
            },
            {
              "lineno": 80,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 75,
              "end_line": 80,
              "label": "    public func startArray(key: DataItem): ArrayBuilder<MapBuilder<T>> {\n        let array = CborArray()\n        array.setChunked(true)\n        put(key, array)\n        return ArrayBuilder<MapBuilder<T>>(this, array)\n    }",
              "successors": []
            }
          ]
        },
        {
          "name": "startArray",
          "type": "function",
          "start_line": 81,
          "end_line": 83,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 81,
              "line": "    public func startArray(key: Int64): ArrayBuilder<MapBuilder<T>> {"
            },
            {
              "lineno": 82,
              "line": "        return startArray(convert(key))"
            },
            {
              "lineno": 83,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 81,
              "end_line": 83,
              "label": "    public func startArray(key: Int64): ArrayBuilder<MapBuilder<T>> {\n        return startArray(convert(key))\n    }",
              "successors": []
            }
          ]
        },
        {
          "name": "startArray",
          "type": "function",
          "start_line": 84,
          "end_line": 89,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 84,
              "line": "    public func startArray(key: String): ArrayBuilder<MapBuilder<T>> {"
            },
            {
              "lineno": 85,
              "line": "        let array = CborArray()"
            },
            {
              "lineno": 86,
              "line": "        array.setChunked(true)"
            },
            {
              "lineno": 87,
              "line": "        put(convert(key), array)"
            },
            {
              "lineno": 88,
              "line": "        return ArrayBuilder<MapBuilder<T>>(this, array)"
            },
            {
              "lineno": 89,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 84,
              "end_line": 88,
              "label": "    public func startArray(key: String): ArrayBuilder<MapBuilder<T>> {\n        let array = CborArray()\n        array.setChunked(true)\n        put(convert(key), array)\n        return ArrayBuilder<MapBuilder<T>>(this, array)",
              "successors": []
            }
          ]
        },
        {
          "name": "putMap",
          "type": "function",
          "start_line": 90,
          "end_line": 94,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 90,
              "line": "    public func putMap(key: DataItem): MapBuilder<Object> {"
            },
            {
              "lineno": 91,
              "line": "        let nestedMap = CborMap()"
            },
            {
              "lineno": 92,
              "line": "        put(key, nestedMap)"
            },
            {
              "lineno": 93,
              "line": "        return MapBuilder<Object>(this, nestedMap)"
            },
            {
              "lineno": 94,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 90,
              "end_line": 93,
              "label": "    public func putMap(key: DataItem): MapBuilder<Object> {\n        let nestedMap = CborMap()\n        put(key, nestedMap)\n        return MapBuilder<Object>(this, nestedMap)\n    }",
              "successors": []
            }
          ]
        },
        {
          "name": "putMap",
          "type": "function",
          "start_line": 95,
          "end_line": 99,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 95,
              "line": "    public func putMap(key: Int64): MapBuilder<Object> {"
            },
            {
              "lineno": 96,
              "line": "        let nestedMap = CborMap()"
            },
            {
              "lineno": 97,
              "line": "        put(convert(key), nestedMap)"
            },
            {
              "lineno": 98,
              "line": "        return MapBuilder<Object>(this, nestedMap)"
            },
            {
              "lineno": 99,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 95,
              "end_line": 99,
              "label": "    public func putMap(key: Int64): MapBuilder<Object> {\n        let nestedMap = CborMap()\n        put(convert(key), nestedMap)\n        return MapBuilder<Object>(this, nestedMap)\n    }",
              "successors": []
            }
          ]
        },
        {
          "name": "putMap",
          "type": "function",
          "start_line": 100,
          "end_line": 104,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 100,
              "line": "    public func putMap(key: String): MapBuilder<Object> {"
            },
            {
              "lineno": 101,
              "line": "        let nestedMap = CborMap()"
            },
            {
              "lineno": 102,
              "line": "        put(convert(key), nestedMap)"
            },
            {
              "lineno": 103,
              "line": "        return MapBuilder<Object>(this, nestedMap)"
            },
            {
              "lineno": 104,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 100,
              "end_line": 103,
              "label": "    public func putMap(key: String): MapBuilder<Object> {\n        let nestedMap = CborMap()\n        put(convert(key), nestedMap)\n        return MapBuilder<Object>(this, nestedMap)",
              "successors": []
            }
          ]
        },
        {
          "name": "startMap",
          "type": "function",
          "start_line": 105,
          "end_line": 110,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 105,
              "line": "    public func startMap(key: DataItem): MapBuilder<Object> {"
            },
            {
              "lineno": 106,
              "line": "        let nestedMap = CborMap()"
            },
            {
              "lineno": 107,
              "line": "        nestedMap.setChunked(true)"
            },
            {
              "lineno": 108,
              "line": "        put(key, nestedMap)"
            },
            {
              "lineno": 109,
              "line": "        return MapBuilder<Object>(this, nestedMap)"
            },
            {
              "lineno": 110,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 105,
              "end_line": 109,
              "label": "    public func startMap(key: DataItem): MapBuilder<Object> {\n        let nestedMap = CborMap()\n        nestedMap.setChunked(true)\n        put(key, nestedMap)\n        return MapBuilder<Object>(this, nestedMap)",
              "successors": []
            }
          ]
        },
        {
          "name": "startMap",
          "type": "function",
          "start_line": 111,
          "end_line": 113,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 111,
              "line": "    public func startMap(key: Int64): MapBuilder<Object> {"
            },
            {
              "lineno": 112,
              "line": "        return startMap(convert(key))"
            },
            {
              "lineno": 113,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 111,
              "end_line": 112,
              "label": "    public func startMap(key: Int64): MapBuilder<Object> {\n        return startMap(convert(key))",
              "successors": []
            }
          ]
        },
        {
          "name": "startMap",
          "type": "function",
          "start_line": 114,
          "end_line": 116,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 114,
              "line": "    public func startMap(key: String): MapBuilder<Object> {"
            },
            {
              "lineno": 115,
              "line": "        return startMap(convert(key))"
            },
            {
              "lineno": 116,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 114,
              "end_line": 116,
              "label": "    public func startMap(key: String): MapBuilder<Object> {\n        return startMap(convert(key))\n    }",
              "successors": []
            }
          ]
        },
        {
          "name": "end",
          "type": "function",
          "start_line": 117,
          "end_line": 119,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 117,
              "line": "    public func end(): ?T {"
            },
            {
              "lineno": 118,
              "line": "        return getParent()"
            },
            {
              "lineno": 119,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 117,
              "end_line": 118,
              "label": "    public func end(): ?T {\n        return getParent()",
              "successors": []
            }
          ]
        }
      ],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 2,
          "line": "public class MapBuilder<T> <: AbstractBuilder<T> {"
        },
        {
          "lineno": 3,
          "line": "    private let map: CborMap"
        },
        {
          "lineno": 120,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "start_line": 2,
          "end_line": 120,
          "label": "public class MapBuilder<T> <: AbstractBuilder<T> {\n    private let map: CborMap\n}",
          "successors": []
        }
      ]
    }
  ],
  "simplified_code": [
    {
      "lineno": 1,
      "line": "package cbor4cj"
    }
  ],
  "blocks": [
    {
      "id": 1,
      "start_line": 1,
      "end_line": 1,
      "label": "package cbor4cj",
      "successors": []
    }
  ]
}