{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 19,
  "functions": [
    {
      "name": "unsignedShiftRight64",
      "type": "function",
      "start_line": 7,
      "end_line": 10,
      "functions": [],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 7,
          "line": "     func unsignedShiftRight64(c: Int64, num: Int64) {"
        },
        {
          "lineno": 8,
          "line": "        let t: Int64 = 0x7fffffffffffffff<<1 | 0x01;"
        },
        {
          "lineno": 9,
          "line": "        Int64(UInt64(t & c) >> num)"
        },
        {
          "lineno": 10,
          "line": "    }"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "start_line": 7,
          "end_line": 10,
          "label": "func unsignedShiftRight64(c: Int64, num: Int64) {\n        let t: Int64 = 0x7fffffffffffffff<<1 | 0x01;\n        Int64(UInt64(t & c) >> num)\n    }",
          "successors": []
        }
      ]
    },
    {
      "name": "highestOneBit",
      "type": "function",
      "start_line": 11,
      "end_line": 19,
      "functions": [],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 11,
          "line": "     func highestOneBit(i: Int64): Int64 {"
        },
        {
          "lineno": 12,
          "line": "        var i2 = i"
        },
        {
          "lineno": 13,
          "line": "        i2 |= (i2 >>  1);"
        },
        {
          "lineno": 14,
          "line": "        i2 |= i2 | (i2 >>  2);"
        },
        {
          "lineno": 15,
          "line": "        i2 |= (i2 >>  4);"
        },
        {
          "lineno": 16,
          "line": "        i2 |= (i2 >>  8);"
        },
        {
          "lineno": 17,
          "line": "        i2 |= (i2 >> 16);"
        },
        {
          "lineno": 18,
          "line": "        return i2 - unsignedShiftRight64(i2, 1);"
        },
        {
          "lineno": 19,
          "line": "    }"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "start_line": 11,
          "end_line": 17,
          "label": "     func highestOneBit(i: Int64): Int64 {\n        var i2 = i\n        i2 |= (i2 >>  1);\n        i2 |= i2 | (i2 >>  2);\n        i2 |= (i2 >>  4);\n        i2 |= (i2 >>  8);\n        i2 |= (i2 >> 16);",
          "successors": [
            {
              "id": 2,
              "start_line": 18,
              "end_line": 18,
              "label": "        return i2 - unsignedShiftRight64(i2, 1);",
              "successors": []
            }
          ]
        }
      ]
    }
  ],
  "classes": [
    {
      "name": "File",
      "type": "class",
      "start_line": 2,
      "end_line": 6,
      "functions": [
        {
          "name": "write",
          "type": "function",
          "start_line": 3,
          "end_line": 5,
          "functions": [],
          "classes": [],
          "simplified_code": [
            {
              "lineno": 3,
              "line": "     func write(s: UInt8): Unit {"
            },
            {
              "lineno": 4,
              "line": "        this.write(Array<UInt8>(1, item: s))"
            },
            {
              "lineno": 5,
              "line": "    }"
            }
          ],
          "blocks": [
            {
              "id": 1,
              "start_line": 3,
              "end_line": 5,
              "label": "     func write(s: UInt8): Unit {\n        this.write(Array<UInt8>(1, item: s))\n    }",
              "successors": []
            }
          ]
        }
      ],
      "classes": [],
      "simplified_code": [
        {
          "lineno": 2,
          "line": "extend File {"
        },
        {
          "lineno": 6,
          "line": "}"
        }
      ],
      "blocks": [
        {
          "id": 1,
          "start_line": 2,
          "end_line": 2,
          "label": "extend File {",
          "successors": [
            {
              "id": 2,
              "start_line": 6,
              "end_line": 6,
              "label": "}",
              "successors": []
            }
          ]
        }
      ]
    }
  ],
  "simplified_code": [
    {
      "lineno": 1,
      "line": "package droplet.droplet"
    }
  ],
  "blocks": [
    {
      "id": 1,
      "start_line": 1,
      "end_line": 1,
      "label": "package droplet.droplet",
      "successors": []
    }
  ]
}