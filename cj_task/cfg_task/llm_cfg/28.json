{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 81,
  "functions": [
    {
      "name": "main",
      "type": "function",
      "start_line": 7,
      "end_line": 81,
      "functions": [],
      "classes": [],
      "simplified_code": "main() {\n    let connectionString = \"root:12345678@tcp(10.200.1.164:3306)/admin-api\"\n    let opts = [\n        (\"cachePrepStmts\", \"true\")\n    ]\n    let drv = DriverManager.getDriver(\"mysql\") ?? return\n    let ds = drv.open(connectionString, opts)\n    let connection = ds.connect()\n\n    let deleteTable = \"\"\"\n        drop table if exists `sys_dept`;\n    \"\"\"\n    let deleteTableStatement = connection.prepareStatement(deleteTable)\n    let deleteTableParams = ArrayList<SqlDbType>()\n    let deleteTableResult = deleteTableStatement.update(deleteTableParams.toArray())\n    println(\"delete table sys_dept if exists success\")\n        \n\n    let createTable = \"\"\"\n        CREATE TABLE `sys_dept` (\n            `id` int NOT NULL AUTO_INCREMENT COMMENT '\u4e3b\u952e',\n            `parent_id` int NOT NULL COMMENT '\u7236id',\n            `dept_type` int NOT NULL COMMENT '\u90e8\u95e8\u7c7b\u578b\uff081->\u516c\u53f8, 2->\u4e2d\u5fc3\uff0c3->\u90e8\u95e8\uff09',\n            `dept_name` varchar(30) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT '\u90e8\u95e8\u540d\u79f0',\n            `dept_status` int NOT NULL DEFAULT '1' COMMENT '\u90e8\u95e8\u72b6\u6001\uff081->\u6b63\u5e38 2->\u505c\u7528\uff09',\n            PRIMARY KEY (`id`) USING BTREE,\n            UNIQUE KEY `dept_name` (`dept_name`) USING BTREE\n        ) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin ROW_FORMAT=DYNAMIC COMMENT='\u90e8\u95e8\u8868';\"\"\"\n\n    let createTableStatement = connection.prepareStatement(createTable)\n    let createTableParams= ArrayList<SqlDbType>()\n    let createTableResult = createTableStatement.update(createTableParams.toArray())\n    println(\"create table sys_dept success\")\n\n    // INSERT INTO `admin-api`.sys_dept(id, parent_id, dept_type, dept_name, dept_status) VALUES(1, 0, 1, 'develop1', 1);\n    let insertTableStatement = connection.prepareStatement(\"INSERT INTO sys_dept(parent_id, dept_type, dept_name, dept_status) VALUES(?,?,?,?);\")\n    var companyUpdateResult = insertTableStatement.update(SqlInteger(0), SqlInteger(1), SqlVarchar(\"cangjie company\"), SqlInteger(1))\n    var heNanUpdateResult = insertTableStatement.update(SqlInteger(Int32(companyUpdateResult.lastInsertId)), SqlInteger(2), SqlVarchar(\"henan center\"), SqlInteger(1))\n    var zheJiangUpdateResult = insertTableStatement.update(SqlInteger(Int32(companyUpdateResult.lastInsertId)), SqlInteger(2), SqlVarchar(\"zhejiang center\"), SqlInteger(1))\n    insertTableStatement.update(SqlInteger(Int32(heNanUpdateResult.lastInsertId)), SqlInteger(3), SqlVarchar(\"henan development1\"), SqlInteger(1))\n    insertTableStatement.update(SqlInteger(Int32(heNanUpdateResult.lastInsertId)), SqlInteger(3), SqlVarchar(\"henan development2\"), SqlInteger(1))\n    insertTableStatement.update(SqlInteger(Int32(zheJiangUpdateResult.lastInsertId)), SqlInteger(3), SqlVarchar(\"zhejiang development1\"), SqlInteger(1))\n    insertTableStatement.update(SqlInteger(Int32(zheJiangUpdateResult.lastInsertId)), SqlInteger(3), SqlVarchar(\"zhejiang development2\"), SqlInteger(1))\n    println(\"insert into table sys_dept, 7 rows\")\n\n    let id = SqlInteger(0)\n    let parentId = SqlInteger(0)\n    let deptType = SqlInteger(0)\n    let deptName = SqlVarchar(\"\")\n    let deptStatus = SqlInteger(0)\n\n    let statement = connection.prepareStatement(\"select * from `sys_dept`;\")\n    let param = ArrayList<SqlDbType>()\n    let queryResult = statement.query(param.toArray())\n    var tempIndex = 1\n    println(\"query sys_dept all data\")\n    while(queryResult.next(id, parentId, deptType, deptName, deptStatus)) {\n        println(\" ${tempIndex} rows data, id = ${id.value}, parentId = ${parentId.value},\" + \n            \"deptType = ${deptType.value}, deptName = ${deptName.value}, deptStatus = ${deptStatus.value}\"\n        )\n        tempIndex ++ \n    }\n\n    tempIndex = 1\n    println(\"query sys_dept where dept_type = 2\")\n        let statement2 = connection.prepareStatement(\"select * from sys_dept where dept_type = ?;\")\n        param.append(SqlBigInt(2))\n    let queryResult2 = statement2.query(param.toArray())\n    while(queryResult2.next(id, parentId, deptType, deptName, deptStatus)) {\n        println(\" ${tempIndex} rows data, id = ${id.value}, parentId = ${parentId.value},\" + \n            \"deptType = ${deptType.value},  deptName = ${deptName.value}, deptStatus = ${deptStatus.value}\"\n        )\n        tempIndex ++ \n    }\n}",
      "blocks": [
        {
          "id": 1,
          "label": "let connectionString = \"root:12345678@tcp(10.200.1.164:3306)/admin-api\"\nlet opts = [\n    (\"cachePrepStmts\", \"true\")\n]\nlet drv = DriverManager.getDriver(\"mysql\") ?? return\nlet ds = drv.open(connectionString, opts)\nlet connection = ds.connect()",
          "successors": [
            {
              "id": 2,
              "label": "let deleteTable = \"\"\"\n    drop table if exists `sys_dept`;\n\"\"\"\nlet deleteTableStatement = connection.prepareStatement(deleteTable)\nlet deleteTableParams = ArrayList<SqlDbType>()\nlet deleteTableResult = deleteTableStatement.update(deleteTableParams.toArray())\nprintln(\"delete table sys_dept if exists success\")",
              "successors": [
                {
                  "id": 3,
                  "label": "let createTable = \"\"\"\n    CREATE TABLE `sys_dept` (\n        `id` int NOT NULL AUTO_INCREMENT COMMENT '\u4e3b\u952e',\n        `parent_id` int NOT NULL COMMENT '\u7236id',\n        `dept_type` int NOT NULL COMMENT '\u90e8\u95e8\u7c7b\u578b\uff081->\u516c\u53f8, 2->\u4e2d\u5fc3\uff0c3->\u90e8\u95e8\uff09',\n        `dept_name` varchar(30) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT '\u90e8\u95e8\u540d\u79f0',\n        `dept_status` int NOT NULL DEFAULT '1' COMMENT '\u90e8\u95e8\u72b6\u6001\uff081->\u6b63\u5e38 2->\u505c\u7528\uff09',\n        PRIMARY KEY (`id`) USING BTREE,\n        UNIQUE KEY `dept_name` (`dept_name`) USING BTREE\n    ) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin ROW_FORMAT=DYNAMIC COMMENT='\u90e8\u95e8\u8868';\"\"\"\n\nlet createTableStatement = connection.prepareStatement(createTable)\nlet createTableParams= ArrayList<SqlDbType>()\nlet createTableResult = createTableStatement.update(createTableParams.toArray())\nprintln(\"create table sys_dept success\")",
                  "successors": [
                    {
                      "id": 4,
                      "label": "let insertTableStatement = connection.prepareStatement(\"INSERT INTO sys_dept(parent_id, dept_type, dept_name, dept_status) VALUES(?,?,?,?);\")\nvar companyUpdateResult = insertTableStatement.update(SqlInteger(0), SqlInteger(1), SqlVarchar(\"cangjie company\"), SqlInteger(1))\nvar heNanUpdateResult = insertTableStatement.update(SqlInteger(Int32(companyUpdateResult.lastInsertId)), SqlInteger(2), SqlVarchar(\"henan center\"), SqlInteger(1))\nvar zheJiangUpdateResult = insertTableStatement.update(SqlInteger(Int32(companyUpdateResult.lastInsertId)), SqlInteger(2), SqlVarchar(\"zhejiang center\"), SqlInteger(1))\ninsertTableStatement.update(SqlInteger(Int32(heNanUpdateResult.lastInsertId)), SqlInteger(3), SqlVarchar(\"henan development1\"), SqlInteger(1))\ninsertTableStatement.update(SqlInteger(Int32(heNanUpdateResult.lastInsertId)), SqlInteger(3), SqlVarchar(\"henan development2\"), SqlInteger(1))\ninsertTableStatement.update(SqlInteger(Int32(zheJiangUpdateResult.lastInsertId)), SqlInteger(3), SqlVarchar(\"zhejiang development1\"), SqlInteger(1))\ninsertTableStatement.update(SqlInteger(Int32(zheJiangUpdateResult.lastInsertId)), SqlInteger(3), SqlVarchar(\"zhejiang development2\"), SqlInteger(1))\nprintln(\"insert into table sys_dept, 7 rows\")",
                      "successors": [
                        {
                          "id": 5,
                          "label": "let id = SqlInteger(0)\nlet parentId = SqlInteger(0)\nlet deptType = SqlInteger(0)\nlet deptName = SqlVarchar(\"\")\nlet deptStatus = SqlInteger(0)",
                          "successors": [
                            {
                              "id": 6,
                              "label": "let statement = connection.prepareStatement(\"select * from `sys_dept`;\")\nlet param = ArrayList<SqlDbType>()\nlet queryResult = statement.query(param.toArray())\nvar tempIndex = 1\nprintln(\"query sys_dept all data\")",
                              "successors": [
                                {
                                  "id": 7,
                                  "label": "while(queryResult.next(id, parentId, deptType, deptName, deptStatus)) {\n    println(\" ${tempIndex} rows data, id = ${id.value}, parentId = ${parentId.value},\" + \n        \"deptType = ${deptType.value}, deptName = ${deptName.value}, deptStatus = ${deptStatus.value}\"\n    )\n    tempIndex ++ \n}",
                                  "successors": [
                                    {
                                      "id": 8,
                                      "label": "tempIndex = 1\nprintln(\"query sys_dept where dept_type = 2\")",
                                      "successors": [
                                        {
                                          "id": 9,
                                          "label": "let statement2 = connection.prepareStatement(\"select * from sys_dept where dept_type = ?;\")\nparam.append(SqlBigInt(2))\nlet queryResult2 = statement2.query(param.toArray())",
                                          "successors": [
                                            {
                                              "id": 10,
                                              "label": "while(queryResult2.next(id, parentId, deptType, deptName, deptStatus)) {\n    println(\" ${tempIndex} rows data, id = ${id.value}, parentId = ${parentId.value},\" + \n        \"deptType = ${deptType.value},  deptName = ${deptName.value}, deptStatus = ${deptStatus.value}\"\n    )\n    tempIndex ++ \n}",
                                              "successors": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ],
  "classes": [],
  "simplified_code": "package cangjieWeb\nimport serialization.serialization.*\nimport encoding.json.*\nimport std.database.sql.{DriverManager, SqlDbType, SqlBigInt, SqlInteger, SqlVarchar}\nimport cangjieWeb.mysql.MySqlDatasource\nimport std.collection.{ArrayList}\n}",
  "blocks": [
    {
      "id": 1,
      "label": "package cangjieWeb",
      "successors": [
        {
          "id": 2,
          "label": "import serialization.serialization.*",
          "successors": [
            {
              "id": 3,
              "label": "import encoding.json.*",
              "successors": [
                {
                  "id": 4,
                  "label": "import std.database.sql.{DriverManager, SqlDbType, SqlBigInt, SqlInteger, SqlVarchar}",
                  "successors": [
                    {
                      "id": 5,
                      "label": "import cangjieWeb.mysql.MySqlDatasource",
                      "successors": [
                        {
                          "id": 6,
                          "label": "import std.collection.{ArrayList}",
                          "successors": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}