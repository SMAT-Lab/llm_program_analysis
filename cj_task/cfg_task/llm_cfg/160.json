{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 23,
  "functions": [],
  "classes": [
    {
      "name": "CXChildVisitResult",
      "type": "class",
      "start_line": 2,
      "end_line": 23,
      "functions": [
        {
          "name": "ordinal",
          "type": "function",
          "start_line": 6,
          "end_line": 14,
          "functions": [],
          "classes": [],
          "simplified_code": "    override public prop ordinal: UInt {\n        get() {\n            match (this) {\n                case CXChildVisit_Break => 0\n                case CXChildVisit_Continue => 1\n                case CXChildVisit_Recurse => 2\n            }\n        }\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "override public prop ordinal: UInt {",
              "successors": [
                {
                  "id": 2,
                  "label": "get() {",
                  "successors": [
                    {
                      "id": 3,
                      "label": "match (this) {",
                      "successors": [
                        {
                          "id": 4,
                          "label": "case CXChildVisit_Break => 0",
                          "successors": [
                            {
                              "id": 7,
                              "label": "}",
                              "successors": []
                            }
                          ]
                        },
                        {
                          "id": 5,
                          "label": "case CXChildVisit_Continue => 1",
                          "successors": [
                            {
                              "id": 7,
                              "label": "}",
                              "successors": []
                            }
                          ]
                        },
                        {
                          "id": 6,
                          "label": "case CXChildVisit_Recurse => 2",
                          "successors": [
                            {
                              "id": 7,
                              "label": "}",
                              "successors": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "id": 7,
                      "label": "}",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "fromOrdinal",
          "type": "function",
          "start_line": 15,
          "end_line": 22,
          "functions": [],
          "classes": [],
          "simplified_code": "    static redef public func fromOrdinal(ordinal: UInt): CXChildVisitResult {\n        match (ordinal) {\n            case 0 => CXChildVisit_Break\n            case 1 => CXChildVisit_Continue\n            case 2 => CXChildVisit_Recurse\n            case invalid => throw IllegalArgumentException(\"Can't create CXChildVisitResult from ${invalid}\")\n        }\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "static redef public func fromOrdinal(ordinal: UInt): CXChildVisitResult {",
              "successors": [
                {
                  "id": 2,
                  "label": "match (ordinal) {",
                  "successors": [
                    {
                      "id": 3,
                      "label": "case 0 => CXChildVisit_Break",
                      "successors": []
                    },
                    {
                      "id": 4,
                      "label": "case 1 => CXChildVisit_Continue",
                      "successors": []
                    },
                    {
                      "id": 5,
                      "label": "case 2 => CXChildVisit_Recurse",
                      "successors": []
                    },
                    {
                      "id": 6,
                      "label": "case invalid => throw IllegalArgumentException(\"Can't create CXChildVisitResult from ${invalid}\")",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "simplified_code": "public enum CXChildVisitResult <: Ordinal<CXChildVisitResult> {\n    CXChildVisit_Break\n    | CXChildVisit_Continue\n    | CXChildVisit_Recurse\n    }\n    }\n}",
      "blocks": [
        {
          "id": 1,
          "label": "public enum CXChildVisitResult <: Ordinal<CXChildVisitResult> {",
          "successors": [
            {
              "id": 2,
              "label": "    CXChildVisit_Break",
              "successors": []
            },
            {
              "id": 3,
              "label": "    | CXChildVisit_Continue",
              "successors": []
            },
            {
              "id": 4,
              "label": "    | CXChildVisit_Recurse",
              "successors": []
            }
          ]
        }
      ]
    }
  ],
  "simplified_code": "package libclang\n}",
  "blocks": [
    {
      "id": 1,
      "label": "package libclang",
      "successors": []
    },
    {
      "id": 2,
      "label": "}",
      "successors": []
    }
  ]
}