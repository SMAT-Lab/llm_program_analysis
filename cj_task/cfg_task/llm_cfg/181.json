{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 37,
  "functions": [],
  "classes": [
    {
      "name": "IsNull",
      "type": "class",
      "start_line": 2,
      "end_line": 19,
      "functions": [
        {
          "name": "init",
          "type": "function",
          "start_line": 4,
          "end_line": 6,
          "functions": [],
          "classes": [],
          "simplified_code": "    public init(data: String) {\n        this.data = data\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public init(data: String) {",
              "successors": [
                {
                  "id": 2,
                  "label": "    this.data = data",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "writeTo",
          "type": "function",
          "start_line": 7,
          "end_line": 9,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func writeTo(w: CondWriter): Unit {\n        w.write(\"${this.data} IS NULL\")\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func writeTo(w: CondWriter): Unit {",
              "successors": [
                {
                  "id": 2,
                  "label": "    w.write(\"${this.data} IS NULL\")",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "and",
          "type": "function",
          "start_line": 10,
          "end_line": 12,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func and(condition: Cond): Cond {\n        buildAnd([this, condition])\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func and(condition: Cond): Cond {",
              "successors": [
                {
                  "id": 2,
                  "label": "    buildAnd([this, condition])",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "or",
          "type": "function",
          "start_line": 13,
          "end_line": 15,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func or(condition: Cond): Cond {\n        buildOr([this, condition])\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func or(condition: Cond): Cond {",
              "successors": [
                {
                  "id": 2,
                  "label": "    buildOr([this, condition])",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "isValid",
          "type": "function",
          "start_line": 16,
          "end_line": 18,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func isValid(): Bool {\n        this.data.size > 0\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func isValid(): Bool {",
              "successors": [
                {
                  "id": 2,
                  "label": "    this.data.size > 0",
                  "successors": []
                }
              ]
            }
          ]
        }
      ],
      "classes": [],
      "simplified_code": "public struct IsNull <: Cond {\n    let data: String\n    }\n    }\n    }\n    }\n    }\n}",
      "blocks": [
        {
          "id": 1,
          "label": "public struct IsNull <: Cond {",
          "successors": []
        },
        {
          "id": 2,
          "label": "    let data: String",
          "successors": []
        },
        {
          "id": 3,
          "label": "}",
          "successors": []
        }
      ]
    },
    {
      "name": "NotNull",
      "type": "class",
      "start_line": 20,
      "end_line": 37,
      "functions": [
        {
          "name": "init",
          "type": "function",
          "start_line": 22,
          "end_line": 24,
          "functions": [],
          "classes": [],
          "simplified_code": "    public init(data: String) {\n        this.data = data\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public init(data: String) {",
              "successors": [
                {
                  "id": 2,
                  "label": "    this.data = data",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "writeTo",
          "type": "function",
          "start_line": 25,
          "end_line": 27,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func writeTo(w: CondWriter): Unit {\n        w.write(\"${this.data} IS NOT NULL\")\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func writeTo(w: CondWriter): Unit {",
              "successors": [
                {
                  "id": 2,
                  "label": "    w.write(\"${this.data} IS NOT NULL\")",
                  "successors": [
                    {
                      "id": 3,
                      "label": "}",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "and",
          "type": "function",
          "start_line": 28,
          "end_line": 30,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func and(condition: Cond): Cond {\n        buildAnd([this, condition])\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func and(condition: Cond): Cond {",
              "successors": [
                {
                  "id": 2,
                  "label": "    buildAnd([this, condition])",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "or",
          "type": "function",
          "start_line": 31,
          "end_line": 33,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func or(condition: Cond): Cond {\n        buildOr([this, condition])\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func or(condition: Cond): Cond {",
              "successors": [
                {
                  "id": 2,
                  "label": "    buildOr([this, condition])",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "isValid",
          "type": "function",
          "start_line": 34,
          "end_line": 36,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func isValid(): Bool {\n        this.data.size > 0\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func isValid(): Bool {",
              "successors": [
                {
                  "id": 2,
                  "label": "this.data.size > 0",
                  "successors": []
                }
              ]
            }
          ]
        }
      ],
      "classes": [],
      "simplified_code": "public struct NotNull <: Cond {\n    let data: String\n    }\n    }\n    }\n    }\n    }\n}",
      "blocks": [
        {
          "id": 1,
          "label": "public struct NotNull <: Cond {",
          "successors": [
            {
              "id": 2,
              "label": "    let data: String",
              "successors": [
                {
                  "id": 3,
                  "label": "}",
                  "successors": []
                }
              ]
            }
          ]
        }
      ]
    }
  ],
  "simplified_code": "package cjorm.builder\n}\n}",
  "blocks": []
}