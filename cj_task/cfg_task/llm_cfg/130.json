{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 25,
  "functions": [
    {
      "name": "main",
      "type": "function",
      "start_line": 8,
      "end_line": 19,
      "functions": [],
      "classes": [],
      "simplified_code": "main (){\n    try {\n        let er: EmptyResponseWriteStream = EmptyResponseWriteStream()\n        er.header()\n        er.write(Array<UInt8>(16, item: 0))\n        er.writeStatusCode(200)\n        er.flush()\n    } catch (e: Exception) {\n        return -1\n    }\n    return 0\n}",
      "blocks": [
        {
          "id": 1,
          "label": "main (){",
          "successors": [
            {
              "id": 2,
              "label": "try {",
              "successors": [
                {
                  "id": 3,
                  "label": "let er: EmptyResponseWriteStream = EmptyResponseWriteStream()",
                  "successors": [
                    {
                      "id": 4,
                      "label": "er.header()",
                      "successors": [
                        {
                          "id": 5,
                          "label": "er.write(Array<UInt8>(16, item: 0))",
                          "successors": [
                            {
                              "id": 6,
                              "label": "er.writeStatusCode(200)",
                              "successors": [
                                {
                                  "id": 7,
                                  "label": "er.flush()",
                                  "successors": [
                                    {
                                      "id": 10,
                                      "label": "return 0",
                                      "successors": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "id": 8,
                  "label": "} catch (e: Exception) {",
                  "successors": [
                    {
                      "id": 9,
                      "label": "return -1",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ],
  "classes": [
    {
      "name": "EmptyResponseWriteStream",
      "type": "class",
      "start_line": 20,
      "end_line": 25,
      "functions": [
        {
          "name": "header",
          "type": "function",
          "start_line": 21,
          "end_line": 21,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func header(): HttpHeaders{ return HttpHeaders() }",
          "blocks": [
            {
              "id": 1,
              "label": "public func header(): HttpHeaders{ return HttpHeaders() }",
              "successors": []
            }
          ]
        },
        {
          "name": "write",
          "type": "function",
          "start_line": 22,
          "end_line": 22,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func write(_: Array<UInt8>): Unit {}",
          "blocks": [
            {
              "id": 1,
              "label": "public func write(_: Array<UInt8>): Unit {}",
              "successors": []
            }
          ]
        },
        {
          "name": "writeStatusCode",
          "type": "function",
          "start_line": 23,
          "end_line": 23,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func writeStatusCode(_: Int64): Unit {}",
          "blocks": [
            {
              "id": 1,
              "label": "public func writeStatusCode(_: Int64): Unit {}",
              "successors": []
            }
          ]
        },
        {
          "name": "flush",
          "type": "function",
          "start_line": 24,
          "end_line": 24,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func flush(): Unit {}",
          "blocks": [
            {
              "id": 1,
              "label": "public func flush(): Unit {}",
              "successors": []
            }
          ]
        }
      ],
      "classes": [],
      "simplified_code": "public class EmptyResponseWriteStream <: ResponseWriteStream {\n    public func header(): HttpHeaders{ return HttpHeaders() }\n    public func write(_: Array<UInt8>): Unit {}\n    public func writeStatusCode(_: Int64): Unit {}\n    public func flush(): Unit {}\n}",
      "blocks": [
        {
          "id": 1,
          "label": "public class EmptyResponseWriteStream <: ResponseWriteStream {",
          "successors": [
            {
              "id": 2,
              "label": "public func header(): HttpHeaders{ return HttpHeaders() }",
              "successors": [
                {
                  "id": 3,
                  "label": "public func write(_: Array<UInt8>): Unit {}",
                  "successors": [
                    {
                      "id": 4,
                      "label": "public func writeStatusCode(_: Int64): Unit {}",
                      "successors": [
                        {
                          "id": 5,
                          "label": "public func flush(): Unit {}",
                          "successors": [
                            {
                              "id": 6,
                              "label": "}",
                              "successors": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ],
  "simplified_code": "// EXEC: cjc %import-path %L %l %f  %project-path %project-L/protobuf  -l protobuf-cj\n// EXEC: ./main\nfrom rpc4cj import http2.frame.*\nfrom rpc4cj import util.*\nfrom rpc4cj import transport.*\nfrom std import collection.*\nfrom net import http.*\n}\n}",
  "blocks": [
    {
      "id": 1,
      "label": "// EXEC: cjc %import-path %L %l %f  %project-path %project-L/protobuf  -l protobuf-cj",
      "successors": [
        {
          "id": 2,
          "label": "// EXEC: ./main",
          "successors": [
            {
              "id": 3,
              "label": "from rpc4cj import http2.frame.*",
              "successors": [
                {
                  "id": 4,
                  "label": "from rpc4cj import util.*",
                  "successors": [
                    {
                      "id": 5,
                      "label": "from rpc4cj import transport.*",
                      "successors": [
                        {
                          "id": 6,
                          "label": "from std import collection.*",
                          "successors": [
                            {
                              "id": 7,
                              "label": "from net import http.*",
                              "successors": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}