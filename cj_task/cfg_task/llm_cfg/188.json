{
  "name": "droplet.droplet",
  "type": "CFG",
  "start_line": 1,
  "end_line": 19,
  "functions": [],
  "classes": [
    {
      "name": "File",
      "type": "class",
      "start_line": 2,
      "end_line": 6,
      "functions": [
        {
          "name": "write",
          "type": "function",
          "start_line": 3,
          "end_line": 5,
          "functions": [],
          "classes": [],
          "simplified_code": "     func write(s: UInt8): Unit {\n        this.write(Array<UInt8>(1, item: s))\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "func write(s: UInt8): Unit {",
              "successors": [
                {
                  "id": 2,
                  "label": "    this.write(Array<UInt8>(1, item: s))",
                  "successors": []
                }
              ]
            }
          ]
        }
      ],
      "simplified_code": "extend File {\n    }\n}",
      "blocks": [
        {
          "id": 1,
          "label": "extend File {",
          "successors": [
            {
              "id": 2,
              "label": "}",
              "successors": []
            }
          ]
        }
      ]
    }
  ],
  "simplified_code": "package droplet.droplet\n}\n     func unsignedShiftRight64(c: Int64, num: Int64) {\n        let t: Int64 = 0x7fffffffffffffff<<1 | 0x01;\n        Int64(UInt64(t & c) >> num)\n    }\n     func highestOneBit(i: Int64): Int64 {\n        var i2 = i\n        i2 |= (i2 >>  1);\n        i2 |= i2 | (i2 >>  2);\n        i2 |= (i2 >>  4);\n        i2 |= (i2 >>  8);\n        i2 |= (i2 >> 16);\n        return i2 - unsignedShiftRight64(i2, 1);\n    }",
  "blocks": [
    {
      "id": 1,
      "label": "package droplet.droplet",
      "successors": [
        {
          "id": 2,
          "label": "func unsignedShiftRight64(c: Int64, num: Int64) {",
          "successors": [
            {
              "id": 3,
              "label": "let t: Int64 = 0x7fffffffffffffff<<1 | 0x01;",
              "successors": [
                {
                  "id": 4,
                  "label": "Int64(UInt64(t & c) >> num)",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "id": 5,
          "label": "func highestOneBit(i: Int64): Int64 {",
          "successors": [
            {
              "id": 6,
              "label": "var i2 = i",
              "successors": [
                {
                  "id": 7,
                  "label": "i2 |= (i2 >>  1);",
                  "successors": [
                    {
                      "id": 8,
                      "label": "i2 |= i2 | (i2 >>  2);",
                      "successors": [
                        {
                          "id": 9,
                          "label": "i2 |= (i2 >>  4);",
                          "successors": [
                            {
                              "id": 10,
                              "label": "i2 |= (i2 >>  8);",
                              "successors": [
                                {
                                  "id": 11,
                                  "label": "i2 |= (i2 >> 16);",
                                  "successors": [
                                    {
                                      "id": 12,
                                      "label": "return i2 - unsignedShiftRight64(i2, 1);",
                                      "successors": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}