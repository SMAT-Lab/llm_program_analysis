{
  "name": "cbor4cj",
  "type": "CFG",
  "start_line": 1,
  "end_line": 37,
  "functions": [],
  "classes": [
    {
      "name": "UnicodeString",
      "type": "class",
      "start_line": 2,
      "end_line": 37,
      "functions": [
        {
          "name": "init",
          "type": "function",
          "start_line": 4,
          "end_line": 7,
          "functions": [],
          "classes": [],
          "simplified_code": "    public init(string: ?String) {\n        super(MajorType.UNICODE_STRING)\n        this.string = string\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public init(string: ?String) {",
              "successors": [
                {
                  "id": 2,
                  "label": "super(MajorType.UNICODE_STRING)",
                  "successors": [
                    {
                      "id": 3,
                      "label": "this.string = string",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "toString",
          "type": "function",
          "start_line": 8,
          "end_line": 14,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func toString(): String {\n        if (string.isNone()) {\n            return \"null\"\n        } else {\n            return string.getOrThrow()\n        }\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func toString(): String {",
              "successors": [
                {
                  "id": 2,
                  "label": "if (string.isNone()) {",
                  "successors": [
                    {
                      "id": 3,
                      "label": "return \"null\"",
                      "successors": []
                    },
                    {
                      "id": 4,
                      "label": "} else {",
                      "successors": [
                        {
                          "id": 5,
                          "label": "return string.getOrThrow()",
                          "successors": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "getString",
          "type": "function",
          "start_line": 15,
          "end_line": 17,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func getString(): ?String {\n        return string\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func getString(): ?String {",
              "successors": [
                {
                  "id": 2,
                  "label": "    return string",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "equals",
          "type": "function",
          "start_line": 18,
          "end_line": 28,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func equals(object: Object): Bool {\n        if (object is UnicodeString && super.equals(object)) {\n            let other = (object as UnicodeString).getOrThrow()\n            if (string.isNone()) {\n                return other.string.isNone()\n            } else {\n                return string == (other.string)\n            }\n        }\n        return false\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func equals(object: Object): Bool {",
              "successors": [
                {
                  "id": 2,
                  "label": "if (object is UnicodeString && super.equals(object)) {",
                  "successors": [
                    {
                      "id": 3,
                      "label": "let other = (object as UnicodeString).getOrThrow()",
                      "successors": [
                        {
                          "id": 4,
                          "label": "if (string.isNone()) {",
                          "successors": [
                            {
                              "id": 5,
                              "label": "return other.string.isNone()",
                              "successors": []
                            },
                            {
                              "id": 6,
                              "label": "return string == (other.string)",
                              "successors": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "id": 7,
                  "label": "return false",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "hashCode",
          "type": "function",
          "start_line": 29,
          "end_line": 36,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func hashCode(): Int64 {\n        var hash = 0\n        if (let Some(v) <- string) {\n            hash = Int64(super.hashCode())\n            hash += Int64(v.hashCode())\n        }\n        return Int64(hash)\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "var hash = 0",
              "successors": [
                {
                  "id": 2,
                  "label": "if (let Some(v) <- string) {",
                  "successors": [
                    {
                      "id": 3,
                      "label": "    hash = Int64(super.hashCode())\n    hash += Int64(v.hashCode())",
                      "successors": []
                    }
                  ]
                },
                {
                  "id": 4,
                  "label": "return Int64(hash)",
                  "successors": []
                }
              ]
            }
          ]
        }
      ],
      "classes": [],
      "simplified_code": "public class UnicodeString <: ChunkableDataItem {\n    private let string: ?String\n    }\n    }\n    }\n    }\n    }\n}",
      "blocks": [
        {
          "id": 1,
          "label": "public class UnicodeString <: ChunkableDataItem {",
          "successors": [
            {
              "id": 2,
              "label": "private let string: ?String",
              "successors": []
            }
          ]
        }
      ]
    }
  ],
  "simplified_code": "package cbor4cj\n}",
  "blocks": [
    {
      "id": 1,
      "label": "package cbor4cj",
      "successors": []
    }
  ]
}