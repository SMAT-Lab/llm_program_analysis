{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 95,
  "functions": [],
  "classes": [
    {
      "name": "S3MetricCollection",
      "type": "class",
      "start_line": 2,
      "end_line": 17,
      "functions": [
        {
          "name": "getRecords",
          "type": "function",
          "start_line": 5,
          "end_line": 5,
          "functions": [],
          "classes": [],
          "simplified_code": "    func getRecords(): ArrayList<S3MetricRecord>",
          "blocks": [
            {
              "id": 1,
              "label": "func getRecords(): ArrayList<S3MetricRecord>",
              "successors": []
            }
          ]
        },
        {
          "name": "getChildren",
          "type": "function",
          "start_line": 6,
          "end_line": 6,
          "functions": [],
          "classes": [],
          "simplified_code": "    func getChildren(): ArrayList<S3MetricCollection>",
          "blocks": [
            {
              "id": 1,
              "label": "func getChildren(): ArrayList<S3MetricCollection>",
              "successors": []
            }
          ]
        },
        {
          "name": "addRecord",
          "type": "function",
          "start_line": 7,
          "end_line": 7,
          "functions": [],
          "classes": [],
          "simplified_code": "    func addRecord(metric: String, data: ToString): Unit",
          "blocks": [
            {
              "id": 1,
              "label": "func addRecord(metric: String, data: ToString): Unit",
              "successors": []
            }
          ]
        },
        {
          "name": "createChild",
          "type": "function",
          "start_line": 8,
          "end_line": 8,
          "functions": [],
          "classes": [],
          "simplified_code": "    func createChild(name: String): S3MetricCollection",
          "blocks": [
            {
              "id": 1,
              "label": "func createChild(name: String): S3MetricCollection",
              "successors": []
            }
          ]
        },
        {
          "name": "create",
          "type": "function",
          "start_line": 14,
          "end_line": 16,
          "functions": [],
          "classes": [],
          "simplified_code": "    static func create(name: String): S3MetricCollection {\n        return DefaultS3MetricCollection(name)\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "static func create(name: String): S3MetricCollection {",
              "successors": [
                {
                  "id": 2,
                  "label": "    return DefaultS3MetricCollection(name)",
                  "successors": []
                }
              ]
            }
          ]
        }
      ],
      "classes": [],
      "simplified_code": "public interface S3MetricCollection <: ToString {\n    prop name: String\n    prop creationTime: DateTime\n    func getRecords(): ArrayList<S3MetricRecord>\n    func getChildren(): ArrayList<S3MetricCollection>\n    func addRecord(metric: String, data: ToString): Unit\n    func createChild(name: String): S3MetricCollection\n    static prop EMPTY_COLLECTION: S3MetricCollection {\n        get() {\n            EmptyS3MetricCollection.INSTANCE\n        }\n    }\n    }\n}",
      "blocks": [
        {
          "id": 1,
          "label": "public interface S3MetricCollection <: ToString {",
          "successors": [
            {
              "id": 2,
              "label": "prop name: String",
              "successors": [
                {
                  "id": 3,
                  "label": "prop creationTime: DateTime",
                  "successors": [
                    {
                      "id": 4,
                      "label": "func getRecords(): ArrayList<S3MetricRecord>",
                      "successors": [
                        {
                          "id": 5,
                          "label": "func getChildren(): ArrayList<S3MetricCollection>",
                          "successors": [
                            {
                              "id": 6,
                              "label": "func addRecord(metric: String, data: ToString): Unit",
                              "successors": [
                                {
                                  "id": 7,
                                  "label": "func createChild(name: String): S3MetricCollection",
                                  "successors": [
                                    {
                                      "id": 8,
                                      "label": "static prop EMPTY_COLLECTION: S3MetricCollection {",
                                      "successors": [
                                        {
                                          "id": 9,
                                          "label": "get() {",
                                          "successors": [
                                            {
                                              "id": 10,
                                              "label": "EmptyS3MetricCollection.INSTANCE",
                                              "successors": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "DefaultS3MetricCollection",
      "type": "class",
      "start_line": 18,
      "end_line": 64,
      "functions": [
        {
          "name": "init",
          "type": "function",
          "start_line": 23,
          "end_line": 28,
          "functions": [],
          "classes": [],
          "simplified_code": "    public init(name: String) {\n        this._name = name\n        this._creationTime = DateTime.now()\n        this._metrics = HashMap<String, ArrayList<S3MetricRecord>>()\n        this._children = ArrayList<S3MetricCollection>()\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public init(name: String) {",
              "successors": [
                {
                  "id": 2,
                  "label": "    this._name = name",
                  "successors": [
                    {
                      "id": 3,
                      "label": "    this._creationTime = DateTime.now()",
                      "successors": [
                        {
                          "id": 4,
                          "label": "    this._metrics = HashMap<String, ArrayList<S3MetricRecord>>()",
                          "successors": [
                            {
                              "id": 5,
                              "label": "    this._children = ArrayList<S3MetricCollection>()",
                              "successors": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "getRecords",
          "type": "function",
          "start_line": 39,
          "end_line": 45,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func getRecords(): ArrayList<S3MetricRecord> {\n        let records = ArrayList<S3MetricRecord>()\n        for (v in _metrics.values()) {\n            records.appendAll(v)\n        }\n        return records\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func getRecords(): ArrayList<S3MetricRecord> {",
              "successors": [
                {
                  "id": 2,
                  "label": "    let records = ArrayList<S3MetricRecord>()",
                  "successors": [
                    {
                      "id": 3,
                      "label": "    for (v in _metrics.values()) {",
                      "successors": [
                        {
                          "id": 4,
                          "label": "        records.appendAll(v)",
                          "successors": [
                            {
                              "id": 5,
                              "label": "    }",
                              "successors": [
                                {
                                  "id": 6,
                                  "label": "    return records",
                                  "successors": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "getChildren",
          "type": "function",
          "start_line": 46,
          "end_line": 48,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func getChildren(): ArrayList<S3MetricCollection> {\n        return _children\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func getChildren(): ArrayList<S3MetricCollection> {",
              "successors": [
                {
                  "id": 2,
                  "label": "return _children",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "addRecord",
          "type": "function",
          "start_line": 49,
          "end_line": 55,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func addRecord(metric: String, data: ToString): Unit {\n        var records = _metrics.get(metric).getOrDefault() {ArrayList<S3MetricRecord>()}\n        if (records.size == 0) {\n            _metrics.put(metric, records)\n        }\n        records.append(S3MetricRecord(metric, data))\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "var records = _metrics.get(metric).getOrDefault() {ArrayList<S3MetricRecord>()}",
              "successors": [
                {
                  "id": 2,
                  "label": "if (records.size == 0) {",
                  "successors": [
                    {
                      "id": 3,
                      "label": "_metrics.put(metric, records)",
                      "successors": [
                        {
                          "id": 4,
                          "label": "records.append(S3MetricRecord(metric, data))",
                          "successors": []
                        }
                      ]
                    },
                    {
                      "id": 4,
                      "label": "records.append(S3MetricRecord(metric, data))",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "createChild",
          "type": "function",
          "start_line": 56,
          "end_line": 60,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func createChild(name: String): S3MetricCollection {\n        let child = DefaultS3MetricCollection(name)\n        _children.append(child)\n        return child\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func createChild(name: String): S3MetricCollection {",
              "successors": [
                {
                  "id": 2,
                  "label": "    let child = DefaultS3MetricCollection(name)",
                  "successors": [
                    {
                      "id": 3,
                      "label": "    _children.append(child)",
                      "successors": [
                        {
                          "id": 4,
                          "label": "    return child",
                          "successors": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "toString",
          "type": "function",
          "start_line": 61,
          "end_line": 63,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func toString(): String {\n        return \"S3MetricCollection(name=${_name}, creationTime=${creationTime}, records=${ToStringUtils.listToString(getRecords())}, children=${ToStringUtils.listToString(_children)})\"\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func toString(): String {",
              "successors": [
                {
                  "id": 2,
                  "label": "return \"S3MetricCollection(name=${_name}, creationTime=${creationTime}, records=${ToStringUtils.listToString(getRecords())}, children=${ToStringUtils.listToString(_children)})\"",
                  "successors": []
                }
              ]
            }
          ]
        }
      ],
      "classes": [],
      "simplified_code": "class DefaultS3MetricCollection <: S3MetricCollection {\n    private let _name: String\n    private let _metrics: Map<String, ArrayList<S3MetricRecord>>\n    private let _children: ArrayList<S3MetricCollection>\n    private let _creationTime: DateTime\n    }\n    public prop name: String {\n        get() {\n            return _name\n        }\n    }\n    public prop creationTime: DateTime {\n        get() {\n            return _creationTime\n        }\n    }\n    }\n    }\n    }\n    }\n    }\n}",
      "blocks": [
        {
          "id": 1,
          "label": "class DefaultS3MetricCollection <: S3MetricCollection {",
          "successors": [
            {
              "id": 2,
              "label": "    private let _name: String",
              "successors": [
                {
                  "id": 3,
                  "label": "    private let _metrics: Map<String, ArrayList<S3MetricRecord>>",
                  "successors": [
                    {
                      "id": 4,
                      "label": "    private let _children: ArrayList<S3MetricCollection>",
                      "successors": [
                        {
                          "id": 5,
                          "label": "    private let _creationTime: DateTime",
                          "successors": [
                            {
                              "id": 6,
                              "label": "    public prop name: String {",
                              "successors": [
                                {
                                  "id": 7,
                                  "label": "        get() {",
                                  "successors": [
                                    {
                                      "id": 8,
                                      "label": "            return _name",
                                      "successors": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "id": 9,
                              "label": "    public prop creationTime: DateTime {",
                              "successors": [
                                {
                                  "id": 10,
                                  "label": "        get() {",
                                  "successors": [
                                    {
                                      "id": 11,
                                      "label": "            return _creationTime",
                                      "successors": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "EmptyS3MetricCollection",
      "type": "class",
      "start_line": 65,
      "end_line": 95,
      "functions": [
        {
          "name": "getRecords",
          "type": "function",
          "start_line": 80,
          "end_line": 82,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func getRecords(): ArrayList<S3MetricRecord> {\n        return EMPTY_RECORDS\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func getRecords(): ArrayList<S3MetricRecord> {",
              "successors": [
                {
                  "id": 2,
                  "label": "return EMPTY_RECORDS",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "getChildren",
          "type": "function",
          "start_line": 83,
          "end_line": 85,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func getChildren(): ArrayList<S3MetricCollection> {\n        return EMPTY_COLLECTIONS\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func getChildren(): ArrayList<S3MetricCollection> {",
              "successors": [
                {
                  "id": 2,
                  "label": "    return EMPTY_COLLECTIONS",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "addRecord",
          "type": "function",
          "start_line": 86,
          "end_line": 88,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func addRecord(_: String, _: ToString): Unit {\n        return\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func addRecord(_: String, _: ToString): Unit {",
              "successors": [
                {
                  "id": 2,
                  "label": "    return",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "createChild",
          "type": "function",
          "start_line": 89,
          "end_line": 91,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func createChild(_: String): S3MetricCollection {\n        return this\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func createChild(_: String): S3MetricCollection {",
              "successors": [
                {
                  "id": 2,
                  "label": "    return this",
                  "successors": []
                }
              ]
            }
          ]
        },
        {
          "name": "toString",
          "type": "function",
          "start_line": 92,
          "end_line": 94,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func toString(): String {\n        return \"EmptyS3MetricCollection()\"\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func toString(): String {",
              "successors": [
                {
                  "id": 2,
                  "label": "    return \"EmptyS3MetricCollection()\"",
                  "successors": []
                }
              ]
            }
          ]
        }
      ],
      "classes": [],
      "simplified_code": "class EmptyS3MetricCollection <: S3MetricCollection {\n    static let INSTANCE = EmptyS3MetricCollection()\n    private let _creationTime = DateTime.now()\n    private static let EMPTY_RECORDS = ArrayList<S3MetricRecord>(0)\n    private static let EMPTY_COLLECTIONS = ArrayList<S3MetricCollection>(0)\n    public prop name: String {\n        get() {\n            return \"EmptyS3MetricCollection\"\n        }\n    }\n    public prop creationTime: DateTime {\n        get() {\n            return _creationTime\n        }\n    }\n    }\n    }\n    }\n    }\n    }\n}",
      "blocks": [
        {
          "id": 1,
          "label": "class EmptyS3MetricCollection <: S3MetricCollection {",
          "successors": [
            {
              "id": 2,
              "label": "static let INSTANCE = EmptyS3MetricCollection()",
              "successors": []
            },
            {
              "id": 3,
              "label": "private let _creationTime = DateTime.now()",
              "successors": []
            },
            {
              "id": 4,
              "label": "private static let EMPTY_RECORDS = ArrayList<S3MetricRecord>(0)",
              "successors": []
            },
            {
              "id": 5,
              "label": "private static let EMPTY_COLLECTIONS = ArrayList<S3MetricCollection>(0)",
              "successors": []
            },
            {
              "id": 6,
              "label": "public prop name: String {",
              "successors": [
                {
                  "id": 7,
                  "label": "get() {",
                  "successors": [
                    {
                      "id": 8,
                      "label": "return \"EmptyS3MetricCollection\"",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "id": 9,
          "label": "public prop creationTime: DateTime {",
          "successors": [
            {
              "id": 10,
              "label": "get() {",
              "successors": [
                {
                  "id": 11,
                  "label": "return _creationTime",
                  "successors": []
                }
              ]
            }
          ]
        }
      ]
    }
  ],
  "simplified_code": "package s3client.core\n}\n}\n}",
  "blocks": []
}