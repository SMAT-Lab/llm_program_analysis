{
  "name": "example_script",
  "type": "CFG",
  "start_line": 1,
  "end_line": 69,
  "functions": [
    {
      "name": "readFile",
      "type": "function",
      "start_line": 26,
      "end_line": 28,
      "functions": [],
      "classes": [],
      "simplified_code": "func readFile(path: String): String {\n    return String.fromUtf8(File.readFrom(path))\n}",
      "blocks": [
        {
          "id": 1,
          "label": "func readFile(path: String): String {",
          "successors": [
            {
              "id": 2,
              "label": "    return String.fromUtf8(File.readFrom(path))",
              "successors": []
            }
          ]
        }
      ]
    },
    {
      "name": "main",
      "type": "function",
      "start_line": 30,
      "end_line": 69,
      "functions": [],
      "classes": [],
      "simplified_code": "main() {\n    let server = HttpServer(\"127.0.0.1\", 8080)\n    // \u54cd\u5e94 GET \u8bf7\u6c42\n    server.route(\"/\", { req, res => \n        if (req.method == \"GET\") {\n            // \u8bbe\u7f6e http \u54cd\u5e94\u5934\n            let Headers = HttpHeaders()\n            Headers.add(\"Content-Type\", \"text/html;charset=utf-8;\")\n            res.setHeaders(Headers)\n            // \u8fd4\u56de\u8bfb\u53d6\u4e00\u4e2a html \u6587\u4ef6\uff0c\u5e76\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\n            res.body(readFile(\"./index.html\"))\n        }\n    })\n    // \u54cd\u5e94 POST \u8bf7\u6c42\n    server.route(\"/testApi\", { req, res => \n        if (req.method == \"POST\") {\n            // \u8bfb\u53d6\u8bf7\u6c42\u5185\u5bb9\n            let data = Array<UInt8>(1024, repeat: 0)\n            let length = req.body.read(data)\n            let content = String.fromUtf8(data.slice(0, length))\n            println(content)\n            let object = JsonValue.fromStr(content).asObject()\n\n            // \u521d\u59cb\u5316\u4e00\u4e2a\u7a7a\u7684 JsonObject\uff0c\u5e76\u6dfb\u52a0\u952e\u503c\u548c\u4fe1\u606f\n            let response = JsonObject()\n            response.put(\"code\", JsonValue.fromStr(\"\\\"ok\\\"\"))\n            let UserName = object.get(\"name\").getOrThrow().asString().getValue()\n            response.put(\"msg\", JsonValue.fromStr(\"\\\"Cangjie\uff1aHello ${UserName}\\\"\"))\n\n            // \u8bbe\u7f6e http \u54cd\u5e94\u5934\n            let headers = HttpHeaders()\n            headers.add(\"Content-Type\", \"applications/json;charset=utf-8;\")\n            res.setHeaders(headers)\n\n            // \u5c06 JsonObject \u8f6c\u4e3a Json \u5b57\u7b26\u4e32\u6587\u672c\u5e76\u54cd\u5e94\u8fd4\u56de\n            res.body(response.toJsonString())\n        }\n    })\n    server.start()\n}",
      "blocks": [
        {
          "id": 1,
          "label": "main() {",
          "successors": [
            {
              "id": 2,
              "label": "let server = HttpServer(\"127.0.0.1\", 8080)",
              "successors": [
                {
                  "id": 3,
                  "label": "server.route(\"/\", { req, res =>",
                  "successors": [
                    {
                      "id": 4,
                      "label": "if (req.method == \"GET\") {",
                      "successors": [
                        {
                          "id": 5,
                          "label": "let Headers = HttpHeaders()",
                          "successors": [
                            {
                              "id": 6,
                              "label": "Headers.add(\"Content-Type\", \"text/html;charset=utf-8;\")",
                              "successors": [
                                {
                                  "id": 7,
                                  "label": "res.setHeaders(Headers)",
                                  "successors": [
                                    {
                                      "id": 8,
                                      "label": "res.body(readFile(\"./index.html\"))",
                                      "successors": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "id": 9,
              "label": "server.route(\"/testApi\", { req, res =>",
              "successors": [
                {
                  "id": 10,
                  "label": "if (req.method == \"POST\") {",
                  "successors": [
                    {
                      "id": 11,
                      "label": "let data = Array<UInt8>(1024, repeat: 0)",
                      "successors": [
                        {
                          "id": 12,
                          "label": "let length = req.body.read(data)",
                          "successors": [
                            {
                              "id": 13,
                              "label": "let content = String.fromUtf8(data.slice(0, length))",
                              "successors": [
                                {
                                  "id": 14,
                                  "label": "println(content)",
                                  "successors": [
                                    {
                                      "id": 15,
                                      "label": "let object = JsonValue.fromStr(content).asObject()",
                                      "successors": [
                                        {
                                          "id": 16,
                                          "label": "let response = JsonObject()",
                                          "successors": [
                                            {
                                              "id": 17,
                                              "label": "response.put(\"code\", JsonValue.fromStr(\"\\\"ok\\\"\"))",
                                              "successors": [
                                                {
                                                  "id": 18,
                                                  "label": "let UserName = object.get(\"name\").getOrThrow().asString().getValue()",
                                                  "successors": [
                                                    {
                                                      "id": 19,
                                                      "label": "response.put(\"msg\", JsonValue.fromStr(\"\\\"Cangjie\uff1aHello ${UserName}\\\"\"))",
                                                      "successors": [
                                                        {
                                                          "id": 20,
                                                          "label": "let headers = HttpHeaders()",
                                                          "successors": [
                                                            {
                                                              "id": 21,
                                                              "label": "headers.add(\"Content-Type\", \"applications/json;charset=utf-8;\")",
                                                              "successors": [
                                                                {
                                                                  "id": 22,
                                                                  "label": "res.setHeaders(headers)",
                                                                  "successors": [
                                                                    {
                                                                      "id": 23,
                                                                      "label": "res.body(response.toJsonString())",
                                                                      "successors": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "id": 24,
              "label": "server.start()",
              "successors": []
            }
          ]
        }
      ]
    }
  ],
  "classes": [
    {
      "name": "HttpServer",
      "type": "class",
      "start_line": 7,
      "end_line": 24,
      "functions": [
        {
          "name": "init",
          "type": "function",
          "start_line": 9,
          "end_line": 12,
          "functions": [],
          "classes": [],
          "simplified_code": "    public init(ip: String, port: UInt16) {\n        server = ServerBuilder().addr(ip).port(port).build()\n        println(\"http://${ip}:${port}\")\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public init(ip: String, port: UInt16) {",
              "successors": [
                {
                  "id": 2,
                  "label": "    server = ServerBuilder().addr(ip).port(port).build()",
                  "successors": [
                    {
                      "id": 3,
                      "label": "    println(\"http://${ip}:${port}\")",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "route",
          "type": "function",
          "start_line": 14,
          "end_line": 19,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func route(route: String,\n        callback: (req: HttpRequest, res: HttpResponseBuilder) -> Unit) {\n        server.distributor.register(route, { context => \n            callback(context.request, context.responseBuilder)\n        })\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func route(route: String, callback: (req: HttpRequest, res: HttpResponseBuilder) -> Unit) {",
              "successors": [
                {
                  "id": 2,
                  "label": "server.distributor.register(route, { context =>",
                  "successors": [
                    {
                      "id": 3,
                      "label": "callback(context.request, context.responseBuilder)",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "start",
          "type": "function",
          "start_line": 21,
          "end_line": 23,
          "functions": [],
          "classes": [],
          "simplified_code": "    public func start() {\n        server.serve()\n    }",
          "blocks": [
            {
              "id": 1,
              "label": "public func start() {",
              "successors": [
                {
                  "id": 2,
                  "label": "    server.serve()",
                  "successors": [
                    {
                      "id": 3,
                      "label": "}",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "classes": [],
      "simplified_code": "class HttpServer {\n    let server: Server\n    }\n\n    }\n\n    }\n}",
      "blocks": [
        {
          "id": 1,
          "label": "class HttpServer {",
          "successors": [
            {
              "id": 2,
              "label": "let server: Server",
              "successors": []
            }
          ]
        }
      ]
    }
  ],
  "simplified_code": "// \u6784\u5efa\u4e00\u4e2a\u7b80\u5355\u7684 HTTP \u670d\u52a1\u5668\uff0c\u53ef\u4ee5\u54cd\u5e94 GET \u4e0e POST \u8bf7\u6c42\uff0c\u5e76\u652f\u6301 JSON \u6570\u636e\n// cjc version: 0.55.3\nimport std.fs.{ File, OpenOption }\nimport net.http.*\nimport encoding.json.{ JsonObject, JsonValue }\n\n}\n\n}\n\n}",
  "blocks": [
    {
      "id": 1,
      "label": "import std.fs.{ File, OpenOption }\nimport net.http.*\nimport encoding.json.{ JsonObject, JsonValue }",
      "successors": []
    }
  ]
}