{
  "edge_analysis": {
    "static_total": 0,
    "llm_total": 12,
    "matched_edges": {
      "exact_matches": 0,
      "partial_matches": 0
    },
    "accuracy_metrics": {
      "precision": 0,
      "recall": 0,
      "f1_score": 0
    }
  },
  "structure_validation": {
    "missing_blocks": [],
    "extra_blocks": [
      "Edge 0: [Source] class Brower {\\n var metadata: Metadata\\n var links: Links\\n var navigation: Navigation\\nvar groups: ArrayList<Group> = ArrayList<Group>() => [Target] }",
      "Edge 1: [Source] static func initSeries(host: String, publisher: String): Group {\\n var series = Group()\\n series.metadata = Metadata(\"Series\")\\n var obj: ArrayList<BookSeries> => [Target] if (publisher != \"\") {\\n obj = BookSeries.formPublisher(publisher)",
      "Edge 2: [Source] static func initSeries(host: String, publisher: String): Group {\\n var series = Group()\\n series.metadata = Metadata(\"Series\")\\n var obj: ArrayList<BookSeries> => [Target] } else {\\n let numberOfItems = BookSeries.getCount()\\n obj = BookSeries.formDatabase(baseConfig.database, count: numberOfItems)\\n }",
      "Edge 3: [Source] if (publisher != \"\") {\\n obj = BookSeries.formPublisher(publisher) => [Target] for (i in obj) {\\n series.navigation.append(\\n Link(\\n title: i.name,\\n href: \\\"http://${host}/opds/v2/series/${i.id}\\\",\\n type_u: \\\"application/opds+json\\\"\\n )\\n )\\n }",
      "Edge 4: [Source] for (i in obj) {\\n series.navigation.append(\\n Link(\\n title: i.name,\\n href: \\\"http://${host}/opds/v2/series/${i.id}\\\",\\n type_u: \\\"application/opds+json\\\"\\n )\\n )\\n } => [Target] return series",
      "Edge 5: [Source] } else {\\n let numberOfItems = BookSeries.getCount()\\n obj = BookSeries.formDatabase(baseConfig.database, count: numberOfItems)\\n } => [Target] for (i in obj) {\\n series.navigation.append(\\n Link(\\n title: i.name,\\n href: \\\"http://${host}/opds/v2/series/${i.id}\\\",\\n type_u: \\\"application/opds+json\\\"\\n )\\n )\\n }",
      "Edge 6: [Source] for (i in obj) {\\n series.navigation.append(\\n Link(\\n title: i.name,\\n href: \\\"http://${host}/opds/v2/series/${i.id}\\\",\\n type_u: \\\"application/opds+json\\\"\\n )\\n )\\n } => [Target] return series",
      "Edge 7: [Source] static func initSeries(id: String, host: String, publisher: String): Group {\\n var series = Group()\\n series.metadata = Metadata(\\\"Series\\\")\\n var obj: ArrayList<BookSeries>\\nif (publisher != \\\"\") {\\n obj = BookSeries.formPublisher(publisher) => [Target] } else {\\n let numberOfItems = BookSeries.getCount(id: id)\\n obj = BookSeries.formDatabase(baseConfig.database, count: numberOfItems, libId: id)\\n}",
      "Edge 8: [Source] } else {\\n let numberOfItems = BookSeries.getCount(id: id)\\n obj = BookSeries.formDatabase(baseConfig.database, count: numberOfItems, libId: id)\\n} => [Target] for (i in obj) {\\n series.navigation.append(\\n Link(\\n title: i.name,\\n href: \\\"http://${host}/opds/v2/series/${i.id}\\\",\\n type_u: \\\"application/opds+json\\\"\\n )\\n )\\n}",
      "Edge 9: [Source] for (i in obj) {\\n series.navigation.append(\\n Link(\\n title: i.name,\\n href: \\\"http://${host}/opds/v2/series/${i.id}\\\",\\n type_u: \\\"application/opds+json\\\"\\n )\\n )\\n} => [Target] return series",
      "Edge 10: [Source] static func initPublisher(host: String): Group {\\n var publisher = Group()\\n publisher.metadata = Metadata(\\\"Publisher\\\")\\n var obj = BookSeries.getPublishList() => [Target] for (i in obj) {\\n var arg = Form(\\\"publisher=${i}\\\")\\n publisher.navigation.append(\\n Link(\\n title: i,\\n href: \\\"http://${host}/opds/v2/libraries/browse?${arg.toEncodeString()}\\\",\\n type_u: \\\"application/opds+json\\\"\\n )\\n )\\n }",
      "Edge 11: [Source] for (i in obj) {\\n var arg = Form(\\\"publisher=${i}\\\")\\n publisher.navigation.append(\\n Link(\\n title: i,\\n href: \\\"http://${host}/opds/v2/libraries/browse?${arg.toEncodeString()}\\\",\\n type_u: \\\"application/opds+json\\\"\\n )\\n )\\n } => [Target] return publisher"
    ]
  }
}