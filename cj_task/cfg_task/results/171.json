{
  "edge_analysis": {
    "static_total": 0,
    "llm_total": 18,
    "matched_edges": {
      "exact_matches": 0,
      "partial_matches": 0
    },
    "accuracy_metrics": {
      "precision": 0,
      "recall": 0,
      "f1_score": 0
    }
  },
  "structure_validation": {
    "missing_blocks": [],
    "extra_blocks": [
      "Edge 0: [Source] main (){\\n var sum: Int64 = tesSparkMD5_01() => [Target] if (sum != 0) {\\n println(sum)\\n return sum\\n }\\nsum = tesSparkMD5_02()\\n if (sum != 0) {",
      "Edge 1: [Source] main (){\\n var sum: Int64 = tesSparkMD5_01() => [Target] sum = tesSparkMD5_02()\\n if (sum != 0) {",
      "Edge 2: [Source] if (sum != 0) {\\n println(sum)\\n return sum\\n }\\nsum = tesSparkMD5_02()\\n if (sum != 0) { => [Target] println(sum)\\n return sum\\n }\\nsum = tesSparkMD5_03()\\n if (sum != 0) {",
      "Edge 3: [Source] if (sum != 0) {\\n println(sum)\\n return sum\\n }\\nsum = tesSparkMD5_02()\\n if (sum != 0) { => [Target] sum = tesSparkMD5_03()\\n if (sum != 0) {",
      "Edge 4: [Source] println(sum)\\n return sum\\n }\\nsum = tesSparkMD5_03()\\n if (sum != 0) { => [Target] println(sum)\\n return sum\\n }\\nreturn 0\\n}",
      "Edge 5: [Source] println(sum)\\n return sum\\n }\\nsum = tesSparkMD5_03()\\n if (sum != 0) { => [Target] return 0\\n}",
      "Edge 6: [Source] sum = tesSparkMD5_03()\\n if (sum != 0) { => [Target] println(sum)\\n return sum\\n }\\nreturn 0\\n}",
      "Edge 7: [Source] sum = tesSparkMD5_03()\\n if (sum != 0) { => [Target] return 0\\n}",
      "Edge 8: [Source] sum = tesSparkMD5_02()\\n if (sum != 0) { => [Target] println(sum)\\n return sum\\n }\\nsum = tesSparkMD5_03()\\n if (sum != 0) {",
      "Edge 9: [Source] sum = tesSparkMD5_02()\\n if (sum != 0) { => [Target] sum = tesSparkMD5_03()\\n if (sum != 0) {",
      "Edge 10: [Source] println(sum)\\n return sum\\n }\\nsum = tesSparkMD5_03()\\n if (sum != 0) { => [Target] println(sum)\\n return sum\\n }\\nreturn 0\\n}",
      "Edge 11: [Source] println(sum)\\n return sum\\n }\\nsum = tesSparkMD5_03()\\n if (sum != 0) { => [Target] return 0\\n}",
      "Edge 12: [Source] sum = tesSparkMD5_03()\\n if (sum != 0) { => [Target] println(sum)\\n return sum\\n }\\nreturn 0\\n}",
      "Edge 13: [Source] sum = tesSparkMD5_03()\\n if (sum != 0) { => [Target] return 0\\n}",
      "Edge 14: [Source] func tesSparkMD5_01(): Int64 {\\n let sparkMD5: SparkMD5 = SparkMD5()\\n sparkMD5.buff = \"123456789\"\\n let str: String = sparkMD5.buff\\n println(str)\\n println(sparkMD5.length)\\nif (str == \"123456789\") {\\n return 0 => [Target] return 1",
      "Edge 15: [Source] func tesSparkMD5_02(): Int64 {\\n let sparkMD5: SparkMD5 = SparkMD5()\\n sparkMD5.buff = \"20231121:123456789\"\\n sparkMD5.length = 18\\n let str: String = sparkMD5.buff\\n println(str)\\n println(sparkMD5.length) => [Target] if (str == \"20231121:123456789\" && sparkMD5.length == 18) {\\n return 0\\n }\\nreturn 2",
      "Edge 16: [Source] func tesSparkMD5_02(): Int64 {\\n let sparkMD5: SparkMD5 = SparkMD5()\\n sparkMD5.buff = \"20231121:123456789\"\\n sparkMD5.length = 18\\n let str: String = sparkMD5.buff\\n println(str)\\n println(sparkMD5.length) => [Target] return 2",
      "Edge 17: [Source] func tesSparkMD5_03(): Int64 {\\n let sparkMD5: SparkMD5 = SparkMD5()\\n sparkMD5.buff = \"20231121:123456789\"\\n sparkMD5.length = 18\\n sparkMD5.hash = Array<Int32>()\\n let str: String = sparkMD5.buff\\n println(sparkMD5.length)\\n println(sparkMD5.hash)\\nif (str == \"20231121:123456789\" && sparkMD5.length == 18 && sparkMD5.hash.size == 0) {\\n return 0\\n} => [Target] return 3"
    ]
  }
}