{
  "edge_analysis": {
    "static_total": 0,
    "llm_total": 6,
    "matched_edges": {
      "exact_matches": 0,
      "partial_matches": 0
    },
    "accuracy_metrics": {
      "precision": 0,
      "recall": 0,
      "f1_score": 0
    }
  },
  "structure_validation": {
    "missing_blocks": [],
    "extra_blocks": [
      "Edge 0: [Source] public func run() {\\n // \\\\u7b49\\u5f85\\u6240\\u6709\\u7ebf\\u7a0b\\u4e00\\u8d77\\u6267\\u884c\\n barrier.wait()\\n var i = 0 => [Target] while (TaskController.running.load() && (executeNum == -1 || i < executeNum)) {",
      "Edge 1: [Source] public func run() {\\n // \\\\u7b49\\u5f85\\u6240\\u6709\\u7ebf\\u7a0b\\u4e00\\u8d77\\u6267\\u884c\\n barrier.wait()\\n var i = 0 => [Target] }",
      "Edge 2: [Source] while (TaskController.running.load() && (executeNum == -1 || i < executeNum)) { => [Target] // \\\\u53d1\\u9001\\u6d88\\u606f\\uff0c\\u5e76\\u83b7\\u53d6\\u5bf9\\u5e94\\u7684\\u54cd\\u5e94\\n let echoRequest = EchoRequest(TaskController.requestIdGenerator.fetchAdd(1), message)\\n let session = sessions[nextIndex()]\\n session.writeAndFlushMessage(echoRequest)\\n try {\\n let echoResponse = echoRequest.waitForResponse()",
      "Edge 3: [Source] // \\\\u53d1\\u9001\\u6d88\\u606f\\uff0c\\u5e76\\u83b7\\u53d6\\u5bf9\\u5e94\\u7684\\u54cd\\u5e94\\n let echoRequest = EchoRequest(TaskController.requestIdGenerator.fetchAdd(1), message)\\n let session = sessions[nextIndex()]\\n session.writeAndFlushMessage(echoRequest)\\n try {\\n let echoResponse = echoRequest.waitForResponse() => [Target] if (TaskController.stopTime.load() == 0) {\\n let totalCount = TaskController.totalInvokeCount.fetchAdd(1)",
      "Edge 4: [Source] // \\\\u53d1\\u9001\\u6d88\\u606f\\uff0c\\u5e76\\u83b7\\u53d6\\u5bf9\\u5e94\\u7684\\u54cd\\u5e94\\n let echoRequest = EchoRequest(TaskController.requestIdGenerator.fetchAdd(1), message)\\n let session = sessions[nextIndex()]\\n session.writeAndFlushMessage(echoRequest)\\n try {\\n let echoResponse = echoRequest.waitForResponse() => [Target] }\\n i++\\n } catch (ex: Exception) {\\n ex.printStackTrace()\\n break",
      "Edge 5: [Source] if (TaskController.stopTime.load() == 0) {\\n let totalCount = TaskController.totalInvokeCount.fetchAdd(1) => [Target] if (totalCount + 1 >= totalRequestCount) {\\n // \\\\u8bbe\\u7f6e\\u505c\\u6b62\\u65f6\\u95f4\\n TaskController.stopTime.compareAndSwap(0, DateTime.now().toUnixTimeStamp().toMilliseconds());"
    ]
  }
}