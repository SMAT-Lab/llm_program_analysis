{
  "edge_analysis": {
    "static_total": 0,
    "llm_total": 64,
    "matched_edges": {
      "exact_matches": 0,
      "partial_matches": 0
    },
    "accuracy_metrics": {
      "precision": 0,
      "recall": 0,
      "f1_score": 0
    }
  },
  "structure_validation": {
    "missing_blocks": [],
    "extra_blocks": [
      "Edge 0: [Source] public struct Json {\\n private let value: JsonValue => [Target] public prop array: Option<Array<Json>> {\\n get() {",
      "Edge 1: [Source] public struct Json {\\n private let value: JsonValue => [Target] public prop arrayValue: Array<Json> {\\n get() {",
      "Edge 2: [Source] public struct Json {\\n private let value: JsonValue => [Target] public prop dataModel: DataModel {\\n get() {\\n return DataModel.fromJson(this.value)\\n }\\n }",
      "Edge 3: [Source] public struct Json {\\n private let value: JsonValue => [Target] public prop bool: Option<Bool> {\\n get() {",
      "Edge 4: [Source] public struct Json {\\n private let value: JsonValue => [Target] public prop boolValue: Bool {\\n get() {",
      "Edge 5: [Source] public struct Json {\\n private let value: JsonValue => [Target] public prop int64: Option<Int64> {\\n get() {",
      "Edge 6: [Source] public struct Json {\\n private let value: JsonValue => [Target] public prop int64Value: Int64 {\\n get() {",
      "Edge 7: [Source] public struct Json {\\n private let value: JsonValue => [Target] public prop float64: Option<Float64> {\\n get() {",
      "Edge 8: [Source] public struct Json {\\n private let value: JsonValue => [Target] public prop float64Value: Float64 {\\n get() {",
      "Edge 9: [Source] public struct Json {\\n private let value: JsonValue => [Target] public prop string: Option<String> {\\n get() {",
      "Edge 10: [Source] public struct Json {\\n private let value: JsonValue => [Target] public prop stringValue: String {\\n get() {",
      "Edge 11: [Source] public struct Json {\\n private let value: JsonValue => [Target] }",
      "Edge 12: [Source] public prop array: Option<Array<Json>> {\\n get() { => [Target] match (this.value.kind()) {",
      "Edge 13: [Source] public prop array: Option<Array<Json>> {\\n get() { => [Target] }\\n }\\n }",
      "Edge 14: [Source] match (this.value.kind()) { => [Target] case JsonKind.JsArray => return collectArray(\\n this.value.asArray().getItems() |> map {e => Json(value: e)})",
      "Edge 15: [Source] match (this.value.kind()) { => [Target] case _ => return Option.None",
      "Edge 16: [Source] public prop arrayValue: Array<Json> {\\n get() { => [Target] match (this.array) {",
      "Edge 17: [Source] public prop arrayValue: Array<Json> {\\n get() { => [Target] }\\n }\\n }",
      "Edge 18: [Source] match (this.array) { => [Target] case Option.Some(v) => return v",
      "Edge 19: [Source] match (this.array) { => [Target] case Option.None => return Array()",
      "Edge 20: [Source] public prop bool: Option<Bool> {\\n get() { => [Target] match (this.value.kind()) {",
      "Edge 21: [Source] public prop bool: Option<Bool> {\\n get() { => [Target] }\\n }\\n }",
      "Edge 22: [Source] match (this.value.kind()) { => [Target] case JsonKind.JsBool => return Option.Some(this.value.asBool().getValue())",
      "Edge 23: [Source] match (this.value.kind()) { => [Target] case _ => return Option.None",
      "Edge 24: [Source] public prop boolValue: Bool {\\n get() { => [Target] match (this.bool) {",
      "Edge 25: [Source] public prop boolValue: Bool {\\n get() { => [Target] }\\n }\\n }",
      "Edge 26: [Source] match (this.bool) { => [Target] case Option.Some(v) => return v",
      "Edge 27: [Source] match (this.bool) { => [Target] case Option.None => return false",
      "Edge 28: [Source] public prop int64: Option<Int64> {\\n get() { => [Target] match (this.value.kind()) {",
      "Edge 29: [Source] public prop int64: Option<Int64> {\\n get() { => [Target] }\\n }\\n }",
      "Edge 30: [Source] match (this.value.kind()) { => [Target] case JsonKind.JsInt => return Option.Some(this.value.asInt().getValue())",
      "Edge 31: [Source] match (this.value.kind()) { => [Target] case _ => return Option.None",
      "Edge 32: [Source] public prop int64Value: Int64 {\\n get() { => [Target] match (this.int64) {",
      "Edge 33: [Source] public prop int64Value: Int64 {\\n get() { => [Target] }\\n }\\n }",
      "Edge 34: [Source] match (this.int64) { => [Target] case Option.Some(v) => return v",
      "Edge 35: [Source] match (this.int64) { => [Target] case Option.None => return 0",
      "Edge 36: [Source] public prop float64: Option<Float64> {\\n get() { => [Target] match (this.value.kind()) {",
      "Edge 37: [Source] public prop float64: Option<Float64> {\\n get() { => [Target] }\\n }\\n }",
      "Edge 38: [Source] match (this.value.kind()) { => [Target] case JsonKind.JsFloat => return Option.Some(this.value.asFloat().getValue())",
      "Edge 39: [Source] match (this.value.kind()) { => [Target] case _ => return Option.None",
      "Edge 40: [Source] public prop float64Value: Float64 {\\n get() { => [Target] match (this.float64) {",
      "Edge 41: [Source] public prop float64Value: Float64 {\\n get() { => [Target] }\\n }\\n }",
      "Edge 42: [Source] match (this.float64) { => [Target] case Option.Some(v) => return v",
      "Edge 43: [Source] match (this.float64) { => [Target] case Option.None => return 0.0",
      "Edge 44: [Source] public prop string: Option<String> {\\n get() { => [Target] match (this.value.kind()) {",
      "Edge 45: [Source] public prop string: Option<String> {\\n get() { => [Target] }\\n }\\n }",
      "Edge 46: [Source] match (this.value.kind()) { => [Target] case JsonKind.JsString => return Option.Some(this.value.asString().getValue())",
      "Edge 47: [Source] match (this.value.kind()) { => [Target] case _ => return Option.None",
      "Edge 48: [Source] public prop stringValue: String {\\n get() { => [Target] match (this.string) {",
      "Edge 49: [Source] public prop stringValue: String {\\n get() { => [Target] }\\n }\\n }",
      "Edge 50: [Source] match (this.string) { => [Target] case Option.Some(v) => return v",
      "Edge 51: [Source] match (this.string) { => [Target] case Option.None => return \"\"",
      "Edge 52: [Source] public init(str!: String) {\\n var reval: JsonValue\\n try {\\n reval = JsonValue.fromStr(str) => [Target] } catch (e: Exception) {\\n reval = JsonNull()\\n }\\n this.value = reval",
      "Edge 53: [Source] } catch (e: Exception) {\\n reval = JsonNull()\\n }\\n this.value = reval => [Target] }",
      "Edge 54: [Source] public func deserialize<T>(): Option<T> where T <: Serializable<T> {\\n try {\\n return T.deserialize(this.dataModel) => [Target] } catch (_: Exception) {\\n return Option.None",
      "Edge 55: [Source] public operator func [](arg: Int): Json { => [Target] try {\\n match (this.value.kind()) {",
      "Edge 56: [Source] public operator func [](arg: Int): Json { => [Target] } catch (_: Exception) {\\n return Json(value: JsonNull())",
      "Edge 57: [Source] try {\\n match (this.value.kind()) { => [Target] case JsonKind.JsArray => Json(value: this.value.asArray()[arg])",
      "Edge 58: [Source] try {\\n match (this.value.kind()) { => [Target] case _ => return Json(value: JsonNull())",
      "Edge 59: [Source] public operator func [](arg: String): Json {\\n try {\\n match (this.value.kind()) { => [Target] case JsonKind.JsObject => Json(value: this.value.asObject()[arg])",
      "Edge 60: [Source] public operator func [](arg: String): Json {\\n try {\\n match (this.value.kind()) { => [Target] case _ => return Json(value: JsonNull())",
      "Edge 61: [Source] public operator func [](arg: String): Json {\\n try {\\n match (this.value.kind()) { => [Target] }",
      "Edge 62: [Source] } => [Target] } catch (_: Exception) {\\n return Json(value: JsonNull())",
      "Edge 63: [Source] } => [Target] }\\n }"
    ]
  }
}