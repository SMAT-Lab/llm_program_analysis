{
  "edge_analysis": {
    "static_total": 0,
    "llm_total": 10,
    "matched_edges": {
      "exact_matches": 0,
      "partial_matches": 0
    },
    "accuracy_metrics": {
      "precision": 0,
      "recall": 0,
      "f1_score": 0
    }
  },
  "structure_validation": {
    "missing_blocks": [
      "All static blocks"
    ],
    "extra_blocks": [
      "Edge 0: [Source] public init(initArr: Array<T>) {\\n size = initArr.size\\n tail = size - 1 => [Target] for (i in 0..arr.size) {\\n this.arr[i + 1000001] = initArr[i]\\n }",
      "Edge 1: [Source] for (i in 0..arr.size) {\\n this.arr[i + 1000001] = initArr[i]\\n } => [Target] }",
      "Edge 2: [Source] public init(maxSize: Int64, initArr: Array<T>) {\\n arr = Array<Any>(maxSize, item: 0)\\n size = initArr.size\\n tail += size => [Target] for (i in 0..arr.size) {\\n this.arr[i + 1000001] = initArr[i]\\n}",
      "Edge 3: [Source] for (i in 0..arr.size) {\\n this.arr[i + 1000001] = initArr[i]\\n} => [Target] }",
      "Edge 4: [Source] public func popBack() {\\n if (size == 0) { => [Target] try {\\n var exc: IndexOutOfBoundsException = IndexOutOfBoundsException(\"The queue is empty\")\\n throw (exc)\\n } catch (exc: IndexOutOfBoundsException) {\\n println(\"${exc}\");\\n }",
      "Edge 5: [Source] public func popBack() {\\n if (size == 0) { => [Target] } else {\\n this.arr[tail] = 0\\n this.tail--\\n this.size--",
      "Edge 6: [Source] public func pushFront(val: T) {\\n if (this.head == 0) { => [Target] try {\\n throw IndexOutOfBoundsException(\"There are too many elements in the front end of the deque\")\\n } catch (exc: IndexOutOfBoundsException) {\\n println(\"${exc}\")\\n }",
      "Edge 7: [Source] public func pushFront(val: T) {\\n if (this.head == 0) { => [Target] } else {\\n this.head--\\n this.arr[head] = val\\n this.size++\\n }",
      "Edge 8: [Source] public func popFront()\\n {\\n if (size == 0) { => [Target] try {\\n var exc: IndexOutOfBoundsException = IndexOutOfBoundsException(\"The queue is empty\")\\n throw (exc)\\n } catch (exc: IndexOutOfBoundsException) {\\n println(\"${exc}\");\\n }",
      "Edge 9: [Source] public func popFront()\\n {\\n if (size == 0) { => [Target] } else {\\n this.arr[head] = 0\\n this.head++\\n this.size--\\n }"
    ]
  }
}