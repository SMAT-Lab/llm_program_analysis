{
    "type": "module",
    "start_token": 0,
    "end_token": 9,
    "label": "package simple_math_interpreter\n\nimport simple_math_interpreter.ext.*",
    "children": [
        {
            "type": "packageHeader",
            "start_token": 0,
            "end_token": 1,
            "label": "package simple_math_interpreter",
            "children": [
                {
                    "type": "PACKAGE",
                    "start_token": 0,
                    "end_token": 0,
                    "label": "package",
                    "children": []
                },
                {
                    "type": "packageNameIdentifier",
                    "start_token": 1,
                    "end_token": 1,
                    "label": "simple_math_interpreter",
                    "children": []
                }
            ]
        },
        {
            "type": "importAll",
            "start_token": 4,
            "end_token": 9,
            "label": "import simple_math_interpreter.ext.*",
            "children": [
                {
                    "type": "IMPORT",
                    "start_token": 4,
                    "end_token": 4,
                    "label": "import",
                    "children": []
                },
                {
                    "type": "packageNameIdentifier",
                    "start_token": 5,
                    "end_token": 9,
                    "label": "simple_math_interpreter.ext.*",
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 5,
                            "end_token": 5,
                            "label": "simple_math_interpreter",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "start_token": 6,
                            "end_token": 6,
                            "label": ".",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "start_token": 7,
                            "end_token": 7,
                            "label": "ext",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "start_token": 8,
                            "end_token": 8,
                            "label": ".",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "class_placeholder",
            "name": "Combinator",
            "start_line": 5,
            "end_line": 7,
            "start_token": 12,
            "end_token": 53,
            "label": "public class Combinator<I, O> {\n    public Combinator(public let parseFunc: (List<I>) -> Option<(O, List<I>)>) {}\n}\n",
            "children": [
                {
                    "type": "module",
                    "start_token": 12,
                    "end_token": 52,
                    "label": "public class Combinator<I, O> {\n    public Combinator(public let parseFunc: (List<I>) -> Option<(O, List<I>)>) {}\n}",
                    "children": [
                        {
                            "type": "modifiers",
                            "start_token": 12,
                            "end_token": 12,
                            "label": "public",
                            "children": []
                        },
                        {
                            "type": "classDefinition",
                            "start_token": 13,
                            "end_token": 52,
                            "label": "class Combinator<I, O> {\n    public Combinator(public let parseFunc: (List<I>) -> Option<(O, List<I>)>) {}\n}",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 14,
                                    "end_token": 14,
                                    "label": "Combinator",
                                    "children": []
                                },
                                {
                                    "type": "genericsType",
                                    "start_token": 15,
                                    "end_token": 19,
                                    "label": "<I, O>",
                                    "children": [
                                        {
                                            "type": "typeIdentifier",
                                            "start_token": 16,
                                            "end_token": 16,
                                            "label": "I",
                                            "children": []
                                        },
                                        {
                                            "type": "typeIdentifier",
                                            "start_token": 18,
                                            "end_token": 18,
                                            "label": "O",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "start_token": 20,
                                    "end_token": 52,
                                    "label": "{\n    public Combinator(public let parseFunc: (List<I>) -> Option<(O, List<I>)>) {}\n}",
                                    "children": [
                                        {
                                            "type": "modifiers",
                                            "start_token": 22,
                                            "end_token": 22,
                                            "label": "public",
                                            "children": []
                                        },
                                        {
                                            "type": "functionDefinition",
                                            "start_token": 23,
                                            "end_token": 50,
                                            "label": "Combinator(public let parseFunc: (List<I>) -> Option<(O, List<I>)>) {}",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 23,
                                                    "end_token": 23,
                                                    "label": "Combinator",
                                                    "children": []
                                                },
                                                {
                                                    "type": "functionParameters",
                                                    "start_token": 24,
                                                    "end_token": 48,
                                                    "label": "(public let parseFunc: (List<I>) -> Option<(O, List<I>)>)",
                                                    "children": [
                                                        {
                                                            "type": "modifiers",
                                                            "start_token": 25,
                                                            "end_token": 25,
                                                            "label": "public",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "parameter",
                                                            "start_token": 26,
                                                            "end_token": 47,
                                                            "label": "let parseFunc: (List<I>) -> Option<(O, List<I>)>",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 27,
                                                                    "end_token": 27,
                                                                    "label": "parseFunc",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "arrowType",
                                                                    "start_token": 28,
                                                                    "end_token": 47,
                                                                    "label": ": (List<I>) -> Option<(O, List<I>)>",
                                                                    "children": [
                                                                        {
                                                                            "type": "parameterList",
                                                                            "start_token": 29,
                                                                            "end_token": 34,
                                                                            "label": "(List<I>)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "typeIdentifier",
                                                                                    "start_token": 30,
                                                                                    "end_token": 33,
                                                                                    "label": "List<I>",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "typeIdentifier",
                                                                                            "start_token": 32,
                                                                                            "end_token": 32,
                                                                                            "label": "I",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "typeExpression",
                                                                            "start_token": 36,
                                                                            "end_token": 47,
                                                                            "label": "> Option<(O, List<I>)>",
                                                                            "children": [
                                                                                {
                                                                                    "type": "typeIdentifier",
                                                                                    "start_token": 37,
                                                                                    "end_token": 46,
                                                                                    "label": "Option<(O, List<I>)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "typeIdentifier",
                                                                                            "start_token": 40,
                                                                                            "end_token": 40,
                                                                                            "label": "O",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "typeIdentifier",
                                                                                            "start_token": 42,
                                                                                            "end_token": 45,
                                                                                            "label": "List<I>",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "typeIdentifier",
                                                                                                    "start_token": 44,
                                                                                                    "end_token": 44,
                                                                                                    "label": "I",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "start_token": 49,
                                                    "end_token": 50,
                                                    "label": "{}",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "class_placeholder",
            "name": "Combinator",
            "start_line": 9,
            "end_line": 73,
            "start_token": 55,
            "end_token": 545,
            "label": "extend<I, O> Combinator<I, O> {\n    public static func make(predicate: (I) -> Bool): Combinator<I, I> {\n        Combinator {\n            input => match (input) {\n                case Cons(hd, tl) => if (predicate(hd)) {\n                    Some((hd, tl))\n                } else {\n                    None\n                }\n                case Nil => None\n            }\n        }\n    }\n\n    public func map<O2>(f: (O) -> O2): Combinator<I, O2> {\n        Combinator {\n            input => match (this.parseFunc(input)) {\n                case Some((value, rest)) => Some((f(value), rest))\n                case None => None\n            }\n        }\n    }\n\n    public func and<O2>(c2: Combinator<I, O2>): Combinator<I, (O, O2)> {\n        Combinator {\n            input => match (this.parseFunc(input)) {\n                case Some((value1, rest1)) => match (c2.parseFunc(rest1)) {\n                    case Some((value2, rest2)) => Some(((value1, value2), rest2))\n                    case None => None\n                }\n                case None => None\n            }\n        }\n    }\n\n    public func or(c2: Combinator<I, O>): Combinator<I, O> {\n        Combinator {\n            input => match (this.parseFunc(input)) {\n                case Some(a) => Some(a)\n                case None => c2.parseFunc(input)\n            }\n        }\n    }\n\n    public func many(min: Int64): Combinator<I, List<O>> {\n        Combinator {\n            input =>\n            var vlist = List<O>.empty()\n            var rest = input\n            while (true) {\n                match (this.parseFunc(rest)) {\n                    case None => break\n                    case Some((value, _rest)) =>\n                        rest = _rest\n                        vlist = vlist.add(value)\n                }\n            }\n            if (vlist.lenth() < min) {\n                None\n            } else {\n                Some((vlist.reverse(), rest))\n            }\n        }\n    }\n}",
            "children": [
                {
                    "type": "module",
                    "start_token": 55,
                    "end_token": 545,
                    "label": "extend<I, O> Combinator<I, O> {\n    public static func make(predicate: (I) -> Bool): Combinator<I, I> {\n        Combinator {\n            input => match (input) {\n                case Cons(hd, tl) => if (predicate(hd)) {\n                    Some((hd, tl))\n                } else {\n                    None\n                }\n                case Nil => None\n            }\n        }\n    }\n\n    public func map<O2>(f: (O) -> O2): Combinator<I, O2> {\n        Combinator {\n            input => match (this.parseFunc(input)) {\n                case Some((value, rest)) => Some((f(value), rest))\n                case None => None\n            }\n        }\n    }\n\n    public func and<O2>(c2: Combinator<I, O2>): Combinator<I, (O, O2)> {\n        Combinator {\n            input => match (this.parseFunc(input)) {\n                case Some((value1, rest1)) => match (c2.parseFunc(rest1)) {\n                    case Some((value2, rest2)) => Some(((value1, value2), rest2))\n                    case None => None\n                }\n                case None => None\n            }\n        }\n    }\n\n    public func or(c2: Combinator<I, O>): Combinator<I, O> {\n        Combinator {\n            input => match (this.parseFunc(input)) {\n                case Some(a) => Some(a)\n                case None => c2.parseFunc(input)\n            }\n        }\n    }\n\n    public func many(min: Int64): Combinator<I, List<O>> {\n        Combinator {\n            input =>\n            var vlist = List<O>.empty()\n            var rest = input\n            while (true) {\n                match (this.parseFunc(rest)) {\n                    case None => break\n                    case Some((value, _rest)) =>\n                        rest = _rest\n                        vlist = vlist.add(value)\n                }\n            }\n            if (vlist.lenth() < min) {\n                None\n            } else {\n                Some((vlist.reverse(), rest))\n            }\n        }\n    }\n}",
                    "children": [
                        {
                            "type": "extendDefinition",
                            "start_token": 55,
                            "end_token": 545,
                            "label": "extend<I, O> Combinator<I, O> {\n    public static func make(predicate: (I) -> Bool): Combinator<I, I> {\n        Combinator {\n            input => match (input) {\n                case Cons(hd, tl) => if (predicate(hd)) {\n                    Some((hd, tl))\n                } else {\n                    None\n                }\n                case Nil => None\n            }\n        }\n    }\n\n    public func map<O2>(f: (O) -> O2): Combinator<I, O2> {\n        Combinator {\n            input => match (this.parseFunc(input)) {\n                case Some((value, rest)) => Some((f(value), rest))\n                case None => None\n            }\n        }\n    }\n\n    public func and<O2>(c2: Combinator<I, O2>): Combinator<I, (O, O2)> {\n        Combinator {\n            input => match (this.parseFunc(input)) {\n                case Some((value1, rest1)) => match (c2.parseFunc(rest1)) {\n                    case Some((value2, rest2)) => Some(((value1, value2), rest2))\n                    case None => None\n                }\n                case None => None\n            }\n        }\n    }\n\n    public func or(c2: Combinator<I, O>): Combinator<I, O> {\n        Combinator {\n            input => match (this.parseFunc(input)) {\n                case Some(a) => Some(a)\n                case None => c2.parseFunc(input)\n            }\n        }\n    }\n\n    public func many(min: Int64): Combinator<I, List<O>> {\n        Combinator {\n            input =>\n            var vlist = List<O>.empty()\n            var rest = input\n            while (true) {\n                match (this.parseFunc(rest)) {\n                    case None => break\n                    case Some((value, _rest)) =>\n                        rest = _rest\n                        vlist = vlist.add(value)\n                }\n            }\n            if (vlist.lenth() < min) {\n                None\n            } else {\n                Some((vlist.reverse(), rest))\n            }\n        }\n    }\n}",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 55,
                                    "end_token": 55,
                                    "label": "extend",
                                    "children": []
                                },
                                {
                                    "type": "genericsType",
                                    "start_token": 56,
                                    "end_token": 60,
                                    "label": "<I, O>",
                                    "children": [
                                        {
                                            "type": "typeIdentifier",
                                            "start_token": 57,
                                            "end_token": 57,
                                            "label": "I",
                                            "children": []
                                        },
                                        {
                                            "type": "typeIdentifier",
                                            "start_token": 59,
                                            "end_token": 59,
                                            "label": "O",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "userType",
                                    "start_token": 61,
                                    "end_token": 66,
                                    "label": "Combinator<I, O>",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 61,
                                            "end_token": 61,
                                            "label": "Combinator",
                                            "children": []
                                        },
                                        {
                                            "type": "genericsType",
                                            "start_token": 62,
                                            "end_token": 66,
                                            "label": "<I, O>",
                                            "children": [
                                                {
                                                    "type": "typeIdentifier",
                                                    "start_token": 63,
                                                    "end_token": 63,
                                                    "label": "I",
                                                    "children": []
                                                },
                                                {
                                                    "type": "typeIdentifier",
                                                    "start_token": 65,
                                                    "end_token": 65,
                                                    "label": "O",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "extendBody",
                                    "start_token": 67,
                                    "end_token": 545,
                                    "label": "{\n    public static func make(predicate: (I) -> Bool): Combinator<I, I> {\n        Combinator {\n            input => match (input) {\n                case Cons(hd, tl) => if (predicate(hd)) {\n                    Some((hd, tl))\n                } else {\n                    None\n                }\n                case Nil => None\n            }\n        }\n    }\n\n    public func map<O2>(f: (O) -> O2): Combinator<I, O2> {\n        Combinator {\n            input => match (this.parseFunc(input)) {\n                case Some((value, rest)) => Some((f(value), rest))\n                case None => None\n            }\n        }\n    }\n\n    public func and<O2>(c2: Combinator<I, O2>): Combinator<I, (O, O2)> {\n        Combinator {\n            input => match (this.parseFunc(input)) {\n                case Some((value1, rest1)) => match (c2.parseFunc(rest1)) {\n                    case Some((value2, rest2)) => Some(((value1, value2), rest2))\n                    case None => None\n                }\n                case None => None\n            }\n        }\n    }\n\n    public func or(c2: Combinator<I, O>): Combinator<I, O> {\n        Combinator {\n            input => match (this.parseFunc(input)) {\n                case Some(a) => Some(a)\n                case None => c2.parseFunc(input)\n            }\n        }\n    }\n\n    public func many(min: Int64): Combinator<I, List<O>> {\n        Combinator {\n            input =>\n            var vlist = List<O>.empty()\n            var rest = input\n            while (true) {\n                match (this.parseFunc(rest)) {\n                    case None => break\n                    case Some((value, _rest)) =>\n                        rest = _rest\n                        vlist = vlist.add(value)\n                }\n            }\n            if (vlist.lenth() < min) {\n                None\n            } else {\n                Some((vlist.reverse(), rest))\n            }\n        }\n    }\n}",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "function_placeholder",
                            "name": "make",
                            "start_line": 10,
                            "end_line": 21,
                            "start_token": 69,
                            "end_token": 150,
                            "label": "public static func make(predicate: (I) -> Bool): Combinator<I, I> {\n        Combinator {\n            input => match (input) {\n                case Cons(hd, tl) => if (predicate(hd)) {\n                    Some((hd, tl))\n                } else {\n                    None\n                }\n                case Nil => None\n            }\n        }\n    }\n",
                            "children": [
                                {
                                    "type": "module",
                                    "start_token": 69,
                                    "end_token": 149,
                                    "label": "public static func make(predicate: (I) -> Bool): Combinator<I, I> {\n        Combinator {\n            input => match (input) {\n                case Cons(hd, tl) => if (predicate(hd)) {\n                    Some((hd, tl))\n                } else {\n                    None\n                }\n                case Nil => None\n            }\n        }\n    }",
                                    "children": [
                                        {
                                            "type": "modifiers",
                                            "start_token": 69,
                                            "end_token": 70,
                                            "label": "public static",
                                            "children": [
                                                {
                                                    "type": "PUBLIC",
                                                    "start_token": 69,
                                                    "end_token": 69,
                                                    "label": "public",
                                                    "children": []
                                                },
                                                {
                                                    "type": "STATIC",
                                                    "start_token": 70,
                                                    "end_token": 70,
                                                    "label": "static",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "functionDefinition",
                                            "start_token": 71,
                                            "end_token": 149,
                                            "label": "func make(predicate: (I) -> Bool): Combinator<I, I> {\n        Combinator {\n            input => match (input) {\n                case Cons(hd, tl) => if (predicate(hd)) {\n                    Some((hd, tl))\n                } else {\n                    None\n                }\n                case Nil => None\n            }\n        }\n    }",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 71,
                                                    "end_token": 72,
                                                    "label": "func make",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 72,
                                                            "end_token": 72,
                                                            "label": "make",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "parameterList",
                                                    "start_token": 73,
                                                    "end_token": 82,
                                                    "label": "(predicate: (I) -> Bool)",
                                                    "children": [
                                                        {
                                                            "type": "parameter",
                                                            "start_token": 74,
                                                            "end_token": 81,
                                                            "label": "predicate: (I) -> Bool",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 74,
                                                                    "end_token": 74,
                                                                    "label": "predicate",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "typeExpression",
                                                                    "start_token": 75,
                                                                    "end_token": 81,
                                                                    "label": ": (I) -> Bool",
                                                                    "children": [
                                                                        {
                                                                            "type": "parenthesizedExpression",
                                                                            "start_token": 76,
                                                                            "end_token": 78,
                                                                            "label": "(I)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "typeIdentifier",
                                                                                    "start_token": 77,
                                                                                    "end_token": 77,
                                                                                    "label": "I",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "arrowType",
                                                                            "start_token": 79,
                                                                            "end_token": 80,
                                                                            "label": "->",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "typeIdentifier",
                                                                            "start_token": 81,
                                                                            "end_token": 81,
                                                                            "label": "Bool",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "typeExpression",
                                                    "start_token": 83,
                                                    "end_token": 89,
                                                    "label": ": Combinator<I, I>",
                                                    "children": [
                                                        {
                                                            "type": "typeIdentifier",
                                                            "start_token": 84,
                                                            "end_token": 84,
                                                            "label": "Combinator",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "typeParameters",
                                                            "start_token": 85,
                                                            "end_token": 89,
                                                            "label": "<I, I>",
                                                            "children": [
                                                                {
                                                                    "type": "typeIdentifier",
                                                                    "start_token": 86,
                                                                    "end_token": 86,
                                                                    "label": "I",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "typeIdentifier",
                                                                    "start_token": 88,
                                                                    "end_token": 88,
                                                                    "label": "I",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "start_token": 90,
                                                    "end_token": 149,
                                                    "label": "{\n        Combinator {\n            input => match (input) {\n                case Cons(hd, tl) => if (predicate(hd)) {\n                    Some((hd, tl))\n                } else {\n                    None\n                }\n                case Nil => None\n            }\n        }\n    }",
                                                    "children": [
                                                        {
                                                            "type": "matchExpression",
                                                            "start_token": 95,
                                                            "end_token": 145,
                                                            "label": "input => match (input) {\n                case Cons(hd, tl) => if (predicate(hd)) {\n                    Some((hd, tl))\n                } else {\n                    None\n                }\n                case Nil => None\n            }",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 95,
                                                                    "end_token": 95,
                                                                    "label": "input",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "matchCase",
                                                                    "start_token": 97,
                                                                    "end_token": 145,
                                                                    "label": "> match (input) {\n                case Cons(hd, tl) => if (predicate(hd)) {\n                    Some((hd, tl))\n                } else {\n                    None\n                }\n                case Nil => None\n            }",
                                                                    "children": [
                                                                        {
                                                                            "type": "caseBody",
                                                                            "start_token": 104,
                                                                            "end_token": 137,
                                                                            "label": "case Cons(hd, tl) => if (predicate(hd)) {\n                    Some((hd, tl))\n                } else {\n                    None\n                }",
                                                                            "children": [
                                                                                {
                                                                                    "type": "patternGuard",
                                                                                    "start_token": 104,
                                                                                    "end_token": 110,
                                                                                    "label": "case Cons(hd, tl)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 105,
                                                                                            "end_token": 105,
                                                                                            "label": "Cons",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "tuplePattern",
                                                                                            "start_token": 106,
                                                                                            "end_token": 110,
                                                                                            "label": "(hd, tl)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "start_token": 107,
                                                                                                    "end_token": 107,
                                                                                                    "label": "hd",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "start_token": 109,
                                                                                                    "end_token": 109,
                                                                                                    "label": "tl",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "ifExpression",
                                                                                    "start_token": 111,
                                                                                    "end_token": 137,
                                                                                    "label": "=> if (predicate(hd)) {\n                    Some((hd, tl))\n                } else {\n                    None\n                }",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "predicate",
                                                                                            "start_token": 113,
                                                                                            "end_token": 119,
                                                                                            "label": "if (predicate(hd))",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "start_token": 115,
                                                                                                    "end_token": 115,
                                                                                                    "label": "predicate",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "parenthesizedExpression",
                                                                                                    "start_token": 116,
                                                                                                    "end_token": 118,
                                                                                                    "label": "(hd)",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "start_token": 117,
                                                                                                            "end_token": 117,
                                                                                                            "label": "hd",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "block",
                                                                                            "start_token": 120,
                                                                                            "end_token": 131,
                                                                                            "label": "{\n                    Some((hd, tl))\n                }",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "returnExpression",
                                                                                                    "start_token": 122,
                                                                                                    "end_token": 129,
                                                                                                    "label": "Some((hd, tl))",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "tupleLiteral",
                                                                                                            "start_token": 124,
                                                                                                            "end_token": 128,
                                                                                                            "label": "(hd, tl)",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "start_token": 125,
                                                                                                                    "end_token": 125,
                                                                                                                    "label": "hd",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "start_token": 127,
                                                                                                                    "end_token": 127,
                                                                                                                    "label": "tl",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "else",
                                                                                            "start_token": 132,
                                                                                            "end_token": 137,
                                                                                            "label": "else {\n                    None\n                }",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "block",
                                                                                                    "start_token": 133,
                                                                                                    "end_token": 137,
                                                                                                    "label": "{\n                    None\n                }",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "returnExpression",
                                                                                                            "start_token": 135,
                                                                                                            "end_token": 135,
                                                                                                            "label": "None",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "start_token": 135,
                                                                                                                    "end_token": 135,
                                                                                                                    "label": "None",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "matchCase",
                                                                            "start_token": 139,
                                                                            "end_token": 143,
                                                                            "label": "case Nil => None",
                                                                            "children": [
                                                                                {
                                                                                    "type": "constantPattern",
                                                                                    "start_token": 139,
                                                                                    "end_token": 140,
                                                                                    "label": "case Nil",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 140,
                                                                                            "end_token": 140,
                                                                                            "label": "Nil",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "returnExpression",
                                                                                    "start_token": 141,
                                                                                    "end_token": 143,
                                                                                    "label": "=> None",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 143,
                                                                                            "end_token": 143,
                                                                                            "label": "None",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_placeholder",
                            "name": "map",
                            "start_line": 23,
                            "end_line": 30,
                            "start_token": 152,
                            "end_token": 228,
                            "label": "public func map<O2>(f: (O) -> O2): Combinator<I, O2> {\n        Combinator {\n            input => match (this.parseFunc(input)) {\n                case Some((value, rest)) => Some((f(value), rest))\n                case None => None\n            }\n        }\n    }\n",
                            "children": [
                                {
                                    "type": "functionDefinition",
                                    "start_token": 152,
                                    "end_token": 227,
                                    "label": "public func map<O2>(f: (O) -> O2): Combinator<I, O2> {\n        Combinator {\n            input => match (this.parseFunc(input)) {\n                case Some((value, rest)) => Some((f(value), rest))\n                case None => None\n            }\n        }\n    }",
                                    "children": [
                                        {
                                            "type": "modifiers",
                                            "start_token": 152,
                                            "end_token": 152,
                                            "label": "public",
                                            "children": []
                                        },
                                        {
                                            "type": "FUNC",
                                            "start_token": 153,
                                            "end_token": 153,
                                            "label": "func",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "start_token": 154,
                                            "end_token": 154,
                                            "label": "map",
                                            "children": []
                                        },
                                        {
                                            "type": "genericsType",
                                            "start_token": 155,
                                            "end_token": 157,
                                            "label": "<O2>",
                                            "children": [
                                                {
                                                    "type": "typeIdentifier",
                                                    "start_token": 156,
                                                    "end_token": 156,
                                                    "label": "O2",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "functionParameters",
                                            "start_token": 158,
                                            "end_token": 167,
                                            "label": "(f: (O) -> O2)",
                                            "children": [
                                                {
                                                    "type": "parameter",
                                                    "start_token": 159,
                                                    "end_token": 166,
                                                    "label": "f: (O) -> O2",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 159,
                                                            "end_token": 159,
                                                            "label": "f",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "typeExpression",
                                                            "start_token": 161,
                                                            "end_token": 163,
                                                            "label": "(O)",
                                                            "children": [
                                                                {
                                                                    "type": "typeIdentifier",
                                                                    "start_token": 162,
                                                                    "end_token": 162,
                                                                    "label": "O",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "arrowType",
                                                            "start_token": 164,
                                                            "end_token": 165,
                                                            "label": "->",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "typeIdentifier",
                                                            "start_token": 166,
                                                            "end_token": 166,
                                                            "label": "O2",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "typeExpression",
                                            "start_token": 168,
                                            "end_token": 174,
                                            "label": ": Combinator<I, O2>",
                                            "children": [
                                                {
                                                    "type": "typeIdentifier",
                                                    "start_token": 169,
                                                    "end_token": 169,
                                                    "label": "Combinator",
                                                    "children": []
                                                },
                                                {
                                                    "type": "genericsType",
                                                    "start_token": 170,
                                                    "end_token": 174,
                                                    "label": "<I, O2>",
                                                    "children": [
                                                        {
                                                            "type": "typeIdentifier",
                                                            "start_token": 171,
                                                            "end_token": 171,
                                                            "label": "I",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "typeIdentifier",
                                                            "start_token": 173,
                                                            "end_token": 173,
                                                            "label": "O2",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "start_token": 175,
                                            "end_token": 225,
                                            "label": "{\n        Combinator {\n            input => match (this.parseFunc(input)) {\n                case Some((value, rest)) => Some((f(value), rest))\n                case None => None\n            }\n        }",
                                            "children": [
                                                {
                                                    "type": "matchExpression",
                                                    "start_token": 183,
                                                    "end_token": 223,
                                                    "label": "match (this.parseFunc(input)) {\n                case Some((value, rest)) => Some((f(value), rest))\n                case None => None\n            }",
                                                    "children": [
                                                        {
                                                            "type": "callExpression",
                                                            "start_token": 184,
                                                            "end_token": 191,
                                                            "label": "(this.parseFunc(input))",
                                                            "children": [
                                                                {
                                                                    "type": "fieldExpression",
                                                                    "start_token": 185,
                                                                    "end_token": 187,
                                                                    "label": "this.parseFunc",
                                                                    "children": [
                                                                        {
                                                                            "type": "THIS",
                                                                            "start_token": 185,
                                                                            "end_token": 185,
                                                                            "label": "this",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 187,
                                                                            "end_token": 187,
                                                                            "label": "parseFunc",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argumentList",
                                                                    "start_token": 188,
                                                                    "end_token": 190,
                                                                    "label": "(input)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 189,
                                                                            "end_token": 189,
                                                                            "label": "input",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "caseBody",
                                                            "start_token": 192,
                                                            "end_token": 215,
                                                            "label": "{\n                case Some((value, rest)) => Some((f(value), rest))",
                                                            "children": [
                                                                {
                                                                    "type": "matchCase",
                                                                    "start_token": 194,
                                                                    "end_token": 203,
                                                                    "label": "case Some((value, rest)) =",
                                                                    "children": [
                                                                        {
                                                                            "type": "enumPattern",
                                                                            "start_token": 195,
                                                                            "end_token": 202,
                                                                            "label": "Some((value, rest))",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 195,
                                                                                    "end_token": 195,
                                                                                    "label": "Some",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "tuplePattern",
                                                                                    "start_token": 196,
                                                                                    "end_token": 202,
                                                                                    "label": "((value, rest))",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 198,
                                                                                            "end_token": 198,
                                                                                            "label": "value",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 200,
                                                                                            "end_token": 200,
                                                                                            "label": "rest",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "arrowType",
                                                                            "start_token": 203,
                                                                            "end_token": 203,
                                                                            "label": "=",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "returnExpression",
                                                                            "start_token": 205,
                                                                            "end_token": 215,
                                                                            "label": "Some((f(value), rest))",
                                                                            "children": [
                                                                                {
                                                                                    "type": "enumPattern",
                                                                                    "start_token": 205,
                                                                                    "end_token": 215,
                                                                                    "label": "Some((f(value), rest))",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 205,
                                                                                            "end_token": 205,
                                                                                            "label": "Some",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "tuplePattern",
                                                                                            "start_token": 206,
                                                                                            "end_token": 214,
                                                                                            "label": "((f(value), rest)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "callExpression",
                                                                                                    "start_token": 208,
                                                                                                    "end_token": 211,
                                                                                                    "label": "f(value)",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "start_token": 208,
                                                                                                            "end_token": 208,
                                                                                                            "label": "f",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "argumentList",
                                                                                                            "start_token": 209,
                                                                                                            "end_token": 210,
                                                                                                            "label": "(value",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "start_token": 210,
                                                                                                                    "end_token": 210,
                                                                                                                    "label": "value",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "start_token": 213,
                                                                                                    "end_token": 213,
                                                                                                    "label": "rest",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "matchCase",
                                                                    "start_token": 217,
                                                                    "end_token": 221,
                                                                    "label": "case None => None",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 218,
                                                                            "end_token": 218,
                                                                            "label": "None",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "arrowType",
                                                                            "start_token": 219,
                                                                            "end_token": 219,
                                                                            "label": "=",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 221,
                                                                            "end_token": 221,
                                                                            "label": "None",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_placeholder",
                            "name": "and",
                            "start_line": 32,
                            "end_line": 42,
                            "start_token": 230,
                            "end_token": 341,
                            "label": "public func and<O2>(c2: Combinator<I, O2>): Combinator<I, (O, O2)> {\n        Combinator {\n            input => match (this.parseFunc(input)) {\n                case Some((value1, rest1)) => match (c2.parseFunc(rest1)) {\n                    case Some((value2, rest2)) => Some(((value1, value2), rest2))\n                    case None => None\n                }\n                case None => None\n            }\n        }\n    }\n",
                            "children": [
                                {
                                    "type": "functionDefinition",
                                    "start_token": 230,
                                    "end_token": 340,
                                    "label": "public func and<O2>(c2: Combinator<I, O2>): Combinator<I, (O, O2)> {\n        Combinator {\n            input => match (this.parseFunc(input)) {\n                case Some((value1, rest1)) => match (c2.parseFunc(rest1)) {\n                    case Some((value2, rest2)) => Some(((value1, value2), rest2))\n                    case None => None\n                }\n                case None => None\n            }\n        }\n    }",
                                    "children": [
                                        {
                                            "type": "modifiers",
                                            "start_token": 230,
                                            "end_token": 230,
                                            "label": "public",
                                            "children": []
                                        },
                                        {
                                            "type": "FUNC",
                                            "start_token": 231,
                                            "end_token": 231,
                                            "label": "func",
                                            "children": []
                                        },
                                        {
                                            "type": "genericsType",
                                            "start_token": 233,
                                            "end_token": 235,
                                            "label": "<O2>",
                                            "children": [
                                                {
                                                    "type": "typeIdentifier",
                                                    "start_token": 234,
                                                    "end_token": 234,
                                                    "label": "O2",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "functionParameters",
                                            "start_token": 236,
                                            "end_token": 245,
                                            "label": "(c2: Combinator<I, O2>)",
                                            "children": [
                                                {
                                                    "type": "parameter",
                                                    "start_token": 237,
                                                    "end_token": 238,
                                                    "label": "c2:",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 237,
                                                            "end_token": 237,
                                                            "label": "c2",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "typeExpression",
                                                            "start_token": 239,
                                                            "end_token": 244,
                                                            "label": "Combinator<I, O2>",
                                                            "children": [
                                                                {
                                                                    "type": "typeIdentifier",
                                                                    "start_token": 239,
                                                                    "end_token": 239,
                                                                    "label": "Combinator",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "typeArguments",
                                                                    "start_token": 240,
                                                                    "end_token": 244,
                                                                    "label": "<I, O2>",
                                                                    "children": [
                                                                        {
                                                                            "type": "typeIdentifier",
                                                                            "start_token": 241,
                                                                            "end_token": 241,
                                                                            "label": "I",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "typeIdentifier",
                                                                            "start_token": 243,
                                                                            "end_token": 243,
                                                                            "label": "O2",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "returnExpression",
                                            "start_token": 246,
                                            "end_token": 256,
                                            "label": ": Combinator<I, (O, O2)>",
                                            "children": [
                                                {
                                                    "type": "typeExpression",
                                                    "start_token": 247,
                                                    "end_token": 256,
                                                    "label": "Combinator<I, (O, O2)>",
                                                    "children": [
                                                        {
                                                            "type": "typeIdentifier",
                                                            "start_token": 247,
                                                            "end_token": 247,
                                                            "label": "Combinator",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "typeArguments",
                                                            "start_token": 248,
                                                            "end_token": 256,
                                                            "label": "<I, (O, O2)>",
                                                            "children": [
                                                                {
                                                                    "type": "typeIdentifier",
                                                                    "start_token": 249,
                                                                    "end_token": 249,
                                                                    "label": "I",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "tupleType",
                                                                    "start_token": 251,
                                                                    "end_token": 255,
                                                                    "label": "(O, O2)",
                                                                    "children": [
                                                                        {
                                                                            "type": "typeIdentifier",
                                                                            "start_token": 252,
                                                                            "end_token": 252,
                                                                            "label": "O",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "typeIdentifier",
                                                                            "start_token": 254,
                                                                            "end_token": 254,
                                                                            "label": "O2",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "start_token": 257,
                                            "end_token": 340,
                                            "label": "{\n        Combinator {\n            input => match (this.parseFunc(input)) {\n                case Some((value1, rest1)) => match (c2.parseFunc(rest1)) {\n                    case Some((value2, rest2)) => Some(((value1, value2), rest2))\n                    case None => None\n                }\n                case None => None\n            }\n        }\n    }",
                                            "children": [
                                                {
                                                    "type": "Combinator",
                                                    "start_token": 259,
                                                    "end_token": 340,
                                                    "label": "Combinator {\n            input => match (this.parseFunc(input)) {\n                case Some((value1, rest1)) => match (c2.parseFunc(rest1)) {\n                    case Some((value2, rest2)) => Some(((value1, value2), rest2))\n                    case None => None\n                }\n                case None => None\n            }\n        }\n    }",
                                                    "children": [
                                                        {
                                                            "type": "block",
                                                            "start_token": 260,
                                                            "end_token": 338,
                                                            "label": "{\n            input => match (this.parseFunc(input)) {\n                case Some((value1, rest1)) => match (c2.parseFunc(rest1)) {\n                    case Some((value2, rest2)) => Some(((value1, value2), rest2))\n                    case None => None\n                }\n                case None => None\n            }\n        }",
                                                            "children": [
                                                                {
                                                                    "type": "assignmentExpression",
                                                                    "start_token": 262,
                                                                    "end_token": 264,
                                                                    "label": "input =>",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 262,
                                                                            "end_token": 262,
                                                                            "label": "input",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "matchExpression",
                                                                    "start_token": 265,
                                                                    "end_token": 336,
                                                                    "label": "match (this.parseFunc(input)) {\n                case Some((value1, rest1)) => match (c2.parseFunc(rest1)) {\n                    case Some((value2, rest2)) => Some(((value1, value2), rest2))\n                    case None => None\n                }\n                case None => None\n            }",
                                                                    "children": [
                                                                        {
                                                                            "type": "callExpression",
                                                                            "start_token": 266,
                                                                            "end_token": 273,
                                                                            "label": "(this.parseFunc(input))",
                                                                            "children": [
                                                                                {
                                                                                    "type": "fieldExpression",
                                                                                    "start_token": 267,
                                                                                    "end_token": 269,
                                                                                    "label": "this.parseFunc",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "THIS",
                                                                                            "start_token": 267,
                                                                                            "end_token": 267,
                                                                                            "label": "this",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 269,
                                                                                            "end_token": 269,
                                                                                            "label": "parseFunc",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argumentList",
                                                                                    "start_token": 270,
                                                                                    "end_token": 272,
                                                                                    "label": "(input)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 271,
                                                                                            "end_token": 271,
                                                                                            "label": "input",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "block",
                                                                            "start_token": 274,
                                                                            "end_token": 336,
                                                                            "label": "{\n                case Some((value1, rest1)) => match (c2.parseFunc(rest1)) {\n                    case Some((value2, rest2)) => Some(((value1, value2), rest2))\n                    case None => None\n                }\n                case None => None\n            }",
                                                                            "children": [
                                                                                {
                                                                                    "type": "matchCase",
                                                                                    "start_token": 276,
                                                                                    "end_token": 328,
                                                                                    "label": "case Some((value1, rest1)) => match (c2.parseFunc(rest1)) {\n                    case Some((value2, rest2)) => Some(((value1, value2), rest2))\n                    case None => None\n                }",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "constantPattern",
                                                                                            "start_token": 276,
                                                                                            "end_token": 284,
                                                                                            "label": "case Some((value1, rest1))",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "matchExpression",
                                                                                                    "start_token": 285,
                                                                                                    "end_token": 328,
                                                                                                    "label": "=> match (c2.parseFunc(rest1)) {\n                    case Some((value2, rest2)) => Some(((value1, value2), rest2))\n                    case None => None\n                }",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "callExpression",
                                                                                                            "start_token": 288,
                                                                                                            "end_token": 295,
                                                                                                            "label": "(c2.parseFunc(rest1))",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "fieldExpression",
                                                                                                                    "start_token": 289,
                                                                                                                    "end_token": 291,
                                                                                                                    "label": "c2.parseFunc",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "start_token": 289,
                                                                                                                            "end_token": 289,
                                                                                                                            "label": "c2",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "start_token": 291,
                                                                                                                            "end_token": 291,
                                                                                                                            "label": "parseFunc",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "argumentList",
                                                                                                                    "start_token": 292,
                                                                                                                    "end_token": 294,
                                                                                                                    "label": "(rest1)",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "start_token": 293,
                                                                                                                            "end_token": 293,
                                                                                                                            "label": "rest1",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "block",
                                                                                                            "start_token": 296,
                                                                                                            "end_token": 328,
                                                                                                            "label": "{\n                    case Some((value2, rest2)) => Some(((value1, value2), rest2))\n                    case None => None\n                }",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "matchCase",
                                                                                                                    "start_token": 298,
                                                                                                                    "end_token": 320,
                                                                                                                    "label": "case Some((value2, rest2)) => Some(((value1, value2), rest2))",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "constantPattern",
                                                                                                                            "start_token": 298,
                                                                                                                            "end_token": 306,
                                                                                                                            "label": "case Some((value2, rest2))",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "tupleLiteral",
                                                                                                                            "start_token": 309,
                                                                                                                            "end_token": 320,
                                                                                                                            "label": "Some(((value1, value2), rest2))",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "tupleLiteral",
                                                                                                                                    "start_token": 312,
                                                                                                                                    "end_token": 316,
                                                                                                                                    "label": "(value1, value2)",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "identifier",
                                                                                                                                            "start_token": 313,
                                                                                                                                            "end_token": 313,
                                                                                                                                            "label": "value1",
                                                                                                                                            "children": []
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "identifier",
                                                                                                                                            "start_token": 315,
                                                                                                                                            "end_token": 315,
                                                                                                                                            "label": "value2",
                                                                                                                                            "children": []
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "start_token": 318,
                                                                                                                                    "end_token": 318,
                                                                                                                                    "label": "rest2",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "matchCase",
                                                                                                                    "start_token": 322,
                                                                                                                    "end_token": 326,
                                                                                                                    "label": "case None => None",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "matchCase",
                                                                                    "start_token": 330,
                                                                                    "end_token": 334,
                                                                                    "label": "case None => None",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_placeholder",
                            "name": "or",
                            "start_line": 44,
                            "end_line": 51,
                            "start_token": 343,
                            "end_token": 410,
                            "label": "public func or(c2: Combinator<I, O>): Combinator<I, O> {\n        Combinator {\n            input => match (this.parseFunc(input)) {\n                case Some(a) => Some(a)\n                case None => c2.parseFunc(input)\n            }\n        }\n    }\n",
                            "children": [
                                {
                                    "type": "module",
                                    "start_token": 343,
                                    "end_token": 409,
                                    "label": "public func or(c2: Combinator<I, O>): Combinator<I, O> {\n        Combinator {\n            input => match (this.parseFunc(input)) {\n                case Some(a) => Some(a)\n                case None => c2.parseFunc(input)\n            }\n        }\n    }",
                                    "children": [
                                        {
                                            "type": "PUBLIC",
                                            "start_token": 343,
                                            "end_token": 343,
                                            "label": "public",
                                            "children": []
                                        },
                                        {
                                            "type": "functionDefinition",
                                            "start_token": 344,
                                            "end_token": 409,
                                            "label": "func or(c2: Combinator<I, O>): Combinator<I, O> {\n        Combinator {\n            input => match (this.parseFunc(input)) {\n                case Some(a) => Some(a)\n                case None => c2.parseFunc(input)\n            }\n        }\n    }",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 345,
                                                    "end_token": 345,
                                                    "label": "or",
                                                    "children": []
                                                },
                                                {
                                                    "type": "functionParameters",
                                                    "start_token": 346,
                                                    "end_token": 355,
                                                    "label": "(c2: Combinator<I, O>)",
                                                    "children": [
                                                        {
                                                            "type": "parameter",
                                                            "start_token": 347,
                                                            "end_token": 354,
                                                            "label": "c2: Combinator<I, O>",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "start_token": 347,
                                                                    "end_token": 347,
                                                                    "label": "c2",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "typeArguments",
                                                                    "start_token": 349,
                                                                    "end_token": 354,
                                                                    "label": "Combinator<I, O>",
                                                                    "children": [
                                                                        {
                                                                            "type": "typeIdentifier",
                                                                            "start_token": 351,
                                                                            "end_token": 351,
                                                                            "label": "I",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "typeIdentifier",
                                                                            "start_token": 353,
                                                                            "end_token": 353,
                                                                            "label": "O",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "arrowType",
                                                    "start_token": 356,
                                                    "end_token": 362,
                                                    "label": ": Combinator<I, O>",
                                                    "children": [
                                                        {
                                                            "type": "typeIdentifier",
                                                            "start_token": 357,
                                                            "end_token": 362,
                                                            "label": "Combinator<I, O>",
                                                            "children": [
                                                                {
                                                                    "type": "typeIdentifier",
                                                                    "start_token": 359,
                                                                    "end_token": 359,
                                                                    "label": "I",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "typeIdentifier",
                                                                    "start_token": 361,
                                                                    "end_token": 361,
                                                                    "label": "O",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "start_token": 363,
                                                    "end_token": 409,
                                                    "label": "{\n        Combinator {\n            input => match (this.parseFunc(input)) {\n                case Some(a) => Some(a)\n                case None => c2.parseFunc(input)\n            }\n        }\n    }",
                                                    "children": [
                                                        {
                                                            "type": "block",
                                                            "start_token": 365,
                                                            "end_token": 407,
                                                            "label": "Combinator {\n            input => match (this.parseFunc(input)) {\n                case Some(a) => Some(a)\n                case None => c2.parseFunc(input)\n            }\n        }",
                                                            "children": [
                                                                {
                                                                    "type": "assignmentExpression",
                                                                    "start_token": 368,
                                                                    "end_token": 371,
                                                                    "label": "input => match",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 368,
                                                                            "end_token": 368,
                                                                            "label": "input",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "matchExpression",
                                                                    "start_token": 371,
                                                                    "end_token": 405,
                                                                    "label": "match (this.parseFunc(input)) {\n                case Some(a) => Some(a)\n                case None => c2.parseFunc(input)\n            }",
                                                                    "children": [
                                                                        {
                                                                            "type": "block",
                                                                            "start_token": 380,
                                                                            "end_token": 405,
                                                                            "label": "{\n                case Some(a) => Some(a)\n                case None => c2.parseFunc(input)\n            }",
                                                                            "children": [
                                                                                {
                                                                                    "type": "matchCase",
                                                                                    "start_token": 382,
                                                                                    "end_token": 392,
                                                                                    "label": "case Some(a) => Some(a)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "patternGuard",
                                                                                            "start_token": 382,
                                                                                            "end_token": 386,
                                                                                            "label": "case Some(a)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "start_token": 383,
                                                                                                    "end_token": 383,
                                                                                                    "label": "Some",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "start_token": 385,
                                                                                                    "end_token": 385,
                                                                                                    "label": "a",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "arrowType",
                                                                                            "start_token": 387,
                                                                                            "end_token": 392,
                                                                                            "label": "=> Some(a)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "start_token": 389,
                                                                                                    "end_token": 389,
                                                                                                    "label": "Some",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "start_token": 391,
                                                                                                    "end_token": 391,
                                                                                                    "label": "a",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "matchCase",
                                                                                    "start_token": 394,
                                                                                    "end_token": 403,
                                                                                    "label": "case None => c2.parseFunc(input)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "patternGuard",
                                                                                            "start_token": 394,
                                                                                            "end_token": 395,
                                                                                            "label": "case None",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "start_token": 395,
                                                                                                    "end_token": 395,
                                                                                                    "label": "None",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "arrowType",
                                                                                            "start_token": 396,
                                                                                            "end_token": 403,
                                                                                            "label": "=> c2.parseFunc(input)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "callExpression",
                                                                                                    "start_token": 398,
                                                                                                    "end_token": 403,
                                                                                                    "label": "c2.parseFunc(input)",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "start_token": 398,
                                                                                                            "end_token": 398,
                                                                                                            "label": "c2",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "start_token": 400,
                                                                                                            "end_token": 400,
                                                                                                            "label": "parseFunc",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "start_token": 402,
                                                                                                            "end_token": 402,
                                                                                                            "label": "input",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "functionDefinition",
                            "start_token": 412,
                            "end_token": 544,
                            "label": "public func many(min: Int64): Combinator<I, List<O>> {\n        Combinator {\n            input =>\n            var vlist = List<O>.empty()\n            var rest = input\n            while (true) {\n                match (this.parseFunc(rest)) {\n                    case None => break\n                    case Some((value, _rest)) =>\n                        rest = _rest\n                        vlist = vlist.add(value)\n                }\n            }\n            if (vlist.lenth() < min) {\n                None\n            } else {\n                Some((vlist.reverse(), rest))\n            }\n        }\n    }\n",
                            "children": [
                                {
                                    "type": "modifiers",
                                    "start_token": 412,
                                    "end_token": 412,
                                    "label": "public",
                                    "children": []
                                },
                                {
                                    "type": "FUNC",
                                    "start_token": 413,
                                    "end_token": 413,
                                    "label": "func",
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "start_token": 414,
                                    "end_token": 414,
                                    "label": "many",
                                    "children": []
                                },
                                {
                                    "type": "functionParameters",
                                    "start_token": 415,
                                    "end_token": 419,
                                    "label": "(min: Int64)",
                                    "children": [
                                        {
                                            "type": "parameter",
                                            "start_token": 416,
                                            "end_token": 418,
                                            "label": "min: Int64",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 416,
                                                    "end_token": 416,
                                                    "label": "min",
                                                    "children": []
                                                },
                                                {
                                                    "type": "typeExpression",
                                                    "start_token": 418,
                                                    "end_token": 418,
                                                    "label": "Int64",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "returnType",
                                    "start_token": 420,
                                    "end_token": 429,
                                    "label": ": Combinator<I, List<O>>",
                                    "children": [
                                        {
                                            "type": "typeIdentifier",
                                            "start_token": 421,
                                            "end_token": 429,
                                            "label": "Combinator<I, List<O>>",
                                            "children": [
                                                {
                                                    "type": "typeArguments",
                                                    "start_token": 422,
                                                    "end_token": 429,
                                                    "label": "<I, List<O>>",
                                                    "children": [
                                                        {
                                                            "type": "typeIdentifier",
                                                            "start_token": 423,
                                                            "end_token": 423,
                                                            "label": "I",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "typeIdentifier",
                                                            "start_token": 425,
                                                            "end_token": 428,
                                                            "label": "List<O>",
                                                            "children": [
                                                                {
                                                                    "type": "typeArguments",
                                                                    "start_token": 426,
                                                                    "end_token": 428,
                                                                    "label": "<O>",
                                                                    "children": [
                                                                        {
                                                                            "type": "typeIdentifier",
                                                                            "start_token": 427,
                                                                            "end_token": 427,
                                                                            "label": "O",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "start_token": 430,
                                    "end_token": 543,
                                    "label": "{\n        Combinator {\n            input =>\n            var vlist = List<O>.empty()\n            var rest = input\n            while (true) {\n                match (this.parseFunc(rest)) {\n                    case None => break\n                    case Some((value, _rest)) =>\n                        rest = _rest\n                        vlist = vlist.add(value)\n                }\n            }\n            if (vlist.lenth() < min) {\n                None\n            } else {\n                Some((vlist.reverse(), rest))\n            }\n        }\n    }",
                                    "children": [
                                        {
                                            "type": "Combinator",
                                            "start_token": 432,
                                            "end_token": 433,
                                            "label": "Combinator {",
                                            "children": []
                                        },
                                        {
                                            "type": "assignmentExpression",
                                            "start_token": 435,
                                            "end_token": 437,
                                            "label": "input =>",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 435,
                                                    "end_token": 435,
                                                    "label": "input",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "variableDeclaration",
                                            "start_token": 439,
                                            "end_token": 448,
                                            "label": "var vlist = List<O>.empty(",
                                            "children": [
                                                {
                                                    "type": "VAR",
                                                    "start_token": 439,
                                                    "end_token": 439,
                                                    "label": "var",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "start_token": 440,
                                                    "end_token": 440,
                                                    "label": "vlist",
                                                    "children": []
                                                },
                                                {
                                                    "type": "genericType",
                                                    "start_token": 442,
                                                    "end_token": 448,
                                                    "label": "List<O>.empty(",
                                                    "children": [
                                                        {
                                                            "type": "typeIdentifier",
                                                            "start_token": 442,
                                                            "end_token": 445,
                                                            "label": "List<O>",
                                                            "children": [
                                                                {
                                                                    "type": "typeArguments",
                                                                    "start_token": 443,
                                                                    "end_token": 445,
                                                                    "label": "<O>",
                                                                    "children": [
                                                                        {
                                                                            "type": "typeIdentifier",
                                                                            "start_token": 444,
                                                                            "end_token": 444,
                                                                            "label": "O",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "variableDeclaration",
                                            "start_token": 451,
                                            "end_token": 454,
                                            "label": "var rest = input",
                                            "children": [
                                                {
                                                    "type": "VAR",
                                                    "start_token": 451,
                                                    "end_token": 451,
                                                    "label": "var",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "start_token": 452,
                                                    "end_token": 452,
                                                    "label": "rest",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "whileExpression",
                                            "start_token": 456,
                                            "end_token": 506,
                                            "label": "while (true) {\n                match (this.parseFunc(rest)) {\n                    case None => break\n                    case Some((value, _rest)) =>\n                        rest = _rest\n                        vlist = vlist.add(value)\n                }\n            }",
                                            "children": [
                                                {
                                                    "type": "BOOLEAN",
                                                    "start_token": 458,
                                                    "end_token": 458,
                                                    "label": "true",
                                                    "children": []
                                                },
                                                {
                                                    "type": "block",
                                                    "start_token": 460,
                                                    "end_token": 506,
                                                    "label": "{\n                match (this.parseFunc(rest)) {\n                    case None => break\n                    case Some((value, _rest)) =>\n                        rest = _rest\n                        vlist = vlist.add(value)\n                }\n            }",
                                                    "children": [
                                                        {
                                                            "type": "matchExpression",
                                                            "start_token": 462,
                                                            "end_token": 504,
                                                            "label": "match (this.parseFunc(rest)) {\n                    case None => break\n                    case Some((value, _rest)) =>\n                        rest = _rest\n                        vlist = vlist.add(value)\n                }",
                                                            "children": [
                                                                {
                                                                    "type": "callExpression",
                                                                    "start_token": 464,
                                                                    "end_token": 469,
                                                                    "label": "this.parseFunc(rest)",
                                                                    "children": [
                                                                        {
                                                                            "type": "fieldExpression",
                                                                            "start_token": 464,
                                                                            "end_token": 466,
                                                                            "label": "this.parseFunc",
                                                                            "children": [
                                                                                {
                                                                                    "type": "THIS",
                                                                                    "start_token": 464,
                                                                                    "end_token": 464,
                                                                                    "label": "this",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 466,
                                                                                    "end_token": 466,
                                                                                    "label": "parseFunc",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argumentList",
                                                                            "start_token": 467,
                                                                            "end_token": 468,
                                                                            "label": "(rest",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 468,
                                                                                    "end_token": 468,
                                                                                    "label": "rest",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "matchCase",
                                                                    "start_token": 473,
                                                                    "end_token": 477,
                                                                    "label": "case None => break",
                                                                    "children": [
                                                                        {
                                                                            "type": "CASE",
                                                                            "start_token": 473,
                                                                            "end_token": 474,
                                                                            "label": "case None",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "breakExpression",
                                                                            "start_token": 475,
                                                                            "end_token": 477,
                                                                            "label": "=> break",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "matchCase",
                                                                    "start_token": 479,
                                                                    "end_token": 503,
                                                                    "label": "case Some((value, _rest)) =>\n                        rest = _rest\n                        vlist = vlist.add(value)\n",
                                                                    "children": [
                                                                        {
                                                                            "type": "CASE",
                                                                            "start_token": 479,
                                                                            "end_token": 481,
                                                                            "label": "case Some(",
                                                                            "children": [
                                                                                {
                                                                                    "type": "tuplePattern",
                                                                                    "start_token": 482,
                                                                                    "end_token": 486,
                                                                                    "label": "(value, _rest)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 483,
                                                                                            "end_token": 483,
                                                                                            "label": "value",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "wildcardPattern",
                                                                                            "start_token": 485,
                                                                                            "end_token": 485,
                                                                                            "label": "_rest",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "assignmentExpression",
                                                                            "start_token": 491,
                                                                            "end_token": 493,
                                                                            "label": "rest = _rest",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 491,
                                                                                    "end_token": 491,
                                                                                    "label": "rest",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "assignmentExpression",
                                                                            "start_token": 495,
                                                                            "end_token": 502,
                                                                            "label": "vlist = vlist.add(value)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "fieldExpression",
                                                                                    "start_token": 497,
                                                                                    "end_token": 498,
                                                                                    "label": "vlist.",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 497,
                                                                                            "end_token": 497,
                                                                                            "label": "vlist",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argumentList",
                                                                                    "start_token": 499,
                                                                                    "end_token": 501,
                                                                                    "label": "add(value",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "start_token": 501,
                                                                                            "end_token": 501,
                                                                                            "label": "value",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "ifExpression",
                                            "start_token": 508,
                                            "end_token": 539,
                                            "label": "if (vlist.lenth() < min) {\n                None\n            } else {\n                Some((vlist.reverse(), rest))\n            }",
                                            "children": [
                                                {
                                                    "type": "binaryExpression",
                                                    "start_token": 510,
                                                    "end_token": 516,
                                                    "label": "vlist.lenth() < min",
                                                    "children": [
                                                        {
                                                            "type": "callExpression",
                                                            "start_token": 510,
                                                            "end_token": 514,
                                                            "label": "vlist.lenth()",
                                                            "children": [
                                                                {
                                                                    "type": "fieldExpression",
                                                                    "start_token": 510,
                                                                    "end_token": 511,
                                                                    "label": "vlist.",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 510,
                                                                            "end_token": 510,
                                                                            "label": "vlist",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 516,
                                                            "end_token": 516,
                                                            "label": "min",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "start_token": 518,
                                                    "end_token": 522,
                                                    "label": "{\n                None\n            }",
                                                    "children": [
                                                        {
                                                            "type": "None",
                                                            "start_token": 520,
                                                            "end_token": 520,
                                                            "label": "None",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "else",
                                                    "start_token": 523,
                                                    "end_token": 539,
                                                    "label": "else {\n                Some((vlist.reverse(), rest))\n            }",
                                                    "children": [
                                                        {
                                                            "type": "Some",
                                                            "start_token": 526,
                                                            "end_token": 537,
                                                            "label": "Some((vlist.reverse(), rest))",
                                                            "children": [
                                                                {
                                                                    "type": "tupleLiteral",
                                                                    "start_token": 528,
                                                                    "end_token": 536,
                                                                    "label": "(vlist.reverse(), rest)",
                                                                    "children": [
                                                                        {
                                                                            "type": "fieldExpression",
                                                                            "start_token": 529,
                                                                            "end_token": 531,
                                                                            "label": "vlist.reverse",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "start_token": 529,
                                                                                    "end_token": 529,
                                                                                    "label": "vlist",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "start_token": 535,
                                                                            "end_token": 535,
                                                                            "label": "rest",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "name": "many",
                            "start_line": 53,
                            "end_line": 72
                        }
                    ]
                }
            ]
        }
    ]
}