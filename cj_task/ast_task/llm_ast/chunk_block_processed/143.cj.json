{
    "type": "module",
    "start_token": 0,
    "end_token": 109,
    "label": "macro package bindings.runner.macros\nfrom std import ast.*\nfrom std import collection.HashMap\nfrom std import fs.File\nimport bindings.common.*\nimport bindings.clang.parseForeignCDecls\npublic macro CBindings(attr: Tokens, input: Tokens): Tokens {\n    let filepath = parseExpr(input).checkStringLiteral()\n    if (!File.exists(filepath)) {\n        throw IllegalArgumentException(\"File ${filepath} does not exist\")\n    }\n    let ctx = attr.parseTranslationContext()\n    parseForeignCDecls(filepath, context: ctx)\n}",
    "children": [
        {
            "type": "packageHeader",
            "start_token": 0,
            "end_token": 6,
            "label": "macro package bindings.runner.macros",
            "children": [
                {
                    "type": "packageNameIdentifier",
                    "start_token": 1,
                    "end_token": 3,
                    "label": "package bindings.",
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 1,
                            "end_token": 1,
                            "label": "package",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "start_token": 2,
                            "end_token": 2,
                            "label": "bindings",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "identifier",
                    "start_token": 4,
                    "end_token": 4,
                    "label": "runner",
                    "children": []
                },
                {
                    "type": "identifier",
                    "start_token": 6,
                    "end_token": 6,
                    "label": "macros",
                    "children": []
                }
            ]
        },
        {
            "type": "importList",
            "start_token": 8,
            "end_token": 41,
            "label": "from std import ast.*\nfrom std import collection.HashMap\nfrom std import fs.File\nimport bindings.common.*\nimport bindings.clang.parseForeignCDecls",
            "children": [
                {
                    "type": "importAll",
                    "start_token": 8,
                    "end_token": 14,
                    "label": "from std import ast.*\n",
                    "children": [
                        {
                            "type": "FROM",
                            "start_token": 8,
                            "end_token": 15,
                            "label": "from std import ast.*\nfrom",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "start_token": 9,
                            "end_token": 9,
                            "label": "std",
                            "children": []
                        },
                        {
                            "type": "importContent",
                            "start_token": 10,
                            "end_token": 14,
                            "label": "import ast.*\n",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 11,
                                    "end_token": 11,
                                    "label": "ast",
                                    "children": []
                                },
                                {
                                    "type": "importAll",
                                    "start_token": 12,
                                    "end_token": 14,
                                    "label": ".*\n",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "importSpecified",
                    "start_token": 15,
                    "end_token": 21,
                    "label": "from std import collection.HashMap\n",
                    "children": [
                        {
                            "type": "FROM",
                            "start_token": 15,
                            "end_token": 15,
                            "label": "from",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "start_token": 16,
                            "end_token": 16,
                            "label": "std",
                            "children": []
                        },
                        {
                            "type": "importContent",
                            "start_token": 17,
                            "end_token": 21,
                            "label": "import collection.HashMap\n",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 18,
                                    "end_token": 18,
                                    "label": "collection",
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "start_token": 20,
                                    "end_token": 20,
                                    "label": "HashMap",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "importSpecified",
                    "start_token": 22,
                    "end_token": 28,
                    "label": "from std import fs.File\n",
                    "children": [
                        {
                            "type": "FROM",
                            "start_token": 22,
                            "end_token": 22,
                            "label": "from",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "start_token": 23,
                            "end_token": 23,
                            "label": "std",
                            "children": []
                        },
                        {
                            "type": "importContent",
                            "start_token": 24,
                            "end_token": 28,
                            "label": "import fs.File\n",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 25,
                                    "end_token": 25,
                                    "label": "fs",
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "start_token": 27,
                                    "end_token": 27,
                                    "label": "File",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "importAll",
                    "start_token": 29,
                    "end_token": 35,
                    "label": "import bindings.common.*\n",
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 30,
                            "end_token": 32,
                            "label": "bindings.common",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 30,
                                    "end_token": 30,
                                    "label": "bindings",
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "start_token": 31,
                                    "end_token": 31,
                                    "label": ".",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "importSpecified",
                    "start_token": 36,
                    "end_token": 42,
                    "label": "import bindings.clang.parseForeignCDecls\n",
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 37,
                            "end_token": 41,
                            "label": "bindings.clang.parseForeignCDecls",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 37,
                                    "end_token": 39,
                                    "label": "bindings.clang",
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "start_token": 41,
                                    "end_token": 41,
                                    "label": "parseForeignCDecls",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "macroDefinition",
            "start_token": 43,
            "end_token": 109,
            "label": "public macro CBindings(attr: Tokens, input: Tokens): Tokens {\n    let filepath = parseExpr(input).checkStringLiteral()\n    if (!File.exists(filepath)) {\n        throw IllegalArgumentException(\"File ${filepath} does not exist\")\n    }\n    let ctx = attr.parseTranslationContext()\n    parseForeignCDecls(filepath, context: ctx)\n}",
            "children": [
                {
                    "type": "MACRO",
                    "start_token": 44,
                    "end_token": 46,
                    "label": "macro CBindings(",
                    "children": [
                        {
                            "type": "identifier",
                            "start_token": 45,
                            "end_token": 45,
                            "label": "CBindings",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "functionParameters",
                    "start_token": 47,
                    "end_token": 54,
                    "label": "attr: Tokens, input: Tokens)",
                    "children": [
                        {
                            "type": "parameter",
                            "start_token": 47,
                            "end_token": 50,
                            "label": "attr: Tokens,",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 47,
                                    "end_token": 47,
                                    "label": "attr",
                                    "children": []
                                },
                                {
                                    "type": "typeExpression",
                                    "start_token": 49,
                                    "end_token": 50,
                                    "label": "Tokens,",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 49,
                                            "end_token": 49,
                                            "label": "Tokens",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "parameter",
                            "start_token": 51,
                            "end_token": 54,
                            "label": "input: Tokens)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 51,
                                    "end_token": 51,
                                    "label": "input",
                                    "children": []
                                },
                                {
                                    "type": "typeExpression",
                                    "start_token": 53,
                                    "end_token": 54,
                                    "label": "Tokens)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 53,
                                            "end_token": 53,
                                            "label": "Tokens",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "start_token": 57,
                    "end_token": 109,
                    "label": "{\n    let filepath = parseExpr(input).checkStringLiteral()\n    if (!File.exists(filepath)) {\n        throw IllegalArgumentException(\"File ${filepath} does not exist\")\n    }\n    let ctx = attr.parseTranslationContext()\n    parseForeignCDecls(filepath, context: ctx)\n}",
                    "children": [
                        {
                            "type": "LET",
                            "start_token": 59,
                            "end_token": 79,
                            "label": "let filepath = parseExpr(input).checkStringLiteral()\n    if (!File.exists(filepath)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 60,
                                    "end_token": 60,
                                    "label": "filepath",
                                    "children": []
                                },
                                {
                                    "type": "callExpression",
                                    "start_token": 62,
                                    "end_token": 69,
                                    "label": "parseExpr(input).checkStringLiteral()",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 62,
                                            "end_token": 62,
                                            "label": "parseExpr",
                                            "children": []
                                        },
                                        {
                                            "type": "macroInputExprWithParens",
                                            "start_token": 63,
                                            "end_token": 65,
                                            "label": "(input)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 64,
                                                    "end_token": 64,
                                                    "label": "input",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "callExpression",
                                            "start_token": 67,
                                            "end_token": 69,
                                            "label": "checkStringLiteral()",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 67,
                                                    "end_token": 67,
                                                    "label": "checkStringLiteral",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "IF",
                            "start_token": 71,
                            "end_token": 89,
                            "label": "if (!File.exists(filepath)) {\n        throw IllegalArgumentException(\"File ${filepath} does not exist\")\n    }",
                            "children": [
                                {
                                    "type": "binaryExpression",
                                    "start_token": 73,
                                    "end_token": 79,
                                    "label": "!File.exists(filepath)",
                                    "children": [
                                        {
                                            "type": "unaryExpression",
                                            "start_token": 73,
                                            "end_token": 73,
                                            "label": "!",
                                            "children": []
                                        },
                                        {
                                            "type": "callExpression",
                                            "start_token": 75,
                                            "end_token": 79,
                                            "label": ".exists(filepath)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 75,
                                                    "end_token": 75,
                                                    "label": ".",
                                                    "children": []
                                                },
                                                {
                                                    "type": "macroInputExprWithParens",
                                                    "start_token": 76,
                                                    "end_token": 78,
                                                    "label": "exists(filepath",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "start_token": 77,
                                                            "end_token": 77,
                                                            "label": "(",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "start_token": 81,
                                    "end_token": 89,
                                    "label": "{\n        throw IllegalArgumentException(\"File ${filepath} does not exist\")\n    }",
                                    "children": [
                                        {
                                            "type": "THROW",
                                            "start_token": 83,
                                            "end_token": 87,
                                            "label": "throw IllegalArgumentException(\"File ${filepath} does not exist\")",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 84,
                                                    "end_token": 84,
                                                    "label": "IllegalArgumentException",
                                                    "children": []
                                                },
                                                {
                                                    "type": "tripleQuoteOpen",
                                                    "start_token": 85,
                                                    "end_token": 87,
                                                    "label": "(\"File ${filepath} does not exist\")",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "LET",
                            "start_token": 91,
                            "end_token": 98,
                            "label": "let ctx = attr.parseTranslationContext()",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 92,
                                    "end_token": 92,
                                    "label": "ctx",
                                    "children": []
                                },
                                {
                                    "type": "callExpression",
                                    "start_token": 94,
                                    "end_token": 98,
                                    "label": "attr.parseTranslationContext()",
                                    "children": [
                                        {
                                            "type": "fieldExpression",
                                            "start_token": 94,
                                            "end_token": 96,
                                            "label": "attr.parseTranslationContext",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 94,
                                                    "end_token": 94,
                                                    "label": "attr",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "macroWithAttrParam",
                                            "start_token": 97,
                                            "end_token": 98,
                                            "label": "()",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "callExpression",
                            "start_token": 100,
                            "end_token": 107,
                            "label": "parseForeignCDecls(filepath, context: ctx)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "start_token": 100,
                                    "end_token": 100,
                                    "label": "parseForeignCDecls",
                                    "children": []
                                },
                                {
                                    "type": "macroInputExprWithParens",
                                    "start_token": 101,
                                    "end_token": 107,
                                    "label": "(filepath, context: ctx)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "start_token": 102,
                                            "end_token": 102,
                                            "label": "filepath",
                                            "children": []
                                        },
                                        {
                                            "type": "binaryExpression",
                                            "start_token": 104,
                                            "end_token": 106,
                                            "label": "context: ctx",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "start_token": 104,
                                                    "end_token": 104,
                                                    "label": "context",
                                                    "children": []
                                                },
                                                {
                                                    "type": "doubleQuoteClose",
                                                    "start_token": 105,
                                                    "end_token": 106,
                                                    "label": ": ctx",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}