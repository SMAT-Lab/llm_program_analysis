{
    "type": "module",
    "label": "import logging\nimport os\n\nfrom dotenv import load_dotenv\nfrom redis import Redis\nfrom redis.asyncio import Redis as AsyncRedis\n\nfrom backend.util.retry import conn_retry\n\nload_dotenv()\n\nHOST = os.getenv(\"REDIS_HOST\", \"localhost\")\nPORT = int(os.getenv(\"REDIS_PORT\", \"6379\"))\nPASSWORD = os.getenv(\"REDIS_PASSWORD\", \"password\")\n\nlogger = logging.getLogger(__name__)\nconnection: Redis | None = None\nconnection_async: AsyncRedis | None = None\n\n\n@conn_retry(\"Redis\", \"Acquiring connection\")\ndef connect() -> Redis:\n    global connection\n    if connection:\n        return connection\n\n    c = Redis(\n        host=HOST,\n        port=PORT,\n        password=PASSWORD,\n        decode_responses=True,\n    )\n    c.ping()\n    connection = c\n    return connection\n\n\n@conn_retry(\"Redis\", \"Releasing connection\")\ndef disconnect():\n    global connection\n    if connection:\n        connection.close()\n    connection = None\n\n\ndef get_redis(auto_connect: bool = True) -> Redis:\n    if connection:\n        return connection\n    if auto_connect:\n        return connect()\n    raise RuntimeError(\"Redis connection is not established\")\n\n\n@conn_retry(\"AsyncRedis\", \"Acquiring connection\")\nasync def connect_async() -> AsyncRedis:\n    global connection_async\n    if connection_async:\n        return connection_async\n\n    c = AsyncRedis(\n        host=HOST,\n        port=PORT,\n        password=PASSWORD,\n        decode_responses=True,\n    )\n    await c.ping()\n    connection_async = c\n    return connection_async\n\n\n@conn_retry(\"AsyncRedis\", \"Releasing connection\")\nasync def disconnect_async():\n    global connection_async\n    if connection_async:\n        await connection_async.close()\n    connection_async = None\n\n\nasync def get_redis_async(auto_connect: bool = True) -> AsyncRedis:\n    if connection_async:\n        return connection_async\n    if auto_connect:\n        return await connect_async()\n    raise RuntimeError(\"AsyncRedis connection is not established\")\n",
    "children": [
        {
            "type": "import_statement",
            "label": "import logging",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "logging",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "logging",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_statement",
            "label": "import os",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "os",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "os",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from dotenv import load_dotenv",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "dotenv",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "dotenv",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "load_dotenv",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "load_dotenv",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from redis import Redis",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "redis",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "redis",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "Redis",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Redis",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from redis.asyncio import Redis as AsyncRedis",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "redis.asyncio",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "redis",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "asyncio",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "aliased_import",
                    "label": "Redis as AsyncRedis",
                    "children": [
                        {
                            "type": "dotted_name",
                            "label": "Redis",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "Redis",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "identifier",
                            "label": "AsyncRedis",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from backend.util.retry import conn_retry",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "backend.util.retry",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "util",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "retry",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "conn_retry",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "conn_retry",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "expression_statement",
            "label": "load_dotenv()",
            "children": [
                {
                    "type": "call",
                    "label": "load_dotenv()",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "load_dotenv",
                            "children": []
                        },
                        {
                            "type": "argument_list",
                            "label": "()",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "expression_statement",
            "label": "HOST = os.getenv(\"REDIS_HOST\", \"localhost\")",
            "children": [
                {
                    "type": "assignment",
                    "label": "HOST = os.getenv(\"REDIS_HOST\", \"localhost\")",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "HOST",
                            "children": []
                        },
                        {
                            "type": "call",
                            "label": "os.getenv(\"REDIS_HOST\", \"localhost\")",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "os.getenv",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "os",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "getenv",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(\"REDIS_HOST\", \"localhost\")",
                                    "children": [
                                        {
                                            "type": "string",
                                            "label": "\"REDIS_HOST\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "REDIS_HOST",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "string",
                                            "label": "\"localhost\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "localhost",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "expression_statement",
            "label": "PORT = int(os.getenv(\"REDIS_PORT\", \"6379\"))",
            "children": [
                {
                    "type": "assignment",
                    "label": "PORT = int(os.getenv(\"REDIS_PORT\", \"6379\"))",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "PORT",
                            "children": []
                        },
                        {
                            "type": "call",
                            "label": "int(os.getenv(\"REDIS_PORT\", \"6379\"))",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "int",
                                    "children": []
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(os.getenv(\"REDIS_PORT\", \"6379\"))",
                                    "children": [
                                        {
                                            "type": "call",
                                            "label": "os.getenv(\"REDIS_PORT\", \"6379\")",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "os.getenv",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "os",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "getenv",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(\"REDIS_PORT\", \"6379\")",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "\"REDIS_PORT\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "REDIS_PORT",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "string",
                                                            "label": "\"6379\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "6379",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "expression_statement",
            "label": "PASSWORD = os.getenv(\"REDIS_PASSWORD\", \"password\")",
            "children": [
                {
                    "type": "assignment",
                    "label": "PASSWORD = os.getenv(\"REDIS_PASSWORD\", \"password\")",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "PASSWORD",
                            "children": []
                        },
                        {
                            "type": "call",
                            "label": "os.getenv(\"REDIS_PASSWORD\", \"password\")",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "os.getenv",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "os",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "getenv",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(\"REDIS_PASSWORD\", \"password\")",
                                    "children": [
                                        {
                                            "type": "string",
                                            "label": "\"REDIS_PASSWORD\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "REDIS_PASSWORD",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "string",
                                            "label": "\"password\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "password",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "expression_statement",
            "label": "logger = logging.getLogger(__name__)",
            "children": [
                {
                    "type": "assignment",
                    "label": "logger = logging.getLogger(__name__)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "logger",
                            "children": []
                        },
                        {
                            "type": "call",
                            "label": "logging.getLogger(__name__)",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "logging.getLogger",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "logging",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "getLogger",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(__name__)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "__name__",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "expression_statement",
            "label": "connection: Redis | None = None",
            "children": [
                {
                    "type": "assignment",
                    "label": "connection: Redis | None = None",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "connection",
                            "children": []
                        },
                        {
                            "type": "type",
                            "label": "Redis | None",
                            "children": [
                                {
                                    "type": "binary_operator",
                                    "label": "Redis | None",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "Redis",
                                            "children": []
                                        },
                                        {
                                            "type": "none",
                                            "label": "None",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "none",
                            "label": "None",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "expression_statement",
            "label": "connection_async: AsyncRedis | None = None",
            "children": [
                {
                    "type": "assignment",
                    "label": "connection_async: AsyncRedis | None = None",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "connection_async",
                            "children": []
                        },
                        {
                            "type": "type",
                            "label": "AsyncRedis | None",
                            "children": [
                                {
                                    "type": "binary_operator",
                                    "label": "AsyncRedis | None",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "AsyncRedis",
                                            "children": []
                                        },
                                        {
                                            "type": "none",
                                            "label": "None",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "none",
                            "label": "None",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "decorated_definition",
            "label": "@conn_retry(\"Redis\", \"Acquiring connection\")\ndef connect() -> Redis:\n    global connection\n    if connection:\n        return connection\n\n    c = Redis(\n        host=HOST,\n        port=PORT,\n        password=PASSWORD,\n        decode_responses=True,\n    )\n    c.ping()\n    connection = c\n    return connection",
            "children": [
                {
                    "type": "decorator",
                    "label": "@conn_retry(\"Redis\", \"Acquiring connection\")",
                    "children": [
                        {
                            "type": "call",
                            "label": "conn_retry(\"Redis\", \"Acquiring connection\")",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "conn_retry",
                                    "children": []
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(\"Redis\", \"Acquiring connection\")",
                                    "children": [
                                        {
                                            "type": "string",
                                            "label": "\"Redis\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "Redis",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "string",
                                            "label": "\"Acquiring connection\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "Acquiring connection",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "label": "def connect() -> Redis:\n    global connection\n    if connection:\n        return connection\n\n    c = Redis(\n        host=HOST,\n        port=PORT,\n        password=PASSWORD,\n        decode_responses=True,\n    )\n    c.ping()\n    connection = c\n    return connection",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "connect",
                            "children": []
                        },
                        {
                            "type": "parameters",
                            "label": "()",
                            "children": []
                        },
                        {
                            "type": "type",
                            "label": "Redis",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "Redis",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "block",
                            "label": "global connection\n    if connection:\n        return connection\n\n    c = Redis(\n        host=HOST,\n        port=PORT,\n        password=PASSWORD,\n        decode_responses=True,\n    )\n    c.ping()\n    connection = c\n    return connection",
                            "children": [
                                {
                                    "type": "global_statement",
                                    "label": "global connection",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "connection",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "if_statement",
                                    "label": "if connection:\n        return connection",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "connection",
                                            "children": []
                                        },
                                        {
                                            "type": "block",
                                            "label": "return connection",
                                            "children": [
                                                {
                                                    "type": "return_statement",
                                                    "label": "return connection",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "connection",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "c = Redis(\n        host=HOST,\n        port=PORT,\n        password=PASSWORD,\n        decode_responses=True,\n    )",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "c = Redis(\n        host=HOST,\n        port=PORT,\n        password=PASSWORD,\n        decode_responses=True,\n    )",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "c",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "label": "Redis(\n        host=HOST,\n        port=PORT,\n        password=PASSWORD,\n        decode_responses=True,\n    )",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Redis",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\n        host=HOST,\n        port=PORT,\n        password=PASSWORD,\n        decode_responses=True,\n    )",
                                                            "children": [
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "host=HOST",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "host",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "HOST",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "port=PORT",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "port",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "PORT",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "password=PASSWORD",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "password",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "PASSWORD",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "decode_responses=True",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "decode_responses",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "true",
                                                                            "label": "True",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "c.ping()",
                                    "children": [
                                        {
                                            "type": "call",
                                            "label": "c.ping()",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "c.ping",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "c",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "ping",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "()",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "connection = c",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "connection = c",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "connection",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "c",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "return_statement",
                                    "label": "return connection",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "connection",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "decorated_definition",
            "label": "@conn_retry(\"Redis\", \"Releasing connection\")\ndef disconnect():\n    global connection\n    if connection:\n        connection.close()\n    connection = None",
            "children": [
                {
                    "type": "decorator",
                    "label": "@conn_retry(\"Redis\", \"Releasing connection\")",
                    "children": [
                        {
                            "type": "call",
                            "label": "conn_retry(\"Redis\", \"Releasing connection\")",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "conn_retry",
                                    "children": []
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(\"Redis\", \"Releasing connection\")",
                                    "children": [
                                        {
                                            "type": "string",
                                            "label": "\"Redis\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "Redis",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "string",
                                            "label": "\"Releasing connection\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "Releasing connection",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "label": "def disconnect():\n    global connection\n    if connection:\n        connection.close()\n    connection = None",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "disconnect",
                            "children": []
                        },
                        {
                            "type": "parameters",
                            "label": "()",
                            "children": []
                        },
                        {
                            "type": "block",
                            "label": "global connection\n    if connection:\n        connection.close()\n    connection = None",
                            "children": [
                                {
                                    "type": "global_statement",
                                    "label": "global connection",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "connection",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "if_statement",
                                    "label": "if connection:\n        connection.close()",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "connection",
                                            "children": []
                                        },
                                        {
                                            "type": "block",
                                            "label": "connection.close()",
                                            "children": [
                                                {
                                                    "type": "expression_statement",
                                                    "label": "connection.close()",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "connection.close()",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "connection.close",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "connection",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "close",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "()",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "connection = None",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "connection = None",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "connection",
                                                    "children": []
                                                },
                                                {
                                                    "type": "none",
                                                    "label": "None",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def get_redis(auto_connect: bool = True) -> Redis:\n    if connection:\n        return connection\n    if auto_connect:\n        return connect()\n    raise RuntimeError(\"Redis connection is not established\")",
            "children": [
                {
                    "type": "identifier",
                    "label": "get_redis",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(auto_connect: bool = True)",
                    "children": [
                        {
                            "type": "typed_default_parameter",
                            "label": "auto_connect: bool = True",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "auto_connect",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "bool",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "bool",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "true",
                                    "label": "True",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "Redis",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Redis",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "if connection:\n        return connection\n    if auto_connect:\n        return connect()\n    raise RuntimeError(\"Redis connection is not established\")",
                    "children": [
                        {
                            "type": "if_statement",
                            "label": "if connection:\n        return connection",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "connection",
                                    "children": []
                                },
                                {
                                    "type": "block",
                                    "label": "return connection",
                                    "children": [
                                        {
                                            "type": "return_statement",
                                            "label": "return connection",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "connection",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "if_statement",
                            "label": "if auto_connect:\n        return connect()",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "auto_connect",
                                    "children": []
                                },
                                {
                                    "type": "block",
                                    "label": "return connect()",
                                    "children": [
                                        {
                                            "type": "return_statement",
                                            "label": "return connect()",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "connect()",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "connect",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "()",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "raise_statement",
                            "label": "raise RuntimeError(\"Redis connection is not established\")",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "RuntimeError(\"Redis connection is not established\")",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "RuntimeError",
                                            "children": []
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(\"Redis connection is not established\")",
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "label": "\"Redis connection is not established\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "Redis connection is not established",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "decorated_definition",
            "label": "@conn_retry(\"AsyncRedis\", \"Acquiring connection\")\nasync def connect_async() -> AsyncRedis:\n    global connection_async\n    if connection_async:\n        return connection_async\n\n    c = AsyncRedis(\n        host=HOST,\n        port=PORT,\n        password=PASSWORD,\n        decode_responses=True,\n    )\n    await c.ping()\n    connection_async = c\n    return connection_async",
            "children": [
                {
                    "type": "decorator",
                    "label": "@conn_retry(\"AsyncRedis\", \"Acquiring connection\")",
                    "children": [
                        {
                            "type": "call",
                            "label": "conn_retry(\"AsyncRedis\", \"Acquiring connection\")",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "conn_retry",
                                    "children": []
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(\"AsyncRedis\", \"Acquiring connection\")",
                                    "children": [
                                        {
                                            "type": "string",
                                            "label": "\"AsyncRedis\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "AsyncRedis",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "string",
                                            "label": "\"Acquiring connection\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "Acquiring connection",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "label": "async def connect_async() -> AsyncRedis:\n    global connection_async\n    if connection_async:\n        return connection_async\n\n    c = AsyncRedis(\n        host=HOST,\n        port=PORT,\n        password=PASSWORD,\n        decode_responses=True,\n    )\n    await c.ping()\n    connection_async = c\n    return connection_async",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "connect_async",
                            "children": []
                        },
                        {
                            "type": "parameters",
                            "label": "()",
                            "children": []
                        },
                        {
                            "type": "type",
                            "label": "AsyncRedis",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "AsyncRedis",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "block",
                            "label": "global connection_async\n    if connection_async:\n        return connection_async\n\n    c = AsyncRedis(\n        host=HOST,\n        port=PORT,\n        password=PASSWORD,\n        decode_responses=True,\n    )\n    await c.ping()\n    connection_async = c\n    return connection_async",
                            "children": [
                                {
                                    "type": "global_statement",
                                    "label": "global connection_async",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "connection_async",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "if_statement",
                                    "label": "if connection_async:\n        return connection_async",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "connection_async",
                                            "children": []
                                        },
                                        {
                                            "type": "block",
                                            "label": "return connection_async",
                                            "children": [
                                                {
                                                    "type": "return_statement",
                                                    "label": "return connection_async",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "connection_async",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "c = AsyncRedis(\n        host=HOST,\n        port=PORT,\n        password=PASSWORD,\n        decode_responses=True,\n    )",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "c = AsyncRedis(\n        host=HOST,\n        port=PORT,\n        password=PASSWORD,\n        decode_responses=True,\n    )",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "c",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "label": "AsyncRedis(\n        host=HOST,\n        port=PORT,\n        password=PASSWORD,\n        decode_responses=True,\n    )",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "AsyncRedis",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\n        host=HOST,\n        port=PORT,\n        password=PASSWORD,\n        decode_responses=True,\n    )",
                                                            "children": [
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "host=HOST",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "host",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "HOST",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "port=PORT",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "port",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "PORT",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "password=PASSWORD",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "password",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "PASSWORD",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "decode_responses=True",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "decode_responses",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "true",
                                                                            "label": "True",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "await c.ping()",
                                    "children": [
                                        {
                                            "type": "await",
                                            "label": "await c.ping()",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "c.ping()",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "c.ping",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "c",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "ping",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "()",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "connection_async = c",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "connection_async = c",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "connection_async",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "c",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "return_statement",
                                    "label": "return connection_async",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "connection_async",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "decorated_definition",
            "label": "@conn_retry(\"AsyncRedis\", \"Releasing connection\")\nasync def disconnect_async():\n    global connection_async\n    if connection_async:\n        await connection_async.close()\n    connection_async = None",
            "children": [
                {
                    "type": "decorator",
                    "label": "@conn_retry(\"AsyncRedis\", \"Releasing connection\")",
                    "children": [
                        {
                            "type": "call",
                            "label": "conn_retry(\"AsyncRedis\", \"Releasing connection\")",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "conn_retry",
                                    "children": []
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(\"AsyncRedis\", \"Releasing connection\")",
                                    "children": [
                                        {
                                            "type": "string",
                                            "label": "\"AsyncRedis\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "AsyncRedis",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "string",
                                            "label": "\"Releasing connection\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "Releasing connection",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "label": "async def disconnect_async():\n    global connection_async\n    if connection_async:\n        await connection_async.close()\n    connection_async = None",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "disconnect_async",
                            "children": []
                        },
                        {
                            "type": "parameters",
                            "label": "()",
                            "children": []
                        },
                        {
                            "type": "block",
                            "label": "global connection_async\n    if connection_async:\n        await connection_async.close()\n    connection_async = None",
                            "children": [
                                {
                                    "type": "global_statement",
                                    "label": "global connection_async",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "connection_async",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "if_statement",
                                    "label": "if connection_async:\n        await connection_async.close()",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "connection_async",
                                            "children": []
                                        },
                                        {
                                            "type": "block",
                                            "label": "await connection_async.close()",
                                            "children": [
                                                {
                                                    "type": "expression_statement",
                                                    "label": "await connection_async.close()",
                                                    "children": [
                                                        {
                                                            "type": "await",
                                                            "label": "await connection_async.close()",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "connection_async.close()",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "connection_async.close",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "connection_async",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "close",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "()",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "connection_async = None",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "connection_async = None",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "connection_async",
                                                    "children": []
                                                },
                                                {
                                                    "type": "none",
                                                    "label": "None",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "async def get_redis_async(auto_connect: bool = True) -> AsyncRedis:\n    if connection_async:\n        return connection_async\n    if auto_connect:\n        return await connect_async()\n    raise RuntimeError(\"AsyncRedis connection is not established\")",
            "children": [
                {
                    "type": "identifier",
                    "label": "get_redis_async",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(auto_connect: bool = True)",
                    "children": [
                        {
                            "type": "typed_default_parameter",
                            "label": "auto_connect: bool = True",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "auto_connect",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "bool",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "bool",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "true",
                                    "label": "True",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "AsyncRedis",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "AsyncRedis",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "if connection_async:\n        return connection_async\n    if auto_connect:\n        return await connect_async()\n    raise RuntimeError(\"AsyncRedis connection is not established\")",
                    "children": [
                        {
                            "type": "if_statement",
                            "label": "if connection_async:\n        return connection_async",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "connection_async",
                                    "children": []
                                },
                                {
                                    "type": "block",
                                    "label": "return connection_async",
                                    "children": [
                                        {
                                            "type": "return_statement",
                                            "label": "return connection_async",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "connection_async",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "if_statement",
                            "label": "if auto_connect:\n        return await connect_async()",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "auto_connect",
                                    "children": []
                                },
                                {
                                    "type": "block",
                                    "label": "return await connect_async()",
                                    "children": [
                                        {
                                            "type": "return_statement",
                                            "label": "return await connect_async()",
                                            "children": [
                                                {
                                                    "type": "await",
                                                    "label": "await connect_async()",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "connect_async()",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "connect_async",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "()",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "raise_statement",
                            "label": "raise RuntimeError(\"AsyncRedis connection is not established\")",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "RuntimeError(\"AsyncRedis connection is not established\")",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "RuntimeError",
                                            "children": []
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(\"AsyncRedis connection is not established\")",
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "label": "\"AsyncRedis connection is not established\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "AsyncRedis connection is not established",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}