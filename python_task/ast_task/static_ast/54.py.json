{
    "type": "module",
    "label": "# -*- coding: utf-8 -*-\n\nimport re\nimport sys\nfrom string import punctuation\nfrom typing import List, Tuple, Dict\n\n# Temporary replacement\n# The descriptions that contain () at the end must adapt to the new policy later\npunctuation = punctuation.replace('()', '')\n\nanchor = '###'\nauth_keys = ['apiKey', 'OAuth', 'X-Mashape-Key', 'User-Agent', 'No']\nhttps_keys = ['Yes', 'No']\ncors_keys = ['Yes', 'No', 'Unknown']\n\nindex_title = 0\nindex_desc = 1\nindex_auth = 2\nindex_https = 3\nindex_cors = 4\n\nnum_segments = 5\nmin_entries_per_category = 3\nmax_description_length = 100\n\nanchor_re = re.compile(anchor + '\\s(.+)')\ncategory_title_in_index_re = re.compile('\\*\\s\\[(.*)\\]')\nlink_re = re.compile('\\[(.+)\\]\\((http.*)\\)')\n\n# Type aliases\nAPIList = List[str]\nCategories = Dict[str, APIList]\nCategoriesLineNumber = Dict[str, int]\n\n\ndef error_message(line_number: int, message: str) -> str:\n    line = line_number + 1\n    return f'(L{line:03d}) {message}'\n\n\ndef get_categories_content(contents: List[str]) -> Tuple[Categories, CategoriesLineNumber]:\n\n    categories = {}\n    category_line_num = {}\n\n    for line_num, line_content in enumerate(contents):\n\n        if line_content.startswith(anchor):\n            category = line_content.split(anchor)[1].strip()\n            categories[category] = []\n            category_line_num[category] = line_num\n            continue\n\n        if not line_content.startswith('|') or line_content.startswith('|---'):\n            continue\n\n        raw_title = [\n            raw_content.strip() for raw_content in line_content.split('|')[1:-1]\n        ][0]\n\n        title_match = link_re.match(raw_title)\n        if title_match:\n                title = title_match.group(1).upper()\n                categories[category].append(title)\n\n    return (categories, category_line_num)\n\n\ndef check_alphabetical_order(lines: List[str]) -> List[str]:\n\n    err_msgs = []\n\n    categories, category_line_num = get_categories_content(contents=lines)\n\n    for category, api_list in categories.items():\n        if sorted(api_list) != api_list:\n            err_msg = error_message(\n                category_line_num[category], \n                f'{category} category is not alphabetical order'\n            )\n            err_msgs.append(err_msg)\n    \n    return err_msgs\n\n\ndef check_title(line_num: int, raw_title: str) -> List[str]:\n\n    err_msgs = []\n\n    title_match = link_re.match(raw_title)\n\n    # url should be wrapped in \"[TITLE](LINK)\" Markdown syntax\n    if not title_match:\n        err_msg = error_message(line_num, 'Title syntax should be \"[TITLE](LINK)\"')\n        err_msgs.append(err_msg)\n    else:\n        # do not allow \"... API\" in the entry title\n        title = title_match.group(1)\n        if title.upper().endswith(' API'):\n            err_msg = error_message(line_num, 'Title should not end with \"... API\". Every entry is an API here!')\n            err_msgs.append(err_msg)\n\n    return err_msgs\n\n\ndef check_description(line_num: int, description: str) -> List[str]:\n\n    err_msgs = []\n\n    first_char = description[0]\n    if first_char.upper() != first_char:\n        err_msg = error_message(line_num, 'first character of description is not capitalized')\n        err_msgs.append(err_msg)\n\n    last_char = description[-1]\n    if last_char in punctuation:\n        err_msg = error_message(line_num, f'description should not end with {last_char}')\n        err_msgs.append(err_msg)\n\n    desc_length = len(description)\n    if desc_length > max_description_length:\n        err_msg = error_message(line_num, f'description should not exceed {max_description_length} characters (currently {desc_length})')\n        err_msgs.append(err_msg)\n    \n    return err_msgs\n\n\ndef check_auth(line_num: int, auth: str) -> List[str]:\n\n    err_msgs = []\n\n    backtick = '`'\n    if auth != 'No' and (not auth.startswith(backtick) or not auth.endswith(backtick)):\n        err_msg = error_message(line_num, 'auth value is not enclosed with `backticks`')\n        err_msgs.append(err_msg)\n\n    if auth.replace(backtick, '') not in auth_keys:\n        err_msg = error_message(line_num, f'{auth} is not a valid Auth option')\n        err_msgs.append(err_msg)\n    \n    return err_msgs\n\n\ndef check_https(line_num: int, https: str) -> List[str]:\n\n    err_msgs = []\n\n    if https not in https_keys:\n        err_msg = error_message(line_num, f'{https} is not a valid HTTPS option')\n        err_msgs.append(err_msg)\n\n    return err_msgs\n\n\ndef check_cors(line_num: int, cors: str) -> List[str]:\n\n    err_msgs = []\n\n    if cors not in cors_keys:\n        err_msg = error_message(line_num, f'{cors} is not a valid CORS option')\n        err_msgs.append(err_msg)\n    \n    return err_msgs\n\n\ndef check_entry(line_num: int, segments: List[str]) -> List[str]:\n\n    raw_title = segments[index_title]\n    description = segments[index_desc]\n    auth = segments[index_auth]\n    https = segments[index_https]\n    cors = segments[index_cors]\n\n    title_err_msgs = check_title(line_num, raw_title)\n    desc_err_msgs = check_description(line_num, description)\n    auth_err_msgs = check_auth(line_num, auth)\n    https_err_msgs = check_https(line_num, https)\n    cors_err_msgs = check_cors(line_num, cors)\n\n    err_msgs = [\n        *title_err_msgs,\n        *desc_err_msgs,\n        *auth_err_msgs,\n        *https_err_msgs,\n        *cors_err_msgs\n    ]\n\n    return err_msgs\n\n\ndef check_file_format(lines: List[str]) -> List[str]:\n\n    err_msgs = []\n    category_title_in_index = []\n\n    alphabetical_err_msgs = check_alphabetical_order(lines)\n    err_msgs.extend(alphabetical_err_msgs)\n\n    num_in_category = min_entries_per_category + 1\n    category = ''\n    category_line = 0\n\n    for line_num, line_content in enumerate(lines):\n\n        category_title_match = category_title_in_index_re.match(line_content)\n        if category_title_match:\n            category_title_in_index.append(category_title_match.group(1))\n\n        # check each category for the minimum number of entries\n        if line_content.startswith(anchor):\n            category_match = anchor_re.match(line_content)\n            if category_match:\n                if category_match.group(1) not in category_title_in_index:\n                    err_msg = error_message(line_num, f'category header ({category_match.group(1)}) not added to Index section')\n                    err_msgs.append(err_msg)\n            else:\n                err_msg = error_message(line_num, 'category header is not formatted correctly')\n                err_msgs.append(err_msg)\n\n            if num_in_category < min_entries_per_category:\n                err_msg = error_message(category_line, f'{category} category does not have the minimum {min_entries_per_category} entries (only has {num_in_category})')\n                err_msgs.append(err_msg)\n\n            category = line_content.split(' ')[1]\n            category_line = line_num\n            num_in_category = 0\n            continue\n\n        # skips lines that we do not care about\n        if not line_content.startswith('|') or line_content.startswith('|---'):\n            continue\n\n        num_in_category += 1\n        segments = line_content.split('|')[1:-1]\n        if len(segments) < num_segments:\n            err_msg = error_message(line_num, f'entry does not have all the required columns (have {len(segments)}, need {num_segments})')\n            err_msgs.append(err_msg)\n            continue\n    \n        for segment in segments:\n            # every line segment should start and end with exactly 1 space\n            if len(segment) - len(segment.lstrip()) != 1 or len(segment) - len(segment.rstrip()) != 1:\n                err_msg = error_message(line_num, 'each segment must start and end with exactly 1 space')\n                err_msgs.append(err_msg)\n        \n        segments = [segment.strip() for segment in segments]\n        entry_err_msgs = check_entry(line_num, segments)\n        err_msgs.extend(entry_err_msgs)\n    \n    return err_msgs\n\n\ndef main(filename: str) -> None:\n\n    with open(filename, mode='r', encoding='utf-8') as file:\n        lines = list(line.rstrip() for line in file)\n\n    file_format_err_msgs = check_file_format(lines)\n\n    if file_format_err_msgs:\n        for err_msg in file_format_err_msgs:\n            print(err_msg)\n        sys.exit(1)\n\n\nif __name__ == '__main__':\n\n    num_args = len(sys.argv)\n\n    if num_args < 2:\n        print('No .md file passed (file should contain Markdown table syntax)')\n        sys.exit(1)\n\n    filename = sys.argv[1]\n\n    main(filename)\n",
    "children": [
        {
            "type": "comment",
            "label": "# -*- coding: utf-8 -*-",
            "children": []
        },
        {
            "type": "import_statement",
            "label": "import re",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "re",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "re",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_statement",
            "label": "import sys",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "sys",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "sys",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from string import punctuation",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "string",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "string",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "punctuation",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "punctuation",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from typing import List, Tuple, Dict",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "typing",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "typing",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "List",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "List",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "Tuple",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Tuple",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "Dict",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Dict",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "comment",
            "label": "# Temporary replacement",
            "children": []
        },
        {
            "type": "comment",
            "label": "# The descriptions that contain () at the end must adapt to the new policy later",
            "children": []
        },
        {
            "type": "expression_statement",
            "label": "punctuation = punctuation.replace('()', '')",
            "children": [
                {
                    "type": "assignment",
                    "label": "punctuation = punctuation.replace('()', '')",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "punctuation",
                            "children": []
                        },
                        {
                            "type": "call",
                            "label": "punctuation.replace('()', '')",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "punctuation.replace",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "punctuation",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "replace",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "label": "('()', '')",
                                    "children": [
                                        {
                                            "type": "string",
                                            "label": "'()'",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "'",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "()",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "'",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "string",
                                            "label": "''",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "'",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "'",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "expression_statement",
            "label": "anchor = '###'",
            "children": [
                {
                    "type": "assignment",
                    "label": "anchor = '###'",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "anchor",
                            "children": []
                        },
                        {
                            "type": "string",
                            "label": "'###'",
                            "children": [
                                {
                                    "type": "string_start",
                                    "label": "'",
                                    "children": []
                                },
                                {
                                    "type": "string_content",
                                    "label": "###",
                                    "children": []
                                },
                                {
                                    "type": "string_end",
                                    "label": "'",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "expression_statement",
            "label": "auth_keys = ['apiKey', 'OAuth', 'X-Mashape-Key', 'User-Agent', 'No']",
            "children": [
                {
                    "type": "assignment",
                    "label": "auth_keys = ['apiKey', 'OAuth', 'X-Mashape-Key', 'User-Agent', 'No']",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "auth_keys",
                            "children": []
                        },
                        {
                            "type": "list",
                            "label": "['apiKey', 'OAuth', 'X-Mashape-Key', 'User-Agent', 'No']",
                            "children": [
                                {
                                    "type": "string",
                                    "label": "'apiKey'",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "'",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "apiKey",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "'",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "string",
                                    "label": "'OAuth'",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "'",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "OAuth",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "'",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "string",
                                    "label": "'X-Mashape-Key'",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "'",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "X-Mashape-Key",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "'",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "string",
                                    "label": "'User-Agent'",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "'",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "User-Agent",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "'",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "string",
                                    "label": "'No'",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "'",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "No",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "'",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "expression_statement",
            "label": "https_keys = ['Yes', 'No']",
            "children": [
                {
                    "type": "assignment",
                    "label": "https_keys = ['Yes', 'No']",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "https_keys",
                            "children": []
                        },
                        {
                            "type": "list",
                            "label": "['Yes', 'No']",
                            "children": [
                                {
                                    "type": "string",
                                    "label": "'Yes'",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "'",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "Yes",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "'",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "string",
                                    "label": "'No'",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "'",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "No",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "'",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "expression_statement",
            "label": "cors_keys = ['Yes', 'No', 'Unknown']",
            "children": [
                {
                    "type": "assignment",
                    "label": "cors_keys = ['Yes', 'No', 'Unknown']",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "cors_keys",
                            "children": []
                        },
                        {
                            "type": "list",
                            "label": "['Yes', 'No', 'Unknown']",
                            "children": [
                                {
                                    "type": "string",
                                    "label": "'Yes'",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "'",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "Yes",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "'",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "string",
                                    "label": "'No'",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "'",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "No",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "'",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "string",
                                    "label": "'Unknown'",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "'",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "Unknown",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "'",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "expression_statement",
            "label": "index_title = 0",
            "children": [
                {
                    "type": "assignment",
                    "label": "index_title = 0",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "index_title",
                            "children": []
                        },
                        {
                            "type": "integer",
                            "label": "0",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "expression_statement",
            "label": "index_desc = 1",
            "children": [
                {
                    "type": "assignment",
                    "label": "index_desc = 1",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "index_desc",
                            "children": []
                        },
                        {
                            "type": "integer",
                            "label": "1",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "expression_statement",
            "label": "index_auth = 2",
            "children": [
                {
                    "type": "assignment",
                    "label": "index_auth = 2",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "index_auth",
                            "children": []
                        },
                        {
                            "type": "integer",
                            "label": "2",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "expression_statement",
            "label": "index_https = 3",
            "children": [
                {
                    "type": "assignment",
                    "label": "index_https = 3",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "index_https",
                            "children": []
                        },
                        {
                            "type": "integer",
                            "label": "3",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "expression_statement",
            "label": "index_cors = 4",
            "children": [
                {
                    "type": "assignment",
                    "label": "index_cors = 4",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "index_cors",
                            "children": []
                        },
                        {
                            "type": "integer",
                            "label": "4",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "expression_statement",
            "label": "num_segments = 5",
            "children": [
                {
                    "type": "assignment",
                    "label": "num_segments = 5",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "num_segments",
                            "children": []
                        },
                        {
                            "type": "integer",
                            "label": "5",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "expression_statement",
            "label": "min_entries_per_category = 3",
            "children": [
                {
                    "type": "assignment",
                    "label": "min_entries_per_category = 3",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "min_entries_per_category",
                            "children": []
                        },
                        {
                            "type": "integer",
                            "label": "3",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "expression_statement",
            "label": "max_description_length = 100",
            "children": [
                {
                    "type": "assignment",
                    "label": "max_description_length = 100",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "max_description_length",
                            "children": []
                        },
                        {
                            "type": "integer",
                            "label": "100",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "expression_statement",
            "label": "anchor_re = re.compile(anchor + '\\s(.+)')",
            "children": [
                {
                    "type": "assignment",
                    "label": "anchor_re = re.compile(anchor + '\\s(.+)')",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "anchor_re",
                            "children": []
                        },
                        {
                            "type": "call",
                            "label": "re.compile(anchor + '\\s(.+)')",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "re.compile",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "re",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "compile",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(anchor + '\\s(.+)')",
                                    "children": [
                                        {
                                            "type": "binary_operator",
                                            "label": "anchor + '\\s(.+)'",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "anchor",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string",
                                                    "label": "'\\s(.+)'",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "'",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "\\s(.+)",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "'",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "expression_statement",
            "label": "category_title_in_index_re = re.compile('\\*\\s\\[(.*)\\]')",
            "children": [
                {
                    "type": "assignment",
                    "label": "category_title_in_index_re = re.compile('\\*\\s\\[(.*)\\]')",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "category_title_in_index_re",
                            "children": []
                        },
                        {
                            "type": "call",
                            "label": "re.compile('\\*\\s\\[(.*)\\]')",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "re.compile",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "re",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "compile",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "label": "('\\*\\s\\[(.*)\\]')",
                                    "children": [
                                        {
                                            "type": "string",
                                            "label": "'\\*\\s\\[(.*)\\]'",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "'",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "\\*\\s\\[(.*)\\]",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "'",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "expression_statement",
            "label": "link_re = re.compile('\\[(.+)\\]\\((http.*)\\)')",
            "children": [
                {
                    "type": "assignment",
                    "label": "link_re = re.compile('\\[(.+)\\]\\((http.*)\\)')",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "link_re",
                            "children": []
                        },
                        {
                            "type": "call",
                            "label": "re.compile('\\[(.+)\\]\\((http.*)\\)')",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "re.compile",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "re",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "compile",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "label": "('\\[(.+)\\]\\((http.*)\\)')",
                                    "children": [
                                        {
                                            "type": "string",
                                            "label": "'\\[(.+)\\]\\((http.*)\\)'",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "'",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "\\[(.+)\\]\\((http.*)\\)",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "'",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "comment",
            "label": "# Type aliases",
            "children": []
        },
        {
            "type": "expression_statement",
            "label": "APIList = List[str]",
            "children": [
                {
                    "type": "assignment",
                    "label": "APIList = List[str]",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "APIList",
                            "children": []
                        },
                        {
                            "type": "subscript",
                            "label": "List[str]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "List",
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "label": "str",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "expression_statement",
            "label": "Categories = Dict[str, APIList]",
            "children": [
                {
                    "type": "assignment",
                    "label": "Categories = Dict[str, APIList]",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Categories",
                            "children": []
                        },
                        {
                            "type": "subscript",
                            "label": "Dict[str, APIList]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "Dict",
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "label": "str",
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "label": "APIList",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "expression_statement",
            "label": "CategoriesLineNumber = Dict[str, int]",
            "children": [
                {
                    "type": "assignment",
                    "label": "CategoriesLineNumber = Dict[str, int]",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "CategoriesLineNumber",
                            "children": []
                        },
                        {
                            "type": "subscript",
                            "label": "Dict[str, int]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "Dict",
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "label": "str",
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "label": "int",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def error_message(line_number: int, message: str) -> str:\n    line = line_number + 1\n    return f'(L{line:03d}) {message}'",
            "children": [
                {
                    "type": "identifier",
                    "label": "error_message",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(line_number: int, message: str)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "line_number: int",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "line_number",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "int",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "int",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "message: str",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "message",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "str",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "str",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "str",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "line = line_number + 1\n    return f'(L{line:03d}) {message}'",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "line = line_number + 1",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "line = line_number + 1",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "line",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "line_number + 1",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "line_number",
                                                    "children": []
                                                },
                                                {
                                                    "type": "integer",
                                                    "label": "1",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return f'(L{line:03d}) {message}'",
                            "children": [
                                {
                                    "type": "string",
                                    "label": "f'(L{line:03d}) {message}'",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "f'",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "(L",
                                            "children": []
                                        },
                                        {
                                            "type": "interpolation",
                                            "label": "{line:03d}",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "line",
                                                    "children": []
                                                },
                                                {
                                                    "type": "format_specifier",
                                                    "label": ":03d",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "string_content",
                                            "label": ") ",
                                            "children": []
                                        },
                                        {
                                            "type": "interpolation",
                                            "label": "{message}",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "message",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "'",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def get_categories_content(contents: List[str]) -> Tuple[Categories, CategoriesLineNumber]:\n\n    categories = {}\n    category_line_num = {}\n\n    for line_num, line_content in enumerate(contents):\n\n        if line_content.startswith(anchor):\n            category = line_content.split(anchor)[1].strip()\n            categories[category] = []\n            category_line_num[category] = line_num\n            continue\n\n        if not line_content.startswith('|') or line_content.startswith('|---'):\n            continue\n\n        raw_title = [\n            raw_content.strip() for raw_content in line_content.split('|')[1:-1]\n        ][0]\n\n        title_match = link_re.match(raw_title)\n        if title_match:\n                title = title_match.group(1).upper()\n                categories[category].append(title)\n\n    return (categories, category_line_num)",
            "children": [
                {
                    "type": "identifier",
                    "label": "get_categories_content",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(contents: List[str])",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "contents: List[str]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "contents",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "List[str]",
                                    "children": [
                                        {
                                            "type": "generic_type",
                                            "label": "List[str]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "List",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type_parameter",
                                                    "label": "[str]",
                                                    "children": [
                                                        {
                                                            "type": "type",
                                                            "label": "str",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "str",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "Tuple[Categories, CategoriesLineNumber]",
                    "children": [
                        {
                            "type": "generic_type",
                            "label": "Tuple[Categories, CategoriesLineNumber]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "Tuple",
                                    "children": []
                                },
                                {
                                    "type": "type_parameter",
                                    "label": "[Categories, CategoriesLineNumber]",
                                    "children": [
                                        {
                                            "type": "type",
                                            "label": "Categories",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "Categories",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "type",
                                            "label": "CategoriesLineNumber",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "CategoriesLineNumber",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "categories = {}\n    category_line_num = {}\n\n    for line_num, line_content in enumerate(contents):\n\n        if line_content.startswith(anchor):\n            category = line_content.split(anchor)[1].strip()\n            categories[category] = []\n            category_line_num[category] = line_num\n            continue\n\n        if not line_content.startswith('|') or line_content.startswith('|---'):\n            continue\n\n        raw_title = [\n            raw_content.strip() for raw_content in line_content.split('|')[1:-1]\n        ][0]\n\n        title_match = link_re.match(raw_title)\n        if title_match:\n                title = title_match.group(1).upper()\n                categories[category].append(title)\n\n    return (categories, category_line_num)",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "categories = {}",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "categories = {}",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "categories",
                                            "children": []
                                        },
                                        {
                                            "type": "dictionary",
                                            "label": "{}",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "category_line_num = {}",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "category_line_num = {}",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "category_line_num",
                                            "children": []
                                        },
                                        {
                                            "type": "dictionary",
                                            "label": "{}",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "for_statement",
                            "label": "for line_num, line_content in enumerate(contents):\n\n        if line_content.startswith(anchor):\n            category = line_content.split(anchor)[1].strip()\n            categories[category] = []\n            category_line_num[category] = line_num\n            continue\n\n        if not line_content.startswith('|') or line_content.startswith('|---'):\n            continue\n\n        raw_title = [\n            raw_content.strip() for raw_content in line_content.split('|')[1:-1]\n        ][0]\n\n        title_match = link_re.match(raw_title)\n        if title_match:\n                title = title_match.group(1).upper()\n                categories[category].append(title)",
                            "children": [
                                {
                                    "type": "pattern_list",
                                    "label": "line_num, line_content",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "line_num",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "line_content",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "call",
                                    "label": "enumerate(contents)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "enumerate",
                                            "children": []
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(contents)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "contents",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "if line_content.startswith(anchor):\n            category = line_content.split(anchor)[1].strip()\n            categories[category] = []\n            category_line_num[category] = line_num\n            continue\n\n        if not line_content.startswith('|') or line_content.startswith('|---'):\n            continue\n\n        raw_title = [\n            raw_content.strip() for raw_content in line_content.split('|')[1:-1]\n        ][0]\n\n        title_match = link_re.match(raw_title)\n        if title_match:\n                title = title_match.group(1).upper()\n                categories[category].append(title)",
                                    "children": [
                                        {
                                            "type": "if_statement",
                                            "label": "if line_content.startswith(anchor):\n            category = line_content.split(anchor)[1].strip()\n            categories[category] = []\n            category_line_num[category] = line_num\n            continue",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "line_content.startswith(anchor)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "line_content.startswith",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "line_content",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "startswith",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(anchor)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "anchor",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "category = line_content.split(anchor)[1].strip()\n            categories[category] = []\n            category_line_num[category] = line_num\n            continue",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "category = line_content.split(anchor)[1].strip()",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "label": "category = line_content.split(anchor)[1].strip()",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "category",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "call",
                                                                            "label": "line_content.split(anchor)[1].strip()",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "line_content.split(anchor)[1].strip",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "subscript",
                                                                                            "label": "line_content.split(anchor)[1]",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "call",
                                                                                                    "label": "line_content.split(anchor)",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "line_content.split",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "line_content",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "split",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "argument_list",
                                                                                                            "label": "(anchor)",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "anchor",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "integer",
                                                                                                    "label": "1",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "strip",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "()",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "categories[category] = []",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "label": "categories[category] = []",
                                                                    "children": [
                                                                        {
                                                                            "type": "subscript",
                                                                            "label": "categories[category]",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "categories",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "category",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "list",
                                                                            "label": "[]",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "category_line_num[category] = line_num",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "label": "category_line_num[category] = line_num",
                                                                    "children": [
                                                                        {
                                                                            "type": "subscript",
                                                                            "label": "category_line_num[category]",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "category_line_num",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "category",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "line_num",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "continue_statement",
                                                            "label": "continue",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "if_statement",
                                            "label": "if not line_content.startswith('|') or line_content.startswith('|---'):\n            continue",
                                            "children": [
                                                {
                                                    "type": "boolean_operator",
                                                    "label": "not line_content.startswith('|') or line_content.startswith('|---')",
                                                    "children": [
                                                        {
                                                            "type": "not_operator",
                                                            "label": "not line_content.startswith('|')",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "line_content.startswith('|')",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "line_content.startswith",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "line_content",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "startswith",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "('|')",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "'|'",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "'",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "|",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "'",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "line_content.startswith('|---')",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "line_content.startswith",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "line_content",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "startswith",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "('|---')",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "label": "'|---'",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "'",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "|---",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "'",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "continue",
                                                    "children": [
                                                        {
                                                            "type": "continue_statement",
                                                            "label": "continue",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "raw_title = [\n            raw_content.strip() for raw_content in line_content.split('|')[1:-1]\n        ][0]",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "raw_title = [\n            raw_content.strip() for raw_content in line_content.split('|')[1:-1]\n        ][0]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "raw_title",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "subscript",
                                                            "label": "[\n            raw_content.strip() for raw_content in line_content.split('|')[1:-1]\n        ][0]",
                                                            "children": [
                                                                {
                                                                    "type": "list_comprehension",
                                                                    "label": "[\n            raw_content.strip() for raw_content in line_content.split('|')[1:-1]\n        ]",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "raw_content.strip()",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "raw_content.strip",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "raw_content",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "strip",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "()",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "for_in_clause",
                                                                            "label": "for raw_content in line_content.split('|')[1:-1]",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "raw_content",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "subscript",
                                                                                    "label": "line_content.split('|')[1:-1]",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "call",
                                                                                            "label": "line_content.split('|')",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "line_content.split",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "line_content",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "split",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "argument_list",
                                                                                                    "label": "('|')",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string",
                                                                                                            "label": "'|'",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string_start",
                                                                                                                    "label": "'",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_content",
                                                                                                                    "label": "|",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_end",
                                                                                                                    "label": "'",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "slice",
                                                                                            "label": "1:-1",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "integer",
                                                                                                    "label": "1",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "unary_operator",
                                                                                                    "label": "-1",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "integer",
                                                                                                            "label": "1",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "integer",
                                                                    "label": "0",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "title_match = link_re.match(raw_title)",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "title_match = link_re.match(raw_title)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "title_match",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "link_re.match(raw_title)",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "link_re.match",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "link_re",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "match",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(raw_title)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "raw_title",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "if_statement",
                                            "label": "if title_match:\n                title = title_match.group(1).upper()\n                categories[category].append(title)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "title_match",
                                                    "children": []
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "title = title_match.group(1).upper()\n                categories[category].append(title)",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "title = title_match.group(1).upper()",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "label": "title = title_match.group(1).upper()",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "title",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "call",
                                                                            "label": "title_match.group(1).upper()",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "title_match.group(1).upper",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "call",
                                                                                            "label": "title_match.group(1)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "title_match.group",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "title_match",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "group",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "argument_list",
                                                                                                    "label": "(1)",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "integer",
                                                                                                            "label": "1",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "upper",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "()",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "categories[category].append(title)",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "categories[category].append(title)",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "categories[category].append",
                                                                            "children": [
                                                                                {
                                                                                    "type": "subscript",
                                                                                    "label": "categories[category]",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "categories",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "category",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "append",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(title)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "title",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return (categories, category_line_num)",
                            "children": [
                                {
                                    "type": "tuple",
                                    "label": "(categories, category_line_num)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "categories",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "category_line_num",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def check_alphabetical_order(lines: List[str]) -> List[str]:\n\n    err_msgs = []\n\n    categories, category_line_num = get_categories_content(contents=lines)\n\n    for category, api_list in categories.items():\n        if sorted(api_list) != api_list:\n            err_msg = error_message(\n                category_line_num[category], \n                f'{category} category is not alphabetical order'\n            )\n            err_msgs.append(err_msg)\n    \n    return err_msgs",
            "children": [
                {
                    "type": "identifier",
                    "label": "check_alphabetical_order",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(lines: List[str])",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "lines: List[str]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "lines",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "List[str]",
                                    "children": [
                                        {
                                            "type": "generic_type",
                                            "label": "List[str]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "List",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type_parameter",
                                                    "label": "[str]",
                                                    "children": [
                                                        {
                                                            "type": "type",
                                                            "label": "str",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "str",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "List[str]",
                    "children": [
                        {
                            "type": "generic_type",
                            "label": "List[str]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "List",
                                    "children": []
                                },
                                {
                                    "type": "type_parameter",
                                    "label": "[str]",
                                    "children": [
                                        {
                                            "type": "type",
                                            "label": "str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "err_msgs = []\n\n    categories, category_line_num = get_categories_content(contents=lines)\n\n    for category, api_list in categories.items():\n        if sorted(api_list) != api_list:\n            err_msg = error_message(\n                category_line_num[category], \n                f'{category} category is not alphabetical order'\n            )\n            err_msgs.append(err_msg)\n    \n    return err_msgs",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "err_msgs = []",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "err_msgs = []",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "err_msgs",
                                            "children": []
                                        },
                                        {
                                            "type": "list",
                                            "label": "[]",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "categories, category_line_num = get_categories_content(contents=lines)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "categories, category_line_num = get_categories_content(contents=lines)",
                                    "children": [
                                        {
                                            "type": "pattern_list",
                                            "label": "categories, category_line_num",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "categories",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "category_line_num",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "call",
                                            "label": "get_categories_content(contents=lines)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "get_categories_content",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(contents=lines)",
                                                    "children": [
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "contents=lines",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "contents",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "lines",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "for_statement",
                            "label": "for category, api_list in categories.items():\n        if sorted(api_list) != api_list:\n            err_msg = error_message(\n                category_line_num[category], \n                f'{category} category is not alphabetical order'\n            )\n            err_msgs.append(err_msg)",
                            "children": [
                                {
                                    "type": "pattern_list",
                                    "label": "category, api_list",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "category",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "api_list",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "call",
                                    "label": "categories.items()",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "categories.items",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "categories",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "items",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "()",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "if sorted(api_list) != api_list:\n            err_msg = error_message(\n                category_line_num[category], \n                f'{category} category is not alphabetical order'\n            )\n            err_msgs.append(err_msg)",
                                    "children": [
                                        {
                                            "type": "if_statement",
                                            "label": "if sorted(api_list) != api_list:\n            err_msg = error_message(\n                category_line_num[category], \n                f'{category} category is not alphabetical order'\n            )\n            err_msgs.append(err_msg)",
                                            "children": [
                                                {
                                                    "type": "comparison_operator",
                                                    "label": "sorted(api_list) != api_list",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "sorted(api_list)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "sorted",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(api_list)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "api_list",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "api_list",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "err_msg = error_message(\n                category_line_num[category], \n                f'{category} category is not alphabetical order'\n            )\n            err_msgs.append(err_msg)",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "err_msg = error_message(\n                category_line_num[category], \n                f'{category} category is not alphabetical order'\n            )",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "label": "err_msg = error_message(\n                category_line_num[category], \n                f'{category} category is not alphabetical order'\n            )",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "err_msg",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "call",
                                                                            "label": "error_message(\n                category_line_num[category], \n                f'{category} category is not alphabetical order'\n            )",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "error_message",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(\n                category_line_num[category], \n                f'{category} category is not alphabetical order'\n            )",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "subscript",
                                                                                            "label": "category_line_num[category]",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "category_line_num",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "category",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "f'{category} category is not alphabetical order'",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "f'",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "interpolation",
                                                                                                    "label": "{category}",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "category",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": " category is not alphabetical order",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "'",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "err_msgs.append(err_msg)",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "err_msgs.append(err_msg)",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "err_msgs.append",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "err_msgs",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "append",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(err_msg)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "err_msg",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return err_msgs",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "err_msgs",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def check_title(line_num: int, raw_title: str) -> List[str]:\n\n    err_msgs = []\n\n    title_match = link_re.match(raw_title)\n\n    # url should be wrapped in \"[TITLE](LINK)\" Markdown syntax\n    if not title_match:\n        err_msg = error_message(line_num, 'Title syntax should be \"[TITLE](LINK)\"')\n        err_msgs.append(err_msg)\n    else:\n        # do not allow \"... API\" in the entry title\n        title = title_match.group(1)\n        if title.upper().endswith(' API'):\n            err_msg = error_message(line_num, 'Title should not end with \"... API\". Every entry is an API here!')\n            err_msgs.append(err_msg)\n\n    return err_msgs",
            "children": [
                {
                    "type": "identifier",
                    "label": "check_title",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(line_num: int, raw_title: str)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "line_num: int",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "line_num",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "int",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "int",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "raw_title: str",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "raw_title",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "str",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "List[str]",
                    "children": [
                        {
                            "type": "generic_type",
                            "label": "List[str]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "List",
                                    "children": []
                                },
                                {
                                    "type": "type_parameter",
                                    "label": "[str]",
                                    "children": [
                                        {
                                            "type": "type",
                                            "label": "str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "err_msgs = []\n\n    title_match = link_re.match(raw_title)\n\n    # url should be wrapped in \"[TITLE](LINK)\" Markdown syntax\n    if not title_match:\n        err_msg = error_message(line_num, 'Title syntax should be \"[TITLE](LINK)\"')\n        err_msgs.append(err_msg)\n    else:\n        # do not allow \"... API\" in the entry title\n        title = title_match.group(1)\n        if title.upper().endswith(' API'):\n            err_msg = error_message(line_num, 'Title should not end with \"... API\". Every entry is an API here!')\n            err_msgs.append(err_msg)\n\n    return err_msgs",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "err_msgs = []",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "err_msgs = []",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "err_msgs",
                                            "children": []
                                        },
                                        {
                                            "type": "list",
                                            "label": "[]",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "title_match = link_re.match(raw_title)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "title_match = link_re.match(raw_title)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "title_match",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "link_re.match(raw_title)",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "link_re.match",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "link_re",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "match",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(raw_title)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "raw_title",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "label": "# url should be wrapped in \"[TITLE](LINK)\" Markdown syntax",
                            "children": []
                        },
                        {
                            "type": "if_statement",
                            "label": "if not title_match:\n        err_msg = error_message(line_num, 'Title syntax should be \"[TITLE](LINK)\"')\n        err_msgs.append(err_msg)\n    else:\n        # do not allow \"... API\" in the entry title\n        title = title_match.group(1)\n        if title.upper().endswith(' API'):\n            err_msg = error_message(line_num, 'Title should not end with \"... API\". Every entry is an API here!')\n            err_msgs.append(err_msg)",
                            "children": [
                                {
                                    "type": "not_operator",
                                    "label": "not title_match",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "title_match",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "err_msg = error_message(line_num, 'Title syntax should be \"[TITLE](LINK)\"')\n        err_msgs.append(err_msg)",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "err_msg = error_message(line_num, 'Title syntax should be \"[TITLE](LINK)\"')",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "err_msg = error_message(line_num, 'Title syntax should be \"[TITLE](LINK)\"')",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "err_msg",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "error_message(line_num, 'Title syntax should be \"[TITLE](LINK)\"')",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "error_message",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(line_num, 'Title syntax should be \"[TITLE](LINK)\"')",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "line_num",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "label": "'Title syntax should be \"[TITLE](LINK)\"'",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "'",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "Title syntax should be \"[TITLE](LINK)\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "'",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "err_msgs.append(err_msg)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "err_msgs.append(err_msg)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "err_msgs.append",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "err_msgs",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "append",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(err_msg)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "err_msg",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "else_clause",
                                    "label": "else:\n        # do not allow \"... API\" in the entry title\n        title = title_match.group(1)\n        if title.upper().endswith(' API'):\n            err_msg = error_message(line_num, 'Title should not end with \"... API\". Every entry is an API here!')\n            err_msgs.append(err_msg)",
                                    "children": [
                                        {
                                            "type": "comment",
                                            "label": "# do not allow \"... API\" in the entry title",
                                            "children": []
                                        },
                                        {
                                            "type": "block",
                                            "label": "title = title_match.group(1)\n        if title.upper().endswith(' API'):\n            err_msg = error_message(line_num, 'Title should not end with \"... API\". Every entry is an API here!')\n            err_msgs.append(err_msg)",
                                            "children": [
                                                {
                                                    "type": "expression_statement",
                                                    "label": "title = title_match.group(1)",
                                                    "children": [
                                                        {
                                                            "type": "assignment",
                                                            "label": "title = title_match.group(1)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "title",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "call",
                                                                    "label": "title_match.group(1)",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "title_match.group",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "title_match",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "group",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(1)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "integer",
                                                                                    "label": "1",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "if_statement",
                                                    "label": "if title.upper().endswith(' API'):\n            err_msg = error_message(line_num, 'Title should not end with \"... API\". Every entry is an API here!')\n            err_msgs.append(err_msg)",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "title.upper().endswith(' API')",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "title.upper().endswith",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "title.upper()",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "title.upper",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "title",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "upper",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "()",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "endswith",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(' API')",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "label": "' API'",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "'",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": " API",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "'",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "block",
                                                            "label": "err_msg = error_message(line_num, 'Title should not end with \"... API\". Every entry is an API here!')\n            err_msgs.append(err_msg)",
                                                            "children": [
                                                                {
                                                                    "type": "expression_statement",
                                                                    "label": "err_msg = error_message(line_num, 'Title should not end with \"... API\". Every entry is an API here!')",
                                                                    "children": [
                                                                        {
                                                                            "type": "assignment",
                                                                            "label": "err_msg = error_message(line_num, 'Title should not end with \"... API\". Every entry is an API here!')",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "err_msg",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "error_message(line_num, 'Title should not end with \"... API\". Every entry is an API here!')",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "error_message",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "(line_num, 'Title should not end with \"... API\". Every entry is an API here!')",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "line_num",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "'Title should not end with \"... API\". Every entry is an API here!'",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "'",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "Title should not end with \"... API\". Every entry is an API here!",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "'",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "expression_statement",
                                                                    "label": "err_msgs.append(err_msg)",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "err_msgs.append(err_msg)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "err_msgs.append",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "err_msgs",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "append",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(err_msg)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "err_msg",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return err_msgs",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "err_msgs",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def check_description(line_num: int, description: str) -> List[str]:\n\n    err_msgs = []\n\n    first_char = description[0]\n    if first_char.upper() != first_char:\n        err_msg = error_message(line_num, 'first character of description is not capitalized')\n        err_msgs.append(err_msg)\n\n    last_char = description[-1]\n    if last_char in punctuation:\n        err_msg = error_message(line_num, f'description should not end with {last_char}')\n        err_msgs.append(err_msg)\n\n    desc_length = len(description)\n    if desc_length > max_description_length:\n        err_msg = error_message(line_num, f'description should not exceed {max_description_length} characters (currently {desc_length})')\n        err_msgs.append(err_msg)\n    \n    return err_msgs",
            "children": [
                {
                    "type": "identifier",
                    "label": "check_description",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(line_num: int, description: str)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "line_num: int",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "line_num",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "int",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "int",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "description: str",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "description",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "str",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "List[str]",
                    "children": [
                        {
                            "type": "generic_type",
                            "label": "List[str]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "List",
                                    "children": []
                                },
                                {
                                    "type": "type_parameter",
                                    "label": "[str]",
                                    "children": [
                                        {
                                            "type": "type",
                                            "label": "str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "err_msgs = []\n\n    first_char = description[0]\n    if first_char.upper() != first_char:\n        err_msg = error_message(line_num, 'first character of description is not capitalized')\n        err_msgs.append(err_msg)\n\n    last_char = description[-1]\n    if last_char in punctuation:\n        err_msg = error_message(line_num, f'description should not end with {last_char}')\n        err_msgs.append(err_msg)\n\n    desc_length = len(description)\n    if desc_length > max_description_length:\n        err_msg = error_message(line_num, f'description should not exceed {max_description_length} characters (currently {desc_length})')\n        err_msgs.append(err_msg)\n    \n    return err_msgs",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "err_msgs = []",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "err_msgs = []",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "err_msgs",
                                            "children": []
                                        },
                                        {
                                            "type": "list",
                                            "label": "[]",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "first_char = description[0]",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "first_char = description[0]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "first_char",
                                            "children": []
                                        },
                                        {
                                            "type": "subscript",
                                            "label": "description[0]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "description",
                                                    "children": []
                                                },
                                                {
                                                    "type": "integer",
                                                    "label": "0",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "if_statement",
                            "label": "if first_char.upper() != first_char:\n        err_msg = error_message(line_num, 'first character of description is not capitalized')\n        err_msgs.append(err_msg)",
                            "children": [
                                {
                                    "type": "comparison_operator",
                                    "label": "first_char.upper() != first_char",
                                    "children": [
                                        {
                                            "type": "call",
                                            "label": "first_char.upper()",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "first_char.upper",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "first_char",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "upper",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "()",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "first_char",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "err_msg = error_message(line_num, 'first character of description is not capitalized')\n        err_msgs.append(err_msg)",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "err_msg = error_message(line_num, 'first character of description is not capitalized')",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "err_msg = error_message(line_num, 'first character of description is not capitalized')",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "err_msg",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "error_message(line_num, 'first character of description is not capitalized')",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "error_message",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(line_num, 'first character of description is not capitalized')",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "line_num",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "label": "'first character of description is not capitalized'",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "'",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "first character of description is not capitalized",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "'",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "err_msgs.append(err_msg)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "err_msgs.append(err_msg)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "err_msgs.append",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "err_msgs",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "append",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(err_msg)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "err_msg",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "last_char = description[-1]",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "last_char = description[-1]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "last_char",
                                            "children": []
                                        },
                                        {
                                            "type": "subscript",
                                            "label": "description[-1]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "description",
                                                    "children": []
                                                },
                                                {
                                                    "type": "unary_operator",
                                                    "label": "-1",
                                                    "children": [
                                                        {
                                                            "type": "integer",
                                                            "label": "1",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "if_statement",
                            "label": "if last_char in punctuation:\n        err_msg = error_message(line_num, f'description should not end with {last_char}')\n        err_msgs.append(err_msg)",
                            "children": [
                                {
                                    "type": "comparison_operator",
                                    "label": "last_char in punctuation",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "last_char",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "punctuation",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "err_msg = error_message(line_num, f'description should not end with {last_char}')\n        err_msgs.append(err_msg)",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "err_msg = error_message(line_num, f'description should not end with {last_char}')",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "err_msg = error_message(line_num, f'description should not end with {last_char}')",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "err_msg",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "error_message(line_num, f'description should not end with {last_char}')",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "error_message",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(line_num, f'description should not end with {last_char}')",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "line_num",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "label": "f'description should not end with {last_char}'",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "f'",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "description should not end with ",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "interpolation",
                                                                                    "label": "{last_char}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "last_char",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "'",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "err_msgs.append(err_msg)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "err_msgs.append(err_msg)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "err_msgs.append",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "err_msgs",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "append",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(err_msg)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "err_msg",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "desc_length = len(description)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "desc_length = len(description)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "desc_length",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "len(description)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "len",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(description)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "description",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "if_statement",
                            "label": "if desc_length > max_description_length:\n        err_msg = error_message(line_num, f'description should not exceed {max_description_length} characters (currently {desc_length})')\n        err_msgs.append(err_msg)",
                            "children": [
                                {
                                    "type": "comparison_operator",
                                    "label": "desc_length > max_description_length",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "desc_length",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "max_description_length",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "err_msg = error_message(line_num, f'description should not exceed {max_description_length} characters (currently {desc_length})')\n        err_msgs.append(err_msg)",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "err_msg = error_message(line_num, f'description should not exceed {max_description_length} characters (currently {desc_length})')",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "err_msg = error_message(line_num, f'description should not exceed {max_description_length} characters (currently {desc_length})')",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "err_msg",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "error_message(line_num, f'description should not exceed {max_description_length} characters (currently {desc_length})')",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "error_message",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(line_num, f'description should not exceed {max_description_length} characters (currently {desc_length})')",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "line_num",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "label": "f'description should not exceed {max_description_length} characters (currently {desc_length})'",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "f'",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "description should not exceed ",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "interpolation",
                                                                                    "label": "{max_description_length}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "max_description_length",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": " characters (currently ",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "interpolation",
                                                                                    "label": "{desc_length}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "desc_length",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": ")",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "'",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "err_msgs.append(err_msg)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "err_msgs.append(err_msg)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "err_msgs.append",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "err_msgs",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "append",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(err_msg)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "err_msg",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return err_msgs",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "err_msgs",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def check_auth(line_num: int, auth: str) -> List[str]:\n\n    err_msgs = []\n\n    backtick = '`'\n    if auth != 'No' and (not auth.startswith(backtick) or not auth.endswith(backtick)):\n        err_msg = error_message(line_num, 'auth value is not enclosed with `backticks`')\n        err_msgs.append(err_msg)\n\n    if auth.replace(backtick, '') not in auth_keys:\n        err_msg = error_message(line_num, f'{auth} is not a valid Auth option')\n        err_msgs.append(err_msg)\n    \n    return err_msgs",
            "children": [
                {
                    "type": "identifier",
                    "label": "check_auth",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(line_num: int, auth: str)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "line_num: int",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "line_num",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "int",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "int",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "auth: str",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "auth",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "str",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "List[str]",
                    "children": [
                        {
                            "type": "generic_type",
                            "label": "List[str]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "List",
                                    "children": []
                                },
                                {
                                    "type": "type_parameter",
                                    "label": "[str]",
                                    "children": [
                                        {
                                            "type": "type",
                                            "label": "str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "err_msgs = []\n\n    backtick = '`'\n    if auth != 'No' and (not auth.startswith(backtick) or not auth.endswith(backtick)):\n        err_msg = error_message(line_num, 'auth value is not enclosed with `backticks`')\n        err_msgs.append(err_msg)\n\n    if auth.replace(backtick, '') not in auth_keys:\n        err_msg = error_message(line_num, f'{auth} is not a valid Auth option')\n        err_msgs.append(err_msg)\n    \n    return err_msgs",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "err_msgs = []",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "err_msgs = []",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "err_msgs",
                                            "children": []
                                        },
                                        {
                                            "type": "list",
                                            "label": "[]",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "backtick = '`'",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "backtick = '`'",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "backtick",
                                            "children": []
                                        },
                                        {
                                            "type": "string",
                                            "label": "'`'",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "'",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "`",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "'",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "if_statement",
                            "label": "if auth != 'No' and (not auth.startswith(backtick) or not auth.endswith(backtick)):\n        err_msg = error_message(line_num, 'auth value is not enclosed with `backticks`')\n        err_msgs.append(err_msg)",
                            "children": [
                                {
                                    "type": "boolean_operator",
                                    "label": "auth != 'No' and (not auth.startswith(backtick) or not auth.endswith(backtick))",
                                    "children": [
                                        {
                                            "type": "comparison_operator",
                                            "label": "auth != 'No'",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "auth",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string",
                                                    "label": "'No'",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "'",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "No",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "'",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "parenthesized_expression",
                                            "label": "(not auth.startswith(backtick) or not auth.endswith(backtick))",
                                            "children": [
                                                {
                                                    "type": "boolean_operator",
                                                    "label": "not auth.startswith(backtick) or not auth.endswith(backtick)",
                                                    "children": [
                                                        {
                                                            "type": "not_operator",
                                                            "label": "not auth.startswith(backtick)",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "auth.startswith(backtick)",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "auth.startswith",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "auth",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "startswith",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(backtick)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "backtick",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "not_operator",
                                                            "label": "not auth.endswith(backtick)",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "auth.endswith(backtick)",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "auth.endswith",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "auth",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "endswith",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(backtick)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "backtick",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "err_msg = error_message(line_num, 'auth value is not enclosed with `backticks`')\n        err_msgs.append(err_msg)",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "err_msg = error_message(line_num, 'auth value is not enclosed with `backticks`')",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "err_msg = error_message(line_num, 'auth value is not enclosed with `backticks`')",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "err_msg",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "error_message(line_num, 'auth value is not enclosed with `backticks`')",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "error_message",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(line_num, 'auth value is not enclosed with `backticks`')",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "line_num",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "label": "'auth value is not enclosed with `backticks`'",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "'",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "auth value is not enclosed with `backticks`",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "'",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "err_msgs.append(err_msg)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "err_msgs.append(err_msg)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "err_msgs.append",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "err_msgs",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "append",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(err_msg)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "err_msg",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "if_statement",
                            "label": "if auth.replace(backtick, '') not in auth_keys:\n        err_msg = error_message(line_num, f'{auth} is not a valid Auth option')\n        err_msgs.append(err_msg)",
                            "children": [
                                {
                                    "type": "comparison_operator",
                                    "label": "auth.replace(backtick, '') not in auth_keys",
                                    "children": [
                                        {
                                            "type": "call",
                                            "label": "auth.replace(backtick, '')",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "auth.replace",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "auth",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "replace",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(backtick, '')",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "backtick",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string",
                                                            "label": "''",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "'",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "'",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "auth_keys",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "err_msg = error_message(line_num, f'{auth} is not a valid Auth option')\n        err_msgs.append(err_msg)",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "err_msg = error_message(line_num, f'{auth} is not a valid Auth option')",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "err_msg = error_message(line_num, f'{auth} is not a valid Auth option')",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "err_msg",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "error_message(line_num, f'{auth} is not a valid Auth option')",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "error_message",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(line_num, f'{auth} is not a valid Auth option')",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "line_num",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "label": "f'{auth} is not a valid Auth option'",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "f'",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "interpolation",
                                                                                    "label": "{auth}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "auth",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": " is not a valid Auth option",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "'",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "err_msgs.append(err_msg)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "err_msgs.append(err_msg)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "err_msgs.append",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "err_msgs",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "append",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(err_msg)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "err_msg",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return err_msgs",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "err_msgs",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def check_https(line_num: int, https: str) -> List[str]:\n\n    err_msgs = []\n\n    if https not in https_keys:\n        err_msg = error_message(line_num, f'{https} is not a valid HTTPS option')\n        err_msgs.append(err_msg)\n\n    return err_msgs",
            "children": [
                {
                    "type": "identifier",
                    "label": "check_https",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(line_num: int, https: str)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "line_num: int",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "line_num",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "int",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "int",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "https: str",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "https",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "str",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "List[str]",
                    "children": [
                        {
                            "type": "generic_type",
                            "label": "List[str]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "List",
                                    "children": []
                                },
                                {
                                    "type": "type_parameter",
                                    "label": "[str]",
                                    "children": [
                                        {
                                            "type": "type",
                                            "label": "str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "err_msgs = []\n\n    if https not in https_keys:\n        err_msg = error_message(line_num, f'{https} is not a valid HTTPS option')\n        err_msgs.append(err_msg)\n\n    return err_msgs",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "err_msgs = []",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "err_msgs = []",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "err_msgs",
                                            "children": []
                                        },
                                        {
                                            "type": "list",
                                            "label": "[]",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "if_statement",
                            "label": "if https not in https_keys:\n        err_msg = error_message(line_num, f'{https} is not a valid HTTPS option')\n        err_msgs.append(err_msg)",
                            "children": [
                                {
                                    "type": "comparison_operator",
                                    "label": "https not in https_keys",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "https",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "https_keys",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "err_msg = error_message(line_num, f'{https} is not a valid HTTPS option')\n        err_msgs.append(err_msg)",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "err_msg = error_message(line_num, f'{https} is not a valid HTTPS option')",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "err_msg = error_message(line_num, f'{https} is not a valid HTTPS option')",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "err_msg",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "error_message(line_num, f'{https} is not a valid HTTPS option')",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "error_message",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(line_num, f'{https} is not a valid HTTPS option')",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "line_num",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "label": "f'{https} is not a valid HTTPS option'",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "f'",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "interpolation",
                                                                                    "label": "{https}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "https",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": " is not a valid HTTPS option",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "'",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "err_msgs.append(err_msg)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "err_msgs.append(err_msg)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "err_msgs.append",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "err_msgs",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "append",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(err_msg)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "err_msg",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return err_msgs",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "err_msgs",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def check_cors(line_num: int, cors: str) -> List[str]:\n\n    err_msgs = []\n\n    if cors not in cors_keys:\n        err_msg = error_message(line_num, f'{cors} is not a valid CORS option')\n        err_msgs.append(err_msg)\n    \n    return err_msgs",
            "children": [
                {
                    "type": "identifier",
                    "label": "check_cors",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(line_num: int, cors: str)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "line_num: int",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "line_num",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "int",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "int",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "cors: str",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "cors",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "str",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "List[str]",
                    "children": [
                        {
                            "type": "generic_type",
                            "label": "List[str]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "List",
                                    "children": []
                                },
                                {
                                    "type": "type_parameter",
                                    "label": "[str]",
                                    "children": [
                                        {
                                            "type": "type",
                                            "label": "str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "err_msgs = []\n\n    if cors not in cors_keys:\n        err_msg = error_message(line_num, f'{cors} is not a valid CORS option')\n        err_msgs.append(err_msg)\n    \n    return err_msgs",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "err_msgs = []",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "err_msgs = []",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "err_msgs",
                                            "children": []
                                        },
                                        {
                                            "type": "list",
                                            "label": "[]",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "if_statement",
                            "label": "if cors not in cors_keys:\n        err_msg = error_message(line_num, f'{cors} is not a valid CORS option')\n        err_msgs.append(err_msg)",
                            "children": [
                                {
                                    "type": "comparison_operator",
                                    "label": "cors not in cors_keys",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "cors",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "cors_keys",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "err_msg = error_message(line_num, f'{cors} is not a valid CORS option')\n        err_msgs.append(err_msg)",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "err_msg = error_message(line_num, f'{cors} is not a valid CORS option')",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "err_msg = error_message(line_num, f'{cors} is not a valid CORS option')",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "err_msg",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "error_message(line_num, f'{cors} is not a valid CORS option')",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "error_message",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(line_num, f'{cors} is not a valid CORS option')",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "line_num",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "label": "f'{cors} is not a valid CORS option'",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "f'",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "interpolation",
                                                                                    "label": "{cors}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "cors",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": " is not a valid CORS option",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "'",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "err_msgs.append(err_msg)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "err_msgs.append(err_msg)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "err_msgs.append",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "err_msgs",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "append",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(err_msg)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "err_msg",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return err_msgs",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "err_msgs",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def check_entry(line_num: int, segments: List[str]) -> List[str]:\n\n    raw_title = segments[index_title]\n    description = segments[index_desc]\n    auth = segments[index_auth]\n    https = segments[index_https]\n    cors = segments[index_cors]\n\n    title_err_msgs = check_title(line_num, raw_title)\n    desc_err_msgs = check_description(line_num, description)\n    auth_err_msgs = check_auth(line_num, auth)\n    https_err_msgs = check_https(line_num, https)\n    cors_err_msgs = check_cors(line_num, cors)\n\n    err_msgs = [\n        *title_err_msgs,\n        *desc_err_msgs,\n        *auth_err_msgs,\n        *https_err_msgs,\n        *cors_err_msgs\n    ]\n\n    return err_msgs",
            "children": [
                {
                    "type": "identifier",
                    "label": "check_entry",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(line_num: int, segments: List[str])",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "line_num: int",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "line_num",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "int",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "int",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "segments: List[str]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "segments",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "List[str]",
                                    "children": [
                                        {
                                            "type": "generic_type",
                                            "label": "List[str]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "List",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type_parameter",
                                                    "label": "[str]",
                                                    "children": [
                                                        {
                                                            "type": "type",
                                                            "label": "str",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "str",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "List[str]",
                    "children": [
                        {
                            "type": "generic_type",
                            "label": "List[str]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "List",
                                    "children": []
                                },
                                {
                                    "type": "type_parameter",
                                    "label": "[str]",
                                    "children": [
                                        {
                                            "type": "type",
                                            "label": "str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "raw_title = segments[index_title]\n    description = segments[index_desc]\n    auth = segments[index_auth]\n    https = segments[index_https]\n    cors = segments[index_cors]\n\n    title_err_msgs = check_title(line_num, raw_title)\n    desc_err_msgs = check_description(line_num, description)\n    auth_err_msgs = check_auth(line_num, auth)\n    https_err_msgs = check_https(line_num, https)\n    cors_err_msgs = check_cors(line_num, cors)\n\n    err_msgs = [\n        *title_err_msgs,\n        *desc_err_msgs,\n        *auth_err_msgs,\n        *https_err_msgs,\n        *cors_err_msgs\n    ]\n\n    return err_msgs",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "raw_title = segments[index_title]",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "raw_title = segments[index_title]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "raw_title",
                                            "children": []
                                        },
                                        {
                                            "type": "subscript",
                                            "label": "segments[index_title]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "segments",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "index_title",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "description = segments[index_desc]",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "description = segments[index_desc]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "description",
                                            "children": []
                                        },
                                        {
                                            "type": "subscript",
                                            "label": "segments[index_desc]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "segments",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "index_desc",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "auth = segments[index_auth]",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "auth = segments[index_auth]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "auth",
                                            "children": []
                                        },
                                        {
                                            "type": "subscript",
                                            "label": "segments[index_auth]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "segments",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "index_auth",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "https = segments[index_https]",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "https = segments[index_https]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "https",
                                            "children": []
                                        },
                                        {
                                            "type": "subscript",
                                            "label": "segments[index_https]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "segments",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "index_https",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "cors = segments[index_cors]",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "cors = segments[index_cors]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "cors",
                                            "children": []
                                        },
                                        {
                                            "type": "subscript",
                                            "label": "segments[index_cors]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "segments",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "index_cors",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "title_err_msgs = check_title(line_num, raw_title)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "title_err_msgs = check_title(line_num, raw_title)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "title_err_msgs",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "check_title(line_num, raw_title)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "check_title",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(line_num, raw_title)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "line_num",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "raw_title",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "desc_err_msgs = check_description(line_num, description)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "desc_err_msgs = check_description(line_num, description)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "desc_err_msgs",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "check_description(line_num, description)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "check_description",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(line_num, description)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "line_num",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "description",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "auth_err_msgs = check_auth(line_num, auth)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "auth_err_msgs = check_auth(line_num, auth)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "auth_err_msgs",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "check_auth(line_num, auth)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "check_auth",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(line_num, auth)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "line_num",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "auth",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "https_err_msgs = check_https(line_num, https)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "https_err_msgs = check_https(line_num, https)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "https_err_msgs",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "check_https(line_num, https)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "check_https",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(line_num, https)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "line_num",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "https",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "cors_err_msgs = check_cors(line_num, cors)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "cors_err_msgs = check_cors(line_num, cors)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "cors_err_msgs",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "check_cors(line_num, cors)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "check_cors",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(line_num, cors)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "line_num",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "cors",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "err_msgs = [\n        *title_err_msgs,\n        *desc_err_msgs,\n        *auth_err_msgs,\n        *https_err_msgs,\n        *cors_err_msgs\n    ]",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "err_msgs = [\n        *title_err_msgs,\n        *desc_err_msgs,\n        *auth_err_msgs,\n        *https_err_msgs,\n        *cors_err_msgs\n    ]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "err_msgs",
                                            "children": []
                                        },
                                        {
                                            "type": "list",
                                            "label": "[\n        *title_err_msgs,\n        *desc_err_msgs,\n        *auth_err_msgs,\n        *https_err_msgs,\n        *cors_err_msgs\n    ]",
                                            "children": [
                                                {
                                                    "type": "list_splat",
                                                    "label": "*title_err_msgs",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "title_err_msgs",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "list_splat",
                                                    "label": "*desc_err_msgs",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "desc_err_msgs",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "list_splat",
                                                    "label": "*auth_err_msgs",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "auth_err_msgs",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "list_splat",
                                                    "label": "*https_err_msgs",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "https_err_msgs",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "list_splat",
                                                    "label": "*cors_err_msgs",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "cors_err_msgs",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return err_msgs",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "err_msgs",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def check_file_format(lines: List[str]) -> List[str]:\n\n    err_msgs = []\n    category_title_in_index = []\n\n    alphabetical_err_msgs = check_alphabetical_order(lines)\n    err_msgs.extend(alphabetical_err_msgs)\n\n    num_in_category = min_entries_per_category + 1\n    category = ''\n    category_line = 0\n\n    for line_num, line_content in enumerate(lines):\n\n        category_title_match = category_title_in_index_re.match(line_content)\n        if category_title_match:\n            category_title_in_index.append(category_title_match.group(1))\n\n        # check each category for the minimum number of entries\n        if line_content.startswith(anchor):\n            category_match = anchor_re.match(line_content)\n            if category_match:\n                if category_match.group(1) not in category_title_in_index:\n                    err_msg = error_message(line_num, f'category header ({category_match.group(1)}) not added to Index section')\n                    err_msgs.append(err_msg)\n            else:\n                err_msg = error_message(line_num, 'category header is not formatted correctly')\n                err_msgs.append(err_msg)\n\n            if num_in_category < min_entries_per_category:\n                err_msg = error_message(category_line, f'{category} category does not have the minimum {min_entries_per_category} entries (only has {num_in_category})')\n                err_msgs.append(err_msg)\n\n            category = line_content.split(' ')[1]\n            category_line = line_num\n            num_in_category = 0\n            continue\n\n        # skips lines that we do not care about\n        if not line_content.startswith('|') or line_content.startswith('|---'):\n            continue\n\n        num_in_category += 1\n        segments = line_content.split('|')[1:-1]\n        if len(segments) < num_segments:\n            err_msg = error_message(line_num, f'entry does not have all the required columns (have {len(segments)}, need {num_segments})')\n            err_msgs.append(err_msg)\n            continue\n    \n        for segment in segments:\n            # every line segment should start and end with exactly 1 space\n            if len(segment) - len(segment.lstrip()) != 1 or len(segment) - len(segment.rstrip()) != 1:\n                err_msg = error_message(line_num, 'each segment must start and end with exactly 1 space')\n                err_msgs.append(err_msg)\n        \n        segments = [segment.strip() for segment in segments]\n        entry_err_msgs = check_entry(line_num, segments)\n        err_msgs.extend(entry_err_msgs)\n    \n    return err_msgs",
            "children": [
                {
                    "type": "identifier",
                    "label": "check_file_format",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(lines: List[str])",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "lines: List[str]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "lines",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "List[str]",
                                    "children": [
                                        {
                                            "type": "generic_type",
                                            "label": "List[str]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "List",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type_parameter",
                                                    "label": "[str]",
                                                    "children": [
                                                        {
                                                            "type": "type",
                                                            "label": "str",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "str",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "List[str]",
                    "children": [
                        {
                            "type": "generic_type",
                            "label": "List[str]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "List",
                                    "children": []
                                },
                                {
                                    "type": "type_parameter",
                                    "label": "[str]",
                                    "children": [
                                        {
                                            "type": "type",
                                            "label": "str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "err_msgs = []\n    category_title_in_index = []\n\n    alphabetical_err_msgs = check_alphabetical_order(lines)\n    err_msgs.extend(alphabetical_err_msgs)\n\n    num_in_category = min_entries_per_category + 1\n    category = ''\n    category_line = 0\n\n    for line_num, line_content in enumerate(lines):\n\n        category_title_match = category_title_in_index_re.match(line_content)\n        if category_title_match:\n            category_title_in_index.append(category_title_match.group(1))\n\n        # check each category for the minimum number of entries\n        if line_content.startswith(anchor):\n            category_match = anchor_re.match(line_content)\n            if category_match:\n                if category_match.group(1) not in category_title_in_index:\n                    err_msg = error_message(line_num, f'category header ({category_match.group(1)}) not added to Index section')\n                    err_msgs.append(err_msg)\n            else:\n                err_msg = error_message(line_num, 'category header is not formatted correctly')\n                err_msgs.append(err_msg)\n\n            if num_in_category < min_entries_per_category:\n                err_msg = error_message(category_line, f'{category} category does not have the minimum {min_entries_per_category} entries (only has {num_in_category})')\n                err_msgs.append(err_msg)\n\n            category = line_content.split(' ')[1]\n            category_line = line_num\n            num_in_category = 0\n            continue\n\n        # skips lines that we do not care about\n        if not line_content.startswith('|') or line_content.startswith('|---'):\n            continue\n\n        num_in_category += 1\n        segments = line_content.split('|')[1:-1]\n        if len(segments) < num_segments:\n            err_msg = error_message(line_num, f'entry does not have all the required columns (have {len(segments)}, need {num_segments})')\n            err_msgs.append(err_msg)\n            continue\n    \n        for segment in segments:\n            # every line segment should start and end with exactly 1 space\n            if len(segment) - len(segment.lstrip()) != 1 or len(segment) - len(segment.rstrip()) != 1:\n                err_msg = error_message(line_num, 'each segment must start and end with exactly 1 space')\n                err_msgs.append(err_msg)\n        \n        segments = [segment.strip() for segment in segments]\n        entry_err_msgs = check_entry(line_num, segments)\n        err_msgs.extend(entry_err_msgs)\n    \n    return err_msgs",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "err_msgs = []",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "err_msgs = []",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "err_msgs",
                                            "children": []
                                        },
                                        {
                                            "type": "list",
                                            "label": "[]",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "category_title_in_index = []",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "category_title_in_index = []",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "category_title_in_index",
                                            "children": []
                                        },
                                        {
                                            "type": "list",
                                            "label": "[]",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "alphabetical_err_msgs = check_alphabetical_order(lines)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "alphabetical_err_msgs = check_alphabetical_order(lines)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "alphabetical_err_msgs",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "check_alphabetical_order(lines)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "check_alphabetical_order",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(lines)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "lines",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "err_msgs.extend(alphabetical_err_msgs)",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "err_msgs.extend(alphabetical_err_msgs)",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "err_msgs.extend",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "err_msgs",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "extend",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(alphabetical_err_msgs)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "alphabetical_err_msgs",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "num_in_category = min_entries_per_category + 1",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "num_in_category = min_entries_per_category + 1",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "num_in_category",
                                            "children": []
                                        },
                                        {
                                            "type": "binary_operator",
                                            "label": "min_entries_per_category + 1",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "min_entries_per_category",
                                                    "children": []
                                                },
                                                {
                                                    "type": "integer",
                                                    "label": "1",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "category = ''",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "category = ''",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "category",
                                            "children": []
                                        },
                                        {
                                            "type": "string",
                                            "label": "''",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "'",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "'",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "category_line = 0",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "category_line = 0",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "category_line",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "0",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "for_statement",
                            "label": "for line_num, line_content in enumerate(lines):\n\n        category_title_match = category_title_in_index_re.match(line_content)\n        if category_title_match:\n            category_title_in_index.append(category_title_match.group(1))\n\n        # check each category for the minimum number of entries\n        if line_content.startswith(anchor):\n            category_match = anchor_re.match(line_content)\n            if category_match:\n                if category_match.group(1) not in category_title_in_index:\n                    err_msg = error_message(line_num, f'category header ({category_match.group(1)}) not added to Index section')\n                    err_msgs.append(err_msg)\n            else:\n                err_msg = error_message(line_num, 'category header is not formatted correctly')\n                err_msgs.append(err_msg)\n\n            if num_in_category < min_entries_per_category:\n                err_msg = error_message(category_line, f'{category} category does not have the minimum {min_entries_per_category} entries (only has {num_in_category})')\n                err_msgs.append(err_msg)\n\n            category = line_content.split(' ')[1]\n            category_line = line_num\n            num_in_category = 0\n            continue\n\n        # skips lines that we do not care about\n        if not line_content.startswith('|') or line_content.startswith('|---'):\n            continue\n\n        num_in_category += 1\n        segments = line_content.split('|')[1:-1]\n        if len(segments) < num_segments:\n            err_msg = error_message(line_num, f'entry does not have all the required columns (have {len(segments)}, need {num_segments})')\n            err_msgs.append(err_msg)\n            continue\n    \n        for segment in segments:\n            # every line segment should start and end with exactly 1 space\n            if len(segment) - len(segment.lstrip()) != 1 or len(segment) - len(segment.rstrip()) != 1:\n                err_msg = error_message(line_num, 'each segment must start and end with exactly 1 space')\n                err_msgs.append(err_msg)\n        \n        segments = [segment.strip() for segment in segments]\n        entry_err_msgs = check_entry(line_num, segments)\n        err_msgs.extend(entry_err_msgs)",
                            "children": [
                                {
                                    "type": "pattern_list",
                                    "label": "line_num, line_content",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "line_num",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "line_content",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "call",
                                    "label": "enumerate(lines)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "enumerate",
                                            "children": []
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(lines)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "lines",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "category_title_match = category_title_in_index_re.match(line_content)\n        if category_title_match:\n            category_title_in_index.append(category_title_match.group(1))\n\n        # check each category for the minimum number of entries\n        if line_content.startswith(anchor):\n            category_match = anchor_re.match(line_content)\n            if category_match:\n                if category_match.group(1) not in category_title_in_index:\n                    err_msg = error_message(line_num, f'category header ({category_match.group(1)}) not added to Index section')\n                    err_msgs.append(err_msg)\n            else:\n                err_msg = error_message(line_num, 'category header is not formatted correctly')\n                err_msgs.append(err_msg)\n\n            if num_in_category < min_entries_per_category:\n                err_msg = error_message(category_line, f'{category} category does not have the minimum {min_entries_per_category} entries (only has {num_in_category})')\n                err_msgs.append(err_msg)\n\n            category = line_content.split(' ')[1]\n            category_line = line_num\n            num_in_category = 0\n            continue\n\n        # skips lines that we do not care about\n        if not line_content.startswith('|') or line_content.startswith('|---'):\n            continue\n\n        num_in_category += 1\n        segments = line_content.split('|')[1:-1]\n        if len(segments) < num_segments:\n            err_msg = error_message(line_num, f'entry does not have all the required columns (have {len(segments)}, need {num_segments})')\n            err_msgs.append(err_msg)\n            continue\n    \n        for segment in segments:\n            # every line segment should start and end with exactly 1 space\n            if len(segment) - len(segment.lstrip()) != 1 or len(segment) - len(segment.rstrip()) != 1:\n                err_msg = error_message(line_num, 'each segment must start and end with exactly 1 space')\n                err_msgs.append(err_msg)\n        \n        segments = [segment.strip() for segment in segments]\n        entry_err_msgs = check_entry(line_num, segments)\n        err_msgs.extend(entry_err_msgs)",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "category_title_match = category_title_in_index_re.match(line_content)",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "category_title_match = category_title_in_index_re.match(line_content)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "category_title_match",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "category_title_in_index_re.match(line_content)",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "category_title_in_index_re.match",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "category_title_in_index_re",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "match",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(line_content)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "line_content",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "if_statement",
                                            "label": "if category_title_match:\n            category_title_in_index.append(category_title_match.group(1))",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "category_title_match",
                                                    "children": []
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "category_title_in_index.append(category_title_match.group(1))",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "category_title_in_index.append(category_title_match.group(1))",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "category_title_in_index.append(category_title_match.group(1))",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "category_title_in_index.append",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "category_title_in_index",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "append",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(category_title_match.group(1))",
                                                                            "children": [
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "category_title_match.group(1)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "category_title_match.group",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "category_title_match",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "group",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "(1)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "integer",
                                                                                                    "label": "1",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "comment",
                                            "label": "# check each category for the minimum number of entries",
                                            "children": []
                                        },
                                        {
                                            "type": "if_statement",
                                            "label": "if line_content.startswith(anchor):\n            category_match = anchor_re.match(line_content)\n            if category_match:\n                if category_match.group(1) not in category_title_in_index:\n                    err_msg = error_message(line_num, f'category header ({category_match.group(1)}) not added to Index section')\n                    err_msgs.append(err_msg)\n            else:\n                err_msg = error_message(line_num, 'category header is not formatted correctly')\n                err_msgs.append(err_msg)\n\n            if num_in_category < min_entries_per_category:\n                err_msg = error_message(category_line, f'{category} category does not have the minimum {min_entries_per_category} entries (only has {num_in_category})')\n                err_msgs.append(err_msg)\n\n            category = line_content.split(' ')[1]\n            category_line = line_num\n            num_in_category = 0\n            continue",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "line_content.startswith(anchor)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "line_content.startswith",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "line_content",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "startswith",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(anchor)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "anchor",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "category_match = anchor_re.match(line_content)\n            if category_match:\n                if category_match.group(1) not in category_title_in_index:\n                    err_msg = error_message(line_num, f'category header ({category_match.group(1)}) not added to Index section')\n                    err_msgs.append(err_msg)\n            else:\n                err_msg = error_message(line_num, 'category header is not formatted correctly')\n                err_msgs.append(err_msg)\n\n            if num_in_category < min_entries_per_category:\n                err_msg = error_message(category_line, f'{category} category does not have the minimum {min_entries_per_category} entries (only has {num_in_category})')\n                err_msgs.append(err_msg)\n\n            category = line_content.split(' ')[1]\n            category_line = line_num\n            num_in_category = 0\n            continue",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "category_match = anchor_re.match(line_content)",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "label": "category_match = anchor_re.match(line_content)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "category_match",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "call",
                                                                            "label": "anchor_re.match(line_content)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "anchor_re.match",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "anchor_re",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "match",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(line_content)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "line_content",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "if_statement",
                                                            "label": "if category_match:\n                if category_match.group(1) not in category_title_in_index:\n                    err_msg = error_message(line_num, f'category header ({category_match.group(1)}) not added to Index section')\n                    err_msgs.append(err_msg)\n            else:\n                err_msg = error_message(line_num, 'category header is not formatted correctly')\n                err_msgs.append(err_msg)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "category_match",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "block",
                                                                    "label": "if category_match.group(1) not in category_title_in_index:\n                    err_msg = error_message(line_num, f'category header ({category_match.group(1)}) not added to Index section')\n                    err_msgs.append(err_msg)",
                                                                    "children": [
                                                                        {
                                                                            "type": "if_statement",
                                                                            "label": "if category_match.group(1) not in category_title_in_index:\n                    err_msg = error_message(line_num, f'category header ({category_match.group(1)}) not added to Index section')\n                    err_msgs.append(err_msg)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "comparison_operator",
                                                                                    "label": "category_match.group(1) not in category_title_in_index",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "call",
                                                                                            "label": "category_match.group(1)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "category_match.group",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "category_match",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "group",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "argument_list",
                                                                                                    "label": "(1)",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "integer",
                                                                                                            "label": "1",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "category_title_in_index",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "block",
                                                                                    "label": "err_msg = error_message(line_num, f'category header ({category_match.group(1)}) not added to Index section')\n                    err_msgs.append(err_msg)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "expression_statement",
                                                                                            "label": "err_msg = error_message(line_num, f'category header ({category_match.group(1)}) not added to Index section')",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "assignment",
                                                                                                    "label": "err_msg = error_message(line_num, f'category header ({category_match.group(1)}) not added to Index section')",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "err_msg",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "call",
                                                                                                            "label": "error_message(line_num, f'category header ({category_match.group(1)}) not added to Index section')",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "error_message",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "argument_list",
                                                                                                                    "label": "(line_num, f'category header ({category_match.group(1)}) not added to Index section')",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "line_num",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "string",
                                                                                                                            "label": "f'category header ({category_match.group(1)}) not added to Index section'",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "string_start",
                                                                                                                                    "label": "f'",
                                                                                                                                    "children": []
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "string_content",
                                                                                                                                    "label": "category header (",
                                                                                                                                    "children": []
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "interpolation",
                                                                                                                                    "label": "{category_match.group(1)}",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "call",
                                                                                                                                            "label": "category_match.group(1)",
                                                                                                                                            "children": [
                                                                                                                                                {
                                                                                                                                                    "type": "attribute",
                                                                                                                                                    "label": "category_match.group",
                                                                                                                                                    "children": [
                                                                                                                                                        {
                                                                                                                                                            "type": "identifier",
                                                                                                                                                            "label": "category_match",
                                                                                                                                                            "children": []
                                                                                                                                                        },
                                                                                                                                                        {
                                                                                                                                                            "type": "identifier",
                                                                                                                                                            "label": "group",
                                                                                                                                                            "children": []
                                                                                                                                                        }
                                                                                                                                                    ]
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "type": "argument_list",
                                                                                                                                                    "label": "(1)",
                                                                                                                                                    "children": [
                                                                                                                                                        {
                                                                                                                                                            "type": "integer",
                                                                                                                                                            "label": "1",
                                                                                                                                                            "children": []
                                                                                                                                                        }
                                                                                                                                                    ]
                                                                                                                                                }
                                                                                                                                            ]
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "string_content",
                                                                                                                                    "label": ") not added to Index section",
                                                                                                                                    "children": []
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "string_end",
                                                                                                                                    "label": "'",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "expression_statement",
                                                                                            "label": "err_msgs.append(err_msg)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "call",
                                                                                                    "label": "err_msgs.append(err_msg)",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "err_msgs.append",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "err_msgs",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "append",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "argument_list",
                                                                                                            "label": "(err_msg)",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "err_msg",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "else_clause",
                                                                    "label": "else:\n                err_msg = error_message(line_num, 'category header is not formatted correctly')\n                err_msgs.append(err_msg)",
                                                                    "children": [
                                                                        {
                                                                            "type": "block",
                                                                            "label": "err_msg = error_message(line_num, 'category header is not formatted correctly')\n                err_msgs.append(err_msg)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "expression_statement",
                                                                                    "label": "err_msg = error_message(line_num, 'category header is not formatted correctly')",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "assignment",
                                                                                            "label": "err_msg = error_message(line_num, 'category header is not formatted correctly')",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "err_msg",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "call",
                                                                                                    "label": "error_message(line_num, 'category header is not formatted correctly')",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "error_message",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "argument_list",
                                                                                                            "label": "(line_num, 'category header is not formatted correctly')",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "line_num",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string",
                                                                                                                    "label": "'category header is not formatted correctly'",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "string_start",
                                                                                                                            "label": "'",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "string_content",
                                                                                                                            "label": "category header is not formatted correctly",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "string_end",
                                                                                                                            "label": "'",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "expression_statement",
                                                                                    "label": "err_msgs.append(err_msg)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "call",
                                                                                            "label": "err_msgs.append(err_msg)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "err_msgs.append",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "err_msgs",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "append",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "argument_list",
                                                                                                    "label": "(err_msg)",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "err_msg",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "if_statement",
                                                            "label": "if num_in_category < min_entries_per_category:\n                err_msg = error_message(category_line, f'{category} category does not have the minimum {min_entries_per_category} entries (only has {num_in_category})')\n                err_msgs.append(err_msg)",
                                                            "children": [
                                                                {
                                                                    "type": "comparison_operator",
                                                                    "label": "num_in_category < min_entries_per_category",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "num_in_category",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "min_entries_per_category",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "block",
                                                                    "label": "err_msg = error_message(category_line, f'{category} category does not have the minimum {min_entries_per_category} entries (only has {num_in_category})')\n                err_msgs.append(err_msg)",
                                                                    "children": [
                                                                        {
                                                                            "type": "expression_statement",
                                                                            "label": "err_msg = error_message(category_line, f'{category} category does not have the minimum {min_entries_per_category} entries (only has {num_in_category})')",
                                                                            "children": [
                                                                                {
                                                                                    "type": "assignment",
                                                                                    "label": "err_msg = error_message(category_line, f'{category} category does not have the minimum {min_entries_per_category} entries (only has {num_in_category})')",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "err_msg",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "call",
                                                                                            "label": "error_message(category_line, f'{category} category does not have the minimum {min_entries_per_category} entries (only has {num_in_category})')",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "error_message",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "argument_list",
                                                                                                    "label": "(category_line, f'{category} category does not have the minimum {min_entries_per_category} entries (only has {num_in_category})')",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "category_line",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string",
                                                                                                            "label": "f'{category} category does not have the minimum {min_entries_per_category} entries (only has {num_in_category})'",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string_start",
                                                                                                                    "label": "f'",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "interpolation",
                                                                                                                    "label": "{category}",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "category",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_content",
                                                                                                                    "label": " category does not have the minimum ",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "interpolation",
                                                                                                                    "label": "{min_entries_per_category}",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "min_entries_per_category",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_content",
                                                                                                                    "label": " entries (only has ",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "interpolation",
                                                                                                                    "label": "{num_in_category}",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "num_in_category",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_content",
                                                                                                                    "label": ")",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_end",
                                                                                                                    "label": "'",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "expression_statement",
                                                                            "label": "err_msgs.append(err_msg)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "err_msgs.append(err_msg)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "err_msgs.append",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "err_msgs",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "append",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "(err_msg)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "err_msg",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "category = line_content.split(' ')[1]",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "label": "category = line_content.split(' ')[1]",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "category",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "subscript",
                                                                            "label": "line_content.split(' ')[1]",
                                                                            "children": [
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "line_content.split(' ')",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "line_content.split",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "line_content",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "split",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "(' ')",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "' '",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "'",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": " ",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "'",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "integer",
                                                                                    "label": "1",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "category_line = line_num",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "label": "category_line = line_num",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "category_line",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "line_num",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "num_in_category = 0",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "label": "num_in_category = 0",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "num_in_category",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "integer",
                                                                            "label": "0",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "continue_statement",
                                                            "label": "continue",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "comment",
                                            "label": "# skips lines that we do not care about",
                                            "children": []
                                        },
                                        {
                                            "type": "if_statement",
                                            "label": "if not line_content.startswith('|') or line_content.startswith('|---'):\n            continue",
                                            "children": [
                                                {
                                                    "type": "boolean_operator",
                                                    "label": "not line_content.startswith('|') or line_content.startswith('|---')",
                                                    "children": [
                                                        {
                                                            "type": "not_operator",
                                                            "label": "not line_content.startswith('|')",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "line_content.startswith('|')",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "line_content.startswith",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "line_content",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "startswith",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "('|')",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "'|'",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "'",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "|",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "'",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "line_content.startswith('|---')",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "line_content.startswith",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "line_content",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "startswith",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "('|---')",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "label": "'|---'",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "'",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "|---",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "'",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "continue",
                                                    "children": [
                                                        {
                                                            "type": "continue_statement",
                                                            "label": "continue",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "num_in_category += 1",
                                            "children": [
                                                {
                                                    "type": "augmented_assignment",
                                                    "label": "num_in_category += 1",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "num_in_category",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "integer",
                                                            "label": "1",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "segments = line_content.split('|')[1:-1]",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "segments = line_content.split('|')[1:-1]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "segments",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "subscript",
                                                            "label": "line_content.split('|')[1:-1]",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "line_content.split('|')",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "line_content.split",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "line_content",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "split",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "('|')",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "'|'",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "'",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "|",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "'",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "slice",
                                                                    "label": "1:-1",
                                                                    "children": [
                                                                        {
                                                                            "type": "integer",
                                                                            "label": "1",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "unary_operator",
                                                                            "label": "-1",
                                                                            "children": [
                                                                                {
                                                                                    "type": "integer",
                                                                                    "label": "1",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "if_statement",
                                            "label": "if len(segments) < num_segments:\n            err_msg = error_message(line_num, f'entry does not have all the required columns (have {len(segments)}, need {num_segments})')\n            err_msgs.append(err_msg)\n            continue",
                                            "children": [
                                                {
                                                    "type": "comparison_operator",
                                                    "label": "len(segments) < num_segments",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "len(segments)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "len",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(segments)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "segments",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "num_segments",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "err_msg = error_message(line_num, f'entry does not have all the required columns (have {len(segments)}, need {num_segments})')\n            err_msgs.append(err_msg)\n            continue",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "err_msg = error_message(line_num, f'entry does not have all the required columns (have {len(segments)}, need {num_segments})')",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "label": "err_msg = error_message(line_num, f'entry does not have all the required columns (have {len(segments)}, need {num_segments})')",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "err_msg",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "call",
                                                                            "label": "error_message(line_num, f'entry does not have all the required columns (have {len(segments)}, need {num_segments})')",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "error_message",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(line_num, f'entry does not have all the required columns (have {len(segments)}, need {num_segments})')",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "line_num",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "f'entry does not have all the required columns (have {len(segments)}, need {num_segments})'",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "f'",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "entry does not have all the required columns (have ",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "interpolation",
                                                                                                    "label": "{len(segments)}",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "call",
                                                                                                            "label": "len(segments)",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "len",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "argument_list",
                                                                                                                    "label": "(segments)",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "segments",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": ", need ",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "interpolation",
                                                                                                    "label": "{num_segments}",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "num_segments",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": ")",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "'",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "err_msgs.append(err_msg)",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "err_msgs.append(err_msg)",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "err_msgs.append",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "err_msgs",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "append",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(err_msg)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "err_msg",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "continue_statement",
                                                            "label": "continue",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "for_statement",
                                            "label": "for segment in segments:\n            # every line segment should start and end with exactly 1 space\n            if len(segment) - len(segment.lstrip()) != 1 or len(segment) - len(segment.rstrip()) != 1:\n                err_msg = error_message(line_num, 'each segment must start and end with exactly 1 space')\n                err_msgs.append(err_msg)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "segment",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "segments",
                                                    "children": []
                                                },
                                                {
                                                    "type": "comment",
                                                    "label": "# every line segment should start and end with exactly 1 space",
                                                    "children": []
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "if len(segment) - len(segment.lstrip()) != 1 or len(segment) - len(segment.rstrip()) != 1:\n                err_msg = error_message(line_num, 'each segment must start and end with exactly 1 space')\n                err_msgs.append(err_msg)",
                                                    "children": [
                                                        {
                                                            "type": "if_statement",
                                                            "label": "if len(segment) - len(segment.lstrip()) != 1 or len(segment) - len(segment.rstrip()) != 1:\n                err_msg = error_message(line_num, 'each segment must start and end with exactly 1 space')\n                err_msgs.append(err_msg)",
                                                            "children": [
                                                                {
                                                                    "type": "boolean_operator",
                                                                    "label": "len(segment) - len(segment.lstrip()) != 1 or len(segment) - len(segment.rstrip()) != 1",
                                                                    "children": [
                                                                        {
                                                                            "type": "comparison_operator",
                                                                            "label": "len(segment) - len(segment.lstrip()) != 1",
                                                                            "children": [
                                                                                {
                                                                                    "type": "binary_operator",
                                                                                    "label": "len(segment) - len(segment.lstrip())",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "call",
                                                                                            "label": "len(segment)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "len",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "argument_list",
                                                                                                    "label": "(segment)",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "segment",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "call",
                                                                                            "label": "len(segment.lstrip())",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "len",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "argument_list",
                                                                                                    "label": "(segment.lstrip())",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "call",
                                                                                                            "label": "segment.lstrip()",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "attribute",
                                                                                                                    "label": "segment.lstrip",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "segment",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "lstrip",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "argument_list",
                                                                                                                    "label": "()",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "integer",
                                                                                    "label": "1",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "comparison_operator",
                                                                            "label": "len(segment) - len(segment.rstrip()) != 1",
                                                                            "children": [
                                                                                {
                                                                                    "type": "binary_operator",
                                                                                    "label": "len(segment) - len(segment.rstrip())",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "call",
                                                                                            "label": "len(segment)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "len",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "argument_list",
                                                                                                    "label": "(segment)",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "segment",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "call",
                                                                                            "label": "len(segment.rstrip())",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "len",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "argument_list",
                                                                                                    "label": "(segment.rstrip())",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "call",
                                                                                                            "label": "segment.rstrip()",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "attribute",
                                                                                                                    "label": "segment.rstrip",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "segment",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "rstrip",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "argument_list",
                                                                                                                    "label": "()",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "integer",
                                                                                    "label": "1",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "block",
                                                                    "label": "err_msg = error_message(line_num, 'each segment must start and end with exactly 1 space')\n                err_msgs.append(err_msg)",
                                                                    "children": [
                                                                        {
                                                                            "type": "expression_statement",
                                                                            "label": "err_msg = error_message(line_num, 'each segment must start and end with exactly 1 space')",
                                                                            "children": [
                                                                                {
                                                                                    "type": "assignment",
                                                                                    "label": "err_msg = error_message(line_num, 'each segment must start and end with exactly 1 space')",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "err_msg",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "call",
                                                                                            "label": "error_message(line_num, 'each segment must start and end with exactly 1 space')",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "error_message",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "argument_list",
                                                                                                    "label": "(line_num, 'each segment must start and end with exactly 1 space')",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "line_num",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string",
                                                                                                            "label": "'each segment must start and end with exactly 1 space'",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string_start",
                                                                                                                    "label": "'",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_content",
                                                                                                                    "label": "each segment must start and end with exactly 1 space",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_end",
                                                                                                                    "label": "'",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "expression_statement",
                                                                            "label": "err_msgs.append(err_msg)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "err_msgs.append(err_msg)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "err_msgs.append",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "err_msgs",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "append",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "(err_msg)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "err_msg",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "segments = [segment.strip() for segment in segments]",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "segments = [segment.strip() for segment in segments]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "segments",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "list_comprehension",
                                                            "label": "[segment.strip() for segment in segments]",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "segment.strip()",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "segment.strip",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "segment",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "strip",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "()",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "for_in_clause",
                                                                    "label": "for segment in segments",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "segment",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "segments",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "entry_err_msgs = check_entry(line_num, segments)",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "entry_err_msgs = check_entry(line_num, segments)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "entry_err_msgs",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "check_entry(line_num, segments)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "check_entry",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(line_num, segments)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "line_num",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "segments",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "err_msgs.extend(entry_err_msgs)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "err_msgs.extend(entry_err_msgs)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "err_msgs.extend",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "err_msgs",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "extend",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(entry_err_msgs)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "entry_err_msgs",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return err_msgs",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "err_msgs",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def main(filename: str) -> None:\n\n    with open(filename, mode='r', encoding='utf-8') as file:\n        lines = list(line.rstrip() for line in file)\n\n    file_format_err_msgs = check_file_format(lines)\n\n    if file_format_err_msgs:\n        for err_msg in file_format_err_msgs:\n            print(err_msg)\n        sys.exit(1)",
            "children": [
                {
                    "type": "identifier",
                    "label": "main",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(filename: str)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "filename: str",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "filename",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "str",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "None",
                    "children": [
                        {
                            "type": "none",
                            "label": "None",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "with open(filename, mode='r', encoding='utf-8') as file:\n        lines = list(line.rstrip() for line in file)\n\n    file_format_err_msgs = check_file_format(lines)\n\n    if file_format_err_msgs:\n        for err_msg in file_format_err_msgs:\n            print(err_msg)\n        sys.exit(1)",
                    "children": [
                        {
                            "type": "with_statement",
                            "label": "with open(filename, mode='r', encoding='utf-8') as file:\n        lines = list(line.rstrip() for line in file)",
                            "children": [
                                {
                                    "type": "with_clause",
                                    "label": "open(filename, mode='r', encoding='utf-8') as file",
                                    "children": [
                                        {
                                            "type": "with_item",
                                            "label": "open(filename, mode='r', encoding='utf-8') as file",
                                            "children": [
                                                {
                                                    "type": "as_pattern",
                                                    "label": "open(filename, mode='r', encoding='utf-8') as file",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "open(filename, mode='r', encoding='utf-8')",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "open",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(filename, mode='r', encoding='utf-8')",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "filename",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "mode='r'",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "mode",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "'r'",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "'",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "r",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "'",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "encoding='utf-8'",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "encoding",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "'utf-8'",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "'",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "utf-8",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "'",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "as_pattern_target",
                                                            "label": "file",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "file",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "lines = list(line.rstrip() for line in file)",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "lines = list(line.rstrip() for line in file)",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "lines = list(line.rstrip() for line in file)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "lines",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "list(line.rstrip() for line in file)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "list",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "generator_expression",
                                                                    "label": "(line.rstrip() for line in file)",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "line.rstrip()",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "line.rstrip",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "line",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "rstrip",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "()",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "for_in_clause",
                                                                            "label": "for line in file",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "line",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "file",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "file_format_err_msgs = check_file_format(lines)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "file_format_err_msgs = check_file_format(lines)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "file_format_err_msgs",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "check_file_format(lines)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "check_file_format",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(lines)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "lines",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "if_statement",
                            "label": "if file_format_err_msgs:\n        for err_msg in file_format_err_msgs:\n            print(err_msg)\n        sys.exit(1)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "file_format_err_msgs",
                                    "children": []
                                },
                                {
                                    "type": "block",
                                    "label": "for err_msg in file_format_err_msgs:\n            print(err_msg)\n        sys.exit(1)",
                                    "children": [
                                        {
                                            "type": "for_statement",
                                            "label": "for err_msg in file_format_err_msgs:\n            print(err_msg)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "err_msg",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "file_format_err_msgs",
                                                    "children": []
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "print(err_msg)",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "print(err_msg)",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "print(err_msg)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "print",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(err_msg)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "err_msg",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "sys.exit(1)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "sys.exit(1)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "sys.exit",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "sys",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "exit",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(1)",
                                                            "children": [
                                                                {
                                                                    "type": "integer",
                                                                    "label": "1",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "if_statement",
            "label": "if __name__ == '__main__':\n\n    num_args = len(sys.argv)\n\n    if num_args < 2:\n        print('No .md file passed (file should contain Markdown table syntax)')\n        sys.exit(1)\n\n    filename = sys.argv[1]\n\n    main(filename)",
            "children": [
                {
                    "type": "comparison_operator",
                    "label": "__name__ == '__main__'",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "__name__",
                            "children": []
                        },
                        {
                            "type": "string",
                            "label": "'__main__'",
                            "children": [
                                {
                                    "type": "string_start",
                                    "label": "'",
                                    "children": []
                                },
                                {
                                    "type": "string_content",
                                    "label": "__main__",
                                    "children": []
                                },
                                {
                                    "type": "string_end",
                                    "label": "'",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "num_args = len(sys.argv)\n\n    if num_args < 2:\n        print('No .md file passed (file should contain Markdown table syntax)')\n        sys.exit(1)\n\n    filename = sys.argv[1]\n\n    main(filename)",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "num_args = len(sys.argv)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "num_args = len(sys.argv)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "num_args",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "len(sys.argv)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "len",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(sys.argv)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "sys.argv",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "sys",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "argv",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "if_statement",
                            "label": "if num_args < 2:\n        print('No .md file passed (file should contain Markdown table syntax)')\n        sys.exit(1)",
                            "children": [
                                {
                                    "type": "comparison_operator",
                                    "label": "num_args < 2",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "num_args",
                                            "children": []
                                        },
                                        {
                                            "type": "integer",
                                            "label": "2",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "print('No .md file passed (file should contain Markdown table syntax)')\n        sys.exit(1)",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "print('No .md file passed (file should contain Markdown table syntax)')",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "print('No .md file passed (file should contain Markdown table syntax)')",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "print",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "('No .md file passed (file should contain Markdown table syntax)')",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "'No .md file passed (file should contain Markdown table syntax)'",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "'",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "No .md file passed (file should contain Markdown table syntax)",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "'",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "sys.exit(1)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "sys.exit(1)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "sys.exit",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "sys",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "exit",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(1)",
                                                            "children": [
                                                                {
                                                                    "type": "integer",
                                                                    "label": "1",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "filename = sys.argv[1]",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "filename = sys.argv[1]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "filename",
                                            "children": []
                                        },
                                        {
                                            "type": "subscript",
                                            "label": "sys.argv[1]",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "sys.argv",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "sys",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "argv",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "integer",
                                                    "label": "1",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "main(filename)",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "main(filename)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "main",
                                            "children": []
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(filename)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "filename",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}