{
    "type": "module",
    "label": "from abc import ABC, abstractmethod\nfrom datetime import datetime, timezone\n\nfrom prisma import Json\nfrom prisma.enums import CreditTransactionType\nfrom prisma.errors import UniqueViolationError\nfrom prisma.models import CreditTransaction\n\nfrom backend.data.block import Block, BlockInput, get_block\nfrom backend.data.block_cost_config import BLOCK_COSTS\nfrom backend.data.cost import BlockCost, BlockCostType\nfrom backend.util.settings import Config\n\nconfig = Config()\n\n\nclass UserCreditBase(ABC):\n    def __init__(self, num_user_credits_refill: int):\n        self.num_user_credits_refill = num_user_credits_refill\n\n    @abstractmethod\n    async def get_or_refill_credit(self, user_id: str) -> int:\n        \"\"\"\n        Get the current credit for the user and refill if no transaction has been made in the current cycle.\n\n        Returns:\n            int: The current credit for the user.\n        \"\"\"\n        pass\n\n    @abstractmethod\n    async def spend_credits(\n        self,\n        user_id: str,\n        user_credit: int,\n        block_id: str,\n        input_data: BlockInput,\n        data_size: float,\n        run_time: float,\n    ) -> int:\n        \"\"\"\n        Spend the credits for the user based on the block usage.\n\n        Args:\n            user_id (str): The user ID.\n            user_credit (int): The current credit for the user.\n            block_id (str): The block ID.\n            input_data (BlockInput): The input data for the block.\n            data_size (float): The size of the data being processed.\n            run_time (float): The time taken to run the block.\n\n        Returns:\n            int: amount of credit spent\n        \"\"\"\n        pass\n\n    @abstractmethod\n    async def top_up_credits(self, user_id: str, amount: int):\n        \"\"\"\n        Top up the credits for the user.\n\n        Args:\n            user_id (str): The user ID.\n            amount (int): The amount to top up.\n        \"\"\"\n        pass\n\n\nclass UserCredit(UserCreditBase):\n    async def get_or_refill_credit(self, user_id: str) -> int:\n        cur_time = self.time_now()\n        cur_month = cur_time.replace(day=1, hour=0, minute=0, second=0, microsecond=0)\n        nxt_month = (\n            cur_month.replace(month=cur_month.month + 1)\n            if cur_month.month < 12\n            else cur_month.replace(year=cur_month.year + 1, month=1)\n        )\n\n        user_credit = await CreditTransaction.prisma().group_by(\n            by=[\"userId\"],\n            sum={\"amount\": True},\n            where={\n                \"userId\": user_id,\n                \"createdAt\": {\"gte\": cur_month, \"lt\": nxt_month},\n                \"isActive\": True,\n            },\n        )\n\n        if user_credit:\n            credit_sum = user_credit[0].get(\"_sum\") or {}\n            return credit_sum.get(\"amount\", 0)\n\n        key = f\"MONTHLY-CREDIT-TOP-UP-{cur_month}\"\n\n        try:\n            await CreditTransaction.prisma().create(\n                data={\n                    \"amount\": self.num_user_credits_refill,\n                    \"type\": CreditTransactionType.TOP_UP,\n                    \"userId\": user_id,\n                    \"transactionKey\": key,\n                    \"createdAt\": self.time_now(),\n                }\n            )\n        except UniqueViolationError:\n            pass  # Already refilled this month\n\n        return self.num_user_credits_refill\n\n    @staticmethod\n    def time_now():\n        return datetime.now(timezone.utc)\n\n    def _block_usage_cost(\n        self,\n        block: Block,\n        input_data: BlockInput,\n        data_size: float,\n        run_time: float,\n    ) -> tuple[int, BlockInput]:\n        block_costs = BLOCK_COSTS.get(type(block))\n        if not block_costs:\n            return 0, {}\n\n        for block_cost in block_costs:\n            if not self._is_cost_filter_match(block_cost.cost_filter, input_data):\n                continue\n\n            if block_cost.cost_type == BlockCostType.RUN:\n                return block_cost.cost_amount, block_cost.cost_filter\n\n            if block_cost.cost_type == BlockCostType.SECOND:\n                return (\n                    int(run_time * block_cost.cost_amount),\n                    block_cost.cost_filter,\n                )\n\n            if block_cost.cost_type == BlockCostType.BYTE:\n                return (\n                    int(data_size * block_cost.cost_amount),\n                    block_cost.cost_filter,\n                )\n\n        return 0, {}\n\n    def _is_cost_filter_match(\n        self, cost_filter: BlockInput, input_data: BlockInput\n    ) -> bool:\n        \"\"\"\n        Filter rules:\n          - If costFilter is an object, then check if costFilter is the subset of inputValues\n          - Otherwise, check if costFilter is equal to inputValues.\n          - Undefined, null, and empty string are considered as equal.\n        \"\"\"\n        if not isinstance(cost_filter, dict) or not isinstance(input_data, dict):\n            return cost_filter == input_data\n\n        return all(\n            (not input_data.get(k) and not v)\n            or (input_data.get(k) and self._is_cost_filter_match(v, input_data[k]))\n            for k, v in cost_filter.items()\n        )\n\n    async def spend_credits(\n        self,\n        user_id: str,\n        user_credit: int,\n        block_id: str,\n        input_data: BlockInput,\n        data_size: float,\n        run_time: float,\n        validate_balance: bool = True,\n    ) -> int:\n        block = get_block(block_id)\n        if not block:\n            raise ValueError(f\"Block not found: {block_id}\")\n\n        cost, matching_filter = self._block_usage_cost(\n            block=block, input_data=input_data, data_size=data_size, run_time=run_time\n        )\n        if cost <= 0:\n            return 0\n\n        if validate_balance and user_credit < cost:\n            raise ValueError(f\"Insufficient credit: {user_credit} < {cost}\")\n\n        await CreditTransaction.prisma().create(\n            data={\n                \"userId\": user_id,\n                \"amount\": -cost,\n                \"type\": CreditTransactionType.USAGE,\n                \"blockId\": block.id,\n                \"metadata\": Json(\n                    {\n                        \"block\": block.name,\n                        \"input\": matching_filter,\n                    }\n                ),\n                \"createdAt\": self.time_now(),\n            }\n        )\n        return cost\n\n    async def top_up_credits(self, user_id: str, amount: int):\n        await CreditTransaction.prisma().create(\n            data={\n                \"userId\": user_id,\n                \"amount\": amount,\n                \"type\": CreditTransactionType.TOP_UP,\n                \"createdAt\": self.time_now(),\n            }\n        )\n\n\nclass DisabledUserCredit(UserCreditBase):\n    async def get_or_refill_credit(self, *args, **kwargs) -> int:\n        return 0\n\n    async def spend_credits(self, *args, **kwargs) -> int:\n        return 0\n\n    async def top_up_credits(self, *args, **kwargs):\n        pass\n\n\ndef get_user_credit_model() -> UserCreditBase:\n    if config.enable_credit.lower() == \"true\":\n        return UserCredit(config.num_user_credits_refill)\n    else:\n        return DisabledUserCredit(0)\n\n\ndef get_block_costs() -> dict[str, list[BlockCost]]:\n    return {block().id: costs for block, costs in BLOCK_COSTS.items()}\n",
    "children": [
        {
            "type": "import_from_statement",
            "label": "from abc import ABC, abstractmethod",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "abc",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "abc",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "ABC",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "ABC",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "abstractmethod",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "abstractmethod",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from datetime import datetime, timezone",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "datetime",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "datetime",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "datetime",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "datetime",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "timezone",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "timezone",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from prisma import Json",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "prisma",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "prisma",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "Json",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Json",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from prisma.enums import CreditTransactionType",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "prisma.enums",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "prisma",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "enums",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "CreditTransactionType",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "CreditTransactionType",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from prisma.errors import UniqueViolationError",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "prisma.errors",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "prisma",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "errors",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "UniqueViolationError",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "UniqueViolationError",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from prisma.models import CreditTransaction",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "prisma.models",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "prisma",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "models",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "CreditTransaction",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "CreditTransaction",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from backend.data.block import Block, BlockInput, get_block",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "backend.data.block",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "data",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "block",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "Block",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Block",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "BlockInput",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "BlockInput",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "get_block",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "get_block",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from backend.data.block_cost_config import BLOCK_COSTS",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "backend.data.block_cost_config",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "data",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "block_cost_config",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "BLOCK_COSTS",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "BLOCK_COSTS",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from backend.data.cost import BlockCost, BlockCostType",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "backend.data.cost",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "data",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "cost",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "BlockCost",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "BlockCost",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "BlockCostType",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "BlockCostType",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from backend.util.settings import Config",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "backend.util.settings",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "util",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "settings",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "Config",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Config",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "expression_statement",
            "label": "config = Config()",
            "children": [
                {
                    "type": "assignment",
                    "label": "config = Config()",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "config",
                            "children": []
                        },
                        {
                            "type": "call",
                            "label": "Config()",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "Config",
                                    "children": []
                                },
                                {
                                    "type": "argument_list",
                                    "label": "()",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "class_definition",
            "label": "class UserCreditBase(ABC):\n    def __init__(self, num_user_credits_refill: int):\n        self.num_user_credits_refill = num_user_credits_refill\n\n    @abstractmethod\n    async def get_or_refill_credit(self, user_id: str) -> int:\n        \"\"\"\n        Get the current credit for the user and refill if no transaction has been made in the current cycle.\n\n        Returns:\n            int: The current credit for the user.\n        \"\"\"\n        pass\n\n    @abstractmethod\n    async def spend_credits(\n        self,\n        user_id: str,\n        user_credit: int,\n        block_id: str,\n        input_data: BlockInput,\n        data_size: float,\n        run_time: float,\n    ) -> int:\n        \"\"\"\n        Spend the credits for the user based on the block usage.\n\n        Args:\n            user_id (str): The user ID.\n            user_credit (int): The current credit for the user.\n            block_id (str): The block ID.\n            input_data (BlockInput): The input data for the block.\n            data_size (float): The size of the data being processed.\n            run_time (float): The time taken to run the block.\n\n        Returns:\n            int: amount of credit spent\n        \"\"\"\n        pass\n\n    @abstractmethod\n    async def top_up_credits(self, user_id: str, amount: int):\n        \"\"\"\n        Top up the credits for the user.\n\n        Args:\n            user_id (str): The user ID.\n            amount (int): The amount to top up.\n        \"\"\"\n        pass",
            "children": [
                {
                    "type": "identifier",
                    "label": "UserCreditBase",
                    "children": []
                },
                {
                    "type": "argument_list",
                    "label": "(ABC)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "ABC",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "def __init__(self, num_user_credits_refill: int):\n        self.num_user_credits_refill = num_user_credits_refill\n\n    @abstractmethod\n    async def get_or_refill_credit(self, user_id: str) -> int:\n        \"\"\"\n        Get the current credit for the user and refill if no transaction has been made in the current cycle.\n\n        Returns:\n            int: The current credit for the user.\n        \"\"\"\n        pass\n\n    @abstractmethod\n    async def spend_credits(\n        self,\n        user_id: str,\n        user_credit: int,\n        block_id: str,\n        input_data: BlockInput,\n        data_size: float,\n        run_time: float,\n    ) -> int:\n        \"\"\"\n        Spend the credits for the user based on the block usage.\n\n        Args:\n            user_id (str): The user ID.\n            user_credit (int): The current credit for the user.\n            block_id (str): The block ID.\n            input_data (BlockInput): The input data for the block.\n            data_size (float): The size of the data being processed.\n            run_time (float): The time taken to run the block.\n\n        Returns:\n            int: amount of credit spent\n        \"\"\"\n        pass\n\n    @abstractmethod\n    async def top_up_credits(self, user_id: str, amount: int):\n        \"\"\"\n        Top up the credits for the user.\n\n        Args:\n            user_id (str): The user ID.\n            amount (int): The amount to top up.\n        \"\"\"\n        pass",
                    "children": [
                        {
                            "type": "function_definition",
                            "label": "def __init__(self, num_user_credits_refill: int):\n        self.num_user_credits_refill = num_user_credits_refill",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "__init__",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "label": "(self, num_user_credits_refill: int)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "self",
                                            "children": []
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "label": "num_user_credits_refill: int",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "num_user_credits_refill",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type",
                                                    "label": "int",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "int",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "self.num_user_credits_refill = num_user_credits_refill",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "self.num_user_credits_refill = num_user_credits_refill",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "self.num_user_credits_refill = num_user_credits_refill",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "self.num_user_credits_refill",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "num_user_credits_refill",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "num_user_credits_refill",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "decorated_definition",
                            "label": "@abstractmethod\n    async def get_or_refill_credit(self, user_id: str) -> int:\n        \"\"\"\n        Get the current credit for the user and refill if no transaction has been made in the current cycle.\n\n        Returns:\n            int: The current credit for the user.\n        \"\"\"\n        pass",
                            "children": [
                                {
                                    "type": "decorator",
                                    "label": "@abstractmethod",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "abstractmethod",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "function_definition",
                                    "label": "async def get_or_refill_credit(self, user_id: str) -> int:\n        \"\"\"\n        Get the current credit for the user and refill if no transaction has been made in the current cycle.\n\n        Returns:\n            int: The current credit for the user.\n        \"\"\"\n        pass",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "get_or_refill_credit",
                                            "children": []
                                        },
                                        {
                                            "type": "parameters",
                                            "label": "(self, user_id: str)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "self",
                                                    "children": []
                                                },
                                                {
                                                    "type": "typed_parameter",
                                                    "label": "user_id: str",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "user_id",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "str",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "str",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "type",
                                            "label": "int",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "int",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "\"\"\"\n        Get the current credit for the user and refill if no transaction has been made in the current cycle.\n\n        Returns:\n            int: The current credit for the user.\n        \"\"\"\n        pass",
                                            "children": [
                                                {
                                                    "type": "expression_statement",
                                                    "label": "\"\"\"\n        Get the current credit for the user and refill if no transaction has been made in the current cycle.\n\n        Returns:\n            int: The current credit for the user.\n        \"\"\"",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "\"\"\"\n        Get the current credit for the user and refill if no transaction has been made in the current cycle.\n\n        Returns:\n            int: The current credit for the user.\n        \"\"\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"\"\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "\n        Get the current credit for the user and refill if no transaction has been made in the current cycle.\n\n        Returns:\n            int: The current credit for the user.\n        ",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"\"\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "pass_statement",
                                                    "label": "pass",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "decorated_definition",
                            "label": "@abstractmethod\n    async def spend_credits(\n        self,\n        user_id: str,\n        user_credit: int,\n        block_id: str,\n        input_data: BlockInput,\n        data_size: float,\n        run_time: float,\n    ) -> int:\n        \"\"\"\n        Spend the credits for the user based on the block usage.\n\n        Args:\n            user_id (str): The user ID.\n            user_credit (int): The current credit for the user.\n            block_id (str): The block ID.\n            input_data (BlockInput): The input data for the block.\n            data_size (float): The size of the data being processed.\n            run_time (float): The time taken to run the block.\n\n        Returns:\n            int: amount of credit spent\n        \"\"\"\n        pass",
                            "children": [
                                {
                                    "type": "decorator",
                                    "label": "@abstractmethod",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "abstractmethod",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "function_definition",
                                    "label": "async def spend_credits(\n        self,\n        user_id: str,\n        user_credit: int,\n        block_id: str,\n        input_data: BlockInput,\n        data_size: float,\n        run_time: float,\n    ) -> int:\n        \"\"\"\n        Spend the credits for the user based on the block usage.\n\n        Args:\n            user_id (str): The user ID.\n            user_credit (int): The current credit for the user.\n            block_id (str): The block ID.\n            input_data (BlockInput): The input data for the block.\n            data_size (float): The size of the data being processed.\n            run_time (float): The time taken to run the block.\n\n        Returns:\n            int: amount of credit spent\n        \"\"\"\n        pass",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "spend_credits",
                                            "children": []
                                        },
                                        {
                                            "type": "parameters",
                                            "label": "(\n        self,\n        user_id: str,\n        user_credit: int,\n        block_id: str,\n        input_data: BlockInput,\n        data_size: float,\n        run_time: float,\n    )",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "self",
                                                    "children": []
                                                },
                                                {
                                                    "type": "typed_parameter",
                                                    "label": "user_id: str",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "user_id",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "str",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "str",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "typed_parameter",
                                                    "label": "user_credit: int",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "user_credit",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "int",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "int",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "typed_parameter",
                                                    "label": "block_id: str",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "block_id",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "str",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "str",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "typed_parameter",
                                                    "label": "input_data: BlockInput",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "input_data",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "BlockInput",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "BlockInput",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "typed_parameter",
                                                    "label": "data_size: float",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "data_size",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "float",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "float",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "typed_parameter",
                                                    "label": "run_time: float",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "run_time",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "float",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "float",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "type",
                                            "label": "int",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "int",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "\"\"\"\n        Spend the credits for the user based on the block usage.\n\n        Args:\n            user_id (str): The user ID.\n            user_credit (int): The current credit for the user.\n            block_id (str): The block ID.\n            input_data (BlockInput): The input data for the block.\n            data_size (float): The size of the data being processed.\n            run_time (float): The time taken to run the block.\n\n        Returns:\n            int: amount of credit spent\n        \"\"\"\n        pass",
                                            "children": [
                                                {
                                                    "type": "expression_statement",
                                                    "label": "\"\"\"\n        Spend the credits for the user based on the block usage.\n\n        Args:\n            user_id (str): The user ID.\n            user_credit (int): The current credit for the user.\n            block_id (str): The block ID.\n            input_data (BlockInput): The input data for the block.\n            data_size (float): The size of the data being processed.\n            run_time (float): The time taken to run the block.\n\n        Returns:\n            int: amount of credit spent\n        \"\"\"",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "\"\"\"\n        Spend the credits for the user based on the block usage.\n\n        Args:\n            user_id (str): The user ID.\n            user_credit (int): The current credit for the user.\n            block_id (str): The block ID.\n            input_data (BlockInput): The input data for the block.\n            data_size (float): The size of the data being processed.\n            run_time (float): The time taken to run the block.\n\n        Returns:\n            int: amount of credit spent\n        \"\"\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"\"\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "\n        Spend the credits for the user based on the block usage.\n\n        Args:\n            user_id (str): The user ID.\n            user_credit (int): The current credit for the user.\n            block_id (str): The block ID.\n            input_data (BlockInput): The input data for the block.\n            data_size (float): The size of the data being processed.\n            run_time (float): The time taken to run the block.\n\n        Returns:\n            int: amount of credit spent\n        ",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"\"\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "pass_statement",
                                                    "label": "pass",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "decorated_definition",
                            "label": "@abstractmethod\n    async def top_up_credits(self, user_id: str, amount: int):\n        \"\"\"\n        Top up the credits for the user.\n\n        Args:\n            user_id (str): The user ID.\n            amount (int): The amount to top up.\n        \"\"\"\n        pass",
                            "children": [
                                {
                                    "type": "decorator",
                                    "label": "@abstractmethod",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "abstractmethod",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "function_definition",
                                    "label": "async def top_up_credits(self, user_id: str, amount: int):\n        \"\"\"\n        Top up the credits for the user.\n\n        Args:\n            user_id (str): The user ID.\n            amount (int): The amount to top up.\n        \"\"\"\n        pass",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "top_up_credits",
                                            "children": []
                                        },
                                        {
                                            "type": "parameters",
                                            "label": "(self, user_id: str, amount: int)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "self",
                                                    "children": []
                                                },
                                                {
                                                    "type": "typed_parameter",
                                                    "label": "user_id: str",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "user_id",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "str",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "str",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "typed_parameter",
                                                    "label": "amount: int",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "amount",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "int",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "int",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "\"\"\"\n        Top up the credits for the user.\n\n        Args:\n            user_id (str): The user ID.\n            amount (int): The amount to top up.\n        \"\"\"\n        pass",
                                            "children": [
                                                {
                                                    "type": "expression_statement",
                                                    "label": "\"\"\"\n        Top up the credits for the user.\n\n        Args:\n            user_id (str): The user ID.\n            amount (int): The amount to top up.\n        \"\"\"",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "\"\"\"\n        Top up the credits for the user.\n\n        Args:\n            user_id (str): The user ID.\n            amount (int): The amount to top up.\n        \"\"\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"\"\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "\n        Top up the credits for the user.\n\n        Args:\n            user_id (str): The user ID.\n            amount (int): The amount to top up.\n        ",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"\"\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "pass_statement",
                                                    "label": "pass",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "class_definition",
            "label": "class UserCredit(UserCreditBase):\n    async def get_or_refill_credit(self, user_id: str) -> int:\n        cur_time = self.time_now()\n        cur_month = cur_time.replace(day=1, hour=0, minute=0, second=0, microsecond=0)\n        nxt_month = (\n            cur_month.replace(month=cur_month.month + 1)\n            if cur_month.month < 12\n            else cur_month.replace(year=cur_month.year + 1, month=1)\n        )\n\n        user_credit = await CreditTransaction.prisma().group_by(\n            by=[\"userId\"],\n            sum={\"amount\": True},\n            where={\n                \"userId\": user_id,\n                \"createdAt\": {\"gte\": cur_month, \"lt\": nxt_month},\n                \"isActive\": True,\n            },\n        )\n\n        if user_credit:\n            credit_sum = user_credit[0].get(\"_sum\") or {}\n            return credit_sum.get(\"amount\", 0)\n\n        key = f\"MONTHLY-CREDIT-TOP-UP-{cur_month}\"\n\n        try:\n            await CreditTransaction.prisma().create(\n                data={\n                    \"amount\": self.num_user_credits_refill,\n                    \"type\": CreditTransactionType.TOP_UP,\n                    \"userId\": user_id,\n                    \"transactionKey\": key,\n                    \"createdAt\": self.time_now(),\n                }\n            )\n        except UniqueViolationError:\n            pass  # Already refilled this month\n\n        return self.num_user_credits_refill\n\n    @staticmethod\n    def time_now():\n        return datetime.now(timezone.utc)\n\n    def _block_usage_cost(\n        self,\n        block: Block,\n        input_data: BlockInput,\n        data_size: float,\n        run_time: float,\n    ) -> tuple[int, BlockInput]:\n        block_costs = BLOCK_COSTS.get(type(block))\n        if not block_costs:\n            return 0, {}\n\n        for block_cost in block_costs:\n            if not self._is_cost_filter_match(block_cost.cost_filter, input_data):\n                continue\n\n            if block_cost.cost_type == BlockCostType.RUN:\n                return block_cost.cost_amount, block_cost.cost_filter\n\n            if block_cost.cost_type == BlockCostType.SECOND:\n                return (\n                    int(run_time * block_cost.cost_amount),\n                    block_cost.cost_filter,\n                )\n\n            if block_cost.cost_type == BlockCostType.BYTE:\n                return (\n                    int(data_size * block_cost.cost_amount),\n                    block_cost.cost_filter,\n                )\n\n        return 0, {}\n\n    def _is_cost_filter_match(\n        self, cost_filter: BlockInput, input_data: BlockInput\n    ) -> bool:\n        \"\"\"\n        Filter rules:\n          - If costFilter is an object, then check if costFilter is the subset of inputValues\n          - Otherwise, check if costFilter is equal to inputValues.\n          - Undefined, null, and empty string are considered as equal.\n        \"\"\"\n        if not isinstance(cost_filter, dict) or not isinstance(input_data, dict):\n            return cost_filter == input_data\n\n        return all(\n            (not input_data.get(k) and not v)\n            or (input_data.get(k) and self._is_cost_filter_match(v, input_data[k]))\n            for k, v in cost_filter.items()\n        )\n\n    async def spend_credits(\n        self,\n        user_id: str,\n        user_credit: int,\n        block_id: str,\n        input_data: BlockInput,\n        data_size: float,\n        run_time: float,\n        validate_balance: bool = True,\n    ) -> int:\n        block = get_block(block_id)\n        if not block:\n            raise ValueError(f\"Block not found: {block_id}\")\n\n        cost, matching_filter = self._block_usage_cost(\n            block=block, input_data=input_data, data_size=data_size, run_time=run_time\n        )\n        if cost <= 0:\n            return 0\n\n        if validate_balance and user_credit < cost:\n            raise ValueError(f\"Insufficient credit: {user_credit} < {cost}\")\n\n        await CreditTransaction.prisma().create(\n            data={\n                \"userId\": user_id,\n                \"amount\": -cost,\n                \"type\": CreditTransactionType.USAGE,\n                \"blockId\": block.id,\n                \"metadata\": Json(\n                    {\n                        \"block\": block.name,\n                        \"input\": matching_filter,\n                    }\n                ),\n                \"createdAt\": self.time_now(),\n            }\n        )\n        return cost\n\n    async def top_up_credits(self, user_id: str, amount: int):\n        await CreditTransaction.prisma().create(\n            data={\n                \"userId\": user_id,\n                \"amount\": amount,\n                \"type\": CreditTransactionType.TOP_UP,\n                \"createdAt\": self.time_now(),\n            }\n        )",
            "children": [
                {
                    "type": "identifier",
                    "label": "UserCredit",
                    "children": []
                },
                {
                    "type": "argument_list",
                    "label": "(UserCreditBase)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "UserCreditBase",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "async def get_or_refill_credit(self, user_id: str) -> int:\n        cur_time = self.time_now()\n        cur_month = cur_time.replace(day=1, hour=0, minute=0, second=0, microsecond=0)\n        nxt_month = (\n            cur_month.replace(month=cur_month.month + 1)\n            if cur_month.month < 12\n            else cur_month.replace(year=cur_month.year + 1, month=1)\n        )\n\n        user_credit = await CreditTransaction.prisma().group_by(\n            by=[\"userId\"],\n            sum={\"amount\": True},\n            where={\n                \"userId\": user_id,\n                \"createdAt\": {\"gte\": cur_month, \"lt\": nxt_month},\n                \"isActive\": True,\n            },\n        )\n\n        if user_credit:\n            credit_sum = user_credit[0].get(\"_sum\") or {}\n            return credit_sum.get(\"amount\", 0)\n\n        key = f\"MONTHLY-CREDIT-TOP-UP-{cur_month}\"\n\n        try:\n            await CreditTransaction.prisma().create(\n                data={\n                    \"amount\": self.num_user_credits_refill,\n                    \"type\": CreditTransactionType.TOP_UP,\n                    \"userId\": user_id,\n                    \"transactionKey\": key,\n                    \"createdAt\": self.time_now(),\n                }\n            )\n        except UniqueViolationError:\n            pass  # Already refilled this month\n\n        return self.num_user_credits_refill\n\n    @staticmethod\n    def time_now():\n        return datetime.now(timezone.utc)\n\n    def _block_usage_cost(\n        self,\n        block: Block,\n        input_data: BlockInput,\n        data_size: float,\n        run_time: float,\n    ) -> tuple[int, BlockInput]:\n        block_costs = BLOCK_COSTS.get(type(block))\n        if not block_costs:\n            return 0, {}\n\n        for block_cost in block_costs:\n            if not self._is_cost_filter_match(block_cost.cost_filter, input_data):\n                continue\n\n            if block_cost.cost_type == BlockCostType.RUN:\n                return block_cost.cost_amount, block_cost.cost_filter\n\n            if block_cost.cost_type == BlockCostType.SECOND:\n                return (\n                    int(run_time * block_cost.cost_amount),\n                    block_cost.cost_filter,\n                )\n\n            if block_cost.cost_type == BlockCostType.BYTE:\n                return (\n                    int(data_size * block_cost.cost_amount),\n                    block_cost.cost_filter,\n                )\n\n        return 0, {}\n\n    def _is_cost_filter_match(\n        self, cost_filter: BlockInput, input_data: BlockInput\n    ) -> bool:\n        \"\"\"\n        Filter rules:\n          - If costFilter is an object, then check if costFilter is the subset of inputValues\n          - Otherwise, check if costFilter is equal to inputValues.\n          - Undefined, null, and empty string are considered as equal.\n        \"\"\"\n        if not isinstance(cost_filter, dict) or not isinstance(input_data, dict):\n            return cost_filter == input_data\n\n        return all(\n            (not input_data.get(k) and not v)\n            or (input_data.get(k) and self._is_cost_filter_match(v, input_data[k]))\n            for k, v in cost_filter.items()\n        )\n\n    async def spend_credits(\n        self,\n        user_id: str,\n        user_credit: int,\n        block_id: str,\n        input_data: BlockInput,\n        data_size: float,\n        run_time: float,\n        validate_balance: bool = True,\n    ) -> int:\n        block = get_block(block_id)\n        if not block:\n            raise ValueError(f\"Block not found: {block_id}\")\n\n        cost, matching_filter = self._block_usage_cost(\n            block=block, input_data=input_data, data_size=data_size, run_time=run_time\n        )\n        if cost <= 0:\n            return 0\n\n        if validate_balance and user_credit < cost:\n            raise ValueError(f\"Insufficient credit: {user_credit} < {cost}\")\n\n        await CreditTransaction.prisma().create(\n            data={\n                \"userId\": user_id,\n                \"amount\": -cost,\n                \"type\": CreditTransactionType.USAGE,\n                \"blockId\": block.id,\n                \"metadata\": Json(\n                    {\n                        \"block\": block.name,\n                        \"input\": matching_filter,\n                    }\n                ),\n                \"createdAt\": self.time_now(),\n            }\n        )\n        return cost\n\n    async def top_up_credits(self, user_id: str, amount: int):\n        await CreditTransaction.prisma().create(\n            data={\n                \"userId\": user_id,\n                \"amount\": amount,\n                \"type\": CreditTransactionType.TOP_UP,\n                \"createdAt\": self.time_now(),\n            }\n        )",
                    "children": [
                        {
                            "type": "function_definition",
                            "label": "async def get_or_refill_credit(self, user_id: str) -> int:\n        cur_time = self.time_now()\n        cur_month = cur_time.replace(day=1, hour=0, minute=0, second=0, microsecond=0)\n        nxt_month = (\n            cur_month.replace(month=cur_month.month + 1)\n            if cur_month.month < 12\n            else cur_month.replace(year=cur_month.year + 1, month=1)\n        )\n\n        user_credit = await CreditTransaction.prisma().group_by(\n            by=[\"userId\"],\n            sum={\"amount\": True},\n            where={\n                \"userId\": user_id,\n                \"createdAt\": {\"gte\": cur_month, \"lt\": nxt_month},\n                \"isActive\": True,\n            },\n        )\n\n        if user_credit:\n            credit_sum = user_credit[0].get(\"_sum\") or {}\n            return credit_sum.get(\"amount\", 0)\n\n        key = f\"MONTHLY-CREDIT-TOP-UP-{cur_month}\"\n\n        try:\n            await CreditTransaction.prisma().create(\n                data={\n                    \"amount\": self.num_user_credits_refill,\n                    \"type\": CreditTransactionType.TOP_UP,\n                    \"userId\": user_id,\n                    \"transactionKey\": key,\n                    \"createdAt\": self.time_now(),\n                }\n            )\n        except UniqueViolationError:\n            pass  # Already refilled this month\n\n        return self.num_user_credits_refill",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "get_or_refill_credit",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "label": "(self, user_id: str)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "self",
                                            "children": []
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "label": "user_id: str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "user_id",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type",
                                                    "label": "str",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "str",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "type",
                                    "label": "int",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "int",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "cur_time = self.time_now()\n        cur_month = cur_time.replace(day=1, hour=0, minute=0, second=0, microsecond=0)\n        nxt_month = (\n            cur_month.replace(month=cur_month.month + 1)\n            if cur_month.month < 12\n            else cur_month.replace(year=cur_month.year + 1, month=1)\n        )\n\n        user_credit = await CreditTransaction.prisma().group_by(\n            by=[\"userId\"],\n            sum={\"amount\": True},\n            where={\n                \"userId\": user_id,\n                \"createdAt\": {\"gte\": cur_month, \"lt\": nxt_month},\n                \"isActive\": True,\n            },\n        )\n\n        if user_credit:\n            credit_sum = user_credit[0].get(\"_sum\") or {}\n            return credit_sum.get(\"amount\", 0)\n\n        key = f\"MONTHLY-CREDIT-TOP-UP-{cur_month}\"\n\n        try:\n            await CreditTransaction.prisma().create(\n                data={\n                    \"amount\": self.num_user_credits_refill,\n                    \"type\": CreditTransactionType.TOP_UP,\n                    \"userId\": user_id,\n                    \"transactionKey\": key,\n                    \"createdAt\": self.time_now(),\n                }\n            )\n        except UniqueViolationError:\n            pass  # Already refilled this month\n\n        return self.num_user_credits_refill",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "cur_time = self.time_now()",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "cur_time = self.time_now()",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "cur_time",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "self.time_now()",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "self.time_now",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "self",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "time_now",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "()",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "cur_month = cur_time.replace(day=1, hour=0, minute=0, second=0, microsecond=0)",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "cur_month = cur_time.replace(day=1, hour=0, minute=0, second=0, microsecond=0)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "cur_month",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "cur_time.replace(day=1, hour=0, minute=0, second=0, microsecond=0)",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "cur_time.replace",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "cur_time",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "replace",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(day=1, hour=0, minute=0, second=0, microsecond=0)",
                                                                    "children": [
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "day=1",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "day",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "integer",
                                                                                    "label": "1",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "hour=0",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "hour",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "integer",
                                                                                    "label": "0",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "minute=0",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "minute",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "integer",
                                                                                    "label": "0",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "second=0",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "second",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "integer",
                                                                                    "label": "0",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "microsecond=0",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "microsecond",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "integer",
                                                                                    "label": "0",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "nxt_month = (\n            cur_month.replace(month=cur_month.month + 1)\n            if cur_month.month < 12\n            else cur_month.replace(year=cur_month.year + 1, month=1)\n        )",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "nxt_month = (\n            cur_month.replace(month=cur_month.month + 1)\n            if cur_month.month < 12\n            else cur_month.replace(year=cur_month.year + 1, month=1)\n        )",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "nxt_month",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "parenthesized_expression",
                                                            "label": "(\n            cur_month.replace(month=cur_month.month + 1)\n            if cur_month.month < 12\n            else cur_month.replace(year=cur_month.year + 1, month=1)\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "conditional_expression",
                                                                    "label": "cur_month.replace(month=cur_month.month + 1)\n            if cur_month.month < 12\n            else cur_month.replace(year=cur_month.year + 1, month=1)",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "cur_month.replace(month=cur_month.month + 1)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "cur_month.replace",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "cur_month",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "replace",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(month=cur_month.month + 1)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "keyword_argument",
                                                                                            "label": "month=cur_month.month + 1",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "month",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "binary_operator",
                                                                                                    "label": "cur_month.month + 1",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "cur_month.month",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "cur_month",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "month",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "integer",
                                                                                                            "label": "1",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "comparison_operator",
                                                                            "label": "cur_month.month < 12",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "cur_month.month",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "cur_month",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "month",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "integer",
                                                                                    "label": "12",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "call",
                                                                            "label": "cur_month.replace(year=cur_month.year + 1, month=1)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "cur_month.replace",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "cur_month",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "replace",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(year=cur_month.year + 1, month=1)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "keyword_argument",
                                                                                            "label": "year=cur_month.year + 1",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "year",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "binary_operator",
                                                                                                    "label": "cur_month.year + 1",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "cur_month.year",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "cur_month",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "year",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "integer",
                                                                                                            "label": "1",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "keyword_argument",
                                                                                            "label": "month=1",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "month",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "integer",
                                                                                                    "label": "1",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "user_credit = await CreditTransaction.prisma().group_by(\n            by=[\"userId\"],\n            sum={\"amount\": True},\n            where={\n                \"userId\": user_id,\n                \"createdAt\": {\"gte\": cur_month, \"lt\": nxt_month},\n                \"isActive\": True,\n            },\n        )",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "user_credit = await CreditTransaction.prisma().group_by(\n            by=[\"userId\"],\n            sum={\"amount\": True},\n            where={\n                \"userId\": user_id,\n                \"createdAt\": {\"gte\": cur_month, \"lt\": nxt_month},\n                \"isActive\": True,\n            },\n        )",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "user_credit",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "await",
                                                            "label": "await CreditTransaction.prisma().group_by(\n            by=[\"userId\"],\n            sum={\"amount\": True},\n            where={\n                \"userId\": user_id,\n                \"createdAt\": {\"gte\": cur_month, \"lt\": nxt_month},\n                \"isActive\": True,\n            },\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "CreditTransaction.prisma().group_by(\n            by=[\"userId\"],\n            sum={\"amount\": True},\n            where={\n                \"userId\": user_id,\n                \"createdAt\": {\"gte\": cur_month, \"lt\": nxt_month},\n                \"isActive\": True,\n            },\n        )",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "CreditTransaction.prisma().group_by",
                                                                            "children": [
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "CreditTransaction.prisma()",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "CreditTransaction.prisma",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "CreditTransaction",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "prisma",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "()",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "group_by",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(\n            by=[\"userId\"],\n            sum={\"amount\": True},\n            where={\n                \"userId\": user_id,\n                \"createdAt\": {\"gte\": cur_month, \"lt\": nxt_month},\n                \"isActive\": True,\n            },\n        )",
                                                                            "children": [
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "label": "by=[\"userId\"]",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "by",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "list",
                                                                                            "label": "[\"userId\"]",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"userId\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "userId",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "label": "sum={\"amount\": True}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "sum",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "dictionary",
                                                                                            "label": "{\"amount\": True}",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "pair",
                                                                                                    "label": "\"amount\": True",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string",
                                                                                                            "label": "\"amount\"",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string_start",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_content",
                                                                                                                    "label": "amount",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_end",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "true",
                                                                                                            "label": "True",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "label": "where={\n                \"userId\": user_id,\n                \"createdAt\": {\"gte\": cur_month, \"lt\": nxt_month},\n                \"isActive\": True,\n            }",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "where",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "dictionary",
                                                                                            "label": "{\n                \"userId\": user_id,\n                \"createdAt\": {\"gte\": cur_month, \"lt\": nxt_month},\n                \"isActive\": True,\n            }",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "pair",
                                                                                                    "label": "\"userId\": user_id",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string",
                                                                                                            "label": "\"userId\"",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string_start",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_content",
                                                                                                                    "label": "userId",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_end",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "user_id",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "pair",
                                                                                                    "label": "\"createdAt\": {\"gte\": cur_month, \"lt\": nxt_month}",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string",
                                                                                                            "label": "\"createdAt\"",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string_start",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_content",
                                                                                                                    "label": "createdAt",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_end",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "dictionary",
                                                                                                            "label": "{\"gte\": cur_month, \"lt\": nxt_month}",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "pair",
                                                                                                                    "label": "\"gte\": cur_month",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "string",
                                                                                                                            "label": "\"gte\"",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "string_start",
                                                                                                                                    "label": "\"",
                                                                                                                                    "children": []
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "string_content",
                                                                                                                                    "label": "gte",
                                                                                                                                    "children": []
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "string_end",
                                                                                                                                    "label": "\"",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "cur_month",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "pair",
                                                                                                                    "label": "\"lt\": nxt_month",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "string",
                                                                                                                            "label": "\"lt\"",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "string_start",
                                                                                                                                    "label": "\"",
                                                                                                                                    "children": []
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "string_content",
                                                                                                                                    "label": "lt",
                                                                                                                                    "children": []
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "string_end",
                                                                                                                                    "label": "\"",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "nxt_month",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "pair",
                                                                                                    "label": "\"isActive\": True",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string",
                                                                                                            "label": "\"isActive\"",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string_start",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_content",
                                                                                                                    "label": "isActive",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_end",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "true",
                                                                                                            "label": "True",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "if_statement",
                                            "label": "if user_credit:\n            credit_sum = user_credit[0].get(\"_sum\") or {}\n            return credit_sum.get(\"amount\", 0)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "user_credit",
                                                    "children": []
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "credit_sum = user_credit[0].get(\"_sum\") or {}\n            return credit_sum.get(\"amount\", 0)",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "credit_sum = user_credit[0].get(\"_sum\") or {}",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "label": "credit_sum = user_credit[0].get(\"_sum\") or {}",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "credit_sum",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "boolean_operator",
                                                                            "label": "user_credit[0].get(\"_sum\") or {}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "user_credit[0].get(\"_sum\")",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "user_credit[0].get",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "subscript",
                                                                                                    "label": "user_credit[0]",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "user_credit",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "integer",
                                                                                                            "label": "0",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "get",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "(\"_sum\")",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"_sum\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "_sum",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "dictionary",
                                                                                    "label": "{}",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "return_statement",
                                                            "label": "return credit_sum.get(\"amount\", 0)",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "credit_sum.get(\"amount\", 0)",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "credit_sum.get",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "credit_sum",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "get",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(\"amount\", 0)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "\"amount\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "amount",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "integer",
                                                                                    "label": "0",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "key = f\"MONTHLY-CREDIT-TOP-UP-{cur_month}\"",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "key = f\"MONTHLY-CREDIT-TOP-UP-{cur_month}\"",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "key",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string",
                                                            "label": "f\"MONTHLY-CREDIT-TOP-UP-{cur_month}\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "f\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "MONTHLY-CREDIT-TOP-UP-",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "interpolation",
                                                                    "label": "{cur_month}",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "cur_month",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "try_statement",
                                            "label": "try:\n            await CreditTransaction.prisma().create(\n                data={\n                    \"amount\": self.num_user_credits_refill,\n                    \"type\": CreditTransactionType.TOP_UP,\n                    \"userId\": user_id,\n                    \"transactionKey\": key,\n                    \"createdAt\": self.time_now(),\n                }\n            )\n        except UniqueViolationError:\n            pass  # Already refilled this month",
                                            "children": [
                                                {
                                                    "type": "block",
                                                    "label": "await CreditTransaction.prisma().create(\n                data={\n                    \"amount\": self.num_user_credits_refill,\n                    \"type\": CreditTransactionType.TOP_UP,\n                    \"userId\": user_id,\n                    \"transactionKey\": key,\n                    \"createdAt\": self.time_now(),\n                }\n            )",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "await CreditTransaction.prisma().create(\n                data={\n                    \"amount\": self.num_user_credits_refill,\n                    \"type\": CreditTransactionType.TOP_UP,\n                    \"userId\": user_id,\n                    \"transactionKey\": key,\n                    \"createdAt\": self.time_now(),\n                }\n            )",
                                                            "children": [
                                                                {
                                                                    "type": "await",
                                                                    "label": "await CreditTransaction.prisma().create(\n                data={\n                    \"amount\": self.num_user_credits_refill,\n                    \"type\": CreditTransactionType.TOP_UP,\n                    \"userId\": user_id,\n                    \"transactionKey\": key,\n                    \"createdAt\": self.time_now(),\n                }\n            )",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "CreditTransaction.prisma().create(\n                data={\n                    \"amount\": self.num_user_credits_refill,\n                    \"type\": CreditTransactionType.TOP_UP,\n                    \"userId\": user_id,\n                    \"transactionKey\": key,\n                    \"createdAt\": self.time_now(),\n                }\n            )",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "CreditTransaction.prisma().create",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "call",
                                                                                            "label": "CreditTransaction.prisma()",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "CreditTransaction.prisma",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "CreditTransaction",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "prisma",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "argument_list",
                                                                                                    "label": "()",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "create",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(\n                data={\n                    \"amount\": self.num_user_credits_refill,\n                    \"type\": CreditTransactionType.TOP_UP,\n                    \"userId\": user_id,\n                    \"transactionKey\": key,\n                    \"createdAt\": self.time_now(),\n                }\n            )",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "keyword_argument",
                                                                                            "label": "data={\n                    \"amount\": self.num_user_credits_refill,\n                    \"type\": CreditTransactionType.TOP_UP,\n                    \"userId\": user_id,\n                    \"transactionKey\": key,\n                    \"createdAt\": self.time_now(),\n                }",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "data",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "dictionary",
                                                                                                    "label": "{\n                    \"amount\": self.num_user_credits_refill,\n                    \"type\": CreditTransactionType.TOP_UP,\n                    \"userId\": user_id,\n                    \"transactionKey\": key,\n                    \"createdAt\": self.time_now(),\n                }",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "pair",
                                                                                                            "label": "\"amount\": self.num_user_credits_refill",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string",
                                                                                                                    "label": "\"amount\"",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "string_start",
                                                                                                                            "label": "\"",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "string_content",
                                                                                                                            "label": "amount",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "string_end",
                                                                                                                            "label": "\"",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "attribute",
                                                                                                                    "label": "self.num_user_credits_refill",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "self",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "num_user_credits_refill",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "pair",
                                                                                                            "label": "\"type\": CreditTransactionType.TOP_UP",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string",
                                                                                                                    "label": "\"type\"",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "string_start",
                                                                                                                            "label": "\"",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "string_content",
                                                                                                                            "label": "type",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "string_end",
                                                                                                                            "label": "\"",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "attribute",
                                                                                                                    "label": "CreditTransactionType.TOP_UP",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "CreditTransactionType",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "TOP_UP",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "pair",
                                                                                                            "label": "\"userId\": user_id",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string",
                                                                                                                    "label": "\"userId\"",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "string_start",
                                                                                                                            "label": "\"",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "string_content",
                                                                                                                            "label": "userId",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "string_end",
                                                                                                                            "label": "\"",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "user_id",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "pair",
                                                                                                            "label": "\"transactionKey\": key",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string",
                                                                                                                    "label": "\"transactionKey\"",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "string_start",
                                                                                                                            "label": "\"",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "string_content",
                                                                                                                            "label": "transactionKey",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "string_end",
                                                                                                                            "label": "\"",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "key",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "pair",
                                                                                                            "label": "\"createdAt\": self.time_now()",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string",
                                                                                                                    "label": "\"createdAt\"",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "string_start",
                                                                                                                            "label": "\"",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "string_content",
                                                                                                                            "label": "createdAt",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "string_end",
                                                                                                                            "label": "\"",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "call",
                                                                                                                    "label": "self.time_now()",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "attribute",
                                                                                                                            "label": "self.time_now",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "self",
                                                                                                                                    "children": []
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "time_now",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "argument_list",
                                                                                                                            "label": "()",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "except_clause",
                                                    "label": "except UniqueViolationError:\n            pass  # Already refilled this month",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "UniqueViolationError",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "block",
                                                            "label": "pass  # Already refilled this month",
                                                            "children": [
                                                                {
                                                                    "type": "pass_statement",
                                                                    "label": "pass",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "comment",
                                                                    "label": "# Already refilled this month",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "return_statement",
                                            "label": "return self.num_user_credits_refill",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "self.num_user_credits_refill",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "self",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "num_user_credits_refill",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "decorated_definition",
                            "label": "@staticmethod\n    def time_now():\n        return datetime.now(timezone.utc)",
                            "children": [
                                {
                                    "type": "decorator",
                                    "label": "@staticmethod",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "staticmethod",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "function_definition",
                                    "label": "def time_now():\n        return datetime.now(timezone.utc)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "time_now",
                                            "children": []
                                        },
                                        {
                                            "type": "parameters",
                                            "label": "()",
                                            "children": []
                                        },
                                        {
                                            "type": "block",
                                            "label": "return datetime.now(timezone.utc)",
                                            "children": [
                                                {
                                                    "type": "return_statement",
                                                    "label": "return datetime.now(timezone.utc)",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "datetime.now(timezone.utc)",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "datetime.now",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "datetime",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "now",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(timezone.utc)",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "timezone.utc",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "timezone",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "utc",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "label": "def _block_usage_cost(\n        self,\n        block: Block,\n        input_data: BlockInput,\n        data_size: float,\n        run_time: float,\n    ) -> tuple[int, BlockInput]:\n        block_costs = BLOCK_COSTS.get(type(block))\n        if not block_costs:\n            return 0, {}\n\n        for block_cost in block_costs:\n            if not self._is_cost_filter_match(block_cost.cost_filter, input_data):\n                continue\n\n            if block_cost.cost_type == BlockCostType.RUN:\n                return block_cost.cost_amount, block_cost.cost_filter\n\n            if block_cost.cost_type == BlockCostType.SECOND:\n                return (\n                    int(run_time * block_cost.cost_amount),\n                    block_cost.cost_filter,\n                )\n\n            if block_cost.cost_type == BlockCostType.BYTE:\n                return (\n                    int(data_size * block_cost.cost_amount),\n                    block_cost.cost_filter,\n                )\n\n        return 0, {}",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "_block_usage_cost",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "label": "(\n        self,\n        block: Block,\n        input_data: BlockInput,\n        data_size: float,\n        run_time: float,\n    )",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "self",
                                            "children": []
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "label": "block: Block",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "block",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type",
                                                    "label": "Block",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Block",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "label": "input_data: BlockInput",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "input_data",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type",
                                                    "label": "BlockInput",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "BlockInput",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "label": "data_size: float",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "data_size",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type",
                                                    "label": "float",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "float",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "label": "run_time: float",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "run_time",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type",
                                                    "label": "float",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "float",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "type",
                                    "label": "tuple[int, BlockInput]",
                                    "children": [
                                        {
                                            "type": "generic_type",
                                            "label": "tuple[int, BlockInput]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "tuple",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type_parameter",
                                                    "label": "[int, BlockInput]",
                                                    "children": [
                                                        {
                                                            "type": "type",
                                                            "label": "int",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "int",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "BlockInput",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "BlockInput",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "block_costs = BLOCK_COSTS.get(type(block))\n        if not block_costs:\n            return 0, {}\n\n        for block_cost in block_costs:\n            if not self._is_cost_filter_match(block_cost.cost_filter, input_data):\n                continue\n\n            if block_cost.cost_type == BlockCostType.RUN:\n                return block_cost.cost_amount, block_cost.cost_filter\n\n            if block_cost.cost_type == BlockCostType.SECOND:\n                return (\n                    int(run_time * block_cost.cost_amount),\n                    block_cost.cost_filter,\n                )\n\n            if block_cost.cost_type == BlockCostType.BYTE:\n                return (\n                    int(data_size * block_cost.cost_amount),\n                    block_cost.cost_filter,\n                )\n\n        return 0, {}",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "block_costs = BLOCK_COSTS.get(type(block))",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "block_costs = BLOCK_COSTS.get(type(block))",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "block_costs",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "BLOCK_COSTS.get(type(block))",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "BLOCK_COSTS.get",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "BLOCK_COSTS",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "get",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(type(block))",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "type(block)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "type",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(block)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "block",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "if_statement",
                                            "label": "if not block_costs:\n            return 0, {}",
                                            "children": [
                                                {
                                                    "type": "not_operator",
                                                    "label": "not block_costs",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "block_costs",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "return 0, {}",
                                                    "children": [
                                                        {
                                                            "type": "return_statement",
                                                            "label": "return 0, {}",
                                                            "children": [
                                                                {
                                                                    "type": "expression_list",
                                                                    "label": "0, {}",
                                                                    "children": [
                                                                        {
                                                                            "type": "integer",
                                                                            "label": "0",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "dictionary",
                                                                            "label": "{}",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "for_statement",
                                            "label": "for block_cost in block_costs:\n            if not self._is_cost_filter_match(block_cost.cost_filter, input_data):\n                continue\n\n            if block_cost.cost_type == BlockCostType.RUN:\n                return block_cost.cost_amount, block_cost.cost_filter\n\n            if block_cost.cost_type == BlockCostType.SECOND:\n                return (\n                    int(run_time * block_cost.cost_amount),\n                    block_cost.cost_filter,\n                )\n\n            if block_cost.cost_type == BlockCostType.BYTE:\n                return (\n                    int(data_size * block_cost.cost_amount),\n                    block_cost.cost_filter,\n                )",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "block_cost",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "block_costs",
                                                    "children": []
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "if not self._is_cost_filter_match(block_cost.cost_filter, input_data):\n                continue\n\n            if block_cost.cost_type == BlockCostType.RUN:\n                return block_cost.cost_amount, block_cost.cost_filter\n\n            if block_cost.cost_type == BlockCostType.SECOND:\n                return (\n                    int(run_time * block_cost.cost_amount),\n                    block_cost.cost_filter,\n                )\n\n            if block_cost.cost_type == BlockCostType.BYTE:\n                return (\n                    int(data_size * block_cost.cost_amount),\n                    block_cost.cost_filter,\n                )",
                                                    "children": [
                                                        {
                                                            "type": "if_statement",
                                                            "label": "if not self._is_cost_filter_match(block_cost.cost_filter, input_data):\n                continue",
                                                            "children": [
                                                                {
                                                                    "type": "not_operator",
                                                                    "label": "not self._is_cost_filter_match(block_cost.cost_filter, input_data)",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "self._is_cost_filter_match(block_cost.cost_filter, input_data)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "self._is_cost_filter_match",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "self",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "_is_cost_filter_match",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(block_cost.cost_filter, input_data)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "block_cost.cost_filter",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "block_cost",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "cost_filter",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "input_data",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "block",
                                                                    "label": "continue",
                                                                    "children": [
                                                                        {
                                                                            "type": "continue_statement",
                                                                            "label": "continue",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "if_statement",
                                                            "label": "if block_cost.cost_type == BlockCostType.RUN:\n                return block_cost.cost_amount, block_cost.cost_filter",
                                                            "children": [
                                                                {
                                                                    "type": "comparison_operator",
                                                                    "label": "block_cost.cost_type == BlockCostType.RUN",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "block_cost.cost_type",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "block_cost",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "cost_type",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "BlockCostType.RUN",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "BlockCostType",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "RUN",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "block",
                                                                    "label": "return block_cost.cost_amount, block_cost.cost_filter",
                                                                    "children": [
                                                                        {
                                                                            "type": "return_statement",
                                                                            "label": "return block_cost.cost_amount, block_cost.cost_filter",
                                                                            "children": [
                                                                                {
                                                                                    "type": "expression_list",
                                                                                    "label": "block_cost.cost_amount, block_cost.cost_filter",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "block_cost.cost_amount",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "block_cost",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "cost_amount",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "block_cost.cost_filter",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "block_cost",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "cost_filter",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "if_statement",
                                                            "label": "if block_cost.cost_type == BlockCostType.SECOND:\n                return (\n                    int(run_time * block_cost.cost_amount),\n                    block_cost.cost_filter,\n                )",
                                                            "children": [
                                                                {
                                                                    "type": "comparison_operator",
                                                                    "label": "block_cost.cost_type == BlockCostType.SECOND",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "block_cost.cost_type",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "block_cost",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "cost_type",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "BlockCostType.SECOND",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "BlockCostType",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "SECOND",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "block",
                                                                    "label": "return (\n                    int(run_time * block_cost.cost_amount),\n                    block_cost.cost_filter,\n                )",
                                                                    "children": [
                                                                        {
                                                                            "type": "return_statement",
                                                                            "label": "return (\n                    int(run_time * block_cost.cost_amount),\n                    block_cost.cost_filter,\n                )",
                                                                            "children": [
                                                                                {
                                                                                    "type": "tuple",
                                                                                    "label": "(\n                    int(run_time * block_cost.cost_amount),\n                    block_cost.cost_filter,\n                )",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "call",
                                                                                            "label": "int(run_time * block_cost.cost_amount)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "int",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "argument_list",
                                                                                                    "label": "(run_time * block_cost.cost_amount)",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "binary_operator",
                                                                                                            "label": "run_time * block_cost.cost_amount",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "run_time",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "attribute",
                                                                                                                    "label": "block_cost.cost_amount",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "block_cost",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "cost_amount",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "block_cost.cost_filter",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "block_cost",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "cost_filter",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "if_statement",
                                                            "label": "if block_cost.cost_type == BlockCostType.BYTE:\n                return (\n                    int(data_size * block_cost.cost_amount),\n                    block_cost.cost_filter,\n                )",
                                                            "children": [
                                                                {
                                                                    "type": "comparison_operator",
                                                                    "label": "block_cost.cost_type == BlockCostType.BYTE",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "block_cost.cost_type",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "block_cost",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "cost_type",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "BlockCostType.BYTE",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "BlockCostType",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "BYTE",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "block",
                                                                    "label": "return (\n                    int(data_size * block_cost.cost_amount),\n                    block_cost.cost_filter,\n                )",
                                                                    "children": [
                                                                        {
                                                                            "type": "return_statement",
                                                                            "label": "return (\n                    int(data_size * block_cost.cost_amount),\n                    block_cost.cost_filter,\n                )",
                                                                            "children": [
                                                                                {
                                                                                    "type": "tuple",
                                                                                    "label": "(\n                    int(data_size * block_cost.cost_amount),\n                    block_cost.cost_filter,\n                )",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "call",
                                                                                            "label": "int(data_size * block_cost.cost_amount)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "int",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "argument_list",
                                                                                                    "label": "(data_size * block_cost.cost_amount)",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "binary_operator",
                                                                                                            "label": "data_size * block_cost.cost_amount",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "data_size",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "attribute",
                                                                                                                    "label": "block_cost.cost_amount",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "block_cost",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "cost_amount",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "block_cost.cost_filter",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "block_cost",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "cost_filter",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "return_statement",
                                            "label": "return 0, {}",
                                            "children": [
                                                {
                                                    "type": "expression_list",
                                                    "label": "0, {}",
                                                    "children": [
                                                        {
                                                            "type": "integer",
                                                            "label": "0",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "dictionary",
                                                            "label": "{}",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "label": "def _is_cost_filter_match(\n        self, cost_filter: BlockInput, input_data: BlockInput\n    ) -> bool:\n        \"\"\"\n        Filter rules:\n          - If costFilter is an object, then check if costFilter is the subset of inputValues\n          - Otherwise, check if costFilter is equal to inputValues.\n          - Undefined, null, and empty string are considered as equal.\n        \"\"\"\n        if not isinstance(cost_filter, dict) or not isinstance(input_data, dict):\n            return cost_filter == input_data\n\n        return all(\n            (not input_data.get(k) and not v)\n            or (input_data.get(k) and self._is_cost_filter_match(v, input_data[k]))\n            for k, v in cost_filter.items()\n        )",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "_is_cost_filter_match",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "label": "(\n        self, cost_filter: BlockInput, input_data: BlockInput\n    )",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "self",
                                            "children": []
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "label": "cost_filter: BlockInput",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "cost_filter",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type",
                                                    "label": "BlockInput",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "BlockInput",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "label": "input_data: BlockInput",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "input_data",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type",
                                                    "label": "BlockInput",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "BlockInput",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "type",
                                    "label": "bool",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "bool",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "\"\"\"\n        Filter rules:\n          - If costFilter is an object, then check if costFilter is the subset of inputValues\n          - Otherwise, check if costFilter is equal to inputValues.\n          - Undefined, null, and empty string are considered as equal.\n        \"\"\"\n        if not isinstance(cost_filter, dict) or not isinstance(input_data, dict):\n            return cost_filter == input_data\n\n        return all(\n            (not input_data.get(k) and not v)\n            or (input_data.get(k) and self._is_cost_filter_match(v, input_data[k]))\n            for k, v in cost_filter.items()\n        )",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "\"\"\"\n        Filter rules:\n          - If costFilter is an object, then check if costFilter is the subset of inputValues\n          - Otherwise, check if costFilter is equal to inputValues.\n          - Undefined, null, and empty string are considered as equal.\n        \"\"\"",
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "label": "\"\"\"\n        Filter rules:\n          - If costFilter is an object, then check if costFilter is the subset of inputValues\n          - Otherwise, check if costFilter is equal to inputValues.\n          - Undefined, null, and empty string are considered as equal.\n        \"\"\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"\"\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "\n        Filter rules:\n          - If costFilter is an object, then check if costFilter is the subset of inputValues\n          - Otherwise, check if costFilter is equal to inputValues.\n          - Undefined, null, and empty string are considered as equal.\n        ",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"\"\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "if_statement",
                                            "label": "if not isinstance(cost_filter, dict) or not isinstance(input_data, dict):\n            return cost_filter == input_data",
                                            "children": [
                                                {
                                                    "type": "boolean_operator",
                                                    "label": "not isinstance(cost_filter, dict) or not isinstance(input_data, dict)",
                                                    "children": [
                                                        {
                                                            "type": "not_operator",
                                                            "label": "not isinstance(cost_filter, dict)",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "isinstance(cost_filter, dict)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "isinstance",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(cost_filter, dict)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "cost_filter",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "dict",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "not_operator",
                                                            "label": "not isinstance(input_data, dict)",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "isinstance(input_data, dict)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "isinstance",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(input_data, dict)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "input_data",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "dict",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "return cost_filter == input_data",
                                                    "children": [
                                                        {
                                                            "type": "return_statement",
                                                            "label": "return cost_filter == input_data",
                                                            "children": [
                                                                {
                                                                    "type": "comparison_operator",
                                                                    "label": "cost_filter == input_data",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "cost_filter",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "input_data",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "return_statement",
                                            "label": "return all(\n            (not input_data.get(k) and not v)\n            or (input_data.get(k) and self._is_cost_filter_match(v, input_data[k]))\n            for k, v in cost_filter.items()\n        )",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "all(\n            (not input_data.get(k) and not v)\n            or (input_data.get(k) and self._is_cost_filter_match(v, input_data[k]))\n            for k, v in cost_filter.items()\n        )",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "all",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "generator_expression",
                                                            "label": "(\n            (not input_data.get(k) and not v)\n            or (input_data.get(k) and self._is_cost_filter_match(v, input_data[k]))\n            for k, v in cost_filter.items()\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "boolean_operator",
                                                                    "label": "(not input_data.get(k) and not v)\n            or (input_data.get(k) and self._is_cost_filter_match(v, input_data[k]))",
                                                                    "children": [
                                                                        {
                                                                            "type": "parenthesized_expression",
                                                                            "label": "(not input_data.get(k) and not v)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "boolean_operator",
                                                                                    "label": "not input_data.get(k) and not v",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "not_operator",
                                                                                            "label": "not input_data.get(k)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "call",
                                                                                                    "label": "input_data.get(k)",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "input_data.get",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "input_data",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "get",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "argument_list",
                                                                                                            "label": "(k)",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "k",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "not_operator",
                                                                                            "label": "not v",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "v",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "parenthesized_expression",
                                                                            "label": "(input_data.get(k) and self._is_cost_filter_match(v, input_data[k]))",
                                                                            "children": [
                                                                                {
                                                                                    "type": "boolean_operator",
                                                                                    "label": "input_data.get(k) and self._is_cost_filter_match(v, input_data[k])",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "call",
                                                                                            "label": "input_data.get(k)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "input_data.get",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "input_data",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "get",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "argument_list",
                                                                                                    "label": "(k)",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "k",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "call",
                                                                                            "label": "self._is_cost_filter_match(v, input_data[k])",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "self._is_cost_filter_match",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "self",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "_is_cost_filter_match",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "argument_list",
                                                                                                    "label": "(v, input_data[k])",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "v",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "subscript",
                                                                                                            "label": "input_data[k]",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "input_data",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "k",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "for_in_clause",
                                                                    "label": "for k, v in cost_filter.items()",
                                                                    "children": [
                                                                        {
                                                                            "type": "pattern_list",
                                                                            "label": "k, v",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "k",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "v",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "call",
                                                                            "label": "cost_filter.items()",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "cost_filter.items",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "cost_filter",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "items",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "()",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "label": "async def spend_credits(\n        self,\n        user_id: str,\n        user_credit: int,\n        block_id: str,\n        input_data: BlockInput,\n        data_size: float,\n        run_time: float,\n        validate_balance: bool = True,\n    ) -> int:\n        block = get_block(block_id)\n        if not block:\n            raise ValueError(f\"Block not found: {block_id}\")\n\n        cost, matching_filter = self._block_usage_cost(\n            block=block, input_data=input_data, data_size=data_size, run_time=run_time\n        )\n        if cost <= 0:\n            return 0\n\n        if validate_balance and user_credit < cost:\n            raise ValueError(f\"Insufficient credit: {user_credit} < {cost}\")\n\n        await CreditTransaction.prisma().create(\n            data={\n                \"userId\": user_id,\n                \"amount\": -cost,\n                \"type\": CreditTransactionType.USAGE,\n                \"blockId\": block.id,\n                \"metadata\": Json(\n                    {\n                        \"block\": block.name,\n                        \"input\": matching_filter,\n                    }\n                ),\n                \"createdAt\": self.time_now(),\n            }\n        )\n        return cost",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "spend_credits",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "label": "(\n        self,\n        user_id: str,\n        user_credit: int,\n        block_id: str,\n        input_data: BlockInput,\n        data_size: float,\n        run_time: float,\n        validate_balance: bool = True,\n    )",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "self",
                                            "children": []
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "label": "user_id: str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "user_id",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type",
                                                    "label": "str",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "str",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "label": "user_credit: int",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "user_credit",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type",
                                                    "label": "int",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "int",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "label": "block_id: str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "block_id",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type",
                                                    "label": "str",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "str",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "label": "input_data: BlockInput",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "input_data",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type",
                                                    "label": "BlockInput",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "BlockInput",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "label": "data_size: float",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "data_size",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type",
                                                    "label": "float",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "float",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "label": "run_time: float",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "run_time",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type",
                                                    "label": "float",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "float",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "typed_default_parameter",
                                            "label": "validate_balance: bool = True",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "validate_balance",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type",
                                                    "label": "bool",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "bool",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "true",
                                                    "label": "True",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "type",
                                    "label": "int",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "int",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "block = get_block(block_id)\n        if not block:\n            raise ValueError(f\"Block not found: {block_id}\")\n\n        cost, matching_filter = self._block_usage_cost(\n            block=block, input_data=input_data, data_size=data_size, run_time=run_time\n        )\n        if cost <= 0:\n            return 0\n\n        if validate_balance and user_credit < cost:\n            raise ValueError(f\"Insufficient credit: {user_credit} < {cost}\")\n\n        await CreditTransaction.prisma().create(\n            data={\n                \"userId\": user_id,\n                \"amount\": -cost,\n                \"type\": CreditTransactionType.USAGE,\n                \"blockId\": block.id,\n                \"metadata\": Json(\n                    {\n                        \"block\": block.name,\n                        \"input\": matching_filter,\n                    }\n                ),\n                \"createdAt\": self.time_now(),\n            }\n        )\n        return cost",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "block = get_block(block_id)",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "block = get_block(block_id)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "block",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "get_block(block_id)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "get_block",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(block_id)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "block_id",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "if_statement",
                                            "label": "if not block:\n            raise ValueError(f\"Block not found: {block_id}\")",
                                            "children": [
                                                {
                                                    "type": "not_operator",
                                                    "label": "not block",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "block",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "raise ValueError(f\"Block not found: {block_id}\")",
                                                    "children": [
                                                        {
                                                            "type": "raise_statement",
                                                            "label": "raise ValueError(f\"Block not found: {block_id}\")",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "ValueError(f\"Block not found: {block_id}\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "ValueError",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(f\"Block not found: {block_id}\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "f\"Block not found: {block_id}\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "f\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "Block not found: ",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "interpolation",
                                                                                            "label": "{block_id}",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "block_id",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "cost, matching_filter = self._block_usage_cost(\n            block=block, input_data=input_data, data_size=data_size, run_time=run_time\n        )",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "cost, matching_filter = self._block_usage_cost(\n            block=block, input_data=input_data, data_size=data_size, run_time=run_time\n        )",
                                                    "children": [
                                                        {
                                                            "type": "pattern_list",
                                                            "label": "cost, matching_filter",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "cost",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "matching_filter",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "self._block_usage_cost(\n            block=block, input_data=input_data, data_size=data_size, run_time=run_time\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "self._block_usage_cost",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "self",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "_block_usage_cost",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(\n            block=block, input_data=input_data, data_size=data_size, run_time=run_time\n        )",
                                                                    "children": [
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "block=block",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "block",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "block",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "input_data=input_data",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "input_data",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "input_data",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "data_size=data_size",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "data_size",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "data_size",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "run_time=run_time",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "run_time",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "run_time",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "if_statement",
                                            "label": "if cost <= 0:\n            return 0",
                                            "children": [
                                                {
                                                    "type": "comparison_operator",
                                                    "label": "cost <= 0",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "cost",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "integer",
                                                            "label": "0",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "return 0",
                                                    "children": [
                                                        {
                                                            "type": "return_statement",
                                                            "label": "return 0",
                                                            "children": [
                                                                {
                                                                    "type": "integer",
                                                                    "label": "0",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "if_statement",
                                            "label": "if validate_balance and user_credit < cost:\n            raise ValueError(f\"Insufficient credit: {user_credit} < {cost}\")",
                                            "children": [
                                                {
                                                    "type": "boolean_operator",
                                                    "label": "validate_balance and user_credit < cost",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "validate_balance",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "comparison_operator",
                                                            "label": "user_credit < cost",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "user_credit",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "cost",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "raise ValueError(f\"Insufficient credit: {user_credit} < {cost}\")",
                                                    "children": [
                                                        {
                                                            "type": "raise_statement",
                                                            "label": "raise ValueError(f\"Insufficient credit: {user_credit} < {cost}\")",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "ValueError(f\"Insufficient credit: {user_credit} < {cost}\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "ValueError",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(f\"Insufficient credit: {user_credit} < {cost}\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "f\"Insufficient credit: {user_credit} < {cost}\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "f\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "Insufficient credit: ",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "interpolation",
                                                                                            "label": "{user_credit}",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "user_credit",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": " < ",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "interpolation",
                                                                                            "label": "{cost}",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "cost",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "await CreditTransaction.prisma().create(\n            data={\n                \"userId\": user_id,\n                \"amount\": -cost,\n                \"type\": CreditTransactionType.USAGE,\n                \"blockId\": block.id,\n                \"metadata\": Json(\n                    {\n                        \"block\": block.name,\n                        \"input\": matching_filter,\n                    }\n                ),\n                \"createdAt\": self.time_now(),\n            }\n        )",
                                            "children": [
                                                {
                                                    "type": "await",
                                                    "label": "await CreditTransaction.prisma().create(\n            data={\n                \"userId\": user_id,\n                \"amount\": -cost,\n                \"type\": CreditTransactionType.USAGE,\n                \"blockId\": block.id,\n                \"metadata\": Json(\n                    {\n                        \"block\": block.name,\n                        \"input\": matching_filter,\n                    }\n                ),\n                \"createdAt\": self.time_now(),\n            }\n        )",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "CreditTransaction.prisma().create(\n            data={\n                \"userId\": user_id,\n                \"amount\": -cost,\n                \"type\": CreditTransactionType.USAGE,\n                \"blockId\": block.id,\n                \"metadata\": Json(\n                    {\n                        \"block\": block.name,\n                        \"input\": matching_filter,\n                    }\n                ),\n                \"createdAt\": self.time_now(),\n            }\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "CreditTransaction.prisma().create",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "CreditTransaction.prisma()",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "CreditTransaction.prisma",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "CreditTransaction",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "prisma",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "()",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "create",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(\n            data={\n                \"userId\": user_id,\n                \"amount\": -cost,\n                \"type\": CreditTransactionType.USAGE,\n                \"blockId\": block.id,\n                \"metadata\": Json(\n                    {\n                        \"block\": block.name,\n                        \"input\": matching_filter,\n                    }\n                ),\n                \"createdAt\": self.time_now(),\n            }\n        )",
                                                                    "children": [
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "data={\n                \"userId\": user_id,\n                \"amount\": -cost,\n                \"type\": CreditTransactionType.USAGE,\n                \"blockId\": block.id,\n                \"metadata\": Json(\n                    {\n                        \"block\": block.name,\n                        \"input\": matching_filter,\n                    }\n                ),\n                \"createdAt\": self.time_now(),\n            }",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "data",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "dictionary",
                                                                                    "label": "{\n                \"userId\": user_id,\n                \"amount\": -cost,\n                \"type\": CreditTransactionType.USAGE,\n                \"blockId\": block.id,\n                \"metadata\": Json(\n                    {\n                        \"block\": block.name,\n                        \"input\": matching_filter,\n                    }\n                ),\n                \"createdAt\": self.time_now(),\n            }",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "pair",
                                                                                            "label": "\"userId\": user_id",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"userId\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "userId",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "user_id",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "pair",
                                                                                            "label": "\"amount\": -cost",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"amount\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "amount",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "unary_operator",
                                                                                                    "label": "-cost",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "cost",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "pair",
                                                                                            "label": "\"type\": CreditTransactionType.USAGE",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"type\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "type",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "CreditTransactionType.USAGE",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "CreditTransactionType",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "USAGE",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "pair",
                                                                                            "label": "\"blockId\": block.id",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"blockId\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "blockId",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "block.id",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "block",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "id",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "pair",
                                                                                            "label": "\"metadata\": Json(\n                    {\n                        \"block\": block.name,\n                        \"input\": matching_filter,\n                    }\n                )",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"metadata\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "metadata",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "call",
                                                                                                    "label": "Json(\n                    {\n                        \"block\": block.name,\n                        \"input\": matching_filter,\n                    }\n                )",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "Json",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "argument_list",
                                                                                                            "label": "(\n                    {\n                        \"block\": block.name,\n                        \"input\": matching_filter,\n                    }\n                )",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "dictionary",
                                                                                                                    "label": "{\n                        \"block\": block.name,\n                        \"input\": matching_filter,\n                    }",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "pair",
                                                                                                                            "label": "\"block\": block.name",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "string",
                                                                                                                                    "label": "\"block\"",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "string_start",
                                                                                                                                            "label": "\"",
                                                                                                                                            "children": []
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "string_content",
                                                                                                                                            "label": "block",
                                                                                                                                            "children": []
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "string_end",
                                                                                                                                            "label": "\"",
                                                                                                                                            "children": []
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "attribute",
                                                                                                                                    "label": "block.name",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "identifier",
                                                                                                                                            "label": "block",
                                                                                                                                            "children": []
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "identifier",
                                                                                                                                            "label": "name",
                                                                                                                                            "children": []
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "pair",
                                                                                                                            "label": "\"input\": matching_filter",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "string",
                                                                                                                                    "label": "\"input\"",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "string_start",
                                                                                                                                            "label": "\"",
                                                                                                                                            "children": []
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "string_content",
                                                                                                                                            "label": "input",
                                                                                                                                            "children": []
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "string_end",
                                                                                                                                            "label": "\"",
                                                                                                                                            "children": []
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "matching_filter",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "pair",
                                                                                            "label": "\"createdAt\": self.time_now()",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"createdAt\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "createdAt",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "call",
                                                                                                    "label": "self.time_now()",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "self.time_now",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "self",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "time_now",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "argument_list",
                                                                                                            "label": "()",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "return_statement",
                                            "label": "return cost",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "cost",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "label": "async def top_up_credits(self, user_id: str, amount: int):\n        await CreditTransaction.prisma().create(\n            data={\n                \"userId\": user_id,\n                \"amount\": amount,\n                \"type\": CreditTransactionType.TOP_UP,\n                \"createdAt\": self.time_now(),\n            }\n        )",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "top_up_credits",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "label": "(self, user_id: str, amount: int)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "self",
                                            "children": []
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "label": "user_id: str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "user_id",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type",
                                                    "label": "str",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "str",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "label": "amount: int",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "amount",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type",
                                                    "label": "int",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "int",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "await CreditTransaction.prisma().create(\n            data={\n                \"userId\": user_id,\n                \"amount\": amount,\n                \"type\": CreditTransactionType.TOP_UP,\n                \"createdAt\": self.time_now(),\n            }\n        )",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "await CreditTransaction.prisma().create(\n            data={\n                \"userId\": user_id,\n                \"amount\": amount,\n                \"type\": CreditTransactionType.TOP_UP,\n                \"createdAt\": self.time_now(),\n            }\n        )",
                                            "children": [
                                                {
                                                    "type": "await",
                                                    "label": "await CreditTransaction.prisma().create(\n            data={\n                \"userId\": user_id,\n                \"amount\": amount,\n                \"type\": CreditTransactionType.TOP_UP,\n                \"createdAt\": self.time_now(),\n            }\n        )",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "CreditTransaction.prisma().create(\n            data={\n                \"userId\": user_id,\n                \"amount\": amount,\n                \"type\": CreditTransactionType.TOP_UP,\n                \"createdAt\": self.time_now(),\n            }\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "CreditTransaction.prisma().create",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "CreditTransaction.prisma()",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "CreditTransaction.prisma",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "CreditTransaction",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "prisma",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "()",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "create",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(\n            data={\n                \"userId\": user_id,\n                \"amount\": amount,\n                \"type\": CreditTransactionType.TOP_UP,\n                \"createdAt\": self.time_now(),\n            }\n        )",
                                                                    "children": [
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "data={\n                \"userId\": user_id,\n                \"amount\": amount,\n                \"type\": CreditTransactionType.TOP_UP,\n                \"createdAt\": self.time_now(),\n            }",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "data",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "dictionary",
                                                                                    "label": "{\n                \"userId\": user_id,\n                \"amount\": amount,\n                \"type\": CreditTransactionType.TOP_UP,\n                \"createdAt\": self.time_now(),\n            }",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "pair",
                                                                                            "label": "\"userId\": user_id",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"userId\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "userId",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "user_id",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "pair",
                                                                                            "label": "\"amount\": amount",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"amount\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "amount",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "amount",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "pair",
                                                                                            "label": "\"type\": CreditTransactionType.TOP_UP",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"type\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "type",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "CreditTransactionType.TOP_UP",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "CreditTransactionType",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "TOP_UP",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "pair",
                                                                                            "label": "\"createdAt\": self.time_now()",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"createdAt\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "createdAt",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "call",
                                                                                                    "label": "self.time_now()",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "self.time_now",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "self",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "time_now",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "argument_list",
                                                                                                            "label": "()",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "class_definition",
            "label": "class DisabledUserCredit(UserCreditBase):\n    async def get_or_refill_credit(self, *args, **kwargs) -> int:\n        return 0\n\n    async def spend_credits(self, *args, **kwargs) -> int:\n        return 0\n\n    async def top_up_credits(self, *args, **kwargs):\n        pass",
            "children": [
                {
                    "type": "identifier",
                    "label": "DisabledUserCredit",
                    "children": []
                },
                {
                    "type": "argument_list",
                    "label": "(UserCreditBase)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "UserCreditBase",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "async def get_or_refill_credit(self, *args, **kwargs) -> int:\n        return 0\n\n    async def spend_credits(self, *args, **kwargs) -> int:\n        return 0\n\n    async def top_up_credits(self, *args, **kwargs):\n        pass",
                    "children": [
                        {
                            "type": "function_definition",
                            "label": "async def get_or_refill_credit(self, *args, **kwargs) -> int:\n        return 0",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "get_or_refill_credit",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "label": "(self, *args, **kwargs)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "self",
                                            "children": []
                                        },
                                        {
                                            "type": "list_splat_pattern",
                                            "label": "*args",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "args",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "dictionary_splat_pattern",
                                            "label": "**kwargs",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "kwargs",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "type",
                                    "label": "int",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "int",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "return 0",
                                    "children": [
                                        {
                                            "type": "return_statement",
                                            "label": "return 0",
                                            "children": [
                                                {
                                                    "type": "integer",
                                                    "label": "0",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "label": "async def spend_credits(self, *args, **kwargs) -> int:\n        return 0",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "spend_credits",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "label": "(self, *args, **kwargs)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "self",
                                            "children": []
                                        },
                                        {
                                            "type": "list_splat_pattern",
                                            "label": "*args",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "args",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "dictionary_splat_pattern",
                                            "label": "**kwargs",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "kwargs",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "type",
                                    "label": "int",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "int",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "return 0",
                                    "children": [
                                        {
                                            "type": "return_statement",
                                            "label": "return 0",
                                            "children": [
                                                {
                                                    "type": "integer",
                                                    "label": "0",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "label": "async def top_up_credits(self, *args, **kwargs):\n        pass",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "top_up_credits",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "label": "(self, *args, **kwargs)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "self",
                                            "children": []
                                        },
                                        {
                                            "type": "list_splat_pattern",
                                            "label": "*args",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "args",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "dictionary_splat_pattern",
                                            "label": "**kwargs",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "kwargs",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "pass",
                                    "children": [
                                        {
                                            "type": "pass_statement",
                                            "label": "pass",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def get_user_credit_model() -> UserCreditBase:\n    if config.enable_credit.lower() == \"true\":\n        return UserCredit(config.num_user_credits_refill)\n    else:\n        return DisabledUserCredit(0)",
            "children": [
                {
                    "type": "identifier",
                    "label": "get_user_credit_model",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "()",
                    "children": []
                },
                {
                    "type": "type",
                    "label": "UserCreditBase",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "UserCreditBase",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "if config.enable_credit.lower() == \"true\":\n        return UserCredit(config.num_user_credits_refill)\n    else:\n        return DisabledUserCredit(0)",
                    "children": [
                        {
                            "type": "if_statement",
                            "label": "if config.enable_credit.lower() == \"true\":\n        return UserCredit(config.num_user_credits_refill)\n    else:\n        return DisabledUserCredit(0)",
                            "children": [
                                {
                                    "type": "comparison_operator",
                                    "label": "config.enable_credit.lower() == \"true\"",
                                    "children": [
                                        {
                                            "type": "call",
                                            "label": "config.enable_credit.lower()",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "config.enable_credit.lower",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "config.enable_credit",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "config",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "enable_credit",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "lower",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "()",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "string",
                                            "label": "\"true\"",
                                            "children": [
                                                {
                                                    "type": "string_start",
                                                    "label": "\"",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_content",
                                                    "label": "true",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string_end",
                                                    "label": "\"",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "return UserCredit(config.num_user_credits_refill)",
                                    "children": [
                                        {
                                            "type": "return_statement",
                                            "label": "return UserCredit(config.num_user_credits_refill)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "UserCredit(config.num_user_credits_refill)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "UserCredit",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(config.num_user_credits_refill)",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "config.num_user_credits_refill",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "config",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "num_user_credits_refill",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "else_clause",
                                    "label": "else:\n        return DisabledUserCredit(0)",
                                    "children": [
                                        {
                                            "type": "block",
                                            "label": "return DisabledUserCredit(0)",
                                            "children": [
                                                {
                                                    "type": "return_statement",
                                                    "label": "return DisabledUserCredit(0)",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "DisabledUserCredit(0)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "DisabledUserCredit",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(0)",
                                                                    "children": [
                                                                        {
                                                                            "type": "integer",
                                                                            "label": "0",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def get_block_costs() -> dict[str, list[BlockCost]]:\n    return {block().id: costs for block, costs in BLOCK_COSTS.items()}",
            "children": [
                {
                    "type": "identifier",
                    "label": "get_block_costs",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "()",
                    "children": []
                },
                {
                    "type": "type",
                    "label": "dict[str, list[BlockCost]]",
                    "children": [
                        {
                            "type": "generic_type",
                            "label": "dict[str, list[BlockCost]]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "dict",
                                    "children": []
                                },
                                {
                                    "type": "type_parameter",
                                    "label": "[str, list[BlockCost]]",
                                    "children": [
                                        {
                                            "type": "type",
                                            "label": "str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "type",
                                            "label": "list[BlockCost]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "list[BlockCost]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "list",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[BlockCost]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "BlockCost",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "BlockCost",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "return {block().id: costs for block, costs in BLOCK_COSTS.items()}",
                    "children": [
                        {
                            "type": "return_statement",
                            "label": "return {block().id: costs for block, costs in BLOCK_COSTS.items()}",
                            "children": [
                                {
                                    "type": "dictionary_comprehension",
                                    "label": "{block().id: costs for block, costs in BLOCK_COSTS.items()}",
                                    "children": [
                                        {
                                            "type": "pair",
                                            "label": "block().id: costs",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "block().id",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "block()",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "block",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "()",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "id",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "costs",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "for_in_clause",
                                            "label": "for block, costs in BLOCK_COSTS.items()",
                                            "children": [
                                                {
                                                    "type": "pattern_list",
                                                    "label": "block, costs",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "block",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "costs",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "call",
                                                    "label": "BLOCK_COSTS.items()",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "BLOCK_COSTS.items",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "BLOCK_COSTS",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "items",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "()",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}