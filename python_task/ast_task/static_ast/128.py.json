{
    "type": "module",
    "label": "import logging\nimport time\nfrom abc import ABC, abstractmethod\nfrom typing import ClassVar\n\nfrom backend.data.model import OAuth2Credentials\nfrom backend.integrations.providers import ProviderName\n\nlogger = logging.getLogger(__name__)\n\n\nclass BaseOAuthHandler(ABC):\n    # --8<-- [start:BaseOAuthHandler1]\n    PROVIDER_NAME: ClassVar[ProviderName]\n    DEFAULT_SCOPES: ClassVar[list[str]] = []\n    # --8<-- [end:BaseOAuthHandler1]\n\n    @abstractmethod\n    # --8<-- [start:BaseOAuthHandler2]\n    def __init__(self, client_id: str, client_secret: str, redirect_uri: str): ...\n\n    # --8<-- [end:BaseOAuthHandler2]\n\n    @abstractmethod\n    # --8<-- [start:BaseOAuthHandler3]\n    def get_login_url(self, scopes: list[str], state: str) -> str:\n        # --8<-- [end:BaseOAuthHandler3]\n        \"\"\"Constructs a login URL that the user can be redirected to\"\"\"\n        ...\n\n    @abstractmethod\n    # --8<-- [start:BaseOAuthHandler4]\n    def exchange_code_for_tokens(\n        self, code: str, scopes: list[str]\n    ) -> OAuth2Credentials:\n        # --8<-- [end:BaseOAuthHandler4]\n        \"\"\"Exchanges the acquired authorization code from login for a set of tokens\"\"\"\n        ...\n\n    @abstractmethod\n    # --8<-- [start:BaseOAuthHandler5]\n    def _refresh_tokens(self, credentials: OAuth2Credentials) -> OAuth2Credentials:\n        # --8<-- [end:BaseOAuthHandler5]\n        \"\"\"Implements the token refresh mechanism\"\"\"\n        ...\n\n    @abstractmethod\n    # --8<-- [start:BaseOAuthHandler6]\n    def revoke_tokens(self, credentials: OAuth2Credentials) -> bool:\n        # --8<-- [end:BaseOAuthHandler6]\n        \"\"\"Revokes the given token at provider,\n        returns False provider does not support it\"\"\"\n        ...\n\n    def refresh_tokens(self, credentials: OAuth2Credentials) -> OAuth2Credentials:\n        if credentials.provider != self.PROVIDER_NAME:\n            raise ValueError(\n                f\"{self.__class__.__name__} can not refresh tokens \"\n                f\"for other provider '{credentials.provider}'\"\n            )\n        return self._refresh_tokens(credentials)\n\n    def get_access_token(self, credentials: OAuth2Credentials) -> str:\n        \"\"\"Returns a valid access token, refreshing it first if needed\"\"\"\n        if self.needs_refresh(credentials):\n            credentials = self.refresh_tokens(credentials)\n        return credentials.access_token.get_secret_value()\n\n    def needs_refresh(self, credentials: OAuth2Credentials) -> bool:\n        \"\"\"Indicates whether the given tokens need to be refreshed\"\"\"\n        return (\n            credentials.access_token_expires_at is not None\n            and credentials.access_token_expires_at < int(time.time()) + 300\n        )\n\n    def handle_default_scopes(self, scopes: list[str]) -> list[str]:\n        \"\"\"Handles the default scopes for the provider\"\"\"\n        # If scopes are empty, use the default scopes for the provider\n        if not scopes:\n            logger.debug(\n                f\"Using default scopes for provider {self.PROVIDER_NAME.value}\"\n            )\n            scopes = self.DEFAULT_SCOPES\n        return scopes\n",
    "children": [
        {
            "type": "import_statement",
            "label": "import logging",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "logging",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "logging",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_statement",
            "label": "import time",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "time",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "time",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from abc import ABC, abstractmethod",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "abc",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "abc",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "ABC",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "ABC",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "abstractmethod",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "abstractmethod",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from typing import ClassVar",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "typing",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "typing",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "ClassVar",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "ClassVar",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from backend.data.model import OAuth2Credentials",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "backend.data.model",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "data",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "model",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "OAuth2Credentials",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "OAuth2Credentials",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from backend.integrations.providers import ProviderName",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "backend.integrations.providers",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "integrations",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "providers",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "ProviderName",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "ProviderName",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "expression_statement",
            "label": "logger = logging.getLogger(__name__)",
            "children": [
                {
                    "type": "assignment",
                    "label": "logger = logging.getLogger(__name__)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "logger",
                            "children": []
                        },
                        {
                            "type": "call",
                            "label": "logging.getLogger(__name__)",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "logging.getLogger",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "logging",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "getLogger",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(__name__)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "__name__",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "class_definition",
            "label": "class BaseOAuthHandler(ABC):\n    # --8<-- [start:BaseOAuthHandler1]\n    PROVIDER_NAME: ClassVar[ProviderName]\n    DEFAULT_SCOPES: ClassVar[list[str]] = []\n    # --8<-- [end:BaseOAuthHandler1]\n\n    @abstractmethod\n    # --8<-- [start:BaseOAuthHandler2]\n    def __init__(self, client_id: str, client_secret: str, redirect_uri: str): ...\n\n    # --8<-- [end:BaseOAuthHandler2]\n\n    @abstractmethod\n    # --8<-- [start:BaseOAuthHandler3]\n    def get_login_url(self, scopes: list[str], state: str) -> str:\n        # --8<-- [end:BaseOAuthHandler3]\n        \"\"\"Constructs a login URL that the user can be redirected to\"\"\"\n        ...\n\n    @abstractmethod\n    # --8<-- [start:BaseOAuthHandler4]\n    def exchange_code_for_tokens(\n        self, code: str, scopes: list[str]\n    ) -> OAuth2Credentials:\n        # --8<-- [end:BaseOAuthHandler4]\n        \"\"\"Exchanges the acquired authorization code from login for a set of tokens\"\"\"\n        ...\n\n    @abstractmethod\n    # --8<-- [start:BaseOAuthHandler5]\n    def _refresh_tokens(self, credentials: OAuth2Credentials) -> OAuth2Credentials:\n        # --8<-- [end:BaseOAuthHandler5]\n        \"\"\"Implements the token refresh mechanism\"\"\"\n        ...\n\n    @abstractmethod\n    # --8<-- [start:BaseOAuthHandler6]\n    def revoke_tokens(self, credentials: OAuth2Credentials) -> bool:\n        # --8<-- [end:BaseOAuthHandler6]\n        \"\"\"Revokes the given token at provider,\n        returns False provider does not support it\"\"\"\n        ...\n\n    def refresh_tokens(self, credentials: OAuth2Credentials) -> OAuth2Credentials:\n        if credentials.provider != self.PROVIDER_NAME:\n            raise ValueError(\n                f\"{self.__class__.__name__} can not refresh tokens \"\n                f\"for other provider '{credentials.provider}'\"\n            )\n        return self._refresh_tokens(credentials)\n\n    def get_access_token(self, credentials: OAuth2Credentials) -> str:\n        \"\"\"Returns a valid access token, refreshing it first if needed\"\"\"\n        if self.needs_refresh(credentials):\n            credentials = self.refresh_tokens(credentials)\n        return credentials.access_token.get_secret_value()\n\n    def needs_refresh(self, credentials: OAuth2Credentials) -> bool:\n        \"\"\"Indicates whether the given tokens need to be refreshed\"\"\"\n        return (\n            credentials.access_token_expires_at is not None\n            and credentials.access_token_expires_at < int(time.time()) + 300\n        )\n\n    def handle_default_scopes(self, scopes: list[str]) -> list[str]:\n        \"\"\"Handles the default scopes for the provider\"\"\"\n        # If scopes are empty, use the default scopes for the provider\n        if not scopes:\n            logger.debug(\n                f\"Using default scopes for provider {self.PROVIDER_NAME.value}\"\n            )\n            scopes = self.DEFAULT_SCOPES\n        return scopes",
            "children": [
                {
                    "type": "identifier",
                    "label": "BaseOAuthHandler",
                    "children": []
                },
                {
                    "type": "argument_list",
                    "label": "(ABC)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "ABC",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "comment",
                    "label": "# --8<-- [start:BaseOAuthHandler1]",
                    "children": []
                },
                {
                    "type": "block",
                    "label": "PROVIDER_NAME: ClassVar[ProviderName]\n    DEFAULT_SCOPES: ClassVar[list[str]] = []\n    # --8<-- [end:BaseOAuthHandler1]\n\n    @abstractmethod\n    # --8<-- [start:BaseOAuthHandler2]\n    def __init__(self, client_id: str, client_secret: str, redirect_uri: str): ...\n\n    # --8<-- [end:BaseOAuthHandler2]\n\n    @abstractmethod\n    # --8<-- [start:BaseOAuthHandler3]\n    def get_login_url(self, scopes: list[str], state: str) -> str:\n        # --8<-- [end:BaseOAuthHandler3]\n        \"\"\"Constructs a login URL that the user can be redirected to\"\"\"\n        ...\n\n    @abstractmethod\n    # --8<-- [start:BaseOAuthHandler4]\n    def exchange_code_for_tokens(\n        self, code: str, scopes: list[str]\n    ) -> OAuth2Credentials:\n        # --8<-- [end:BaseOAuthHandler4]\n        \"\"\"Exchanges the acquired authorization code from login for a set of tokens\"\"\"\n        ...\n\n    @abstractmethod\n    # --8<-- [start:BaseOAuthHandler5]\n    def _refresh_tokens(self, credentials: OAuth2Credentials) -> OAuth2Credentials:\n        # --8<-- [end:BaseOAuthHandler5]\n        \"\"\"Implements the token refresh mechanism\"\"\"\n        ...\n\n    @abstractmethod\n    # --8<-- [start:BaseOAuthHandler6]\n    def revoke_tokens(self, credentials: OAuth2Credentials) -> bool:\n        # --8<-- [end:BaseOAuthHandler6]\n        \"\"\"Revokes the given token at provider,\n        returns False provider does not support it\"\"\"\n        ...\n\n    def refresh_tokens(self, credentials: OAuth2Credentials) -> OAuth2Credentials:\n        if credentials.provider != self.PROVIDER_NAME:\n            raise ValueError(\n                f\"{self.__class__.__name__} can not refresh tokens \"\n                f\"for other provider '{credentials.provider}'\"\n            )\n        return self._refresh_tokens(credentials)\n\n    def get_access_token(self, credentials: OAuth2Credentials) -> str:\n        \"\"\"Returns a valid access token, refreshing it first if needed\"\"\"\n        if self.needs_refresh(credentials):\n            credentials = self.refresh_tokens(credentials)\n        return credentials.access_token.get_secret_value()\n\n    def needs_refresh(self, credentials: OAuth2Credentials) -> bool:\n        \"\"\"Indicates whether the given tokens need to be refreshed\"\"\"\n        return (\n            credentials.access_token_expires_at is not None\n            and credentials.access_token_expires_at < int(time.time()) + 300\n        )\n\n    def handle_default_scopes(self, scopes: list[str]) -> list[str]:\n        \"\"\"Handles the default scopes for the provider\"\"\"\n        # If scopes are empty, use the default scopes for the provider\n        if not scopes:\n            logger.debug(\n                f\"Using default scopes for provider {self.PROVIDER_NAME.value}\"\n            )\n            scopes = self.DEFAULT_SCOPES\n        return scopes",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "PROVIDER_NAME: ClassVar[ProviderName]",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "PROVIDER_NAME: ClassVar[ProviderName]",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "PROVIDER_NAME",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "ClassVar[ProviderName]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "ClassVar[ProviderName]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "ClassVar",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[ProviderName]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "ProviderName",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "ProviderName",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "DEFAULT_SCOPES: ClassVar[list[str]] = []",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "DEFAULT_SCOPES: ClassVar[list[str]] = []",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "DEFAULT_SCOPES",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "ClassVar[list[str]]",
                                            "children": [
                                                {
                                                    "type": "generic_type",
                                                    "label": "ClassVar[list[str]]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "ClassVar",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type_parameter",
                                                            "label": "[list[str]]",
                                                            "children": [
                                                                {
                                                                    "type": "type",
                                                                    "label": "list[str]",
                                                                    "children": [
                                                                        {
                                                                            "type": "generic_type",
                                                                            "label": "list[str]",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "list",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "type_parameter",
                                                                                    "label": "[str]",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "type",
                                                                                            "label": "str",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "str",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "list",
                                            "label": "[]",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "label": "# --8<-- [end:BaseOAuthHandler1]",
                            "children": []
                        },
                        {
                            "type": "decorated_definition",
                            "label": "@abstractmethod\n    # --8<-- [start:BaseOAuthHandler2]\n    def __init__(self, client_id: str, client_secret: str, redirect_uri: str): ...",
                            "children": [
                                {
                                    "type": "decorator",
                                    "label": "@abstractmethod",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "abstractmethod",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "comment",
                                    "label": "# --8<-- [start:BaseOAuthHandler2]",
                                    "children": []
                                },
                                {
                                    "type": "function_definition",
                                    "label": "def __init__(self, client_id: str, client_secret: str, redirect_uri: str): ...",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "__init__",
                                            "children": []
                                        },
                                        {
                                            "type": "parameters",
                                            "label": "(self, client_id: str, client_secret: str, redirect_uri: str)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "self",
                                                    "children": []
                                                },
                                                {
                                                    "type": "typed_parameter",
                                                    "label": "client_id: str",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "client_id",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "str",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "str",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "typed_parameter",
                                                    "label": "client_secret: str",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "client_secret",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "str",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "str",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "typed_parameter",
                                                    "label": "redirect_uri: str",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "redirect_uri",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "str",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "str",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "...",
                                            "children": [
                                                {
                                                    "type": "expression_statement",
                                                    "label": "...",
                                                    "children": [
                                                        {
                                                            "type": "ellipsis",
                                                            "label": "...",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "label": "# --8<-- [end:BaseOAuthHandler2]",
                            "children": []
                        },
                        {
                            "type": "decorated_definition",
                            "label": "@abstractmethod\n    # --8<-- [start:BaseOAuthHandler3]\n    def get_login_url(self, scopes: list[str], state: str) -> str:\n        # --8<-- [end:BaseOAuthHandler3]\n        \"\"\"Constructs a login URL that the user can be redirected to\"\"\"\n        ...",
                            "children": [
                                {
                                    "type": "decorator",
                                    "label": "@abstractmethod",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "abstractmethod",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "comment",
                                    "label": "# --8<-- [start:BaseOAuthHandler3]",
                                    "children": []
                                },
                                {
                                    "type": "function_definition",
                                    "label": "def get_login_url(self, scopes: list[str], state: str) -> str:\n        # --8<-- [end:BaseOAuthHandler3]\n        \"\"\"Constructs a login URL that the user can be redirected to\"\"\"\n        ...",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "get_login_url",
                                            "children": []
                                        },
                                        {
                                            "type": "parameters",
                                            "label": "(self, scopes: list[str], state: str)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "self",
                                                    "children": []
                                                },
                                                {
                                                    "type": "typed_parameter",
                                                    "label": "scopes: list[str]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "scopes",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "list[str]",
                                                            "children": [
                                                                {
                                                                    "type": "generic_type",
                                                                    "label": "list[str]",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "list",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "type_parameter",
                                                                            "label": "[str]",
                                                                            "children": [
                                                                                {
                                                                                    "type": "type",
                                                                                    "label": "str",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "str",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "typed_parameter",
                                                    "label": "state: str",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "state",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "str",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "str",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "type",
                                            "label": "str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "str",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "comment",
                                            "label": "# --8<-- [end:BaseOAuthHandler3]",
                                            "children": []
                                        },
                                        {
                                            "type": "block",
                                            "label": "\"\"\"Constructs a login URL that the user can be redirected to\"\"\"\n        ...",
                                            "children": [
                                                {
                                                    "type": "expression_statement",
                                                    "label": "\"\"\"Constructs a login URL that the user can be redirected to\"\"\"",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "\"\"\"Constructs a login URL that the user can be redirected to\"\"\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"\"\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "Constructs a login URL that the user can be redirected to",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"\"\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "expression_statement",
                                                    "label": "...",
                                                    "children": [
                                                        {
                                                            "type": "ellipsis",
                                                            "label": "...",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "decorated_definition",
                            "label": "@abstractmethod\n    # --8<-- [start:BaseOAuthHandler4]\n    def exchange_code_for_tokens(\n        self, code: str, scopes: list[str]\n    ) -> OAuth2Credentials:\n        # --8<-- [end:BaseOAuthHandler4]\n        \"\"\"Exchanges the acquired authorization code from login for a set of tokens\"\"\"\n        ...",
                            "children": [
                                {
                                    "type": "decorator",
                                    "label": "@abstractmethod",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "abstractmethod",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "comment",
                                    "label": "# --8<-- [start:BaseOAuthHandler4]",
                                    "children": []
                                },
                                {
                                    "type": "function_definition",
                                    "label": "def exchange_code_for_tokens(\n        self, code: str, scopes: list[str]\n    ) -> OAuth2Credentials:\n        # --8<-- [end:BaseOAuthHandler4]\n        \"\"\"Exchanges the acquired authorization code from login for a set of tokens\"\"\"\n        ...",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "exchange_code_for_tokens",
                                            "children": []
                                        },
                                        {
                                            "type": "parameters",
                                            "label": "(\n        self, code: str, scopes: list[str]\n    )",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "self",
                                                    "children": []
                                                },
                                                {
                                                    "type": "typed_parameter",
                                                    "label": "code: str",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "code",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "str",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "str",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "typed_parameter",
                                                    "label": "scopes: list[str]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "scopes",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "list[str]",
                                                            "children": [
                                                                {
                                                                    "type": "generic_type",
                                                                    "label": "list[str]",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "list",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "type_parameter",
                                                                            "label": "[str]",
                                                                            "children": [
                                                                                {
                                                                                    "type": "type",
                                                                                    "label": "str",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "str",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "type",
                                            "label": "OAuth2Credentials",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "OAuth2Credentials",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "comment",
                                            "label": "# --8<-- [end:BaseOAuthHandler4]",
                                            "children": []
                                        },
                                        {
                                            "type": "block",
                                            "label": "\"\"\"Exchanges the acquired authorization code from login for a set of tokens\"\"\"\n        ...",
                                            "children": [
                                                {
                                                    "type": "expression_statement",
                                                    "label": "\"\"\"Exchanges the acquired authorization code from login for a set of tokens\"\"\"",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "\"\"\"Exchanges the acquired authorization code from login for a set of tokens\"\"\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"\"\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "Exchanges the acquired authorization code from login for a set of tokens",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"\"\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "expression_statement",
                                                    "label": "...",
                                                    "children": [
                                                        {
                                                            "type": "ellipsis",
                                                            "label": "...",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "decorated_definition",
                            "label": "@abstractmethod\n    # --8<-- [start:BaseOAuthHandler5]\n    def _refresh_tokens(self, credentials: OAuth2Credentials) -> OAuth2Credentials:\n        # --8<-- [end:BaseOAuthHandler5]\n        \"\"\"Implements the token refresh mechanism\"\"\"\n        ...",
                            "children": [
                                {
                                    "type": "decorator",
                                    "label": "@abstractmethod",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "abstractmethod",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "comment",
                                    "label": "# --8<-- [start:BaseOAuthHandler5]",
                                    "children": []
                                },
                                {
                                    "type": "function_definition",
                                    "label": "def _refresh_tokens(self, credentials: OAuth2Credentials) -> OAuth2Credentials:\n        # --8<-- [end:BaseOAuthHandler5]\n        \"\"\"Implements the token refresh mechanism\"\"\"\n        ...",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "_refresh_tokens",
                                            "children": []
                                        },
                                        {
                                            "type": "parameters",
                                            "label": "(self, credentials: OAuth2Credentials)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "self",
                                                    "children": []
                                                },
                                                {
                                                    "type": "typed_parameter",
                                                    "label": "credentials: OAuth2Credentials",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "credentials",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "OAuth2Credentials",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "OAuth2Credentials",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "type",
                                            "label": "OAuth2Credentials",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "OAuth2Credentials",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "comment",
                                            "label": "# --8<-- [end:BaseOAuthHandler5]",
                                            "children": []
                                        },
                                        {
                                            "type": "block",
                                            "label": "\"\"\"Implements the token refresh mechanism\"\"\"\n        ...",
                                            "children": [
                                                {
                                                    "type": "expression_statement",
                                                    "label": "\"\"\"Implements the token refresh mechanism\"\"\"",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "\"\"\"Implements the token refresh mechanism\"\"\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"\"\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "Implements the token refresh mechanism",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"\"\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "expression_statement",
                                                    "label": "...",
                                                    "children": [
                                                        {
                                                            "type": "ellipsis",
                                                            "label": "...",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "decorated_definition",
                            "label": "@abstractmethod\n    # --8<-- [start:BaseOAuthHandler6]\n    def revoke_tokens(self, credentials: OAuth2Credentials) -> bool:\n        # --8<-- [end:BaseOAuthHandler6]\n        \"\"\"Revokes the given token at provider,\n        returns False provider does not support it\"\"\"\n        ...",
                            "children": [
                                {
                                    "type": "decorator",
                                    "label": "@abstractmethod",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "abstractmethod",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "comment",
                                    "label": "# --8<-- [start:BaseOAuthHandler6]",
                                    "children": []
                                },
                                {
                                    "type": "function_definition",
                                    "label": "def revoke_tokens(self, credentials: OAuth2Credentials) -> bool:\n        # --8<-- [end:BaseOAuthHandler6]\n        \"\"\"Revokes the given token at provider,\n        returns False provider does not support it\"\"\"\n        ...",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "revoke_tokens",
                                            "children": []
                                        },
                                        {
                                            "type": "parameters",
                                            "label": "(self, credentials: OAuth2Credentials)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "self",
                                                    "children": []
                                                },
                                                {
                                                    "type": "typed_parameter",
                                                    "label": "credentials: OAuth2Credentials",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "credentials",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "type",
                                                            "label": "OAuth2Credentials",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "OAuth2Credentials",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "type",
                                            "label": "bool",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "bool",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "comment",
                                            "label": "# --8<-- [end:BaseOAuthHandler6]",
                                            "children": []
                                        },
                                        {
                                            "type": "block",
                                            "label": "\"\"\"Revokes the given token at provider,\n        returns False provider does not support it\"\"\"\n        ...",
                                            "children": [
                                                {
                                                    "type": "expression_statement",
                                                    "label": "\"\"\"Revokes the given token at provider,\n        returns False provider does not support it\"\"\"",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "\"\"\"Revokes the given token at provider,\n        returns False provider does not support it\"\"\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"\"\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "Revokes the given token at provider,\n        returns False provider does not support it",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"\"\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "expression_statement",
                                                    "label": "...",
                                                    "children": [
                                                        {
                                                            "type": "ellipsis",
                                                            "label": "...",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "label": "def refresh_tokens(self, credentials: OAuth2Credentials) -> OAuth2Credentials:\n        if credentials.provider != self.PROVIDER_NAME:\n            raise ValueError(\n                f\"{self.__class__.__name__} can not refresh tokens \"\n                f\"for other provider '{credentials.provider}'\"\n            )\n        return self._refresh_tokens(credentials)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "refresh_tokens",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "label": "(self, credentials: OAuth2Credentials)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "self",
                                            "children": []
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "label": "credentials: OAuth2Credentials",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "credentials",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type",
                                                    "label": "OAuth2Credentials",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "OAuth2Credentials",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "type",
                                    "label": "OAuth2Credentials",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "OAuth2Credentials",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "if credentials.provider != self.PROVIDER_NAME:\n            raise ValueError(\n                f\"{self.__class__.__name__} can not refresh tokens \"\n                f\"for other provider '{credentials.provider}'\"\n            )\n        return self._refresh_tokens(credentials)",
                                    "children": [
                                        {
                                            "type": "if_statement",
                                            "label": "if credentials.provider != self.PROVIDER_NAME:\n            raise ValueError(\n                f\"{self.__class__.__name__} can not refresh tokens \"\n                f\"for other provider '{credentials.provider}'\"\n            )",
                                            "children": [
                                                {
                                                    "type": "comparison_operator",
                                                    "label": "credentials.provider != self.PROVIDER_NAME",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "credentials.provider",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "credentials",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "provider",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "attribute",
                                                            "label": "self.PROVIDER_NAME",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "PROVIDER_NAME",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "raise ValueError(\n                f\"{self.__class__.__name__} can not refresh tokens \"\n                f\"for other provider '{credentials.provider}'\"\n            )",
                                                    "children": [
                                                        {
                                                            "type": "raise_statement",
                                                            "label": "raise ValueError(\n                f\"{self.__class__.__name__} can not refresh tokens \"\n                f\"for other provider '{credentials.provider}'\"\n            )",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "ValueError(\n                f\"{self.__class__.__name__} can not refresh tokens \"\n                f\"for other provider '{credentials.provider}'\"\n            )",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "ValueError",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(\n                f\"{self.__class__.__name__} can not refresh tokens \"\n                f\"for other provider '{credentials.provider}'\"\n            )",
                                                                            "children": [
                                                                                {
                                                                                    "type": "concatenated_string",
                                                                                    "label": "f\"{self.__class__.__name__} can not refresh tokens \"\n                f\"for other provider '{credentials.provider}'\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "f\"{self.__class__.__name__} can not refresh tokens \"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "f\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "interpolation",
                                                                                                    "label": "{self.__class__.__name__}",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "self.__class__.__name__",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "attribute",
                                                                                                                    "label": "self.__class__",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "self",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "__class__",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "__name__",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": " can not refresh tokens ",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "f\"for other provider '{credentials.provider}'\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "f\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "for other provider '",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "interpolation",
                                                                                                    "label": "{credentials.provider}",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "credentials.provider",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "credentials",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "provider",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "'",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "return_statement",
                                            "label": "return self._refresh_tokens(credentials)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "self._refresh_tokens(credentials)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "self._refresh_tokens",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "_refresh_tokens",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(credentials)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "credentials",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "label": "def get_access_token(self, credentials: OAuth2Credentials) -> str:\n        \"\"\"Returns a valid access token, refreshing it first if needed\"\"\"\n        if self.needs_refresh(credentials):\n            credentials = self.refresh_tokens(credentials)\n        return credentials.access_token.get_secret_value()",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "get_access_token",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "label": "(self, credentials: OAuth2Credentials)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "self",
                                            "children": []
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "label": "credentials: OAuth2Credentials",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "credentials",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type",
                                                    "label": "OAuth2Credentials",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "OAuth2Credentials",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "type",
                                    "label": "str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "str",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "\"\"\"Returns a valid access token, refreshing it first if needed\"\"\"\n        if self.needs_refresh(credentials):\n            credentials = self.refresh_tokens(credentials)\n        return credentials.access_token.get_secret_value()",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "\"\"\"Returns a valid access token, refreshing it first if needed\"\"\"",
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "label": "\"\"\"Returns a valid access token, refreshing it first if needed\"\"\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"\"\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "Returns a valid access token, refreshing it first if needed",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"\"\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "if_statement",
                                            "label": "if self.needs_refresh(credentials):\n            credentials = self.refresh_tokens(credentials)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "self.needs_refresh(credentials)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "self.needs_refresh",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "needs_refresh",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(credentials)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "credentials",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "credentials = self.refresh_tokens(credentials)",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "credentials = self.refresh_tokens(credentials)",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "label": "credentials = self.refresh_tokens(credentials)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "credentials",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "call",
                                                                            "label": "self.refresh_tokens(credentials)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "self.refresh_tokens",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "self",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "refresh_tokens",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(credentials)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "credentials",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "return_statement",
                                            "label": "return credentials.access_token.get_secret_value()",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "credentials.access_token.get_secret_value()",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "credentials.access_token.get_secret_value",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "credentials.access_token",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "credentials",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "access_token",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "get_secret_value",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "()",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "label": "def needs_refresh(self, credentials: OAuth2Credentials) -> bool:\n        \"\"\"Indicates whether the given tokens need to be refreshed\"\"\"\n        return (\n            credentials.access_token_expires_at is not None\n            and credentials.access_token_expires_at < int(time.time()) + 300\n        )",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "needs_refresh",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "label": "(self, credentials: OAuth2Credentials)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "self",
                                            "children": []
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "label": "credentials: OAuth2Credentials",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "credentials",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type",
                                                    "label": "OAuth2Credentials",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "OAuth2Credentials",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "type",
                                    "label": "bool",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "bool",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "\"\"\"Indicates whether the given tokens need to be refreshed\"\"\"\n        return (\n            credentials.access_token_expires_at is not None\n            and credentials.access_token_expires_at < int(time.time()) + 300\n        )",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "\"\"\"Indicates whether the given tokens need to be refreshed\"\"\"",
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "label": "\"\"\"Indicates whether the given tokens need to be refreshed\"\"\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"\"\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "Indicates whether the given tokens need to be refreshed",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"\"\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "return_statement",
                                            "label": "return (\n            credentials.access_token_expires_at is not None\n            and credentials.access_token_expires_at < int(time.time()) + 300\n        )",
                                            "children": [
                                                {
                                                    "type": "parenthesized_expression",
                                                    "label": "(\n            credentials.access_token_expires_at is not None\n            and credentials.access_token_expires_at < int(time.time()) + 300\n        )",
                                                    "children": [
                                                        {
                                                            "type": "boolean_operator",
                                                            "label": "credentials.access_token_expires_at is not None\n            and credentials.access_token_expires_at < int(time.time()) + 300",
                                                            "children": [
                                                                {
                                                                    "type": "comparison_operator",
                                                                    "label": "credentials.access_token_expires_at is not None",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "credentials.access_token_expires_at",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "credentials",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "access_token_expires_at",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "none",
                                                                            "label": "None",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "comparison_operator",
                                                                    "label": "credentials.access_token_expires_at < int(time.time()) + 300",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "credentials.access_token_expires_at",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "credentials",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "access_token_expires_at",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "binary_operator",
                                                                            "label": "int(time.time()) + 300",
                                                                            "children": [
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "int(time.time())",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "int",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "(time.time())",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "call",
                                                                                                    "label": "time.time()",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "time.time",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "time",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "time",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "argument_list",
                                                                                                            "label": "()",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "integer",
                                                                                    "label": "300",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "label": "def handle_default_scopes(self, scopes: list[str]) -> list[str]:\n        \"\"\"Handles the default scopes for the provider\"\"\"\n        # If scopes are empty, use the default scopes for the provider\n        if not scopes:\n            logger.debug(\n                f\"Using default scopes for provider {self.PROVIDER_NAME.value}\"\n            )\n            scopes = self.DEFAULT_SCOPES\n        return scopes",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "handle_default_scopes",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "label": "(self, scopes: list[str])",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "self",
                                            "children": []
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "label": "scopes: list[str]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "scopes",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type",
                                                    "label": "list[str]",
                                                    "children": [
                                                        {
                                                            "type": "generic_type",
                                                            "label": "list[str]",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "list",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "type_parameter",
                                                                    "label": "[str]",
                                                                    "children": [
                                                                        {
                                                                            "type": "type",
                                                                            "label": "str",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "str",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "type",
                                    "label": "list[str]",
                                    "children": [
                                        {
                                            "type": "generic_type",
                                            "label": "list[str]",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "list",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type_parameter",
                                                    "label": "[str]",
                                                    "children": [
                                                        {
                                                            "type": "type",
                                                            "label": "str",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "str",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "\"\"\"Handles the default scopes for the provider\"\"\"\n        # If scopes are empty, use the default scopes for the provider\n        if not scopes:\n            logger.debug(\n                f\"Using default scopes for provider {self.PROVIDER_NAME.value}\"\n            )\n            scopes = self.DEFAULT_SCOPES\n        return scopes",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "\"\"\"Handles the default scopes for the provider\"\"\"",
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "label": "\"\"\"Handles the default scopes for the provider\"\"\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"\"\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "Handles the default scopes for the provider",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"\"\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "comment",
                                            "label": "# If scopes are empty, use the default scopes for the provider",
                                            "children": []
                                        },
                                        {
                                            "type": "if_statement",
                                            "label": "if not scopes:\n            logger.debug(\n                f\"Using default scopes for provider {self.PROVIDER_NAME.value}\"\n            )\n            scopes = self.DEFAULT_SCOPES",
                                            "children": [
                                                {
                                                    "type": "not_operator",
                                                    "label": "not scopes",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "scopes",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "logger.debug(\n                f\"Using default scopes for provider {self.PROVIDER_NAME.value}\"\n            )\n            scopes = self.DEFAULT_SCOPES",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "logger.debug(\n                f\"Using default scopes for provider {self.PROVIDER_NAME.value}\"\n            )",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "logger.debug(\n                f\"Using default scopes for provider {self.PROVIDER_NAME.value}\"\n            )",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "logger.debug",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "logger",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "debug",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(\n                f\"Using default scopes for provider {self.PROVIDER_NAME.value}\"\n            )",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "f\"Using default scopes for provider {self.PROVIDER_NAME.value}\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "f\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "Using default scopes for provider ",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "interpolation",
                                                                                            "label": "{self.PROVIDER_NAME.value}",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "self.PROVIDER_NAME.value",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "self.PROVIDER_NAME",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "self",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "PROVIDER_NAME",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "value",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "scopes = self.DEFAULT_SCOPES",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "label": "scopes = self.DEFAULT_SCOPES",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "scopes",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "self.DEFAULT_SCOPES",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "self",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "DEFAULT_SCOPES",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "return_statement",
                                            "label": "return scopes",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "scopes",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}