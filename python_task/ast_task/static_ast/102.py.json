{
    "type": "module",
    "label": "# -*- coding: utf-8 -*-\n\nfrom mrjob.job import MRJob\n\n\nclass RemoveDuplicateUrls(MRJob):\n\n    def mapper(self, _, line):\n        yield line, 1\n\n    def reducer(self, key, values):\n        total = sum(values)\n        if total == 1:\n            yield key, total\n\n    def steps(self):\n        \"\"\"Run the map and reduce steps.\"\"\"\n        return [\n            self.mr(mapper=self.mapper,\n                    reducer=self.reducer)\n        ]\n\n\nif __name__ == '__main__':\n    RemoveDuplicateUrls.run()\n",
    "children": [
        {
            "type": "comment",
            "label": "# -*- coding: utf-8 -*-",
            "children": []
        },
        {
            "type": "import_from_statement",
            "label": "from mrjob.job import MRJob",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "mrjob.job",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "mrjob",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "job",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "MRJob",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "MRJob",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "class_definition",
            "label": "class RemoveDuplicateUrls(MRJob):\n\n    def mapper(self, _, line):\n        yield line, 1\n\n    def reducer(self, key, values):\n        total = sum(values)\n        if total == 1:\n            yield key, total\n\n    def steps(self):\n        \"\"\"Run the map and reduce steps.\"\"\"\n        return [\n            self.mr(mapper=self.mapper,\n                    reducer=self.reducer)\n        ]",
            "children": [
                {
                    "type": "identifier",
                    "label": "RemoveDuplicateUrls",
                    "children": []
                },
                {
                    "type": "argument_list",
                    "label": "(MRJob)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "MRJob",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "def mapper(self, _, line):\n        yield line, 1\n\n    def reducer(self, key, values):\n        total = sum(values)\n        if total == 1:\n            yield key, total\n\n    def steps(self):\n        \"\"\"Run the map and reduce steps.\"\"\"\n        return [\n            self.mr(mapper=self.mapper,\n                    reducer=self.reducer)\n        ]",
                    "children": [
                        {
                            "type": "function_definition",
                            "label": "def mapper(self, _, line):\n        yield line, 1",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "mapper",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "label": "(self, _, line)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "self",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "_",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "line",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "yield line, 1",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "yield line, 1",
                                            "children": [
                                                {
                                                    "type": "yield",
                                                    "label": "yield line, 1",
                                                    "children": [
                                                        {
                                                            "type": "expression_list",
                                                            "label": "line, 1",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "line",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "integer",
                                                                    "label": "1",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "label": "def reducer(self, key, values):\n        total = sum(values)\n        if total == 1:\n            yield key, total",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "reducer",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "label": "(self, key, values)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "self",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "key",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "values",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "total = sum(values)\n        if total == 1:\n            yield key, total",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "total = sum(values)",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "total = sum(values)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "total",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "sum(values)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "sum",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(values)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "values",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "if_statement",
                                            "label": "if total == 1:\n            yield key, total",
                                            "children": [
                                                {
                                                    "type": "comparison_operator",
                                                    "label": "total == 1",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "total",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "integer",
                                                            "label": "1",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "yield key, total",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "yield key, total",
                                                            "children": [
                                                                {
                                                                    "type": "yield",
                                                                    "label": "yield key, total",
                                                                    "children": [
                                                                        {
                                                                            "type": "expression_list",
                                                                            "label": "key, total",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "key",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "total",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "label": "def steps(self):\n        \"\"\"Run the map and reduce steps.\"\"\"\n        return [\n            self.mr(mapper=self.mapper,\n                    reducer=self.reducer)\n        ]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "steps",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "label": "(self)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "self",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "\"\"\"Run the map and reduce steps.\"\"\"\n        return [\n            self.mr(mapper=self.mapper,\n                    reducer=self.reducer)\n        ]",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "\"\"\"Run the map and reduce steps.\"\"\"",
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "label": "\"\"\"Run the map and reduce steps.\"\"\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"\"\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "Run the map and reduce steps.",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"\"\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "return_statement",
                                            "label": "return [\n            self.mr(mapper=self.mapper,\n                    reducer=self.reducer)\n        ]",
                                            "children": [
                                                {
                                                    "type": "list",
                                                    "label": "[\n            self.mr(mapper=self.mapper,\n                    reducer=self.reducer)\n        ]",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "self.mr(mapper=self.mapper,\n                    reducer=self.reducer)",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "self.mr",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "self",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "mr",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(mapper=self.mapper,\n                    reducer=self.reducer)",
                                                                    "children": [
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "mapper=self.mapper",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "mapper",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "self.mapper",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "self",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "mapper",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "reducer=self.reducer",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "reducer",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "self.reducer",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "self",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "reducer",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "if_statement",
            "label": "if __name__ == '__main__':\n    RemoveDuplicateUrls.run()",
            "children": [
                {
                    "type": "comparison_operator",
                    "label": "__name__ == '__main__'",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "__name__",
                            "children": []
                        },
                        {
                            "type": "string",
                            "label": "'__main__'",
                            "children": [
                                {
                                    "type": "string_start",
                                    "label": "'",
                                    "children": []
                                },
                                {
                                    "type": "string_content",
                                    "label": "__main__",
                                    "children": []
                                },
                                {
                                    "type": "string_end",
                                    "label": "'",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "RemoveDuplicateUrls.run()",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "RemoveDuplicateUrls.run()",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "RemoveDuplicateUrls.run()",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "RemoveDuplicateUrls.run",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "RemoveDuplicateUrls",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "run",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "()",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}