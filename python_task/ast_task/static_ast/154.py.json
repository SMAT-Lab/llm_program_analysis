{
    "type": "module",
    "label": "# -*- coding: utf-8 -*-\n\nimport unittest\n\nfrom validate.links import find_links_in_text\nfrom validate.links import check_duplicate_links\nfrom validate.links import fake_user_agent\nfrom validate.links import get_host_from_link\nfrom validate.links import has_cloudflare_protection\n\n\nclass FakeResponse():\n    def __init__(self, code: int, headers: dict, text: str) -> None:\n        self.status_code = code\n        self.headers = headers\n        self.text = text\n\n\nclass TestValidateLinks(unittest.TestCase):\n\n    def setUp(self):\n        self.duplicate_links = [\n            'https://www.example.com',\n            'https://www.example.com',\n            'https://www.example.com',\n            'https://www.anotherexample.com',\n        ]\n        self.no_duplicate_links = [\n            'https://www.firstexample.com',\n            'https://www.secondexample.com',\n            'https://www.anotherexample.com',\n        ]\n\n        self.code_200 = 200\n        self.code_403 = 403\n        self.code_503 = 503\n\n        self.cloudflare_headers = {'Server': 'cloudflare'}\n        self.no_cloudflare_headers = {'Server': 'google'}\n\n        self.text_with_cloudflare_flags = '403 Forbidden Cloudflare We are checking your browser...'\n        self.text_without_cloudflare_flags = 'Lorem Ipsum'\n\n    def test_find_link_in_text(self):\n        text = \"\"\"\n            # this is valid\n\n            http://example.com?param1=1&param2=2#anchor\n            https://www.example.com?param1=1&param2=2#anchor\n            https://www.example.com.br\n            https://www.example.com.gov.br\n            [Example](https://www.example.com?param1=1&param2=2#anchor)\n            lorem ipsum https://www.example.com?param1=1&param2=2#anchor\n            https://www.example.com?param1=1&param2=2#anchor lorem ipsum\n\n            # this not is valid\n\n            example.com\n            https:example.com\n            https:/example.com\n            https//example.com\n            https//.com\n        \"\"\"\n\n        links = find_links_in_text(text)\n\n        self.assertIsInstance(links, list)\n        self.assertEqual(len(links), 7)\n\n        for link in links:\n            with self.subTest():\n                self.assertIsInstance(link, str)\n\n    def test_find_link_in_text_with_invalid_argument(self):\n        with self.assertRaises(TypeError):\n            find_links_in_text()\n            find_links_in_text(1)\n            find_links_in_text(True)\n\n    def test_if_check_duplicate_links_has_the_correct_return(self):\n        result_1 = check_duplicate_links(self.duplicate_links)\n        result_2 = check_duplicate_links(self.no_duplicate_links)\n\n        self.assertIsInstance(result_1, tuple)\n        self.assertIsInstance(result_2, tuple)\n\n        has_duplicate_links, links = result_1\n        no_duplicate_links, no_links = result_2\n\n        self.assertTrue(has_duplicate_links)\n        self.assertFalse(no_duplicate_links)\n\n        self.assertIsInstance(links, list)\n        self.assertIsInstance(no_links, list)\n\n        self.assertEqual(len(links), 2)\n        self.assertEqual(len(no_links), 0)\n\n    def test_if_fake_user_agent_has_a_str_as_return(self):\n        user_agent = fake_user_agent()\n        self.assertIsInstance(user_agent, str)\n\n    def test_get_host_from_link(self):\n        links = [\n            'example.com',\n            'https://example.com',\n            'https://www.example.com',\n            'https://www.example.com.br',\n            'https://www.example.com/route',\n            'https://www.example.com?p=1&q=2',\n            'https://www.example.com#anchor'\n        ]\n\n        for link in links:\n            host = get_host_from_link(link)\n\n            with self.subTest():\n                self.assertIsInstance(host, str)\n\n                self.assertNotIn('://', host)\n                self.assertNotIn('/', host)\n                self.assertNotIn('?', host)\n                self.assertNotIn('#', host)\n\n        with self.assertRaises(TypeError):\n            get_host_from_link()\n\n    def test_has_cloudflare_protection_with_code_403_and_503_in_response(self):\n        resp_with_cloudflare_protection_code_403 = FakeResponse(\n            code=self.code_403,\n            headers=self.cloudflare_headers,\n            text=self.text_with_cloudflare_flags\n        )\n\n        resp_with_cloudflare_protection_code_503 = FakeResponse(\n            code=self.code_503,\n            headers=self.cloudflare_headers,\n            text=self.text_with_cloudflare_flags\n        )\n\n        result1 = has_cloudflare_protection(resp_with_cloudflare_protection_code_403)\n        result2 = has_cloudflare_protection(resp_with_cloudflare_protection_code_503)\n\n        self.assertTrue(result1)\n        self.assertTrue(result2)\n\n    def test_has_cloudflare_protection_when_there_is_no_protection(self):\n        resp_without_cloudflare_protection1 = FakeResponse(\n            code=self.code_200,\n            headers=self.no_cloudflare_headers,\n            text=self.text_without_cloudflare_flags\n        )\n\n        resp_without_cloudflare_protection2 = FakeResponse(\n            code=self.code_403,\n            headers=self.no_cloudflare_headers,\n            text=self.text_without_cloudflare_flags\n        )\n\n        resp_without_cloudflare_protection3 = FakeResponse(\n            code=self.code_503,\n            headers=self.no_cloudflare_headers,\n            text=self.text_without_cloudflare_flags\n        )\n\n        result1 = has_cloudflare_protection(resp_without_cloudflare_protection1)\n        result2 = has_cloudflare_protection(resp_without_cloudflare_protection2)\n        result3 = has_cloudflare_protection(resp_without_cloudflare_protection3)\n\n        self.assertFalse(result1)\n        self.assertFalse(result2)\n        self.assertFalse(result3)\n",
    "children": [
        {
            "type": "comment",
            "label": "# -*- coding: utf-8 -*-",
            "children": []
        },
        {
            "type": "import_statement",
            "label": "import unittest",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "unittest",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "unittest",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from validate.links import find_links_in_text",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "validate.links",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "validate",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "links",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "find_links_in_text",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "find_links_in_text",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from validate.links import check_duplicate_links",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "validate.links",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "validate",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "links",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "check_duplicate_links",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "check_duplicate_links",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from validate.links import fake_user_agent",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "validate.links",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "validate",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "links",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "fake_user_agent",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "fake_user_agent",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from validate.links import get_host_from_link",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "validate.links",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "validate",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "links",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "get_host_from_link",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "get_host_from_link",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from validate.links import has_cloudflare_protection",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "validate.links",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "validate",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "links",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "has_cloudflare_protection",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "has_cloudflare_protection",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "class_definition",
            "label": "class FakeResponse():\n    def __init__(self, code: int, headers: dict, text: str) -> None:\n        self.status_code = code\n        self.headers = headers\n        self.text = text",
            "children": [
                {
                    "type": "identifier",
                    "label": "FakeResponse",
                    "children": []
                },
                {
                    "type": "argument_list",
                    "label": "()",
                    "children": []
                },
                {
                    "type": "block",
                    "label": "def __init__(self, code: int, headers: dict, text: str) -> None:\n        self.status_code = code\n        self.headers = headers\n        self.text = text",
                    "children": [
                        {
                            "type": "function_definition",
                            "label": "def __init__(self, code: int, headers: dict, text: str) -> None:\n        self.status_code = code\n        self.headers = headers\n        self.text = text",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "__init__",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "label": "(self, code: int, headers: dict, text: str)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "self",
                                            "children": []
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "label": "code: int",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "code",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type",
                                                    "label": "int",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "int",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "label": "headers: dict",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "headers",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type",
                                                    "label": "dict",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "dict",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "typed_parameter",
                                            "label": "text: str",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "text",
                                                    "children": []
                                                },
                                                {
                                                    "type": "type",
                                                    "label": "str",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "str",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "type",
                                    "label": "None",
                                    "children": [
                                        {
                                            "type": "none",
                                            "label": "None",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "self.status_code = code\n        self.headers = headers\n        self.text = text",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "self.status_code = code",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "self.status_code = code",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "self.status_code",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "status_code",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "code",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "self.headers = headers",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "self.headers = headers",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "self.headers",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "headers",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "headers",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "self.text = text",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "self.text = text",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "self.text",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "text",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "text",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "class_definition",
            "label": "class TestValidateLinks(unittest.TestCase):\n\n    def setUp(self):\n        self.duplicate_links = [\n            'https://www.example.com',\n            'https://www.example.com',\n            'https://www.example.com',\n            'https://www.anotherexample.com',\n        ]\n        self.no_duplicate_links = [\n            'https://www.firstexample.com',\n            'https://www.secondexample.com',\n            'https://www.anotherexample.com',\n        ]\n\n        self.code_200 = 200\n        self.code_403 = 403\n        self.code_503 = 503\n\n        self.cloudflare_headers = {'Server': 'cloudflare'}\n        self.no_cloudflare_headers = {'Server': 'google'}\n\n        self.text_with_cloudflare_flags = '403 Forbidden Cloudflare We are checking your browser...'\n        self.text_without_cloudflare_flags = 'Lorem Ipsum'\n\n    def test_find_link_in_text(self):\n        text = \"\"\"\n            # this is valid\n\n            http://example.com?param1=1&param2=2#anchor\n            https://www.example.com?param1=1&param2=2#anchor\n            https://www.example.com.br\n            https://www.example.com.gov.br\n            [Example](https://www.example.com?param1=1&param2=2#anchor)\n            lorem ipsum https://www.example.com?param1=1&param2=2#anchor\n            https://www.example.com?param1=1&param2=2#anchor lorem ipsum\n\n            # this not is valid\n\n            example.com\n            https:example.com\n            https:/example.com\n            https//example.com\n            https//.com\n        \"\"\"\n\n        links = find_links_in_text(text)\n\n        self.assertIsInstance(links, list)\n        self.assertEqual(len(links), 7)\n\n        for link in links:\n            with self.subTest():\n                self.assertIsInstance(link, str)\n\n    def test_find_link_in_text_with_invalid_argument(self):\n        with self.assertRaises(TypeError):\n            find_links_in_text()\n            find_links_in_text(1)\n            find_links_in_text(True)\n\n    def test_if_check_duplicate_links_has_the_correct_return(self):\n        result_1 = check_duplicate_links(self.duplicate_links)\n        result_2 = check_duplicate_links(self.no_duplicate_links)\n\n        self.assertIsInstance(result_1, tuple)\n        self.assertIsInstance(result_2, tuple)\n\n        has_duplicate_links, links = result_1\n        no_duplicate_links, no_links = result_2\n\n        self.assertTrue(has_duplicate_links)\n        self.assertFalse(no_duplicate_links)\n\n        self.assertIsInstance(links, list)\n        self.assertIsInstance(no_links, list)\n\n        self.assertEqual(len(links), 2)\n        self.assertEqual(len(no_links), 0)\n\n    def test_if_fake_user_agent_has_a_str_as_return(self):\n        user_agent = fake_user_agent()\n        self.assertIsInstance(user_agent, str)\n\n    def test_get_host_from_link(self):\n        links = [\n            'example.com',\n            'https://example.com',\n            'https://www.example.com',\n            'https://www.example.com.br',\n            'https://www.example.com/route',\n            'https://www.example.com?p=1&q=2',\n            'https://www.example.com#anchor'\n        ]\n\n        for link in links:\n            host = get_host_from_link(link)\n\n            with self.subTest():\n                self.assertIsInstance(host, str)\n\n                self.assertNotIn('://', host)\n                self.assertNotIn('/', host)\n                self.assertNotIn('?', host)\n                self.assertNotIn('#', host)\n\n        with self.assertRaises(TypeError):\n            get_host_from_link()\n\n    def test_has_cloudflare_protection_with_code_403_and_503_in_response(self):\n        resp_with_cloudflare_protection_code_403 = FakeResponse(\n            code=self.code_403,\n            headers=self.cloudflare_headers,\n            text=self.text_with_cloudflare_flags\n        )\n\n        resp_with_cloudflare_protection_code_503 = FakeResponse(\n            code=self.code_503,\n            headers=self.cloudflare_headers,\n            text=self.text_with_cloudflare_flags\n        )\n\n        result1 = has_cloudflare_protection(resp_with_cloudflare_protection_code_403)\n        result2 = has_cloudflare_protection(resp_with_cloudflare_protection_code_503)\n\n        self.assertTrue(result1)\n        self.assertTrue(result2)\n\n    def test_has_cloudflare_protection_when_there_is_no_protection(self):\n        resp_without_cloudflare_protection1 = FakeResponse(\n            code=self.code_200,\n            headers=self.no_cloudflare_headers,\n            text=self.text_without_cloudflare_flags\n        )\n\n        resp_without_cloudflare_protection2 = FakeResponse(\n            code=self.code_403,\n            headers=self.no_cloudflare_headers,\n            text=self.text_without_cloudflare_flags\n        )\n\n        resp_without_cloudflare_protection3 = FakeResponse(\n            code=self.code_503,\n            headers=self.no_cloudflare_headers,\n            text=self.text_without_cloudflare_flags\n        )\n\n        result1 = has_cloudflare_protection(resp_without_cloudflare_protection1)\n        result2 = has_cloudflare_protection(resp_without_cloudflare_protection2)\n        result3 = has_cloudflare_protection(resp_without_cloudflare_protection3)\n\n        self.assertFalse(result1)\n        self.assertFalse(result2)\n        self.assertFalse(result3)",
            "children": [
                {
                    "type": "identifier",
                    "label": "TestValidateLinks",
                    "children": []
                },
                {
                    "type": "argument_list",
                    "label": "(unittest.TestCase)",
                    "children": [
                        {
                            "type": "attribute",
                            "label": "unittest.TestCase",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "unittest",
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "label": "TestCase",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "def setUp(self):\n        self.duplicate_links = [\n            'https://www.example.com',\n            'https://www.example.com',\n            'https://www.example.com',\n            'https://www.anotherexample.com',\n        ]\n        self.no_duplicate_links = [\n            'https://www.firstexample.com',\n            'https://www.secondexample.com',\n            'https://www.anotherexample.com',\n        ]\n\n        self.code_200 = 200\n        self.code_403 = 403\n        self.code_503 = 503\n\n        self.cloudflare_headers = {'Server': 'cloudflare'}\n        self.no_cloudflare_headers = {'Server': 'google'}\n\n        self.text_with_cloudflare_flags = '403 Forbidden Cloudflare We are checking your browser...'\n        self.text_without_cloudflare_flags = 'Lorem Ipsum'\n\n    def test_find_link_in_text(self):\n        text = \"\"\"\n            # this is valid\n\n            http://example.com?param1=1&param2=2#anchor\n            https://www.example.com?param1=1&param2=2#anchor\n            https://www.example.com.br\n            https://www.example.com.gov.br\n            [Example](https://www.example.com?param1=1&param2=2#anchor)\n            lorem ipsum https://www.example.com?param1=1&param2=2#anchor\n            https://www.example.com?param1=1&param2=2#anchor lorem ipsum\n\n            # this not is valid\n\n            example.com\n            https:example.com\n            https:/example.com\n            https//example.com\n            https//.com\n        \"\"\"\n\n        links = find_links_in_text(text)\n\n        self.assertIsInstance(links, list)\n        self.assertEqual(len(links), 7)\n\n        for link in links:\n            with self.subTest():\n                self.assertIsInstance(link, str)\n\n    def test_find_link_in_text_with_invalid_argument(self):\n        with self.assertRaises(TypeError):\n            find_links_in_text()\n            find_links_in_text(1)\n            find_links_in_text(True)\n\n    def test_if_check_duplicate_links_has_the_correct_return(self):\n        result_1 = check_duplicate_links(self.duplicate_links)\n        result_2 = check_duplicate_links(self.no_duplicate_links)\n\n        self.assertIsInstance(result_1, tuple)\n        self.assertIsInstance(result_2, tuple)\n\n        has_duplicate_links, links = result_1\n        no_duplicate_links, no_links = result_2\n\n        self.assertTrue(has_duplicate_links)\n        self.assertFalse(no_duplicate_links)\n\n        self.assertIsInstance(links, list)\n        self.assertIsInstance(no_links, list)\n\n        self.assertEqual(len(links), 2)\n        self.assertEqual(len(no_links), 0)\n\n    def test_if_fake_user_agent_has_a_str_as_return(self):\n        user_agent = fake_user_agent()\n        self.assertIsInstance(user_agent, str)\n\n    def test_get_host_from_link(self):\n        links = [\n            'example.com',\n            'https://example.com',\n            'https://www.example.com',\n            'https://www.example.com.br',\n            'https://www.example.com/route',\n            'https://www.example.com?p=1&q=2',\n            'https://www.example.com#anchor'\n        ]\n\n        for link in links:\n            host = get_host_from_link(link)\n\n            with self.subTest():\n                self.assertIsInstance(host, str)\n\n                self.assertNotIn('://', host)\n                self.assertNotIn('/', host)\n                self.assertNotIn('?', host)\n                self.assertNotIn('#', host)\n\n        with self.assertRaises(TypeError):\n            get_host_from_link()\n\n    def test_has_cloudflare_protection_with_code_403_and_503_in_response(self):\n        resp_with_cloudflare_protection_code_403 = FakeResponse(\n            code=self.code_403,\n            headers=self.cloudflare_headers,\n            text=self.text_with_cloudflare_flags\n        )\n\n        resp_with_cloudflare_protection_code_503 = FakeResponse(\n            code=self.code_503,\n            headers=self.cloudflare_headers,\n            text=self.text_with_cloudflare_flags\n        )\n\n        result1 = has_cloudflare_protection(resp_with_cloudflare_protection_code_403)\n        result2 = has_cloudflare_protection(resp_with_cloudflare_protection_code_503)\n\n        self.assertTrue(result1)\n        self.assertTrue(result2)\n\n    def test_has_cloudflare_protection_when_there_is_no_protection(self):\n        resp_without_cloudflare_protection1 = FakeResponse(\n            code=self.code_200,\n            headers=self.no_cloudflare_headers,\n            text=self.text_without_cloudflare_flags\n        )\n\n        resp_without_cloudflare_protection2 = FakeResponse(\n            code=self.code_403,\n            headers=self.no_cloudflare_headers,\n            text=self.text_without_cloudflare_flags\n        )\n\n        resp_without_cloudflare_protection3 = FakeResponse(\n            code=self.code_503,\n            headers=self.no_cloudflare_headers,\n            text=self.text_without_cloudflare_flags\n        )\n\n        result1 = has_cloudflare_protection(resp_without_cloudflare_protection1)\n        result2 = has_cloudflare_protection(resp_without_cloudflare_protection2)\n        result3 = has_cloudflare_protection(resp_without_cloudflare_protection3)\n\n        self.assertFalse(result1)\n        self.assertFalse(result2)\n        self.assertFalse(result3)",
                    "children": [
                        {
                            "type": "function_definition",
                            "label": "def setUp(self):\n        self.duplicate_links = [\n            'https://www.example.com',\n            'https://www.example.com',\n            'https://www.example.com',\n            'https://www.anotherexample.com',\n        ]\n        self.no_duplicate_links = [\n            'https://www.firstexample.com',\n            'https://www.secondexample.com',\n            'https://www.anotherexample.com',\n        ]\n\n        self.code_200 = 200\n        self.code_403 = 403\n        self.code_503 = 503\n\n        self.cloudflare_headers = {'Server': 'cloudflare'}\n        self.no_cloudflare_headers = {'Server': 'google'}\n\n        self.text_with_cloudflare_flags = '403 Forbidden Cloudflare We are checking your browser...'\n        self.text_without_cloudflare_flags = 'Lorem Ipsum'",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "setUp",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "label": "(self)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "self",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "self.duplicate_links = [\n            'https://www.example.com',\n            'https://www.example.com',\n            'https://www.example.com',\n            'https://www.anotherexample.com',\n        ]\n        self.no_duplicate_links = [\n            'https://www.firstexample.com',\n            'https://www.secondexample.com',\n            'https://www.anotherexample.com',\n        ]\n\n        self.code_200 = 200\n        self.code_403 = 403\n        self.code_503 = 503\n\n        self.cloudflare_headers = {'Server': 'cloudflare'}\n        self.no_cloudflare_headers = {'Server': 'google'}\n\n        self.text_with_cloudflare_flags = '403 Forbidden Cloudflare We are checking your browser...'\n        self.text_without_cloudflare_flags = 'Lorem Ipsum'",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "self.duplicate_links = [\n            'https://www.example.com',\n            'https://www.example.com',\n            'https://www.example.com',\n            'https://www.anotherexample.com',\n        ]",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "self.duplicate_links = [\n            'https://www.example.com',\n            'https://www.example.com',\n            'https://www.example.com',\n            'https://www.anotherexample.com',\n        ]",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "self.duplicate_links",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "duplicate_links",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "list",
                                                            "label": "[\n            'https://www.example.com',\n            'https://www.example.com',\n            'https://www.example.com',\n            'https://www.anotherexample.com',\n        ]",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "'https://www.example.com'",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "'",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "https://www.example.com",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "'",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "label": "'https://www.example.com'",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "'",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "https://www.example.com",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "'",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "label": "'https://www.example.com'",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "'",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "https://www.example.com",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "'",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "label": "'https://www.anotherexample.com'",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "'",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "https://www.anotherexample.com",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "'",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "self.no_duplicate_links = [\n            'https://www.firstexample.com',\n            'https://www.secondexample.com',\n            'https://www.anotherexample.com',\n        ]",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "self.no_duplicate_links = [\n            'https://www.firstexample.com',\n            'https://www.secondexample.com',\n            'https://www.anotherexample.com',\n        ]",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "self.no_duplicate_links",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "no_duplicate_links",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "list",
                                                            "label": "[\n            'https://www.firstexample.com',\n            'https://www.secondexample.com',\n            'https://www.anotherexample.com',\n        ]",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "'https://www.firstexample.com'",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "'",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "https://www.firstexample.com",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "'",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "label": "'https://www.secondexample.com'",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "'",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "https://www.secondexample.com",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "'",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "label": "'https://www.anotherexample.com'",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "'",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "https://www.anotherexample.com",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "'",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "self.code_200 = 200",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "self.code_200 = 200",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "self.code_200",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "code_200",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "integer",
                                                            "label": "200",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "self.code_403 = 403",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "self.code_403 = 403",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "self.code_403",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "code_403",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "integer",
                                                            "label": "403",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "self.code_503 = 503",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "self.code_503 = 503",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "self.code_503",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "code_503",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "integer",
                                                            "label": "503",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "self.cloudflare_headers = {'Server': 'cloudflare'}",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "self.cloudflare_headers = {'Server': 'cloudflare'}",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "self.cloudflare_headers",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "cloudflare_headers",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "dictionary",
                                                            "label": "{'Server': 'cloudflare'}",
                                                            "children": [
                                                                {
                                                                    "type": "pair",
                                                                    "label": "'Server': 'cloudflare'",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "label": "'Server'",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "'",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "Server",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "'",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "label": "'cloudflare'",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "'",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "cloudflare",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "'",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "self.no_cloudflare_headers = {'Server': 'google'}",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "self.no_cloudflare_headers = {'Server': 'google'}",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "self.no_cloudflare_headers",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "no_cloudflare_headers",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "dictionary",
                                                            "label": "{'Server': 'google'}",
                                                            "children": [
                                                                {
                                                                    "type": "pair",
                                                                    "label": "'Server': 'google'",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "label": "'Server'",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "'",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "Server",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "'",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "label": "'google'",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "'",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "google",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "'",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "self.text_with_cloudflare_flags = '403 Forbidden Cloudflare We are checking your browser...'",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "self.text_with_cloudflare_flags = '403 Forbidden Cloudflare We are checking your browser...'",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "self.text_with_cloudflare_flags",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "text_with_cloudflare_flags",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "string",
                                                            "label": "'403 Forbidden Cloudflare We are checking your browser...'",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "'",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "403 Forbidden Cloudflare We are checking your browser...",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "'",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "self.text_without_cloudflare_flags = 'Lorem Ipsum'",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "self.text_without_cloudflare_flags = 'Lorem Ipsum'",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "self.text_without_cloudflare_flags",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "text_without_cloudflare_flags",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "string",
                                                            "label": "'Lorem Ipsum'",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "'",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "Lorem Ipsum",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "'",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "label": "def test_find_link_in_text(self):\n        text = \"\"\"\n            # this is valid\n\n            http://example.com?param1=1&param2=2#anchor\n            https://www.example.com?param1=1&param2=2#anchor\n            https://www.example.com.br\n            https://www.example.com.gov.br\n            [Example](https://www.example.com?param1=1&param2=2#anchor)\n            lorem ipsum https://www.example.com?param1=1&param2=2#anchor\n            https://www.example.com?param1=1&param2=2#anchor lorem ipsum\n\n            # this not is valid\n\n            example.com\n            https:example.com\n            https:/example.com\n            https//example.com\n            https//.com\n        \"\"\"\n\n        links = find_links_in_text(text)\n\n        self.assertIsInstance(links, list)\n        self.assertEqual(len(links), 7)\n\n        for link in links:\n            with self.subTest():\n                self.assertIsInstance(link, str)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "test_find_link_in_text",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "label": "(self)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "self",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "text = \"\"\"\n            # this is valid\n\n            http://example.com?param1=1&param2=2#anchor\n            https://www.example.com?param1=1&param2=2#anchor\n            https://www.example.com.br\n            https://www.example.com.gov.br\n            [Example](https://www.example.com?param1=1&param2=2#anchor)\n            lorem ipsum https://www.example.com?param1=1&param2=2#anchor\n            https://www.example.com?param1=1&param2=2#anchor lorem ipsum\n\n            # this not is valid\n\n            example.com\n            https:example.com\n            https:/example.com\n            https//example.com\n            https//.com\n        \"\"\"\n\n        links = find_links_in_text(text)\n\n        self.assertIsInstance(links, list)\n        self.assertEqual(len(links), 7)\n\n        for link in links:\n            with self.subTest():\n                self.assertIsInstance(link, str)",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "text = \"\"\"\n            # this is valid\n\n            http://example.com?param1=1&param2=2#anchor\n            https://www.example.com?param1=1&param2=2#anchor\n            https://www.example.com.br\n            https://www.example.com.gov.br\n            [Example](https://www.example.com?param1=1&param2=2#anchor)\n            lorem ipsum https://www.example.com?param1=1&param2=2#anchor\n            https://www.example.com?param1=1&param2=2#anchor lorem ipsum\n\n            # this not is valid\n\n            example.com\n            https:example.com\n            https:/example.com\n            https//example.com\n            https//.com\n        \"\"\"",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "text = \"\"\"\n            # this is valid\n\n            http://example.com?param1=1&param2=2#anchor\n            https://www.example.com?param1=1&param2=2#anchor\n            https://www.example.com.br\n            https://www.example.com.gov.br\n            [Example](https://www.example.com?param1=1&param2=2#anchor)\n            lorem ipsum https://www.example.com?param1=1&param2=2#anchor\n            https://www.example.com?param1=1&param2=2#anchor lorem ipsum\n\n            # this not is valid\n\n            example.com\n            https:example.com\n            https:/example.com\n            https//example.com\n            https//.com\n        \"\"\"",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "text",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string",
                                                            "label": "\"\"\"\n            # this is valid\n\n            http://example.com?param1=1&param2=2#anchor\n            https://www.example.com?param1=1&param2=2#anchor\n            https://www.example.com.br\n            https://www.example.com.gov.br\n            [Example](https://www.example.com?param1=1&param2=2#anchor)\n            lorem ipsum https://www.example.com?param1=1&param2=2#anchor\n            https://www.example.com?param1=1&param2=2#anchor lorem ipsum\n\n            # this not is valid\n\n            example.com\n            https:example.com\n            https:/example.com\n            https//example.com\n            https//.com\n        \"\"\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"\"\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "\n            # this is valid\n\n            http://example.com?param1=1&param2=2#anchor\n            https://www.example.com?param1=1&param2=2#anchor\n            https://www.example.com.br\n            https://www.example.com.gov.br\n            [Example](https://www.example.com?param1=1&param2=2#anchor)\n            lorem ipsum https://www.example.com?param1=1&param2=2#anchor\n            https://www.example.com?param1=1&param2=2#anchor lorem ipsum\n\n            # this not is valid\n\n            example.com\n            https:example.com\n            https:/example.com\n            https//example.com\n            https//.com\n        ",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"\"\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "links = find_links_in_text(text)",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "links = find_links_in_text(text)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "links",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "find_links_in_text(text)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "find_links_in_text",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(text)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "text",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "self.assertIsInstance(links, list)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "self.assertIsInstance(links, list)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "self.assertIsInstance",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "assertIsInstance",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(links, list)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "links",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "list",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "self.assertEqual(len(links), 7)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "self.assertEqual(len(links), 7)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "self.assertEqual",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "assertEqual",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(len(links), 7)",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "len(links)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "len",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(links)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "links",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "integer",
                                                                    "label": "7",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "for_statement",
                                            "label": "for link in links:\n            with self.subTest():\n                self.assertIsInstance(link, str)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "link",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "links",
                                                    "children": []
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "with self.subTest():\n                self.assertIsInstance(link, str)",
                                                    "children": [
                                                        {
                                                            "type": "with_statement",
                                                            "label": "with self.subTest():\n                self.assertIsInstance(link, str)",
                                                            "children": [
                                                                {
                                                                    "type": "with_clause",
                                                                    "label": "self.subTest()",
                                                                    "children": [
                                                                        {
                                                                            "type": "with_item",
                                                                            "label": "self.subTest()",
                                                                            "children": [
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "self.subTest()",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "self.subTest",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "self",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "subTest",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "()",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "block",
                                                                    "label": "self.assertIsInstance(link, str)",
                                                                    "children": [
                                                                        {
                                                                            "type": "expression_statement",
                                                                            "label": "self.assertIsInstance(link, str)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "self.assertIsInstance(link, str)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "self.assertIsInstance",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "self",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "assertIsInstance",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "(link, str)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "link",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "str",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "label": "def test_find_link_in_text_with_invalid_argument(self):\n        with self.assertRaises(TypeError):\n            find_links_in_text()\n            find_links_in_text(1)\n            find_links_in_text(True)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "test_find_link_in_text_with_invalid_argument",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "label": "(self)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "self",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "with self.assertRaises(TypeError):\n            find_links_in_text()\n            find_links_in_text(1)\n            find_links_in_text(True)",
                                    "children": [
                                        {
                                            "type": "with_statement",
                                            "label": "with self.assertRaises(TypeError):\n            find_links_in_text()\n            find_links_in_text(1)\n            find_links_in_text(True)",
                                            "children": [
                                                {
                                                    "type": "with_clause",
                                                    "label": "self.assertRaises(TypeError)",
                                                    "children": [
                                                        {
                                                            "type": "with_item",
                                                            "label": "self.assertRaises(TypeError)",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "self.assertRaises(TypeError)",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "self.assertRaises",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "self",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "assertRaises",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(TypeError)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "TypeError",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "find_links_in_text()\n            find_links_in_text(1)\n            find_links_in_text(True)",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "find_links_in_text()",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "find_links_in_text()",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "find_links_in_text",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "()",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "find_links_in_text(1)",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "find_links_in_text(1)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "find_links_in_text",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(1)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "integer",
                                                                                    "label": "1",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "find_links_in_text(True)",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "find_links_in_text(True)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "find_links_in_text",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(True)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "true",
                                                                                    "label": "True",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "label": "def test_if_check_duplicate_links_has_the_correct_return(self):\n        result_1 = check_duplicate_links(self.duplicate_links)\n        result_2 = check_duplicate_links(self.no_duplicate_links)\n\n        self.assertIsInstance(result_1, tuple)\n        self.assertIsInstance(result_2, tuple)\n\n        has_duplicate_links, links = result_1\n        no_duplicate_links, no_links = result_2\n\n        self.assertTrue(has_duplicate_links)\n        self.assertFalse(no_duplicate_links)\n\n        self.assertIsInstance(links, list)\n        self.assertIsInstance(no_links, list)\n\n        self.assertEqual(len(links), 2)\n        self.assertEqual(len(no_links), 0)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "test_if_check_duplicate_links_has_the_correct_return",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "label": "(self)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "self",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "result_1 = check_duplicate_links(self.duplicate_links)\n        result_2 = check_duplicate_links(self.no_duplicate_links)\n\n        self.assertIsInstance(result_1, tuple)\n        self.assertIsInstance(result_2, tuple)\n\n        has_duplicate_links, links = result_1\n        no_duplicate_links, no_links = result_2\n\n        self.assertTrue(has_duplicate_links)\n        self.assertFalse(no_duplicate_links)\n\n        self.assertIsInstance(links, list)\n        self.assertIsInstance(no_links, list)\n\n        self.assertEqual(len(links), 2)\n        self.assertEqual(len(no_links), 0)",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "result_1 = check_duplicate_links(self.duplicate_links)",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "result_1 = check_duplicate_links(self.duplicate_links)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "result_1",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "check_duplicate_links(self.duplicate_links)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "check_duplicate_links",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(self.duplicate_links)",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "self.duplicate_links",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "self",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "duplicate_links",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "result_2 = check_duplicate_links(self.no_duplicate_links)",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "result_2 = check_duplicate_links(self.no_duplicate_links)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "result_2",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "check_duplicate_links(self.no_duplicate_links)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "check_duplicate_links",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(self.no_duplicate_links)",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "self.no_duplicate_links",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "self",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "no_duplicate_links",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "self.assertIsInstance(result_1, tuple)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "self.assertIsInstance(result_1, tuple)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "self.assertIsInstance",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "assertIsInstance",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(result_1, tuple)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "result_1",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "tuple",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "self.assertIsInstance(result_2, tuple)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "self.assertIsInstance(result_2, tuple)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "self.assertIsInstance",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "assertIsInstance",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(result_2, tuple)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "result_2",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "tuple",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "has_duplicate_links, links = result_1",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "has_duplicate_links, links = result_1",
                                                    "children": [
                                                        {
                                                            "type": "pattern_list",
                                                            "label": "has_duplicate_links, links",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "has_duplicate_links",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "links",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "result_1",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "no_duplicate_links, no_links = result_2",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "no_duplicate_links, no_links = result_2",
                                                    "children": [
                                                        {
                                                            "type": "pattern_list",
                                                            "label": "no_duplicate_links, no_links",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "no_duplicate_links",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "no_links",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "result_2",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "self.assertTrue(has_duplicate_links)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "self.assertTrue(has_duplicate_links)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "self.assertTrue",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "assertTrue",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(has_duplicate_links)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "has_duplicate_links",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "self.assertFalse(no_duplicate_links)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "self.assertFalse(no_duplicate_links)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "self.assertFalse",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "assertFalse",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(no_duplicate_links)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "no_duplicate_links",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "self.assertIsInstance(links, list)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "self.assertIsInstance(links, list)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "self.assertIsInstance",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "assertIsInstance",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(links, list)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "links",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "list",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "self.assertIsInstance(no_links, list)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "self.assertIsInstance(no_links, list)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "self.assertIsInstance",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "assertIsInstance",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(no_links, list)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "no_links",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "list",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "self.assertEqual(len(links), 2)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "self.assertEqual(len(links), 2)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "self.assertEqual",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "assertEqual",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(len(links), 2)",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "len(links)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "len",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(links)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "links",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "integer",
                                                                    "label": "2",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "self.assertEqual(len(no_links), 0)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "self.assertEqual(len(no_links), 0)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "self.assertEqual",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "assertEqual",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(len(no_links), 0)",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "len(no_links)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "len",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(no_links)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "no_links",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "integer",
                                                                    "label": "0",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "label": "def test_if_fake_user_agent_has_a_str_as_return(self):\n        user_agent = fake_user_agent()\n        self.assertIsInstance(user_agent, str)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "test_if_fake_user_agent_has_a_str_as_return",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "label": "(self)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "self",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "user_agent = fake_user_agent()\n        self.assertIsInstance(user_agent, str)",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "user_agent = fake_user_agent()",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "user_agent = fake_user_agent()",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "user_agent",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "fake_user_agent()",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "fake_user_agent",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "()",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "self.assertIsInstance(user_agent, str)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "self.assertIsInstance(user_agent, str)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "self.assertIsInstance",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "assertIsInstance",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(user_agent, str)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "user_agent",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "str",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "label": "def test_get_host_from_link(self):\n        links = [\n            'example.com',\n            'https://example.com',\n            'https://www.example.com',\n            'https://www.example.com.br',\n            'https://www.example.com/route',\n            'https://www.example.com?p=1&q=2',\n            'https://www.example.com#anchor'\n        ]\n\n        for link in links:\n            host = get_host_from_link(link)\n\n            with self.subTest():\n                self.assertIsInstance(host, str)\n\n                self.assertNotIn('://', host)\n                self.assertNotIn('/', host)\n                self.assertNotIn('?', host)\n                self.assertNotIn('#', host)\n\n        with self.assertRaises(TypeError):\n            get_host_from_link()",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "test_get_host_from_link",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "label": "(self)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "self",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "links = [\n            'example.com',\n            'https://example.com',\n            'https://www.example.com',\n            'https://www.example.com.br',\n            'https://www.example.com/route',\n            'https://www.example.com?p=1&q=2',\n            'https://www.example.com#anchor'\n        ]\n\n        for link in links:\n            host = get_host_from_link(link)\n\n            with self.subTest():\n                self.assertIsInstance(host, str)\n\n                self.assertNotIn('://', host)\n                self.assertNotIn('/', host)\n                self.assertNotIn('?', host)\n                self.assertNotIn('#', host)\n\n        with self.assertRaises(TypeError):\n            get_host_from_link()",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "links = [\n            'example.com',\n            'https://example.com',\n            'https://www.example.com',\n            'https://www.example.com.br',\n            'https://www.example.com/route',\n            'https://www.example.com?p=1&q=2',\n            'https://www.example.com#anchor'\n        ]",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "links = [\n            'example.com',\n            'https://example.com',\n            'https://www.example.com',\n            'https://www.example.com.br',\n            'https://www.example.com/route',\n            'https://www.example.com?p=1&q=2',\n            'https://www.example.com#anchor'\n        ]",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "links",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "list",
                                                            "label": "[\n            'example.com',\n            'https://example.com',\n            'https://www.example.com',\n            'https://www.example.com.br',\n            'https://www.example.com/route',\n            'https://www.example.com?p=1&q=2',\n            'https://www.example.com#anchor'\n        ]",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "'example.com'",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "'",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "example.com",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "'",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "label": "'https://example.com'",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "'",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "https://example.com",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "'",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "label": "'https://www.example.com'",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "'",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "https://www.example.com",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "'",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "label": "'https://www.example.com.br'",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "'",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "https://www.example.com.br",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "'",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "label": "'https://www.example.com/route'",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "'",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "https://www.example.com/route",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "'",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "label": "'https://www.example.com?p=1&q=2'",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "'",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "https://www.example.com?p=1&q=2",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "'",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "string",
                                                                    "label": "'https://www.example.com#anchor'",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "'",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "https://www.example.com#anchor",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "'",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "for_statement",
                                            "label": "for link in links:\n            host = get_host_from_link(link)\n\n            with self.subTest():\n                self.assertIsInstance(host, str)\n\n                self.assertNotIn('://', host)\n                self.assertNotIn('/', host)\n                self.assertNotIn('?', host)\n                self.assertNotIn('#', host)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "link",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "links",
                                                    "children": []
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "host = get_host_from_link(link)\n\n            with self.subTest():\n                self.assertIsInstance(host, str)\n\n                self.assertNotIn('://', host)\n                self.assertNotIn('/', host)\n                self.assertNotIn('?', host)\n                self.assertNotIn('#', host)",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "host = get_host_from_link(link)",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "label": "host = get_host_from_link(link)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "host",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "call",
                                                                            "label": "get_host_from_link(link)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "get_host_from_link",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(link)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "link",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "with_statement",
                                                            "label": "with self.subTest():\n                self.assertIsInstance(host, str)\n\n                self.assertNotIn('://', host)\n                self.assertNotIn('/', host)\n                self.assertNotIn('?', host)\n                self.assertNotIn('#', host)",
                                                            "children": [
                                                                {
                                                                    "type": "with_clause",
                                                                    "label": "self.subTest()",
                                                                    "children": [
                                                                        {
                                                                            "type": "with_item",
                                                                            "label": "self.subTest()",
                                                                            "children": [
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "self.subTest()",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "self.subTest",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "self",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "subTest",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "()",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "block",
                                                                    "label": "self.assertIsInstance(host, str)\n\n                self.assertNotIn('://', host)\n                self.assertNotIn('/', host)\n                self.assertNotIn('?', host)\n                self.assertNotIn('#', host)",
                                                                    "children": [
                                                                        {
                                                                            "type": "expression_statement",
                                                                            "label": "self.assertIsInstance(host, str)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "self.assertIsInstance(host, str)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "self.assertIsInstance",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "self",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "assertIsInstance",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "(host, str)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "host",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "str",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "expression_statement",
                                                                            "label": "self.assertNotIn('://', host)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "self.assertNotIn('://', host)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "self.assertNotIn",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "self",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "assertNotIn",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "('://', host)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "'://'",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "'",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "://",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "'",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "host",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "expression_statement",
                                                                            "label": "self.assertNotIn('/', host)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "self.assertNotIn('/', host)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "self.assertNotIn",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "self",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "assertNotIn",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "('/', host)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "'/'",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "'",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "/",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "'",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "host",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "expression_statement",
                                                                            "label": "self.assertNotIn('?', host)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "self.assertNotIn('?', host)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "self.assertNotIn",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "self",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "assertNotIn",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "('?', host)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "'?'",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "'",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "?",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "'",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "host",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "expression_statement",
                                                                            "label": "self.assertNotIn('#', host)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "self.assertNotIn('#', host)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "self.assertNotIn",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "self",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "assertNotIn",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "('#', host)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "'#'",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "'",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "#",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "'",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "host",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "with_statement",
                                            "label": "with self.assertRaises(TypeError):\n            get_host_from_link()",
                                            "children": [
                                                {
                                                    "type": "with_clause",
                                                    "label": "self.assertRaises(TypeError)",
                                                    "children": [
                                                        {
                                                            "type": "with_item",
                                                            "label": "self.assertRaises(TypeError)",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "self.assertRaises(TypeError)",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "self.assertRaises",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "self",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "assertRaises",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(TypeError)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "TypeError",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "get_host_from_link()",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "get_host_from_link()",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "get_host_from_link()",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "get_host_from_link",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "()",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "label": "def test_has_cloudflare_protection_with_code_403_and_503_in_response(self):\n        resp_with_cloudflare_protection_code_403 = FakeResponse(\n            code=self.code_403,\n            headers=self.cloudflare_headers,\n            text=self.text_with_cloudflare_flags\n        )\n\n        resp_with_cloudflare_protection_code_503 = FakeResponse(\n            code=self.code_503,\n            headers=self.cloudflare_headers,\n            text=self.text_with_cloudflare_flags\n        )\n\n        result1 = has_cloudflare_protection(resp_with_cloudflare_protection_code_403)\n        result2 = has_cloudflare_protection(resp_with_cloudflare_protection_code_503)\n\n        self.assertTrue(result1)\n        self.assertTrue(result2)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "test_has_cloudflare_protection_with_code_403_and_503_in_response",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "label": "(self)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "self",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "resp_with_cloudflare_protection_code_403 = FakeResponse(\n            code=self.code_403,\n            headers=self.cloudflare_headers,\n            text=self.text_with_cloudflare_flags\n        )\n\n        resp_with_cloudflare_protection_code_503 = FakeResponse(\n            code=self.code_503,\n            headers=self.cloudflare_headers,\n            text=self.text_with_cloudflare_flags\n        )\n\n        result1 = has_cloudflare_protection(resp_with_cloudflare_protection_code_403)\n        result2 = has_cloudflare_protection(resp_with_cloudflare_protection_code_503)\n\n        self.assertTrue(result1)\n        self.assertTrue(result2)",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "resp_with_cloudflare_protection_code_403 = FakeResponse(\n            code=self.code_403,\n            headers=self.cloudflare_headers,\n            text=self.text_with_cloudflare_flags\n        )",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "resp_with_cloudflare_protection_code_403 = FakeResponse(\n            code=self.code_403,\n            headers=self.cloudflare_headers,\n            text=self.text_with_cloudflare_flags\n        )",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "resp_with_cloudflare_protection_code_403",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "FakeResponse(\n            code=self.code_403,\n            headers=self.cloudflare_headers,\n            text=self.text_with_cloudflare_flags\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "FakeResponse",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(\n            code=self.code_403,\n            headers=self.cloudflare_headers,\n            text=self.text_with_cloudflare_flags\n        )",
                                                                    "children": [
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "code=self.code_403",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "code",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "self.code_403",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "self",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "code_403",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "headers=self.cloudflare_headers",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "headers",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "self.cloudflare_headers",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "self",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "cloudflare_headers",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "text=self.text_with_cloudflare_flags",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "text",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "self.text_with_cloudflare_flags",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "self",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "text_with_cloudflare_flags",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "resp_with_cloudflare_protection_code_503 = FakeResponse(\n            code=self.code_503,\n            headers=self.cloudflare_headers,\n            text=self.text_with_cloudflare_flags\n        )",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "resp_with_cloudflare_protection_code_503 = FakeResponse(\n            code=self.code_503,\n            headers=self.cloudflare_headers,\n            text=self.text_with_cloudflare_flags\n        )",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "resp_with_cloudflare_protection_code_503",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "FakeResponse(\n            code=self.code_503,\n            headers=self.cloudflare_headers,\n            text=self.text_with_cloudflare_flags\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "FakeResponse",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(\n            code=self.code_503,\n            headers=self.cloudflare_headers,\n            text=self.text_with_cloudflare_flags\n        )",
                                                                    "children": [
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "code=self.code_503",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "code",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "self.code_503",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "self",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "code_503",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "headers=self.cloudflare_headers",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "headers",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "self.cloudflare_headers",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "self",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "cloudflare_headers",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "text=self.text_with_cloudflare_flags",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "text",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "self.text_with_cloudflare_flags",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "self",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "text_with_cloudflare_flags",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "result1 = has_cloudflare_protection(resp_with_cloudflare_protection_code_403)",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "result1 = has_cloudflare_protection(resp_with_cloudflare_protection_code_403)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "result1",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "has_cloudflare_protection(resp_with_cloudflare_protection_code_403)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "has_cloudflare_protection",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(resp_with_cloudflare_protection_code_403)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "resp_with_cloudflare_protection_code_403",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "result2 = has_cloudflare_protection(resp_with_cloudflare_protection_code_503)",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "result2 = has_cloudflare_protection(resp_with_cloudflare_protection_code_503)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "result2",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "has_cloudflare_protection(resp_with_cloudflare_protection_code_503)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "has_cloudflare_protection",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(resp_with_cloudflare_protection_code_503)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "resp_with_cloudflare_protection_code_503",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "self.assertTrue(result1)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "self.assertTrue(result1)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "self.assertTrue",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "assertTrue",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(result1)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "result1",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "self.assertTrue(result2)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "self.assertTrue(result2)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "self.assertTrue",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "assertTrue",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(result2)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "result2",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "function_definition",
                            "label": "def test_has_cloudflare_protection_when_there_is_no_protection(self):\n        resp_without_cloudflare_protection1 = FakeResponse(\n            code=self.code_200,\n            headers=self.no_cloudflare_headers,\n            text=self.text_without_cloudflare_flags\n        )\n\n        resp_without_cloudflare_protection2 = FakeResponse(\n            code=self.code_403,\n            headers=self.no_cloudflare_headers,\n            text=self.text_without_cloudflare_flags\n        )\n\n        resp_without_cloudflare_protection3 = FakeResponse(\n            code=self.code_503,\n            headers=self.no_cloudflare_headers,\n            text=self.text_without_cloudflare_flags\n        )\n\n        result1 = has_cloudflare_protection(resp_without_cloudflare_protection1)\n        result2 = has_cloudflare_protection(resp_without_cloudflare_protection2)\n        result3 = has_cloudflare_protection(resp_without_cloudflare_protection3)\n\n        self.assertFalse(result1)\n        self.assertFalse(result2)\n        self.assertFalse(result3)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "test_has_cloudflare_protection_when_there_is_no_protection",
                                    "children": []
                                },
                                {
                                    "type": "parameters",
                                    "label": "(self)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "self",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "resp_without_cloudflare_protection1 = FakeResponse(\n            code=self.code_200,\n            headers=self.no_cloudflare_headers,\n            text=self.text_without_cloudflare_flags\n        )\n\n        resp_without_cloudflare_protection2 = FakeResponse(\n            code=self.code_403,\n            headers=self.no_cloudflare_headers,\n            text=self.text_without_cloudflare_flags\n        )\n\n        resp_without_cloudflare_protection3 = FakeResponse(\n            code=self.code_503,\n            headers=self.no_cloudflare_headers,\n            text=self.text_without_cloudflare_flags\n        )\n\n        result1 = has_cloudflare_protection(resp_without_cloudflare_protection1)\n        result2 = has_cloudflare_protection(resp_without_cloudflare_protection2)\n        result3 = has_cloudflare_protection(resp_without_cloudflare_protection3)\n\n        self.assertFalse(result1)\n        self.assertFalse(result2)\n        self.assertFalse(result3)",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "resp_without_cloudflare_protection1 = FakeResponse(\n            code=self.code_200,\n            headers=self.no_cloudflare_headers,\n            text=self.text_without_cloudflare_flags\n        )",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "resp_without_cloudflare_protection1 = FakeResponse(\n            code=self.code_200,\n            headers=self.no_cloudflare_headers,\n            text=self.text_without_cloudflare_flags\n        )",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "resp_without_cloudflare_protection1",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "FakeResponse(\n            code=self.code_200,\n            headers=self.no_cloudflare_headers,\n            text=self.text_without_cloudflare_flags\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "FakeResponse",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(\n            code=self.code_200,\n            headers=self.no_cloudflare_headers,\n            text=self.text_without_cloudflare_flags\n        )",
                                                                    "children": [
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "code=self.code_200",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "code",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "self.code_200",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "self",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "code_200",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "headers=self.no_cloudflare_headers",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "headers",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "self.no_cloudflare_headers",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "self",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "no_cloudflare_headers",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "text=self.text_without_cloudflare_flags",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "text",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "self.text_without_cloudflare_flags",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "self",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "text_without_cloudflare_flags",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "resp_without_cloudflare_protection2 = FakeResponse(\n            code=self.code_403,\n            headers=self.no_cloudflare_headers,\n            text=self.text_without_cloudflare_flags\n        )",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "resp_without_cloudflare_protection2 = FakeResponse(\n            code=self.code_403,\n            headers=self.no_cloudflare_headers,\n            text=self.text_without_cloudflare_flags\n        )",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "resp_without_cloudflare_protection2",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "FakeResponse(\n            code=self.code_403,\n            headers=self.no_cloudflare_headers,\n            text=self.text_without_cloudflare_flags\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "FakeResponse",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(\n            code=self.code_403,\n            headers=self.no_cloudflare_headers,\n            text=self.text_without_cloudflare_flags\n        )",
                                                                    "children": [
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "code=self.code_403",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "code",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "self.code_403",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "self",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "code_403",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "headers=self.no_cloudflare_headers",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "headers",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "self.no_cloudflare_headers",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "self",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "no_cloudflare_headers",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "text=self.text_without_cloudflare_flags",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "text",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "self.text_without_cloudflare_flags",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "self",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "text_without_cloudflare_flags",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "resp_without_cloudflare_protection3 = FakeResponse(\n            code=self.code_503,\n            headers=self.no_cloudflare_headers,\n            text=self.text_without_cloudflare_flags\n        )",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "resp_without_cloudflare_protection3 = FakeResponse(\n            code=self.code_503,\n            headers=self.no_cloudflare_headers,\n            text=self.text_without_cloudflare_flags\n        )",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "resp_without_cloudflare_protection3",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "FakeResponse(\n            code=self.code_503,\n            headers=self.no_cloudflare_headers,\n            text=self.text_without_cloudflare_flags\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "FakeResponse",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(\n            code=self.code_503,\n            headers=self.no_cloudflare_headers,\n            text=self.text_without_cloudflare_flags\n        )",
                                                                    "children": [
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "code=self.code_503",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "code",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "self.code_503",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "self",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "code_503",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "headers=self.no_cloudflare_headers",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "headers",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "self.no_cloudflare_headers",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "self",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "no_cloudflare_headers",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "text=self.text_without_cloudflare_flags",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "text",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "self.text_without_cloudflare_flags",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "self",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "text_without_cloudflare_flags",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "result1 = has_cloudflare_protection(resp_without_cloudflare_protection1)",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "result1 = has_cloudflare_protection(resp_without_cloudflare_protection1)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "result1",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "has_cloudflare_protection(resp_without_cloudflare_protection1)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "has_cloudflare_protection",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(resp_without_cloudflare_protection1)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "resp_without_cloudflare_protection1",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "result2 = has_cloudflare_protection(resp_without_cloudflare_protection2)",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "result2 = has_cloudflare_protection(resp_without_cloudflare_protection2)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "result2",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "has_cloudflare_protection(resp_without_cloudflare_protection2)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "has_cloudflare_protection",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(resp_without_cloudflare_protection2)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "resp_without_cloudflare_protection2",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "result3 = has_cloudflare_protection(resp_without_cloudflare_protection3)",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "result3 = has_cloudflare_protection(resp_without_cloudflare_protection3)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "result3",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "has_cloudflare_protection(resp_without_cloudflare_protection3)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "has_cloudflare_protection",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(resp_without_cloudflare_protection3)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "resp_without_cloudflare_protection3",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "self.assertFalse(result1)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "self.assertFalse(result1)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "self.assertFalse",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "assertFalse",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(result1)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "result1",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "self.assertFalse(result2)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "self.assertFalse(result2)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "self.assertFalse",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "assertFalse",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(result2)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "result2",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "self.assertFalse(result3)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "self.assertFalse(result3)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "self.assertFalse",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "self",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "assertFalse",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(result3)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "result3",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}