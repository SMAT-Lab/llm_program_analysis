{
    "type": "module",
    "label": "import subprocess\nimport sys\nimport time\n\n\ndef wait_for_postgres(max_retries=5, delay=5):\n    for _ in range(max_retries):\n        try:\n            result = subprocess.run(\n                [\n                    \"docker\",\n                    \"compose\",\n                    \"-f\",\n                    \"docker-compose.test.yaml\",\n                    \"exec\",\n                    \"postgres-test\",\n                    \"pg_isready\",\n                    \"-U\",\n                    \"postgres\",\n                    \"-d\",\n                    \"postgres\",\n                ],\n                check=True,\n                capture_output=True,\n                text=True,\n            )\n            if \"accepting connections\" in result.stdout:\n                print(\"PostgreSQL is ready.\")\n                return True\n        except subprocess.CalledProcessError:\n            print(f\"PostgreSQL is not ready yet. Retrying in {delay} seconds...\")\n            time.sleep(delay)\n    print(\"Failed to connect to PostgreSQL.\")\n    return False\n\n\ndef run_command(command, check=True):\n    try:\n        subprocess.run(command, check=check)\n    except subprocess.CalledProcessError as e:\n        print(f\"Command failed: {e}\")\n        sys.exit(1)\n\n\ndef test():\n    # Start PostgreSQL with Docker Compose\n    run_command(\n        [\n            \"docker\",\n            \"compose\",\n            \"-f\",\n            \"docker-compose.test.yaml\",\n            \"up\",\n            \"-d\",\n            \"postgres-test\",\n        ]\n    )\n\n    if not wait_for_postgres():\n        run_command([\"docker\", \"compose\", \"-f\", \"docker-compose.test.yaml\", \"down\"])\n        sys.exit(1)\n\n    # Run Prisma migrations\n    run_command([\"prisma\", \"migrate\", \"dev\"])\n\n    # Run the tests\n    result = subprocess.run([\"pytest\"] + sys.argv[1:], check=False)\n\n    run_command([\"docker\", \"compose\", \"-f\", \"docker-compose.test.yaml\", \"down\"])\n\n    sys.exit(result.returncode)\n",
    "children": [
        {
            "type": "import_statement",
            "label": "import subprocess",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "subprocess",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "subprocess",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_statement",
            "label": "import sys",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "sys",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "sys",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_statement",
            "label": "import time",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "time",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "time",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def wait_for_postgres(max_retries=5, delay=5):\n    for _ in range(max_retries):\n        try:\n            result = subprocess.run(\n                [\n                    \"docker\",\n                    \"compose\",\n                    \"-f\",\n                    \"docker-compose.test.yaml\",\n                    \"exec\",\n                    \"postgres-test\",\n                    \"pg_isready\",\n                    \"-U\",\n                    \"postgres\",\n                    \"-d\",\n                    \"postgres\",\n                ],\n                check=True,\n                capture_output=True,\n                text=True,\n            )\n            if \"accepting connections\" in result.stdout:\n                print(\"PostgreSQL is ready.\")\n                return True\n        except subprocess.CalledProcessError:\n            print(f\"PostgreSQL is not ready yet. Retrying in {delay} seconds...\")\n            time.sleep(delay)\n    print(\"Failed to connect to PostgreSQL.\")\n    return False",
            "children": [
                {
                    "type": "identifier",
                    "label": "wait_for_postgres",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(max_retries=5, delay=5)",
                    "children": [
                        {
                            "type": "default_parameter",
                            "label": "max_retries=5",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "max_retries",
                                    "children": []
                                },
                                {
                                    "type": "integer",
                                    "label": "5",
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "default_parameter",
                            "label": "delay=5",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "delay",
                                    "children": []
                                },
                                {
                                    "type": "integer",
                                    "label": "5",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "for _ in range(max_retries):\n        try:\n            result = subprocess.run(\n                [\n                    \"docker\",\n                    \"compose\",\n                    \"-f\",\n                    \"docker-compose.test.yaml\",\n                    \"exec\",\n                    \"postgres-test\",\n                    \"pg_isready\",\n                    \"-U\",\n                    \"postgres\",\n                    \"-d\",\n                    \"postgres\",\n                ],\n                check=True,\n                capture_output=True,\n                text=True,\n            )\n            if \"accepting connections\" in result.stdout:\n                print(\"PostgreSQL is ready.\")\n                return True\n        except subprocess.CalledProcessError:\n            print(f\"PostgreSQL is not ready yet. Retrying in {delay} seconds...\")\n            time.sleep(delay)\n    print(\"Failed to connect to PostgreSQL.\")\n    return False",
                    "children": [
                        {
                            "type": "for_statement",
                            "label": "for _ in range(max_retries):\n        try:\n            result = subprocess.run(\n                [\n                    \"docker\",\n                    \"compose\",\n                    \"-f\",\n                    \"docker-compose.test.yaml\",\n                    \"exec\",\n                    \"postgres-test\",\n                    \"pg_isready\",\n                    \"-U\",\n                    \"postgres\",\n                    \"-d\",\n                    \"postgres\",\n                ],\n                check=True,\n                capture_output=True,\n                text=True,\n            )\n            if \"accepting connections\" in result.stdout:\n                print(\"PostgreSQL is ready.\")\n                return True\n        except subprocess.CalledProcessError:\n            print(f\"PostgreSQL is not ready yet. Retrying in {delay} seconds...\")\n            time.sleep(delay)",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "_",
                                    "children": []
                                },
                                {
                                    "type": "call",
                                    "label": "range(max_retries)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "range",
                                            "children": []
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(max_retries)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "max_retries",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "try:\n            result = subprocess.run(\n                [\n                    \"docker\",\n                    \"compose\",\n                    \"-f\",\n                    \"docker-compose.test.yaml\",\n                    \"exec\",\n                    \"postgres-test\",\n                    \"pg_isready\",\n                    \"-U\",\n                    \"postgres\",\n                    \"-d\",\n                    \"postgres\",\n                ],\n                check=True,\n                capture_output=True,\n                text=True,\n            )\n            if \"accepting connections\" in result.stdout:\n                print(\"PostgreSQL is ready.\")\n                return True\n        except subprocess.CalledProcessError:\n            print(f\"PostgreSQL is not ready yet. Retrying in {delay} seconds...\")\n            time.sleep(delay)",
                                    "children": [
                                        {
                                            "type": "try_statement",
                                            "label": "try:\n            result = subprocess.run(\n                [\n                    \"docker\",\n                    \"compose\",\n                    \"-f\",\n                    \"docker-compose.test.yaml\",\n                    \"exec\",\n                    \"postgres-test\",\n                    \"pg_isready\",\n                    \"-U\",\n                    \"postgres\",\n                    \"-d\",\n                    \"postgres\",\n                ],\n                check=True,\n                capture_output=True,\n                text=True,\n            )\n            if \"accepting connections\" in result.stdout:\n                print(\"PostgreSQL is ready.\")\n                return True\n        except subprocess.CalledProcessError:\n            print(f\"PostgreSQL is not ready yet. Retrying in {delay} seconds...\")\n            time.sleep(delay)",
                                            "children": [
                                                {
                                                    "type": "block",
                                                    "label": "result = subprocess.run(\n                [\n                    \"docker\",\n                    \"compose\",\n                    \"-f\",\n                    \"docker-compose.test.yaml\",\n                    \"exec\",\n                    \"postgres-test\",\n                    \"pg_isready\",\n                    \"-U\",\n                    \"postgres\",\n                    \"-d\",\n                    \"postgres\",\n                ],\n                check=True,\n                capture_output=True,\n                text=True,\n            )\n            if \"accepting connections\" in result.stdout:\n                print(\"PostgreSQL is ready.\")\n                return True",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "result = subprocess.run(\n                [\n                    \"docker\",\n                    \"compose\",\n                    \"-f\",\n                    \"docker-compose.test.yaml\",\n                    \"exec\",\n                    \"postgres-test\",\n                    \"pg_isready\",\n                    \"-U\",\n                    \"postgres\",\n                    \"-d\",\n                    \"postgres\",\n                ],\n                check=True,\n                capture_output=True,\n                text=True,\n            )",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "label": "result = subprocess.run(\n                [\n                    \"docker\",\n                    \"compose\",\n                    \"-f\",\n                    \"docker-compose.test.yaml\",\n                    \"exec\",\n                    \"postgres-test\",\n                    \"pg_isready\",\n                    \"-U\",\n                    \"postgres\",\n                    \"-d\",\n                    \"postgres\",\n                ],\n                check=True,\n                capture_output=True,\n                text=True,\n            )",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "result",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "call",
                                                                            "label": "subprocess.run(\n                [\n                    \"docker\",\n                    \"compose\",\n                    \"-f\",\n                    \"docker-compose.test.yaml\",\n                    \"exec\",\n                    \"postgres-test\",\n                    \"pg_isready\",\n                    \"-U\",\n                    \"postgres\",\n                    \"-d\",\n                    \"postgres\",\n                ],\n                check=True,\n                capture_output=True,\n                text=True,\n            )",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "subprocess.run",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "subprocess",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "run",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(\n                [\n                    \"docker\",\n                    \"compose\",\n                    \"-f\",\n                    \"docker-compose.test.yaml\",\n                    \"exec\",\n                    \"postgres-test\",\n                    \"pg_isready\",\n                    \"-U\",\n                    \"postgres\",\n                    \"-d\",\n                    \"postgres\",\n                ],\n                check=True,\n                capture_output=True,\n                text=True,\n            )",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "list",
                                                                                            "label": "[\n                    \"docker\",\n                    \"compose\",\n                    \"-f\",\n                    \"docker-compose.test.yaml\",\n                    \"exec\",\n                    \"postgres-test\",\n                    \"pg_isready\",\n                    \"-U\",\n                    \"postgres\",\n                    \"-d\",\n                    \"postgres\",\n                ]",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"docker\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "docker",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"compose\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "compose",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"-f\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "-f",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"docker-compose.test.yaml\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "docker-compose.test.yaml",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"exec\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "exec",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"postgres-test\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "postgres-test",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"pg_isready\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "pg_isready",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"-U\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "-U",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"postgres\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "postgres",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"-d\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "-d",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"postgres\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "postgres",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "keyword_argument",
                                                                                            "label": "check=True",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "check",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "true",
                                                                                                    "label": "True",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "keyword_argument",
                                                                                            "label": "capture_output=True",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "capture_output",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "true",
                                                                                                    "label": "True",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "keyword_argument",
                                                                                            "label": "text=True",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "text",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "true",
                                                                                                    "label": "True",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "if_statement",
                                                            "label": "if \"accepting connections\" in result.stdout:\n                print(\"PostgreSQL is ready.\")\n                return True",
                                                            "children": [
                                                                {
                                                                    "type": "comparison_operator",
                                                                    "label": "\"accepting connections\" in result.stdout",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "label": "\"accepting connections\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "accepting connections",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "result.stdout",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "result",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "stdout",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "block",
                                                                    "label": "print(\"PostgreSQL is ready.\")\n                return True",
                                                                    "children": [
                                                                        {
                                                                            "type": "expression_statement",
                                                                            "label": "print(\"PostgreSQL is ready.\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "print(\"PostgreSQL is ready.\")",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "print",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "(\"PostgreSQL is ready.\")",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"PostgreSQL is ready.\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "PostgreSQL is ready.",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "return_statement",
                                                                            "label": "return True",
                                                                            "children": [
                                                                                {
                                                                                    "type": "true",
                                                                                    "label": "True",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "except_clause",
                                                    "label": "except subprocess.CalledProcessError:\n            print(f\"PostgreSQL is not ready yet. Retrying in {delay} seconds...\")\n            time.sleep(delay)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "subprocess.CalledProcessError",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "subprocess",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "CalledProcessError",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "block",
                                                            "label": "print(f\"PostgreSQL is not ready yet. Retrying in {delay} seconds...\")\n            time.sleep(delay)",
                                                            "children": [
                                                                {
                                                                    "type": "expression_statement",
                                                                    "label": "print(f\"PostgreSQL is not ready yet. Retrying in {delay} seconds...\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "print(f\"PostgreSQL is not ready yet. Retrying in {delay} seconds...\")",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "print",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(f\"PostgreSQL is not ready yet. Retrying in {delay} seconds...\")",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "f\"PostgreSQL is not ready yet. Retrying in {delay} seconds...\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "f\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "PostgreSQL is not ready yet. Retrying in ",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "interpolation",
                                                                                                    "label": "{delay}",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "delay",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": " seconds...",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "expression_statement",
                                                                    "label": "time.sleep(delay)",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "time.sleep(delay)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "time.sleep",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "time",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "sleep",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(delay)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "delay",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "print(\"Failed to connect to PostgreSQL.\")",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "print(\"Failed to connect to PostgreSQL.\")",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "print",
                                            "children": []
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(\"Failed to connect to PostgreSQL.\")",
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "label": "\"Failed to connect to PostgreSQL.\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "Failed to connect to PostgreSQL.",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return False",
                            "children": [
                                {
                                    "type": "false",
                                    "label": "False",
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def run_command(command, check=True):\n    try:\n        subprocess.run(command, check=check)\n    except subprocess.CalledProcessError as e:\n        print(f\"Command failed: {e}\")\n        sys.exit(1)",
            "children": [
                {
                    "type": "identifier",
                    "label": "run_command",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(command, check=True)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "command",
                            "children": []
                        },
                        {
                            "type": "default_parameter",
                            "label": "check=True",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "check",
                                    "children": []
                                },
                                {
                                    "type": "true",
                                    "label": "True",
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "try:\n        subprocess.run(command, check=check)\n    except subprocess.CalledProcessError as e:\n        print(f\"Command failed: {e}\")\n        sys.exit(1)",
                    "children": [
                        {
                            "type": "try_statement",
                            "label": "try:\n        subprocess.run(command, check=check)\n    except subprocess.CalledProcessError as e:\n        print(f\"Command failed: {e}\")\n        sys.exit(1)",
                            "children": [
                                {
                                    "type": "block",
                                    "label": "subprocess.run(command, check=check)",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "subprocess.run(command, check=check)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "subprocess.run(command, check=check)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "subprocess.run",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "subprocess",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "run",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(command, check=check)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "command",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "check=check",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "check",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "check",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "except_clause",
                                    "label": "except subprocess.CalledProcessError as e:\n        print(f\"Command failed: {e}\")\n        sys.exit(1)",
                                    "children": [
                                        {
                                            "type": "as_pattern",
                                            "label": "subprocess.CalledProcessError as e",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "subprocess.CalledProcessError",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "subprocess",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "CalledProcessError",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "as_pattern_target",
                                                    "label": "e",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "e",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "print(f\"Command failed: {e}\")\n        sys.exit(1)",
                                            "children": [
                                                {
                                                    "type": "expression_statement",
                                                    "label": "print(f\"Command failed: {e}\")",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "print(f\"Command failed: {e}\")",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "print",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(f\"Command failed: {e}\")",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "label": "f\"Command failed: {e}\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "f\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "Command failed: ",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "interpolation",
                                                                                    "label": "{e}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "e",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "expression_statement",
                                                    "label": "sys.exit(1)",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "sys.exit(1)",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "sys.exit",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "sys",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "exit",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(1)",
                                                                    "children": [
                                                                        {
                                                                            "type": "integer",
                                                                            "label": "1",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "def test():\n    # Start PostgreSQL with Docker Compose\n    run_command(\n        [\n            \"docker\",\n            \"compose\",\n            \"-f\",\n            \"docker-compose.test.yaml\",\n            \"up\",\n            \"-d\",\n            \"postgres-test\",\n        ]\n    )\n\n    if not wait_for_postgres():\n        run_command([\"docker\", \"compose\", \"-f\", \"docker-compose.test.yaml\", \"down\"])\n        sys.exit(1)\n\n    # Run Prisma migrations\n    run_command([\"prisma\", \"migrate\", \"dev\"])\n\n    # Run the tests\n    result = subprocess.run([\"pytest\"] + sys.argv[1:], check=False)\n\n    run_command([\"docker\", \"compose\", \"-f\", \"docker-compose.test.yaml\", \"down\"])\n\n    sys.exit(result.returncode)",
            "children": [
                {
                    "type": "identifier",
                    "label": "test",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "()",
                    "children": []
                },
                {
                    "type": "comment",
                    "label": "# Start PostgreSQL with Docker Compose",
                    "children": []
                },
                {
                    "type": "block",
                    "label": "run_command(\n        [\n            \"docker\",\n            \"compose\",\n            \"-f\",\n            \"docker-compose.test.yaml\",\n            \"up\",\n            \"-d\",\n            \"postgres-test\",\n        ]\n    )\n\n    if not wait_for_postgres():\n        run_command([\"docker\", \"compose\", \"-f\", \"docker-compose.test.yaml\", \"down\"])\n        sys.exit(1)\n\n    # Run Prisma migrations\n    run_command([\"prisma\", \"migrate\", \"dev\"])\n\n    # Run the tests\n    result = subprocess.run([\"pytest\"] + sys.argv[1:], check=False)\n\n    run_command([\"docker\", \"compose\", \"-f\", \"docker-compose.test.yaml\", \"down\"])\n\n    sys.exit(result.returncode)",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "run_command(\n        [\n            \"docker\",\n            \"compose\",\n            \"-f\",\n            \"docker-compose.test.yaml\",\n            \"up\",\n            \"-d\",\n            \"postgres-test\",\n        ]\n    )",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "run_command(\n        [\n            \"docker\",\n            \"compose\",\n            \"-f\",\n            \"docker-compose.test.yaml\",\n            \"up\",\n            \"-d\",\n            \"postgres-test\",\n        ]\n    )",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "run_command",
                                            "children": []
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(\n        [\n            \"docker\",\n            \"compose\",\n            \"-f\",\n            \"docker-compose.test.yaml\",\n            \"up\",\n            \"-d\",\n            \"postgres-test\",\n        ]\n    )",
                                            "children": [
                                                {
                                                    "type": "list",
                                                    "label": "[\n            \"docker\",\n            \"compose\",\n            \"-f\",\n            \"docker-compose.test.yaml\",\n            \"up\",\n            \"-d\",\n            \"postgres-test\",\n        ]",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "\"docker\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "docker",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "string",
                                                            "label": "\"compose\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "compose",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "string",
                                                            "label": "\"-f\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "-f",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "string",
                                                            "label": "\"docker-compose.test.yaml\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "docker-compose.test.yaml",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "string",
                                                            "label": "\"up\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "up",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "string",
                                                            "label": "\"-d\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "-d",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "string",
                                                            "label": "\"postgres-test\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "postgres-test",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "if_statement",
                            "label": "if not wait_for_postgres():\n        run_command([\"docker\", \"compose\", \"-f\", \"docker-compose.test.yaml\", \"down\"])\n        sys.exit(1)",
                            "children": [
                                {
                                    "type": "not_operator",
                                    "label": "not wait_for_postgres()",
                                    "children": [
                                        {
                                            "type": "call",
                                            "label": "wait_for_postgres()",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "wait_for_postgres",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "()",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "run_command([\"docker\", \"compose\", \"-f\", \"docker-compose.test.yaml\", \"down\"])\n        sys.exit(1)",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "run_command([\"docker\", \"compose\", \"-f\", \"docker-compose.test.yaml\", \"down\"])",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "run_command([\"docker\", \"compose\", \"-f\", \"docker-compose.test.yaml\", \"down\"])",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "run_command",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "([\"docker\", \"compose\", \"-f\", \"docker-compose.test.yaml\", \"down\"])",
                                                            "children": [
                                                                {
                                                                    "type": "list",
                                                                    "label": "[\"docker\", \"compose\", \"-f\", \"docker-compose.test.yaml\", \"down\"]",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "label": "\"docker\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "docker",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "label": "\"compose\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "compose",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "label": "\"-f\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "-f",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "label": "\"docker-compose.test.yaml\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "docker-compose.test.yaml",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "label": "\"down\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "down",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "sys.exit(1)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "sys.exit(1)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "sys.exit",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "sys",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "exit",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(1)",
                                                            "children": [
                                                                {
                                                                    "type": "integer",
                                                                    "label": "1",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "label": "# Run Prisma migrations",
                            "children": []
                        },
                        {
                            "type": "expression_statement",
                            "label": "run_command([\"prisma\", \"migrate\", \"dev\"])",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "run_command([\"prisma\", \"migrate\", \"dev\"])",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "run_command",
                                            "children": []
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "([\"prisma\", \"migrate\", \"dev\"])",
                                            "children": [
                                                {
                                                    "type": "list",
                                                    "label": "[\"prisma\", \"migrate\", \"dev\"]",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "\"prisma\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "prisma",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "string",
                                                            "label": "\"migrate\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "migrate",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "string",
                                                            "label": "\"dev\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "dev",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "label": "# Run the tests",
                            "children": []
                        },
                        {
                            "type": "expression_statement",
                            "label": "result = subprocess.run([\"pytest\"] + sys.argv[1:], check=False)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "result = subprocess.run([\"pytest\"] + sys.argv[1:], check=False)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "result",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "subprocess.run([\"pytest\"] + sys.argv[1:], check=False)",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "subprocess.run",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "subprocess",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "run",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "([\"pytest\"] + sys.argv[1:], check=False)",
                                                    "children": [
                                                        {
                                                            "type": "binary_operator",
                                                            "label": "[\"pytest\"] + sys.argv[1:]",
                                                            "children": [
                                                                {
                                                                    "type": "list",
                                                                    "label": "[\"pytest\"]",
                                                                    "children": [
                                                                        {
                                                                            "type": "string",
                                                                            "label": "\"pytest\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "pytest",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "subscript",
                                                                    "label": "sys.argv[1:]",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "sys.argv",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "sys",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "argv",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "slice",
                                                                            "label": "1:",
                                                                            "children": [
                                                                                {
                                                                                    "type": "integer",
                                                                                    "label": "1",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "check=False",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "check",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "false",
                                                                    "label": "False",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "run_command([\"docker\", \"compose\", \"-f\", \"docker-compose.test.yaml\", \"down\"])",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "run_command([\"docker\", \"compose\", \"-f\", \"docker-compose.test.yaml\", \"down\"])",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "run_command",
                                            "children": []
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "([\"docker\", \"compose\", \"-f\", \"docker-compose.test.yaml\", \"down\"])",
                                            "children": [
                                                {
                                                    "type": "list",
                                                    "label": "[\"docker\", \"compose\", \"-f\", \"docker-compose.test.yaml\", \"down\"]",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "\"docker\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "docker",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "string",
                                                            "label": "\"compose\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "compose",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "string",
                                                            "label": "\"-f\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "-f",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "string",
                                                            "label": "\"docker-compose.test.yaml\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "docker-compose.test.yaml",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "string",
                                                            "label": "\"down\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "down",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "sys.exit(result.returncode)",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "sys.exit(result.returncode)",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "sys.exit",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "sys",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "exit",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(result.returncode)",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "result.returncode",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "result",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "returncode",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}